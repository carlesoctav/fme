module @jit__step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  func.func public @main(%arg0: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg1: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg2: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg3: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg4: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg5: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg6: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg7: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg8: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg9: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg10: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg11: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg12: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg13: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg14: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg15: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg16: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg17: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg18: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg19: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg20: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg21: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg22: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg23: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg24: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg25: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg26: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg27: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg28: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg29: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg30: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg31: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg32: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg33: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg34: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg35: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg36: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg37: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg38: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg39: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg40: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg41: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg42: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg43: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg44: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg45: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg46: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg47: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg48: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg49: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg50: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg51: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg52: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg53: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg54: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg55: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg56: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg57: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg58: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg59: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg60: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg61: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg62: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg63: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg64: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg65: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg66: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg67: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg68: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg69: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg70: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg71: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg72: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg73: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg74: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg75: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg76: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg77: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg78: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg79: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg80: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg81: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg82: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg83: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg84: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg85: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg86: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg87: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg88: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg89: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg90: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg91: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg92: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg93: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg94: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg95: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg96: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg97: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg98: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg99: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg100: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg101: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg102: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg103: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg104: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg105: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg106: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg107: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg108: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg109: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg110: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg111: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg112: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg113: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg114: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg115: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg116: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg117: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg118: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg119: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg120: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg121: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg122: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg123: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg124: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg125: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg126: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg127: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg128: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg129: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg130: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg131: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg132: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg133: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg134: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg135: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg136: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg137: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg138: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg139: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg140: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg141: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg142: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg143: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg144: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg145: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg146: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg147: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg148: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg149: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg150: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg151: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg152: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg153: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg154: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg155: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg156: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg157: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg158: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg159: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg160: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg161: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg162: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg163: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg164: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg165: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg166: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg167: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg168: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg169: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg170: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg171: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg172: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg173: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg174: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg175: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg176: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg177: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg178: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg179: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg180: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg181: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg182: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg183: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg184: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg185: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg186: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg187: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg188: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg189: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg190: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg191: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg192: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg193: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg194: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg195: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg196: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg197: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg198: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg199: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg200: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg201: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg202: tensor<i32>, %arg203: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg204: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg205: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg206: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg207: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg208: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg209: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg210: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg211: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg212: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg213: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg214: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg215: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg216: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg217: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg218: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg219: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg220: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg221: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg222: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg223: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg224: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg225: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg226: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg227: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg228: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg229: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg230: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg231: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg232: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg233: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg234: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg235: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg236: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg237: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg238: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg239: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg240: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg241: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg242: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg243: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg244: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg245: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg246: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg247: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg248: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg249: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg250: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg251: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg252: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg253: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg254: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg255: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg256: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg257: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg258: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg259: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg260: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg261: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg262: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg263: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg264: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg265: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg266: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg267: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg268: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg269: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg270: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg271: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg272: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg273: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg274: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg275: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg276: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg277: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg278: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg279: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg280: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg281: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg282: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg283: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg284: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg285: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg286: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg287: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg288: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg289: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg290: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg291: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg292: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg293: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg294: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg295: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg296: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg297: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg298: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg299: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg300: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg301: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg302: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg303: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg304: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg305: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg306: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg307: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg308: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg309: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg310: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg311: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg312: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg313: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg314: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg315: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg316: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg317: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg318: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg319: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg320: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg321: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg322: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg323: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg324: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg325: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg326: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg327: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg328: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg329: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg330: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg331: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg332: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg333: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg334: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg335: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg336: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg337: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg338: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg339: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg340: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg341: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg342: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg343: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg344: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg345: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg346: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg347: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg348: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg349: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg350: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg351: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg352: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg353: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg354: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg355: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg356: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg357: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg358: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg359: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg360: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg361: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg362: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg363: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg364: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg365: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg366: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg367: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg368: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg369: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg370: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg371: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg372: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg373: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg374: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg375: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg376: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg377: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg378: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg379: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg380: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg381: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg382: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg383: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg384: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg385: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg386: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg387: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg388: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg389: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg390: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg391: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg392: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg393: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg394: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg395: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg396: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg397: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg398: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg399: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg400: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg401: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg402: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg403: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg404: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg405: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg406: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg407: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg408: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg409: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg410: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg411: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg412: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg413: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg414: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg415: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg416: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg417: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg418: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg419: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg420: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg421: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg422: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg423: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg424: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg425: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg426: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg427: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg428: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg429: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg430: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg431: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg432: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg433: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg434: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg435: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg436: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg437: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg438: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg439: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg440: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg441: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg442: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg443: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg444: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg445: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg446: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg447: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg448: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg449: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg450: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg451: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg452: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg453: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg454: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg455: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg456: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg457: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg458: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg459: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg460: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg461: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg462: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg463: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg464: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg465: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg466: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg467: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg468: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg469: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg470: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg471: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg472: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg473: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg474: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg475: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg476: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg477: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg478: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg479: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg480: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg481: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg482: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg483: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg484: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg485: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg486: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg487: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg488: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg489: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg490: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg491: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg492: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg493: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg494: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg495: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg496: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg497: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg498: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg499: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg500: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg501: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg502: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg503: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg504: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg505: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg506: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg507: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg508: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg509: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg510: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg511: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg512: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg513: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg514: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg515: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg516: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg517: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg518: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg519: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg520: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg521: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg522: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg523: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg524: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg525: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg526: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg527: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg528: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg529: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg530: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg531: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg532: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg533: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg534: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg535: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg536: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg537: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg538: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg539: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg540: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg541: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg542: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg543: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg544: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg545: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg546: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg547: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg548: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg549: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg550: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg551: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg552: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg553: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg554: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg555: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg556: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg557: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg558: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg559: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg560: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg561: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg562: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg563: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg564: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg565: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg566: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg567: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg568: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg569: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg570: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg571: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg572: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg573: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg574: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg575: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg576: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg577: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg578: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg579: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg580: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg581: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg582: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg583: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg584: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg585: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg586: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg587: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg588: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg589: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg590: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg591: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg592: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg593: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg594: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg595: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg596: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg597: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg598: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg599: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg600: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg601: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg602: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg603: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg604: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg605: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg606: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg607: tensor<i32>, %arg608: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg609: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg610: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg612: tensor<2xui32>, %arg613: tensor<i32>) -> (tensor<i32> {jax.result_info = "result[0]"}, tensor<30522x768xf32> {jax.result_info = "result[1][0].bert.embeddings.word_embeddings.weight"}, tensor<512x768xf32> {jax.result_info = "result[1][0].bert.embeddings.position_embeddings.weight"}, tensor<2x768xf32> {jax.result_info = "result[1][0].bert.embeddings.token_type_embeddings.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.bias"}, tensor<30522xf32> {jax.result_info = "result[1][0].cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][0].count"}, tensor<30522x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.word_embeddings.weight"}, tensor<512x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.position_embeddings.weight"}, tensor<2x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.token_type_embeddings.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.bias"}, tensor<30522xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.bias"}, tensor<30522x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.word_embeddings.weight"}, tensor<512x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.position_embeddings.weight"}, tensor<2x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.token_type_embeddings.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.bias"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.weight"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.bias"}, tensor<30522xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[1][2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[1][2]['total_token']"}) {
    %0 = stablehlo.iota dim = 0 : tensor<512xi32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %3 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %4 = stablehlo.compare  LT, %arg608, %3,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %5 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %6 = stablehlo.add %arg608, %5 : tensor<64x512xi32>
    %7 = stablehlo.select %4, %6, %arg608 : tensor<64x512xi1>, tensor<64x512xi32>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %9 = "stablehlo.gather"(%arg0, %8) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %10 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %11 = stablehlo.compare  LT, %2, %10,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %12 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %13 = stablehlo.add %2, %12 : tensor<64x512xi32>
    %14 = stablehlo.select %11, %13, %2 : tensor<64x512xi1>, tensor<64x512xi32>
    %15 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %16 = "stablehlo.gather"(%arg1, %15) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %17 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %18 = stablehlo.compare  LT, %arg610, %17,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %20 = stablehlo.add %arg610, %19 : tensor<64x512xi32>
    %21 = stablehlo.select %18, %20, %arg610 : tensor<64x512xi1>, tensor<64x512xi32>
    %22 = stablehlo.broadcast_in_dim %21, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %23 = "stablehlo.gather"(%arg2, %22) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %24 = stablehlo.add %9, %23 : tensor<64x512x768xf32>
    %25 = stablehlo.add %24, %16 : tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %26 = stablehlo.reduce(%25 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %27 = stablehlo.broadcast_in_dim %26, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_3 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %28 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %29 = stablehlo.divide %27, %28 : tensor<64x512x1xf32>
    %c_4 = stablehlo.constant dense<0> : tensor<i32>
    %30:4 = call @_var(%25, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %31 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %32 = stablehlo.maximum %30#0, %31 : tensor<64x512x1xf32>
    %33 = stablehlo.compare  EQ, %30#0, %32,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %cst_6 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %35 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %36 = stablehlo.select %33, %34, %35 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %37 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %38 = stablehlo.compare  EQ, %37, %32,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %cst_7 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %39 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %40 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %41 = stablehlo.select %38, %39, %40 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %42 = stablehlo.divide %36, %41 : tensor<64x512x1xf32>
    %cst_8 = stablehlo.constant dense<9.99999996E-13> : tensor<f32>
    %43 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %44 = stablehlo.add %32, %43 : tensor<64x512x1xf32>
    %45 = stablehlo.rsqrt %44 : tensor<64x512x1xf32>
    %46 = stablehlo.divide %45, %44 : tensor<64x512x1xf32>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<f32>
    %47 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %48 = stablehlo.multiply %47, %46 : tensor<64x512x1xf32>
    %49 = stablehlo.broadcast_in_dim %29, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %50 = stablehlo.subtract %25, %49 : tensor<64x512x768xf32>
    %51 = stablehlo.broadcast_in_dim %45, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %52 = stablehlo.multiply %50, %51 : tensor<64x512x768xf32>
    %53 = stablehlo.broadcast_in_dim %arg3, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %54 = stablehlo.broadcast_in_dim %53, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %55 = stablehlo.multiply %54, %52 : tensor<64x512x768xf32>
    %56 = stablehlo.broadcast_in_dim %arg4, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %57 = stablehlo.broadcast_in_dim %56, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %58 = stablehlo.add %55, %57 : tensor<64x512x768xf32>
    %cst_10 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %cst_11 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %59 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %c_12 = stablehlo.constant dense<1> : tensor<i32>
    %60 = stablehlo.add %arg613, %c_12 : tensor<i32>
    %61 = stablehlo.convert %60 : (tensor<i32>) -> tensor<ui32>
    %62 = call @_threefry_fold_in(%arg612, %61) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %63 = stablehlo.convert %59 : tensor<f32>
    %64 = call @_bernoulli(%62, %63) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %65 = stablehlo.convert %59 : tensor<f32>
    %66 = stablehlo.broadcast_in_dim %65, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %67 = stablehlo.divide %58, %66 : tensor<64x512x768xf32>
    %68 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %69 = stablehlo.select %64, %67, %68 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %c_13 = stablehlo.constant dense<true> : tensor<i1>
    %70 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<i1>) -> tensor<512xi1>
    %71 = stablehlo.broadcast_in_dim %70, dims = [1] : (tensor<512xi1>) -> tensor<512x512xi1>
    %72 = stablehlo.broadcast_in_dim %71, dims = [1, 2] : (tensor<512x512xi1>) -> tensor<64x512x512xi1>
    %73 = stablehlo.broadcast_in_dim %arg609, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %74 = stablehlo.convert %72 : (tensor<64x512x512xi1>) -> tensor<64x512x512xi32>
    %75 = stablehlo.broadcast_in_dim %73, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %76 = stablehlo.and %74, %75 : tensor<64x512x512xi32>
    %c_14 = stablehlo.constant dense<0> : tensor<i32>
    %77 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<i32>) -> tensor<64x512x512xi32>
    %78 = stablehlo.compare  NE, %76, %77,  SIGNED : (tensor<64x512x512xi32>, tensor<64x512x512xi32>) -> tensor<64x512x512xi1>
    %79 = stablehlo.convert %78 : tensor<64x512x512xi1>
    %80 = stablehlo.transpose %arg5, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %81 = stablehlo.dot_general %69, %80, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %82 = stablehlo.broadcast_in_dim %arg6, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %83 = stablehlo.broadcast_in_dim %82, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %84 = stablehlo.add %81, %83 : tensor<64x512x768xf32>
    %85 = stablehlo.transpose %arg9, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %86 = stablehlo.dot_general %69, %85, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %87 = stablehlo.broadcast_in_dim %arg10, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %88 = stablehlo.broadcast_in_dim %87, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %89 = stablehlo.add %86, %88 : tensor<64x512x768xf32>
    %90 = stablehlo.transpose %arg7, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %91 = stablehlo.dot_general %69, %90, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %92 = stablehlo.broadcast_in_dim %arg8, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %93 = stablehlo.broadcast_in_dim %92, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %94 = stablehlo.add %91, %93 : tensor<64x512x768xf32>
    %95 = stablehlo.reshape %84 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %96 = stablehlo.reshape %89 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %97 = stablehlo.reshape %94 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %98 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %99 = stablehlo.add %60, %c_12 : tensor<i32>
    %100 = stablehlo.convert %99 : (tensor<i32>) -> tensor<ui32>
    %101 = call @_threefry_fold_in(%arg612, %100) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_15 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %102 = stablehlo.sqrt %cst_15 : tensor<f32>
    %103 = stablehlo.convert %102 : tensor<f32>
    %104 = stablehlo.broadcast_in_dim %103, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %105 = stablehlo.divide %95, %104 : tensor<64x512x12x64xf32>
    %106 = stablehlo.dot_general %96, %105, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %107 = stablehlo.transpose %106, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %cst_16 = stablehlo.constant dense<-3.40282347E+38> : tensor<f32>
    %108:2 = call @_where_61(%98, %107, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_17 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %109 = stablehlo.reduce(%108#0 init: %cst_17) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %cst_18 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %110 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %111 = stablehlo.maximum %110, %109 : tensor<64x512x12xf32>
    %112 = stablehlo.broadcast_in_dim %111, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %113 = stablehlo.broadcast_in_dim %112, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %114 = stablehlo.subtract %108#0, %113 : tensor<64x512x12x512xf32>
    %115 = stablehlo.exponential %114 : tensor<64x512x12x512xf32>
    %cst_19 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %116 = stablehlo.reduce(%115 init: %cst_19) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %117 = stablehlo.broadcast_in_dim %116, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %118 = stablehlo.broadcast_in_dim %117, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %119 = stablehlo.divide %115, %118 : tensor<64x512x12x512xf32>
    %120 = stablehlo.multiply %117, %117 : tensor<64x512x12x1xf32>
    %cst_20 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %121 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %122 = stablehlo.divide %121, %120 : tensor<64x512x12x1xf32>
    %cst_21 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %123 = call @_bernoulli_74(%101, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %124 = stablehlo.broadcast_in_dim %123, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %125 = stablehlo.convert %124 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %126 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %127 = stablehlo.divide %125, %126 : tensor<64x512x12x512xf32>
    %128 = stablehlo.multiply %119, %127 : tensor<64x512x12x512xf32>
    %129 = stablehlo.dot_general %97, %128, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %130 = stablehlo.transpose %129, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %131 = stablehlo.reshape %130 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %132 = stablehlo.transpose %arg11, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %133 = stablehlo.dot_general %131, %132, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %134 = stablehlo.broadcast_in_dim %arg12, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %135 = stablehlo.broadcast_in_dim %134, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %136 = stablehlo.add %133, %135 : tensor<64x512x768xf32>
    %137 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %138 = stablehlo.add %99, %c_12 : tensor<i32>
    %139 = stablehlo.convert %138 : (tensor<i32>) -> tensor<ui32>
    %140 = call @_threefry_fold_in(%arg612, %139) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %141 = stablehlo.convert %137 : tensor<f32>
    %142 = call @_bernoulli(%140, %141) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %143 = stablehlo.convert %137 : tensor<f32>
    %144 = stablehlo.broadcast_in_dim %143, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %145 = stablehlo.divide %136, %144 : tensor<64x512x768xf32>
    %146 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %147 = stablehlo.select %142, %145, %146 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %148 = stablehlo.add %147, %69 : tensor<64x512x768xf32>
    %cst_22 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %149 = stablehlo.reduce(%148 init: %cst_22) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %150 = stablehlo.broadcast_in_dim %149, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %151 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %152 = stablehlo.divide %150, %151 : tensor<64x512x1xf32>
    %153:4 = call @_var(%148, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %154 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %155 = stablehlo.maximum %153#0, %154 : tensor<64x512x1xf32>
    %156 = stablehlo.compare  EQ, %153#0, %155,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %157 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %158 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %159 = stablehlo.select %156, %157, %158 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %160 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %161 = stablehlo.compare  EQ, %160, %155,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %162 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %163 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %164 = stablehlo.select %161, %162, %163 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %165 = stablehlo.divide %159, %164 : tensor<64x512x1xf32>
    %166 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %167 = stablehlo.add %155, %166 : tensor<64x512x1xf32>
    %168 = stablehlo.rsqrt %167 : tensor<64x512x1xf32>
    %169 = stablehlo.divide %168, %167 : tensor<64x512x1xf32>
    %170 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %171 = stablehlo.multiply %170, %169 : tensor<64x512x1xf32>
    %172 = stablehlo.broadcast_in_dim %152, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %173 = stablehlo.subtract %148, %172 : tensor<64x512x768xf32>
    %174 = stablehlo.broadcast_in_dim %168, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %175 = stablehlo.multiply %173, %174 : tensor<64x512x768xf32>
    %176 = stablehlo.broadcast_in_dim %arg13, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %177 = stablehlo.broadcast_in_dim %176, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %178 = stablehlo.multiply %177, %175 : tensor<64x512x768xf32>
    %179 = stablehlo.broadcast_in_dim %arg14, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %180 = stablehlo.broadcast_in_dim %179, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %181 = stablehlo.add %178, %180 : tensor<64x512x768xf32>
    %182 = stablehlo.transpose %arg15, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %183 = stablehlo.dot_general %181, %182, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %184 = stablehlo.broadcast_in_dim %arg16, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %185 = stablehlo.broadcast_in_dim %184, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %186 = stablehlo.add %183, %185 : tensor<64x512x3072xf32>
    %187 = stablehlo.multiply %186, %186 : tensor<64x512x3072xf32>
    %188 = stablehlo.multiply %187, %186 : tensor<64x512x3072xf32>
    %189 = stablehlo.multiply %186, %186 : tensor<64x512x3072xf32>
    %cst_23 = stablehlo.constant dense<3.000000e+00> : tensor<f32>
    %190 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %191 = stablehlo.multiply %190, %189 : tensor<64x512x3072xf32>
    %cst_24 = stablehlo.constant dense<4.471500e-02> : tensor<f32>
    %192 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %193 = stablehlo.multiply %192, %188 : tensor<64x512x3072xf32>
    %194 = stablehlo.add %186, %193 : tensor<64x512x3072xf32>
    %cst_25 = stablehlo.constant dense<0.797884583> : tensor<f32>
    %195 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %196 = stablehlo.multiply %195, %194 : tensor<64x512x3072xf32>
    %197 = stablehlo.tanh %196 : tensor<64x512x3072xf32>
    %198 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %199 = stablehlo.broadcast_in_dim %198, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %200 = stablehlo.subtract %199, %197 : tensor<64x512x3072xf32>
    %201 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %202 = stablehlo.add %201, %197 : tensor<64x512x3072xf32>
    %cst_26 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %203 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %204 = stablehlo.multiply %203, %202 : tensor<64x512x3072xf32>
    %205 = stablehlo.multiply %186, %204 : tensor<64x512x3072xf32>
    %206 = stablehlo.transpose %arg17, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %207 = stablehlo.dot_general %205, %206, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %208 = stablehlo.broadcast_in_dim %arg18, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %209 = stablehlo.broadcast_in_dim %208, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %210 = stablehlo.add %207, %209 : tensor<64x512x768xf32>
    %211 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %212 = stablehlo.add %138, %c_12 : tensor<i32>
    %213 = stablehlo.convert %212 : (tensor<i32>) -> tensor<ui32>
    %214 = call @_threefry_fold_in(%arg612, %213) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %215 = stablehlo.convert %211 : tensor<f32>
    %216 = call @_bernoulli(%214, %215) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %217 = stablehlo.convert %211 : tensor<f32>
    %218 = stablehlo.broadcast_in_dim %217, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %219 = stablehlo.divide %210, %218 : tensor<64x512x768xf32>
    %220 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %221 = stablehlo.select %216, %219, %220 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %222 = stablehlo.add %221, %181 : tensor<64x512x768xf32>
    %cst_27 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %223 = stablehlo.reduce(%222 init: %cst_27) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %224 = stablehlo.broadcast_in_dim %223, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %225 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %226 = stablehlo.divide %224, %225 : tensor<64x512x1xf32>
    %227:4 = call @_var(%222, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %228 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %229 = stablehlo.maximum %227#0, %228 : tensor<64x512x1xf32>
    %230 = stablehlo.compare  EQ, %227#0, %229,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %231 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %232 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %233 = stablehlo.select %230, %231, %232 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %234 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %235 = stablehlo.compare  EQ, %234, %229,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %236 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %237 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %238 = stablehlo.select %235, %236, %237 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %239 = stablehlo.divide %233, %238 : tensor<64x512x1xf32>
    %240 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %241 = stablehlo.add %229, %240 : tensor<64x512x1xf32>
    %242 = stablehlo.rsqrt %241 : tensor<64x512x1xf32>
    %243 = stablehlo.divide %242, %241 : tensor<64x512x1xf32>
    %244 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %245 = stablehlo.multiply %244, %243 : tensor<64x512x1xf32>
    %246 = stablehlo.broadcast_in_dim %226, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %247 = stablehlo.subtract %222, %246 : tensor<64x512x768xf32>
    %248 = stablehlo.broadcast_in_dim %242, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %249 = stablehlo.multiply %247, %248 : tensor<64x512x768xf32>
    %250 = stablehlo.broadcast_in_dim %arg19, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %251 = stablehlo.broadcast_in_dim %250, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %252 = stablehlo.multiply %251, %249 : tensor<64x512x768xf32>
    %253 = stablehlo.broadcast_in_dim %arg20, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %254 = stablehlo.broadcast_in_dim %253, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %255 = stablehlo.add %252, %254 : tensor<64x512x768xf32>
    %256 = stablehlo.transpose %arg21, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %257 = stablehlo.dot_general %255, %256, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %258 = stablehlo.broadcast_in_dim %arg22, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %259 = stablehlo.broadcast_in_dim %258, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %260 = stablehlo.add %257, %259 : tensor<64x512x768xf32>
    %261 = stablehlo.transpose %arg25, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %262 = stablehlo.dot_general %255, %261, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %263 = stablehlo.broadcast_in_dim %arg26, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %264 = stablehlo.broadcast_in_dim %263, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %265 = stablehlo.add %262, %264 : tensor<64x512x768xf32>
    %266 = stablehlo.transpose %arg23, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %267 = stablehlo.dot_general %255, %266, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %268 = stablehlo.broadcast_in_dim %arg24, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %269 = stablehlo.broadcast_in_dim %268, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %270 = stablehlo.add %267, %269 : tensor<64x512x768xf32>
    %271 = stablehlo.reshape %260 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %272 = stablehlo.reshape %265 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %273 = stablehlo.reshape %270 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %274 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %275 = stablehlo.add %212, %c_12 : tensor<i32>
    %276 = stablehlo.convert %275 : (tensor<i32>) -> tensor<ui32>
    %277 = call @_threefry_fold_in(%arg612, %276) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %278 = stablehlo.sqrt %cst_15 : tensor<f32>
    %279 = stablehlo.convert %278 : tensor<f32>
    %280 = stablehlo.broadcast_in_dim %279, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %281 = stablehlo.divide %271, %280 : tensor<64x512x12x64xf32>
    %282 = stablehlo.dot_general %272, %281, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %283 = stablehlo.transpose %282, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %284:2 = call @_where_61(%274, %283, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_28 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %285 = stablehlo.reduce(%284#0 init: %cst_28) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %286 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %287 = stablehlo.maximum %286, %285 : tensor<64x512x12xf32>
    %288 = stablehlo.broadcast_in_dim %287, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %289 = stablehlo.broadcast_in_dim %288, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %290 = stablehlo.subtract %284#0, %289 : tensor<64x512x12x512xf32>
    %291 = stablehlo.exponential %290 : tensor<64x512x12x512xf32>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %292 = stablehlo.reduce(%291 init: %cst_29) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %293 = stablehlo.broadcast_in_dim %292, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %294 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %295 = stablehlo.divide %291, %294 : tensor<64x512x12x512xf32>
    %296 = stablehlo.multiply %293, %293 : tensor<64x512x12x1xf32>
    %cst_30 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %297 = stablehlo.broadcast_in_dim %cst_30, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %298 = stablehlo.divide %297, %296 : tensor<64x512x12x1xf32>
    %299 = call @_bernoulli_74(%277, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %300 = stablehlo.broadcast_in_dim %299, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %301 = stablehlo.convert %300 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %302 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %303 = stablehlo.divide %301, %302 : tensor<64x512x12x512xf32>
    %304 = stablehlo.multiply %295, %303 : tensor<64x512x12x512xf32>
    %305 = stablehlo.dot_general %273, %304, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %306 = stablehlo.transpose %305, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %307 = stablehlo.reshape %306 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %308 = stablehlo.transpose %arg27, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %309 = stablehlo.dot_general %307, %308, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %310 = stablehlo.broadcast_in_dim %arg28, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %311 = stablehlo.broadcast_in_dim %310, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %312 = stablehlo.add %309, %311 : tensor<64x512x768xf32>
    %313 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %314 = stablehlo.add %275, %c_12 : tensor<i32>
    %315 = stablehlo.convert %314 : (tensor<i32>) -> tensor<ui32>
    %316 = call @_threefry_fold_in(%arg612, %315) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %317 = stablehlo.convert %313 : tensor<f32>
    %318 = call @_bernoulli(%316, %317) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %319 = stablehlo.convert %313 : tensor<f32>
    %320 = stablehlo.broadcast_in_dim %319, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %321 = stablehlo.divide %312, %320 : tensor<64x512x768xf32>
    %322 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %323 = stablehlo.select %318, %321, %322 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %324 = stablehlo.add %323, %255 : tensor<64x512x768xf32>
    %cst_31 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %325 = stablehlo.reduce(%324 init: %cst_31) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %326 = stablehlo.broadcast_in_dim %325, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %327 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %328 = stablehlo.divide %326, %327 : tensor<64x512x1xf32>
    %329:4 = call @_var(%324, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %330 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %331 = stablehlo.maximum %329#0, %330 : tensor<64x512x1xf32>
    %332 = stablehlo.compare  EQ, %329#0, %331,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %333 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %334 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %335 = stablehlo.select %332, %333, %334 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %336 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %337 = stablehlo.compare  EQ, %336, %331,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %338 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %339 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %340 = stablehlo.select %337, %338, %339 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %341 = stablehlo.divide %335, %340 : tensor<64x512x1xf32>
    %342 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %343 = stablehlo.add %331, %342 : tensor<64x512x1xf32>
    %344 = stablehlo.rsqrt %343 : tensor<64x512x1xf32>
    %345 = stablehlo.divide %344, %343 : tensor<64x512x1xf32>
    %346 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %347 = stablehlo.multiply %346, %345 : tensor<64x512x1xf32>
    %348 = stablehlo.broadcast_in_dim %328, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %349 = stablehlo.subtract %324, %348 : tensor<64x512x768xf32>
    %350 = stablehlo.broadcast_in_dim %344, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %351 = stablehlo.multiply %349, %350 : tensor<64x512x768xf32>
    %352 = stablehlo.broadcast_in_dim %arg29, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %353 = stablehlo.broadcast_in_dim %352, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %354 = stablehlo.multiply %353, %351 : tensor<64x512x768xf32>
    %355 = stablehlo.broadcast_in_dim %arg30, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %356 = stablehlo.broadcast_in_dim %355, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %357 = stablehlo.add %354, %356 : tensor<64x512x768xf32>
    %358 = stablehlo.transpose %arg31, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %359 = stablehlo.dot_general %357, %358, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %360 = stablehlo.broadcast_in_dim %arg32, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %361 = stablehlo.broadcast_in_dim %360, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %362 = stablehlo.add %359, %361 : tensor<64x512x3072xf32>
    %363 = stablehlo.multiply %362, %362 : tensor<64x512x3072xf32>
    %364 = stablehlo.multiply %363, %362 : tensor<64x512x3072xf32>
    %365 = stablehlo.multiply %362, %362 : tensor<64x512x3072xf32>
    %366 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %367 = stablehlo.multiply %366, %365 : tensor<64x512x3072xf32>
    %368 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %369 = stablehlo.multiply %368, %364 : tensor<64x512x3072xf32>
    %370 = stablehlo.add %362, %369 : tensor<64x512x3072xf32>
    %371 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %372 = stablehlo.multiply %371, %370 : tensor<64x512x3072xf32>
    %373 = stablehlo.tanh %372 : tensor<64x512x3072xf32>
    %374 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %375 = stablehlo.broadcast_in_dim %374, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %376 = stablehlo.subtract %375, %373 : tensor<64x512x3072xf32>
    %377 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %378 = stablehlo.add %377, %373 : tensor<64x512x3072xf32>
    %379 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %380 = stablehlo.multiply %379, %378 : tensor<64x512x3072xf32>
    %381 = stablehlo.multiply %362, %380 : tensor<64x512x3072xf32>
    %382 = stablehlo.transpose %arg33, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %383 = stablehlo.dot_general %381, %382, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %384 = stablehlo.broadcast_in_dim %arg34, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %385 = stablehlo.broadcast_in_dim %384, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %386 = stablehlo.add %383, %385 : tensor<64x512x768xf32>
    %387 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %388 = stablehlo.add %314, %c_12 : tensor<i32>
    %389 = stablehlo.convert %388 : (tensor<i32>) -> tensor<ui32>
    %390 = call @_threefry_fold_in(%arg612, %389) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %391 = stablehlo.convert %387 : tensor<f32>
    %392 = call @_bernoulli(%390, %391) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %393 = stablehlo.convert %387 : tensor<f32>
    %394 = stablehlo.broadcast_in_dim %393, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %395 = stablehlo.divide %386, %394 : tensor<64x512x768xf32>
    %396 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %397 = stablehlo.select %392, %395, %396 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %398 = stablehlo.add %397, %357 : tensor<64x512x768xf32>
    %cst_32 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %399 = stablehlo.reduce(%398 init: %cst_32) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %400 = stablehlo.broadcast_in_dim %399, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %401 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %402 = stablehlo.divide %400, %401 : tensor<64x512x1xf32>
    %403:4 = call @_var(%398, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %404 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %405 = stablehlo.maximum %403#0, %404 : tensor<64x512x1xf32>
    %406 = stablehlo.compare  EQ, %403#0, %405,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %407 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %408 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %409 = stablehlo.select %406, %407, %408 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %410 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %411 = stablehlo.compare  EQ, %410, %405,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %412 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %413 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %414 = stablehlo.select %411, %412, %413 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %415 = stablehlo.divide %409, %414 : tensor<64x512x1xf32>
    %416 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %417 = stablehlo.add %405, %416 : tensor<64x512x1xf32>
    %418 = stablehlo.rsqrt %417 : tensor<64x512x1xf32>
    %419 = stablehlo.divide %418, %417 : tensor<64x512x1xf32>
    %420 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %421 = stablehlo.multiply %420, %419 : tensor<64x512x1xf32>
    %422 = stablehlo.broadcast_in_dim %402, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %423 = stablehlo.subtract %398, %422 : tensor<64x512x768xf32>
    %424 = stablehlo.broadcast_in_dim %418, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %425 = stablehlo.multiply %423, %424 : tensor<64x512x768xf32>
    %426 = stablehlo.broadcast_in_dim %arg35, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %427 = stablehlo.broadcast_in_dim %426, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %428 = stablehlo.multiply %427, %425 : tensor<64x512x768xf32>
    %429 = stablehlo.broadcast_in_dim %arg36, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %430 = stablehlo.broadcast_in_dim %429, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %431 = stablehlo.add %428, %430 : tensor<64x512x768xf32>
    %432 = stablehlo.transpose %arg37, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %433 = stablehlo.dot_general %431, %432, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %434 = stablehlo.broadcast_in_dim %arg38, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %435 = stablehlo.broadcast_in_dim %434, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %436 = stablehlo.add %433, %435 : tensor<64x512x768xf32>
    %437 = stablehlo.transpose %arg41, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %438 = stablehlo.dot_general %431, %437, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %439 = stablehlo.broadcast_in_dim %arg42, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %440 = stablehlo.broadcast_in_dim %439, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %441 = stablehlo.add %438, %440 : tensor<64x512x768xf32>
    %442 = stablehlo.transpose %arg39, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %443 = stablehlo.dot_general %431, %442, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %444 = stablehlo.broadcast_in_dim %arg40, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %445 = stablehlo.broadcast_in_dim %444, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %446 = stablehlo.add %443, %445 : tensor<64x512x768xf32>
    %447 = stablehlo.reshape %436 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %448 = stablehlo.reshape %441 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %449 = stablehlo.reshape %446 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %450 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %451 = stablehlo.add %388, %c_12 : tensor<i32>
    %452 = stablehlo.convert %451 : (tensor<i32>) -> tensor<ui32>
    %453 = call @_threefry_fold_in(%arg612, %452) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %454 = stablehlo.sqrt %cst_15 : tensor<f32>
    %455 = stablehlo.convert %454 : tensor<f32>
    %456 = stablehlo.broadcast_in_dim %455, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %457 = stablehlo.divide %447, %456 : tensor<64x512x12x64xf32>
    %458 = stablehlo.dot_general %448, %457, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %459 = stablehlo.transpose %458, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %460:2 = call @_where_61(%450, %459, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_33 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %461 = stablehlo.reduce(%460#0 init: %cst_33) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %462 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %463 = stablehlo.maximum %462, %461 : tensor<64x512x12xf32>
    %464 = stablehlo.broadcast_in_dim %463, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %465 = stablehlo.broadcast_in_dim %464, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %466 = stablehlo.subtract %460#0, %465 : tensor<64x512x12x512xf32>
    %467 = stablehlo.exponential %466 : tensor<64x512x12x512xf32>
    %cst_34 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %468 = stablehlo.reduce(%467 init: %cst_34) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %469 = stablehlo.broadcast_in_dim %468, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %470 = stablehlo.broadcast_in_dim %469, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %471 = stablehlo.divide %467, %470 : tensor<64x512x12x512xf32>
    %472 = stablehlo.multiply %469, %469 : tensor<64x512x12x1xf32>
    %cst_35 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %473 = stablehlo.broadcast_in_dim %cst_35, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %474 = stablehlo.divide %473, %472 : tensor<64x512x12x1xf32>
    %475 = call @_bernoulli_74(%453, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %476 = stablehlo.broadcast_in_dim %475, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %477 = stablehlo.convert %476 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %478 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %479 = stablehlo.divide %477, %478 : tensor<64x512x12x512xf32>
    %480 = stablehlo.multiply %471, %479 : tensor<64x512x12x512xf32>
    %481 = stablehlo.dot_general %449, %480, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %482 = stablehlo.transpose %481, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %483 = stablehlo.reshape %482 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %484 = stablehlo.transpose %arg43, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %485 = stablehlo.dot_general %483, %484, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %486 = stablehlo.broadcast_in_dim %arg44, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %487 = stablehlo.broadcast_in_dim %486, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %488 = stablehlo.add %485, %487 : tensor<64x512x768xf32>
    %489 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %490 = stablehlo.add %451, %c_12 : tensor<i32>
    %491 = stablehlo.convert %490 : (tensor<i32>) -> tensor<ui32>
    %492 = call @_threefry_fold_in(%arg612, %491) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %493 = stablehlo.convert %489 : tensor<f32>
    %494 = call @_bernoulli(%492, %493) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %495 = stablehlo.convert %489 : tensor<f32>
    %496 = stablehlo.broadcast_in_dim %495, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %497 = stablehlo.divide %488, %496 : tensor<64x512x768xf32>
    %498 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %499 = stablehlo.select %494, %497, %498 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %500 = stablehlo.add %499, %431 : tensor<64x512x768xf32>
    %cst_36 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %501 = stablehlo.reduce(%500 init: %cst_36) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %502 = stablehlo.broadcast_in_dim %501, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %503 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %504 = stablehlo.divide %502, %503 : tensor<64x512x1xf32>
    %505:4 = call @_var(%500, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %506 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %507 = stablehlo.maximum %505#0, %506 : tensor<64x512x1xf32>
    %508 = stablehlo.compare  EQ, %505#0, %507,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %509 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %510 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %511 = stablehlo.select %508, %509, %510 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %512 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %513 = stablehlo.compare  EQ, %512, %507,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %514 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %515 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %516 = stablehlo.select %513, %514, %515 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %517 = stablehlo.divide %511, %516 : tensor<64x512x1xf32>
    %518 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %519 = stablehlo.add %507, %518 : tensor<64x512x1xf32>
    %520 = stablehlo.rsqrt %519 : tensor<64x512x1xf32>
    %521 = stablehlo.divide %520, %519 : tensor<64x512x1xf32>
    %522 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %523 = stablehlo.multiply %522, %521 : tensor<64x512x1xf32>
    %524 = stablehlo.broadcast_in_dim %504, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %525 = stablehlo.subtract %500, %524 : tensor<64x512x768xf32>
    %526 = stablehlo.broadcast_in_dim %520, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %527 = stablehlo.multiply %525, %526 : tensor<64x512x768xf32>
    %528 = stablehlo.broadcast_in_dim %arg45, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %529 = stablehlo.broadcast_in_dim %528, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %530 = stablehlo.multiply %529, %527 : tensor<64x512x768xf32>
    %531 = stablehlo.broadcast_in_dim %arg46, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %532 = stablehlo.broadcast_in_dim %531, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %533 = stablehlo.add %530, %532 : tensor<64x512x768xf32>
    %534 = stablehlo.transpose %arg47, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %535 = stablehlo.dot_general %533, %534, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %536 = stablehlo.broadcast_in_dim %arg48, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %537 = stablehlo.broadcast_in_dim %536, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %538 = stablehlo.add %535, %537 : tensor<64x512x3072xf32>
    %539 = stablehlo.multiply %538, %538 : tensor<64x512x3072xf32>
    %540 = stablehlo.multiply %539, %538 : tensor<64x512x3072xf32>
    %541 = stablehlo.multiply %538, %538 : tensor<64x512x3072xf32>
    %542 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %543 = stablehlo.multiply %542, %541 : tensor<64x512x3072xf32>
    %544 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %545 = stablehlo.multiply %544, %540 : tensor<64x512x3072xf32>
    %546 = stablehlo.add %538, %545 : tensor<64x512x3072xf32>
    %547 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %548 = stablehlo.multiply %547, %546 : tensor<64x512x3072xf32>
    %549 = stablehlo.tanh %548 : tensor<64x512x3072xf32>
    %550 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %551 = stablehlo.broadcast_in_dim %550, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %552 = stablehlo.subtract %551, %549 : tensor<64x512x3072xf32>
    %553 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %554 = stablehlo.add %553, %549 : tensor<64x512x3072xf32>
    %555 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %556 = stablehlo.multiply %555, %554 : tensor<64x512x3072xf32>
    %557 = stablehlo.multiply %538, %556 : tensor<64x512x3072xf32>
    %558 = stablehlo.transpose %arg49, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %559 = stablehlo.dot_general %557, %558, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %560 = stablehlo.broadcast_in_dim %arg50, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %561 = stablehlo.broadcast_in_dim %560, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %562 = stablehlo.add %559, %561 : tensor<64x512x768xf32>
    %563 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %564 = stablehlo.add %490, %c_12 : tensor<i32>
    %565 = stablehlo.convert %564 : (tensor<i32>) -> tensor<ui32>
    %566 = call @_threefry_fold_in(%arg612, %565) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %567 = stablehlo.convert %563 : tensor<f32>
    %568 = call @_bernoulli(%566, %567) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %569 = stablehlo.convert %563 : tensor<f32>
    %570 = stablehlo.broadcast_in_dim %569, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %571 = stablehlo.divide %562, %570 : tensor<64x512x768xf32>
    %572 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %573 = stablehlo.select %568, %571, %572 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %574 = stablehlo.add %573, %533 : tensor<64x512x768xf32>
    %cst_37 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %575 = stablehlo.reduce(%574 init: %cst_37) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %576 = stablehlo.broadcast_in_dim %575, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %577 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %578 = stablehlo.divide %576, %577 : tensor<64x512x1xf32>
    %579:4 = call @_var(%574, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %580 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %581 = stablehlo.maximum %579#0, %580 : tensor<64x512x1xf32>
    %582 = stablehlo.compare  EQ, %579#0, %581,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %583 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %584 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %585 = stablehlo.select %582, %583, %584 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %586 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %587 = stablehlo.compare  EQ, %586, %581,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %588 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %589 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %590 = stablehlo.select %587, %588, %589 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %591 = stablehlo.divide %585, %590 : tensor<64x512x1xf32>
    %592 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %593 = stablehlo.add %581, %592 : tensor<64x512x1xf32>
    %594 = stablehlo.rsqrt %593 : tensor<64x512x1xf32>
    %595 = stablehlo.divide %594, %593 : tensor<64x512x1xf32>
    %596 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %597 = stablehlo.multiply %596, %595 : tensor<64x512x1xf32>
    %598 = stablehlo.broadcast_in_dim %578, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %599 = stablehlo.subtract %574, %598 : tensor<64x512x768xf32>
    %600 = stablehlo.broadcast_in_dim %594, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %601 = stablehlo.multiply %599, %600 : tensor<64x512x768xf32>
    %602 = stablehlo.broadcast_in_dim %arg51, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %603 = stablehlo.broadcast_in_dim %602, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %604 = stablehlo.multiply %603, %601 : tensor<64x512x768xf32>
    %605 = stablehlo.broadcast_in_dim %arg52, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %606 = stablehlo.broadcast_in_dim %605, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %607 = stablehlo.add %604, %606 : tensor<64x512x768xf32>
    %608 = stablehlo.transpose %arg53, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %609 = stablehlo.dot_general %607, %608, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %610 = stablehlo.broadcast_in_dim %arg54, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %611 = stablehlo.broadcast_in_dim %610, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %612 = stablehlo.add %609, %611 : tensor<64x512x768xf32>
    %613 = stablehlo.transpose %arg57, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %614 = stablehlo.dot_general %607, %613, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %615 = stablehlo.broadcast_in_dim %arg58, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %616 = stablehlo.broadcast_in_dim %615, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %617 = stablehlo.add %614, %616 : tensor<64x512x768xf32>
    %618 = stablehlo.transpose %arg55, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %619 = stablehlo.dot_general %607, %618, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %620 = stablehlo.broadcast_in_dim %arg56, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %621 = stablehlo.broadcast_in_dim %620, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %622 = stablehlo.add %619, %621 : tensor<64x512x768xf32>
    %623 = stablehlo.reshape %612 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %624 = stablehlo.reshape %617 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %625 = stablehlo.reshape %622 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %626 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %627 = stablehlo.add %564, %c_12 : tensor<i32>
    %628 = stablehlo.convert %627 : (tensor<i32>) -> tensor<ui32>
    %629 = call @_threefry_fold_in(%arg612, %628) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %630 = stablehlo.sqrt %cst_15 : tensor<f32>
    %631 = stablehlo.convert %630 : tensor<f32>
    %632 = stablehlo.broadcast_in_dim %631, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %633 = stablehlo.divide %623, %632 : tensor<64x512x12x64xf32>
    %634 = stablehlo.dot_general %624, %633, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %635 = stablehlo.transpose %634, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %636:2 = call @_where_61(%626, %635, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_38 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %637 = stablehlo.reduce(%636#0 init: %cst_38) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %638 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %639 = stablehlo.maximum %638, %637 : tensor<64x512x12xf32>
    %640 = stablehlo.broadcast_in_dim %639, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %641 = stablehlo.broadcast_in_dim %640, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %642 = stablehlo.subtract %636#0, %641 : tensor<64x512x12x512xf32>
    %643 = stablehlo.exponential %642 : tensor<64x512x12x512xf32>
    %cst_39 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %644 = stablehlo.reduce(%643 init: %cst_39) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %645 = stablehlo.broadcast_in_dim %644, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %646 = stablehlo.broadcast_in_dim %645, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %647 = stablehlo.divide %643, %646 : tensor<64x512x12x512xf32>
    %648 = stablehlo.multiply %645, %645 : tensor<64x512x12x1xf32>
    %cst_40 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %649 = stablehlo.broadcast_in_dim %cst_40, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %650 = stablehlo.divide %649, %648 : tensor<64x512x12x1xf32>
    %651 = call @_bernoulli_74(%629, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %652 = stablehlo.broadcast_in_dim %651, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %653 = stablehlo.convert %652 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %654 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %655 = stablehlo.divide %653, %654 : tensor<64x512x12x512xf32>
    %656 = stablehlo.multiply %647, %655 : tensor<64x512x12x512xf32>
    %657 = stablehlo.dot_general %625, %656, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %658 = stablehlo.transpose %657, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %659 = stablehlo.reshape %658 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %660 = stablehlo.transpose %arg59, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %661 = stablehlo.dot_general %659, %660, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %662 = stablehlo.broadcast_in_dim %arg60, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %663 = stablehlo.broadcast_in_dim %662, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %664 = stablehlo.add %661, %663 : tensor<64x512x768xf32>
    %665 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %666 = stablehlo.add %627, %c_12 : tensor<i32>
    %667 = stablehlo.convert %666 : (tensor<i32>) -> tensor<ui32>
    %668 = call @_threefry_fold_in(%arg612, %667) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %669 = stablehlo.convert %665 : tensor<f32>
    %670 = call @_bernoulli(%668, %669) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %671 = stablehlo.convert %665 : tensor<f32>
    %672 = stablehlo.broadcast_in_dim %671, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %673 = stablehlo.divide %664, %672 : tensor<64x512x768xf32>
    %674 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %675 = stablehlo.select %670, %673, %674 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %676 = stablehlo.add %675, %607 : tensor<64x512x768xf32>
    %cst_41 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %677 = stablehlo.reduce(%676 init: %cst_41) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %678 = stablehlo.broadcast_in_dim %677, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %679 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %680 = stablehlo.divide %678, %679 : tensor<64x512x1xf32>
    %681:4 = call @_var(%676, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %682 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %683 = stablehlo.maximum %681#0, %682 : tensor<64x512x1xf32>
    %684 = stablehlo.compare  EQ, %681#0, %683,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %685 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %686 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %687 = stablehlo.select %684, %685, %686 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %688 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %689 = stablehlo.compare  EQ, %688, %683,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %690 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %691 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %692 = stablehlo.select %689, %690, %691 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %693 = stablehlo.divide %687, %692 : tensor<64x512x1xf32>
    %694 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %695 = stablehlo.add %683, %694 : tensor<64x512x1xf32>
    %696 = stablehlo.rsqrt %695 : tensor<64x512x1xf32>
    %697 = stablehlo.divide %696, %695 : tensor<64x512x1xf32>
    %698 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %699 = stablehlo.multiply %698, %697 : tensor<64x512x1xf32>
    %700 = stablehlo.broadcast_in_dim %680, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %701 = stablehlo.subtract %676, %700 : tensor<64x512x768xf32>
    %702 = stablehlo.broadcast_in_dim %696, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %703 = stablehlo.multiply %701, %702 : tensor<64x512x768xf32>
    %704 = stablehlo.broadcast_in_dim %arg61, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %705 = stablehlo.broadcast_in_dim %704, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %706 = stablehlo.multiply %705, %703 : tensor<64x512x768xf32>
    %707 = stablehlo.broadcast_in_dim %arg62, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %708 = stablehlo.broadcast_in_dim %707, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %709 = stablehlo.add %706, %708 : tensor<64x512x768xf32>
    %710 = stablehlo.transpose %arg63, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %711 = stablehlo.dot_general %709, %710, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %712 = stablehlo.broadcast_in_dim %arg64, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %713 = stablehlo.broadcast_in_dim %712, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %714 = stablehlo.add %711, %713 : tensor<64x512x3072xf32>
    %715 = stablehlo.multiply %714, %714 : tensor<64x512x3072xf32>
    %716 = stablehlo.multiply %715, %714 : tensor<64x512x3072xf32>
    %717 = stablehlo.multiply %714, %714 : tensor<64x512x3072xf32>
    %718 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %719 = stablehlo.multiply %718, %717 : tensor<64x512x3072xf32>
    %720 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %721 = stablehlo.multiply %720, %716 : tensor<64x512x3072xf32>
    %722 = stablehlo.add %714, %721 : tensor<64x512x3072xf32>
    %723 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %724 = stablehlo.multiply %723, %722 : tensor<64x512x3072xf32>
    %725 = stablehlo.tanh %724 : tensor<64x512x3072xf32>
    %726 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %727 = stablehlo.broadcast_in_dim %726, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %728 = stablehlo.subtract %727, %725 : tensor<64x512x3072xf32>
    %729 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %730 = stablehlo.add %729, %725 : tensor<64x512x3072xf32>
    %731 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %732 = stablehlo.multiply %731, %730 : tensor<64x512x3072xf32>
    %733 = stablehlo.multiply %714, %732 : tensor<64x512x3072xf32>
    %734 = stablehlo.transpose %arg65, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %735 = stablehlo.dot_general %733, %734, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %736 = stablehlo.broadcast_in_dim %arg66, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %737 = stablehlo.broadcast_in_dim %736, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %738 = stablehlo.add %735, %737 : tensor<64x512x768xf32>
    %739 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %740 = stablehlo.add %666, %c_12 : tensor<i32>
    %741 = stablehlo.convert %740 : (tensor<i32>) -> tensor<ui32>
    %742 = call @_threefry_fold_in(%arg612, %741) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %743 = stablehlo.convert %739 : tensor<f32>
    %744 = call @_bernoulli(%742, %743) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %745 = stablehlo.convert %739 : tensor<f32>
    %746 = stablehlo.broadcast_in_dim %745, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %747 = stablehlo.divide %738, %746 : tensor<64x512x768xf32>
    %748 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %749 = stablehlo.select %744, %747, %748 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %750 = stablehlo.add %749, %709 : tensor<64x512x768xf32>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %751 = stablehlo.reduce(%750 init: %cst_42) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %752 = stablehlo.broadcast_in_dim %751, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %753 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %754 = stablehlo.divide %752, %753 : tensor<64x512x1xf32>
    %755:4 = call @_var(%750, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %756 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %757 = stablehlo.maximum %755#0, %756 : tensor<64x512x1xf32>
    %758 = stablehlo.compare  EQ, %755#0, %757,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %759 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %760 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %761 = stablehlo.select %758, %759, %760 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %762 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %763 = stablehlo.compare  EQ, %762, %757,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %764 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %765 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %766 = stablehlo.select %763, %764, %765 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %767 = stablehlo.divide %761, %766 : tensor<64x512x1xf32>
    %768 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %769 = stablehlo.add %757, %768 : tensor<64x512x1xf32>
    %770 = stablehlo.rsqrt %769 : tensor<64x512x1xf32>
    %771 = stablehlo.divide %770, %769 : tensor<64x512x1xf32>
    %772 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %773 = stablehlo.multiply %772, %771 : tensor<64x512x1xf32>
    %774 = stablehlo.broadcast_in_dim %754, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %775 = stablehlo.subtract %750, %774 : tensor<64x512x768xf32>
    %776 = stablehlo.broadcast_in_dim %770, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %777 = stablehlo.multiply %775, %776 : tensor<64x512x768xf32>
    %778 = stablehlo.broadcast_in_dim %arg67, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %779 = stablehlo.broadcast_in_dim %778, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %780 = stablehlo.multiply %779, %777 : tensor<64x512x768xf32>
    %781 = stablehlo.broadcast_in_dim %arg68, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %782 = stablehlo.broadcast_in_dim %781, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %783 = stablehlo.add %780, %782 : tensor<64x512x768xf32>
    %784 = stablehlo.transpose %arg69, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %785 = stablehlo.dot_general %783, %784, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %786 = stablehlo.broadcast_in_dim %arg70, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %787 = stablehlo.broadcast_in_dim %786, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %788 = stablehlo.add %785, %787 : tensor<64x512x768xf32>
    %789 = stablehlo.transpose %arg73, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %790 = stablehlo.dot_general %783, %789, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %791 = stablehlo.broadcast_in_dim %arg74, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %792 = stablehlo.broadcast_in_dim %791, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %793 = stablehlo.add %790, %792 : tensor<64x512x768xf32>
    %794 = stablehlo.transpose %arg71, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %795 = stablehlo.dot_general %783, %794, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %796 = stablehlo.broadcast_in_dim %arg72, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %797 = stablehlo.broadcast_in_dim %796, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %798 = stablehlo.add %795, %797 : tensor<64x512x768xf32>
    %799 = stablehlo.reshape %788 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %800 = stablehlo.reshape %793 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %801 = stablehlo.reshape %798 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %802 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %803 = stablehlo.add %740, %c_12 : tensor<i32>
    %804 = stablehlo.convert %803 : (tensor<i32>) -> tensor<ui32>
    %805 = call @_threefry_fold_in(%arg612, %804) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %806 = stablehlo.sqrt %cst_15 : tensor<f32>
    %807 = stablehlo.convert %806 : tensor<f32>
    %808 = stablehlo.broadcast_in_dim %807, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %809 = stablehlo.divide %799, %808 : tensor<64x512x12x64xf32>
    %810 = stablehlo.dot_general %800, %809, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %811 = stablehlo.transpose %810, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %812:2 = call @_where_61(%802, %811, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_43 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %813 = stablehlo.reduce(%812#0 init: %cst_43) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %814 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %815 = stablehlo.maximum %814, %813 : tensor<64x512x12xf32>
    %816 = stablehlo.broadcast_in_dim %815, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %817 = stablehlo.broadcast_in_dim %816, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %818 = stablehlo.subtract %812#0, %817 : tensor<64x512x12x512xf32>
    %819 = stablehlo.exponential %818 : tensor<64x512x12x512xf32>
    %cst_44 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %820 = stablehlo.reduce(%819 init: %cst_44) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %821 = stablehlo.broadcast_in_dim %820, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %822 = stablehlo.broadcast_in_dim %821, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %823 = stablehlo.divide %819, %822 : tensor<64x512x12x512xf32>
    %824 = stablehlo.multiply %821, %821 : tensor<64x512x12x1xf32>
    %cst_45 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %825 = stablehlo.broadcast_in_dim %cst_45, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %826 = stablehlo.divide %825, %824 : tensor<64x512x12x1xf32>
    %827 = call @_bernoulli_74(%805, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %828 = stablehlo.broadcast_in_dim %827, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %829 = stablehlo.convert %828 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %830 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %831 = stablehlo.divide %829, %830 : tensor<64x512x12x512xf32>
    %832 = stablehlo.multiply %823, %831 : tensor<64x512x12x512xf32>
    %833 = stablehlo.dot_general %801, %832, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %834 = stablehlo.transpose %833, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %835 = stablehlo.reshape %834 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %836 = stablehlo.transpose %arg75, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %837 = stablehlo.dot_general %835, %836, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %838 = stablehlo.broadcast_in_dim %arg76, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %839 = stablehlo.broadcast_in_dim %838, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %840 = stablehlo.add %837, %839 : tensor<64x512x768xf32>
    %841 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %842 = stablehlo.add %803, %c_12 : tensor<i32>
    %843 = stablehlo.convert %842 : (tensor<i32>) -> tensor<ui32>
    %844 = call @_threefry_fold_in(%arg612, %843) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %845 = stablehlo.convert %841 : tensor<f32>
    %846 = call @_bernoulli(%844, %845) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %847 = stablehlo.convert %841 : tensor<f32>
    %848 = stablehlo.broadcast_in_dim %847, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %849 = stablehlo.divide %840, %848 : tensor<64x512x768xf32>
    %850 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %851 = stablehlo.select %846, %849, %850 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %852 = stablehlo.add %851, %783 : tensor<64x512x768xf32>
    %cst_46 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %853 = stablehlo.reduce(%852 init: %cst_46) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %854 = stablehlo.broadcast_in_dim %853, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %855 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %856 = stablehlo.divide %854, %855 : tensor<64x512x1xf32>
    %857:4 = call @_var(%852, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %858 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %859 = stablehlo.maximum %857#0, %858 : tensor<64x512x1xf32>
    %860 = stablehlo.compare  EQ, %857#0, %859,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %861 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %862 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %863 = stablehlo.select %860, %861, %862 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %864 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %865 = stablehlo.compare  EQ, %864, %859,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %866 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %867 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %868 = stablehlo.select %865, %866, %867 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %869 = stablehlo.divide %863, %868 : tensor<64x512x1xf32>
    %870 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %871 = stablehlo.add %859, %870 : tensor<64x512x1xf32>
    %872 = stablehlo.rsqrt %871 : tensor<64x512x1xf32>
    %873 = stablehlo.divide %872, %871 : tensor<64x512x1xf32>
    %874 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %875 = stablehlo.multiply %874, %873 : tensor<64x512x1xf32>
    %876 = stablehlo.broadcast_in_dim %856, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %877 = stablehlo.subtract %852, %876 : tensor<64x512x768xf32>
    %878 = stablehlo.broadcast_in_dim %872, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %879 = stablehlo.multiply %877, %878 : tensor<64x512x768xf32>
    %880 = stablehlo.broadcast_in_dim %arg77, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %881 = stablehlo.broadcast_in_dim %880, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %882 = stablehlo.multiply %881, %879 : tensor<64x512x768xf32>
    %883 = stablehlo.broadcast_in_dim %arg78, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %884 = stablehlo.broadcast_in_dim %883, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %885 = stablehlo.add %882, %884 : tensor<64x512x768xf32>
    %886 = stablehlo.transpose %arg79, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %887 = stablehlo.dot_general %885, %886, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %888 = stablehlo.broadcast_in_dim %arg80, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %889 = stablehlo.broadcast_in_dim %888, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %890 = stablehlo.add %887, %889 : tensor<64x512x3072xf32>
    %891 = stablehlo.multiply %890, %890 : tensor<64x512x3072xf32>
    %892 = stablehlo.multiply %891, %890 : tensor<64x512x3072xf32>
    %893 = stablehlo.multiply %890, %890 : tensor<64x512x3072xf32>
    %894 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %895 = stablehlo.multiply %894, %893 : tensor<64x512x3072xf32>
    %896 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %897 = stablehlo.multiply %896, %892 : tensor<64x512x3072xf32>
    %898 = stablehlo.add %890, %897 : tensor<64x512x3072xf32>
    %899 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %900 = stablehlo.multiply %899, %898 : tensor<64x512x3072xf32>
    %901 = stablehlo.tanh %900 : tensor<64x512x3072xf32>
    %902 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %903 = stablehlo.broadcast_in_dim %902, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %904 = stablehlo.subtract %903, %901 : tensor<64x512x3072xf32>
    %905 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %906 = stablehlo.add %905, %901 : tensor<64x512x3072xf32>
    %907 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %908 = stablehlo.multiply %907, %906 : tensor<64x512x3072xf32>
    %909 = stablehlo.multiply %890, %908 : tensor<64x512x3072xf32>
    %910 = stablehlo.transpose %arg81, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %911 = stablehlo.dot_general %909, %910, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %912 = stablehlo.broadcast_in_dim %arg82, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %913 = stablehlo.broadcast_in_dim %912, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %914 = stablehlo.add %911, %913 : tensor<64x512x768xf32>
    %915 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %916 = stablehlo.add %842, %c_12 : tensor<i32>
    %917 = stablehlo.convert %916 : (tensor<i32>) -> tensor<ui32>
    %918 = call @_threefry_fold_in(%arg612, %917) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %919 = stablehlo.convert %915 : tensor<f32>
    %920 = call @_bernoulli(%918, %919) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %921 = stablehlo.convert %915 : tensor<f32>
    %922 = stablehlo.broadcast_in_dim %921, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %923 = stablehlo.divide %914, %922 : tensor<64x512x768xf32>
    %924 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %925 = stablehlo.select %920, %923, %924 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %926 = stablehlo.add %925, %885 : tensor<64x512x768xf32>
    %cst_47 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %927 = stablehlo.reduce(%926 init: %cst_47) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %928 = stablehlo.broadcast_in_dim %927, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %929 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %930 = stablehlo.divide %928, %929 : tensor<64x512x1xf32>
    %931:4 = call @_var(%926, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %932 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %933 = stablehlo.maximum %931#0, %932 : tensor<64x512x1xf32>
    %934 = stablehlo.compare  EQ, %931#0, %933,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %935 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %936 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %937 = stablehlo.select %934, %935, %936 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %938 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %939 = stablehlo.compare  EQ, %938, %933,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %940 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %941 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %942 = stablehlo.select %939, %940, %941 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %943 = stablehlo.divide %937, %942 : tensor<64x512x1xf32>
    %944 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %945 = stablehlo.add %933, %944 : tensor<64x512x1xf32>
    %946 = stablehlo.rsqrt %945 : tensor<64x512x1xf32>
    %947 = stablehlo.divide %946, %945 : tensor<64x512x1xf32>
    %948 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %949 = stablehlo.multiply %948, %947 : tensor<64x512x1xf32>
    %950 = stablehlo.broadcast_in_dim %930, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %951 = stablehlo.subtract %926, %950 : tensor<64x512x768xf32>
    %952 = stablehlo.broadcast_in_dim %946, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %953 = stablehlo.multiply %951, %952 : tensor<64x512x768xf32>
    %954 = stablehlo.broadcast_in_dim %arg83, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %955 = stablehlo.broadcast_in_dim %954, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %956 = stablehlo.multiply %955, %953 : tensor<64x512x768xf32>
    %957 = stablehlo.broadcast_in_dim %arg84, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %958 = stablehlo.broadcast_in_dim %957, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %959 = stablehlo.add %956, %958 : tensor<64x512x768xf32>
    %960 = stablehlo.transpose %arg85, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %961 = stablehlo.dot_general %959, %960, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %962 = stablehlo.broadcast_in_dim %arg86, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %963 = stablehlo.broadcast_in_dim %962, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %964 = stablehlo.add %961, %963 : tensor<64x512x768xf32>
    %965 = stablehlo.transpose %arg89, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %966 = stablehlo.dot_general %959, %965, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %967 = stablehlo.broadcast_in_dim %arg90, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %968 = stablehlo.broadcast_in_dim %967, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %969 = stablehlo.add %966, %968 : tensor<64x512x768xf32>
    %970 = stablehlo.transpose %arg87, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %971 = stablehlo.dot_general %959, %970, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %972 = stablehlo.broadcast_in_dim %arg88, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %973 = stablehlo.broadcast_in_dim %972, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %974 = stablehlo.add %971, %973 : tensor<64x512x768xf32>
    %975 = stablehlo.reshape %964 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %976 = stablehlo.reshape %969 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %977 = stablehlo.reshape %974 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %978 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %979 = stablehlo.add %916, %c_12 : tensor<i32>
    %980 = stablehlo.convert %979 : (tensor<i32>) -> tensor<ui32>
    %981 = call @_threefry_fold_in(%arg612, %980) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %982 = stablehlo.sqrt %cst_15 : tensor<f32>
    %983 = stablehlo.convert %982 : tensor<f32>
    %984 = stablehlo.broadcast_in_dim %983, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %985 = stablehlo.divide %975, %984 : tensor<64x512x12x64xf32>
    %986 = stablehlo.dot_general %976, %985, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %987 = stablehlo.transpose %986, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %988:2 = call @_where_61(%978, %987, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_48 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %989 = stablehlo.reduce(%988#0 init: %cst_48) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %990 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %991 = stablehlo.maximum %990, %989 : tensor<64x512x12xf32>
    %992 = stablehlo.broadcast_in_dim %991, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %993 = stablehlo.broadcast_in_dim %992, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %994 = stablehlo.subtract %988#0, %993 : tensor<64x512x12x512xf32>
    %995 = stablehlo.exponential %994 : tensor<64x512x12x512xf32>
    %cst_49 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %996 = stablehlo.reduce(%995 init: %cst_49) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %997 = stablehlo.broadcast_in_dim %996, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %998 = stablehlo.broadcast_in_dim %997, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %999 = stablehlo.divide %995, %998 : tensor<64x512x12x512xf32>
    %1000 = stablehlo.multiply %997, %997 : tensor<64x512x12x1xf32>
    %cst_50 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1001 = stablehlo.broadcast_in_dim %cst_50, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1002 = stablehlo.divide %1001, %1000 : tensor<64x512x12x1xf32>
    %1003 = call @_bernoulli_74(%981, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1004 = stablehlo.broadcast_in_dim %1003, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1005 = stablehlo.convert %1004 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1006 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1007 = stablehlo.divide %1005, %1006 : tensor<64x512x12x512xf32>
    %1008 = stablehlo.multiply %999, %1007 : tensor<64x512x12x512xf32>
    %1009 = stablehlo.dot_general %977, %1008, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1010 = stablehlo.transpose %1009, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1011 = stablehlo.reshape %1010 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1012 = stablehlo.transpose %arg91, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1013 = stablehlo.dot_general %1011, %1012, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1014 = stablehlo.broadcast_in_dim %arg92, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1015 = stablehlo.broadcast_in_dim %1014, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1016 = stablehlo.add %1013, %1015 : tensor<64x512x768xf32>
    %1017 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1018 = stablehlo.add %979, %c_12 : tensor<i32>
    %1019 = stablehlo.convert %1018 : (tensor<i32>) -> tensor<ui32>
    %1020 = call @_threefry_fold_in(%arg612, %1019) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1021 = stablehlo.convert %1017 : tensor<f32>
    %1022 = call @_bernoulli(%1020, %1021) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1023 = stablehlo.convert %1017 : tensor<f32>
    %1024 = stablehlo.broadcast_in_dim %1023, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1025 = stablehlo.divide %1016, %1024 : tensor<64x512x768xf32>
    %1026 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1027 = stablehlo.select %1022, %1025, %1026 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1028 = stablehlo.add %1027, %959 : tensor<64x512x768xf32>
    %cst_51 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1029 = stablehlo.reduce(%1028 init: %cst_51) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1030 = stablehlo.broadcast_in_dim %1029, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1031 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1032 = stablehlo.divide %1030, %1031 : tensor<64x512x1xf32>
    %1033:4 = call @_var(%1028, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1034 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1035 = stablehlo.maximum %1033#0, %1034 : tensor<64x512x1xf32>
    %1036 = stablehlo.compare  EQ, %1033#0, %1035,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1037 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1038 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1039 = stablehlo.select %1036, %1037, %1038 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1040 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1041 = stablehlo.compare  EQ, %1040, %1035,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1042 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1043 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1044 = stablehlo.select %1041, %1042, %1043 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1045 = stablehlo.divide %1039, %1044 : tensor<64x512x1xf32>
    %1046 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1047 = stablehlo.add %1035, %1046 : tensor<64x512x1xf32>
    %1048 = stablehlo.rsqrt %1047 : tensor<64x512x1xf32>
    %1049 = stablehlo.divide %1048, %1047 : tensor<64x512x1xf32>
    %1050 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1051 = stablehlo.multiply %1050, %1049 : tensor<64x512x1xf32>
    %1052 = stablehlo.broadcast_in_dim %1032, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1053 = stablehlo.subtract %1028, %1052 : tensor<64x512x768xf32>
    %1054 = stablehlo.broadcast_in_dim %1048, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1055 = stablehlo.multiply %1053, %1054 : tensor<64x512x768xf32>
    %1056 = stablehlo.broadcast_in_dim %arg93, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1057 = stablehlo.broadcast_in_dim %1056, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1058 = stablehlo.multiply %1057, %1055 : tensor<64x512x768xf32>
    %1059 = stablehlo.broadcast_in_dim %arg94, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1060 = stablehlo.broadcast_in_dim %1059, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1061 = stablehlo.add %1058, %1060 : tensor<64x512x768xf32>
    %1062 = stablehlo.transpose %arg95, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1063 = stablehlo.dot_general %1061, %1062, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1064 = stablehlo.broadcast_in_dim %arg96, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1065 = stablehlo.broadcast_in_dim %1064, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1066 = stablehlo.add %1063, %1065 : tensor<64x512x3072xf32>
    %1067 = stablehlo.multiply %1066, %1066 : tensor<64x512x3072xf32>
    %1068 = stablehlo.multiply %1067, %1066 : tensor<64x512x3072xf32>
    %1069 = stablehlo.multiply %1066, %1066 : tensor<64x512x3072xf32>
    %1070 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1071 = stablehlo.multiply %1070, %1069 : tensor<64x512x3072xf32>
    %1072 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1073 = stablehlo.multiply %1072, %1068 : tensor<64x512x3072xf32>
    %1074 = stablehlo.add %1066, %1073 : tensor<64x512x3072xf32>
    %1075 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1076 = stablehlo.multiply %1075, %1074 : tensor<64x512x3072xf32>
    %1077 = stablehlo.tanh %1076 : tensor<64x512x3072xf32>
    %1078 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1079 = stablehlo.broadcast_in_dim %1078, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1080 = stablehlo.subtract %1079, %1077 : tensor<64x512x3072xf32>
    %1081 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1082 = stablehlo.add %1081, %1077 : tensor<64x512x3072xf32>
    %1083 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1084 = stablehlo.multiply %1083, %1082 : tensor<64x512x3072xf32>
    %1085 = stablehlo.multiply %1066, %1084 : tensor<64x512x3072xf32>
    %1086 = stablehlo.transpose %arg97, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1087 = stablehlo.dot_general %1085, %1086, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1088 = stablehlo.broadcast_in_dim %arg98, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1089 = stablehlo.broadcast_in_dim %1088, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1090 = stablehlo.add %1087, %1089 : tensor<64x512x768xf32>
    %1091 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1092 = stablehlo.add %1018, %c_12 : tensor<i32>
    %1093 = stablehlo.convert %1092 : (tensor<i32>) -> tensor<ui32>
    %1094 = call @_threefry_fold_in(%arg612, %1093) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1095 = stablehlo.convert %1091 : tensor<f32>
    %1096 = call @_bernoulli(%1094, %1095) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1097 = stablehlo.convert %1091 : tensor<f32>
    %1098 = stablehlo.broadcast_in_dim %1097, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1099 = stablehlo.divide %1090, %1098 : tensor<64x512x768xf32>
    %1100 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1101 = stablehlo.select %1096, %1099, %1100 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1102 = stablehlo.add %1101, %1061 : tensor<64x512x768xf32>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1103 = stablehlo.reduce(%1102 init: %cst_52) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1104 = stablehlo.broadcast_in_dim %1103, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1105 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1106 = stablehlo.divide %1104, %1105 : tensor<64x512x1xf32>
    %1107:4 = call @_var(%1102, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1108 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1109 = stablehlo.maximum %1107#0, %1108 : tensor<64x512x1xf32>
    %1110 = stablehlo.compare  EQ, %1107#0, %1109,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1111 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1112 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1113 = stablehlo.select %1110, %1111, %1112 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1114 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1115 = stablehlo.compare  EQ, %1114, %1109,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1116 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1117 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1118 = stablehlo.select %1115, %1116, %1117 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1119 = stablehlo.divide %1113, %1118 : tensor<64x512x1xf32>
    %1120 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1121 = stablehlo.add %1109, %1120 : tensor<64x512x1xf32>
    %1122 = stablehlo.rsqrt %1121 : tensor<64x512x1xf32>
    %1123 = stablehlo.divide %1122, %1121 : tensor<64x512x1xf32>
    %1124 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1125 = stablehlo.multiply %1124, %1123 : tensor<64x512x1xf32>
    %1126 = stablehlo.broadcast_in_dim %1106, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1127 = stablehlo.subtract %1102, %1126 : tensor<64x512x768xf32>
    %1128 = stablehlo.broadcast_in_dim %1122, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1129 = stablehlo.multiply %1127, %1128 : tensor<64x512x768xf32>
    %1130 = stablehlo.broadcast_in_dim %arg99, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1131 = stablehlo.broadcast_in_dim %1130, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1132 = stablehlo.multiply %1131, %1129 : tensor<64x512x768xf32>
    %1133 = stablehlo.broadcast_in_dim %arg100, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1134 = stablehlo.broadcast_in_dim %1133, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1135 = stablehlo.add %1132, %1134 : tensor<64x512x768xf32>
    %1136 = stablehlo.transpose %arg101, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1137 = stablehlo.dot_general %1135, %1136, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1138 = stablehlo.broadcast_in_dim %arg102, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1139 = stablehlo.broadcast_in_dim %1138, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1140 = stablehlo.add %1137, %1139 : tensor<64x512x768xf32>
    %1141 = stablehlo.transpose %arg105, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1142 = stablehlo.dot_general %1135, %1141, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1143 = stablehlo.broadcast_in_dim %arg106, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1144 = stablehlo.broadcast_in_dim %1143, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1145 = stablehlo.add %1142, %1144 : tensor<64x512x768xf32>
    %1146 = stablehlo.transpose %arg103, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1147 = stablehlo.dot_general %1135, %1146, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1148 = stablehlo.broadcast_in_dim %arg104, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1149 = stablehlo.broadcast_in_dim %1148, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1150 = stablehlo.add %1147, %1149 : tensor<64x512x768xf32>
    %1151 = stablehlo.reshape %1140 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1152 = stablehlo.reshape %1145 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1153 = stablehlo.reshape %1150 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1154 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1155 = stablehlo.add %1092, %c_12 : tensor<i32>
    %1156 = stablehlo.convert %1155 : (tensor<i32>) -> tensor<ui32>
    %1157 = call @_threefry_fold_in(%arg612, %1156) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1158 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1159 = stablehlo.convert %1158 : tensor<f32>
    %1160 = stablehlo.broadcast_in_dim %1159, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1161 = stablehlo.divide %1151, %1160 : tensor<64x512x12x64xf32>
    %1162 = stablehlo.dot_general %1152, %1161, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1163 = stablehlo.transpose %1162, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1164:2 = call @_where_61(%1154, %1163, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_53 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1165 = stablehlo.reduce(%1164#0 init: %cst_53) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1166 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1167 = stablehlo.maximum %1166, %1165 : tensor<64x512x12xf32>
    %1168 = stablehlo.broadcast_in_dim %1167, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1169 = stablehlo.broadcast_in_dim %1168, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1170 = stablehlo.subtract %1164#0, %1169 : tensor<64x512x12x512xf32>
    %1171 = stablehlo.exponential %1170 : tensor<64x512x12x512xf32>
    %cst_54 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1172 = stablehlo.reduce(%1171 init: %cst_54) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1173 = stablehlo.broadcast_in_dim %1172, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1174 = stablehlo.broadcast_in_dim %1173, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1175 = stablehlo.divide %1171, %1174 : tensor<64x512x12x512xf32>
    %1176 = stablehlo.multiply %1173, %1173 : tensor<64x512x12x1xf32>
    %cst_55 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1177 = stablehlo.broadcast_in_dim %cst_55, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1178 = stablehlo.divide %1177, %1176 : tensor<64x512x12x1xf32>
    %1179 = call @_bernoulli_74(%1157, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1180 = stablehlo.broadcast_in_dim %1179, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1181 = stablehlo.convert %1180 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1182 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1183 = stablehlo.divide %1181, %1182 : tensor<64x512x12x512xf32>
    %1184 = stablehlo.multiply %1175, %1183 : tensor<64x512x12x512xf32>
    %1185 = stablehlo.dot_general %1153, %1184, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1186 = stablehlo.transpose %1185, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1187 = stablehlo.reshape %1186 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1188 = stablehlo.transpose %arg107, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1189 = stablehlo.dot_general %1187, %1188, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1190 = stablehlo.broadcast_in_dim %arg108, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1191 = stablehlo.broadcast_in_dim %1190, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1192 = stablehlo.add %1189, %1191 : tensor<64x512x768xf32>
    %1193 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1194 = stablehlo.add %1155, %c_12 : tensor<i32>
    %1195 = stablehlo.convert %1194 : (tensor<i32>) -> tensor<ui32>
    %1196 = call @_threefry_fold_in(%arg612, %1195) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1197 = stablehlo.convert %1193 : tensor<f32>
    %1198 = call @_bernoulli(%1196, %1197) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1199 = stablehlo.convert %1193 : tensor<f32>
    %1200 = stablehlo.broadcast_in_dim %1199, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1201 = stablehlo.divide %1192, %1200 : tensor<64x512x768xf32>
    %1202 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1203 = stablehlo.select %1198, %1201, %1202 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1204 = stablehlo.add %1203, %1135 : tensor<64x512x768xf32>
    %cst_56 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1205 = stablehlo.reduce(%1204 init: %cst_56) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1206 = stablehlo.broadcast_in_dim %1205, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1207 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1208 = stablehlo.divide %1206, %1207 : tensor<64x512x1xf32>
    %1209:4 = call @_var(%1204, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1210 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1211 = stablehlo.maximum %1209#0, %1210 : tensor<64x512x1xf32>
    %1212 = stablehlo.compare  EQ, %1209#0, %1211,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1213 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1214 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1215 = stablehlo.select %1212, %1213, %1214 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1216 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1217 = stablehlo.compare  EQ, %1216, %1211,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1218 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1219 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1220 = stablehlo.select %1217, %1218, %1219 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1221 = stablehlo.divide %1215, %1220 : tensor<64x512x1xf32>
    %1222 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1223 = stablehlo.add %1211, %1222 : tensor<64x512x1xf32>
    %1224 = stablehlo.rsqrt %1223 : tensor<64x512x1xf32>
    %1225 = stablehlo.divide %1224, %1223 : tensor<64x512x1xf32>
    %1226 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1227 = stablehlo.multiply %1226, %1225 : tensor<64x512x1xf32>
    %1228 = stablehlo.broadcast_in_dim %1208, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1229 = stablehlo.subtract %1204, %1228 : tensor<64x512x768xf32>
    %1230 = stablehlo.broadcast_in_dim %1224, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1231 = stablehlo.multiply %1229, %1230 : tensor<64x512x768xf32>
    %1232 = stablehlo.broadcast_in_dim %arg109, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1233 = stablehlo.broadcast_in_dim %1232, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1234 = stablehlo.multiply %1233, %1231 : tensor<64x512x768xf32>
    %1235 = stablehlo.broadcast_in_dim %arg110, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1236 = stablehlo.broadcast_in_dim %1235, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1237 = stablehlo.add %1234, %1236 : tensor<64x512x768xf32>
    %1238 = stablehlo.transpose %arg111, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1239 = stablehlo.dot_general %1237, %1238, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1240 = stablehlo.broadcast_in_dim %arg112, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1241 = stablehlo.broadcast_in_dim %1240, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1242 = stablehlo.add %1239, %1241 : tensor<64x512x3072xf32>
    %1243 = stablehlo.multiply %1242, %1242 : tensor<64x512x3072xf32>
    %1244 = stablehlo.multiply %1243, %1242 : tensor<64x512x3072xf32>
    %1245 = stablehlo.multiply %1242, %1242 : tensor<64x512x3072xf32>
    %1246 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1247 = stablehlo.multiply %1246, %1245 : tensor<64x512x3072xf32>
    %1248 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1249 = stablehlo.multiply %1248, %1244 : tensor<64x512x3072xf32>
    %1250 = stablehlo.add %1242, %1249 : tensor<64x512x3072xf32>
    %1251 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1252 = stablehlo.multiply %1251, %1250 : tensor<64x512x3072xf32>
    %1253 = stablehlo.tanh %1252 : tensor<64x512x3072xf32>
    %1254 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1255 = stablehlo.broadcast_in_dim %1254, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1256 = stablehlo.subtract %1255, %1253 : tensor<64x512x3072xf32>
    %1257 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1258 = stablehlo.add %1257, %1253 : tensor<64x512x3072xf32>
    %1259 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1260 = stablehlo.multiply %1259, %1258 : tensor<64x512x3072xf32>
    %1261 = stablehlo.multiply %1242, %1260 : tensor<64x512x3072xf32>
    %1262 = stablehlo.transpose %arg113, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1263 = stablehlo.dot_general %1261, %1262, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1264 = stablehlo.broadcast_in_dim %arg114, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1265 = stablehlo.broadcast_in_dim %1264, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1266 = stablehlo.add %1263, %1265 : tensor<64x512x768xf32>
    %1267 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1268 = stablehlo.add %1194, %c_12 : tensor<i32>
    %1269 = stablehlo.convert %1268 : (tensor<i32>) -> tensor<ui32>
    %1270 = call @_threefry_fold_in(%arg612, %1269) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1271 = stablehlo.convert %1267 : tensor<f32>
    %1272 = call @_bernoulli(%1270, %1271) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1273 = stablehlo.convert %1267 : tensor<f32>
    %1274 = stablehlo.broadcast_in_dim %1273, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1275 = stablehlo.divide %1266, %1274 : tensor<64x512x768xf32>
    %1276 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1277 = stablehlo.select %1272, %1275, %1276 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1278 = stablehlo.add %1277, %1237 : tensor<64x512x768xf32>
    %cst_57 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1279 = stablehlo.reduce(%1278 init: %cst_57) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1280 = stablehlo.broadcast_in_dim %1279, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1281 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1282 = stablehlo.divide %1280, %1281 : tensor<64x512x1xf32>
    %1283:4 = call @_var(%1278, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1284 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1285 = stablehlo.maximum %1283#0, %1284 : tensor<64x512x1xf32>
    %1286 = stablehlo.compare  EQ, %1283#0, %1285,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1287 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1288 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1289 = stablehlo.select %1286, %1287, %1288 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1290 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1291 = stablehlo.compare  EQ, %1290, %1285,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1292 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1293 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1294 = stablehlo.select %1291, %1292, %1293 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1295 = stablehlo.divide %1289, %1294 : tensor<64x512x1xf32>
    %1296 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1297 = stablehlo.add %1285, %1296 : tensor<64x512x1xf32>
    %1298 = stablehlo.rsqrt %1297 : tensor<64x512x1xf32>
    %1299 = stablehlo.divide %1298, %1297 : tensor<64x512x1xf32>
    %1300 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1301 = stablehlo.multiply %1300, %1299 : tensor<64x512x1xf32>
    %1302 = stablehlo.broadcast_in_dim %1282, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1303 = stablehlo.subtract %1278, %1302 : tensor<64x512x768xf32>
    %1304 = stablehlo.broadcast_in_dim %1298, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1305 = stablehlo.multiply %1303, %1304 : tensor<64x512x768xf32>
    %1306 = stablehlo.broadcast_in_dim %arg115, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1307 = stablehlo.broadcast_in_dim %1306, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1308 = stablehlo.multiply %1307, %1305 : tensor<64x512x768xf32>
    %1309 = stablehlo.broadcast_in_dim %arg116, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1310 = stablehlo.broadcast_in_dim %1309, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1311 = stablehlo.add %1308, %1310 : tensor<64x512x768xf32>
    %1312 = stablehlo.transpose %arg117, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1313 = stablehlo.dot_general %1311, %1312, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1314 = stablehlo.broadcast_in_dim %arg118, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1315 = stablehlo.broadcast_in_dim %1314, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1316 = stablehlo.add %1313, %1315 : tensor<64x512x768xf32>
    %1317 = stablehlo.transpose %arg121, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1318 = stablehlo.dot_general %1311, %1317, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1319 = stablehlo.broadcast_in_dim %arg122, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1320 = stablehlo.broadcast_in_dim %1319, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1321 = stablehlo.add %1318, %1320 : tensor<64x512x768xf32>
    %1322 = stablehlo.transpose %arg119, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1323 = stablehlo.dot_general %1311, %1322, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1324 = stablehlo.broadcast_in_dim %arg120, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1325 = stablehlo.broadcast_in_dim %1324, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1326 = stablehlo.add %1323, %1325 : tensor<64x512x768xf32>
    %1327 = stablehlo.reshape %1316 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1328 = stablehlo.reshape %1321 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1329 = stablehlo.reshape %1326 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1330 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1331 = stablehlo.add %1268, %c_12 : tensor<i32>
    %1332 = stablehlo.convert %1331 : (tensor<i32>) -> tensor<ui32>
    %1333 = call @_threefry_fold_in(%arg612, %1332) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1334 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1335 = stablehlo.convert %1334 : tensor<f32>
    %1336 = stablehlo.broadcast_in_dim %1335, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1337 = stablehlo.divide %1327, %1336 : tensor<64x512x12x64xf32>
    %1338 = stablehlo.dot_general %1328, %1337, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1339 = stablehlo.transpose %1338, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1340:2 = call @_where_61(%1330, %1339, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_58 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1341 = stablehlo.reduce(%1340#0 init: %cst_58) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1342 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1343 = stablehlo.maximum %1342, %1341 : tensor<64x512x12xf32>
    %1344 = stablehlo.broadcast_in_dim %1343, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1345 = stablehlo.broadcast_in_dim %1344, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1346 = stablehlo.subtract %1340#0, %1345 : tensor<64x512x12x512xf32>
    %1347 = stablehlo.exponential %1346 : tensor<64x512x12x512xf32>
    %cst_59 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1348 = stablehlo.reduce(%1347 init: %cst_59) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1349 = stablehlo.broadcast_in_dim %1348, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1350 = stablehlo.broadcast_in_dim %1349, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1351 = stablehlo.divide %1347, %1350 : tensor<64x512x12x512xf32>
    %1352 = stablehlo.multiply %1349, %1349 : tensor<64x512x12x1xf32>
    %cst_60 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1353 = stablehlo.broadcast_in_dim %cst_60, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1354 = stablehlo.divide %1353, %1352 : tensor<64x512x12x1xf32>
    %1355 = call @_bernoulli_74(%1333, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1356 = stablehlo.broadcast_in_dim %1355, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1357 = stablehlo.convert %1356 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1358 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1359 = stablehlo.divide %1357, %1358 : tensor<64x512x12x512xf32>
    %1360 = stablehlo.multiply %1351, %1359 : tensor<64x512x12x512xf32>
    %1361 = stablehlo.dot_general %1329, %1360, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1362 = stablehlo.transpose %1361, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1363 = stablehlo.reshape %1362 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1364 = stablehlo.transpose %arg123, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1365 = stablehlo.dot_general %1363, %1364, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1366 = stablehlo.broadcast_in_dim %arg124, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1367 = stablehlo.broadcast_in_dim %1366, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1368 = stablehlo.add %1365, %1367 : tensor<64x512x768xf32>
    %1369 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1370 = stablehlo.add %1331, %c_12 : tensor<i32>
    %1371 = stablehlo.convert %1370 : (tensor<i32>) -> tensor<ui32>
    %1372 = call @_threefry_fold_in(%arg612, %1371) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1373 = stablehlo.convert %1369 : tensor<f32>
    %1374 = call @_bernoulli(%1372, %1373) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1375 = stablehlo.convert %1369 : tensor<f32>
    %1376 = stablehlo.broadcast_in_dim %1375, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1377 = stablehlo.divide %1368, %1376 : tensor<64x512x768xf32>
    %1378 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1379 = stablehlo.select %1374, %1377, %1378 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1380 = stablehlo.add %1379, %1311 : tensor<64x512x768xf32>
    %cst_61 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1381 = stablehlo.reduce(%1380 init: %cst_61) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1382 = stablehlo.broadcast_in_dim %1381, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1383 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1384 = stablehlo.divide %1382, %1383 : tensor<64x512x1xf32>
    %1385:4 = call @_var(%1380, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1386 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1387 = stablehlo.maximum %1385#0, %1386 : tensor<64x512x1xf32>
    %1388 = stablehlo.compare  EQ, %1385#0, %1387,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1389 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1390 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1391 = stablehlo.select %1388, %1389, %1390 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1392 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1393 = stablehlo.compare  EQ, %1392, %1387,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1394 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1395 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1396 = stablehlo.select %1393, %1394, %1395 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1397 = stablehlo.divide %1391, %1396 : tensor<64x512x1xf32>
    %1398 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1399 = stablehlo.add %1387, %1398 : tensor<64x512x1xf32>
    %1400 = stablehlo.rsqrt %1399 : tensor<64x512x1xf32>
    %1401 = stablehlo.divide %1400, %1399 : tensor<64x512x1xf32>
    %1402 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1403 = stablehlo.multiply %1402, %1401 : tensor<64x512x1xf32>
    %1404 = stablehlo.broadcast_in_dim %1384, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1405 = stablehlo.subtract %1380, %1404 : tensor<64x512x768xf32>
    %1406 = stablehlo.broadcast_in_dim %1400, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1407 = stablehlo.multiply %1405, %1406 : tensor<64x512x768xf32>
    %1408 = stablehlo.broadcast_in_dim %arg125, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1409 = stablehlo.broadcast_in_dim %1408, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1410 = stablehlo.multiply %1409, %1407 : tensor<64x512x768xf32>
    %1411 = stablehlo.broadcast_in_dim %arg126, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1412 = stablehlo.broadcast_in_dim %1411, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1413 = stablehlo.add %1410, %1412 : tensor<64x512x768xf32>
    %1414 = stablehlo.transpose %arg127, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1415 = stablehlo.dot_general %1413, %1414, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1416 = stablehlo.broadcast_in_dim %arg128, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1417 = stablehlo.broadcast_in_dim %1416, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1418 = stablehlo.add %1415, %1417 : tensor<64x512x3072xf32>
    %1419 = stablehlo.multiply %1418, %1418 : tensor<64x512x3072xf32>
    %1420 = stablehlo.multiply %1419, %1418 : tensor<64x512x3072xf32>
    %1421 = stablehlo.multiply %1418, %1418 : tensor<64x512x3072xf32>
    %1422 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1423 = stablehlo.multiply %1422, %1421 : tensor<64x512x3072xf32>
    %1424 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1425 = stablehlo.multiply %1424, %1420 : tensor<64x512x3072xf32>
    %1426 = stablehlo.add %1418, %1425 : tensor<64x512x3072xf32>
    %1427 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1428 = stablehlo.multiply %1427, %1426 : tensor<64x512x3072xf32>
    %1429 = stablehlo.tanh %1428 : tensor<64x512x3072xf32>
    %1430 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1431 = stablehlo.broadcast_in_dim %1430, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1432 = stablehlo.subtract %1431, %1429 : tensor<64x512x3072xf32>
    %1433 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1434 = stablehlo.add %1433, %1429 : tensor<64x512x3072xf32>
    %1435 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1436 = stablehlo.multiply %1435, %1434 : tensor<64x512x3072xf32>
    %1437 = stablehlo.multiply %1418, %1436 : tensor<64x512x3072xf32>
    %1438 = stablehlo.transpose %arg129, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1439 = stablehlo.dot_general %1437, %1438, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1440 = stablehlo.broadcast_in_dim %arg130, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1441 = stablehlo.broadcast_in_dim %1440, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1442 = stablehlo.add %1439, %1441 : tensor<64x512x768xf32>
    %1443 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1444 = stablehlo.add %1370, %c_12 : tensor<i32>
    %1445 = stablehlo.convert %1444 : (tensor<i32>) -> tensor<ui32>
    %1446 = call @_threefry_fold_in(%arg612, %1445) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1447 = stablehlo.convert %1443 : tensor<f32>
    %1448 = call @_bernoulli(%1446, %1447) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1449 = stablehlo.convert %1443 : tensor<f32>
    %1450 = stablehlo.broadcast_in_dim %1449, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1451 = stablehlo.divide %1442, %1450 : tensor<64x512x768xf32>
    %1452 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1453 = stablehlo.select %1448, %1451, %1452 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1454 = stablehlo.add %1453, %1413 : tensor<64x512x768xf32>
    %cst_62 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1455 = stablehlo.reduce(%1454 init: %cst_62) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1456 = stablehlo.broadcast_in_dim %1455, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1457 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1458 = stablehlo.divide %1456, %1457 : tensor<64x512x1xf32>
    %1459:4 = call @_var(%1454, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1460 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1461 = stablehlo.maximum %1459#0, %1460 : tensor<64x512x1xf32>
    %1462 = stablehlo.compare  EQ, %1459#0, %1461,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1463 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1464 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1465 = stablehlo.select %1462, %1463, %1464 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1466 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1467 = stablehlo.compare  EQ, %1466, %1461,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1468 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1469 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1470 = stablehlo.select %1467, %1468, %1469 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1471 = stablehlo.divide %1465, %1470 : tensor<64x512x1xf32>
    %1472 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1473 = stablehlo.add %1461, %1472 : tensor<64x512x1xf32>
    %1474 = stablehlo.rsqrt %1473 : tensor<64x512x1xf32>
    %1475 = stablehlo.divide %1474, %1473 : tensor<64x512x1xf32>
    %1476 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1477 = stablehlo.multiply %1476, %1475 : tensor<64x512x1xf32>
    %1478 = stablehlo.broadcast_in_dim %1458, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1479 = stablehlo.subtract %1454, %1478 : tensor<64x512x768xf32>
    %1480 = stablehlo.broadcast_in_dim %1474, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1481 = stablehlo.multiply %1479, %1480 : tensor<64x512x768xf32>
    %1482 = stablehlo.broadcast_in_dim %arg131, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1483 = stablehlo.broadcast_in_dim %1482, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1484 = stablehlo.multiply %1483, %1481 : tensor<64x512x768xf32>
    %1485 = stablehlo.broadcast_in_dim %arg132, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1486 = stablehlo.broadcast_in_dim %1485, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1487 = stablehlo.add %1484, %1486 : tensor<64x512x768xf32>
    %1488 = stablehlo.transpose %arg133, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1489 = stablehlo.dot_general %1487, %1488, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1490 = stablehlo.broadcast_in_dim %arg134, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1491 = stablehlo.broadcast_in_dim %1490, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1492 = stablehlo.add %1489, %1491 : tensor<64x512x768xf32>
    %1493 = stablehlo.transpose %arg137, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1494 = stablehlo.dot_general %1487, %1493, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1495 = stablehlo.broadcast_in_dim %arg138, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1496 = stablehlo.broadcast_in_dim %1495, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1497 = stablehlo.add %1494, %1496 : tensor<64x512x768xf32>
    %1498 = stablehlo.transpose %arg135, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1499 = stablehlo.dot_general %1487, %1498, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1500 = stablehlo.broadcast_in_dim %arg136, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1501 = stablehlo.broadcast_in_dim %1500, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1502 = stablehlo.add %1499, %1501 : tensor<64x512x768xf32>
    %1503 = stablehlo.reshape %1492 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1504 = stablehlo.reshape %1497 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1505 = stablehlo.reshape %1502 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1506 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1507 = stablehlo.add %1444, %c_12 : tensor<i32>
    %1508 = stablehlo.convert %1507 : (tensor<i32>) -> tensor<ui32>
    %1509 = call @_threefry_fold_in(%arg612, %1508) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1510 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1511 = stablehlo.convert %1510 : tensor<f32>
    %1512 = stablehlo.broadcast_in_dim %1511, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1513 = stablehlo.divide %1503, %1512 : tensor<64x512x12x64xf32>
    %1514 = stablehlo.dot_general %1504, %1513, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1515 = stablehlo.transpose %1514, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1516:2 = call @_where_61(%1506, %1515, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_63 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1517 = stablehlo.reduce(%1516#0 init: %cst_63) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1518 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1519 = stablehlo.maximum %1518, %1517 : tensor<64x512x12xf32>
    %1520 = stablehlo.broadcast_in_dim %1519, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1521 = stablehlo.broadcast_in_dim %1520, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1522 = stablehlo.subtract %1516#0, %1521 : tensor<64x512x12x512xf32>
    %1523 = stablehlo.exponential %1522 : tensor<64x512x12x512xf32>
    %cst_64 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1524 = stablehlo.reduce(%1523 init: %cst_64) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1525 = stablehlo.broadcast_in_dim %1524, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1526 = stablehlo.broadcast_in_dim %1525, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1527 = stablehlo.divide %1523, %1526 : tensor<64x512x12x512xf32>
    %1528 = stablehlo.multiply %1525, %1525 : tensor<64x512x12x1xf32>
    %cst_65 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1529 = stablehlo.broadcast_in_dim %cst_65, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1530 = stablehlo.divide %1529, %1528 : tensor<64x512x12x1xf32>
    %1531 = call @_bernoulli_74(%1509, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1532 = stablehlo.broadcast_in_dim %1531, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1533 = stablehlo.convert %1532 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1534 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1535 = stablehlo.divide %1533, %1534 : tensor<64x512x12x512xf32>
    %1536 = stablehlo.multiply %1527, %1535 : tensor<64x512x12x512xf32>
    %1537 = stablehlo.dot_general %1505, %1536, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1538 = stablehlo.transpose %1537, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1539 = stablehlo.reshape %1538 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1540 = stablehlo.transpose %arg139, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1541 = stablehlo.dot_general %1539, %1540, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1542 = stablehlo.broadcast_in_dim %arg140, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1543 = stablehlo.broadcast_in_dim %1542, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1544 = stablehlo.add %1541, %1543 : tensor<64x512x768xf32>
    %1545 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1546 = stablehlo.add %1507, %c_12 : tensor<i32>
    %1547 = stablehlo.convert %1546 : (tensor<i32>) -> tensor<ui32>
    %1548 = call @_threefry_fold_in(%arg612, %1547) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1549 = stablehlo.convert %1545 : tensor<f32>
    %1550 = call @_bernoulli(%1548, %1549) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1551 = stablehlo.convert %1545 : tensor<f32>
    %1552 = stablehlo.broadcast_in_dim %1551, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1553 = stablehlo.divide %1544, %1552 : tensor<64x512x768xf32>
    %1554 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1555 = stablehlo.select %1550, %1553, %1554 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1556 = stablehlo.add %1555, %1487 : tensor<64x512x768xf32>
    %cst_66 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1557 = stablehlo.reduce(%1556 init: %cst_66) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1558 = stablehlo.broadcast_in_dim %1557, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1559 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1560 = stablehlo.divide %1558, %1559 : tensor<64x512x1xf32>
    %1561:4 = call @_var(%1556, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1562 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1563 = stablehlo.maximum %1561#0, %1562 : tensor<64x512x1xf32>
    %1564 = stablehlo.compare  EQ, %1561#0, %1563,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1565 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1566 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1567 = stablehlo.select %1564, %1565, %1566 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1568 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1569 = stablehlo.compare  EQ, %1568, %1563,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1570 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1571 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1572 = stablehlo.select %1569, %1570, %1571 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1573 = stablehlo.divide %1567, %1572 : tensor<64x512x1xf32>
    %1574 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1575 = stablehlo.add %1563, %1574 : tensor<64x512x1xf32>
    %1576 = stablehlo.rsqrt %1575 : tensor<64x512x1xf32>
    %1577 = stablehlo.divide %1576, %1575 : tensor<64x512x1xf32>
    %1578 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1579 = stablehlo.multiply %1578, %1577 : tensor<64x512x1xf32>
    %1580 = stablehlo.broadcast_in_dim %1560, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1581 = stablehlo.subtract %1556, %1580 : tensor<64x512x768xf32>
    %1582 = stablehlo.broadcast_in_dim %1576, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1583 = stablehlo.multiply %1581, %1582 : tensor<64x512x768xf32>
    %1584 = stablehlo.broadcast_in_dim %arg141, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1585 = stablehlo.broadcast_in_dim %1584, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1586 = stablehlo.multiply %1585, %1583 : tensor<64x512x768xf32>
    %1587 = stablehlo.broadcast_in_dim %arg142, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1588 = stablehlo.broadcast_in_dim %1587, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1589 = stablehlo.add %1586, %1588 : tensor<64x512x768xf32>
    %1590 = stablehlo.transpose %arg143, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1591 = stablehlo.dot_general %1589, %1590, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1592 = stablehlo.broadcast_in_dim %arg144, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1593 = stablehlo.broadcast_in_dim %1592, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1594 = stablehlo.add %1591, %1593 : tensor<64x512x3072xf32>
    %1595 = stablehlo.multiply %1594, %1594 : tensor<64x512x3072xf32>
    %1596 = stablehlo.multiply %1595, %1594 : tensor<64x512x3072xf32>
    %1597 = stablehlo.multiply %1594, %1594 : tensor<64x512x3072xf32>
    %1598 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1599 = stablehlo.multiply %1598, %1597 : tensor<64x512x3072xf32>
    %1600 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1601 = stablehlo.multiply %1600, %1596 : tensor<64x512x3072xf32>
    %1602 = stablehlo.add %1594, %1601 : tensor<64x512x3072xf32>
    %1603 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1604 = stablehlo.multiply %1603, %1602 : tensor<64x512x3072xf32>
    %1605 = stablehlo.tanh %1604 : tensor<64x512x3072xf32>
    %1606 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1607 = stablehlo.broadcast_in_dim %1606, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1608 = stablehlo.subtract %1607, %1605 : tensor<64x512x3072xf32>
    %1609 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1610 = stablehlo.add %1609, %1605 : tensor<64x512x3072xf32>
    %1611 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1612 = stablehlo.multiply %1611, %1610 : tensor<64x512x3072xf32>
    %1613 = stablehlo.multiply %1594, %1612 : tensor<64x512x3072xf32>
    %1614 = stablehlo.transpose %arg145, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1615 = stablehlo.dot_general %1613, %1614, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1616 = stablehlo.broadcast_in_dim %arg146, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1617 = stablehlo.broadcast_in_dim %1616, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1618 = stablehlo.add %1615, %1617 : tensor<64x512x768xf32>
    %1619 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1620 = stablehlo.add %1546, %c_12 : tensor<i32>
    %1621 = stablehlo.convert %1620 : (tensor<i32>) -> tensor<ui32>
    %1622 = call @_threefry_fold_in(%arg612, %1621) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1623 = stablehlo.convert %1619 : tensor<f32>
    %1624 = call @_bernoulli(%1622, %1623) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1625 = stablehlo.convert %1619 : tensor<f32>
    %1626 = stablehlo.broadcast_in_dim %1625, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1627 = stablehlo.divide %1618, %1626 : tensor<64x512x768xf32>
    %1628 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1629 = stablehlo.select %1624, %1627, %1628 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1630 = stablehlo.add %1629, %1589 : tensor<64x512x768xf32>
    %cst_67 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1631 = stablehlo.reduce(%1630 init: %cst_67) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1632 = stablehlo.broadcast_in_dim %1631, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1633 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1634 = stablehlo.divide %1632, %1633 : tensor<64x512x1xf32>
    %1635:4 = call @_var(%1630, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1636 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1637 = stablehlo.maximum %1635#0, %1636 : tensor<64x512x1xf32>
    %1638 = stablehlo.compare  EQ, %1635#0, %1637,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1639 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1640 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1641 = stablehlo.select %1638, %1639, %1640 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1642 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1643 = stablehlo.compare  EQ, %1642, %1637,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1644 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1645 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1646 = stablehlo.select %1643, %1644, %1645 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1647 = stablehlo.divide %1641, %1646 : tensor<64x512x1xf32>
    %1648 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1649 = stablehlo.add %1637, %1648 : tensor<64x512x1xf32>
    %1650 = stablehlo.rsqrt %1649 : tensor<64x512x1xf32>
    %1651 = stablehlo.divide %1650, %1649 : tensor<64x512x1xf32>
    %1652 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1653 = stablehlo.multiply %1652, %1651 : tensor<64x512x1xf32>
    %1654 = stablehlo.broadcast_in_dim %1634, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1655 = stablehlo.subtract %1630, %1654 : tensor<64x512x768xf32>
    %1656 = stablehlo.broadcast_in_dim %1650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1657 = stablehlo.multiply %1655, %1656 : tensor<64x512x768xf32>
    %1658 = stablehlo.broadcast_in_dim %arg147, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1659 = stablehlo.broadcast_in_dim %1658, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1660 = stablehlo.multiply %1659, %1657 : tensor<64x512x768xf32>
    %1661 = stablehlo.broadcast_in_dim %arg148, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1662 = stablehlo.broadcast_in_dim %1661, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1663 = stablehlo.add %1660, %1662 : tensor<64x512x768xf32>
    %1664 = stablehlo.transpose %arg149, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1665 = stablehlo.dot_general %1663, %1664, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1666 = stablehlo.broadcast_in_dim %arg150, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1667 = stablehlo.broadcast_in_dim %1666, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1668 = stablehlo.add %1665, %1667 : tensor<64x512x768xf32>
    %1669 = stablehlo.transpose %arg153, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1670 = stablehlo.dot_general %1663, %1669, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1671 = stablehlo.broadcast_in_dim %arg154, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1672 = stablehlo.broadcast_in_dim %1671, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1673 = stablehlo.add %1670, %1672 : tensor<64x512x768xf32>
    %1674 = stablehlo.transpose %arg151, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1675 = stablehlo.dot_general %1663, %1674, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1676 = stablehlo.broadcast_in_dim %arg152, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1677 = stablehlo.broadcast_in_dim %1676, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1678 = stablehlo.add %1675, %1677 : tensor<64x512x768xf32>
    %1679 = stablehlo.reshape %1668 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1680 = stablehlo.reshape %1673 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1681 = stablehlo.reshape %1678 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1682 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1683 = stablehlo.add %1620, %c_12 : tensor<i32>
    %1684 = stablehlo.convert %1683 : (tensor<i32>) -> tensor<ui32>
    %1685 = call @_threefry_fold_in(%arg612, %1684) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1686 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1687 = stablehlo.convert %1686 : tensor<f32>
    %1688 = stablehlo.broadcast_in_dim %1687, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1689 = stablehlo.divide %1679, %1688 : tensor<64x512x12x64xf32>
    %1690 = stablehlo.dot_general %1680, %1689, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1691 = stablehlo.transpose %1690, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1692:2 = call @_where_61(%1682, %1691, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_68 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1693 = stablehlo.reduce(%1692#0 init: %cst_68) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1694 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1695 = stablehlo.maximum %1694, %1693 : tensor<64x512x12xf32>
    %1696 = stablehlo.broadcast_in_dim %1695, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1697 = stablehlo.broadcast_in_dim %1696, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1698 = stablehlo.subtract %1692#0, %1697 : tensor<64x512x12x512xf32>
    %1699 = stablehlo.exponential %1698 : tensor<64x512x12x512xf32>
    %cst_69 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1700 = stablehlo.reduce(%1699 init: %cst_69) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1701 = stablehlo.broadcast_in_dim %1700, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1702 = stablehlo.broadcast_in_dim %1701, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1703 = stablehlo.divide %1699, %1702 : tensor<64x512x12x512xf32>
    %1704 = stablehlo.multiply %1701, %1701 : tensor<64x512x12x1xf32>
    %cst_70 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1705 = stablehlo.broadcast_in_dim %cst_70, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1706 = stablehlo.divide %1705, %1704 : tensor<64x512x12x1xf32>
    %1707 = call @_bernoulli_74(%1685, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1708 = stablehlo.broadcast_in_dim %1707, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1709 = stablehlo.convert %1708 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1710 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1711 = stablehlo.divide %1709, %1710 : tensor<64x512x12x512xf32>
    %1712 = stablehlo.multiply %1703, %1711 : tensor<64x512x12x512xf32>
    %1713 = stablehlo.dot_general %1681, %1712, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1714 = stablehlo.transpose %1713, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1715 = stablehlo.reshape %1714 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1716 = stablehlo.transpose %arg155, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1717 = stablehlo.dot_general %1715, %1716, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1718 = stablehlo.broadcast_in_dim %arg156, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1719 = stablehlo.broadcast_in_dim %1718, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1720 = stablehlo.add %1717, %1719 : tensor<64x512x768xf32>
    %1721 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1722 = stablehlo.add %1683, %c_12 : tensor<i32>
    %1723 = stablehlo.convert %1722 : (tensor<i32>) -> tensor<ui32>
    %1724 = call @_threefry_fold_in(%arg612, %1723) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1725 = stablehlo.convert %1721 : tensor<f32>
    %1726 = call @_bernoulli(%1724, %1725) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1727 = stablehlo.convert %1721 : tensor<f32>
    %1728 = stablehlo.broadcast_in_dim %1727, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1729 = stablehlo.divide %1720, %1728 : tensor<64x512x768xf32>
    %1730 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1731 = stablehlo.select %1726, %1729, %1730 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1732 = stablehlo.add %1731, %1663 : tensor<64x512x768xf32>
    %cst_71 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1733 = stablehlo.reduce(%1732 init: %cst_71) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1734 = stablehlo.broadcast_in_dim %1733, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1735 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1736 = stablehlo.divide %1734, %1735 : tensor<64x512x1xf32>
    %1737:4 = call @_var(%1732, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1738 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1739 = stablehlo.maximum %1737#0, %1738 : tensor<64x512x1xf32>
    %1740 = stablehlo.compare  EQ, %1737#0, %1739,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1741 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1742 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1743 = stablehlo.select %1740, %1741, %1742 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1744 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1745 = stablehlo.compare  EQ, %1744, %1739,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1746 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1747 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1748 = stablehlo.select %1745, %1746, %1747 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1749 = stablehlo.divide %1743, %1748 : tensor<64x512x1xf32>
    %1750 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1751 = stablehlo.add %1739, %1750 : tensor<64x512x1xf32>
    %1752 = stablehlo.rsqrt %1751 : tensor<64x512x1xf32>
    %1753 = stablehlo.divide %1752, %1751 : tensor<64x512x1xf32>
    %1754 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1755 = stablehlo.multiply %1754, %1753 : tensor<64x512x1xf32>
    %1756 = stablehlo.broadcast_in_dim %1736, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1757 = stablehlo.subtract %1732, %1756 : tensor<64x512x768xf32>
    %1758 = stablehlo.broadcast_in_dim %1752, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1759 = stablehlo.multiply %1757, %1758 : tensor<64x512x768xf32>
    %1760 = stablehlo.broadcast_in_dim %arg157, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1761 = stablehlo.broadcast_in_dim %1760, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1762 = stablehlo.multiply %1761, %1759 : tensor<64x512x768xf32>
    %1763 = stablehlo.broadcast_in_dim %arg158, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1764 = stablehlo.broadcast_in_dim %1763, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1765 = stablehlo.add %1762, %1764 : tensor<64x512x768xf32>
    %1766 = stablehlo.transpose %arg159, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1767 = stablehlo.dot_general %1765, %1766, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1768 = stablehlo.broadcast_in_dim %arg160, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1769 = stablehlo.broadcast_in_dim %1768, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1770 = stablehlo.add %1767, %1769 : tensor<64x512x3072xf32>
    %1771 = stablehlo.multiply %1770, %1770 : tensor<64x512x3072xf32>
    %1772 = stablehlo.multiply %1771, %1770 : tensor<64x512x3072xf32>
    %1773 = stablehlo.multiply %1770, %1770 : tensor<64x512x3072xf32>
    %1774 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1775 = stablehlo.multiply %1774, %1773 : tensor<64x512x3072xf32>
    %1776 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1777 = stablehlo.multiply %1776, %1772 : tensor<64x512x3072xf32>
    %1778 = stablehlo.add %1770, %1777 : tensor<64x512x3072xf32>
    %1779 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1780 = stablehlo.multiply %1779, %1778 : tensor<64x512x3072xf32>
    %1781 = stablehlo.tanh %1780 : tensor<64x512x3072xf32>
    %1782 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1783 = stablehlo.broadcast_in_dim %1782, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1784 = stablehlo.subtract %1783, %1781 : tensor<64x512x3072xf32>
    %1785 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1786 = stablehlo.add %1785, %1781 : tensor<64x512x3072xf32>
    %1787 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1788 = stablehlo.multiply %1787, %1786 : tensor<64x512x3072xf32>
    %1789 = stablehlo.multiply %1770, %1788 : tensor<64x512x3072xf32>
    %1790 = stablehlo.transpose %arg161, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1791 = stablehlo.dot_general %1789, %1790, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1792 = stablehlo.broadcast_in_dim %arg162, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1793 = stablehlo.broadcast_in_dim %1792, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1794 = stablehlo.add %1791, %1793 : tensor<64x512x768xf32>
    %1795 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1796 = stablehlo.add %1722, %c_12 : tensor<i32>
    %1797 = stablehlo.convert %1796 : (tensor<i32>) -> tensor<ui32>
    %1798 = call @_threefry_fold_in(%arg612, %1797) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1799 = stablehlo.convert %1795 : tensor<f32>
    %1800 = call @_bernoulli(%1798, %1799) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1801 = stablehlo.convert %1795 : tensor<f32>
    %1802 = stablehlo.broadcast_in_dim %1801, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1803 = stablehlo.divide %1794, %1802 : tensor<64x512x768xf32>
    %1804 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1805 = stablehlo.select %1800, %1803, %1804 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1806 = stablehlo.add %1805, %1765 : tensor<64x512x768xf32>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1807 = stablehlo.reduce(%1806 init: %cst_72) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1808 = stablehlo.broadcast_in_dim %1807, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1809 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1810 = stablehlo.divide %1808, %1809 : tensor<64x512x1xf32>
    %1811:4 = call @_var(%1806, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1812 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1813 = stablehlo.maximum %1811#0, %1812 : tensor<64x512x1xf32>
    %1814 = stablehlo.compare  EQ, %1811#0, %1813,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1815 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1816 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1817 = stablehlo.select %1814, %1815, %1816 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1818 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1819 = stablehlo.compare  EQ, %1818, %1813,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1820 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1821 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1822 = stablehlo.select %1819, %1820, %1821 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1823 = stablehlo.divide %1817, %1822 : tensor<64x512x1xf32>
    %1824 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1825 = stablehlo.add %1813, %1824 : tensor<64x512x1xf32>
    %1826 = stablehlo.rsqrt %1825 : tensor<64x512x1xf32>
    %1827 = stablehlo.divide %1826, %1825 : tensor<64x512x1xf32>
    %1828 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1829 = stablehlo.multiply %1828, %1827 : tensor<64x512x1xf32>
    %1830 = stablehlo.broadcast_in_dim %1810, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1831 = stablehlo.subtract %1806, %1830 : tensor<64x512x768xf32>
    %1832 = stablehlo.broadcast_in_dim %1826, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1833 = stablehlo.multiply %1831, %1832 : tensor<64x512x768xf32>
    %1834 = stablehlo.broadcast_in_dim %arg163, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1835 = stablehlo.broadcast_in_dim %1834, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1836 = stablehlo.multiply %1835, %1833 : tensor<64x512x768xf32>
    %1837 = stablehlo.broadcast_in_dim %arg164, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1838 = stablehlo.broadcast_in_dim %1837, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1839 = stablehlo.add %1836, %1838 : tensor<64x512x768xf32>
    %1840 = stablehlo.transpose %arg165, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1841 = stablehlo.dot_general %1839, %1840, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1842 = stablehlo.broadcast_in_dim %arg166, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1843 = stablehlo.broadcast_in_dim %1842, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1844 = stablehlo.add %1841, %1843 : tensor<64x512x768xf32>
    %1845 = stablehlo.transpose %arg169, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1846 = stablehlo.dot_general %1839, %1845, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1847 = stablehlo.broadcast_in_dim %arg170, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1848 = stablehlo.broadcast_in_dim %1847, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1849 = stablehlo.add %1846, %1848 : tensor<64x512x768xf32>
    %1850 = stablehlo.transpose %arg167, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1851 = stablehlo.dot_general %1839, %1850, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1852 = stablehlo.broadcast_in_dim %arg168, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1853 = stablehlo.broadcast_in_dim %1852, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1854 = stablehlo.add %1851, %1853 : tensor<64x512x768xf32>
    %1855 = stablehlo.reshape %1844 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1856 = stablehlo.reshape %1849 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1857 = stablehlo.reshape %1854 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1858 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1859 = stablehlo.add %1796, %c_12 : tensor<i32>
    %1860 = stablehlo.convert %1859 : (tensor<i32>) -> tensor<ui32>
    %1861 = call @_threefry_fold_in(%arg612, %1860) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1862 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1863 = stablehlo.convert %1862 : tensor<f32>
    %1864 = stablehlo.broadcast_in_dim %1863, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1865 = stablehlo.divide %1855, %1864 : tensor<64x512x12x64xf32>
    %1866 = stablehlo.dot_general %1856, %1865, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1867 = stablehlo.transpose %1866, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1868:2 = call @_where_61(%1858, %1867, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_73 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1869 = stablehlo.reduce(%1868#0 init: %cst_73) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1870 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1871 = stablehlo.maximum %1870, %1869 : tensor<64x512x12xf32>
    %1872 = stablehlo.broadcast_in_dim %1871, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1873 = stablehlo.broadcast_in_dim %1872, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1874 = stablehlo.subtract %1868#0, %1873 : tensor<64x512x12x512xf32>
    %1875 = stablehlo.exponential %1874 : tensor<64x512x12x512xf32>
    %cst_74 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1876 = stablehlo.reduce(%1875 init: %cst_74) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1877 = stablehlo.broadcast_in_dim %1876, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1878 = stablehlo.broadcast_in_dim %1877, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1879 = stablehlo.divide %1875, %1878 : tensor<64x512x12x512xf32>
    %1880 = stablehlo.multiply %1877, %1877 : tensor<64x512x12x1xf32>
    %cst_75 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1881 = stablehlo.broadcast_in_dim %cst_75, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1882 = stablehlo.divide %1881, %1880 : tensor<64x512x12x1xf32>
    %1883 = call @_bernoulli_74(%1861, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %1884 = stablehlo.broadcast_in_dim %1883, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %1885 = stablehlo.convert %1884 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %1886 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1887 = stablehlo.divide %1885, %1886 : tensor<64x512x12x512xf32>
    %1888 = stablehlo.multiply %1879, %1887 : tensor<64x512x12x512xf32>
    %1889 = stablehlo.dot_general %1857, %1888, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1890 = stablehlo.transpose %1889, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1891 = stablehlo.reshape %1890 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1892 = stablehlo.transpose %arg171, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1893 = stablehlo.dot_general %1891, %1892, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1894 = stablehlo.broadcast_in_dim %arg172, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1895 = stablehlo.broadcast_in_dim %1894, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1896 = stablehlo.add %1893, %1895 : tensor<64x512x768xf32>
    %1897 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1898 = stablehlo.add %1859, %c_12 : tensor<i32>
    %1899 = stablehlo.convert %1898 : (tensor<i32>) -> tensor<ui32>
    %1900 = call @_threefry_fold_in(%arg612, %1899) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1901 = stablehlo.convert %1897 : tensor<f32>
    %1902 = call @_bernoulli(%1900, %1901) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1903 = stablehlo.convert %1897 : tensor<f32>
    %1904 = stablehlo.broadcast_in_dim %1903, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1905 = stablehlo.divide %1896, %1904 : tensor<64x512x768xf32>
    %1906 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1907 = stablehlo.select %1902, %1905, %1906 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1908 = stablehlo.add %1907, %1839 : tensor<64x512x768xf32>
    %cst_76 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1909 = stablehlo.reduce(%1908 init: %cst_76) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1910 = stablehlo.broadcast_in_dim %1909, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1911 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1912 = stablehlo.divide %1910, %1911 : tensor<64x512x1xf32>
    %1913:4 = call @_var(%1908, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1914 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1915 = stablehlo.maximum %1913#0, %1914 : tensor<64x512x1xf32>
    %1916 = stablehlo.compare  EQ, %1913#0, %1915,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1917 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1918 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1919 = stablehlo.select %1916, %1917, %1918 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1920 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1921 = stablehlo.compare  EQ, %1920, %1915,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1922 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1923 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1924 = stablehlo.select %1921, %1922, %1923 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1925 = stablehlo.divide %1919, %1924 : tensor<64x512x1xf32>
    %1926 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1927 = stablehlo.add %1915, %1926 : tensor<64x512x1xf32>
    %1928 = stablehlo.rsqrt %1927 : tensor<64x512x1xf32>
    %1929 = stablehlo.divide %1928, %1927 : tensor<64x512x1xf32>
    %1930 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1931 = stablehlo.multiply %1930, %1929 : tensor<64x512x1xf32>
    %1932 = stablehlo.broadcast_in_dim %1912, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1933 = stablehlo.subtract %1908, %1932 : tensor<64x512x768xf32>
    %1934 = stablehlo.broadcast_in_dim %1928, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1935 = stablehlo.multiply %1933, %1934 : tensor<64x512x768xf32>
    %1936 = stablehlo.broadcast_in_dim %arg173, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1937 = stablehlo.broadcast_in_dim %1936, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1938 = stablehlo.multiply %1937, %1935 : tensor<64x512x768xf32>
    %1939 = stablehlo.broadcast_in_dim %arg174, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1940 = stablehlo.broadcast_in_dim %1939, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1941 = stablehlo.add %1938, %1940 : tensor<64x512x768xf32>
    %1942 = stablehlo.transpose %arg175, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1943 = stablehlo.dot_general %1941, %1942, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1944 = stablehlo.broadcast_in_dim %arg176, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1945 = stablehlo.broadcast_in_dim %1944, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1946 = stablehlo.add %1943, %1945 : tensor<64x512x3072xf32>
    %1947 = stablehlo.multiply %1946, %1946 : tensor<64x512x3072xf32>
    %1948 = stablehlo.multiply %1947, %1946 : tensor<64x512x3072xf32>
    %1949 = stablehlo.multiply %1946, %1946 : tensor<64x512x3072xf32>
    %1950 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1951 = stablehlo.multiply %1950, %1949 : tensor<64x512x3072xf32>
    %1952 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1953 = stablehlo.multiply %1952, %1948 : tensor<64x512x3072xf32>
    %1954 = stablehlo.add %1946, %1953 : tensor<64x512x3072xf32>
    %1955 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1956 = stablehlo.multiply %1955, %1954 : tensor<64x512x3072xf32>
    %1957 = stablehlo.tanh %1956 : tensor<64x512x3072xf32>
    %1958 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1959 = stablehlo.broadcast_in_dim %1958, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1960 = stablehlo.subtract %1959, %1957 : tensor<64x512x3072xf32>
    %1961 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1962 = stablehlo.add %1961, %1957 : tensor<64x512x3072xf32>
    %1963 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1964 = stablehlo.multiply %1963, %1962 : tensor<64x512x3072xf32>
    %1965 = stablehlo.multiply %1946, %1964 : tensor<64x512x3072xf32>
    %1966 = stablehlo.transpose %arg177, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1967 = stablehlo.dot_general %1965, %1966, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1968 = stablehlo.broadcast_in_dim %arg178, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1969 = stablehlo.broadcast_in_dim %1968, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1970 = stablehlo.add %1967, %1969 : tensor<64x512x768xf32>
    %1971 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %1972 = stablehlo.add %1898, %c_12 : tensor<i32>
    %1973 = stablehlo.convert %1972 : (tensor<i32>) -> tensor<ui32>
    %1974 = call @_threefry_fold_in(%arg612, %1973) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1975 = stablehlo.convert %1971 : tensor<f32>
    %1976 = call @_bernoulli(%1974, %1975) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1977 = stablehlo.convert %1971 : tensor<f32>
    %1978 = stablehlo.broadcast_in_dim %1977, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1979 = stablehlo.divide %1970, %1978 : tensor<64x512x768xf32>
    %1980 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1981 = stablehlo.select %1976, %1979, %1980 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1982 = stablehlo.add %1981, %1941 : tensor<64x512x768xf32>
    %cst_77 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1983 = stablehlo.reduce(%1982 init: %cst_77) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1984 = stablehlo.broadcast_in_dim %1983, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1985 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1986 = stablehlo.divide %1984, %1985 : tensor<64x512x1xf32>
    %1987:4 = call @_var(%1982, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1988 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1989 = stablehlo.maximum %1987#0, %1988 : tensor<64x512x1xf32>
    %1990 = stablehlo.compare  EQ, %1987#0, %1989,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1991 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1992 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1993 = stablehlo.select %1990, %1991, %1992 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1994 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1995 = stablehlo.compare  EQ, %1994, %1989,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1996 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1997 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1998 = stablehlo.select %1995, %1996, %1997 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1999 = stablehlo.divide %1993, %1998 : tensor<64x512x1xf32>
    %2000 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2001 = stablehlo.add %1989, %2000 : tensor<64x512x1xf32>
    %2002 = stablehlo.rsqrt %2001 : tensor<64x512x1xf32>
    %2003 = stablehlo.divide %2002, %2001 : tensor<64x512x1xf32>
    %2004 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2005 = stablehlo.multiply %2004, %2003 : tensor<64x512x1xf32>
    %2006 = stablehlo.broadcast_in_dim %1986, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2007 = stablehlo.subtract %1982, %2006 : tensor<64x512x768xf32>
    %2008 = stablehlo.broadcast_in_dim %2002, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2009 = stablehlo.multiply %2007, %2008 : tensor<64x512x768xf32>
    %2010 = stablehlo.broadcast_in_dim %arg179, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2011 = stablehlo.broadcast_in_dim %2010, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2012 = stablehlo.multiply %2011, %2009 : tensor<64x512x768xf32>
    %2013 = stablehlo.broadcast_in_dim %arg180, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2014 = stablehlo.broadcast_in_dim %2013, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2015 = stablehlo.add %2012, %2014 : tensor<64x512x768xf32>
    %2016 = stablehlo.transpose %arg181, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2017 = stablehlo.dot_general %2015, %2016, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2018 = stablehlo.broadcast_in_dim %arg182, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2019 = stablehlo.broadcast_in_dim %2018, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2020 = stablehlo.add %2017, %2019 : tensor<64x512x768xf32>
    %2021 = stablehlo.transpose %arg185, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2022 = stablehlo.dot_general %2015, %2021, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2023 = stablehlo.broadcast_in_dim %arg186, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2024 = stablehlo.broadcast_in_dim %2023, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2025 = stablehlo.add %2022, %2024 : tensor<64x512x768xf32>
    %2026 = stablehlo.transpose %arg183, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2027 = stablehlo.dot_general %2015, %2026, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2028 = stablehlo.broadcast_in_dim %arg184, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2029 = stablehlo.broadcast_in_dim %2028, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2030 = stablehlo.add %2027, %2029 : tensor<64x512x768xf32>
    %2031 = stablehlo.reshape %2020 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2032 = stablehlo.reshape %2025 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2033 = stablehlo.reshape %2030 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2034 = stablehlo.broadcast_in_dim %79, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %2035 = stablehlo.add %1972, %c_12 : tensor<i32>
    %2036 = stablehlo.convert %2035 : (tensor<i32>) -> tensor<ui32>
    %2037 = call @_threefry_fold_in(%arg612, %2036) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2038 = stablehlo.sqrt %cst_15 : tensor<f32>
    %2039 = stablehlo.convert %2038 : tensor<f32>
    %2040 = stablehlo.broadcast_in_dim %2039, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2041 = stablehlo.divide %2031, %2040 : tensor<64x512x12x64xf32>
    %2042 = stablehlo.dot_general %2032, %2041, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2043 = stablehlo.transpose %2042, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2044:2 = call @_where_61(%2034, %2043, %cst_16) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_78 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2045 = stablehlo.reduce(%2044#0 init: %cst_78) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2046 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %2047 = stablehlo.maximum %2046, %2045 : tensor<64x512x12xf32>
    %2048 = stablehlo.broadcast_in_dim %2047, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2049 = stablehlo.broadcast_in_dim %2048, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2050 = stablehlo.subtract %2044#0, %2049 : tensor<64x512x12x512xf32>
    %2051 = stablehlo.exponential %2050 : tensor<64x512x12x512xf32>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2052 = stablehlo.reduce(%2051 init: %cst_79) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2053 = stablehlo.broadcast_in_dim %2052, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2054 = stablehlo.broadcast_in_dim %2053, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2055 = stablehlo.divide %2051, %2054 : tensor<64x512x12x512xf32>
    %2056 = stablehlo.multiply %2053, %2053 : tensor<64x512x12x1xf32>
    %cst_80 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2057 = stablehlo.broadcast_in_dim %cst_80, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %2058 = stablehlo.divide %2057, %2056 : tensor<64x512x12x1xf32>
    %2059 = call @_bernoulli_74(%2037, %cst_21) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %2060 = stablehlo.broadcast_in_dim %2059, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %2061 = stablehlo.convert %2060 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xf32>
    %2062 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %2063 = stablehlo.divide %2061, %2062 : tensor<64x512x12x512xf32>
    %2064 = stablehlo.multiply %2055, %2063 : tensor<64x512x12x512xf32>
    %2065 = stablehlo.dot_general %2033, %2064, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2066 = stablehlo.transpose %2065, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2067 = stablehlo.reshape %2066 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2068 = stablehlo.transpose %arg187, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2069 = stablehlo.dot_general %2067, %2068, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2070 = stablehlo.broadcast_in_dim %arg188, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2071 = stablehlo.broadcast_in_dim %2070, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2072 = stablehlo.add %2069, %2071 : tensor<64x512x768xf32>
    %2073 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %2074 = stablehlo.add %2035, %c_12 : tensor<i32>
    %2075 = stablehlo.convert %2074 : (tensor<i32>) -> tensor<ui32>
    %2076 = call @_threefry_fold_in(%arg612, %2075) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2077 = stablehlo.convert %2073 : tensor<f32>
    %2078 = call @_bernoulli(%2076, %2077) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2079 = stablehlo.convert %2073 : tensor<f32>
    %2080 = stablehlo.broadcast_in_dim %2079, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2081 = stablehlo.divide %2072, %2080 : tensor<64x512x768xf32>
    %2082 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2083 = stablehlo.select %2078, %2081, %2082 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2084 = stablehlo.add %2083, %2015 : tensor<64x512x768xf32>
    %cst_81 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2085 = stablehlo.reduce(%2084 init: %cst_81) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2086 = stablehlo.broadcast_in_dim %2085, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2087 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2088 = stablehlo.divide %2086, %2087 : tensor<64x512x1xf32>
    %2089:4 = call @_var(%2084, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %2090 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2091 = stablehlo.maximum %2089#0, %2090 : tensor<64x512x1xf32>
    %2092 = stablehlo.compare  EQ, %2089#0, %2091,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2093 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2094 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2095 = stablehlo.select %2092, %2093, %2094 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2096 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2097 = stablehlo.compare  EQ, %2096, %2091,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2098 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2099 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2100 = stablehlo.select %2097, %2098, %2099 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2101 = stablehlo.divide %2095, %2100 : tensor<64x512x1xf32>
    %2102 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2103 = stablehlo.add %2091, %2102 : tensor<64x512x1xf32>
    %2104 = stablehlo.rsqrt %2103 : tensor<64x512x1xf32>
    %2105 = stablehlo.divide %2104, %2103 : tensor<64x512x1xf32>
    %2106 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2107 = stablehlo.multiply %2106, %2105 : tensor<64x512x1xf32>
    %2108 = stablehlo.broadcast_in_dim %2088, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2109 = stablehlo.subtract %2084, %2108 : tensor<64x512x768xf32>
    %2110 = stablehlo.broadcast_in_dim %2104, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2111 = stablehlo.multiply %2109, %2110 : tensor<64x512x768xf32>
    %2112 = stablehlo.broadcast_in_dim %arg189, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2113 = stablehlo.broadcast_in_dim %2112, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2114 = stablehlo.multiply %2113, %2111 : tensor<64x512x768xf32>
    %2115 = stablehlo.broadcast_in_dim %arg190, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2116 = stablehlo.broadcast_in_dim %2115, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2117 = stablehlo.add %2114, %2116 : tensor<64x512x768xf32>
    %2118 = stablehlo.transpose %arg191, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2119 = stablehlo.dot_general %2117, %2118, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2120 = stablehlo.broadcast_in_dim %arg192, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %2121 = stablehlo.broadcast_in_dim %2120, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2122 = stablehlo.add %2119, %2121 : tensor<64x512x3072xf32>
    %2123 = stablehlo.multiply %2122, %2122 : tensor<64x512x3072xf32>
    %2124 = stablehlo.multiply %2123, %2122 : tensor<64x512x3072xf32>
    %2125 = stablehlo.multiply %2122, %2122 : tensor<64x512x3072xf32>
    %2126 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2127 = stablehlo.multiply %2126, %2125 : tensor<64x512x3072xf32>
    %2128 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2129 = stablehlo.multiply %2128, %2124 : tensor<64x512x3072xf32>
    %2130 = stablehlo.add %2122, %2129 : tensor<64x512x3072xf32>
    %2131 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2132 = stablehlo.multiply %2131, %2130 : tensor<64x512x3072xf32>
    %2133 = stablehlo.tanh %2132 : tensor<64x512x3072xf32>
    %2134 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %2135 = stablehlo.broadcast_in_dim %2134, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2136 = stablehlo.subtract %2135, %2133 : tensor<64x512x3072xf32>
    %2137 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2138 = stablehlo.add %2137, %2133 : tensor<64x512x3072xf32>
    %2139 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2140 = stablehlo.multiply %2139, %2138 : tensor<64x512x3072xf32>
    %2141 = stablehlo.multiply %2122, %2140 : tensor<64x512x3072xf32>
    %2142 = stablehlo.transpose %arg193, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2143 = stablehlo.dot_general %2141, %2142, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2144 = stablehlo.broadcast_in_dim %arg194, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2145 = stablehlo.broadcast_in_dim %2144, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2146 = stablehlo.add %2143, %2145 : tensor<64x512x768xf32>
    %2147 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %2148 = stablehlo.add %2074, %c_12 : tensor<i32>
    %2149 = stablehlo.convert %2148 : (tensor<i32>) -> tensor<ui32>
    %2150 = call @_threefry_fold_in(%arg612, %2149) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2151 = stablehlo.convert %2147 : tensor<f32>
    %2152 = call @_bernoulli(%2150, %2151) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2153 = stablehlo.convert %2147 : tensor<f32>
    %2154 = stablehlo.broadcast_in_dim %2153, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2155 = stablehlo.divide %2146, %2154 : tensor<64x512x768xf32>
    %2156 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2157 = stablehlo.select %2152, %2155, %2156 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2158 = stablehlo.add %2157, %2117 : tensor<64x512x768xf32>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2159 = stablehlo.reduce(%2158 init: %cst_82) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2160 = stablehlo.broadcast_in_dim %2159, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2161 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2162 = stablehlo.divide %2160, %2161 : tensor<64x512x1xf32>
    %2163:4 = call @_var(%2158, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %2164 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2165 = stablehlo.maximum %2163#0, %2164 : tensor<64x512x1xf32>
    %2166 = stablehlo.compare  EQ, %2163#0, %2165,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2167 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2168 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2169 = stablehlo.select %2166, %2167, %2168 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2170 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2171 = stablehlo.compare  EQ, %2170, %2165,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2172 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2173 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2174 = stablehlo.select %2171, %2172, %2173 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2175 = stablehlo.divide %2169, %2174 : tensor<64x512x1xf32>
    %2176 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2177 = stablehlo.add %2165, %2176 : tensor<64x512x1xf32>
    %2178 = stablehlo.rsqrt %2177 : tensor<64x512x1xf32>
    %2179 = stablehlo.divide %2178, %2177 : tensor<64x512x1xf32>
    %2180 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2181 = stablehlo.multiply %2180, %2179 : tensor<64x512x1xf32>
    %2182 = stablehlo.broadcast_in_dim %2162, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2183 = stablehlo.subtract %2158, %2182 : tensor<64x512x768xf32>
    %2184 = stablehlo.broadcast_in_dim %2178, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2185 = stablehlo.multiply %2183, %2184 : tensor<64x512x768xf32>
    %2186 = stablehlo.broadcast_in_dim %arg195, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2187 = stablehlo.broadcast_in_dim %2186, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2188 = stablehlo.multiply %2187, %2185 : tensor<64x512x768xf32>
    %2189 = stablehlo.broadcast_in_dim %arg196, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2190 = stablehlo.broadcast_in_dim %2189, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2191 = stablehlo.add %2188, %2190 : tensor<64x512x768xf32>
    %2192 = stablehlo.transpose %arg197, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2193 = stablehlo.dot_general %2191, %2192, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2194 = stablehlo.broadcast_in_dim %arg198, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2195 = stablehlo.broadcast_in_dim %2194, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2196 = stablehlo.add %2193, %2195 : tensor<64x512x768xf32>
    %2197 = stablehlo.multiply %2196, %2196 : tensor<64x512x768xf32>
    %2198 = stablehlo.multiply %2197, %2196 : tensor<64x512x768xf32>
    %2199 = stablehlo.multiply %2196, %2196 : tensor<64x512x768xf32>
    %2200 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2201 = stablehlo.multiply %2200, %2199 : tensor<64x512x768xf32>
    %2202 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2203 = stablehlo.multiply %2202, %2198 : tensor<64x512x768xf32>
    %2204 = stablehlo.add %2196, %2203 : tensor<64x512x768xf32>
    %2205 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2206 = stablehlo.multiply %2205, %2204 : tensor<64x512x768xf32>
    %2207 = stablehlo.tanh %2206 : tensor<64x512x768xf32>
    %2208 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %2209 = stablehlo.broadcast_in_dim %2208, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2210 = stablehlo.subtract %2209, %2207 : tensor<64x512x768xf32>
    %2211 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2212 = stablehlo.add %2211, %2207 : tensor<64x512x768xf32>
    %2213 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2214 = stablehlo.multiply %2213, %2212 : tensor<64x512x768xf32>
    %2215 = stablehlo.multiply %2196, %2214 : tensor<64x512x768xf32>
    %cst_83 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2216 = stablehlo.reduce(%2215 init: %cst_83) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2217 = stablehlo.broadcast_in_dim %2216, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2218 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2219 = stablehlo.divide %2217, %2218 : tensor<64x512x1xf32>
    %2220:4 = call @_var(%2215, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %2221 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2222 = stablehlo.maximum %2220#0, %2221 : tensor<64x512x1xf32>
    %2223 = stablehlo.compare  EQ, %2220#0, %2222,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2224 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2225 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2226 = stablehlo.select %2223, %2224, %2225 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2227 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2228 = stablehlo.compare  EQ, %2227, %2222,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %2229 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2230 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2231 = stablehlo.select %2228, %2229, %2230 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %2232 = stablehlo.divide %2226, %2231 : tensor<64x512x1xf32>
    %2233 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2234 = stablehlo.add %2222, %2233 : tensor<64x512x1xf32>
    %2235 = stablehlo.rsqrt %2234 : tensor<64x512x1xf32>
    %2236 = stablehlo.divide %2235, %2234 : tensor<64x512x1xf32>
    %2237 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2238 = stablehlo.multiply %2237, %2236 : tensor<64x512x1xf32>
    %2239 = stablehlo.broadcast_in_dim %2219, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2240 = stablehlo.subtract %2215, %2239 : tensor<64x512x768xf32>
    %2241 = stablehlo.broadcast_in_dim %2235, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2242 = stablehlo.multiply %2240, %2241 : tensor<64x512x768xf32>
    %2243 = stablehlo.broadcast_in_dim %arg199, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2244 = stablehlo.broadcast_in_dim %2243, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2245 = stablehlo.multiply %2244, %2242 : tensor<64x512x768xf32>
    %2246 = stablehlo.broadcast_in_dim %arg200, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2247 = stablehlo.broadcast_in_dim %2246, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2248 = stablehlo.add %2245, %2247 : tensor<64x512x768xf32>
    %2249 = stablehlo.dot_general %2248, %arg0, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<30522x768xf32>) -> tensor<64x512x30522xf32>
    %2250 = stablehlo.broadcast_in_dim %arg201, dims = [2] : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %2251 = stablehlo.broadcast_in_dim %2250, dims = [0, 1, 2] : (tensor<1x1x30522xf32>) -> tensor<64x512x30522xf32>
    %2252 = stablehlo.add %2249, %2251 : tensor<64x512x30522xf32>
    %c_84 = stablehlo.constant dense<-100> : tensor<i32>
    %2253 = stablehlo.broadcast_in_dim %c_84, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2254 = stablehlo.compare  NE, %arg611, %2253,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %2255 = call @_where_124(%2254, %arg611, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %2256 = call @_where_124(%2254, %2255, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_85 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2257 = stablehlo.reduce(%2252 init: %cst_85) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2258 = stablehlo.broadcast_in_dim %2257, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2259 = stablehlo.broadcast_in_dim %2258, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2260 = stablehlo.subtract %2252, %2259 : tensor<64x512x30522xf32>
    %2261 = stablehlo.exponential %2260 : tensor<64x512x30522xf32>
    %cst_86 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2262 = stablehlo.reduce(%2261 init: %cst_86) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2263 = stablehlo.log %2262 : tensor<64x512xf32>
    %2264 = stablehlo.broadcast_in_dim %2256, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %2265:2 = call @take_along_axis(%2260, %2264) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %2266 = stablehlo.slice %2265#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %2267 = stablehlo.reshape %2266 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %2268 = stablehlo.subtract %2263, %2267 : tensor<64x512xf32>
    %cst_87 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2269 = call @_where_143(%2254, %2268, %cst_87) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_88 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2270 = stablehlo.reduce(%2269 init: %cst_88) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %2271 = stablehlo.convert %2254 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_89 = stablehlo.constant dense<0> : tensor<i32>
    %2272 = stablehlo.reduce(%2271 init: %c_89) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2273 = call @argmax(%2252) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %2274 = stablehlo.compare  EQ, %2273, %arg611,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %2275 = stablehlo.and %2274, %2254 : tensor<64x512xi1>
    %2276 = stablehlo.convert %2275 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_90 = stablehlo.constant dense<0> : tensor<i32>
    %2277 = stablehlo.reduce(%2276 init: %c_90) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2278 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %2279 = stablehlo.broadcast_in_dim %2278, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2280 = call @_where_160(%2254, %2279) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %2281 = stablehlo.negate %2280 : tensor<64x512xf32>
    %2282 = stablehlo.broadcast_in_dim %2281, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2283 = stablehlo.pad %2282, %cst_5, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %2284 = call @take_along_axis_161(%2265#1, %2283) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2285 = stablehlo.divide %2280, %2262 : tensor<64x512xf32>
    %2286 = stablehlo.broadcast_in_dim %2285, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %2287 = stablehlo.multiply %2286, %2261 : tensor<64x512x30522xf32>
    %2288 = stablehlo.add %2284, %2287 : tensor<64x512x30522xf32>
    %cst_91 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2289 = stablehlo.reduce(%2288 init: %cst_91) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2290 = stablehlo.reshape %2289 : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2291 = stablehlo.reduce(%2290 init: %cst_92) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2292 = stablehlo.dot_general %2288, %2248, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %2293 = stablehlo.dot_general %2288, %arg0, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<30522x768xf32>) -> tensor<64x512x768xf32>
    %cst_93 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2294 = stablehlo.reduce(%2293 init: %cst_93) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2295 = stablehlo.reshape %2294 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_94 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2296 = stablehlo.reduce(%2295 init: %cst_94) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2297 = stablehlo.broadcast_in_dim %2243, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2298 = stablehlo.multiply %2297, %2293 : tensor<64x512x768xf32>
    %2299 = stablehlo.multiply %2293, %2242 : tensor<64x512x768xf32>
    %cst_95 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2300 = stablehlo.reduce(%2299 init: %cst_95) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2301 = stablehlo.reshape %2300 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2302 = stablehlo.reduce(%2301 init: %cst_96) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2303 = stablehlo.multiply %2240, %2298 : tensor<64x512x768xf32>
    %cst_97 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2304 = stablehlo.reduce(%2303 init: %cst_97) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2305 = stablehlo.reshape %2304 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2306 = stablehlo.broadcast_in_dim %2235, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2307 = stablehlo.multiply %2298, %2306 : tensor<64x512x768xf32>
    %2308 = stablehlo.negate %2307 : tensor<64x512x768xf32>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2309 = stablehlo.reduce(%2308 init: %cst_98) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2310 = stablehlo.reshape %2309 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2311 = stablehlo.multiply %2305, %2238 : tensor<64x512x1xf32>
    %2312 = stablehlo.multiply %2311, %2232 : tensor<64x512x1xf32>
    %2313 = call @_var_178(%2220#1, %2220#2, %2220#3, %2312) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2314 = stablehlo.add %2307, %2313 : tensor<64x512x768xf32>
    %2315 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2316 = stablehlo.divide %2310, %2315 : tensor<64x512x1xf32>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2317 = stablehlo.reduce(%2316 init: %cst_99) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2318 = stablehlo.broadcast_in_dim %2317, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2319 = stablehlo.add %2314, %2318 : tensor<64x512x768xf32>
    %2320 = stablehlo.multiply %2196, %2319 : tensor<64x512x768xf32>
    %2321 = stablehlo.multiply %2319, %2214 : tensor<64x512x768xf32>
    %2322 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2323 = stablehlo.multiply %2322, %2320 : tensor<64x512x768xf32>
    %2324 = stablehlo.multiply %2323, %2210 : tensor<64x512x768xf32>
    %2325 = stablehlo.multiply %2324, %2207 : tensor<64x512x768xf32>
    %2326 = stablehlo.add %2324, %2325 : tensor<64x512x768xf32>
    %2327 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2328 = stablehlo.multiply %2327, %2326 : tensor<64x512x768xf32>
    %2329 = stablehlo.add %2321, %2328 : tensor<64x512x768xf32>
    %2330 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2331 = stablehlo.multiply %2330, %2328 : tensor<64x512x768xf32>
    %2332 = stablehlo.multiply %2331, %2201 : tensor<64x512x768xf32>
    %2333 = stablehlo.add %2329, %2332 : tensor<64x512x768xf32>
    %cst_100 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2334 = stablehlo.reduce(%2333 init: %cst_100) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2335 = stablehlo.reshape %2334 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_101 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2336 = stablehlo.reduce(%2335 init: %cst_101) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2337 = stablehlo.dot_general %2333, %2191, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2338 = stablehlo.transpose %2337, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2339 = stablehlo.dot_general %2333, %2192, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2340 = stablehlo.transpose %2338, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2341 = stablehlo.reduce(%2339 init: %cst_102) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2342 = stablehlo.reshape %2341 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_103 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2343 = stablehlo.reduce(%2342 init: %cst_103) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2344 = stablehlo.broadcast_in_dim %2186, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2345 = stablehlo.multiply %2344, %2339 : tensor<64x512x768xf32>
    %2346 = stablehlo.multiply %2339, %2185 : tensor<64x512x768xf32>
    %cst_104 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2347 = stablehlo.reduce(%2346 init: %cst_104) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2348 = stablehlo.reshape %2347 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_105 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2349 = stablehlo.reduce(%2348 init: %cst_105) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2350 = stablehlo.multiply %2183, %2345 : tensor<64x512x768xf32>
    %cst_106 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2351 = stablehlo.reduce(%2350 init: %cst_106) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2352 = stablehlo.reshape %2351 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2353 = stablehlo.broadcast_in_dim %2178, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2354 = stablehlo.multiply %2345, %2353 : tensor<64x512x768xf32>
    %2355 = stablehlo.negate %2354 : tensor<64x512x768xf32>
    %cst_107 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2356 = stablehlo.reduce(%2355 init: %cst_107) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2357 = stablehlo.reshape %2356 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2358 = stablehlo.multiply %2352, %2181 : tensor<64x512x1xf32>
    %2359 = stablehlo.multiply %2358, %2175 : tensor<64x512x1xf32>
    %2360 = call @_var_178(%2163#1, %2163#2, %2163#3, %2359) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2361 = stablehlo.add %2354, %2360 : tensor<64x512x768xf32>
    %2362 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2363 = stablehlo.divide %2357, %2362 : tensor<64x512x1xf32>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2364 = stablehlo.reduce(%2363 init: %cst_108) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2365 = stablehlo.broadcast_in_dim %2364, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2366 = stablehlo.add %2361, %2365 : tensor<64x512x768xf32>
    %2367 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2368 = stablehlo.select %2152, %2366, %2367 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2369 = stablehlo.broadcast_in_dim %2153, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2370 = stablehlo.divide %2368, %2369 : tensor<64x512x768xf32>
    %cst_109 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2371 = stablehlo.reduce(%2370 init: %cst_109) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2372 = stablehlo.reshape %2371 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_110 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2373 = stablehlo.reduce(%2372 init: %cst_110) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2374 = stablehlo.dot_general %2370, %2141, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2375 = stablehlo.transpose %2374, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2376 = stablehlo.dot_general %2370, %2142, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2377 = stablehlo.transpose %2375, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2378 = stablehlo.multiply %2122, %2376 : tensor<64x512x3072xf32>
    %2379 = stablehlo.multiply %2376, %2140 : tensor<64x512x3072xf32>
    %2380 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2381 = stablehlo.multiply %2380, %2378 : tensor<64x512x3072xf32>
    %2382 = stablehlo.multiply %2381, %2136 : tensor<64x512x3072xf32>
    %2383 = stablehlo.multiply %2382, %2133 : tensor<64x512x3072xf32>
    %2384 = stablehlo.add %2382, %2383 : tensor<64x512x3072xf32>
    %2385 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2386 = stablehlo.multiply %2385, %2384 : tensor<64x512x3072xf32>
    %2387 = stablehlo.add %2379, %2386 : tensor<64x512x3072xf32>
    %2388 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2389 = stablehlo.multiply %2388, %2386 : tensor<64x512x3072xf32>
    %2390 = stablehlo.multiply %2389, %2127 : tensor<64x512x3072xf32>
    %2391 = stablehlo.add %2387, %2390 : tensor<64x512x3072xf32>
    %cst_111 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2392 = stablehlo.reduce(%2391 init: %cst_111) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2393 = stablehlo.reshape %2392 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2394 = stablehlo.reduce(%2393 init: %cst_112) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2395 = stablehlo.dot_general %2391, %2117, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2396 = stablehlo.transpose %2395, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2397 = stablehlo.dot_general %2391, %2118, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2398 = stablehlo.add %2366, %2397 : tensor<64x512x768xf32>
    %2399 = stablehlo.transpose %2396, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_113 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2400 = stablehlo.reduce(%2398 init: %cst_113) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2401 = stablehlo.reshape %2400 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_114 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2402 = stablehlo.reduce(%2401 init: %cst_114) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2403 = stablehlo.broadcast_in_dim %2112, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2404 = stablehlo.multiply %2403, %2398 : tensor<64x512x768xf32>
    %2405 = stablehlo.multiply %2398, %2111 : tensor<64x512x768xf32>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2406 = stablehlo.reduce(%2405 init: %cst_115) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2407 = stablehlo.reshape %2406 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2408 = stablehlo.reduce(%2407 init: %cst_116) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2409 = stablehlo.multiply %2109, %2404 : tensor<64x512x768xf32>
    %cst_117 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2410 = stablehlo.reduce(%2409 init: %cst_117) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2411 = stablehlo.reshape %2410 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2412 = stablehlo.broadcast_in_dim %2104, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2413 = stablehlo.multiply %2404, %2412 : tensor<64x512x768xf32>
    %2414 = stablehlo.negate %2413 : tensor<64x512x768xf32>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2415 = stablehlo.reduce(%2414 init: %cst_118) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2416 = stablehlo.reshape %2415 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2417 = stablehlo.multiply %2411, %2107 : tensor<64x512x1xf32>
    %2418 = stablehlo.multiply %2417, %2101 : tensor<64x512x1xf32>
    %2419 = call @_var_178(%2089#1, %2089#2, %2089#3, %2418) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2420 = stablehlo.add %2413, %2419 : tensor<64x512x768xf32>
    %2421 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2422 = stablehlo.divide %2416, %2421 : tensor<64x512x1xf32>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2423 = stablehlo.reduce(%2422 init: %cst_119) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2424 = stablehlo.broadcast_in_dim %2423, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2425 = stablehlo.add %2420, %2424 : tensor<64x512x768xf32>
    %2426 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2427 = stablehlo.select %2078, %2425, %2426 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2428 = stablehlo.broadcast_in_dim %2079, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2429 = stablehlo.divide %2427, %2428 : tensor<64x512x768xf32>
    %cst_120 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2430 = stablehlo.reduce(%2429 init: %cst_120) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2431 = stablehlo.reshape %2430 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_121 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2432 = stablehlo.reduce(%2431 init: %cst_121) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2433 = stablehlo.dot_general %2429, %2067, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2434 = stablehlo.transpose %2433, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2435 = stablehlo.dot_general %2429, %2068, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2436 = stablehlo.transpose %2434, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2437 = stablehlo.reshape %2435 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2438 = stablehlo.transpose %2437, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2439 = stablehlo.dot_general %2438, %2033, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2440 = stablehlo.transpose %2439, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2441 = stablehlo.dot_general %2438, %2064, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2442 = stablehlo.transpose %2441, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2443 = stablehlo.multiply %2440, %2063 : tensor<64x512x12x512xf32>
    %2444 = stablehlo.broadcast_in_dim %2058, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2445 = stablehlo.multiply %2443, %2444 : tensor<64x512x12x512xf32>
    %2446 = stablehlo.multiply %2445, %2051 : tensor<64x512x12x512xf32>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2447 = stablehlo.reduce(%2446 init: %cst_122) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2448 = stablehlo.reshape %2447 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2449 = stablehlo.negate %2448 : tensor<64x512x12x1xf32>
    %2450 = stablehlo.broadcast_in_dim %2053, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2451 = stablehlo.divide %2443, %2450 : tensor<64x512x12x512xf32>
    %cst_123 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2452 = stablehlo.reduce(%2449 init: %cst_123) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2453 = stablehlo.broadcast_in_dim %2452, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2454 = stablehlo.add %2451, %2453 : tensor<64x512x12x512xf32>
    %2455 = stablehlo.multiply %2454, %2051 : tensor<64x512x12x512xf32>
    %2456 = call @_where_205(%2044#1, %2455) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2457 = stablehlo.transpose %2456, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2458 = stablehlo.dot_general %2457, %2032, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2459 = stablehlo.transpose %2458, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2460 = stablehlo.dot_general %2457, %2041, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2461 = stablehlo.transpose %2460, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2462 = stablehlo.broadcast_in_dim %2039, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2463 = stablehlo.divide %2459, %2462 : tensor<64x512x12x64xf32>
    %2464 = stablehlo.reshape %2442 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2465 = stablehlo.reshape %2461 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2466 = stablehlo.reshape %2463 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_124 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2467 = stablehlo.reduce(%2464 init: %cst_124) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2468 = stablehlo.reshape %2467 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2469 = stablehlo.reduce(%2468 init: %cst_125) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2470 = stablehlo.dot_general %2464, %2015, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2471 = stablehlo.transpose %2470, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2472 = stablehlo.dot_general %2464, %2026, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2473 = stablehlo.add %2425, %2472 : tensor<64x512x768xf32>
    %2474 = stablehlo.transpose %2471, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2475 = stablehlo.reduce(%2465 init: %cst_126) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2476 = stablehlo.reshape %2475 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_127 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2477 = stablehlo.reduce(%2476 init: %cst_127) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2478 = stablehlo.dot_general %2465, %2015, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2479 = stablehlo.transpose %2478, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2480 = stablehlo.dot_general %2465, %2021, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2481 = stablehlo.add %2473, %2480 : tensor<64x512x768xf32>
    %2482 = stablehlo.transpose %2479, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2483 = stablehlo.reduce(%2466 init: %cst_128) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2484 = stablehlo.reshape %2483 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2485 = stablehlo.reduce(%2484 init: %cst_129) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2486 = stablehlo.dot_general %2466, %2015, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2487 = stablehlo.transpose %2486, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2488 = stablehlo.dot_general %2466, %2016, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2489 = stablehlo.add %2481, %2488 : tensor<64x512x768xf32>
    %2490 = stablehlo.transpose %2487, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_130 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2491 = stablehlo.reduce(%2489 init: %cst_130) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2492 = stablehlo.reshape %2491 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_131 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2493 = stablehlo.reduce(%2492 init: %cst_131) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2494 = stablehlo.broadcast_in_dim %2010, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2495 = stablehlo.multiply %2494, %2489 : tensor<64x512x768xf32>
    %2496 = stablehlo.multiply %2489, %2009 : tensor<64x512x768xf32>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2497 = stablehlo.reduce(%2496 init: %cst_132) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2498 = stablehlo.reshape %2497 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_133 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2499 = stablehlo.reduce(%2498 init: %cst_133) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2500 = stablehlo.multiply %2007, %2495 : tensor<64x512x768xf32>
    %cst_134 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2501 = stablehlo.reduce(%2500 init: %cst_134) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2502 = stablehlo.reshape %2501 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2503 = stablehlo.broadcast_in_dim %2002, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2504 = stablehlo.multiply %2495, %2503 : tensor<64x512x768xf32>
    %2505 = stablehlo.negate %2504 : tensor<64x512x768xf32>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2506 = stablehlo.reduce(%2505 init: %cst_135) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2507 = stablehlo.reshape %2506 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2508 = stablehlo.multiply %2502, %2005 : tensor<64x512x1xf32>
    %2509 = stablehlo.multiply %2508, %1999 : tensor<64x512x1xf32>
    %2510 = call @_var_178(%1987#1, %1987#2, %1987#3, %2509) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2511 = stablehlo.add %2504, %2510 : tensor<64x512x768xf32>
    %2512 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2513 = stablehlo.divide %2507, %2512 : tensor<64x512x1xf32>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2514 = stablehlo.reduce(%2513 init: %cst_136) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2515 = stablehlo.broadcast_in_dim %2514, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2516 = stablehlo.add %2511, %2515 : tensor<64x512x768xf32>
    %2517 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2518 = stablehlo.select %1976, %2516, %2517 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2519 = stablehlo.broadcast_in_dim %1977, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2520 = stablehlo.divide %2518, %2519 : tensor<64x512x768xf32>
    %cst_137 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2521 = stablehlo.reduce(%2520 init: %cst_137) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2522 = stablehlo.reshape %2521 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2523 = stablehlo.reduce(%2522 init: %cst_138) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2524 = stablehlo.dot_general %2520, %1965, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2525 = stablehlo.transpose %2524, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2526 = stablehlo.dot_general %2520, %1966, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2527 = stablehlo.transpose %2525, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2528 = stablehlo.multiply %1946, %2526 : tensor<64x512x3072xf32>
    %2529 = stablehlo.multiply %2526, %1964 : tensor<64x512x3072xf32>
    %2530 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2531 = stablehlo.multiply %2530, %2528 : tensor<64x512x3072xf32>
    %2532 = stablehlo.multiply %2531, %1960 : tensor<64x512x3072xf32>
    %2533 = stablehlo.multiply %2532, %1957 : tensor<64x512x3072xf32>
    %2534 = stablehlo.add %2532, %2533 : tensor<64x512x3072xf32>
    %2535 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2536 = stablehlo.multiply %2535, %2534 : tensor<64x512x3072xf32>
    %2537 = stablehlo.add %2529, %2536 : tensor<64x512x3072xf32>
    %2538 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2539 = stablehlo.multiply %2538, %2536 : tensor<64x512x3072xf32>
    %2540 = stablehlo.multiply %2539, %1951 : tensor<64x512x3072xf32>
    %2541 = stablehlo.add %2537, %2540 : tensor<64x512x3072xf32>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2542 = stablehlo.reduce(%2541 init: %cst_139) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2543 = stablehlo.reshape %2542 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2544 = stablehlo.reduce(%2543 init: %cst_140) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2545 = stablehlo.dot_general %2541, %1941, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2546 = stablehlo.transpose %2545, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2547 = stablehlo.dot_general %2541, %1942, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2548 = stablehlo.add %2516, %2547 : tensor<64x512x768xf32>
    %2549 = stablehlo.transpose %2546, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2550 = stablehlo.reduce(%2548 init: %cst_141) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2551 = stablehlo.reshape %2550 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_142 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2552 = stablehlo.reduce(%2551 init: %cst_142) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2553 = stablehlo.broadcast_in_dim %1936, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2554 = stablehlo.multiply %2553, %2548 : tensor<64x512x768xf32>
    %2555 = stablehlo.multiply %2548, %1935 : tensor<64x512x768xf32>
    %cst_143 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2556 = stablehlo.reduce(%2555 init: %cst_143) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2557 = stablehlo.reshape %2556 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_144 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2558 = stablehlo.reduce(%2557 init: %cst_144) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2559 = stablehlo.multiply %1933, %2554 : tensor<64x512x768xf32>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2560 = stablehlo.reduce(%2559 init: %cst_145) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2561 = stablehlo.reshape %2560 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2562 = stablehlo.broadcast_in_dim %1928, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2563 = stablehlo.multiply %2554, %2562 : tensor<64x512x768xf32>
    %2564 = stablehlo.negate %2563 : tensor<64x512x768xf32>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2565 = stablehlo.reduce(%2564 init: %cst_146) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2566 = stablehlo.reshape %2565 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2567 = stablehlo.multiply %2561, %1931 : tensor<64x512x1xf32>
    %2568 = stablehlo.multiply %2567, %1925 : tensor<64x512x1xf32>
    %2569 = call @_var_178(%1913#1, %1913#2, %1913#3, %2568) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2570 = stablehlo.add %2563, %2569 : tensor<64x512x768xf32>
    %2571 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2572 = stablehlo.divide %2566, %2571 : tensor<64x512x1xf32>
    %cst_147 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2573 = stablehlo.reduce(%2572 init: %cst_147) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2574 = stablehlo.broadcast_in_dim %2573, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2575 = stablehlo.add %2570, %2574 : tensor<64x512x768xf32>
    %2576 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2577 = stablehlo.select %1902, %2575, %2576 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2578 = stablehlo.broadcast_in_dim %1903, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2579 = stablehlo.divide %2577, %2578 : tensor<64x512x768xf32>
    %cst_148 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2580 = stablehlo.reduce(%2579 init: %cst_148) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2581 = stablehlo.reshape %2580 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2582 = stablehlo.reduce(%2581 init: %cst_149) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2583 = stablehlo.dot_general %2579, %1891, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2584 = stablehlo.transpose %2583, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2585 = stablehlo.dot_general %2579, %1892, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2586 = stablehlo.transpose %2584, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2587 = stablehlo.reshape %2585 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2588 = stablehlo.transpose %2587, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2589 = stablehlo.dot_general %2588, %1857, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2590 = stablehlo.transpose %2589, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2591 = stablehlo.dot_general %2588, %1888, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2592 = stablehlo.transpose %2591, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2593 = stablehlo.multiply %2590, %1887 : tensor<64x512x12x512xf32>
    %2594 = stablehlo.broadcast_in_dim %1882, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2595 = stablehlo.multiply %2593, %2594 : tensor<64x512x12x512xf32>
    %2596 = stablehlo.multiply %2595, %1875 : tensor<64x512x12x512xf32>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2597 = stablehlo.reduce(%2596 init: %cst_150) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2598 = stablehlo.reshape %2597 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2599 = stablehlo.negate %2598 : tensor<64x512x12x1xf32>
    %2600 = stablehlo.broadcast_in_dim %1877, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2601 = stablehlo.divide %2593, %2600 : tensor<64x512x12x512xf32>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2602 = stablehlo.reduce(%2599 init: %cst_151) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2603 = stablehlo.broadcast_in_dim %2602, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2604 = stablehlo.add %2601, %2603 : tensor<64x512x12x512xf32>
    %2605 = stablehlo.multiply %2604, %1875 : tensor<64x512x12x512xf32>
    %2606 = call @_where_205(%1868#1, %2605) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2607 = stablehlo.transpose %2606, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2608 = stablehlo.dot_general %2607, %1856, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2609 = stablehlo.transpose %2608, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2610 = stablehlo.dot_general %2607, %1865, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2611 = stablehlo.transpose %2610, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2612 = stablehlo.broadcast_in_dim %1863, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2613 = stablehlo.divide %2609, %2612 : tensor<64x512x12x64xf32>
    %2614 = stablehlo.reshape %2592 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2615 = stablehlo.reshape %2611 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2616 = stablehlo.reshape %2613 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2617 = stablehlo.reduce(%2614 init: %cst_152) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2618 = stablehlo.reshape %2617 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2619 = stablehlo.reduce(%2618 init: %cst_153) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2620 = stablehlo.dot_general %2614, %1839, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2621 = stablehlo.transpose %2620, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2622 = stablehlo.dot_general %2614, %1850, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2623 = stablehlo.add %2575, %2622 : tensor<64x512x768xf32>
    %2624 = stablehlo.transpose %2621, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2625 = stablehlo.reduce(%2615 init: %cst_154) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2626 = stablehlo.reshape %2625 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2627 = stablehlo.reduce(%2626 init: %cst_155) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2628 = stablehlo.dot_general %2615, %1839, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2629 = stablehlo.transpose %2628, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2630 = stablehlo.dot_general %2615, %1845, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2631 = stablehlo.add %2623, %2630 : tensor<64x512x768xf32>
    %2632 = stablehlo.transpose %2629, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2633 = stablehlo.reduce(%2616 init: %cst_156) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2634 = stablehlo.reshape %2633 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2635 = stablehlo.reduce(%2634 init: %cst_157) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2636 = stablehlo.dot_general %2616, %1839, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2637 = stablehlo.transpose %2636, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2638 = stablehlo.dot_general %2616, %1840, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2639 = stablehlo.add %2631, %2638 : tensor<64x512x768xf32>
    %2640 = stablehlo.transpose %2637, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2641 = stablehlo.reduce(%2639 init: %cst_158) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2642 = stablehlo.reshape %2641 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2643 = stablehlo.reduce(%2642 init: %cst_159) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2644 = stablehlo.broadcast_in_dim %1834, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2645 = stablehlo.multiply %2644, %2639 : tensor<64x512x768xf32>
    %2646 = stablehlo.multiply %2639, %1833 : tensor<64x512x768xf32>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2647 = stablehlo.reduce(%2646 init: %cst_160) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2648 = stablehlo.reshape %2647 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2649 = stablehlo.reduce(%2648 init: %cst_161) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2650 = stablehlo.multiply %1831, %2645 : tensor<64x512x768xf32>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2651 = stablehlo.reduce(%2650 init: %cst_162) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2652 = stablehlo.reshape %2651 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2653 = stablehlo.broadcast_in_dim %1826, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2654 = stablehlo.multiply %2645, %2653 : tensor<64x512x768xf32>
    %2655 = stablehlo.negate %2654 : tensor<64x512x768xf32>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2656 = stablehlo.reduce(%2655 init: %cst_163) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2657 = stablehlo.reshape %2656 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2658 = stablehlo.multiply %2652, %1829 : tensor<64x512x1xf32>
    %2659 = stablehlo.multiply %2658, %1823 : tensor<64x512x1xf32>
    %2660 = call @_var_178(%1811#1, %1811#2, %1811#3, %2659) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2661 = stablehlo.add %2654, %2660 : tensor<64x512x768xf32>
    %2662 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2663 = stablehlo.divide %2657, %2662 : tensor<64x512x1xf32>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2664 = stablehlo.reduce(%2663 init: %cst_164) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2665 = stablehlo.broadcast_in_dim %2664, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2666 = stablehlo.add %2661, %2665 : tensor<64x512x768xf32>
    %2667 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2668 = stablehlo.select %1800, %2666, %2667 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2669 = stablehlo.broadcast_in_dim %1801, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2670 = stablehlo.divide %2668, %2669 : tensor<64x512x768xf32>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2671 = stablehlo.reduce(%2670 init: %cst_165) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2672 = stablehlo.reshape %2671 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2673 = stablehlo.reduce(%2672 init: %cst_166) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2674 = stablehlo.dot_general %2670, %1789, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2675 = stablehlo.transpose %2674, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2676 = stablehlo.dot_general %2670, %1790, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2677 = stablehlo.transpose %2675, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2678 = stablehlo.multiply %1770, %2676 : tensor<64x512x3072xf32>
    %2679 = stablehlo.multiply %2676, %1788 : tensor<64x512x3072xf32>
    %2680 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2681 = stablehlo.multiply %2680, %2678 : tensor<64x512x3072xf32>
    %2682 = stablehlo.multiply %2681, %1784 : tensor<64x512x3072xf32>
    %2683 = stablehlo.multiply %2682, %1781 : tensor<64x512x3072xf32>
    %2684 = stablehlo.add %2682, %2683 : tensor<64x512x3072xf32>
    %2685 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2686 = stablehlo.multiply %2685, %2684 : tensor<64x512x3072xf32>
    %2687 = stablehlo.add %2679, %2686 : tensor<64x512x3072xf32>
    %2688 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2689 = stablehlo.multiply %2688, %2686 : tensor<64x512x3072xf32>
    %2690 = stablehlo.multiply %2689, %1775 : tensor<64x512x3072xf32>
    %2691 = stablehlo.add %2687, %2690 : tensor<64x512x3072xf32>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2692 = stablehlo.reduce(%2691 init: %cst_167) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2693 = stablehlo.reshape %2692 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2694 = stablehlo.reduce(%2693 init: %cst_168) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2695 = stablehlo.dot_general %2691, %1765, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2696 = stablehlo.transpose %2695, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2697 = stablehlo.dot_general %2691, %1766, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2698 = stablehlo.add %2666, %2697 : tensor<64x512x768xf32>
    %2699 = stablehlo.transpose %2696, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2700 = stablehlo.reduce(%2698 init: %cst_169) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2701 = stablehlo.reshape %2700 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2702 = stablehlo.reduce(%2701 init: %cst_170) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2703 = stablehlo.broadcast_in_dim %1760, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2704 = stablehlo.multiply %2703, %2698 : tensor<64x512x768xf32>
    %2705 = stablehlo.multiply %2698, %1759 : tensor<64x512x768xf32>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2706 = stablehlo.reduce(%2705 init: %cst_171) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2707 = stablehlo.reshape %2706 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2708 = stablehlo.reduce(%2707 init: %cst_172) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2709 = stablehlo.multiply %1757, %2704 : tensor<64x512x768xf32>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2710 = stablehlo.reduce(%2709 init: %cst_173) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2711 = stablehlo.reshape %2710 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2712 = stablehlo.broadcast_in_dim %1752, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2713 = stablehlo.multiply %2704, %2712 : tensor<64x512x768xf32>
    %2714 = stablehlo.negate %2713 : tensor<64x512x768xf32>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2715 = stablehlo.reduce(%2714 init: %cst_174) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2716 = stablehlo.reshape %2715 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2717 = stablehlo.multiply %2711, %1755 : tensor<64x512x1xf32>
    %2718 = stablehlo.multiply %2717, %1749 : tensor<64x512x1xf32>
    %2719 = call @_var_178(%1737#1, %1737#2, %1737#3, %2718) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2720 = stablehlo.add %2713, %2719 : tensor<64x512x768xf32>
    %2721 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2722 = stablehlo.divide %2716, %2721 : tensor<64x512x1xf32>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2723 = stablehlo.reduce(%2722 init: %cst_175) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2724 = stablehlo.broadcast_in_dim %2723, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2725 = stablehlo.add %2720, %2724 : tensor<64x512x768xf32>
    %2726 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2727 = stablehlo.select %1726, %2725, %2726 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2728 = stablehlo.broadcast_in_dim %1727, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2729 = stablehlo.divide %2727, %2728 : tensor<64x512x768xf32>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2730 = stablehlo.reduce(%2729 init: %cst_176) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2731 = stablehlo.reshape %2730 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2732 = stablehlo.reduce(%2731 init: %cst_177) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2733 = stablehlo.dot_general %2729, %1715, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2734 = stablehlo.transpose %2733, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2735 = stablehlo.dot_general %2729, %1716, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2736 = stablehlo.transpose %2734, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2737 = stablehlo.reshape %2735 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2738 = stablehlo.transpose %2737, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2739 = stablehlo.dot_general %2738, %1681, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2740 = stablehlo.transpose %2739, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2741 = stablehlo.dot_general %2738, %1712, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2742 = stablehlo.transpose %2741, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2743 = stablehlo.multiply %2740, %1711 : tensor<64x512x12x512xf32>
    %2744 = stablehlo.broadcast_in_dim %1706, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2745 = stablehlo.multiply %2743, %2744 : tensor<64x512x12x512xf32>
    %2746 = stablehlo.multiply %2745, %1699 : tensor<64x512x12x512xf32>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2747 = stablehlo.reduce(%2746 init: %cst_178) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2748 = stablehlo.reshape %2747 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2749 = stablehlo.negate %2748 : tensor<64x512x12x1xf32>
    %2750 = stablehlo.broadcast_in_dim %1701, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2751 = stablehlo.divide %2743, %2750 : tensor<64x512x12x512xf32>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2752 = stablehlo.reduce(%2749 init: %cst_179) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2753 = stablehlo.broadcast_in_dim %2752, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2754 = stablehlo.add %2751, %2753 : tensor<64x512x12x512xf32>
    %2755 = stablehlo.multiply %2754, %1699 : tensor<64x512x12x512xf32>
    %2756 = call @_where_205(%1692#1, %2755) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2757 = stablehlo.transpose %2756, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2758 = stablehlo.dot_general %2757, %1680, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2759 = stablehlo.transpose %2758, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2760 = stablehlo.dot_general %2757, %1689, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2761 = stablehlo.transpose %2760, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2762 = stablehlo.broadcast_in_dim %1687, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2763 = stablehlo.divide %2759, %2762 : tensor<64x512x12x64xf32>
    %2764 = stablehlo.reshape %2742 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2765 = stablehlo.reshape %2761 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2766 = stablehlo.reshape %2763 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2767 = stablehlo.reduce(%2764 init: %cst_180) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2768 = stablehlo.reshape %2767 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2769 = stablehlo.reduce(%2768 init: %cst_181) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2770 = stablehlo.dot_general %2764, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2771 = stablehlo.transpose %2770, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2772 = stablehlo.dot_general %2764, %1674, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2773 = stablehlo.add %2725, %2772 : tensor<64x512x768xf32>
    %2774 = stablehlo.transpose %2771, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2775 = stablehlo.reduce(%2765 init: %cst_182) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2776 = stablehlo.reshape %2775 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2777 = stablehlo.reduce(%2776 init: %cst_183) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2778 = stablehlo.dot_general %2765, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2779 = stablehlo.transpose %2778, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2780 = stablehlo.dot_general %2765, %1669, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2781 = stablehlo.add %2773, %2780 : tensor<64x512x768xf32>
    %2782 = stablehlo.transpose %2779, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2783 = stablehlo.reduce(%2766 init: %cst_184) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2784 = stablehlo.reshape %2783 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2785 = stablehlo.reduce(%2784 init: %cst_185) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2786 = stablehlo.dot_general %2766, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2787 = stablehlo.transpose %2786, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2788 = stablehlo.dot_general %2766, %1664, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2789 = stablehlo.add %2781, %2788 : tensor<64x512x768xf32>
    %2790 = stablehlo.transpose %2787, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2791 = stablehlo.reduce(%2789 init: %cst_186) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2792 = stablehlo.reshape %2791 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2793 = stablehlo.reduce(%2792 init: %cst_187) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2794 = stablehlo.broadcast_in_dim %1658, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2795 = stablehlo.multiply %2794, %2789 : tensor<64x512x768xf32>
    %2796 = stablehlo.multiply %2789, %1657 : tensor<64x512x768xf32>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2797 = stablehlo.reduce(%2796 init: %cst_188) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2798 = stablehlo.reshape %2797 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2799 = stablehlo.reduce(%2798 init: %cst_189) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2800 = stablehlo.multiply %1655, %2795 : tensor<64x512x768xf32>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2801 = stablehlo.reduce(%2800 init: %cst_190) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2802 = stablehlo.reshape %2801 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2803 = stablehlo.broadcast_in_dim %1650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2804 = stablehlo.multiply %2795, %2803 : tensor<64x512x768xf32>
    %2805 = stablehlo.negate %2804 : tensor<64x512x768xf32>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2806 = stablehlo.reduce(%2805 init: %cst_191) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2807 = stablehlo.reshape %2806 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2808 = stablehlo.multiply %2802, %1653 : tensor<64x512x1xf32>
    %2809 = stablehlo.multiply %2808, %1647 : tensor<64x512x1xf32>
    %2810 = call @_var_178(%1635#1, %1635#2, %1635#3, %2809) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2811 = stablehlo.add %2804, %2810 : tensor<64x512x768xf32>
    %2812 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2813 = stablehlo.divide %2807, %2812 : tensor<64x512x1xf32>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2814 = stablehlo.reduce(%2813 init: %cst_192) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2815 = stablehlo.broadcast_in_dim %2814, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2816 = stablehlo.add %2811, %2815 : tensor<64x512x768xf32>
    %2817 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2818 = stablehlo.select %1624, %2816, %2817 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2819 = stablehlo.broadcast_in_dim %1625, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2820 = stablehlo.divide %2818, %2819 : tensor<64x512x768xf32>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2821 = stablehlo.reduce(%2820 init: %cst_193) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2822 = stablehlo.reshape %2821 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2823 = stablehlo.reduce(%2822 init: %cst_194) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2824 = stablehlo.dot_general %2820, %1613, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2825 = stablehlo.transpose %2824, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2826 = stablehlo.dot_general %2820, %1614, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2827 = stablehlo.transpose %2825, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2828 = stablehlo.multiply %1594, %2826 : tensor<64x512x3072xf32>
    %2829 = stablehlo.multiply %2826, %1612 : tensor<64x512x3072xf32>
    %2830 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2831 = stablehlo.multiply %2830, %2828 : tensor<64x512x3072xf32>
    %2832 = stablehlo.multiply %2831, %1608 : tensor<64x512x3072xf32>
    %2833 = stablehlo.multiply %2832, %1605 : tensor<64x512x3072xf32>
    %2834 = stablehlo.add %2832, %2833 : tensor<64x512x3072xf32>
    %2835 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2836 = stablehlo.multiply %2835, %2834 : tensor<64x512x3072xf32>
    %2837 = stablehlo.add %2829, %2836 : tensor<64x512x3072xf32>
    %2838 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2839 = stablehlo.multiply %2838, %2836 : tensor<64x512x3072xf32>
    %2840 = stablehlo.multiply %2839, %1599 : tensor<64x512x3072xf32>
    %2841 = stablehlo.add %2837, %2840 : tensor<64x512x3072xf32>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2842 = stablehlo.reduce(%2841 init: %cst_195) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2843 = stablehlo.reshape %2842 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2844 = stablehlo.reduce(%2843 init: %cst_196) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2845 = stablehlo.dot_general %2841, %1589, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2846 = stablehlo.transpose %2845, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2847 = stablehlo.dot_general %2841, %1590, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2848 = stablehlo.add %2816, %2847 : tensor<64x512x768xf32>
    %2849 = stablehlo.transpose %2846, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2850 = stablehlo.reduce(%2848 init: %cst_197) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2851 = stablehlo.reshape %2850 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2852 = stablehlo.reduce(%2851 init: %cst_198) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2853 = stablehlo.broadcast_in_dim %1584, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2854 = stablehlo.multiply %2853, %2848 : tensor<64x512x768xf32>
    %2855 = stablehlo.multiply %2848, %1583 : tensor<64x512x768xf32>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2856 = stablehlo.reduce(%2855 init: %cst_199) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2857 = stablehlo.reshape %2856 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2858 = stablehlo.reduce(%2857 init: %cst_200) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2859 = stablehlo.multiply %1581, %2854 : tensor<64x512x768xf32>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2860 = stablehlo.reduce(%2859 init: %cst_201) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2861 = stablehlo.reshape %2860 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2862 = stablehlo.broadcast_in_dim %1576, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2863 = stablehlo.multiply %2854, %2862 : tensor<64x512x768xf32>
    %2864 = stablehlo.negate %2863 : tensor<64x512x768xf32>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2865 = stablehlo.reduce(%2864 init: %cst_202) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2866 = stablehlo.reshape %2865 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2867 = stablehlo.multiply %2861, %1579 : tensor<64x512x1xf32>
    %2868 = stablehlo.multiply %2867, %1573 : tensor<64x512x1xf32>
    %2869 = call @_var_178(%1561#1, %1561#2, %1561#3, %2868) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2870 = stablehlo.add %2863, %2869 : tensor<64x512x768xf32>
    %2871 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2872 = stablehlo.divide %2866, %2871 : tensor<64x512x1xf32>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2873 = stablehlo.reduce(%2872 init: %cst_203) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2874 = stablehlo.broadcast_in_dim %2873, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2875 = stablehlo.add %2870, %2874 : tensor<64x512x768xf32>
    %2876 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2877 = stablehlo.select %1550, %2875, %2876 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2878 = stablehlo.broadcast_in_dim %1551, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2879 = stablehlo.divide %2877, %2878 : tensor<64x512x768xf32>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2880 = stablehlo.reduce(%2879 init: %cst_204) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2881 = stablehlo.reshape %2880 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2882 = stablehlo.reduce(%2881 init: %cst_205) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2883 = stablehlo.dot_general %2879, %1539, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2884 = stablehlo.transpose %2883, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2885 = stablehlo.dot_general %2879, %1540, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2886 = stablehlo.transpose %2884, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2887 = stablehlo.reshape %2885 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2888 = stablehlo.transpose %2887, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2889 = stablehlo.dot_general %2888, %1505, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2890 = stablehlo.transpose %2889, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2891 = stablehlo.dot_general %2888, %1536, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2892 = stablehlo.transpose %2891, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2893 = stablehlo.multiply %2890, %1535 : tensor<64x512x12x512xf32>
    %2894 = stablehlo.broadcast_in_dim %1530, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2895 = stablehlo.multiply %2893, %2894 : tensor<64x512x12x512xf32>
    %2896 = stablehlo.multiply %2895, %1523 : tensor<64x512x12x512xf32>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2897 = stablehlo.reduce(%2896 init: %cst_206) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2898 = stablehlo.reshape %2897 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2899 = stablehlo.negate %2898 : tensor<64x512x12x1xf32>
    %2900 = stablehlo.broadcast_in_dim %1525, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2901 = stablehlo.divide %2893, %2900 : tensor<64x512x12x512xf32>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2902 = stablehlo.reduce(%2899 init: %cst_207) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2903 = stablehlo.broadcast_in_dim %2902, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2904 = stablehlo.add %2901, %2903 : tensor<64x512x12x512xf32>
    %2905 = stablehlo.multiply %2904, %1523 : tensor<64x512x12x512xf32>
    %2906 = call @_where_205(%1516#1, %2905) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2907 = stablehlo.transpose %2906, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2908 = stablehlo.dot_general %2907, %1504, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2909 = stablehlo.transpose %2908, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2910 = stablehlo.dot_general %2907, %1513, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2911 = stablehlo.transpose %2910, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2912 = stablehlo.broadcast_in_dim %1511, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2913 = stablehlo.divide %2909, %2912 : tensor<64x512x12x64xf32>
    %2914 = stablehlo.reshape %2892 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2915 = stablehlo.reshape %2911 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2916 = stablehlo.reshape %2913 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2917 = stablehlo.reduce(%2914 init: %cst_208) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2918 = stablehlo.reshape %2917 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2919 = stablehlo.reduce(%2918 init: %cst_209) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2920 = stablehlo.dot_general %2914, %1487, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2921 = stablehlo.transpose %2920, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2922 = stablehlo.dot_general %2914, %1498, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2923 = stablehlo.add %2875, %2922 : tensor<64x512x768xf32>
    %2924 = stablehlo.transpose %2921, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2925 = stablehlo.reduce(%2915 init: %cst_210) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2926 = stablehlo.reshape %2925 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2927 = stablehlo.reduce(%2926 init: %cst_211) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2928 = stablehlo.dot_general %2915, %1487, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2929 = stablehlo.transpose %2928, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2930 = stablehlo.dot_general %2915, %1493, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2931 = stablehlo.add %2923, %2930 : tensor<64x512x768xf32>
    %2932 = stablehlo.transpose %2929, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2933 = stablehlo.reduce(%2916 init: %cst_212) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2934 = stablehlo.reshape %2933 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2935 = stablehlo.reduce(%2934 init: %cst_213) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2936 = stablehlo.dot_general %2916, %1487, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2937 = stablehlo.transpose %2936, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2938 = stablehlo.dot_general %2916, %1488, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2939 = stablehlo.add %2931, %2938 : tensor<64x512x768xf32>
    %2940 = stablehlo.transpose %2937, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2941 = stablehlo.reduce(%2939 init: %cst_214) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2942 = stablehlo.reshape %2941 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2943 = stablehlo.reduce(%2942 init: %cst_215) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2944 = stablehlo.broadcast_in_dim %1482, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2945 = stablehlo.multiply %2944, %2939 : tensor<64x512x768xf32>
    %2946 = stablehlo.multiply %2939, %1481 : tensor<64x512x768xf32>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2947 = stablehlo.reduce(%2946 init: %cst_216) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2948 = stablehlo.reshape %2947 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2949 = stablehlo.reduce(%2948 init: %cst_217) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2950 = stablehlo.multiply %1479, %2945 : tensor<64x512x768xf32>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2951 = stablehlo.reduce(%2950 init: %cst_218) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2952 = stablehlo.reshape %2951 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2953 = stablehlo.broadcast_in_dim %1474, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2954 = stablehlo.multiply %2945, %2953 : tensor<64x512x768xf32>
    %2955 = stablehlo.negate %2954 : tensor<64x512x768xf32>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2956 = stablehlo.reduce(%2955 init: %cst_219) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2957 = stablehlo.reshape %2956 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2958 = stablehlo.multiply %2952, %1477 : tensor<64x512x1xf32>
    %2959 = stablehlo.multiply %2958, %1471 : tensor<64x512x1xf32>
    %2960 = call @_var_178(%1459#1, %1459#2, %1459#3, %2959) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2961 = stablehlo.add %2954, %2960 : tensor<64x512x768xf32>
    %2962 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2963 = stablehlo.divide %2957, %2962 : tensor<64x512x1xf32>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2964 = stablehlo.reduce(%2963 init: %cst_220) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2965 = stablehlo.broadcast_in_dim %2964, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2966 = stablehlo.add %2961, %2965 : tensor<64x512x768xf32>
    %2967 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2968 = stablehlo.select %1448, %2966, %2967 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2969 = stablehlo.broadcast_in_dim %1449, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2970 = stablehlo.divide %2968, %2969 : tensor<64x512x768xf32>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2971 = stablehlo.reduce(%2970 init: %cst_221) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2972 = stablehlo.reshape %2971 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2973 = stablehlo.reduce(%2972 init: %cst_222) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2974 = stablehlo.dot_general %2970, %1437, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2975 = stablehlo.transpose %2974, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2976 = stablehlo.dot_general %2970, %1438, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2977 = stablehlo.transpose %2975, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2978 = stablehlo.multiply %1418, %2976 : tensor<64x512x3072xf32>
    %2979 = stablehlo.multiply %2976, %1436 : tensor<64x512x3072xf32>
    %2980 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2981 = stablehlo.multiply %2980, %2978 : tensor<64x512x3072xf32>
    %2982 = stablehlo.multiply %2981, %1432 : tensor<64x512x3072xf32>
    %2983 = stablehlo.multiply %2982, %1429 : tensor<64x512x3072xf32>
    %2984 = stablehlo.add %2982, %2983 : tensor<64x512x3072xf32>
    %2985 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2986 = stablehlo.multiply %2985, %2984 : tensor<64x512x3072xf32>
    %2987 = stablehlo.add %2979, %2986 : tensor<64x512x3072xf32>
    %2988 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2989 = stablehlo.multiply %2988, %2986 : tensor<64x512x3072xf32>
    %2990 = stablehlo.multiply %2989, %1423 : tensor<64x512x3072xf32>
    %2991 = stablehlo.add %2987, %2990 : tensor<64x512x3072xf32>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2992 = stablehlo.reduce(%2991 init: %cst_223) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2993 = stablehlo.reshape %2992 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2994 = stablehlo.reduce(%2993 init: %cst_224) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2995 = stablehlo.dot_general %2991, %1413, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2996 = stablehlo.transpose %2995, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2997 = stablehlo.dot_general %2991, %1414, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2998 = stablehlo.add %2966, %2997 : tensor<64x512x768xf32>
    %2999 = stablehlo.transpose %2996, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3000 = stablehlo.reduce(%2998 init: %cst_225) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3001 = stablehlo.reshape %3000 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3002 = stablehlo.reduce(%3001 init: %cst_226) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3003 = stablehlo.broadcast_in_dim %1408, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3004 = stablehlo.multiply %3003, %2998 : tensor<64x512x768xf32>
    %3005 = stablehlo.multiply %2998, %1407 : tensor<64x512x768xf32>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3006 = stablehlo.reduce(%3005 init: %cst_227) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3007 = stablehlo.reshape %3006 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3008 = stablehlo.reduce(%3007 init: %cst_228) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3009 = stablehlo.multiply %1405, %3004 : tensor<64x512x768xf32>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3010 = stablehlo.reduce(%3009 init: %cst_229) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3011 = stablehlo.reshape %3010 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3012 = stablehlo.broadcast_in_dim %1400, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3013 = stablehlo.multiply %3004, %3012 : tensor<64x512x768xf32>
    %3014 = stablehlo.negate %3013 : tensor<64x512x768xf32>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3015 = stablehlo.reduce(%3014 init: %cst_230) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3016 = stablehlo.reshape %3015 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3017 = stablehlo.multiply %3011, %1403 : tensor<64x512x1xf32>
    %3018 = stablehlo.multiply %3017, %1397 : tensor<64x512x1xf32>
    %3019 = call @_var_178(%1385#1, %1385#2, %1385#3, %3018) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3020 = stablehlo.add %3013, %3019 : tensor<64x512x768xf32>
    %3021 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3022 = stablehlo.divide %3016, %3021 : tensor<64x512x1xf32>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3023 = stablehlo.reduce(%3022 init: %cst_231) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3024 = stablehlo.broadcast_in_dim %3023, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3025 = stablehlo.add %3020, %3024 : tensor<64x512x768xf32>
    %3026 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3027 = stablehlo.select %1374, %3025, %3026 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3028 = stablehlo.broadcast_in_dim %1375, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3029 = stablehlo.divide %3027, %3028 : tensor<64x512x768xf32>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3030 = stablehlo.reduce(%3029 init: %cst_232) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3031 = stablehlo.reshape %3030 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3032 = stablehlo.reduce(%3031 init: %cst_233) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3033 = stablehlo.dot_general %3029, %1363, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3034 = stablehlo.transpose %3033, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3035 = stablehlo.dot_general %3029, %1364, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3036 = stablehlo.transpose %3034, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3037 = stablehlo.reshape %3035 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3038 = stablehlo.transpose %3037, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3039 = stablehlo.dot_general %3038, %1329, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3040 = stablehlo.transpose %3039, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3041 = stablehlo.dot_general %3038, %1360, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3042 = stablehlo.transpose %3041, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3043 = stablehlo.multiply %3040, %1359 : tensor<64x512x12x512xf32>
    %3044 = stablehlo.broadcast_in_dim %1354, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3045 = stablehlo.multiply %3043, %3044 : tensor<64x512x12x512xf32>
    %3046 = stablehlo.multiply %3045, %1347 : tensor<64x512x12x512xf32>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3047 = stablehlo.reduce(%3046 init: %cst_234) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3048 = stablehlo.reshape %3047 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3049 = stablehlo.negate %3048 : tensor<64x512x12x1xf32>
    %3050 = stablehlo.broadcast_in_dim %1349, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3051 = stablehlo.divide %3043, %3050 : tensor<64x512x12x512xf32>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3052 = stablehlo.reduce(%3049 init: %cst_235) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3053 = stablehlo.broadcast_in_dim %3052, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3054 = stablehlo.add %3051, %3053 : tensor<64x512x12x512xf32>
    %3055 = stablehlo.multiply %3054, %1347 : tensor<64x512x12x512xf32>
    %3056 = call @_where_205(%1340#1, %3055) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3057 = stablehlo.transpose %3056, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3058 = stablehlo.dot_general %3057, %1328, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3059 = stablehlo.transpose %3058, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3060 = stablehlo.dot_general %3057, %1337, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3061 = stablehlo.transpose %3060, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3062 = stablehlo.broadcast_in_dim %1335, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3063 = stablehlo.divide %3059, %3062 : tensor<64x512x12x64xf32>
    %3064 = stablehlo.reshape %3042 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3065 = stablehlo.reshape %3061 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3066 = stablehlo.reshape %3063 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3067 = stablehlo.reduce(%3064 init: %cst_236) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3068 = stablehlo.reshape %3067 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3069 = stablehlo.reduce(%3068 init: %cst_237) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3070 = stablehlo.dot_general %3064, %1311, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3071 = stablehlo.transpose %3070, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3072 = stablehlo.dot_general %3064, %1322, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3073 = stablehlo.add %3025, %3072 : tensor<64x512x768xf32>
    %3074 = stablehlo.transpose %3071, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3075 = stablehlo.reduce(%3065 init: %cst_238) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3076 = stablehlo.reshape %3075 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3077 = stablehlo.reduce(%3076 init: %cst_239) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3078 = stablehlo.dot_general %3065, %1311, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3079 = stablehlo.transpose %3078, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3080 = stablehlo.dot_general %3065, %1317, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3081 = stablehlo.add %3073, %3080 : tensor<64x512x768xf32>
    %3082 = stablehlo.transpose %3079, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3083 = stablehlo.reduce(%3066 init: %cst_240) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3084 = stablehlo.reshape %3083 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3085 = stablehlo.reduce(%3084 init: %cst_241) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3086 = stablehlo.dot_general %3066, %1311, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3087 = stablehlo.transpose %3086, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3088 = stablehlo.dot_general %3066, %1312, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3089 = stablehlo.add %3081, %3088 : tensor<64x512x768xf32>
    %3090 = stablehlo.transpose %3087, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3091 = stablehlo.reduce(%3089 init: %cst_242) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3092 = stablehlo.reshape %3091 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3093 = stablehlo.reduce(%3092 init: %cst_243) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3094 = stablehlo.broadcast_in_dim %1306, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3095 = stablehlo.multiply %3094, %3089 : tensor<64x512x768xf32>
    %3096 = stablehlo.multiply %3089, %1305 : tensor<64x512x768xf32>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3097 = stablehlo.reduce(%3096 init: %cst_244) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3098 = stablehlo.reshape %3097 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3099 = stablehlo.reduce(%3098 init: %cst_245) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3100 = stablehlo.multiply %1303, %3095 : tensor<64x512x768xf32>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3101 = stablehlo.reduce(%3100 init: %cst_246) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3102 = stablehlo.reshape %3101 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3103 = stablehlo.broadcast_in_dim %1298, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3104 = stablehlo.multiply %3095, %3103 : tensor<64x512x768xf32>
    %3105 = stablehlo.negate %3104 : tensor<64x512x768xf32>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3106 = stablehlo.reduce(%3105 init: %cst_247) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3107 = stablehlo.reshape %3106 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3108 = stablehlo.multiply %3102, %1301 : tensor<64x512x1xf32>
    %3109 = stablehlo.multiply %3108, %1295 : tensor<64x512x1xf32>
    %3110 = call @_var_178(%1283#1, %1283#2, %1283#3, %3109) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3111 = stablehlo.add %3104, %3110 : tensor<64x512x768xf32>
    %3112 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3113 = stablehlo.divide %3107, %3112 : tensor<64x512x1xf32>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3114 = stablehlo.reduce(%3113 init: %cst_248) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3115 = stablehlo.broadcast_in_dim %3114, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3116 = stablehlo.add %3111, %3115 : tensor<64x512x768xf32>
    %3117 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3118 = stablehlo.select %1272, %3116, %3117 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3119 = stablehlo.broadcast_in_dim %1273, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3120 = stablehlo.divide %3118, %3119 : tensor<64x512x768xf32>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3121 = stablehlo.reduce(%3120 init: %cst_249) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3122 = stablehlo.reshape %3121 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3123 = stablehlo.reduce(%3122 init: %cst_250) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3124 = stablehlo.dot_general %3120, %1261, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3125 = stablehlo.transpose %3124, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3126 = stablehlo.dot_general %3120, %1262, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3127 = stablehlo.transpose %3125, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3128 = stablehlo.multiply %1242, %3126 : tensor<64x512x3072xf32>
    %3129 = stablehlo.multiply %3126, %1260 : tensor<64x512x3072xf32>
    %3130 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3131 = stablehlo.multiply %3130, %3128 : tensor<64x512x3072xf32>
    %3132 = stablehlo.multiply %3131, %1256 : tensor<64x512x3072xf32>
    %3133 = stablehlo.multiply %3132, %1253 : tensor<64x512x3072xf32>
    %3134 = stablehlo.add %3132, %3133 : tensor<64x512x3072xf32>
    %3135 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3136 = stablehlo.multiply %3135, %3134 : tensor<64x512x3072xf32>
    %3137 = stablehlo.add %3129, %3136 : tensor<64x512x3072xf32>
    %3138 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3139 = stablehlo.multiply %3138, %3136 : tensor<64x512x3072xf32>
    %3140 = stablehlo.multiply %3139, %1247 : tensor<64x512x3072xf32>
    %3141 = stablehlo.add %3137, %3140 : tensor<64x512x3072xf32>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3142 = stablehlo.reduce(%3141 init: %cst_251) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3143 = stablehlo.reshape %3142 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3144 = stablehlo.reduce(%3143 init: %cst_252) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3145 = stablehlo.dot_general %3141, %1237, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3146 = stablehlo.transpose %3145, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3147 = stablehlo.dot_general %3141, %1238, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3148 = stablehlo.add %3116, %3147 : tensor<64x512x768xf32>
    %3149 = stablehlo.transpose %3146, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3150 = stablehlo.reduce(%3148 init: %cst_253) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3151 = stablehlo.reshape %3150 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3152 = stablehlo.reduce(%3151 init: %cst_254) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3153 = stablehlo.broadcast_in_dim %1232, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3154 = stablehlo.multiply %3153, %3148 : tensor<64x512x768xf32>
    %3155 = stablehlo.multiply %3148, %1231 : tensor<64x512x768xf32>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3156 = stablehlo.reduce(%3155 init: %cst_255) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3157 = stablehlo.reshape %3156 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3158 = stablehlo.reduce(%3157 init: %cst_256) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3159 = stablehlo.multiply %1229, %3154 : tensor<64x512x768xf32>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3160 = stablehlo.reduce(%3159 init: %cst_257) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3161 = stablehlo.reshape %3160 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3162 = stablehlo.broadcast_in_dim %1224, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3163 = stablehlo.multiply %3154, %3162 : tensor<64x512x768xf32>
    %3164 = stablehlo.negate %3163 : tensor<64x512x768xf32>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3165 = stablehlo.reduce(%3164 init: %cst_258) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3166 = stablehlo.reshape %3165 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3167 = stablehlo.multiply %3161, %1227 : tensor<64x512x1xf32>
    %3168 = stablehlo.multiply %3167, %1221 : tensor<64x512x1xf32>
    %3169 = call @_var_178(%1209#1, %1209#2, %1209#3, %3168) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3170 = stablehlo.add %3163, %3169 : tensor<64x512x768xf32>
    %3171 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3172 = stablehlo.divide %3166, %3171 : tensor<64x512x1xf32>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3173 = stablehlo.reduce(%3172 init: %cst_259) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3174 = stablehlo.broadcast_in_dim %3173, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3175 = stablehlo.add %3170, %3174 : tensor<64x512x768xf32>
    %3176 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3177 = stablehlo.select %1198, %3175, %3176 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3178 = stablehlo.broadcast_in_dim %1199, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3179 = stablehlo.divide %3177, %3178 : tensor<64x512x768xf32>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3180 = stablehlo.reduce(%3179 init: %cst_260) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3181 = stablehlo.reshape %3180 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3182 = stablehlo.reduce(%3181 init: %cst_261) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3183 = stablehlo.dot_general %3179, %1187, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3184 = stablehlo.transpose %3183, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3185 = stablehlo.dot_general %3179, %1188, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3186 = stablehlo.transpose %3184, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3187 = stablehlo.reshape %3185 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3188 = stablehlo.transpose %3187, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3189 = stablehlo.dot_general %3188, %1153, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3190 = stablehlo.transpose %3189, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3191 = stablehlo.dot_general %3188, %1184, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3192 = stablehlo.transpose %3191, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3193 = stablehlo.multiply %3190, %1183 : tensor<64x512x12x512xf32>
    %3194 = stablehlo.broadcast_in_dim %1178, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3195 = stablehlo.multiply %3193, %3194 : tensor<64x512x12x512xf32>
    %3196 = stablehlo.multiply %3195, %1171 : tensor<64x512x12x512xf32>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3197 = stablehlo.reduce(%3196 init: %cst_262) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3198 = stablehlo.reshape %3197 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3199 = stablehlo.negate %3198 : tensor<64x512x12x1xf32>
    %3200 = stablehlo.broadcast_in_dim %1173, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3201 = stablehlo.divide %3193, %3200 : tensor<64x512x12x512xf32>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3202 = stablehlo.reduce(%3199 init: %cst_263) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3203 = stablehlo.broadcast_in_dim %3202, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3204 = stablehlo.add %3201, %3203 : tensor<64x512x12x512xf32>
    %3205 = stablehlo.multiply %3204, %1171 : tensor<64x512x12x512xf32>
    %3206 = call @_where_205(%1164#1, %3205) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3207 = stablehlo.transpose %3206, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3208 = stablehlo.dot_general %3207, %1152, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3209 = stablehlo.transpose %3208, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3210 = stablehlo.dot_general %3207, %1161, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3211 = stablehlo.transpose %3210, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3212 = stablehlo.broadcast_in_dim %1159, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3213 = stablehlo.divide %3209, %3212 : tensor<64x512x12x64xf32>
    %3214 = stablehlo.reshape %3192 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3215 = stablehlo.reshape %3211 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3216 = stablehlo.reshape %3213 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3217 = stablehlo.reduce(%3214 init: %cst_264) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3218 = stablehlo.reshape %3217 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3219 = stablehlo.reduce(%3218 init: %cst_265) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3220 = stablehlo.dot_general %3214, %1135, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3221 = stablehlo.transpose %3220, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3222 = stablehlo.dot_general %3214, %1146, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3223 = stablehlo.add %3175, %3222 : tensor<64x512x768xf32>
    %3224 = stablehlo.transpose %3221, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3225 = stablehlo.reduce(%3215 init: %cst_266) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3226 = stablehlo.reshape %3225 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3227 = stablehlo.reduce(%3226 init: %cst_267) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3228 = stablehlo.dot_general %3215, %1135, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3229 = stablehlo.transpose %3228, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3230 = stablehlo.dot_general %3215, %1141, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3231 = stablehlo.add %3223, %3230 : tensor<64x512x768xf32>
    %3232 = stablehlo.transpose %3229, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3233 = stablehlo.reduce(%3216 init: %cst_268) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3234 = stablehlo.reshape %3233 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3235 = stablehlo.reduce(%3234 init: %cst_269) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3236 = stablehlo.dot_general %3216, %1135, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3237 = stablehlo.transpose %3236, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3238 = stablehlo.dot_general %3216, %1136, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3239 = stablehlo.add %3231, %3238 : tensor<64x512x768xf32>
    %3240 = stablehlo.transpose %3237, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3241 = stablehlo.reduce(%3239 init: %cst_270) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3242 = stablehlo.reshape %3241 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3243 = stablehlo.reduce(%3242 init: %cst_271) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3244 = stablehlo.broadcast_in_dim %1130, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3245 = stablehlo.multiply %3244, %3239 : tensor<64x512x768xf32>
    %3246 = stablehlo.multiply %3239, %1129 : tensor<64x512x768xf32>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3247 = stablehlo.reduce(%3246 init: %cst_272) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3248 = stablehlo.reshape %3247 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3249 = stablehlo.reduce(%3248 init: %cst_273) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3250 = stablehlo.multiply %1127, %3245 : tensor<64x512x768xf32>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3251 = stablehlo.reduce(%3250 init: %cst_274) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3252 = stablehlo.reshape %3251 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3253 = stablehlo.broadcast_in_dim %1122, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3254 = stablehlo.multiply %3245, %3253 : tensor<64x512x768xf32>
    %3255 = stablehlo.negate %3254 : tensor<64x512x768xf32>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3256 = stablehlo.reduce(%3255 init: %cst_275) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3257 = stablehlo.reshape %3256 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3258 = stablehlo.multiply %3252, %1125 : tensor<64x512x1xf32>
    %3259 = stablehlo.multiply %3258, %1119 : tensor<64x512x1xf32>
    %3260 = call @_var_178(%1107#1, %1107#2, %1107#3, %3259) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3261 = stablehlo.add %3254, %3260 : tensor<64x512x768xf32>
    %3262 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3263 = stablehlo.divide %3257, %3262 : tensor<64x512x1xf32>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3264 = stablehlo.reduce(%3263 init: %cst_276) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3265 = stablehlo.broadcast_in_dim %3264, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3266 = stablehlo.add %3261, %3265 : tensor<64x512x768xf32>
    %3267 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3268 = stablehlo.select %1096, %3266, %3267 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3269 = stablehlo.broadcast_in_dim %1097, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3270 = stablehlo.divide %3268, %3269 : tensor<64x512x768xf32>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3271 = stablehlo.reduce(%3270 init: %cst_277) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3272 = stablehlo.reshape %3271 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3273 = stablehlo.reduce(%3272 init: %cst_278) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3274 = stablehlo.dot_general %3270, %1085, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3275 = stablehlo.transpose %3274, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3276 = stablehlo.dot_general %3270, %1086, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3277 = stablehlo.transpose %3275, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3278 = stablehlo.multiply %1066, %3276 : tensor<64x512x3072xf32>
    %3279 = stablehlo.multiply %3276, %1084 : tensor<64x512x3072xf32>
    %3280 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3281 = stablehlo.multiply %3280, %3278 : tensor<64x512x3072xf32>
    %3282 = stablehlo.multiply %3281, %1080 : tensor<64x512x3072xf32>
    %3283 = stablehlo.multiply %3282, %1077 : tensor<64x512x3072xf32>
    %3284 = stablehlo.add %3282, %3283 : tensor<64x512x3072xf32>
    %3285 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3286 = stablehlo.multiply %3285, %3284 : tensor<64x512x3072xf32>
    %3287 = stablehlo.add %3279, %3286 : tensor<64x512x3072xf32>
    %3288 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3289 = stablehlo.multiply %3288, %3286 : tensor<64x512x3072xf32>
    %3290 = stablehlo.multiply %3289, %1071 : tensor<64x512x3072xf32>
    %3291 = stablehlo.add %3287, %3290 : tensor<64x512x3072xf32>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3292 = stablehlo.reduce(%3291 init: %cst_279) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3293 = stablehlo.reshape %3292 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3294 = stablehlo.reduce(%3293 init: %cst_280) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3295 = stablehlo.dot_general %3291, %1061, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3296 = stablehlo.transpose %3295, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3297 = stablehlo.dot_general %3291, %1062, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3298 = stablehlo.add %3266, %3297 : tensor<64x512x768xf32>
    %3299 = stablehlo.transpose %3296, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3300 = stablehlo.reduce(%3298 init: %cst_281) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3301 = stablehlo.reshape %3300 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3302 = stablehlo.reduce(%3301 init: %cst_282) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3303 = stablehlo.broadcast_in_dim %1056, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3304 = stablehlo.multiply %3303, %3298 : tensor<64x512x768xf32>
    %3305 = stablehlo.multiply %3298, %1055 : tensor<64x512x768xf32>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3306 = stablehlo.reduce(%3305 init: %cst_283) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3307 = stablehlo.reshape %3306 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3308 = stablehlo.reduce(%3307 init: %cst_284) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3309 = stablehlo.multiply %1053, %3304 : tensor<64x512x768xf32>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3310 = stablehlo.reduce(%3309 init: %cst_285) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3311 = stablehlo.reshape %3310 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3312 = stablehlo.broadcast_in_dim %1048, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3313 = stablehlo.multiply %3304, %3312 : tensor<64x512x768xf32>
    %3314 = stablehlo.negate %3313 : tensor<64x512x768xf32>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3315 = stablehlo.reduce(%3314 init: %cst_286) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3316 = stablehlo.reshape %3315 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3317 = stablehlo.multiply %3311, %1051 : tensor<64x512x1xf32>
    %3318 = stablehlo.multiply %3317, %1045 : tensor<64x512x1xf32>
    %3319 = call @_var_178(%1033#1, %1033#2, %1033#3, %3318) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3320 = stablehlo.add %3313, %3319 : tensor<64x512x768xf32>
    %3321 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3322 = stablehlo.divide %3316, %3321 : tensor<64x512x1xf32>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3323 = stablehlo.reduce(%3322 init: %cst_287) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3324 = stablehlo.broadcast_in_dim %3323, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3325 = stablehlo.add %3320, %3324 : tensor<64x512x768xf32>
    %3326 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3327 = stablehlo.select %1022, %3325, %3326 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3328 = stablehlo.broadcast_in_dim %1023, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3329 = stablehlo.divide %3327, %3328 : tensor<64x512x768xf32>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3330 = stablehlo.reduce(%3329 init: %cst_288) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3331 = stablehlo.reshape %3330 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3332 = stablehlo.reduce(%3331 init: %cst_289) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3333 = stablehlo.dot_general %3329, %1011, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3334 = stablehlo.transpose %3333, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3335 = stablehlo.dot_general %3329, %1012, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3336 = stablehlo.transpose %3334, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3337 = stablehlo.reshape %3335 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3338 = stablehlo.transpose %3337, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3339 = stablehlo.dot_general %3338, %977, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3340 = stablehlo.transpose %3339, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3341 = stablehlo.dot_general %3338, %1008, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3342 = stablehlo.transpose %3341, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3343 = stablehlo.multiply %3340, %1007 : tensor<64x512x12x512xf32>
    %3344 = stablehlo.broadcast_in_dim %1002, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3345 = stablehlo.multiply %3343, %3344 : tensor<64x512x12x512xf32>
    %3346 = stablehlo.multiply %3345, %995 : tensor<64x512x12x512xf32>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3347 = stablehlo.reduce(%3346 init: %cst_290) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3348 = stablehlo.reshape %3347 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3349 = stablehlo.negate %3348 : tensor<64x512x12x1xf32>
    %3350 = stablehlo.broadcast_in_dim %997, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3351 = stablehlo.divide %3343, %3350 : tensor<64x512x12x512xf32>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3352 = stablehlo.reduce(%3349 init: %cst_291) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3353 = stablehlo.broadcast_in_dim %3352, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3354 = stablehlo.add %3351, %3353 : tensor<64x512x12x512xf32>
    %3355 = stablehlo.multiply %3354, %995 : tensor<64x512x12x512xf32>
    %3356 = call @_where_205(%988#1, %3355) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3357 = stablehlo.transpose %3356, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3358 = stablehlo.dot_general %3357, %976, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3359 = stablehlo.transpose %3358, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3360 = stablehlo.dot_general %3357, %985, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3361 = stablehlo.transpose %3360, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3362 = stablehlo.broadcast_in_dim %983, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3363 = stablehlo.divide %3359, %3362 : tensor<64x512x12x64xf32>
    %3364 = stablehlo.reshape %3342 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3365 = stablehlo.reshape %3361 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3366 = stablehlo.reshape %3363 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3367 = stablehlo.reduce(%3364 init: %cst_292) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3368 = stablehlo.reshape %3367 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3369 = stablehlo.reduce(%3368 init: %cst_293) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3370 = stablehlo.dot_general %3364, %959, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3371 = stablehlo.transpose %3370, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3372 = stablehlo.dot_general %3364, %970, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3373 = stablehlo.add %3325, %3372 : tensor<64x512x768xf32>
    %3374 = stablehlo.transpose %3371, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3375 = stablehlo.reduce(%3365 init: %cst_294) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3376 = stablehlo.reshape %3375 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3377 = stablehlo.reduce(%3376 init: %cst_295) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3378 = stablehlo.dot_general %3365, %959, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3379 = stablehlo.transpose %3378, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3380 = stablehlo.dot_general %3365, %965, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3381 = stablehlo.add %3373, %3380 : tensor<64x512x768xf32>
    %3382 = stablehlo.transpose %3379, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3383 = stablehlo.reduce(%3366 init: %cst_296) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3384 = stablehlo.reshape %3383 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3385 = stablehlo.reduce(%3384 init: %cst_297) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3386 = stablehlo.dot_general %3366, %959, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3387 = stablehlo.transpose %3386, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3388 = stablehlo.dot_general %3366, %960, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3389 = stablehlo.add %3381, %3388 : tensor<64x512x768xf32>
    %3390 = stablehlo.transpose %3387, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3391 = stablehlo.reduce(%3389 init: %cst_298) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3392 = stablehlo.reshape %3391 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3393 = stablehlo.reduce(%3392 init: %cst_299) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3394 = stablehlo.broadcast_in_dim %954, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3395 = stablehlo.multiply %3394, %3389 : tensor<64x512x768xf32>
    %3396 = stablehlo.multiply %3389, %953 : tensor<64x512x768xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3397 = stablehlo.reduce(%3396 init: %cst_300) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3398 = stablehlo.reshape %3397 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3399 = stablehlo.reduce(%3398 init: %cst_301) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3400 = stablehlo.multiply %951, %3395 : tensor<64x512x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3401 = stablehlo.reduce(%3400 init: %cst_302) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3402 = stablehlo.reshape %3401 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3403 = stablehlo.broadcast_in_dim %946, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3404 = stablehlo.multiply %3395, %3403 : tensor<64x512x768xf32>
    %3405 = stablehlo.negate %3404 : tensor<64x512x768xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3406 = stablehlo.reduce(%3405 init: %cst_303) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3407 = stablehlo.reshape %3406 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3408 = stablehlo.multiply %3402, %949 : tensor<64x512x1xf32>
    %3409 = stablehlo.multiply %3408, %943 : tensor<64x512x1xf32>
    %3410 = call @_var_178(%931#1, %931#2, %931#3, %3409) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3411 = stablehlo.add %3404, %3410 : tensor<64x512x768xf32>
    %3412 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3413 = stablehlo.divide %3407, %3412 : tensor<64x512x1xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3414 = stablehlo.reduce(%3413 init: %cst_304) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3415 = stablehlo.broadcast_in_dim %3414, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3416 = stablehlo.add %3411, %3415 : tensor<64x512x768xf32>
    %3417 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3418 = stablehlo.select %920, %3416, %3417 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3419 = stablehlo.broadcast_in_dim %921, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3420 = stablehlo.divide %3418, %3419 : tensor<64x512x768xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3421 = stablehlo.reduce(%3420 init: %cst_305) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3422 = stablehlo.reshape %3421 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3423 = stablehlo.reduce(%3422 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3424 = stablehlo.dot_general %3420, %909, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3425 = stablehlo.transpose %3424, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3426 = stablehlo.dot_general %3420, %910, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3427 = stablehlo.transpose %3425, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3428 = stablehlo.multiply %890, %3426 : tensor<64x512x3072xf32>
    %3429 = stablehlo.multiply %3426, %908 : tensor<64x512x3072xf32>
    %3430 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3431 = stablehlo.multiply %3430, %3428 : tensor<64x512x3072xf32>
    %3432 = stablehlo.multiply %3431, %904 : tensor<64x512x3072xf32>
    %3433 = stablehlo.multiply %3432, %901 : tensor<64x512x3072xf32>
    %3434 = stablehlo.add %3432, %3433 : tensor<64x512x3072xf32>
    %3435 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3436 = stablehlo.multiply %3435, %3434 : tensor<64x512x3072xf32>
    %3437 = stablehlo.add %3429, %3436 : tensor<64x512x3072xf32>
    %3438 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3439 = stablehlo.multiply %3438, %3436 : tensor<64x512x3072xf32>
    %3440 = stablehlo.multiply %3439, %895 : tensor<64x512x3072xf32>
    %3441 = stablehlo.add %3437, %3440 : tensor<64x512x3072xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3442 = stablehlo.reduce(%3441 init: %cst_307) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3443 = stablehlo.reshape %3442 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3444 = stablehlo.reduce(%3443 init: %cst_308) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3445 = stablehlo.dot_general %3441, %885, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3446 = stablehlo.transpose %3445, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3447 = stablehlo.dot_general %3441, %886, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3448 = stablehlo.add %3416, %3447 : tensor<64x512x768xf32>
    %3449 = stablehlo.transpose %3446, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3450 = stablehlo.reduce(%3448 init: %cst_309) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3451 = stablehlo.reshape %3450 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3452 = stablehlo.reduce(%3451 init: %cst_310) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3453 = stablehlo.broadcast_in_dim %880, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3454 = stablehlo.multiply %3453, %3448 : tensor<64x512x768xf32>
    %3455 = stablehlo.multiply %3448, %879 : tensor<64x512x768xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3456 = stablehlo.reduce(%3455 init: %cst_311) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3457 = stablehlo.reshape %3456 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3458 = stablehlo.reduce(%3457 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3459 = stablehlo.multiply %877, %3454 : tensor<64x512x768xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3460 = stablehlo.reduce(%3459 init: %cst_313) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3461 = stablehlo.reshape %3460 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3462 = stablehlo.broadcast_in_dim %872, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3463 = stablehlo.multiply %3454, %3462 : tensor<64x512x768xf32>
    %3464 = stablehlo.negate %3463 : tensor<64x512x768xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3465 = stablehlo.reduce(%3464 init: %cst_314) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3466 = stablehlo.reshape %3465 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3467 = stablehlo.multiply %3461, %875 : tensor<64x512x1xf32>
    %3468 = stablehlo.multiply %3467, %869 : tensor<64x512x1xf32>
    %3469 = call @_var_178(%857#1, %857#2, %857#3, %3468) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3470 = stablehlo.add %3463, %3469 : tensor<64x512x768xf32>
    %3471 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3472 = stablehlo.divide %3466, %3471 : tensor<64x512x1xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3473 = stablehlo.reduce(%3472 init: %cst_315) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3474 = stablehlo.broadcast_in_dim %3473, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3475 = stablehlo.add %3470, %3474 : tensor<64x512x768xf32>
    %3476 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3477 = stablehlo.select %846, %3475, %3476 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3478 = stablehlo.broadcast_in_dim %847, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3479 = stablehlo.divide %3477, %3478 : tensor<64x512x768xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3480 = stablehlo.reduce(%3479 init: %cst_316) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3481 = stablehlo.reshape %3480 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3482 = stablehlo.reduce(%3481 init: %cst_317) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3483 = stablehlo.dot_general %3479, %835, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3484 = stablehlo.transpose %3483, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3485 = stablehlo.dot_general %3479, %836, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3486 = stablehlo.transpose %3484, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3487 = stablehlo.reshape %3485 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3488 = stablehlo.transpose %3487, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3489 = stablehlo.dot_general %3488, %801, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3490 = stablehlo.transpose %3489, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3491 = stablehlo.dot_general %3488, %832, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3492 = stablehlo.transpose %3491, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3493 = stablehlo.multiply %3490, %831 : tensor<64x512x12x512xf32>
    %3494 = stablehlo.broadcast_in_dim %826, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3495 = stablehlo.multiply %3493, %3494 : tensor<64x512x12x512xf32>
    %3496 = stablehlo.multiply %3495, %819 : tensor<64x512x12x512xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3497 = stablehlo.reduce(%3496 init: %cst_318) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3498 = stablehlo.reshape %3497 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3499 = stablehlo.negate %3498 : tensor<64x512x12x1xf32>
    %3500 = stablehlo.broadcast_in_dim %821, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3501 = stablehlo.divide %3493, %3500 : tensor<64x512x12x512xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3502 = stablehlo.reduce(%3499 init: %cst_319) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3503 = stablehlo.broadcast_in_dim %3502, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3504 = stablehlo.add %3501, %3503 : tensor<64x512x12x512xf32>
    %3505 = stablehlo.multiply %3504, %819 : tensor<64x512x12x512xf32>
    %3506 = call @_where_205(%812#1, %3505) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3507 = stablehlo.transpose %3506, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3508 = stablehlo.dot_general %3507, %800, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3509 = stablehlo.transpose %3508, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3510 = stablehlo.dot_general %3507, %809, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3511 = stablehlo.transpose %3510, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3512 = stablehlo.broadcast_in_dim %807, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3513 = stablehlo.divide %3509, %3512 : tensor<64x512x12x64xf32>
    %3514 = stablehlo.reshape %3492 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3515 = stablehlo.reshape %3511 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3516 = stablehlo.reshape %3513 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3517 = stablehlo.reduce(%3514 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3518 = stablehlo.reshape %3517 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3519 = stablehlo.reduce(%3518 init: %cst_321) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3520 = stablehlo.dot_general %3514, %783, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3521 = stablehlo.transpose %3520, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3522 = stablehlo.dot_general %3514, %794, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3523 = stablehlo.add %3475, %3522 : tensor<64x512x768xf32>
    %3524 = stablehlo.transpose %3521, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3525 = stablehlo.reduce(%3515 init: %cst_322) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3526 = stablehlo.reshape %3525 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3527 = stablehlo.reduce(%3526 init: %cst_323) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3528 = stablehlo.dot_general %3515, %783, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3529 = stablehlo.transpose %3528, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3530 = stablehlo.dot_general %3515, %789, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3531 = stablehlo.add %3523, %3530 : tensor<64x512x768xf32>
    %3532 = stablehlo.transpose %3529, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3533 = stablehlo.reduce(%3516 init: %cst_324) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3534 = stablehlo.reshape %3533 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3535 = stablehlo.reduce(%3534 init: %cst_325) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3536 = stablehlo.dot_general %3516, %783, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3537 = stablehlo.transpose %3536, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3538 = stablehlo.dot_general %3516, %784, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3539 = stablehlo.add %3531, %3538 : tensor<64x512x768xf32>
    %3540 = stablehlo.transpose %3537, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3541 = stablehlo.reduce(%3539 init: %cst_326) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3542 = stablehlo.reshape %3541 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3543 = stablehlo.reduce(%3542 init: %cst_327) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3544 = stablehlo.broadcast_in_dim %778, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3545 = stablehlo.multiply %3544, %3539 : tensor<64x512x768xf32>
    %3546 = stablehlo.multiply %3539, %777 : tensor<64x512x768xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3547 = stablehlo.reduce(%3546 init: %cst_328) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3548 = stablehlo.reshape %3547 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3549 = stablehlo.reduce(%3548 init: %cst_329) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3550 = stablehlo.multiply %775, %3545 : tensor<64x512x768xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3551 = stablehlo.reduce(%3550 init: %cst_330) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3552 = stablehlo.reshape %3551 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3553 = stablehlo.broadcast_in_dim %770, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3554 = stablehlo.multiply %3545, %3553 : tensor<64x512x768xf32>
    %3555 = stablehlo.negate %3554 : tensor<64x512x768xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3556 = stablehlo.reduce(%3555 init: %cst_331) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3557 = stablehlo.reshape %3556 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3558 = stablehlo.multiply %3552, %773 : tensor<64x512x1xf32>
    %3559 = stablehlo.multiply %3558, %767 : tensor<64x512x1xf32>
    %3560 = call @_var_178(%755#1, %755#2, %755#3, %3559) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3561 = stablehlo.add %3554, %3560 : tensor<64x512x768xf32>
    %3562 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3563 = stablehlo.divide %3557, %3562 : tensor<64x512x1xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3564 = stablehlo.reduce(%3563 init: %cst_332) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3565 = stablehlo.broadcast_in_dim %3564, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3566 = stablehlo.add %3561, %3565 : tensor<64x512x768xf32>
    %3567 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3568 = stablehlo.select %744, %3566, %3567 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3569 = stablehlo.broadcast_in_dim %745, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3570 = stablehlo.divide %3568, %3569 : tensor<64x512x768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3571 = stablehlo.reduce(%3570 init: %cst_333) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3572 = stablehlo.reshape %3571 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3573 = stablehlo.reduce(%3572 init: %cst_334) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3574 = stablehlo.dot_general %3570, %733, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3575 = stablehlo.transpose %3574, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3576 = stablehlo.dot_general %3570, %734, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3577 = stablehlo.transpose %3575, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3578 = stablehlo.multiply %714, %3576 : tensor<64x512x3072xf32>
    %3579 = stablehlo.multiply %3576, %732 : tensor<64x512x3072xf32>
    %3580 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3581 = stablehlo.multiply %3580, %3578 : tensor<64x512x3072xf32>
    %3582 = stablehlo.multiply %3581, %728 : tensor<64x512x3072xf32>
    %3583 = stablehlo.multiply %3582, %725 : tensor<64x512x3072xf32>
    %3584 = stablehlo.add %3582, %3583 : tensor<64x512x3072xf32>
    %3585 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3586 = stablehlo.multiply %3585, %3584 : tensor<64x512x3072xf32>
    %3587 = stablehlo.add %3579, %3586 : tensor<64x512x3072xf32>
    %3588 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3589 = stablehlo.multiply %3588, %3586 : tensor<64x512x3072xf32>
    %3590 = stablehlo.multiply %3589, %719 : tensor<64x512x3072xf32>
    %3591 = stablehlo.add %3587, %3590 : tensor<64x512x3072xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3592 = stablehlo.reduce(%3591 init: %cst_335) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3593 = stablehlo.reshape %3592 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3594 = stablehlo.reduce(%3593 init: %cst_336) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3595 = stablehlo.dot_general %3591, %709, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3596 = stablehlo.transpose %3595, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3597 = stablehlo.dot_general %3591, %710, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3598 = stablehlo.add %3566, %3597 : tensor<64x512x768xf32>
    %3599 = stablehlo.transpose %3596, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3600 = stablehlo.reduce(%3598 init: %cst_337) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3601 = stablehlo.reshape %3600 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3602 = stablehlo.reduce(%3601 init: %cst_338) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3603 = stablehlo.broadcast_in_dim %704, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3604 = stablehlo.multiply %3603, %3598 : tensor<64x512x768xf32>
    %3605 = stablehlo.multiply %3598, %703 : tensor<64x512x768xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3606 = stablehlo.reduce(%3605 init: %cst_339) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3607 = stablehlo.reshape %3606 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3608 = stablehlo.reduce(%3607 init: %cst_340) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3609 = stablehlo.multiply %701, %3604 : tensor<64x512x768xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3610 = stablehlo.reduce(%3609 init: %cst_341) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3611 = stablehlo.reshape %3610 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3612 = stablehlo.broadcast_in_dim %696, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3613 = stablehlo.multiply %3604, %3612 : tensor<64x512x768xf32>
    %3614 = stablehlo.negate %3613 : tensor<64x512x768xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3615 = stablehlo.reduce(%3614 init: %cst_342) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3616 = stablehlo.reshape %3615 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3617 = stablehlo.multiply %3611, %699 : tensor<64x512x1xf32>
    %3618 = stablehlo.multiply %3617, %693 : tensor<64x512x1xf32>
    %3619 = call @_var_178(%681#1, %681#2, %681#3, %3618) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3620 = stablehlo.add %3613, %3619 : tensor<64x512x768xf32>
    %3621 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3622 = stablehlo.divide %3616, %3621 : tensor<64x512x1xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3623 = stablehlo.reduce(%3622 init: %cst_343) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3624 = stablehlo.broadcast_in_dim %3623, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3625 = stablehlo.add %3620, %3624 : tensor<64x512x768xf32>
    %3626 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3627 = stablehlo.select %670, %3625, %3626 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3628 = stablehlo.broadcast_in_dim %671, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3629 = stablehlo.divide %3627, %3628 : tensor<64x512x768xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3630 = stablehlo.reduce(%3629 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3631 = stablehlo.reshape %3630 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3632 = stablehlo.reduce(%3631 init: %cst_345) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3633 = stablehlo.dot_general %3629, %659, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3634 = stablehlo.transpose %3633, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3635 = stablehlo.dot_general %3629, %660, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3636 = stablehlo.transpose %3634, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3637 = stablehlo.reshape %3635 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3638 = stablehlo.transpose %3637, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3639 = stablehlo.dot_general %3638, %625, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3640 = stablehlo.transpose %3639, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3641 = stablehlo.dot_general %3638, %656, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3642 = stablehlo.transpose %3641, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3643 = stablehlo.multiply %3640, %655 : tensor<64x512x12x512xf32>
    %3644 = stablehlo.broadcast_in_dim %650, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3645 = stablehlo.multiply %3643, %3644 : tensor<64x512x12x512xf32>
    %3646 = stablehlo.multiply %3645, %643 : tensor<64x512x12x512xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3647 = stablehlo.reduce(%3646 init: %cst_346) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3648 = stablehlo.reshape %3647 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3649 = stablehlo.negate %3648 : tensor<64x512x12x1xf32>
    %3650 = stablehlo.broadcast_in_dim %645, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3651 = stablehlo.divide %3643, %3650 : tensor<64x512x12x512xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3652 = stablehlo.reduce(%3649 init: %cst_347) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3653 = stablehlo.broadcast_in_dim %3652, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3654 = stablehlo.add %3651, %3653 : tensor<64x512x12x512xf32>
    %3655 = stablehlo.multiply %3654, %643 : tensor<64x512x12x512xf32>
    %3656 = call @_where_205(%636#1, %3655) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3657 = stablehlo.transpose %3656, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3658 = stablehlo.dot_general %3657, %624, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3659 = stablehlo.transpose %3658, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3660 = stablehlo.dot_general %3657, %633, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3661 = stablehlo.transpose %3660, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3662 = stablehlo.broadcast_in_dim %631, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3663 = stablehlo.divide %3659, %3662 : tensor<64x512x12x64xf32>
    %3664 = stablehlo.reshape %3642 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3665 = stablehlo.reshape %3661 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3666 = stablehlo.reshape %3663 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3667 = stablehlo.reduce(%3664 init: %cst_348) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3668 = stablehlo.reshape %3667 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3669 = stablehlo.reduce(%3668 init: %cst_349) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3670 = stablehlo.dot_general %3664, %607, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3671 = stablehlo.transpose %3670, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3672 = stablehlo.dot_general %3664, %618, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3673 = stablehlo.add %3625, %3672 : tensor<64x512x768xf32>
    %3674 = stablehlo.transpose %3671, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3675 = stablehlo.reduce(%3665 init: %cst_350) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3676 = stablehlo.reshape %3675 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3677 = stablehlo.reduce(%3676 init: %cst_351) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3678 = stablehlo.dot_general %3665, %607, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3679 = stablehlo.transpose %3678, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3680 = stablehlo.dot_general %3665, %613, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3681 = stablehlo.add %3673, %3680 : tensor<64x512x768xf32>
    %3682 = stablehlo.transpose %3679, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3683 = stablehlo.reduce(%3666 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3684 = stablehlo.reshape %3683 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3685 = stablehlo.reduce(%3684 init: %cst_353) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3686 = stablehlo.dot_general %3666, %607, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3687 = stablehlo.transpose %3686, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3688 = stablehlo.dot_general %3666, %608, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3689 = stablehlo.add %3681, %3688 : tensor<64x512x768xf32>
    %3690 = stablehlo.transpose %3687, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3691 = stablehlo.reduce(%3689 init: %cst_354) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3692 = stablehlo.reshape %3691 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3693 = stablehlo.reduce(%3692 init: %cst_355) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3694 = stablehlo.broadcast_in_dim %602, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3695 = stablehlo.multiply %3694, %3689 : tensor<64x512x768xf32>
    %3696 = stablehlo.multiply %3689, %601 : tensor<64x512x768xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3697 = stablehlo.reduce(%3696 init: %cst_356) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3698 = stablehlo.reshape %3697 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3699 = stablehlo.reduce(%3698 init: %cst_357) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3700 = stablehlo.multiply %599, %3695 : tensor<64x512x768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3701 = stablehlo.reduce(%3700 init: %cst_358) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3702 = stablehlo.reshape %3701 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3703 = stablehlo.broadcast_in_dim %594, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3704 = stablehlo.multiply %3695, %3703 : tensor<64x512x768xf32>
    %3705 = stablehlo.negate %3704 : tensor<64x512x768xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3706 = stablehlo.reduce(%3705 init: %cst_359) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3707 = stablehlo.reshape %3706 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3708 = stablehlo.multiply %3702, %597 : tensor<64x512x1xf32>
    %3709 = stablehlo.multiply %3708, %591 : tensor<64x512x1xf32>
    %3710 = call @_var_178(%579#1, %579#2, %579#3, %3709) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3711 = stablehlo.add %3704, %3710 : tensor<64x512x768xf32>
    %3712 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3713 = stablehlo.divide %3707, %3712 : tensor<64x512x1xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3714 = stablehlo.reduce(%3713 init: %cst_360) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3715 = stablehlo.broadcast_in_dim %3714, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3716 = stablehlo.add %3711, %3715 : tensor<64x512x768xf32>
    %3717 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3718 = stablehlo.select %568, %3716, %3717 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3719 = stablehlo.broadcast_in_dim %569, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3720 = stablehlo.divide %3718, %3719 : tensor<64x512x768xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3721 = stablehlo.reduce(%3720 init: %cst_361) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3722 = stablehlo.reshape %3721 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3723 = stablehlo.reduce(%3722 init: %cst_362) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3724 = stablehlo.dot_general %3720, %557, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3725 = stablehlo.transpose %3724, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3726 = stablehlo.dot_general %3720, %558, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3727 = stablehlo.transpose %3725, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3728 = stablehlo.multiply %538, %3726 : tensor<64x512x3072xf32>
    %3729 = stablehlo.multiply %3726, %556 : tensor<64x512x3072xf32>
    %3730 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3731 = stablehlo.multiply %3730, %3728 : tensor<64x512x3072xf32>
    %3732 = stablehlo.multiply %3731, %552 : tensor<64x512x3072xf32>
    %3733 = stablehlo.multiply %3732, %549 : tensor<64x512x3072xf32>
    %3734 = stablehlo.add %3732, %3733 : tensor<64x512x3072xf32>
    %3735 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3736 = stablehlo.multiply %3735, %3734 : tensor<64x512x3072xf32>
    %3737 = stablehlo.add %3729, %3736 : tensor<64x512x3072xf32>
    %3738 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3739 = stablehlo.multiply %3738, %3736 : tensor<64x512x3072xf32>
    %3740 = stablehlo.multiply %3739, %543 : tensor<64x512x3072xf32>
    %3741 = stablehlo.add %3737, %3740 : tensor<64x512x3072xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3742 = stablehlo.reduce(%3741 init: %cst_363) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3743 = stablehlo.reshape %3742 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3744 = stablehlo.reduce(%3743 init: %cst_364) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3745 = stablehlo.dot_general %3741, %533, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3746 = stablehlo.transpose %3745, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3747 = stablehlo.dot_general %3741, %534, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3748 = stablehlo.add %3716, %3747 : tensor<64x512x768xf32>
    %3749 = stablehlo.transpose %3746, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3750 = stablehlo.reduce(%3748 init: %cst_365) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3751 = stablehlo.reshape %3750 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3752 = stablehlo.reduce(%3751 init: %cst_366) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3753 = stablehlo.broadcast_in_dim %528, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3754 = stablehlo.multiply %3753, %3748 : tensor<64x512x768xf32>
    %3755 = stablehlo.multiply %3748, %527 : tensor<64x512x768xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3756 = stablehlo.reduce(%3755 init: %cst_367) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3757 = stablehlo.reshape %3756 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3758 = stablehlo.reduce(%3757 init: %cst_368) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3759 = stablehlo.multiply %525, %3754 : tensor<64x512x768xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3760 = stablehlo.reduce(%3759 init: %cst_369) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3761 = stablehlo.reshape %3760 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3762 = stablehlo.broadcast_in_dim %520, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3763 = stablehlo.multiply %3754, %3762 : tensor<64x512x768xf32>
    %3764 = stablehlo.negate %3763 : tensor<64x512x768xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3765 = stablehlo.reduce(%3764 init: %cst_370) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3766 = stablehlo.reshape %3765 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3767 = stablehlo.multiply %3761, %523 : tensor<64x512x1xf32>
    %3768 = stablehlo.multiply %3767, %517 : tensor<64x512x1xf32>
    %3769 = call @_var_178(%505#1, %505#2, %505#3, %3768) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3770 = stablehlo.add %3763, %3769 : tensor<64x512x768xf32>
    %3771 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3772 = stablehlo.divide %3766, %3771 : tensor<64x512x1xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3773 = stablehlo.reduce(%3772 init: %cst_371) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3774 = stablehlo.broadcast_in_dim %3773, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3775 = stablehlo.add %3770, %3774 : tensor<64x512x768xf32>
    %3776 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3777 = stablehlo.select %494, %3775, %3776 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3778 = stablehlo.broadcast_in_dim %495, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3779 = stablehlo.divide %3777, %3778 : tensor<64x512x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3780 = stablehlo.reduce(%3779 init: %cst_372) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3781 = stablehlo.reshape %3780 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3782 = stablehlo.reduce(%3781 init: %cst_373) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3783 = stablehlo.dot_general %3779, %483, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3784 = stablehlo.transpose %3783, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3785 = stablehlo.dot_general %3779, %484, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3786 = stablehlo.transpose %3784, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3787 = stablehlo.reshape %3785 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3788 = stablehlo.transpose %3787, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3789 = stablehlo.dot_general %3788, %449, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3790 = stablehlo.transpose %3789, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3791 = stablehlo.dot_general %3788, %480, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3792 = stablehlo.transpose %3791, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3793 = stablehlo.multiply %3790, %479 : tensor<64x512x12x512xf32>
    %3794 = stablehlo.broadcast_in_dim %474, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3795 = stablehlo.multiply %3793, %3794 : tensor<64x512x12x512xf32>
    %3796 = stablehlo.multiply %3795, %467 : tensor<64x512x12x512xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3797 = stablehlo.reduce(%3796 init: %cst_374) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3798 = stablehlo.reshape %3797 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3799 = stablehlo.negate %3798 : tensor<64x512x12x1xf32>
    %3800 = stablehlo.broadcast_in_dim %469, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3801 = stablehlo.divide %3793, %3800 : tensor<64x512x12x512xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3802 = stablehlo.reduce(%3799 init: %cst_375) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3803 = stablehlo.broadcast_in_dim %3802, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3804 = stablehlo.add %3801, %3803 : tensor<64x512x12x512xf32>
    %3805 = stablehlo.multiply %3804, %467 : tensor<64x512x12x512xf32>
    %3806 = call @_where_205(%460#1, %3805) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3807 = stablehlo.transpose %3806, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3808 = stablehlo.dot_general %3807, %448, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3809 = stablehlo.transpose %3808, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3810 = stablehlo.dot_general %3807, %457, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3811 = stablehlo.transpose %3810, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3812 = stablehlo.broadcast_in_dim %455, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3813 = stablehlo.divide %3809, %3812 : tensor<64x512x12x64xf32>
    %3814 = stablehlo.reshape %3792 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3815 = stablehlo.reshape %3811 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3816 = stablehlo.reshape %3813 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3817 = stablehlo.reduce(%3814 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3818 = stablehlo.reshape %3817 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3819 = stablehlo.reduce(%3818 init: %cst_377) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3820 = stablehlo.dot_general %3814, %431, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3821 = stablehlo.transpose %3820, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3822 = stablehlo.dot_general %3814, %442, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3823 = stablehlo.add %3775, %3822 : tensor<64x512x768xf32>
    %3824 = stablehlo.transpose %3821, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3825 = stablehlo.reduce(%3815 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3826 = stablehlo.reshape %3825 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3827 = stablehlo.reduce(%3826 init: %cst_379) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3828 = stablehlo.dot_general %3815, %431, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3829 = stablehlo.transpose %3828, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3830 = stablehlo.dot_general %3815, %437, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3831 = stablehlo.add %3823, %3830 : tensor<64x512x768xf32>
    %3832 = stablehlo.transpose %3829, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3833 = stablehlo.reduce(%3816 init: %cst_380) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3834 = stablehlo.reshape %3833 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3835 = stablehlo.reduce(%3834 init: %cst_381) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3836 = stablehlo.dot_general %3816, %431, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3837 = stablehlo.transpose %3836, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3838 = stablehlo.dot_general %3816, %432, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3839 = stablehlo.add %3831, %3838 : tensor<64x512x768xf32>
    %3840 = stablehlo.transpose %3837, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3841 = stablehlo.reduce(%3839 init: %cst_382) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3842 = stablehlo.reshape %3841 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3843 = stablehlo.reduce(%3842 init: %cst_383) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3844 = stablehlo.broadcast_in_dim %426, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3845 = stablehlo.multiply %3844, %3839 : tensor<64x512x768xf32>
    %3846 = stablehlo.multiply %3839, %425 : tensor<64x512x768xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3847 = stablehlo.reduce(%3846 init: %cst_384) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3848 = stablehlo.reshape %3847 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3849 = stablehlo.reduce(%3848 init: %cst_385) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3850 = stablehlo.multiply %423, %3845 : tensor<64x512x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3851 = stablehlo.reduce(%3850 init: %cst_386) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3852 = stablehlo.reshape %3851 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3853 = stablehlo.broadcast_in_dim %418, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3854 = stablehlo.multiply %3845, %3853 : tensor<64x512x768xf32>
    %3855 = stablehlo.negate %3854 : tensor<64x512x768xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3856 = stablehlo.reduce(%3855 init: %cst_387) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3857 = stablehlo.reshape %3856 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3858 = stablehlo.multiply %3852, %421 : tensor<64x512x1xf32>
    %3859 = stablehlo.multiply %3858, %415 : tensor<64x512x1xf32>
    %3860 = call @_var_178(%403#1, %403#2, %403#3, %3859) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3861 = stablehlo.add %3854, %3860 : tensor<64x512x768xf32>
    %3862 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3863 = stablehlo.divide %3857, %3862 : tensor<64x512x1xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3864 = stablehlo.reduce(%3863 init: %cst_388) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3865 = stablehlo.broadcast_in_dim %3864, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3866 = stablehlo.add %3861, %3865 : tensor<64x512x768xf32>
    %3867 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3868 = stablehlo.select %392, %3866, %3867 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3869 = stablehlo.broadcast_in_dim %393, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3870 = stablehlo.divide %3868, %3869 : tensor<64x512x768xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3871 = stablehlo.reduce(%3870 init: %cst_389) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3872 = stablehlo.reshape %3871 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3873 = stablehlo.reduce(%3872 init: %cst_390) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3874 = stablehlo.dot_general %3870, %381, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3875 = stablehlo.transpose %3874, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3876 = stablehlo.dot_general %3870, %382, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3877 = stablehlo.transpose %3875, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3878 = stablehlo.multiply %362, %3876 : tensor<64x512x3072xf32>
    %3879 = stablehlo.multiply %3876, %380 : tensor<64x512x3072xf32>
    %3880 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3881 = stablehlo.multiply %3880, %3878 : tensor<64x512x3072xf32>
    %3882 = stablehlo.multiply %3881, %376 : tensor<64x512x3072xf32>
    %3883 = stablehlo.multiply %3882, %373 : tensor<64x512x3072xf32>
    %3884 = stablehlo.add %3882, %3883 : tensor<64x512x3072xf32>
    %3885 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3886 = stablehlo.multiply %3885, %3884 : tensor<64x512x3072xf32>
    %3887 = stablehlo.add %3879, %3886 : tensor<64x512x3072xf32>
    %3888 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3889 = stablehlo.multiply %3888, %3886 : tensor<64x512x3072xf32>
    %3890 = stablehlo.multiply %3889, %367 : tensor<64x512x3072xf32>
    %3891 = stablehlo.add %3887, %3890 : tensor<64x512x3072xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3892 = stablehlo.reduce(%3891 init: %cst_391) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3893 = stablehlo.reshape %3892 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3894 = stablehlo.reduce(%3893 init: %cst_392) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3895 = stablehlo.dot_general %3891, %357, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3896 = stablehlo.transpose %3895, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3897 = stablehlo.dot_general %3891, %358, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3898 = stablehlo.add %3866, %3897 : tensor<64x512x768xf32>
    %3899 = stablehlo.transpose %3896, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3900 = stablehlo.reduce(%3898 init: %cst_393) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3901 = stablehlo.reshape %3900 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3902 = stablehlo.reduce(%3901 init: %cst_394) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3903 = stablehlo.broadcast_in_dim %352, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3904 = stablehlo.multiply %3903, %3898 : tensor<64x512x768xf32>
    %3905 = stablehlo.multiply %3898, %351 : tensor<64x512x768xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3906 = stablehlo.reduce(%3905 init: %cst_395) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3907 = stablehlo.reshape %3906 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3908 = stablehlo.reduce(%3907 init: %cst_396) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3909 = stablehlo.multiply %349, %3904 : tensor<64x512x768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3910 = stablehlo.reduce(%3909 init: %cst_397) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3911 = stablehlo.reshape %3910 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3912 = stablehlo.broadcast_in_dim %344, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3913 = stablehlo.multiply %3904, %3912 : tensor<64x512x768xf32>
    %3914 = stablehlo.negate %3913 : tensor<64x512x768xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3915 = stablehlo.reduce(%3914 init: %cst_398) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3916 = stablehlo.reshape %3915 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3917 = stablehlo.multiply %3911, %347 : tensor<64x512x1xf32>
    %3918 = stablehlo.multiply %3917, %341 : tensor<64x512x1xf32>
    %3919 = call @_var_178(%329#1, %329#2, %329#3, %3918) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3920 = stablehlo.add %3913, %3919 : tensor<64x512x768xf32>
    %3921 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3922 = stablehlo.divide %3916, %3921 : tensor<64x512x1xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3923 = stablehlo.reduce(%3922 init: %cst_399) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3924 = stablehlo.broadcast_in_dim %3923, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3925 = stablehlo.add %3920, %3924 : tensor<64x512x768xf32>
    %3926 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3927 = stablehlo.select %318, %3925, %3926 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3928 = stablehlo.broadcast_in_dim %319, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3929 = stablehlo.divide %3927, %3928 : tensor<64x512x768xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3930 = stablehlo.reduce(%3929 init: %cst_400) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3931 = stablehlo.reshape %3930 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3932 = stablehlo.reduce(%3931 init: %cst_401) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3933 = stablehlo.dot_general %3929, %307, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3934 = stablehlo.transpose %3933, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3935 = stablehlo.dot_general %3929, %308, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3936 = stablehlo.transpose %3934, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3937 = stablehlo.reshape %3935 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3938 = stablehlo.transpose %3937, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3939 = stablehlo.dot_general %3938, %273, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3940 = stablehlo.transpose %3939, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3941 = stablehlo.dot_general %3938, %304, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3942 = stablehlo.transpose %3941, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3943 = stablehlo.multiply %3940, %303 : tensor<64x512x12x512xf32>
    %3944 = stablehlo.broadcast_in_dim %298, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3945 = stablehlo.multiply %3943, %3944 : tensor<64x512x12x512xf32>
    %3946 = stablehlo.multiply %3945, %291 : tensor<64x512x12x512xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3947 = stablehlo.reduce(%3946 init: %cst_402) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3948 = stablehlo.reshape %3947 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3949 = stablehlo.negate %3948 : tensor<64x512x12x1xf32>
    %3950 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3951 = stablehlo.divide %3943, %3950 : tensor<64x512x12x512xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3952 = stablehlo.reduce(%3949 init: %cst_403) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3953 = stablehlo.broadcast_in_dim %3952, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3954 = stablehlo.add %3951, %3953 : tensor<64x512x12x512xf32>
    %3955 = stablehlo.multiply %3954, %291 : tensor<64x512x12x512xf32>
    %3956 = call @_where_205(%284#1, %3955) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3957 = stablehlo.transpose %3956, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3958 = stablehlo.dot_general %3957, %272, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3959 = stablehlo.transpose %3958, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3960 = stablehlo.dot_general %3957, %281, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3961 = stablehlo.transpose %3960, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3962 = stablehlo.broadcast_in_dim %279, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3963 = stablehlo.divide %3959, %3962 : tensor<64x512x12x64xf32>
    %3964 = stablehlo.reshape %3942 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3965 = stablehlo.reshape %3961 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3966 = stablehlo.reshape %3963 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3967 = stablehlo.reduce(%3964 init: %cst_404) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3968 = stablehlo.reshape %3967 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3969 = stablehlo.reduce(%3968 init: %cst_405) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3970 = stablehlo.dot_general %3964, %255, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3971 = stablehlo.transpose %3970, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3972 = stablehlo.dot_general %3964, %266, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3973 = stablehlo.add %3925, %3972 : tensor<64x512x768xf32>
    %3974 = stablehlo.transpose %3971, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3975 = stablehlo.reduce(%3965 init: %cst_406) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3976 = stablehlo.reshape %3975 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3977 = stablehlo.reduce(%3976 init: %cst_407) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3978 = stablehlo.dot_general %3965, %255, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3979 = stablehlo.transpose %3978, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3980 = stablehlo.dot_general %3965, %261, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3981 = stablehlo.add %3973, %3980 : tensor<64x512x768xf32>
    %3982 = stablehlo.transpose %3979, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3983 = stablehlo.reduce(%3966 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3984 = stablehlo.reshape %3983 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3985 = stablehlo.reduce(%3984 init: %cst_409) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3986 = stablehlo.dot_general %3966, %255, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3987 = stablehlo.transpose %3986, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3988 = stablehlo.dot_general %3966, %256, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3989 = stablehlo.add %3981, %3988 : tensor<64x512x768xf32>
    %3990 = stablehlo.transpose %3987, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3991 = stablehlo.reduce(%3989 init: %cst_410) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3992 = stablehlo.reshape %3991 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3993 = stablehlo.reduce(%3992 init: %cst_411) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3994 = stablehlo.broadcast_in_dim %250, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3995 = stablehlo.multiply %3994, %3989 : tensor<64x512x768xf32>
    %3996 = stablehlo.multiply %3989, %249 : tensor<64x512x768xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3997 = stablehlo.reduce(%3996 init: %cst_412) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3998 = stablehlo.reshape %3997 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3999 = stablehlo.reduce(%3998 init: %cst_413) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4000 = stablehlo.multiply %247, %3995 : tensor<64x512x768xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4001 = stablehlo.reduce(%4000 init: %cst_414) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4002 = stablehlo.reshape %4001 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4003 = stablehlo.broadcast_in_dim %242, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4004 = stablehlo.multiply %3995, %4003 : tensor<64x512x768xf32>
    %4005 = stablehlo.negate %4004 : tensor<64x512x768xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4006 = stablehlo.reduce(%4005 init: %cst_415) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4007 = stablehlo.reshape %4006 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4008 = stablehlo.multiply %4002, %245 : tensor<64x512x1xf32>
    %4009 = stablehlo.multiply %4008, %239 : tensor<64x512x1xf32>
    %4010 = call @_var_178(%227#1, %227#2, %227#3, %4009) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4011 = stablehlo.add %4004, %4010 : tensor<64x512x768xf32>
    %4012 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %4013 = stablehlo.divide %4007, %4012 : tensor<64x512x1xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4014 = stablehlo.reduce(%4013 init: %cst_416) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4015 = stablehlo.broadcast_in_dim %4014, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4016 = stablehlo.add %4011, %4015 : tensor<64x512x768xf32>
    %4017 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4018 = stablehlo.select %216, %4016, %4017 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4019 = stablehlo.broadcast_in_dim %217, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4020 = stablehlo.divide %4018, %4019 : tensor<64x512x768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4021 = stablehlo.reduce(%4020 init: %cst_417) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4022 = stablehlo.reshape %4021 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4023 = stablehlo.reduce(%4022 init: %cst_418) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4024 = stablehlo.dot_general %4020, %205, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4025 = stablehlo.transpose %4024, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4026 = stablehlo.dot_general %4020, %206, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4027 = stablehlo.transpose %4025, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4028 = stablehlo.multiply %186, %4026 : tensor<64x512x3072xf32>
    %4029 = stablehlo.multiply %4026, %204 : tensor<64x512x3072xf32>
    %4030 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4031 = stablehlo.multiply %4030, %4028 : tensor<64x512x3072xf32>
    %4032 = stablehlo.multiply %4031, %200 : tensor<64x512x3072xf32>
    %4033 = stablehlo.multiply %4032, %197 : tensor<64x512x3072xf32>
    %4034 = stablehlo.add %4032, %4033 : tensor<64x512x3072xf32>
    %4035 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4036 = stablehlo.multiply %4035, %4034 : tensor<64x512x3072xf32>
    %4037 = stablehlo.add %4029, %4036 : tensor<64x512x3072xf32>
    %4038 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4039 = stablehlo.multiply %4038, %4036 : tensor<64x512x3072xf32>
    %4040 = stablehlo.multiply %4039, %191 : tensor<64x512x3072xf32>
    %4041 = stablehlo.add %4037, %4040 : tensor<64x512x3072xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4042 = stablehlo.reduce(%4041 init: %cst_419) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4043 = stablehlo.reshape %4042 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4044 = stablehlo.reduce(%4043 init: %cst_420) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4045 = stablehlo.dot_general %4041, %181, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4046 = stablehlo.transpose %4045, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4047 = stablehlo.dot_general %4041, %182, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4048 = stablehlo.add %4016, %4047 : tensor<64x512x768xf32>
    %4049 = stablehlo.transpose %4046, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4050 = stablehlo.reduce(%4048 init: %cst_421) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4051 = stablehlo.reshape %4050 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4052 = stablehlo.reduce(%4051 init: %cst_422) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4053 = stablehlo.broadcast_in_dim %176, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4054 = stablehlo.multiply %4053, %4048 : tensor<64x512x768xf32>
    %4055 = stablehlo.multiply %4048, %175 : tensor<64x512x768xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4056 = stablehlo.reduce(%4055 init: %cst_423) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4057 = stablehlo.reshape %4056 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4058 = stablehlo.reduce(%4057 init: %cst_424) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4059 = stablehlo.multiply %173, %4054 : tensor<64x512x768xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4060 = stablehlo.reduce(%4059 init: %cst_425) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4061 = stablehlo.reshape %4060 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4062 = stablehlo.broadcast_in_dim %168, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4063 = stablehlo.multiply %4054, %4062 : tensor<64x512x768xf32>
    %4064 = stablehlo.negate %4063 : tensor<64x512x768xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4065 = stablehlo.reduce(%4064 init: %cst_426) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4066 = stablehlo.reshape %4065 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4067 = stablehlo.multiply %4061, %171 : tensor<64x512x1xf32>
    %4068 = stablehlo.multiply %4067, %165 : tensor<64x512x1xf32>
    %4069 = call @_var_178(%153#1, %153#2, %153#3, %4068) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4070 = stablehlo.add %4063, %4069 : tensor<64x512x768xf32>
    %4071 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %4072 = stablehlo.divide %4066, %4071 : tensor<64x512x1xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4073 = stablehlo.reduce(%4072 init: %cst_427) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4074 = stablehlo.broadcast_in_dim %4073, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4075 = stablehlo.add %4070, %4074 : tensor<64x512x768xf32>
    %4076 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4077 = stablehlo.select %142, %4075, %4076 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4078 = stablehlo.broadcast_in_dim %143, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4079 = stablehlo.divide %4077, %4078 : tensor<64x512x768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4080 = stablehlo.reduce(%4079 init: %cst_428) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4081 = stablehlo.reshape %4080 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4082 = stablehlo.reduce(%4081 init: %cst_429) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4083 = stablehlo.dot_general %4079, %131, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %4084 = stablehlo.transpose %4083, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4085 = stablehlo.dot_general %4079, %132, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %4086 = stablehlo.transpose %4084, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4087 = stablehlo.reshape %4085 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %4088 = stablehlo.transpose %4087, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4089 = stablehlo.dot_general %4088, %97, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4090 = stablehlo.transpose %4089, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %4091 = stablehlo.dot_general %4088, %128, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %4092 = stablehlo.transpose %4091, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4093 = stablehlo.multiply %4090, %127 : tensor<64x512x12x512xf32>
    %4094 = stablehlo.broadcast_in_dim %122, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %4095 = stablehlo.multiply %4093, %4094 : tensor<64x512x12x512xf32>
    %4096 = stablehlo.multiply %4095, %115 : tensor<64x512x12x512xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4097 = stablehlo.reduce(%4096 init: %cst_430) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %4098 = stablehlo.reshape %4097 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %4099 = stablehlo.negate %4098 : tensor<64x512x12x1xf32>
    %4100 = stablehlo.broadcast_in_dim %117, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %4101 = stablehlo.divide %4093, %4100 : tensor<64x512x12x512xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4102 = stablehlo.reduce(%4099 init: %cst_431) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %4103 = stablehlo.broadcast_in_dim %4102, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %4104 = stablehlo.add %4101, %4103 : tensor<64x512x12x512xf32>
    %4105 = stablehlo.multiply %4104, %115 : tensor<64x512x12x512xf32>
    %4106 = call @_where_205(%108#1, %4105) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %4107 = stablehlo.transpose %4106, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4108 = stablehlo.dot_general %4107, %96, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4109 = stablehlo.transpose %4108, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4110 = stablehlo.dot_general %4107, %105, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4111 = stablehlo.transpose %4110, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4112 = stablehlo.broadcast_in_dim %103, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4113 = stablehlo.divide %4109, %4112 : tensor<64x512x12x64xf32>
    %4114 = stablehlo.reshape %4092 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %4115 = stablehlo.reshape %4111 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %4116 = stablehlo.reshape %4113 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4117 = stablehlo.reduce(%4114 init: %cst_432) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4118 = stablehlo.reshape %4117 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4119 = stablehlo.reduce(%4118 init: %cst_433) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4120 = stablehlo.dot_general %4114, %69, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %4121 = stablehlo.transpose %4120, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4122 = stablehlo.dot_general %4114, %90, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %4123 = stablehlo.add %4075, %4122 : tensor<64x512x768xf32>
    %4124 = stablehlo.transpose %4121, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4125 = stablehlo.reduce(%4115 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4126 = stablehlo.reshape %4125 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4127 = stablehlo.reduce(%4126 init: %cst_435) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4128 = stablehlo.dot_general %4115, %69, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %4129 = stablehlo.transpose %4128, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4130 = stablehlo.dot_general %4115, %85, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %4131 = stablehlo.add %4123, %4130 : tensor<64x512x768xf32>
    %4132 = stablehlo.transpose %4129, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4133 = stablehlo.reduce(%4116 init: %cst_436) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4134 = stablehlo.reshape %4133 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4135 = stablehlo.reduce(%4134 init: %cst_437) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4136 = stablehlo.dot_general %4116, %69, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %4137 = stablehlo.transpose %4136, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4138 = stablehlo.dot_general %4116, %80, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %4139 = stablehlo.add %4131, %4138 : tensor<64x512x768xf32>
    %4140 = stablehlo.transpose %4137, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %4141 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4142 = stablehlo.select %64, %4139, %4141 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4143 = stablehlo.broadcast_in_dim %65, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4144 = stablehlo.divide %4142, %4143 : tensor<64x512x768xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4145 = stablehlo.reduce(%4144 init: %cst_438) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4146 = stablehlo.reshape %4145 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4147 = stablehlo.reduce(%4146 init: %cst_439) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4148 = stablehlo.broadcast_in_dim %53, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4149 = stablehlo.multiply %4148, %4144 : tensor<64x512x768xf32>
    %4150 = stablehlo.multiply %4144, %52 : tensor<64x512x768xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4151 = stablehlo.reduce(%4150 init: %cst_440) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4152 = stablehlo.reshape %4151 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4153 = stablehlo.reduce(%4152 init: %cst_441) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4154 = stablehlo.multiply %50, %4149 : tensor<64x512x768xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4155 = stablehlo.reduce(%4154 init: %cst_442) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4156 = stablehlo.reshape %4155 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4157 = stablehlo.broadcast_in_dim %45, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4158 = stablehlo.multiply %4149, %4157 : tensor<64x512x768xf32>
    %4159 = stablehlo.negate %4158 : tensor<64x512x768xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4160 = stablehlo.reduce(%4159 init: %cst_443) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4161 = stablehlo.reshape %4160 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4162 = stablehlo.multiply %4156, %48 : tensor<64x512x1xf32>
    %4163 = stablehlo.multiply %4162, %42 : tensor<64x512x1xf32>
    %4164 = call @_var_178(%30#1, %30#2, %30#3, %4163) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4165 = stablehlo.add %4158, %4164 : tensor<64x512x768xf32>
    %4166 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %4167 = stablehlo.divide %4161, %4166 : tensor<64x512x1xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4168 = stablehlo.reduce(%4167 init: %cst_444) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4169 = stablehlo.broadcast_in_dim %4168, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4170 = stablehlo.add %4165, %4169 : tensor<64x512x768xf32>
    %4171 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4172 = "stablehlo.scatter"(%4171, %22, %4170) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<f32>, %arg615: tensor<f32>):
      %11284 = stablehlo.add %arg614, %arg615 : tensor<f32>
      stablehlo.return %11284 : tensor<f32>
    }) : (tensor<2x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<2x768xf32>
    %4173 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4174 = "stablehlo.scatter"(%4173, %15, %4170) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<f32>, %arg615: tensor<f32>):
      %11284 = stablehlo.add %arg614, %arg615 : tensor<f32>
      stablehlo.return %11284 : tensor<f32>
    }) : (tensor<512x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<512x768xf32>
    %4175 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4176 = "stablehlo.scatter"(%4175, %8, %4170) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<f32>, %arg615: tensor<f32>):
      %11284 = stablehlo.add %arg614, %arg615 : tensor<f32>
      stablehlo.return %11284 : tensor<f32>
    }) : (tensor<30522x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %4177 = stablehlo.add %2292, %4176 : tensor<30522x768xf32>
    %4178 = stablehlo.multiply %4177, %4177 : tensor<30522x768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4179 = stablehlo.reduce(%4178 init: %cst_445) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %4180 = stablehlo.add %cst_5, %4179 : tensor<f32>
    %4181 = stablehlo.multiply %4174, %4174 : tensor<512x768xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4182 = stablehlo.reduce(%4181 init: %cst_446) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %4183 = stablehlo.add %4180, %4182 : tensor<f32>
    %4184 = stablehlo.multiply %4172, %4172 : tensor<2x768xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4185 = stablehlo.reduce(%4184 init: %cst_447) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %4186 = stablehlo.add %4183, %4185 : tensor<f32>
    %4187 = stablehlo.multiply %4153, %4153 : tensor<768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4188 = stablehlo.reduce(%4187 init: %cst_448) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4189 = stablehlo.add %4186, %4188 : tensor<f32>
    %4190 = stablehlo.multiply %4147, %4147 : tensor<768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4191 = stablehlo.reduce(%4190 init: %cst_449) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4192 = stablehlo.add %4189, %4191 : tensor<f32>
    %4193 = stablehlo.multiply %4140, %4140 : tensor<768x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4194 = stablehlo.reduce(%4193 init: %cst_450) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4195 = stablehlo.add %4192, %4194 : tensor<f32>
    %4196 = stablehlo.multiply %4135, %4135 : tensor<768xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4197 = stablehlo.reduce(%4196 init: %cst_451) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4198 = stablehlo.add %4195, %4197 : tensor<f32>
    %4199 = stablehlo.multiply %4124, %4124 : tensor<768x768xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4200 = stablehlo.reduce(%4199 init: %cst_452) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4201 = stablehlo.add %4198, %4200 : tensor<f32>
    %4202 = stablehlo.multiply %4119, %4119 : tensor<768xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4203 = stablehlo.reduce(%4202 init: %cst_453) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4204 = stablehlo.add %4201, %4203 : tensor<f32>
    %4205 = stablehlo.multiply %4132, %4132 : tensor<768x768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4206 = stablehlo.reduce(%4205 init: %cst_454) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4207 = stablehlo.add %4204, %4206 : tensor<f32>
    %4208 = stablehlo.multiply %4127, %4127 : tensor<768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4209 = stablehlo.reduce(%4208 init: %cst_455) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4210 = stablehlo.add %4207, %4209 : tensor<f32>
    %4211 = stablehlo.multiply %4086, %4086 : tensor<768x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4212 = stablehlo.reduce(%4211 init: %cst_456) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4213 = stablehlo.add %4210, %4212 : tensor<f32>
    %4214 = stablehlo.multiply %4082, %4082 : tensor<768xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4215 = stablehlo.reduce(%4214 init: %cst_457) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4216 = stablehlo.add %4213, %4215 : tensor<f32>
    %4217 = stablehlo.multiply %4058, %4058 : tensor<768xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4218 = stablehlo.reduce(%4217 init: %cst_458) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4219 = stablehlo.add %4216, %4218 : tensor<f32>
    %4220 = stablehlo.multiply %4052, %4052 : tensor<768xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4221 = stablehlo.reduce(%4220 init: %cst_459) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4222 = stablehlo.add %4219, %4221 : tensor<f32>
    %4223 = stablehlo.multiply %4049, %4049 : tensor<3072x768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4224 = stablehlo.reduce(%4223 init: %cst_460) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4225 = stablehlo.add %4222, %4224 : tensor<f32>
    %4226 = stablehlo.multiply %4044, %4044 : tensor<3072xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4227 = stablehlo.reduce(%4226 init: %cst_461) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4228 = stablehlo.add %4225, %4227 : tensor<f32>
    %4229 = stablehlo.multiply %4027, %4027 : tensor<768x3072xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4230 = stablehlo.reduce(%4229 init: %cst_462) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4231 = stablehlo.add %4228, %4230 : tensor<f32>
    %4232 = stablehlo.multiply %4023, %4023 : tensor<768xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4233 = stablehlo.reduce(%4232 init: %cst_463) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4234 = stablehlo.add %4231, %4233 : tensor<f32>
    %4235 = stablehlo.multiply %3999, %3999 : tensor<768xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4236 = stablehlo.reduce(%4235 init: %cst_464) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4237 = stablehlo.add %4234, %4236 : tensor<f32>
    %4238 = stablehlo.multiply %3993, %3993 : tensor<768xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4239 = stablehlo.reduce(%4238 init: %cst_465) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4240 = stablehlo.add %4237, %4239 : tensor<f32>
    %4241 = stablehlo.multiply %3990, %3990 : tensor<768x768xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4242 = stablehlo.reduce(%4241 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4243 = stablehlo.add %4240, %4242 : tensor<f32>
    %4244 = stablehlo.multiply %3985, %3985 : tensor<768xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4245 = stablehlo.reduce(%4244 init: %cst_467) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4246 = stablehlo.add %4243, %4245 : tensor<f32>
    %4247 = stablehlo.multiply %3974, %3974 : tensor<768x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4248 = stablehlo.reduce(%4247 init: %cst_468) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4249 = stablehlo.add %4246, %4248 : tensor<f32>
    %4250 = stablehlo.multiply %3969, %3969 : tensor<768xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4251 = stablehlo.reduce(%4250 init: %cst_469) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4252 = stablehlo.add %4249, %4251 : tensor<f32>
    %4253 = stablehlo.multiply %3982, %3982 : tensor<768x768xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4254 = stablehlo.reduce(%4253 init: %cst_470) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4255 = stablehlo.add %4252, %4254 : tensor<f32>
    %4256 = stablehlo.multiply %3977, %3977 : tensor<768xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4257 = stablehlo.reduce(%4256 init: %cst_471) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4258 = stablehlo.add %4255, %4257 : tensor<f32>
    %4259 = stablehlo.multiply %3936, %3936 : tensor<768x768xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4260 = stablehlo.reduce(%4259 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4261 = stablehlo.add %4258, %4260 : tensor<f32>
    %4262 = stablehlo.multiply %3932, %3932 : tensor<768xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4263 = stablehlo.reduce(%4262 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4264 = stablehlo.add %4261, %4263 : tensor<f32>
    %4265 = stablehlo.multiply %3908, %3908 : tensor<768xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4266 = stablehlo.reduce(%4265 init: %cst_474) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4267 = stablehlo.add %4264, %4266 : tensor<f32>
    %4268 = stablehlo.multiply %3902, %3902 : tensor<768xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4269 = stablehlo.reduce(%4268 init: %cst_475) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4270 = stablehlo.add %4267, %4269 : tensor<f32>
    %4271 = stablehlo.multiply %3899, %3899 : tensor<3072x768xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4272 = stablehlo.reduce(%4271 init: %cst_476) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4273 = stablehlo.add %4270, %4272 : tensor<f32>
    %4274 = stablehlo.multiply %3894, %3894 : tensor<3072xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4275 = stablehlo.reduce(%4274 init: %cst_477) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4276 = stablehlo.add %4273, %4275 : tensor<f32>
    %4277 = stablehlo.multiply %3877, %3877 : tensor<768x3072xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4278 = stablehlo.reduce(%4277 init: %cst_478) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4279 = stablehlo.add %4276, %4278 : tensor<f32>
    %4280 = stablehlo.multiply %3873, %3873 : tensor<768xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4281 = stablehlo.reduce(%4280 init: %cst_479) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4282 = stablehlo.add %4279, %4281 : tensor<f32>
    %4283 = stablehlo.multiply %3849, %3849 : tensor<768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4284 = stablehlo.reduce(%4283 init: %cst_480) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4285 = stablehlo.add %4282, %4284 : tensor<f32>
    %4286 = stablehlo.multiply %3843, %3843 : tensor<768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4287 = stablehlo.reduce(%4286 init: %cst_481) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4288 = stablehlo.add %4285, %4287 : tensor<f32>
    %4289 = stablehlo.multiply %3840, %3840 : tensor<768x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4290 = stablehlo.reduce(%4289 init: %cst_482) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4291 = stablehlo.add %4288, %4290 : tensor<f32>
    %4292 = stablehlo.multiply %3835, %3835 : tensor<768xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4293 = stablehlo.reduce(%4292 init: %cst_483) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4294 = stablehlo.add %4291, %4293 : tensor<f32>
    %4295 = stablehlo.multiply %3824, %3824 : tensor<768x768xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4296 = stablehlo.reduce(%4295 init: %cst_484) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4297 = stablehlo.add %4294, %4296 : tensor<f32>
    %4298 = stablehlo.multiply %3819, %3819 : tensor<768xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4299 = stablehlo.reduce(%4298 init: %cst_485) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4300 = stablehlo.add %4297, %4299 : tensor<f32>
    %4301 = stablehlo.multiply %3832, %3832 : tensor<768x768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4302 = stablehlo.reduce(%4301 init: %cst_486) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4303 = stablehlo.add %4300, %4302 : tensor<f32>
    %4304 = stablehlo.multiply %3827, %3827 : tensor<768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4305 = stablehlo.reduce(%4304 init: %cst_487) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4306 = stablehlo.add %4303, %4305 : tensor<f32>
    %4307 = stablehlo.multiply %3786, %3786 : tensor<768x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4308 = stablehlo.reduce(%4307 init: %cst_488) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4309 = stablehlo.add %4306, %4308 : tensor<f32>
    %4310 = stablehlo.multiply %3782, %3782 : tensor<768xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4311 = stablehlo.reduce(%4310 init: %cst_489) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4312 = stablehlo.add %4309, %4311 : tensor<f32>
    %4313 = stablehlo.multiply %3758, %3758 : tensor<768xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4314 = stablehlo.reduce(%4313 init: %cst_490) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4315 = stablehlo.add %4312, %4314 : tensor<f32>
    %4316 = stablehlo.multiply %3752, %3752 : tensor<768xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4317 = stablehlo.reduce(%4316 init: %cst_491) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4318 = stablehlo.add %4315, %4317 : tensor<f32>
    %4319 = stablehlo.multiply %3749, %3749 : tensor<3072x768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4320 = stablehlo.reduce(%4319 init: %cst_492) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4321 = stablehlo.add %4318, %4320 : tensor<f32>
    %4322 = stablehlo.multiply %3744, %3744 : tensor<3072xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4323 = stablehlo.reduce(%4322 init: %cst_493) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4324 = stablehlo.add %4321, %4323 : tensor<f32>
    %4325 = stablehlo.multiply %3727, %3727 : tensor<768x3072xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4326 = stablehlo.reduce(%4325 init: %cst_494) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4327 = stablehlo.add %4324, %4326 : tensor<f32>
    %4328 = stablehlo.multiply %3723, %3723 : tensor<768xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4329 = stablehlo.reduce(%4328 init: %cst_495) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4330 = stablehlo.add %4327, %4329 : tensor<f32>
    %4331 = stablehlo.multiply %3699, %3699 : tensor<768xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4332 = stablehlo.reduce(%4331 init: %cst_496) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4333 = stablehlo.add %4330, %4332 : tensor<f32>
    %4334 = stablehlo.multiply %3693, %3693 : tensor<768xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4335 = stablehlo.reduce(%4334 init: %cst_497) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4336 = stablehlo.add %4333, %4335 : tensor<f32>
    %4337 = stablehlo.multiply %3690, %3690 : tensor<768x768xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4338 = stablehlo.reduce(%4337 init: %cst_498) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4339 = stablehlo.add %4336, %4338 : tensor<f32>
    %4340 = stablehlo.multiply %3685, %3685 : tensor<768xf32>
    %cst_499 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4341 = stablehlo.reduce(%4340 init: %cst_499) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4342 = stablehlo.add %4339, %4341 : tensor<f32>
    %4343 = stablehlo.multiply %3674, %3674 : tensor<768x768xf32>
    %cst_500 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4344 = stablehlo.reduce(%4343 init: %cst_500) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4345 = stablehlo.add %4342, %4344 : tensor<f32>
    %4346 = stablehlo.multiply %3669, %3669 : tensor<768xf32>
    %cst_501 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4347 = stablehlo.reduce(%4346 init: %cst_501) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4348 = stablehlo.add %4345, %4347 : tensor<f32>
    %4349 = stablehlo.multiply %3682, %3682 : tensor<768x768xf32>
    %cst_502 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4350 = stablehlo.reduce(%4349 init: %cst_502) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4351 = stablehlo.add %4348, %4350 : tensor<f32>
    %4352 = stablehlo.multiply %3677, %3677 : tensor<768xf32>
    %cst_503 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4353 = stablehlo.reduce(%4352 init: %cst_503) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4354 = stablehlo.add %4351, %4353 : tensor<f32>
    %4355 = stablehlo.multiply %3636, %3636 : tensor<768x768xf32>
    %cst_504 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4356 = stablehlo.reduce(%4355 init: %cst_504) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4357 = stablehlo.add %4354, %4356 : tensor<f32>
    %4358 = stablehlo.multiply %3632, %3632 : tensor<768xf32>
    %cst_505 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4359 = stablehlo.reduce(%4358 init: %cst_505) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4360 = stablehlo.add %4357, %4359 : tensor<f32>
    %4361 = stablehlo.multiply %3608, %3608 : tensor<768xf32>
    %cst_506 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4362 = stablehlo.reduce(%4361 init: %cst_506) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4363 = stablehlo.add %4360, %4362 : tensor<f32>
    %4364 = stablehlo.multiply %3602, %3602 : tensor<768xf32>
    %cst_507 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4365 = stablehlo.reduce(%4364 init: %cst_507) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4366 = stablehlo.add %4363, %4365 : tensor<f32>
    %4367 = stablehlo.multiply %3599, %3599 : tensor<3072x768xf32>
    %cst_508 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4368 = stablehlo.reduce(%4367 init: %cst_508) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4369 = stablehlo.add %4366, %4368 : tensor<f32>
    %4370 = stablehlo.multiply %3594, %3594 : tensor<3072xf32>
    %cst_509 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4371 = stablehlo.reduce(%4370 init: %cst_509) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4372 = stablehlo.add %4369, %4371 : tensor<f32>
    %4373 = stablehlo.multiply %3577, %3577 : tensor<768x3072xf32>
    %cst_510 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4374 = stablehlo.reduce(%4373 init: %cst_510) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4375 = stablehlo.add %4372, %4374 : tensor<f32>
    %4376 = stablehlo.multiply %3573, %3573 : tensor<768xf32>
    %cst_511 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4377 = stablehlo.reduce(%4376 init: %cst_511) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4378 = stablehlo.add %4375, %4377 : tensor<f32>
    %4379 = stablehlo.multiply %3549, %3549 : tensor<768xf32>
    %cst_512 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4380 = stablehlo.reduce(%4379 init: %cst_512) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4381 = stablehlo.add %4378, %4380 : tensor<f32>
    %4382 = stablehlo.multiply %3543, %3543 : tensor<768xf32>
    %cst_513 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4383 = stablehlo.reduce(%4382 init: %cst_513) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4384 = stablehlo.add %4381, %4383 : tensor<f32>
    %4385 = stablehlo.multiply %3540, %3540 : tensor<768x768xf32>
    %cst_514 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4386 = stablehlo.reduce(%4385 init: %cst_514) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4387 = stablehlo.add %4384, %4386 : tensor<f32>
    %4388 = stablehlo.multiply %3535, %3535 : tensor<768xf32>
    %cst_515 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4389 = stablehlo.reduce(%4388 init: %cst_515) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4390 = stablehlo.add %4387, %4389 : tensor<f32>
    %4391 = stablehlo.multiply %3524, %3524 : tensor<768x768xf32>
    %cst_516 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4392 = stablehlo.reduce(%4391 init: %cst_516) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4393 = stablehlo.add %4390, %4392 : tensor<f32>
    %4394 = stablehlo.multiply %3519, %3519 : tensor<768xf32>
    %cst_517 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4395 = stablehlo.reduce(%4394 init: %cst_517) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4396 = stablehlo.add %4393, %4395 : tensor<f32>
    %4397 = stablehlo.multiply %3532, %3532 : tensor<768x768xf32>
    %cst_518 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4398 = stablehlo.reduce(%4397 init: %cst_518) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4399 = stablehlo.add %4396, %4398 : tensor<f32>
    %4400 = stablehlo.multiply %3527, %3527 : tensor<768xf32>
    %cst_519 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4401 = stablehlo.reduce(%4400 init: %cst_519) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4402 = stablehlo.add %4399, %4401 : tensor<f32>
    %4403 = stablehlo.multiply %3486, %3486 : tensor<768x768xf32>
    %cst_520 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4404 = stablehlo.reduce(%4403 init: %cst_520) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4405 = stablehlo.add %4402, %4404 : tensor<f32>
    %4406 = stablehlo.multiply %3482, %3482 : tensor<768xf32>
    %cst_521 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4407 = stablehlo.reduce(%4406 init: %cst_521) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4408 = stablehlo.add %4405, %4407 : tensor<f32>
    %4409 = stablehlo.multiply %3458, %3458 : tensor<768xf32>
    %cst_522 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4410 = stablehlo.reduce(%4409 init: %cst_522) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4411 = stablehlo.add %4408, %4410 : tensor<f32>
    %4412 = stablehlo.multiply %3452, %3452 : tensor<768xf32>
    %cst_523 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4413 = stablehlo.reduce(%4412 init: %cst_523) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4414 = stablehlo.add %4411, %4413 : tensor<f32>
    %4415 = stablehlo.multiply %3449, %3449 : tensor<3072x768xf32>
    %cst_524 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4416 = stablehlo.reduce(%4415 init: %cst_524) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4417 = stablehlo.add %4414, %4416 : tensor<f32>
    %4418 = stablehlo.multiply %3444, %3444 : tensor<3072xf32>
    %cst_525 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4419 = stablehlo.reduce(%4418 init: %cst_525) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4420 = stablehlo.add %4417, %4419 : tensor<f32>
    %4421 = stablehlo.multiply %3427, %3427 : tensor<768x3072xf32>
    %cst_526 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4422 = stablehlo.reduce(%4421 init: %cst_526) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4423 = stablehlo.add %4420, %4422 : tensor<f32>
    %4424 = stablehlo.multiply %3423, %3423 : tensor<768xf32>
    %cst_527 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4425 = stablehlo.reduce(%4424 init: %cst_527) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4426 = stablehlo.add %4423, %4425 : tensor<f32>
    %4427 = stablehlo.multiply %3399, %3399 : tensor<768xf32>
    %cst_528 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4428 = stablehlo.reduce(%4427 init: %cst_528) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4429 = stablehlo.add %4426, %4428 : tensor<f32>
    %4430 = stablehlo.multiply %3393, %3393 : tensor<768xf32>
    %cst_529 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4431 = stablehlo.reduce(%4430 init: %cst_529) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4432 = stablehlo.add %4429, %4431 : tensor<f32>
    %4433 = stablehlo.multiply %3390, %3390 : tensor<768x768xf32>
    %cst_530 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4434 = stablehlo.reduce(%4433 init: %cst_530) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4435 = stablehlo.add %4432, %4434 : tensor<f32>
    %4436 = stablehlo.multiply %3385, %3385 : tensor<768xf32>
    %cst_531 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4437 = stablehlo.reduce(%4436 init: %cst_531) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4438 = stablehlo.add %4435, %4437 : tensor<f32>
    %4439 = stablehlo.multiply %3374, %3374 : tensor<768x768xf32>
    %cst_532 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4440 = stablehlo.reduce(%4439 init: %cst_532) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4441 = stablehlo.add %4438, %4440 : tensor<f32>
    %4442 = stablehlo.multiply %3369, %3369 : tensor<768xf32>
    %cst_533 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4443 = stablehlo.reduce(%4442 init: %cst_533) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4444 = stablehlo.add %4441, %4443 : tensor<f32>
    %4445 = stablehlo.multiply %3382, %3382 : tensor<768x768xf32>
    %cst_534 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4446 = stablehlo.reduce(%4445 init: %cst_534) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4447 = stablehlo.add %4444, %4446 : tensor<f32>
    %4448 = stablehlo.multiply %3377, %3377 : tensor<768xf32>
    %cst_535 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4449 = stablehlo.reduce(%4448 init: %cst_535) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4450 = stablehlo.add %4447, %4449 : tensor<f32>
    %4451 = stablehlo.multiply %3336, %3336 : tensor<768x768xf32>
    %cst_536 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4452 = stablehlo.reduce(%4451 init: %cst_536) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4453 = stablehlo.add %4450, %4452 : tensor<f32>
    %4454 = stablehlo.multiply %3332, %3332 : tensor<768xf32>
    %cst_537 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4455 = stablehlo.reduce(%4454 init: %cst_537) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4456 = stablehlo.add %4453, %4455 : tensor<f32>
    %4457 = stablehlo.multiply %3308, %3308 : tensor<768xf32>
    %cst_538 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4458 = stablehlo.reduce(%4457 init: %cst_538) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4459 = stablehlo.add %4456, %4458 : tensor<f32>
    %4460 = stablehlo.multiply %3302, %3302 : tensor<768xf32>
    %cst_539 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4461 = stablehlo.reduce(%4460 init: %cst_539) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4462 = stablehlo.add %4459, %4461 : tensor<f32>
    %4463 = stablehlo.multiply %3299, %3299 : tensor<3072x768xf32>
    %cst_540 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4464 = stablehlo.reduce(%4463 init: %cst_540) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4465 = stablehlo.add %4462, %4464 : tensor<f32>
    %4466 = stablehlo.multiply %3294, %3294 : tensor<3072xf32>
    %cst_541 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4467 = stablehlo.reduce(%4466 init: %cst_541) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4468 = stablehlo.add %4465, %4467 : tensor<f32>
    %4469 = stablehlo.multiply %3277, %3277 : tensor<768x3072xf32>
    %cst_542 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4470 = stablehlo.reduce(%4469 init: %cst_542) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4471 = stablehlo.add %4468, %4470 : tensor<f32>
    %4472 = stablehlo.multiply %3273, %3273 : tensor<768xf32>
    %cst_543 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4473 = stablehlo.reduce(%4472 init: %cst_543) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4474 = stablehlo.add %4471, %4473 : tensor<f32>
    %4475 = stablehlo.multiply %3249, %3249 : tensor<768xf32>
    %cst_544 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4476 = stablehlo.reduce(%4475 init: %cst_544) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4477 = stablehlo.add %4474, %4476 : tensor<f32>
    %4478 = stablehlo.multiply %3243, %3243 : tensor<768xf32>
    %cst_545 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4479 = stablehlo.reduce(%4478 init: %cst_545) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4480 = stablehlo.add %4477, %4479 : tensor<f32>
    %4481 = stablehlo.multiply %3240, %3240 : tensor<768x768xf32>
    %cst_546 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4482 = stablehlo.reduce(%4481 init: %cst_546) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4483 = stablehlo.add %4480, %4482 : tensor<f32>
    %4484 = stablehlo.multiply %3235, %3235 : tensor<768xf32>
    %cst_547 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4485 = stablehlo.reduce(%4484 init: %cst_547) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4486 = stablehlo.add %4483, %4485 : tensor<f32>
    %4487 = stablehlo.multiply %3224, %3224 : tensor<768x768xf32>
    %cst_548 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4488 = stablehlo.reduce(%4487 init: %cst_548) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4489 = stablehlo.add %4486, %4488 : tensor<f32>
    %4490 = stablehlo.multiply %3219, %3219 : tensor<768xf32>
    %cst_549 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4491 = stablehlo.reduce(%4490 init: %cst_549) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4492 = stablehlo.add %4489, %4491 : tensor<f32>
    %4493 = stablehlo.multiply %3232, %3232 : tensor<768x768xf32>
    %cst_550 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4494 = stablehlo.reduce(%4493 init: %cst_550) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4495 = stablehlo.add %4492, %4494 : tensor<f32>
    %4496 = stablehlo.multiply %3227, %3227 : tensor<768xf32>
    %cst_551 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4497 = stablehlo.reduce(%4496 init: %cst_551) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4498 = stablehlo.add %4495, %4497 : tensor<f32>
    %4499 = stablehlo.multiply %3186, %3186 : tensor<768x768xf32>
    %cst_552 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4500 = stablehlo.reduce(%4499 init: %cst_552) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4501 = stablehlo.add %4498, %4500 : tensor<f32>
    %4502 = stablehlo.multiply %3182, %3182 : tensor<768xf32>
    %cst_553 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4503 = stablehlo.reduce(%4502 init: %cst_553) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4504 = stablehlo.add %4501, %4503 : tensor<f32>
    %4505 = stablehlo.multiply %3158, %3158 : tensor<768xf32>
    %cst_554 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4506 = stablehlo.reduce(%4505 init: %cst_554) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4507 = stablehlo.add %4504, %4506 : tensor<f32>
    %4508 = stablehlo.multiply %3152, %3152 : tensor<768xf32>
    %cst_555 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4509 = stablehlo.reduce(%4508 init: %cst_555) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4510 = stablehlo.add %4507, %4509 : tensor<f32>
    %4511 = stablehlo.multiply %3149, %3149 : tensor<3072x768xf32>
    %cst_556 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4512 = stablehlo.reduce(%4511 init: %cst_556) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4513 = stablehlo.add %4510, %4512 : tensor<f32>
    %4514 = stablehlo.multiply %3144, %3144 : tensor<3072xf32>
    %cst_557 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4515 = stablehlo.reduce(%4514 init: %cst_557) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4516 = stablehlo.add %4513, %4515 : tensor<f32>
    %4517 = stablehlo.multiply %3127, %3127 : tensor<768x3072xf32>
    %cst_558 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4518 = stablehlo.reduce(%4517 init: %cst_558) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4519 = stablehlo.add %4516, %4518 : tensor<f32>
    %4520 = stablehlo.multiply %3123, %3123 : tensor<768xf32>
    %cst_559 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4521 = stablehlo.reduce(%4520 init: %cst_559) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4522 = stablehlo.add %4519, %4521 : tensor<f32>
    %4523 = stablehlo.multiply %3099, %3099 : tensor<768xf32>
    %cst_560 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4524 = stablehlo.reduce(%4523 init: %cst_560) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4525 = stablehlo.add %4522, %4524 : tensor<f32>
    %4526 = stablehlo.multiply %3093, %3093 : tensor<768xf32>
    %cst_561 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4527 = stablehlo.reduce(%4526 init: %cst_561) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4528 = stablehlo.add %4525, %4527 : tensor<f32>
    %4529 = stablehlo.multiply %3090, %3090 : tensor<768x768xf32>
    %cst_562 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4530 = stablehlo.reduce(%4529 init: %cst_562) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4531 = stablehlo.add %4528, %4530 : tensor<f32>
    %4532 = stablehlo.multiply %3085, %3085 : tensor<768xf32>
    %cst_563 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4533 = stablehlo.reduce(%4532 init: %cst_563) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4534 = stablehlo.add %4531, %4533 : tensor<f32>
    %4535 = stablehlo.multiply %3074, %3074 : tensor<768x768xf32>
    %cst_564 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4536 = stablehlo.reduce(%4535 init: %cst_564) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4537 = stablehlo.add %4534, %4536 : tensor<f32>
    %4538 = stablehlo.multiply %3069, %3069 : tensor<768xf32>
    %cst_565 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4539 = stablehlo.reduce(%4538 init: %cst_565) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4540 = stablehlo.add %4537, %4539 : tensor<f32>
    %4541 = stablehlo.multiply %3082, %3082 : tensor<768x768xf32>
    %cst_566 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4542 = stablehlo.reduce(%4541 init: %cst_566) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4543 = stablehlo.add %4540, %4542 : tensor<f32>
    %4544 = stablehlo.multiply %3077, %3077 : tensor<768xf32>
    %cst_567 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4545 = stablehlo.reduce(%4544 init: %cst_567) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4546 = stablehlo.add %4543, %4545 : tensor<f32>
    %4547 = stablehlo.multiply %3036, %3036 : tensor<768x768xf32>
    %cst_568 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4548 = stablehlo.reduce(%4547 init: %cst_568) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4549 = stablehlo.add %4546, %4548 : tensor<f32>
    %4550 = stablehlo.multiply %3032, %3032 : tensor<768xf32>
    %cst_569 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4551 = stablehlo.reduce(%4550 init: %cst_569) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4552 = stablehlo.add %4549, %4551 : tensor<f32>
    %4553 = stablehlo.multiply %3008, %3008 : tensor<768xf32>
    %cst_570 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4554 = stablehlo.reduce(%4553 init: %cst_570) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4555 = stablehlo.add %4552, %4554 : tensor<f32>
    %4556 = stablehlo.multiply %3002, %3002 : tensor<768xf32>
    %cst_571 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4557 = stablehlo.reduce(%4556 init: %cst_571) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4558 = stablehlo.add %4555, %4557 : tensor<f32>
    %4559 = stablehlo.multiply %2999, %2999 : tensor<3072x768xf32>
    %cst_572 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4560 = stablehlo.reduce(%4559 init: %cst_572) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4561 = stablehlo.add %4558, %4560 : tensor<f32>
    %4562 = stablehlo.multiply %2994, %2994 : tensor<3072xf32>
    %cst_573 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4563 = stablehlo.reduce(%4562 init: %cst_573) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4564 = stablehlo.add %4561, %4563 : tensor<f32>
    %4565 = stablehlo.multiply %2977, %2977 : tensor<768x3072xf32>
    %cst_574 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4566 = stablehlo.reduce(%4565 init: %cst_574) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4567 = stablehlo.add %4564, %4566 : tensor<f32>
    %4568 = stablehlo.multiply %2973, %2973 : tensor<768xf32>
    %cst_575 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4569 = stablehlo.reduce(%4568 init: %cst_575) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4570 = stablehlo.add %4567, %4569 : tensor<f32>
    %4571 = stablehlo.multiply %2949, %2949 : tensor<768xf32>
    %cst_576 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4572 = stablehlo.reduce(%4571 init: %cst_576) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4573 = stablehlo.add %4570, %4572 : tensor<f32>
    %4574 = stablehlo.multiply %2943, %2943 : tensor<768xf32>
    %cst_577 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4575 = stablehlo.reduce(%4574 init: %cst_577) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4576 = stablehlo.add %4573, %4575 : tensor<f32>
    %4577 = stablehlo.multiply %2940, %2940 : tensor<768x768xf32>
    %cst_578 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4578 = stablehlo.reduce(%4577 init: %cst_578) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4579 = stablehlo.add %4576, %4578 : tensor<f32>
    %4580 = stablehlo.multiply %2935, %2935 : tensor<768xf32>
    %cst_579 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4581 = stablehlo.reduce(%4580 init: %cst_579) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4582 = stablehlo.add %4579, %4581 : tensor<f32>
    %4583 = stablehlo.multiply %2924, %2924 : tensor<768x768xf32>
    %cst_580 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4584 = stablehlo.reduce(%4583 init: %cst_580) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4585 = stablehlo.add %4582, %4584 : tensor<f32>
    %4586 = stablehlo.multiply %2919, %2919 : tensor<768xf32>
    %cst_581 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4587 = stablehlo.reduce(%4586 init: %cst_581) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4588 = stablehlo.add %4585, %4587 : tensor<f32>
    %4589 = stablehlo.multiply %2932, %2932 : tensor<768x768xf32>
    %cst_582 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4590 = stablehlo.reduce(%4589 init: %cst_582) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4591 = stablehlo.add %4588, %4590 : tensor<f32>
    %4592 = stablehlo.multiply %2927, %2927 : tensor<768xf32>
    %cst_583 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4593 = stablehlo.reduce(%4592 init: %cst_583) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4594 = stablehlo.add %4591, %4593 : tensor<f32>
    %4595 = stablehlo.multiply %2886, %2886 : tensor<768x768xf32>
    %cst_584 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4596 = stablehlo.reduce(%4595 init: %cst_584) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4597 = stablehlo.add %4594, %4596 : tensor<f32>
    %4598 = stablehlo.multiply %2882, %2882 : tensor<768xf32>
    %cst_585 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4599 = stablehlo.reduce(%4598 init: %cst_585) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4600 = stablehlo.add %4597, %4599 : tensor<f32>
    %4601 = stablehlo.multiply %2858, %2858 : tensor<768xf32>
    %cst_586 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4602 = stablehlo.reduce(%4601 init: %cst_586) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4603 = stablehlo.add %4600, %4602 : tensor<f32>
    %4604 = stablehlo.multiply %2852, %2852 : tensor<768xf32>
    %cst_587 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4605 = stablehlo.reduce(%4604 init: %cst_587) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4606 = stablehlo.add %4603, %4605 : tensor<f32>
    %4607 = stablehlo.multiply %2849, %2849 : tensor<3072x768xf32>
    %cst_588 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4608 = stablehlo.reduce(%4607 init: %cst_588) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4609 = stablehlo.add %4606, %4608 : tensor<f32>
    %4610 = stablehlo.multiply %2844, %2844 : tensor<3072xf32>
    %cst_589 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4611 = stablehlo.reduce(%4610 init: %cst_589) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4612 = stablehlo.add %4609, %4611 : tensor<f32>
    %4613 = stablehlo.multiply %2827, %2827 : tensor<768x3072xf32>
    %cst_590 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4614 = stablehlo.reduce(%4613 init: %cst_590) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4615 = stablehlo.add %4612, %4614 : tensor<f32>
    %4616 = stablehlo.multiply %2823, %2823 : tensor<768xf32>
    %cst_591 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4617 = stablehlo.reduce(%4616 init: %cst_591) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4618 = stablehlo.add %4615, %4617 : tensor<f32>
    %4619 = stablehlo.multiply %2799, %2799 : tensor<768xf32>
    %cst_592 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4620 = stablehlo.reduce(%4619 init: %cst_592) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4621 = stablehlo.add %4618, %4620 : tensor<f32>
    %4622 = stablehlo.multiply %2793, %2793 : tensor<768xf32>
    %cst_593 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4623 = stablehlo.reduce(%4622 init: %cst_593) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4624 = stablehlo.add %4621, %4623 : tensor<f32>
    %4625 = stablehlo.multiply %2790, %2790 : tensor<768x768xf32>
    %cst_594 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4626 = stablehlo.reduce(%4625 init: %cst_594) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4627 = stablehlo.add %4624, %4626 : tensor<f32>
    %4628 = stablehlo.multiply %2785, %2785 : tensor<768xf32>
    %cst_595 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4629 = stablehlo.reduce(%4628 init: %cst_595) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4630 = stablehlo.add %4627, %4629 : tensor<f32>
    %4631 = stablehlo.multiply %2774, %2774 : tensor<768x768xf32>
    %cst_596 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4632 = stablehlo.reduce(%4631 init: %cst_596) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4633 = stablehlo.add %4630, %4632 : tensor<f32>
    %4634 = stablehlo.multiply %2769, %2769 : tensor<768xf32>
    %cst_597 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4635 = stablehlo.reduce(%4634 init: %cst_597) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4636 = stablehlo.add %4633, %4635 : tensor<f32>
    %4637 = stablehlo.multiply %2782, %2782 : tensor<768x768xf32>
    %cst_598 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4638 = stablehlo.reduce(%4637 init: %cst_598) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4639 = stablehlo.add %4636, %4638 : tensor<f32>
    %4640 = stablehlo.multiply %2777, %2777 : tensor<768xf32>
    %cst_599 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4641 = stablehlo.reduce(%4640 init: %cst_599) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4642 = stablehlo.add %4639, %4641 : tensor<f32>
    %4643 = stablehlo.multiply %2736, %2736 : tensor<768x768xf32>
    %cst_600 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4644 = stablehlo.reduce(%4643 init: %cst_600) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4645 = stablehlo.add %4642, %4644 : tensor<f32>
    %4646 = stablehlo.multiply %2732, %2732 : tensor<768xf32>
    %cst_601 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4647 = stablehlo.reduce(%4646 init: %cst_601) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4648 = stablehlo.add %4645, %4647 : tensor<f32>
    %4649 = stablehlo.multiply %2708, %2708 : tensor<768xf32>
    %cst_602 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4650 = stablehlo.reduce(%4649 init: %cst_602) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4651 = stablehlo.add %4648, %4650 : tensor<f32>
    %4652 = stablehlo.multiply %2702, %2702 : tensor<768xf32>
    %cst_603 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4653 = stablehlo.reduce(%4652 init: %cst_603) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4654 = stablehlo.add %4651, %4653 : tensor<f32>
    %4655 = stablehlo.multiply %2699, %2699 : tensor<3072x768xf32>
    %cst_604 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4656 = stablehlo.reduce(%4655 init: %cst_604) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4657 = stablehlo.add %4654, %4656 : tensor<f32>
    %4658 = stablehlo.multiply %2694, %2694 : tensor<3072xf32>
    %cst_605 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4659 = stablehlo.reduce(%4658 init: %cst_605) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4660 = stablehlo.add %4657, %4659 : tensor<f32>
    %4661 = stablehlo.multiply %2677, %2677 : tensor<768x3072xf32>
    %cst_606 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4662 = stablehlo.reduce(%4661 init: %cst_606) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4663 = stablehlo.add %4660, %4662 : tensor<f32>
    %4664 = stablehlo.multiply %2673, %2673 : tensor<768xf32>
    %cst_607 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4665 = stablehlo.reduce(%4664 init: %cst_607) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4666 = stablehlo.add %4663, %4665 : tensor<f32>
    %4667 = stablehlo.multiply %2649, %2649 : tensor<768xf32>
    %cst_608 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4668 = stablehlo.reduce(%4667 init: %cst_608) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4669 = stablehlo.add %4666, %4668 : tensor<f32>
    %4670 = stablehlo.multiply %2643, %2643 : tensor<768xf32>
    %cst_609 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4671 = stablehlo.reduce(%4670 init: %cst_609) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4672 = stablehlo.add %4669, %4671 : tensor<f32>
    %4673 = stablehlo.multiply %2640, %2640 : tensor<768x768xf32>
    %cst_610 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4674 = stablehlo.reduce(%4673 init: %cst_610) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4675 = stablehlo.add %4672, %4674 : tensor<f32>
    %4676 = stablehlo.multiply %2635, %2635 : tensor<768xf32>
    %cst_611 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4677 = stablehlo.reduce(%4676 init: %cst_611) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4678 = stablehlo.add %4675, %4677 : tensor<f32>
    %4679 = stablehlo.multiply %2624, %2624 : tensor<768x768xf32>
    %cst_612 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4680 = stablehlo.reduce(%4679 init: %cst_612) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4681 = stablehlo.add %4678, %4680 : tensor<f32>
    %4682 = stablehlo.multiply %2619, %2619 : tensor<768xf32>
    %cst_613 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4683 = stablehlo.reduce(%4682 init: %cst_613) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4684 = stablehlo.add %4681, %4683 : tensor<f32>
    %4685 = stablehlo.multiply %2632, %2632 : tensor<768x768xf32>
    %cst_614 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4686 = stablehlo.reduce(%4685 init: %cst_614) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4687 = stablehlo.add %4684, %4686 : tensor<f32>
    %4688 = stablehlo.multiply %2627, %2627 : tensor<768xf32>
    %cst_615 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4689 = stablehlo.reduce(%4688 init: %cst_615) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4690 = stablehlo.add %4687, %4689 : tensor<f32>
    %4691 = stablehlo.multiply %2586, %2586 : tensor<768x768xf32>
    %cst_616 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4692 = stablehlo.reduce(%4691 init: %cst_616) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4693 = stablehlo.add %4690, %4692 : tensor<f32>
    %4694 = stablehlo.multiply %2582, %2582 : tensor<768xf32>
    %cst_617 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4695 = stablehlo.reduce(%4694 init: %cst_617) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4696 = stablehlo.add %4693, %4695 : tensor<f32>
    %4697 = stablehlo.multiply %2558, %2558 : tensor<768xf32>
    %cst_618 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4698 = stablehlo.reduce(%4697 init: %cst_618) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4699 = stablehlo.add %4696, %4698 : tensor<f32>
    %4700 = stablehlo.multiply %2552, %2552 : tensor<768xf32>
    %cst_619 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4701 = stablehlo.reduce(%4700 init: %cst_619) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4702 = stablehlo.add %4699, %4701 : tensor<f32>
    %4703 = stablehlo.multiply %2549, %2549 : tensor<3072x768xf32>
    %cst_620 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4704 = stablehlo.reduce(%4703 init: %cst_620) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4705 = stablehlo.add %4702, %4704 : tensor<f32>
    %4706 = stablehlo.multiply %2544, %2544 : tensor<3072xf32>
    %cst_621 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4707 = stablehlo.reduce(%4706 init: %cst_621) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4708 = stablehlo.add %4705, %4707 : tensor<f32>
    %4709 = stablehlo.multiply %2527, %2527 : tensor<768x3072xf32>
    %cst_622 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4710 = stablehlo.reduce(%4709 init: %cst_622) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4711 = stablehlo.add %4708, %4710 : tensor<f32>
    %4712 = stablehlo.multiply %2523, %2523 : tensor<768xf32>
    %cst_623 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4713 = stablehlo.reduce(%4712 init: %cst_623) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4714 = stablehlo.add %4711, %4713 : tensor<f32>
    %4715 = stablehlo.multiply %2499, %2499 : tensor<768xf32>
    %cst_624 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4716 = stablehlo.reduce(%4715 init: %cst_624) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4717 = stablehlo.add %4714, %4716 : tensor<f32>
    %4718 = stablehlo.multiply %2493, %2493 : tensor<768xf32>
    %cst_625 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4719 = stablehlo.reduce(%4718 init: %cst_625) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4720 = stablehlo.add %4717, %4719 : tensor<f32>
    %4721 = stablehlo.multiply %2490, %2490 : tensor<768x768xf32>
    %cst_626 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4722 = stablehlo.reduce(%4721 init: %cst_626) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4723 = stablehlo.add %4720, %4722 : tensor<f32>
    %4724 = stablehlo.multiply %2485, %2485 : tensor<768xf32>
    %cst_627 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4725 = stablehlo.reduce(%4724 init: %cst_627) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4726 = stablehlo.add %4723, %4725 : tensor<f32>
    %4727 = stablehlo.multiply %2474, %2474 : tensor<768x768xf32>
    %cst_628 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4728 = stablehlo.reduce(%4727 init: %cst_628) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4729 = stablehlo.add %4726, %4728 : tensor<f32>
    %4730 = stablehlo.multiply %2469, %2469 : tensor<768xf32>
    %cst_629 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4731 = stablehlo.reduce(%4730 init: %cst_629) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4732 = stablehlo.add %4729, %4731 : tensor<f32>
    %4733 = stablehlo.multiply %2482, %2482 : tensor<768x768xf32>
    %cst_630 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4734 = stablehlo.reduce(%4733 init: %cst_630) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4735 = stablehlo.add %4732, %4734 : tensor<f32>
    %4736 = stablehlo.multiply %2477, %2477 : tensor<768xf32>
    %cst_631 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4737 = stablehlo.reduce(%4736 init: %cst_631) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4738 = stablehlo.add %4735, %4737 : tensor<f32>
    %4739 = stablehlo.multiply %2436, %2436 : tensor<768x768xf32>
    %cst_632 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4740 = stablehlo.reduce(%4739 init: %cst_632) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4741 = stablehlo.add %4738, %4740 : tensor<f32>
    %4742 = stablehlo.multiply %2432, %2432 : tensor<768xf32>
    %cst_633 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4743 = stablehlo.reduce(%4742 init: %cst_633) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4744 = stablehlo.add %4741, %4743 : tensor<f32>
    %4745 = stablehlo.multiply %2408, %2408 : tensor<768xf32>
    %cst_634 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4746 = stablehlo.reduce(%4745 init: %cst_634) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4747 = stablehlo.add %4744, %4746 : tensor<f32>
    %4748 = stablehlo.multiply %2402, %2402 : tensor<768xf32>
    %cst_635 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4749 = stablehlo.reduce(%4748 init: %cst_635) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4750 = stablehlo.add %4747, %4749 : tensor<f32>
    %4751 = stablehlo.multiply %2399, %2399 : tensor<3072x768xf32>
    %cst_636 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4752 = stablehlo.reduce(%4751 init: %cst_636) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4753 = stablehlo.add %4750, %4752 : tensor<f32>
    %4754 = stablehlo.multiply %2394, %2394 : tensor<3072xf32>
    %cst_637 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4755 = stablehlo.reduce(%4754 init: %cst_637) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4756 = stablehlo.add %4753, %4755 : tensor<f32>
    %4757 = stablehlo.multiply %2377, %2377 : tensor<768x3072xf32>
    %cst_638 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4758 = stablehlo.reduce(%4757 init: %cst_638) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4759 = stablehlo.add %4756, %4758 : tensor<f32>
    %4760 = stablehlo.multiply %2373, %2373 : tensor<768xf32>
    %cst_639 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4761 = stablehlo.reduce(%4760 init: %cst_639) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4762 = stablehlo.add %4759, %4761 : tensor<f32>
    %4763 = stablehlo.multiply %2349, %2349 : tensor<768xf32>
    %cst_640 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4764 = stablehlo.reduce(%4763 init: %cst_640) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4765 = stablehlo.add %4762, %4764 : tensor<f32>
    %4766 = stablehlo.multiply %2343, %2343 : tensor<768xf32>
    %cst_641 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4767 = stablehlo.reduce(%4766 init: %cst_641) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4768 = stablehlo.add %4765, %4767 : tensor<f32>
    %4769 = stablehlo.multiply %2340, %2340 : tensor<768x768xf32>
    %cst_642 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4770 = stablehlo.reduce(%4769 init: %cst_642) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4771 = stablehlo.add %4768, %4770 : tensor<f32>
    %4772 = stablehlo.multiply %2336, %2336 : tensor<768xf32>
    %cst_643 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4773 = stablehlo.reduce(%4772 init: %cst_643) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4774 = stablehlo.add %4771, %4773 : tensor<f32>
    %4775 = stablehlo.multiply %2302, %2302 : tensor<768xf32>
    %cst_644 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4776 = stablehlo.reduce(%4775 init: %cst_644) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4777 = stablehlo.add %4774, %4776 : tensor<f32>
    %4778 = stablehlo.multiply %2296, %2296 : tensor<768xf32>
    %cst_645 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4779 = stablehlo.reduce(%4778 init: %cst_645) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4780 = stablehlo.add %4777, %4779 : tensor<f32>
    %4781 = stablehlo.multiply %2291, %2291 : tensor<30522xf32>
    %cst_646 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4782 = stablehlo.reduce(%4781 init: %cst_646) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %4783 = stablehlo.add %4780, %4782 : tensor<f32>
    %4784 = stablehlo.sqrt %4783 : tensor<f32>
    %4785 = stablehlo.compare  LT, %4784, %cst_6,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %4786 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4787 = stablehlo.divide %4177, %4786 : tensor<30522x768xf32>
    %4788 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4789 = stablehlo.multiply %4787, %4788 : tensor<30522x768xf32>
    %4790 = stablehlo.select %4785, %4177, %4789 : tensor<i1>, tensor<30522x768xf32>
    %4791 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4792 = stablehlo.divide %4174, %4791 : tensor<512x768xf32>
    %4793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4794 = stablehlo.multiply %4792, %4793 : tensor<512x768xf32>
    %4795 = stablehlo.select %4785, %4174, %4794 : tensor<i1>, tensor<512x768xf32>
    %4796 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4797 = stablehlo.divide %4172, %4796 : tensor<2x768xf32>
    %4798 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4799 = stablehlo.multiply %4797, %4798 : tensor<2x768xf32>
    %4800 = stablehlo.select %4785, %4172, %4799 : tensor<i1>, tensor<2x768xf32>
    %4801 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4802 = stablehlo.divide %4153, %4801 : tensor<768xf32>
    %4803 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4804 = stablehlo.multiply %4802, %4803 : tensor<768xf32>
    %4805 = stablehlo.select %4785, %4153, %4804 : tensor<i1>, tensor<768xf32>
    %4806 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4807 = stablehlo.divide %4147, %4806 : tensor<768xf32>
    %4808 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4809 = stablehlo.multiply %4807, %4808 : tensor<768xf32>
    %4810 = stablehlo.select %4785, %4147, %4809 : tensor<i1>, tensor<768xf32>
    %4811 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4812 = stablehlo.divide %4140, %4811 : tensor<768x768xf32>
    %4813 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4814 = stablehlo.multiply %4812, %4813 : tensor<768x768xf32>
    %4815 = stablehlo.select %4785, %4140, %4814 : tensor<i1>, tensor<768x768xf32>
    %4816 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4817 = stablehlo.divide %4135, %4816 : tensor<768xf32>
    %4818 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4819 = stablehlo.multiply %4817, %4818 : tensor<768xf32>
    %4820 = stablehlo.select %4785, %4135, %4819 : tensor<i1>, tensor<768xf32>
    %4821 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4822 = stablehlo.divide %4124, %4821 : tensor<768x768xf32>
    %4823 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4824 = stablehlo.multiply %4822, %4823 : tensor<768x768xf32>
    %4825 = stablehlo.select %4785, %4124, %4824 : tensor<i1>, tensor<768x768xf32>
    %4826 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4827 = stablehlo.divide %4119, %4826 : tensor<768xf32>
    %4828 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4829 = stablehlo.multiply %4827, %4828 : tensor<768xf32>
    %4830 = stablehlo.select %4785, %4119, %4829 : tensor<i1>, tensor<768xf32>
    %4831 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4832 = stablehlo.divide %4132, %4831 : tensor<768x768xf32>
    %4833 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4834 = stablehlo.multiply %4832, %4833 : tensor<768x768xf32>
    %4835 = stablehlo.select %4785, %4132, %4834 : tensor<i1>, tensor<768x768xf32>
    %4836 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4837 = stablehlo.divide %4127, %4836 : tensor<768xf32>
    %4838 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4839 = stablehlo.multiply %4837, %4838 : tensor<768xf32>
    %4840 = stablehlo.select %4785, %4127, %4839 : tensor<i1>, tensor<768xf32>
    %4841 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4842 = stablehlo.divide %4086, %4841 : tensor<768x768xf32>
    %4843 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4844 = stablehlo.multiply %4842, %4843 : tensor<768x768xf32>
    %4845 = stablehlo.select %4785, %4086, %4844 : tensor<i1>, tensor<768x768xf32>
    %4846 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4847 = stablehlo.divide %4082, %4846 : tensor<768xf32>
    %4848 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4849 = stablehlo.multiply %4847, %4848 : tensor<768xf32>
    %4850 = stablehlo.select %4785, %4082, %4849 : tensor<i1>, tensor<768xf32>
    %4851 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4852 = stablehlo.divide %4058, %4851 : tensor<768xf32>
    %4853 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4854 = stablehlo.multiply %4852, %4853 : tensor<768xf32>
    %4855 = stablehlo.select %4785, %4058, %4854 : tensor<i1>, tensor<768xf32>
    %4856 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4857 = stablehlo.divide %4052, %4856 : tensor<768xf32>
    %4858 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4859 = stablehlo.multiply %4857, %4858 : tensor<768xf32>
    %4860 = stablehlo.select %4785, %4052, %4859 : tensor<i1>, tensor<768xf32>
    %4861 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4862 = stablehlo.divide %4049, %4861 : tensor<3072x768xf32>
    %4863 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4864 = stablehlo.multiply %4862, %4863 : tensor<3072x768xf32>
    %4865 = stablehlo.select %4785, %4049, %4864 : tensor<i1>, tensor<3072x768xf32>
    %4866 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4867 = stablehlo.divide %4044, %4866 : tensor<3072xf32>
    %4868 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4869 = stablehlo.multiply %4867, %4868 : tensor<3072xf32>
    %4870 = stablehlo.select %4785, %4044, %4869 : tensor<i1>, tensor<3072xf32>
    %4871 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4872 = stablehlo.divide %4027, %4871 : tensor<768x3072xf32>
    %4873 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4874 = stablehlo.multiply %4872, %4873 : tensor<768x3072xf32>
    %4875 = stablehlo.select %4785, %4027, %4874 : tensor<i1>, tensor<768x3072xf32>
    %4876 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4877 = stablehlo.divide %4023, %4876 : tensor<768xf32>
    %4878 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4879 = stablehlo.multiply %4877, %4878 : tensor<768xf32>
    %4880 = stablehlo.select %4785, %4023, %4879 : tensor<i1>, tensor<768xf32>
    %4881 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4882 = stablehlo.divide %3999, %4881 : tensor<768xf32>
    %4883 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4884 = stablehlo.multiply %4882, %4883 : tensor<768xf32>
    %4885 = stablehlo.select %4785, %3999, %4884 : tensor<i1>, tensor<768xf32>
    %4886 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4887 = stablehlo.divide %3993, %4886 : tensor<768xf32>
    %4888 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4889 = stablehlo.multiply %4887, %4888 : tensor<768xf32>
    %4890 = stablehlo.select %4785, %3993, %4889 : tensor<i1>, tensor<768xf32>
    %4891 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4892 = stablehlo.divide %3990, %4891 : tensor<768x768xf32>
    %4893 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4894 = stablehlo.multiply %4892, %4893 : tensor<768x768xf32>
    %4895 = stablehlo.select %4785, %3990, %4894 : tensor<i1>, tensor<768x768xf32>
    %4896 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4897 = stablehlo.divide %3985, %4896 : tensor<768xf32>
    %4898 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4899 = stablehlo.multiply %4897, %4898 : tensor<768xf32>
    %4900 = stablehlo.select %4785, %3985, %4899 : tensor<i1>, tensor<768xf32>
    %4901 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4902 = stablehlo.divide %3974, %4901 : tensor<768x768xf32>
    %4903 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4904 = stablehlo.multiply %4902, %4903 : tensor<768x768xf32>
    %4905 = stablehlo.select %4785, %3974, %4904 : tensor<i1>, tensor<768x768xf32>
    %4906 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4907 = stablehlo.divide %3969, %4906 : tensor<768xf32>
    %4908 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4909 = stablehlo.multiply %4907, %4908 : tensor<768xf32>
    %4910 = stablehlo.select %4785, %3969, %4909 : tensor<i1>, tensor<768xf32>
    %4911 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4912 = stablehlo.divide %3982, %4911 : tensor<768x768xf32>
    %4913 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4914 = stablehlo.multiply %4912, %4913 : tensor<768x768xf32>
    %4915 = stablehlo.select %4785, %3982, %4914 : tensor<i1>, tensor<768x768xf32>
    %4916 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4917 = stablehlo.divide %3977, %4916 : tensor<768xf32>
    %4918 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4919 = stablehlo.multiply %4917, %4918 : tensor<768xf32>
    %4920 = stablehlo.select %4785, %3977, %4919 : tensor<i1>, tensor<768xf32>
    %4921 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4922 = stablehlo.divide %3936, %4921 : tensor<768x768xf32>
    %4923 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4924 = stablehlo.multiply %4922, %4923 : tensor<768x768xf32>
    %4925 = stablehlo.select %4785, %3936, %4924 : tensor<i1>, tensor<768x768xf32>
    %4926 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4927 = stablehlo.divide %3932, %4926 : tensor<768xf32>
    %4928 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4929 = stablehlo.multiply %4927, %4928 : tensor<768xf32>
    %4930 = stablehlo.select %4785, %3932, %4929 : tensor<i1>, tensor<768xf32>
    %4931 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4932 = stablehlo.divide %3908, %4931 : tensor<768xf32>
    %4933 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4934 = stablehlo.multiply %4932, %4933 : tensor<768xf32>
    %4935 = stablehlo.select %4785, %3908, %4934 : tensor<i1>, tensor<768xf32>
    %4936 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4937 = stablehlo.divide %3902, %4936 : tensor<768xf32>
    %4938 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4939 = stablehlo.multiply %4937, %4938 : tensor<768xf32>
    %4940 = stablehlo.select %4785, %3902, %4939 : tensor<i1>, tensor<768xf32>
    %4941 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4942 = stablehlo.divide %3899, %4941 : tensor<3072x768xf32>
    %4943 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4944 = stablehlo.multiply %4942, %4943 : tensor<3072x768xf32>
    %4945 = stablehlo.select %4785, %3899, %4944 : tensor<i1>, tensor<3072x768xf32>
    %4946 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4947 = stablehlo.divide %3894, %4946 : tensor<3072xf32>
    %4948 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4949 = stablehlo.multiply %4947, %4948 : tensor<3072xf32>
    %4950 = stablehlo.select %4785, %3894, %4949 : tensor<i1>, tensor<3072xf32>
    %4951 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4952 = stablehlo.divide %3877, %4951 : tensor<768x3072xf32>
    %4953 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4954 = stablehlo.multiply %4952, %4953 : tensor<768x3072xf32>
    %4955 = stablehlo.select %4785, %3877, %4954 : tensor<i1>, tensor<768x3072xf32>
    %4956 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4957 = stablehlo.divide %3873, %4956 : tensor<768xf32>
    %4958 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4959 = stablehlo.multiply %4957, %4958 : tensor<768xf32>
    %4960 = stablehlo.select %4785, %3873, %4959 : tensor<i1>, tensor<768xf32>
    %4961 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4962 = stablehlo.divide %3849, %4961 : tensor<768xf32>
    %4963 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4964 = stablehlo.multiply %4962, %4963 : tensor<768xf32>
    %4965 = stablehlo.select %4785, %3849, %4964 : tensor<i1>, tensor<768xf32>
    %4966 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4967 = stablehlo.divide %3843, %4966 : tensor<768xf32>
    %4968 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4969 = stablehlo.multiply %4967, %4968 : tensor<768xf32>
    %4970 = stablehlo.select %4785, %3843, %4969 : tensor<i1>, tensor<768xf32>
    %4971 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4972 = stablehlo.divide %3840, %4971 : tensor<768x768xf32>
    %4973 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4974 = stablehlo.multiply %4972, %4973 : tensor<768x768xf32>
    %4975 = stablehlo.select %4785, %3840, %4974 : tensor<i1>, tensor<768x768xf32>
    %4976 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4977 = stablehlo.divide %3835, %4976 : tensor<768xf32>
    %4978 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4979 = stablehlo.multiply %4977, %4978 : tensor<768xf32>
    %4980 = stablehlo.select %4785, %3835, %4979 : tensor<i1>, tensor<768xf32>
    %4981 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4982 = stablehlo.divide %3824, %4981 : tensor<768x768xf32>
    %4983 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4984 = stablehlo.multiply %4982, %4983 : tensor<768x768xf32>
    %4985 = stablehlo.select %4785, %3824, %4984 : tensor<i1>, tensor<768x768xf32>
    %4986 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4987 = stablehlo.divide %3819, %4986 : tensor<768xf32>
    %4988 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4989 = stablehlo.multiply %4987, %4988 : tensor<768xf32>
    %4990 = stablehlo.select %4785, %3819, %4989 : tensor<i1>, tensor<768xf32>
    %4991 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4992 = stablehlo.divide %3832, %4991 : tensor<768x768xf32>
    %4993 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4994 = stablehlo.multiply %4992, %4993 : tensor<768x768xf32>
    %4995 = stablehlo.select %4785, %3832, %4994 : tensor<i1>, tensor<768x768xf32>
    %4996 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4997 = stablehlo.divide %3827, %4996 : tensor<768xf32>
    %4998 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4999 = stablehlo.multiply %4997, %4998 : tensor<768xf32>
    %5000 = stablehlo.select %4785, %3827, %4999 : tensor<i1>, tensor<768xf32>
    %5001 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5002 = stablehlo.divide %3786, %5001 : tensor<768x768xf32>
    %5003 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5004 = stablehlo.multiply %5002, %5003 : tensor<768x768xf32>
    %5005 = stablehlo.select %4785, %3786, %5004 : tensor<i1>, tensor<768x768xf32>
    %5006 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5007 = stablehlo.divide %3782, %5006 : tensor<768xf32>
    %5008 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5009 = stablehlo.multiply %5007, %5008 : tensor<768xf32>
    %5010 = stablehlo.select %4785, %3782, %5009 : tensor<i1>, tensor<768xf32>
    %5011 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5012 = stablehlo.divide %3758, %5011 : tensor<768xf32>
    %5013 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5014 = stablehlo.multiply %5012, %5013 : tensor<768xf32>
    %5015 = stablehlo.select %4785, %3758, %5014 : tensor<i1>, tensor<768xf32>
    %5016 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5017 = stablehlo.divide %3752, %5016 : tensor<768xf32>
    %5018 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5019 = stablehlo.multiply %5017, %5018 : tensor<768xf32>
    %5020 = stablehlo.select %4785, %3752, %5019 : tensor<i1>, tensor<768xf32>
    %5021 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5022 = stablehlo.divide %3749, %5021 : tensor<3072x768xf32>
    %5023 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5024 = stablehlo.multiply %5022, %5023 : tensor<3072x768xf32>
    %5025 = stablehlo.select %4785, %3749, %5024 : tensor<i1>, tensor<3072x768xf32>
    %5026 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5027 = stablehlo.divide %3744, %5026 : tensor<3072xf32>
    %5028 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5029 = stablehlo.multiply %5027, %5028 : tensor<3072xf32>
    %5030 = stablehlo.select %4785, %3744, %5029 : tensor<i1>, tensor<3072xf32>
    %5031 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5032 = stablehlo.divide %3727, %5031 : tensor<768x3072xf32>
    %5033 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5034 = stablehlo.multiply %5032, %5033 : tensor<768x3072xf32>
    %5035 = stablehlo.select %4785, %3727, %5034 : tensor<i1>, tensor<768x3072xf32>
    %5036 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5037 = stablehlo.divide %3723, %5036 : tensor<768xf32>
    %5038 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5039 = stablehlo.multiply %5037, %5038 : tensor<768xf32>
    %5040 = stablehlo.select %4785, %3723, %5039 : tensor<i1>, tensor<768xf32>
    %5041 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5042 = stablehlo.divide %3699, %5041 : tensor<768xf32>
    %5043 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5044 = stablehlo.multiply %5042, %5043 : tensor<768xf32>
    %5045 = stablehlo.select %4785, %3699, %5044 : tensor<i1>, tensor<768xf32>
    %5046 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5047 = stablehlo.divide %3693, %5046 : tensor<768xf32>
    %5048 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5049 = stablehlo.multiply %5047, %5048 : tensor<768xf32>
    %5050 = stablehlo.select %4785, %3693, %5049 : tensor<i1>, tensor<768xf32>
    %5051 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5052 = stablehlo.divide %3690, %5051 : tensor<768x768xf32>
    %5053 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5054 = stablehlo.multiply %5052, %5053 : tensor<768x768xf32>
    %5055 = stablehlo.select %4785, %3690, %5054 : tensor<i1>, tensor<768x768xf32>
    %5056 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5057 = stablehlo.divide %3685, %5056 : tensor<768xf32>
    %5058 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5059 = stablehlo.multiply %5057, %5058 : tensor<768xf32>
    %5060 = stablehlo.select %4785, %3685, %5059 : tensor<i1>, tensor<768xf32>
    %5061 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5062 = stablehlo.divide %3674, %5061 : tensor<768x768xf32>
    %5063 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5064 = stablehlo.multiply %5062, %5063 : tensor<768x768xf32>
    %5065 = stablehlo.select %4785, %3674, %5064 : tensor<i1>, tensor<768x768xf32>
    %5066 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5067 = stablehlo.divide %3669, %5066 : tensor<768xf32>
    %5068 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5069 = stablehlo.multiply %5067, %5068 : tensor<768xf32>
    %5070 = stablehlo.select %4785, %3669, %5069 : tensor<i1>, tensor<768xf32>
    %5071 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5072 = stablehlo.divide %3682, %5071 : tensor<768x768xf32>
    %5073 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5074 = stablehlo.multiply %5072, %5073 : tensor<768x768xf32>
    %5075 = stablehlo.select %4785, %3682, %5074 : tensor<i1>, tensor<768x768xf32>
    %5076 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5077 = stablehlo.divide %3677, %5076 : tensor<768xf32>
    %5078 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5079 = stablehlo.multiply %5077, %5078 : tensor<768xf32>
    %5080 = stablehlo.select %4785, %3677, %5079 : tensor<i1>, tensor<768xf32>
    %5081 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5082 = stablehlo.divide %3636, %5081 : tensor<768x768xf32>
    %5083 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5084 = stablehlo.multiply %5082, %5083 : tensor<768x768xf32>
    %5085 = stablehlo.select %4785, %3636, %5084 : tensor<i1>, tensor<768x768xf32>
    %5086 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5087 = stablehlo.divide %3632, %5086 : tensor<768xf32>
    %5088 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5089 = stablehlo.multiply %5087, %5088 : tensor<768xf32>
    %5090 = stablehlo.select %4785, %3632, %5089 : tensor<i1>, tensor<768xf32>
    %5091 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5092 = stablehlo.divide %3608, %5091 : tensor<768xf32>
    %5093 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5094 = stablehlo.multiply %5092, %5093 : tensor<768xf32>
    %5095 = stablehlo.select %4785, %3608, %5094 : tensor<i1>, tensor<768xf32>
    %5096 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5097 = stablehlo.divide %3602, %5096 : tensor<768xf32>
    %5098 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5099 = stablehlo.multiply %5097, %5098 : tensor<768xf32>
    %5100 = stablehlo.select %4785, %3602, %5099 : tensor<i1>, tensor<768xf32>
    %5101 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5102 = stablehlo.divide %3599, %5101 : tensor<3072x768xf32>
    %5103 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5104 = stablehlo.multiply %5102, %5103 : tensor<3072x768xf32>
    %5105 = stablehlo.select %4785, %3599, %5104 : tensor<i1>, tensor<3072x768xf32>
    %5106 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5107 = stablehlo.divide %3594, %5106 : tensor<3072xf32>
    %5108 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5109 = stablehlo.multiply %5107, %5108 : tensor<3072xf32>
    %5110 = stablehlo.select %4785, %3594, %5109 : tensor<i1>, tensor<3072xf32>
    %5111 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5112 = stablehlo.divide %3577, %5111 : tensor<768x3072xf32>
    %5113 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5114 = stablehlo.multiply %5112, %5113 : tensor<768x3072xf32>
    %5115 = stablehlo.select %4785, %3577, %5114 : tensor<i1>, tensor<768x3072xf32>
    %5116 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5117 = stablehlo.divide %3573, %5116 : tensor<768xf32>
    %5118 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5119 = stablehlo.multiply %5117, %5118 : tensor<768xf32>
    %5120 = stablehlo.select %4785, %3573, %5119 : tensor<i1>, tensor<768xf32>
    %5121 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5122 = stablehlo.divide %3549, %5121 : tensor<768xf32>
    %5123 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5124 = stablehlo.multiply %5122, %5123 : tensor<768xf32>
    %5125 = stablehlo.select %4785, %3549, %5124 : tensor<i1>, tensor<768xf32>
    %5126 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5127 = stablehlo.divide %3543, %5126 : tensor<768xf32>
    %5128 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5129 = stablehlo.multiply %5127, %5128 : tensor<768xf32>
    %5130 = stablehlo.select %4785, %3543, %5129 : tensor<i1>, tensor<768xf32>
    %5131 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5132 = stablehlo.divide %3540, %5131 : tensor<768x768xf32>
    %5133 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5134 = stablehlo.multiply %5132, %5133 : tensor<768x768xf32>
    %5135 = stablehlo.select %4785, %3540, %5134 : tensor<i1>, tensor<768x768xf32>
    %5136 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5137 = stablehlo.divide %3535, %5136 : tensor<768xf32>
    %5138 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5139 = stablehlo.multiply %5137, %5138 : tensor<768xf32>
    %5140 = stablehlo.select %4785, %3535, %5139 : tensor<i1>, tensor<768xf32>
    %5141 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5142 = stablehlo.divide %3524, %5141 : tensor<768x768xf32>
    %5143 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5144 = stablehlo.multiply %5142, %5143 : tensor<768x768xf32>
    %5145 = stablehlo.select %4785, %3524, %5144 : tensor<i1>, tensor<768x768xf32>
    %5146 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5147 = stablehlo.divide %3519, %5146 : tensor<768xf32>
    %5148 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5149 = stablehlo.multiply %5147, %5148 : tensor<768xf32>
    %5150 = stablehlo.select %4785, %3519, %5149 : tensor<i1>, tensor<768xf32>
    %5151 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5152 = stablehlo.divide %3532, %5151 : tensor<768x768xf32>
    %5153 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5154 = stablehlo.multiply %5152, %5153 : tensor<768x768xf32>
    %5155 = stablehlo.select %4785, %3532, %5154 : tensor<i1>, tensor<768x768xf32>
    %5156 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5157 = stablehlo.divide %3527, %5156 : tensor<768xf32>
    %5158 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5159 = stablehlo.multiply %5157, %5158 : tensor<768xf32>
    %5160 = stablehlo.select %4785, %3527, %5159 : tensor<i1>, tensor<768xf32>
    %5161 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5162 = stablehlo.divide %3486, %5161 : tensor<768x768xf32>
    %5163 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5164 = stablehlo.multiply %5162, %5163 : tensor<768x768xf32>
    %5165 = stablehlo.select %4785, %3486, %5164 : tensor<i1>, tensor<768x768xf32>
    %5166 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5167 = stablehlo.divide %3482, %5166 : tensor<768xf32>
    %5168 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5169 = stablehlo.multiply %5167, %5168 : tensor<768xf32>
    %5170 = stablehlo.select %4785, %3482, %5169 : tensor<i1>, tensor<768xf32>
    %5171 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5172 = stablehlo.divide %3458, %5171 : tensor<768xf32>
    %5173 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5174 = stablehlo.multiply %5172, %5173 : tensor<768xf32>
    %5175 = stablehlo.select %4785, %3458, %5174 : tensor<i1>, tensor<768xf32>
    %5176 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5177 = stablehlo.divide %3452, %5176 : tensor<768xf32>
    %5178 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5179 = stablehlo.multiply %5177, %5178 : tensor<768xf32>
    %5180 = stablehlo.select %4785, %3452, %5179 : tensor<i1>, tensor<768xf32>
    %5181 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5182 = stablehlo.divide %3449, %5181 : tensor<3072x768xf32>
    %5183 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5184 = stablehlo.multiply %5182, %5183 : tensor<3072x768xf32>
    %5185 = stablehlo.select %4785, %3449, %5184 : tensor<i1>, tensor<3072x768xf32>
    %5186 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5187 = stablehlo.divide %3444, %5186 : tensor<3072xf32>
    %5188 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5189 = stablehlo.multiply %5187, %5188 : tensor<3072xf32>
    %5190 = stablehlo.select %4785, %3444, %5189 : tensor<i1>, tensor<3072xf32>
    %5191 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5192 = stablehlo.divide %3427, %5191 : tensor<768x3072xf32>
    %5193 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5194 = stablehlo.multiply %5192, %5193 : tensor<768x3072xf32>
    %5195 = stablehlo.select %4785, %3427, %5194 : tensor<i1>, tensor<768x3072xf32>
    %5196 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5197 = stablehlo.divide %3423, %5196 : tensor<768xf32>
    %5198 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5199 = stablehlo.multiply %5197, %5198 : tensor<768xf32>
    %5200 = stablehlo.select %4785, %3423, %5199 : tensor<i1>, tensor<768xf32>
    %5201 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5202 = stablehlo.divide %3399, %5201 : tensor<768xf32>
    %5203 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5204 = stablehlo.multiply %5202, %5203 : tensor<768xf32>
    %5205 = stablehlo.select %4785, %3399, %5204 : tensor<i1>, tensor<768xf32>
    %5206 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5207 = stablehlo.divide %3393, %5206 : tensor<768xf32>
    %5208 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5209 = stablehlo.multiply %5207, %5208 : tensor<768xf32>
    %5210 = stablehlo.select %4785, %3393, %5209 : tensor<i1>, tensor<768xf32>
    %5211 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5212 = stablehlo.divide %3390, %5211 : tensor<768x768xf32>
    %5213 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5214 = stablehlo.multiply %5212, %5213 : tensor<768x768xf32>
    %5215 = stablehlo.select %4785, %3390, %5214 : tensor<i1>, tensor<768x768xf32>
    %5216 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5217 = stablehlo.divide %3385, %5216 : tensor<768xf32>
    %5218 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5219 = stablehlo.multiply %5217, %5218 : tensor<768xf32>
    %5220 = stablehlo.select %4785, %3385, %5219 : tensor<i1>, tensor<768xf32>
    %5221 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5222 = stablehlo.divide %3374, %5221 : tensor<768x768xf32>
    %5223 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5224 = stablehlo.multiply %5222, %5223 : tensor<768x768xf32>
    %5225 = stablehlo.select %4785, %3374, %5224 : tensor<i1>, tensor<768x768xf32>
    %5226 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5227 = stablehlo.divide %3369, %5226 : tensor<768xf32>
    %5228 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5229 = stablehlo.multiply %5227, %5228 : tensor<768xf32>
    %5230 = stablehlo.select %4785, %3369, %5229 : tensor<i1>, tensor<768xf32>
    %5231 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5232 = stablehlo.divide %3382, %5231 : tensor<768x768xf32>
    %5233 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5234 = stablehlo.multiply %5232, %5233 : tensor<768x768xf32>
    %5235 = stablehlo.select %4785, %3382, %5234 : tensor<i1>, tensor<768x768xf32>
    %5236 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5237 = stablehlo.divide %3377, %5236 : tensor<768xf32>
    %5238 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5239 = stablehlo.multiply %5237, %5238 : tensor<768xf32>
    %5240 = stablehlo.select %4785, %3377, %5239 : tensor<i1>, tensor<768xf32>
    %5241 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5242 = stablehlo.divide %3336, %5241 : tensor<768x768xf32>
    %5243 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5244 = stablehlo.multiply %5242, %5243 : tensor<768x768xf32>
    %5245 = stablehlo.select %4785, %3336, %5244 : tensor<i1>, tensor<768x768xf32>
    %5246 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5247 = stablehlo.divide %3332, %5246 : tensor<768xf32>
    %5248 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5249 = stablehlo.multiply %5247, %5248 : tensor<768xf32>
    %5250 = stablehlo.select %4785, %3332, %5249 : tensor<i1>, tensor<768xf32>
    %5251 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5252 = stablehlo.divide %3308, %5251 : tensor<768xf32>
    %5253 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5254 = stablehlo.multiply %5252, %5253 : tensor<768xf32>
    %5255 = stablehlo.select %4785, %3308, %5254 : tensor<i1>, tensor<768xf32>
    %5256 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5257 = stablehlo.divide %3302, %5256 : tensor<768xf32>
    %5258 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5259 = stablehlo.multiply %5257, %5258 : tensor<768xf32>
    %5260 = stablehlo.select %4785, %3302, %5259 : tensor<i1>, tensor<768xf32>
    %5261 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5262 = stablehlo.divide %3299, %5261 : tensor<3072x768xf32>
    %5263 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5264 = stablehlo.multiply %5262, %5263 : tensor<3072x768xf32>
    %5265 = stablehlo.select %4785, %3299, %5264 : tensor<i1>, tensor<3072x768xf32>
    %5266 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5267 = stablehlo.divide %3294, %5266 : tensor<3072xf32>
    %5268 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5269 = stablehlo.multiply %5267, %5268 : tensor<3072xf32>
    %5270 = stablehlo.select %4785, %3294, %5269 : tensor<i1>, tensor<3072xf32>
    %5271 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5272 = stablehlo.divide %3277, %5271 : tensor<768x3072xf32>
    %5273 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5274 = stablehlo.multiply %5272, %5273 : tensor<768x3072xf32>
    %5275 = stablehlo.select %4785, %3277, %5274 : tensor<i1>, tensor<768x3072xf32>
    %5276 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5277 = stablehlo.divide %3273, %5276 : tensor<768xf32>
    %5278 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5279 = stablehlo.multiply %5277, %5278 : tensor<768xf32>
    %5280 = stablehlo.select %4785, %3273, %5279 : tensor<i1>, tensor<768xf32>
    %5281 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5282 = stablehlo.divide %3249, %5281 : tensor<768xf32>
    %5283 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5284 = stablehlo.multiply %5282, %5283 : tensor<768xf32>
    %5285 = stablehlo.select %4785, %3249, %5284 : tensor<i1>, tensor<768xf32>
    %5286 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5287 = stablehlo.divide %3243, %5286 : tensor<768xf32>
    %5288 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5289 = stablehlo.multiply %5287, %5288 : tensor<768xf32>
    %5290 = stablehlo.select %4785, %3243, %5289 : tensor<i1>, tensor<768xf32>
    %5291 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5292 = stablehlo.divide %3240, %5291 : tensor<768x768xf32>
    %5293 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5294 = stablehlo.multiply %5292, %5293 : tensor<768x768xf32>
    %5295 = stablehlo.select %4785, %3240, %5294 : tensor<i1>, tensor<768x768xf32>
    %5296 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5297 = stablehlo.divide %3235, %5296 : tensor<768xf32>
    %5298 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5299 = stablehlo.multiply %5297, %5298 : tensor<768xf32>
    %5300 = stablehlo.select %4785, %3235, %5299 : tensor<i1>, tensor<768xf32>
    %5301 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5302 = stablehlo.divide %3224, %5301 : tensor<768x768xf32>
    %5303 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5304 = stablehlo.multiply %5302, %5303 : tensor<768x768xf32>
    %5305 = stablehlo.select %4785, %3224, %5304 : tensor<i1>, tensor<768x768xf32>
    %5306 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5307 = stablehlo.divide %3219, %5306 : tensor<768xf32>
    %5308 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5309 = stablehlo.multiply %5307, %5308 : tensor<768xf32>
    %5310 = stablehlo.select %4785, %3219, %5309 : tensor<i1>, tensor<768xf32>
    %5311 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5312 = stablehlo.divide %3232, %5311 : tensor<768x768xf32>
    %5313 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5314 = stablehlo.multiply %5312, %5313 : tensor<768x768xf32>
    %5315 = stablehlo.select %4785, %3232, %5314 : tensor<i1>, tensor<768x768xf32>
    %5316 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5317 = stablehlo.divide %3227, %5316 : tensor<768xf32>
    %5318 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5319 = stablehlo.multiply %5317, %5318 : tensor<768xf32>
    %5320 = stablehlo.select %4785, %3227, %5319 : tensor<i1>, tensor<768xf32>
    %5321 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5322 = stablehlo.divide %3186, %5321 : tensor<768x768xf32>
    %5323 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5324 = stablehlo.multiply %5322, %5323 : tensor<768x768xf32>
    %5325 = stablehlo.select %4785, %3186, %5324 : tensor<i1>, tensor<768x768xf32>
    %5326 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5327 = stablehlo.divide %3182, %5326 : tensor<768xf32>
    %5328 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5329 = stablehlo.multiply %5327, %5328 : tensor<768xf32>
    %5330 = stablehlo.select %4785, %3182, %5329 : tensor<i1>, tensor<768xf32>
    %5331 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5332 = stablehlo.divide %3158, %5331 : tensor<768xf32>
    %5333 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5334 = stablehlo.multiply %5332, %5333 : tensor<768xf32>
    %5335 = stablehlo.select %4785, %3158, %5334 : tensor<i1>, tensor<768xf32>
    %5336 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5337 = stablehlo.divide %3152, %5336 : tensor<768xf32>
    %5338 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5339 = stablehlo.multiply %5337, %5338 : tensor<768xf32>
    %5340 = stablehlo.select %4785, %3152, %5339 : tensor<i1>, tensor<768xf32>
    %5341 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5342 = stablehlo.divide %3149, %5341 : tensor<3072x768xf32>
    %5343 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5344 = stablehlo.multiply %5342, %5343 : tensor<3072x768xf32>
    %5345 = stablehlo.select %4785, %3149, %5344 : tensor<i1>, tensor<3072x768xf32>
    %5346 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5347 = stablehlo.divide %3144, %5346 : tensor<3072xf32>
    %5348 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5349 = stablehlo.multiply %5347, %5348 : tensor<3072xf32>
    %5350 = stablehlo.select %4785, %3144, %5349 : tensor<i1>, tensor<3072xf32>
    %5351 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5352 = stablehlo.divide %3127, %5351 : tensor<768x3072xf32>
    %5353 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5354 = stablehlo.multiply %5352, %5353 : tensor<768x3072xf32>
    %5355 = stablehlo.select %4785, %3127, %5354 : tensor<i1>, tensor<768x3072xf32>
    %5356 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5357 = stablehlo.divide %3123, %5356 : tensor<768xf32>
    %5358 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5359 = stablehlo.multiply %5357, %5358 : tensor<768xf32>
    %5360 = stablehlo.select %4785, %3123, %5359 : tensor<i1>, tensor<768xf32>
    %5361 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5362 = stablehlo.divide %3099, %5361 : tensor<768xf32>
    %5363 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5364 = stablehlo.multiply %5362, %5363 : tensor<768xf32>
    %5365 = stablehlo.select %4785, %3099, %5364 : tensor<i1>, tensor<768xf32>
    %5366 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5367 = stablehlo.divide %3093, %5366 : tensor<768xf32>
    %5368 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5369 = stablehlo.multiply %5367, %5368 : tensor<768xf32>
    %5370 = stablehlo.select %4785, %3093, %5369 : tensor<i1>, tensor<768xf32>
    %5371 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5372 = stablehlo.divide %3090, %5371 : tensor<768x768xf32>
    %5373 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5374 = stablehlo.multiply %5372, %5373 : tensor<768x768xf32>
    %5375 = stablehlo.select %4785, %3090, %5374 : tensor<i1>, tensor<768x768xf32>
    %5376 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5377 = stablehlo.divide %3085, %5376 : tensor<768xf32>
    %5378 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5379 = stablehlo.multiply %5377, %5378 : tensor<768xf32>
    %5380 = stablehlo.select %4785, %3085, %5379 : tensor<i1>, tensor<768xf32>
    %5381 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5382 = stablehlo.divide %3074, %5381 : tensor<768x768xf32>
    %5383 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5384 = stablehlo.multiply %5382, %5383 : tensor<768x768xf32>
    %5385 = stablehlo.select %4785, %3074, %5384 : tensor<i1>, tensor<768x768xf32>
    %5386 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5387 = stablehlo.divide %3069, %5386 : tensor<768xf32>
    %5388 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5389 = stablehlo.multiply %5387, %5388 : tensor<768xf32>
    %5390 = stablehlo.select %4785, %3069, %5389 : tensor<i1>, tensor<768xf32>
    %5391 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5392 = stablehlo.divide %3082, %5391 : tensor<768x768xf32>
    %5393 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5394 = stablehlo.multiply %5392, %5393 : tensor<768x768xf32>
    %5395 = stablehlo.select %4785, %3082, %5394 : tensor<i1>, tensor<768x768xf32>
    %5396 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5397 = stablehlo.divide %3077, %5396 : tensor<768xf32>
    %5398 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5399 = stablehlo.multiply %5397, %5398 : tensor<768xf32>
    %5400 = stablehlo.select %4785, %3077, %5399 : tensor<i1>, tensor<768xf32>
    %5401 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5402 = stablehlo.divide %3036, %5401 : tensor<768x768xf32>
    %5403 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5404 = stablehlo.multiply %5402, %5403 : tensor<768x768xf32>
    %5405 = stablehlo.select %4785, %3036, %5404 : tensor<i1>, tensor<768x768xf32>
    %5406 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5407 = stablehlo.divide %3032, %5406 : tensor<768xf32>
    %5408 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5409 = stablehlo.multiply %5407, %5408 : tensor<768xf32>
    %5410 = stablehlo.select %4785, %3032, %5409 : tensor<i1>, tensor<768xf32>
    %5411 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5412 = stablehlo.divide %3008, %5411 : tensor<768xf32>
    %5413 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5414 = stablehlo.multiply %5412, %5413 : tensor<768xf32>
    %5415 = stablehlo.select %4785, %3008, %5414 : tensor<i1>, tensor<768xf32>
    %5416 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5417 = stablehlo.divide %3002, %5416 : tensor<768xf32>
    %5418 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5419 = stablehlo.multiply %5417, %5418 : tensor<768xf32>
    %5420 = stablehlo.select %4785, %3002, %5419 : tensor<i1>, tensor<768xf32>
    %5421 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5422 = stablehlo.divide %2999, %5421 : tensor<3072x768xf32>
    %5423 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5424 = stablehlo.multiply %5422, %5423 : tensor<3072x768xf32>
    %5425 = stablehlo.select %4785, %2999, %5424 : tensor<i1>, tensor<3072x768xf32>
    %5426 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5427 = stablehlo.divide %2994, %5426 : tensor<3072xf32>
    %5428 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5429 = stablehlo.multiply %5427, %5428 : tensor<3072xf32>
    %5430 = stablehlo.select %4785, %2994, %5429 : tensor<i1>, tensor<3072xf32>
    %5431 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5432 = stablehlo.divide %2977, %5431 : tensor<768x3072xf32>
    %5433 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5434 = stablehlo.multiply %5432, %5433 : tensor<768x3072xf32>
    %5435 = stablehlo.select %4785, %2977, %5434 : tensor<i1>, tensor<768x3072xf32>
    %5436 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5437 = stablehlo.divide %2973, %5436 : tensor<768xf32>
    %5438 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5439 = stablehlo.multiply %5437, %5438 : tensor<768xf32>
    %5440 = stablehlo.select %4785, %2973, %5439 : tensor<i1>, tensor<768xf32>
    %5441 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5442 = stablehlo.divide %2949, %5441 : tensor<768xf32>
    %5443 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5444 = stablehlo.multiply %5442, %5443 : tensor<768xf32>
    %5445 = stablehlo.select %4785, %2949, %5444 : tensor<i1>, tensor<768xf32>
    %5446 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5447 = stablehlo.divide %2943, %5446 : tensor<768xf32>
    %5448 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5449 = stablehlo.multiply %5447, %5448 : tensor<768xf32>
    %5450 = stablehlo.select %4785, %2943, %5449 : tensor<i1>, tensor<768xf32>
    %5451 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5452 = stablehlo.divide %2940, %5451 : tensor<768x768xf32>
    %5453 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5454 = stablehlo.multiply %5452, %5453 : tensor<768x768xf32>
    %5455 = stablehlo.select %4785, %2940, %5454 : tensor<i1>, tensor<768x768xf32>
    %5456 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5457 = stablehlo.divide %2935, %5456 : tensor<768xf32>
    %5458 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5459 = stablehlo.multiply %5457, %5458 : tensor<768xf32>
    %5460 = stablehlo.select %4785, %2935, %5459 : tensor<i1>, tensor<768xf32>
    %5461 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5462 = stablehlo.divide %2924, %5461 : tensor<768x768xf32>
    %5463 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5464 = stablehlo.multiply %5462, %5463 : tensor<768x768xf32>
    %5465 = stablehlo.select %4785, %2924, %5464 : tensor<i1>, tensor<768x768xf32>
    %5466 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5467 = stablehlo.divide %2919, %5466 : tensor<768xf32>
    %5468 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5469 = stablehlo.multiply %5467, %5468 : tensor<768xf32>
    %5470 = stablehlo.select %4785, %2919, %5469 : tensor<i1>, tensor<768xf32>
    %5471 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5472 = stablehlo.divide %2932, %5471 : tensor<768x768xf32>
    %5473 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5474 = stablehlo.multiply %5472, %5473 : tensor<768x768xf32>
    %5475 = stablehlo.select %4785, %2932, %5474 : tensor<i1>, tensor<768x768xf32>
    %5476 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5477 = stablehlo.divide %2927, %5476 : tensor<768xf32>
    %5478 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5479 = stablehlo.multiply %5477, %5478 : tensor<768xf32>
    %5480 = stablehlo.select %4785, %2927, %5479 : tensor<i1>, tensor<768xf32>
    %5481 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5482 = stablehlo.divide %2886, %5481 : tensor<768x768xf32>
    %5483 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5484 = stablehlo.multiply %5482, %5483 : tensor<768x768xf32>
    %5485 = stablehlo.select %4785, %2886, %5484 : tensor<i1>, tensor<768x768xf32>
    %5486 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5487 = stablehlo.divide %2882, %5486 : tensor<768xf32>
    %5488 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5489 = stablehlo.multiply %5487, %5488 : tensor<768xf32>
    %5490 = stablehlo.select %4785, %2882, %5489 : tensor<i1>, tensor<768xf32>
    %5491 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5492 = stablehlo.divide %2858, %5491 : tensor<768xf32>
    %5493 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5494 = stablehlo.multiply %5492, %5493 : tensor<768xf32>
    %5495 = stablehlo.select %4785, %2858, %5494 : tensor<i1>, tensor<768xf32>
    %5496 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5497 = stablehlo.divide %2852, %5496 : tensor<768xf32>
    %5498 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5499 = stablehlo.multiply %5497, %5498 : tensor<768xf32>
    %5500 = stablehlo.select %4785, %2852, %5499 : tensor<i1>, tensor<768xf32>
    %5501 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5502 = stablehlo.divide %2849, %5501 : tensor<3072x768xf32>
    %5503 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5504 = stablehlo.multiply %5502, %5503 : tensor<3072x768xf32>
    %5505 = stablehlo.select %4785, %2849, %5504 : tensor<i1>, tensor<3072x768xf32>
    %5506 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5507 = stablehlo.divide %2844, %5506 : tensor<3072xf32>
    %5508 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5509 = stablehlo.multiply %5507, %5508 : tensor<3072xf32>
    %5510 = stablehlo.select %4785, %2844, %5509 : tensor<i1>, tensor<3072xf32>
    %5511 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5512 = stablehlo.divide %2827, %5511 : tensor<768x3072xf32>
    %5513 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5514 = stablehlo.multiply %5512, %5513 : tensor<768x3072xf32>
    %5515 = stablehlo.select %4785, %2827, %5514 : tensor<i1>, tensor<768x3072xf32>
    %5516 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5517 = stablehlo.divide %2823, %5516 : tensor<768xf32>
    %5518 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5519 = stablehlo.multiply %5517, %5518 : tensor<768xf32>
    %5520 = stablehlo.select %4785, %2823, %5519 : tensor<i1>, tensor<768xf32>
    %5521 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5522 = stablehlo.divide %2799, %5521 : tensor<768xf32>
    %5523 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5524 = stablehlo.multiply %5522, %5523 : tensor<768xf32>
    %5525 = stablehlo.select %4785, %2799, %5524 : tensor<i1>, tensor<768xf32>
    %5526 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5527 = stablehlo.divide %2793, %5526 : tensor<768xf32>
    %5528 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5529 = stablehlo.multiply %5527, %5528 : tensor<768xf32>
    %5530 = stablehlo.select %4785, %2793, %5529 : tensor<i1>, tensor<768xf32>
    %5531 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5532 = stablehlo.divide %2790, %5531 : tensor<768x768xf32>
    %5533 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5534 = stablehlo.multiply %5532, %5533 : tensor<768x768xf32>
    %5535 = stablehlo.select %4785, %2790, %5534 : tensor<i1>, tensor<768x768xf32>
    %5536 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5537 = stablehlo.divide %2785, %5536 : tensor<768xf32>
    %5538 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5539 = stablehlo.multiply %5537, %5538 : tensor<768xf32>
    %5540 = stablehlo.select %4785, %2785, %5539 : tensor<i1>, tensor<768xf32>
    %5541 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5542 = stablehlo.divide %2774, %5541 : tensor<768x768xf32>
    %5543 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5544 = stablehlo.multiply %5542, %5543 : tensor<768x768xf32>
    %5545 = stablehlo.select %4785, %2774, %5544 : tensor<i1>, tensor<768x768xf32>
    %5546 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5547 = stablehlo.divide %2769, %5546 : tensor<768xf32>
    %5548 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5549 = stablehlo.multiply %5547, %5548 : tensor<768xf32>
    %5550 = stablehlo.select %4785, %2769, %5549 : tensor<i1>, tensor<768xf32>
    %5551 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5552 = stablehlo.divide %2782, %5551 : tensor<768x768xf32>
    %5553 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5554 = stablehlo.multiply %5552, %5553 : tensor<768x768xf32>
    %5555 = stablehlo.select %4785, %2782, %5554 : tensor<i1>, tensor<768x768xf32>
    %5556 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5557 = stablehlo.divide %2777, %5556 : tensor<768xf32>
    %5558 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5559 = stablehlo.multiply %5557, %5558 : tensor<768xf32>
    %5560 = stablehlo.select %4785, %2777, %5559 : tensor<i1>, tensor<768xf32>
    %5561 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5562 = stablehlo.divide %2736, %5561 : tensor<768x768xf32>
    %5563 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5564 = stablehlo.multiply %5562, %5563 : tensor<768x768xf32>
    %5565 = stablehlo.select %4785, %2736, %5564 : tensor<i1>, tensor<768x768xf32>
    %5566 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5567 = stablehlo.divide %2732, %5566 : tensor<768xf32>
    %5568 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5569 = stablehlo.multiply %5567, %5568 : tensor<768xf32>
    %5570 = stablehlo.select %4785, %2732, %5569 : tensor<i1>, tensor<768xf32>
    %5571 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5572 = stablehlo.divide %2708, %5571 : tensor<768xf32>
    %5573 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5574 = stablehlo.multiply %5572, %5573 : tensor<768xf32>
    %5575 = stablehlo.select %4785, %2708, %5574 : tensor<i1>, tensor<768xf32>
    %5576 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5577 = stablehlo.divide %2702, %5576 : tensor<768xf32>
    %5578 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5579 = stablehlo.multiply %5577, %5578 : tensor<768xf32>
    %5580 = stablehlo.select %4785, %2702, %5579 : tensor<i1>, tensor<768xf32>
    %5581 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5582 = stablehlo.divide %2699, %5581 : tensor<3072x768xf32>
    %5583 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5584 = stablehlo.multiply %5582, %5583 : tensor<3072x768xf32>
    %5585 = stablehlo.select %4785, %2699, %5584 : tensor<i1>, tensor<3072x768xf32>
    %5586 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5587 = stablehlo.divide %2694, %5586 : tensor<3072xf32>
    %5588 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5589 = stablehlo.multiply %5587, %5588 : tensor<3072xf32>
    %5590 = stablehlo.select %4785, %2694, %5589 : tensor<i1>, tensor<3072xf32>
    %5591 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5592 = stablehlo.divide %2677, %5591 : tensor<768x3072xf32>
    %5593 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5594 = stablehlo.multiply %5592, %5593 : tensor<768x3072xf32>
    %5595 = stablehlo.select %4785, %2677, %5594 : tensor<i1>, tensor<768x3072xf32>
    %5596 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5597 = stablehlo.divide %2673, %5596 : tensor<768xf32>
    %5598 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5599 = stablehlo.multiply %5597, %5598 : tensor<768xf32>
    %5600 = stablehlo.select %4785, %2673, %5599 : tensor<i1>, tensor<768xf32>
    %5601 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5602 = stablehlo.divide %2649, %5601 : tensor<768xf32>
    %5603 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5604 = stablehlo.multiply %5602, %5603 : tensor<768xf32>
    %5605 = stablehlo.select %4785, %2649, %5604 : tensor<i1>, tensor<768xf32>
    %5606 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5607 = stablehlo.divide %2643, %5606 : tensor<768xf32>
    %5608 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5609 = stablehlo.multiply %5607, %5608 : tensor<768xf32>
    %5610 = stablehlo.select %4785, %2643, %5609 : tensor<i1>, tensor<768xf32>
    %5611 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5612 = stablehlo.divide %2640, %5611 : tensor<768x768xf32>
    %5613 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5614 = stablehlo.multiply %5612, %5613 : tensor<768x768xf32>
    %5615 = stablehlo.select %4785, %2640, %5614 : tensor<i1>, tensor<768x768xf32>
    %5616 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5617 = stablehlo.divide %2635, %5616 : tensor<768xf32>
    %5618 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5619 = stablehlo.multiply %5617, %5618 : tensor<768xf32>
    %5620 = stablehlo.select %4785, %2635, %5619 : tensor<i1>, tensor<768xf32>
    %5621 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5622 = stablehlo.divide %2624, %5621 : tensor<768x768xf32>
    %5623 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5624 = stablehlo.multiply %5622, %5623 : tensor<768x768xf32>
    %5625 = stablehlo.select %4785, %2624, %5624 : tensor<i1>, tensor<768x768xf32>
    %5626 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5627 = stablehlo.divide %2619, %5626 : tensor<768xf32>
    %5628 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5629 = stablehlo.multiply %5627, %5628 : tensor<768xf32>
    %5630 = stablehlo.select %4785, %2619, %5629 : tensor<i1>, tensor<768xf32>
    %5631 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5632 = stablehlo.divide %2632, %5631 : tensor<768x768xf32>
    %5633 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5634 = stablehlo.multiply %5632, %5633 : tensor<768x768xf32>
    %5635 = stablehlo.select %4785, %2632, %5634 : tensor<i1>, tensor<768x768xf32>
    %5636 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5637 = stablehlo.divide %2627, %5636 : tensor<768xf32>
    %5638 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5639 = stablehlo.multiply %5637, %5638 : tensor<768xf32>
    %5640 = stablehlo.select %4785, %2627, %5639 : tensor<i1>, tensor<768xf32>
    %5641 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5642 = stablehlo.divide %2586, %5641 : tensor<768x768xf32>
    %5643 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5644 = stablehlo.multiply %5642, %5643 : tensor<768x768xf32>
    %5645 = stablehlo.select %4785, %2586, %5644 : tensor<i1>, tensor<768x768xf32>
    %5646 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5647 = stablehlo.divide %2582, %5646 : tensor<768xf32>
    %5648 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5649 = stablehlo.multiply %5647, %5648 : tensor<768xf32>
    %5650 = stablehlo.select %4785, %2582, %5649 : tensor<i1>, tensor<768xf32>
    %5651 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5652 = stablehlo.divide %2558, %5651 : tensor<768xf32>
    %5653 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5654 = stablehlo.multiply %5652, %5653 : tensor<768xf32>
    %5655 = stablehlo.select %4785, %2558, %5654 : tensor<i1>, tensor<768xf32>
    %5656 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5657 = stablehlo.divide %2552, %5656 : tensor<768xf32>
    %5658 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5659 = stablehlo.multiply %5657, %5658 : tensor<768xf32>
    %5660 = stablehlo.select %4785, %2552, %5659 : tensor<i1>, tensor<768xf32>
    %5661 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5662 = stablehlo.divide %2549, %5661 : tensor<3072x768xf32>
    %5663 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5664 = stablehlo.multiply %5662, %5663 : tensor<3072x768xf32>
    %5665 = stablehlo.select %4785, %2549, %5664 : tensor<i1>, tensor<3072x768xf32>
    %5666 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5667 = stablehlo.divide %2544, %5666 : tensor<3072xf32>
    %5668 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5669 = stablehlo.multiply %5667, %5668 : tensor<3072xf32>
    %5670 = stablehlo.select %4785, %2544, %5669 : tensor<i1>, tensor<3072xf32>
    %5671 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5672 = stablehlo.divide %2527, %5671 : tensor<768x3072xf32>
    %5673 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5674 = stablehlo.multiply %5672, %5673 : tensor<768x3072xf32>
    %5675 = stablehlo.select %4785, %2527, %5674 : tensor<i1>, tensor<768x3072xf32>
    %5676 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5677 = stablehlo.divide %2523, %5676 : tensor<768xf32>
    %5678 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5679 = stablehlo.multiply %5677, %5678 : tensor<768xf32>
    %5680 = stablehlo.select %4785, %2523, %5679 : tensor<i1>, tensor<768xf32>
    %5681 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5682 = stablehlo.divide %2499, %5681 : tensor<768xf32>
    %5683 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5684 = stablehlo.multiply %5682, %5683 : tensor<768xf32>
    %5685 = stablehlo.select %4785, %2499, %5684 : tensor<i1>, tensor<768xf32>
    %5686 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5687 = stablehlo.divide %2493, %5686 : tensor<768xf32>
    %5688 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5689 = stablehlo.multiply %5687, %5688 : tensor<768xf32>
    %5690 = stablehlo.select %4785, %2493, %5689 : tensor<i1>, tensor<768xf32>
    %5691 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5692 = stablehlo.divide %2490, %5691 : tensor<768x768xf32>
    %5693 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5694 = stablehlo.multiply %5692, %5693 : tensor<768x768xf32>
    %5695 = stablehlo.select %4785, %2490, %5694 : tensor<i1>, tensor<768x768xf32>
    %5696 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5697 = stablehlo.divide %2485, %5696 : tensor<768xf32>
    %5698 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5699 = stablehlo.multiply %5697, %5698 : tensor<768xf32>
    %5700 = stablehlo.select %4785, %2485, %5699 : tensor<i1>, tensor<768xf32>
    %5701 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5702 = stablehlo.divide %2474, %5701 : tensor<768x768xf32>
    %5703 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5704 = stablehlo.multiply %5702, %5703 : tensor<768x768xf32>
    %5705 = stablehlo.select %4785, %2474, %5704 : tensor<i1>, tensor<768x768xf32>
    %5706 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5707 = stablehlo.divide %2469, %5706 : tensor<768xf32>
    %5708 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5709 = stablehlo.multiply %5707, %5708 : tensor<768xf32>
    %5710 = stablehlo.select %4785, %2469, %5709 : tensor<i1>, tensor<768xf32>
    %5711 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5712 = stablehlo.divide %2482, %5711 : tensor<768x768xf32>
    %5713 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5714 = stablehlo.multiply %5712, %5713 : tensor<768x768xf32>
    %5715 = stablehlo.select %4785, %2482, %5714 : tensor<i1>, tensor<768x768xf32>
    %5716 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5717 = stablehlo.divide %2477, %5716 : tensor<768xf32>
    %5718 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5719 = stablehlo.multiply %5717, %5718 : tensor<768xf32>
    %5720 = stablehlo.select %4785, %2477, %5719 : tensor<i1>, tensor<768xf32>
    %5721 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5722 = stablehlo.divide %2436, %5721 : tensor<768x768xf32>
    %5723 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5724 = stablehlo.multiply %5722, %5723 : tensor<768x768xf32>
    %5725 = stablehlo.select %4785, %2436, %5724 : tensor<i1>, tensor<768x768xf32>
    %5726 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5727 = stablehlo.divide %2432, %5726 : tensor<768xf32>
    %5728 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5729 = stablehlo.multiply %5727, %5728 : tensor<768xf32>
    %5730 = stablehlo.select %4785, %2432, %5729 : tensor<i1>, tensor<768xf32>
    %5731 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5732 = stablehlo.divide %2408, %5731 : tensor<768xf32>
    %5733 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5734 = stablehlo.multiply %5732, %5733 : tensor<768xf32>
    %5735 = stablehlo.select %4785, %2408, %5734 : tensor<i1>, tensor<768xf32>
    %5736 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5737 = stablehlo.divide %2402, %5736 : tensor<768xf32>
    %5738 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5739 = stablehlo.multiply %5737, %5738 : tensor<768xf32>
    %5740 = stablehlo.select %4785, %2402, %5739 : tensor<i1>, tensor<768xf32>
    %5741 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5742 = stablehlo.divide %2399, %5741 : tensor<3072x768xf32>
    %5743 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5744 = stablehlo.multiply %5742, %5743 : tensor<3072x768xf32>
    %5745 = stablehlo.select %4785, %2399, %5744 : tensor<i1>, tensor<3072x768xf32>
    %5746 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5747 = stablehlo.divide %2394, %5746 : tensor<3072xf32>
    %5748 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5749 = stablehlo.multiply %5747, %5748 : tensor<3072xf32>
    %5750 = stablehlo.select %4785, %2394, %5749 : tensor<i1>, tensor<3072xf32>
    %5751 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5752 = stablehlo.divide %2377, %5751 : tensor<768x3072xf32>
    %5753 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5754 = stablehlo.multiply %5752, %5753 : tensor<768x3072xf32>
    %5755 = stablehlo.select %4785, %2377, %5754 : tensor<i1>, tensor<768x3072xf32>
    %5756 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5757 = stablehlo.divide %2373, %5756 : tensor<768xf32>
    %5758 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5759 = stablehlo.multiply %5757, %5758 : tensor<768xf32>
    %5760 = stablehlo.select %4785, %2373, %5759 : tensor<i1>, tensor<768xf32>
    %5761 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5762 = stablehlo.divide %2349, %5761 : tensor<768xf32>
    %5763 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5764 = stablehlo.multiply %5762, %5763 : tensor<768xf32>
    %5765 = stablehlo.select %4785, %2349, %5764 : tensor<i1>, tensor<768xf32>
    %5766 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5767 = stablehlo.divide %2343, %5766 : tensor<768xf32>
    %5768 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5769 = stablehlo.multiply %5767, %5768 : tensor<768xf32>
    %5770 = stablehlo.select %4785, %2343, %5769 : tensor<i1>, tensor<768xf32>
    %5771 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5772 = stablehlo.divide %2340, %5771 : tensor<768x768xf32>
    %5773 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5774 = stablehlo.multiply %5772, %5773 : tensor<768x768xf32>
    %5775 = stablehlo.select %4785, %2340, %5774 : tensor<i1>, tensor<768x768xf32>
    %5776 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5777 = stablehlo.divide %2336, %5776 : tensor<768xf32>
    %5778 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5779 = stablehlo.multiply %5777, %5778 : tensor<768xf32>
    %5780 = stablehlo.select %4785, %2336, %5779 : tensor<i1>, tensor<768xf32>
    %5781 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5782 = stablehlo.divide %2302, %5781 : tensor<768xf32>
    %5783 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5784 = stablehlo.multiply %5782, %5783 : tensor<768xf32>
    %5785 = stablehlo.select %4785, %2302, %5784 : tensor<i1>, tensor<768xf32>
    %5786 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5787 = stablehlo.divide %2296, %5786 : tensor<768xf32>
    %5788 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5789 = stablehlo.multiply %5787, %5788 : tensor<768xf32>
    %5790 = stablehlo.select %4785, %2296, %5789 : tensor<i1>, tensor<768xf32>
    %5791 = stablehlo.broadcast_in_dim %4784, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5792 = stablehlo.divide %2291, %5791 : tensor<30522xf32>
    %5793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5794 = stablehlo.multiply %5792, %5793 : tensor<30522xf32>
    %5795 = stablehlo.select %4785, %2291, %5794 : tensor<i1>, tensor<30522xf32>
    %cst_647 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %5796 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5797 = stablehlo.multiply %5796, %4790 : tensor<30522x768xf32>
    %5798 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5799 = stablehlo.multiply %5798, %arg203 : tensor<30522x768xf32>
    %5800 = stablehlo.add %5797, %5799 : tensor<30522x768xf32>
    %5801 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5802 = stablehlo.multiply %5801, %4795 : tensor<512x768xf32>
    %5803 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5804 = stablehlo.multiply %5803, %arg204 : tensor<512x768xf32>
    %5805 = stablehlo.add %5802, %5804 : tensor<512x768xf32>
    %5806 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5807 = stablehlo.multiply %5806, %4800 : tensor<2x768xf32>
    %5808 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5809 = stablehlo.multiply %5808, %arg205 : tensor<2x768xf32>
    %5810 = stablehlo.add %5807, %5809 : tensor<2x768xf32>
    %5811 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5812 = stablehlo.multiply %5811, %4805 : tensor<768xf32>
    %5813 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5814 = stablehlo.multiply %5813, %arg206 : tensor<768xf32>
    %5815 = stablehlo.add %5812, %5814 : tensor<768xf32>
    %5816 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5817 = stablehlo.multiply %5816, %4810 : tensor<768xf32>
    %5818 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5819 = stablehlo.multiply %5818, %arg207 : tensor<768xf32>
    %5820 = stablehlo.add %5817, %5819 : tensor<768xf32>
    %5821 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5822 = stablehlo.multiply %5821, %4815 : tensor<768x768xf32>
    %5823 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5824 = stablehlo.multiply %5823, %arg208 : tensor<768x768xf32>
    %5825 = stablehlo.add %5822, %5824 : tensor<768x768xf32>
    %5826 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5827 = stablehlo.multiply %5826, %4820 : tensor<768xf32>
    %5828 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5829 = stablehlo.multiply %5828, %arg209 : tensor<768xf32>
    %5830 = stablehlo.add %5827, %5829 : tensor<768xf32>
    %5831 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5832 = stablehlo.multiply %5831, %4825 : tensor<768x768xf32>
    %5833 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5834 = stablehlo.multiply %5833, %arg210 : tensor<768x768xf32>
    %5835 = stablehlo.add %5832, %5834 : tensor<768x768xf32>
    %5836 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5837 = stablehlo.multiply %5836, %4830 : tensor<768xf32>
    %5838 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5839 = stablehlo.multiply %5838, %arg211 : tensor<768xf32>
    %5840 = stablehlo.add %5837, %5839 : tensor<768xf32>
    %5841 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5842 = stablehlo.multiply %5841, %4835 : tensor<768x768xf32>
    %5843 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5844 = stablehlo.multiply %5843, %arg212 : tensor<768x768xf32>
    %5845 = stablehlo.add %5842, %5844 : tensor<768x768xf32>
    %5846 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5847 = stablehlo.multiply %5846, %4840 : tensor<768xf32>
    %5848 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5849 = stablehlo.multiply %5848, %arg213 : tensor<768xf32>
    %5850 = stablehlo.add %5847, %5849 : tensor<768xf32>
    %5851 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5852 = stablehlo.multiply %5851, %4845 : tensor<768x768xf32>
    %5853 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5854 = stablehlo.multiply %5853, %arg214 : tensor<768x768xf32>
    %5855 = stablehlo.add %5852, %5854 : tensor<768x768xf32>
    %5856 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5857 = stablehlo.multiply %5856, %4850 : tensor<768xf32>
    %5858 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5859 = stablehlo.multiply %5858, %arg215 : tensor<768xf32>
    %5860 = stablehlo.add %5857, %5859 : tensor<768xf32>
    %5861 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5862 = stablehlo.multiply %5861, %4855 : tensor<768xf32>
    %5863 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5864 = stablehlo.multiply %5863, %arg216 : tensor<768xf32>
    %5865 = stablehlo.add %5862, %5864 : tensor<768xf32>
    %5866 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5867 = stablehlo.multiply %5866, %4860 : tensor<768xf32>
    %5868 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5869 = stablehlo.multiply %5868, %arg217 : tensor<768xf32>
    %5870 = stablehlo.add %5867, %5869 : tensor<768xf32>
    %5871 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5872 = stablehlo.multiply %5871, %4865 : tensor<3072x768xf32>
    %5873 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5874 = stablehlo.multiply %5873, %arg218 : tensor<3072x768xf32>
    %5875 = stablehlo.add %5872, %5874 : tensor<3072x768xf32>
    %5876 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5877 = stablehlo.multiply %5876, %4870 : tensor<3072xf32>
    %5878 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5879 = stablehlo.multiply %5878, %arg219 : tensor<3072xf32>
    %5880 = stablehlo.add %5877, %5879 : tensor<3072xf32>
    %5881 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5882 = stablehlo.multiply %5881, %4875 : tensor<768x3072xf32>
    %5883 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5884 = stablehlo.multiply %5883, %arg220 : tensor<768x3072xf32>
    %5885 = stablehlo.add %5882, %5884 : tensor<768x3072xf32>
    %5886 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5887 = stablehlo.multiply %5886, %4880 : tensor<768xf32>
    %5888 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5889 = stablehlo.multiply %5888, %arg221 : tensor<768xf32>
    %5890 = stablehlo.add %5887, %5889 : tensor<768xf32>
    %5891 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5892 = stablehlo.multiply %5891, %4885 : tensor<768xf32>
    %5893 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5894 = stablehlo.multiply %5893, %arg222 : tensor<768xf32>
    %5895 = stablehlo.add %5892, %5894 : tensor<768xf32>
    %5896 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5897 = stablehlo.multiply %5896, %4890 : tensor<768xf32>
    %5898 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5899 = stablehlo.multiply %5898, %arg223 : tensor<768xf32>
    %5900 = stablehlo.add %5897, %5899 : tensor<768xf32>
    %5901 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5902 = stablehlo.multiply %5901, %4895 : tensor<768x768xf32>
    %5903 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5904 = stablehlo.multiply %5903, %arg224 : tensor<768x768xf32>
    %5905 = stablehlo.add %5902, %5904 : tensor<768x768xf32>
    %5906 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5907 = stablehlo.multiply %5906, %4900 : tensor<768xf32>
    %5908 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5909 = stablehlo.multiply %5908, %arg225 : tensor<768xf32>
    %5910 = stablehlo.add %5907, %5909 : tensor<768xf32>
    %5911 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5912 = stablehlo.multiply %5911, %4905 : tensor<768x768xf32>
    %5913 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5914 = stablehlo.multiply %5913, %arg226 : tensor<768x768xf32>
    %5915 = stablehlo.add %5912, %5914 : tensor<768x768xf32>
    %5916 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5917 = stablehlo.multiply %5916, %4910 : tensor<768xf32>
    %5918 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5919 = stablehlo.multiply %5918, %arg227 : tensor<768xf32>
    %5920 = stablehlo.add %5917, %5919 : tensor<768xf32>
    %5921 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5922 = stablehlo.multiply %5921, %4915 : tensor<768x768xf32>
    %5923 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5924 = stablehlo.multiply %5923, %arg228 : tensor<768x768xf32>
    %5925 = stablehlo.add %5922, %5924 : tensor<768x768xf32>
    %5926 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5927 = stablehlo.multiply %5926, %4920 : tensor<768xf32>
    %5928 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5929 = stablehlo.multiply %5928, %arg229 : tensor<768xf32>
    %5930 = stablehlo.add %5927, %5929 : tensor<768xf32>
    %5931 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5932 = stablehlo.multiply %5931, %4925 : tensor<768x768xf32>
    %5933 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5934 = stablehlo.multiply %5933, %arg230 : tensor<768x768xf32>
    %5935 = stablehlo.add %5932, %5934 : tensor<768x768xf32>
    %5936 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5937 = stablehlo.multiply %5936, %4930 : tensor<768xf32>
    %5938 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5939 = stablehlo.multiply %5938, %arg231 : tensor<768xf32>
    %5940 = stablehlo.add %5937, %5939 : tensor<768xf32>
    %5941 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5942 = stablehlo.multiply %5941, %4935 : tensor<768xf32>
    %5943 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5944 = stablehlo.multiply %5943, %arg232 : tensor<768xf32>
    %5945 = stablehlo.add %5942, %5944 : tensor<768xf32>
    %5946 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5947 = stablehlo.multiply %5946, %4940 : tensor<768xf32>
    %5948 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5949 = stablehlo.multiply %5948, %arg233 : tensor<768xf32>
    %5950 = stablehlo.add %5947, %5949 : tensor<768xf32>
    %5951 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5952 = stablehlo.multiply %5951, %4945 : tensor<3072x768xf32>
    %5953 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5954 = stablehlo.multiply %5953, %arg234 : tensor<3072x768xf32>
    %5955 = stablehlo.add %5952, %5954 : tensor<3072x768xf32>
    %5956 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5957 = stablehlo.multiply %5956, %4950 : tensor<3072xf32>
    %5958 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5959 = stablehlo.multiply %5958, %arg235 : tensor<3072xf32>
    %5960 = stablehlo.add %5957, %5959 : tensor<3072xf32>
    %5961 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5962 = stablehlo.multiply %5961, %4955 : tensor<768x3072xf32>
    %5963 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5964 = stablehlo.multiply %5963, %arg236 : tensor<768x3072xf32>
    %5965 = stablehlo.add %5962, %5964 : tensor<768x3072xf32>
    %5966 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5967 = stablehlo.multiply %5966, %4960 : tensor<768xf32>
    %5968 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5969 = stablehlo.multiply %5968, %arg237 : tensor<768xf32>
    %5970 = stablehlo.add %5967, %5969 : tensor<768xf32>
    %5971 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5972 = stablehlo.multiply %5971, %4965 : tensor<768xf32>
    %5973 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5974 = stablehlo.multiply %5973, %arg238 : tensor<768xf32>
    %5975 = stablehlo.add %5972, %5974 : tensor<768xf32>
    %5976 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5977 = stablehlo.multiply %5976, %4970 : tensor<768xf32>
    %5978 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5979 = stablehlo.multiply %5978, %arg239 : tensor<768xf32>
    %5980 = stablehlo.add %5977, %5979 : tensor<768xf32>
    %5981 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5982 = stablehlo.multiply %5981, %4975 : tensor<768x768xf32>
    %5983 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5984 = stablehlo.multiply %5983, %arg240 : tensor<768x768xf32>
    %5985 = stablehlo.add %5982, %5984 : tensor<768x768xf32>
    %5986 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5987 = stablehlo.multiply %5986, %4980 : tensor<768xf32>
    %5988 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5989 = stablehlo.multiply %5988, %arg241 : tensor<768xf32>
    %5990 = stablehlo.add %5987, %5989 : tensor<768xf32>
    %5991 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5992 = stablehlo.multiply %5991, %4985 : tensor<768x768xf32>
    %5993 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5994 = stablehlo.multiply %5993, %arg242 : tensor<768x768xf32>
    %5995 = stablehlo.add %5992, %5994 : tensor<768x768xf32>
    %5996 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5997 = stablehlo.multiply %5996, %4990 : tensor<768xf32>
    %5998 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5999 = stablehlo.multiply %5998, %arg243 : tensor<768xf32>
    %6000 = stablehlo.add %5997, %5999 : tensor<768xf32>
    %6001 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6002 = stablehlo.multiply %6001, %4995 : tensor<768x768xf32>
    %6003 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6004 = stablehlo.multiply %6003, %arg244 : tensor<768x768xf32>
    %6005 = stablehlo.add %6002, %6004 : tensor<768x768xf32>
    %6006 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6007 = stablehlo.multiply %6006, %5000 : tensor<768xf32>
    %6008 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6009 = stablehlo.multiply %6008, %arg245 : tensor<768xf32>
    %6010 = stablehlo.add %6007, %6009 : tensor<768xf32>
    %6011 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6012 = stablehlo.multiply %6011, %5005 : tensor<768x768xf32>
    %6013 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6014 = stablehlo.multiply %6013, %arg246 : tensor<768x768xf32>
    %6015 = stablehlo.add %6012, %6014 : tensor<768x768xf32>
    %6016 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6017 = stablehlo.multiply %6016, %5010 : tensor<768xf32>
    %6018 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6019 = stablehlo.multiply %6018, %arg247 : tensor<768xf32>
    %6020 = stablehlo.add %6017, %6019 : tensor<768xf32>
    %6021 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6022 = stablehlo.multiply %6021, %5015 : tensor<768xf32>
    %6023 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6024 = stablehlo.multiply %6023, %arg248 : tensor<768xf32>
    %6025 = stablehlo.add %6022, %6024 : tensor<768xf32>
    %6026 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6027 = stablehlo.multiply %6026, %5020 : tensor<768xf32>
    %6028 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6029 = stablehlo.multiply %6028, %arg249 : tensor<768xf32>
    %6030 = stablehlo.add %6027, %6029 : tensor<768xf32>
    %6031 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6032 = stablehlo.multiply %6031, %5025 : tensor<3072x768xf32>
    %6033 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6034 = stablehlo.multiply %6033, %arg250 : tensor<3072x768xf32>
    %6035 = stablehlo.add %6032, %6034 : tensor<3072x768xf32>
    %6036 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6037 = stablehlo.multiply %6036, %5030 : tensor<3072xf32>
    %6038 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6039 = stablehlo.multiply %6038, %arg251 : tensor<3072xf32>
    %6040 = stablehlo.add %6037, %6039 : tensor<3072xf32>
    %6041 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6042 = stablehlo.multiply %6041, %5035 : tensor<768x3072xf32>
    %6043 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6044 = stablehlo.multiply %6043, %arg252 : tensor<768x3072xf32>
    %6045 = stablehlo.add %6042, %6044 : tensor<768x3072xf32>
    %6046 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6047 = stablehlo.multiply %6046, %5040 : tensor<768xf32>
    %6048 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6049 = stablehlo.multiply %6048, %arg253 : tensor<768xf32>
    %6050 = stablehlo.add %6047, %6049 : tensor<768xf32>
    %6051 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6052 = stablehlo.multiply %6051, %5045 : tensor<768xf32>
    %6053 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6054 = stablehlo.multiply %6053, %arg254 : tensor<768xf32>
    %6055 = stablehlo.add %6052, %6054 : tensor<768xf32>
    %6056 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6057 = stablehlo.multiply %6056, %5050 : tensor<768xf32>
    %6058 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6059 = stablehlo.multiply %6058, %arg255 : tensor<768xf32>
    %6060 = stablehlo.add %6057, %6059 : tensor<768xf32>
    %6061 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6062 = stablehlo.multiply %6061, %5055 : tensor<768x768xf32>
    %6063 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6064 = stablehlo.multiply %6063, %arg256 : tensor<768x768xf32>
    %6065 = stablehlo.add %6062, %6064 : tensor<768x768xf32>
    %6066 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6067 = stablehlo.multiply %6066, %5060 : tensor<768xf32>
    %6068 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6069 = stablehlo.multiply %6068, %arg257 : tensor<768xf32>
    %6070 = stablehlo.add %6067, %6069 : tensor<768xf32>
    %6071 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6072 = stablehlo.multiply %6071, %5065 : tensor<768x768xf32>
    %6073 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6074 = stablehlo.multiply %6073, %arg258 : tensor<768x768xf32>
    %6075 = stablehlo.add %6072, %6074 : tensor<768x768xf32>
    %6076 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6077 = stablehlo.multiply %6076, %5070 : tensor<768xf32>
    %6078 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6079 = stablehlo.multiply %6078, %arg259 : tensor<768xf32>
    %6080 = stablehlo.add %6077, %6079 : tensor<768xf32>
    %6081 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6082 = stablehlo.multiply %6081, %5075 : tensor<768x768xf32>
    %6083 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6084 = stablehlo.multiply %6083, %arg260 : tensor<768x768xf32>
    %6085 = stablehlo.add %6082, %6084 : tensor<768x768xf32>
    %6086 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6087 = stablehlo.multiply %6086, %5080 : tensor<768xf32>
    %6088 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6089 = stablehlo.multiply %6088, %arg261 : tensor<768xf32>
    %6090 = stablehlo.add %6087, %6089 : tensor<768xf32>
    %6091 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6092 = stablehlo.multiply %6091, %5085 : tensor<768x768xf32>
    %6093 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6094 = stablehlo.multiply %6093, %arg262 : tensor<768x768xf32>
    %6095 = stablehlo.add %6092, %6094 : tensor<768x768xf32>
    %6096 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6097 = stablehlo.multiply %6096, %5090 : tensor<768xf32>
    %6098 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6099 = stablehlo.multiply %6098, %arg263 : tensor<768xf32>
    %6100 = stablehlo.add %6097, %6099 : tensor<768xf32>
    %6101 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6102 = stablehlo.multiply %6101, %5095 : tensor<768xf32>
    %6103 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6104 = stablehlo.multiply %6103, %arg264 : tensor<768xf32>
    %6105 = stablehlo.add %6102, %6104 : tensor<768xf32>
    %6106 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6107 = stablehlo.multiply %6106, %5100 : tensor<768xf32>
    %6108 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6109 = stablehlo.multiply %6108, %arg265 : tensor<768xf32>
    %6110 = stablehlo.add %6107, %6109 : tensor<768xf32>
    %6111 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6112 = stablehlo.multiply %6111, %5105 : tensor<3072x768xf32>
    %6113 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6114 = stablehlo.multiply %6113, %arg266 : tensor<3072x768xf32>
    %6115 = stablehlo.add %6112, %6114 : tensor<3072x768xf32>
    %6116 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6117 = stablehlo.multiply %6116, %5110 : tensor<3072xf32>
    %6118 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6119 = stablehlo.multiply %6118, %arg267 : tensor<3072xf32>
    %6120 = stablehlo.add %6117, %6119 : tensor<3072xf32>
    %6121 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6122 = stablehlo.multiply %6121, %5115 : tensor<768x3072xf32>
    %6123 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6124 = stablehlo.multiply %6123, %arg268 : tensor<768x3072xf32>
    %6125 = stablehlo.add %6122, %6124 : tensor<768x3072xf32>
    %6126 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6127 = stablehlo.multiply %6126, %5120 : tensor<768xf32>
    %6128 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6129 = stablehlo.multiply %6128, %arg269 : tensor<768xf32>
    %6130 = stablehlo.add %6127, %6129 : tensor<768xf32>
    %6131 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6132 = stablehlo.multiply %6131, %5125 : tensor<768xf32>
    %6133 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6134 = stablehlo.multiply %6133, %arg270 : tensor<768xf32>
    %6135 = stablehlo.add %6132, %6134 : tensor<768xf32>
    %6136 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6137 = stablehlo.multiply %6136, %5130 : tensor<768xf32>
    %6138 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6139 = stablehlo.multiply %6138, %arg271 : tensor<768xf32>
    %6140 = stablehlo.add %6137, %6139 : tensor<768xf32>
    %6141 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6142 = stablehlo.multiply %6141, %5135 : tensor<768x768xf32>
    %6143 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6144 = stablehlo.multiply %6143, %arg272 : tensor<768x768xf32>
    %6145 = stablehlo.add %6142, %6144 : tensor<768x768xf32>
    %6146 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6147 = stablehlo.multiply %6146, %5140 : tensor<768xf32>
    %6148 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6149 = stablehlo.multiply %6148, %arg273 : tensor<768xf32>
    %6150 = stablehlo.add %6147, %6149 : tensor<768xf32>
    %6151 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6152 = stablehlo.multiply %6151, %5145 : tensor<768x768xf32>
    %6153 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6154 = stablehlo.multiply %6153, %arg274 : tensor<768x768xf32>
    %6155 = stablehlo.add %6152, %6154 : tensor<768x768xf32>
    %6156 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6157 = stablehlo.multiply %6156, %5150 : tensor<768xf32>
    %6158 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6159 = stablehlo.multiply %6158, %arg275 : tensor<768xf32>
    %6160 = stablehlo.add %6157, %6159 : tensor<768xf32>
    %6161 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6162 = stablehlo.multiply %6161, %5155 : tensor<768x768xf32>
    %6163 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6164 = stablehlo.multiply %6163, %arg276 : tensor<768x768xf32>
    %6165 = stablehlo.add %6162, %6164 : tensor<768x768xf32>
    %6166 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6167 = stablehlo.multiply %6166, %5160 : tensor<768xf32>
    %6168 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6169 = stablehlo.multiply %6168, %arg277 : tensor<768xf32>
    %6170 = stablehlo.add %6167, %6169 : tensor<768xf32>
    %6171 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6172 = stablehlo.multiply %6171, %5165 : tensor<768x768xf32>
    %6173 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6174 = stablehlo.multiply %6173, %arg278 : tensor<768x768xf32>
    %6175 = stablehlo.add %6172, %6174 : tensor<768x768xf32>
    %6176 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6177 = stablehlo.multiply %6176, %5170 : tensor<768xf32>
    %6178 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6179 = stablehlo.multiply %6178, %arg279 : tensor<768xf32>
    %6180 = stablehlo.add %6177, %6179 : tensor<768xf32>
    %6181 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6182 = stablehlo.multiply %6181, %5175 : tensor<768xf32>
    %6183 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6184 = stablehlo.multiply %6183, %arg280 : tensor<768xf32>
    %6185 = stablehlo.add %6182, %6184 : tensor<768xf32>
    %6186 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6187 = stablehlo.multiply %6186, %5180 : tensor<768xf32>
    %6188 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6189 = stablehlo.multiply %6188, %arg281 : tensor<768xf32>
    %6190 = stablehlo.add %6187, %6189 : tensor<768xf32>
    %6191 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6192 = stablehlo.multiply %6191, %5185 : tensor<3072x768xf32>
    %6193 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6194 = stablehlo.multiply %6193, %arg282 : tensor<3072x768xf32>
    %6195 = stablehlo.add %6192, %6194 : tensor<3072x768xf32>
    %6196 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6197 = stablehlo.multiply %6196, %5190 : tensor<3072xf32>
    %6198 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6199 = stablehlo.multiply %6198, %arg283 : tensor<3072xf32>
    %6200 = stablehlo.add %6197, %6199 : tensor<3072xf32>
    %6201 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6202 = stablehlo.multiply %6201, %5195 : tensor<768x3072xf32>
    %6203 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6204 = stablehlo.multiply %6203, %arg284 : tensor<768x3072xf32>
    %6205 = stablehlo.add %6202, %6204 : tensor<768x3072xf32>
    %6206 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6207 = stablehlo.multiply %6206, %5200 : tensor<768xf32>
    %6208 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6209 = stablehlo.multiply %6208, %arg285 : tensor<768xf32>
    %6210 = stablehlo.add %6207, %6209 : tensor<768xf32>
    %6211 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6212 = stablehlo.multiply %6211, %5205 : tensor<768xf32>
    %6213 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6214 = stablehlo.multiply %6213, %arg286 : tensor<768xf32>
    %6215 = stablehlo.add %6212, %6214 : tensor<768xf32>
    %6216 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6217 = stablehlo.multiply %6216, %5210 : tensor<768xf32>
    %6218 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6219 = stablehlo.multiply %6218, %arg287 : tensor<768xf32>
    %6220 = stablehlo.add %6217, %6219 : tensor<768xf32>
    %6221 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6222 = stablehlo.multiply %6221, %5215 : tensor<768x768xf32>
    %6223 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6224 = stablehlo.multiply %6223, %arg288 : tensor<768x768xf32>
    %6225 = stablehlo.add %6222, %6224 : tensor<768x768xf32>
    %6226 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6227 = stablehlo.multiply %6226, %5220 : tensor<768xf32>
    %6228 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6229 = stablehlo.multiply %6228, %arg289 : tensor<768xf32>
    %6230 = stablehlo.add %6227, %6229 : tensor<768xf32>
    %6231 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6232 = stablehlo.multiply %6231, %5225 : tensor<768x768xf32>
    %6233 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6234 = stablehlo.multiply %6233, %arg290 : tensor<768x768xf32>
    %6235 = stablehlo.add %6232, %6234 : tensor<768x768xf32>
    %6236 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6237 = stablehlo.multiply %6236, %5230 : tensor<768xf32>
    %6238 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6239 = stablehlo.multiply %6238, %arg291 : tensor<768xf32>
    %6240 = stablehlo.add %6237, %6239 : tensor<768xf32>
    %6241 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6242 = stablehlo.multiply %6241, %5235 : tensor<768x768xf32>
    %6243 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6244 = stablehlo.multiply %6243, %arg292 : tensor<768x768xf32>
    %6245 = stablehlo.add %6242, %6244 : tensor<768x768xf32>
    %6246 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6247 = stablehlo.multiply %6246, %5240 : tensor<768xf32>
    %6248 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6249 = stablehlo.multiply %6248, %arg293 : tensor<768xf32>
    %6250 = stablehlo.add %6247, %6249 : tensor<768xf32>
    %6251 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6252 = stablehlo.multiply %6251, %5245 : tensor<768x768xf32>
    %6253 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6254 = stablehlo.multiply %6253, %arg294 : tensor<768x768xf32>
    %6255 = stablehlo.add %6252, %6254 : tensor<768x768xf32>
    %6256 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6257 = stablehlo.multiply %6256, %5250 : tensor<768xf32>
    %6258 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6259 = stablehlo.multiply %6258, %arg295 : tensor<768xf32>
    %6260 = stablehlo.add %6257, %6259 : tensor<768xf32>
    %6261 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6262 = stablehlo.multiply %6261, %5255 : tensor<768xf32>
    %6263 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6264 = stablehlo.multiply %6263, %arg296 : tensor<768xf32>
    %6265 = stablehlo.add %6262, %6264 : tensor<768xf32>
    %6266 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6267 = stablehlo.multiply %6266, %5260 : tensor<768xf32>
    %6268 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6269 = stablehlo.multiply %6268, %arg297 : tensor<768xf32>
    %6270 = stablehlo.add %6267, %6269 : tensor<768xf32>
    %6271 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6272 = stablehlo.multiply %6271, %5265 : tensor<3072x768xf32>
    %6273 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6274 = stablehlo.multiply %6273, %arg298 : tensor<3072x768xf32>
    %6275 = stablehlo.add %6272, %6274 : tensor<3072x768xf32>
    %6276 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6277 = stablehlo.multiply %6276, %5270 : tensor<3072xf32>
    %6278 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6279 = stablehlo.multiply %6278, %arg299 : tensor<3072xf32>
    %6280 = stablehlo.add %6277, %6279 : tensor<3072xf32>
    %6281 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6282 = stablehlo.multiply %6281, %5275 : tensor<768x3072xf32>
    %6283 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6284 = stablehlo.multiply %6283, %arg300 : tensor<768x3072xf32>
    %6285 = stablehlo.add %6282, %6284 : tensor<768x3072xf32>
    %6286 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6287 = stablehlo.multiply %6286, %5280 : tensor<768xf32>
    %6288 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6289 = stablehlo.multiply %6288, %arg301 : tensor<768xf32>
    %6290 = stablehlo.add %6287, %6289 : tensor<768xf32>
    %6291 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6292 = stablehlo.multiply %6291, %5285 : tensor<768xf32>
    %6293 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6294 = stablehlo.multiply %6293, %arg302 : tensor<768xf32>
    %6295 = stablehlo.add %6292, %6294 : tensor<768xf32>
    %6296 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6297 = stablehlo.multiply %6296, %5290 : tensor<768xf32>
    %6298 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6299 = stablehlo.multiply %6298, %arg303 : tensor<768xf32>
    %6300 = stablehlo.add %6297, %6299 : tensor<768xf32>
    %6301 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6302 = stablehlo.multiply %6301, %5295 : tensor<768x768xf32>
    %6303 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6304 = stablehlo.multiply %6303, %arg304 : tensor<768x768xf32>
    %6305 = stablehlo.add %6302, %6304 : tensor<768x768xf32>
    %6306 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6307 = stablehlo.multiply %6306, %5300 : tensor<768xf32>
    %6308 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6309 = stablehlo.multiply %6308, %arg305 : tensor<768xf32>
    %6310 = stablehlo.add %6307, %6309 : tensor<768xf32>
    %6311 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6312 = stablehlo.multiply %6311, %5305 : tensor<768x768xf32>
    %6313 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6314 = stablehlo.multiply %6313, %arg306 : tensor<768x768xf32>
    %6315 = stablehlo.add %6312, %6314 : tensor<768x768xf32>
    %6316 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6317 = stablehlo.multiply %6316, %5310 : tensor<768xf32>
    %6318 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6319 = stablehlo.multiply %6318, %arg307 : tensor<768xf32>
    %6320 = stablehlo.add %6317, %6319 : tensor<768xf32>
    %6321 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6322 = stablehlo.multiply %6321, %5315 : tensor<768x768xf32>
    %6323 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6324 = stablehlo.multiply %6323, %arg308 : tensor<768x768xf32>
    %6325 = stablehlo.add %6322, %6324 : tensor<768x768xf32>
    %6326 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6327 = stablehlo.multiply %6326, %5320 : tensor<768xf32>
    %6328 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6329 = stablehlo.multiply %6328, %arg309 : tensor<768xf32>
    %6330 = stablehlo.add %6327, %6329 : tensor<768xf32>
    %6331 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6332 = stablehlo.multiply %6331, %5325 : tensor<768x768xf32>
    %6333 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6334 = stablehlo.multiply %6333, %arg310 : tensor<768x768xf32>
    %6335 = stablehlo.add %6332, %6334 : tensor<768x768xf32>
    %6336 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6337 = stablehlo.multiply %6336, %5330 : tensor<768xf32>
    %6338 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6339 = stablehlo.multiply %6338, %arg311 : tensor<768xf32>
    %6340 = stablehlo.add %6337, %6339 : tensor<768xf32>
    %6341 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6342 = stablehlo.multiply %6341, %5335 : tensor<768xf32>
    %6343 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6344 = stablehlo.multiply %6343, %arg312 : tensor<768xf32>
    %6345 = stablehlo.add %6342, %6344 : tensor<768xf32>
    %6346 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6347 = stablehlo.multiply %6346, %5340 : tensor<768xf32>
    %6348 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6349 = stablehlo.multiply %6348, %arg313 : tensor<768xf32>
    %6350 = stablehlo.add %6347, %6349 : tensor<768xf32>
    %6351 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6352 = stablehlo.multiply %6351, %5345 : tensor<3072x768xf32>
    %6353 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6354 = stablehlo.multiply %6353, %arg314 : tensor<3072x768xf32>
    %6355 = stablehlo.add %6352, %6354 : tensor<3072x768xf32>
    %6356 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6357 = stablehlo.multiply %6356, %5350 : tensor<3072xf32>
    %6358 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6359 = stablehlo.multiply %6358, %arg315 : tensor<3072xf32>
    %6360 = stablehlo.add %6357, %6359 : tensor<3072xf32>
    %6361 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6362 = stablehlo.multiply %6361, %5355 : tensor<768x3072xf32>
    %6363 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6364 = stablehlo.multiply %6363, %arg316 : tensor<768x3072xf32>
    %6365 = stablehlo.add %6362, %6364 : tensor<768x3072xf32>
    %6366 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6367 = stablehlo.multiply %6366, %5360 : tensor<768xf32>
    %6368 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6369 = stablehlo.multiply %6368, %arg317 : tensor<768xf32>
    %6370 = stablehlo.add %6367, %6369 : tensor<768xf32>
    %6371 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6372 = stablehlo.multiply %6371, %5365 : tensor<768xf32>
    %6373 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6374 = stablehlo.multiply %6373, %arg318 : tensor<768xf32>
    %6375 = stablehlo.add %6372, %6374 : tensor<768xf32>
    %6376 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6377 = stablehlo.multiply %6376, %5370 : tensor<768xf32>
    %6378 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6379 = stablehlo.multiply %6378, %arg319 : tensor<768xf32>
    %6380 = stablehlo.add %6377, %6379 : tensor<768xf32>
    %6381 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6382 = stablehlo.multiply %6381, %5375 : tensor<768x768xf32>
    %6383 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6384 = stablehlo.multiply %6383, %arg320 : tensor<768x768xf32>
    %6385 = stablehlo.add %6382, %6384 : tensor<768x768xf32>
    %6386 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6387 = stablehlo.multiply %6386, %5380 : tensor<768xf32>
    %6388 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6389 = stablehlo.multiply %6388, %arg321 : tensor<768xf32>
    %6390 = stablehlo.add %6387, %6389 : tensor<768xf32>
    %6391 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6392 = stablehlo.multiply %6391, %5385 : tensor<768x768xf32>
    %6393 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6394 = stablehlo.multiply %6393, %arg322 : tensor<768x768xf32>
    %6395 = stablehlo.add %6392, %6394 : tensor<768x768xf32>
    %6396 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6397 = stablehlo.multiply %6396, %5390 : tensor<768xf32>
    %6398 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6399 = stablehlo.multiply %6398, %arg323 : tensor<768xf32>
    %6400 = stablehlo.add %6397, %6399 : tensor<768xf32>
    %6401 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6402 = stablehlo.multiply %6401, %5395 : tensor<768x768xf32>
    %6403 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6404 = stablehlo.multiply %6403, %arg324 : tensor<768x768xf32>
    %6405 = stablehlo.add %6402, %6404 : tensor<768x768xf32>
    %6406 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6407 = stablehlo.multiply %6406, %5400 : tensor<768xf32>
    %6408 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6409 = stablehlo.multiply %6408, %arg325 : tensor<768xf32>
    %6410 = stablehlo.add %6407, %6409 : tensor<768xf32>
    %6411 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6412 = stablehlo.multiply %6411, %5405 : tensor<768x768xf32>
    %6413 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6414 = stablehlo.multiply %6413, %arg326 : tensor<768x768xf32>
    %6415 = stablehlo.add %6412, %6414 : tensor<768x768xf32>
    %6416 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6417 = stablehlo.multiply %6416, %5410 : tensor<768xf32>
    %6418 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6419 = stablehlo.multiply %6418, %arg327 : tensor<768xf32>
    %6420 = stablehlo.add %6417, %6419 : tensor<768xf32>
    %6421 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6422 = stablehlo.multiply %6421, %5415 : tensor<768xf32>
    %6423 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6424 = stablehlo.multiply %6423, %arg328 : tensor<768xf32>
    %6425 = stablehlo.add %6422, %6424 : tensor<768xf32>
    %6426 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6427 = stablehlo.multiply %6426, %5420 : tensor<768xf32>
    %6428 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6429 = stablehlo.multiply %6428, %arg329 : tensor<768xf32>
    %6430 = stablehlo.add %6427, %6429 : tensor<768xf32>
    %6431 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6432 = stablehlo.multiply %6431, %5425 : tensor<3072x768xf32>
    %6433 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6434 = stablehlo.multiply %6433, %arg330 : tensor<3072x768xf32>
    %6435 = stablehlo.add %6432, %6434 : tensor<3072x768xf32>
    %6436 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6437 = stablehlo.multiply %6436, %5430 : tensor<3072xf32>
    %6438 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6439 = stablehlo.multiply %6438, %arg331 : tensor<3072xf32>
    %6440 = stablehlo.add %6437, %6439 : tensor<3072xf32>
    %6441 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6442 = stablehlo.multiply %6441, %5435 : tensor<768x3072xf32>
    %6443 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6444 = stablehlo.multiply %6443, %arg332 : tensor<768x3072xf32>
    %6445 = stablehlo.add %6442, %6444 : tensor<768x3072xf32>
    %6446 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6447 = stablehlo.multiply %6446, %5440 : tensor<768xf32>
    %6448 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6449 = stablehlo.multiply %6448, %arg333 : tensor<768xf32>
    %6450 = stablehlo.add %6447, %6449 : tensor<768xf32>
    %6451 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6452 = stablehlo.multiply %6451, %5445 : tensor<768xf32>
    %6453 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6454 = stablehlo.multiply %6453, %arg334 : tensor<768xf32>
    %6455 = stablehlo.add %6452, %6454 : tensor<768xf32>
    %6456 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6457 = stablehlo.multiply %6456, %5450 : tensor<768xf32>
    %6458 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6459 = stablehlo.multiply %6458, %arg335 : tensor<768xf32>
    %6460 = stablehlo.add %6457, %6459 : tensor<768xf32>
    %6461 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6462 = stablehlo.multiply %6461, %5455 : tensor<768x768xf32>
    %6463 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6464 = stablehlo.multiply %6463, %arg336 : tensor<768x768xf32>
    %6465 = stablehlo.add %6462, %6464 : tensor<768x768xf32>
    %6466 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6467 = stablehlo.multiply %6466, %5460 : tensor<768xf32>
    %6468 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6469 = stablehlo.multiply %6468, %arg337 : tensor<768xf32>
    %6470 = stablehlo.add %6467, %6469 : tensor<768xf32>
    %6471 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6472 = stablehlo.multiply %6471, %5465 : tensor<768x768xf32>
    %6473 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6474 = stablehlo.multiply %6473, %arg338 : tensor<768x768xf32>
    %6475 = stablehlo.add %6472, %6474 : tensor<768x768xf32>
    %6476 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6477 = stablehlo.multiply %6476, %5470 : tensor<768xf32>
    %6478 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6479 = stablehlo.multiply %6478, %arg339 : tensor<768xf32>
    %6480 = stablehlo.add %6477, %6479 : tensor<768xf32>
    %6481 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6482 = stablehlo.multiply %6481, %5475 : tensor<768x768xf32>
    %6483 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6484 = stablehlo.multiply %6483, %arg340 : tensor<768x768xf32>
    %6485 = stablehlo.add %6482, %6484 : tensor<768x768xf32>
    %6486 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6487 = stablehlo.multiply %6486, %5480 : tensor<768xf32>
    %6488 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6489 = stablehlo.multiply %6488, %arg341 : tensor<768xf32>
    %6490 = stablehlo.add %6487, %6489 : tensor<768xf32>
    %6491 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6492 = stablehlo.multiply %6491, %5485 : tensor<768x768xf32>
    %6493 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6494 = stablehlo.multiply %6493, %arg342 : tensor<768x768xf32>
    %6495 = stablehlo.add %6492, %6494 : tensor<768x768xf32>
    %6496 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6497 = stablehlo.multiply %6496, %5490 : tensor<768xf32>
    %6498 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6499 = stablehlo.multiply %6498, %arg343 : tensor<768xf32>
    %6500 = stablehlo.add %6497, %6499 : tensor<768xf32>
    %6501 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6502 = stablehlo.multiply %6501, %5495 : tensor<768xf32>
    %6503 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6504 = stablehlo.multiply %6503, %arg344 : tensor<768xf32>
    %6505 = stablehlo.add %6502, %6504 : tensor<768xf32>
    %6506 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6507 = stablehlo.multiply %6506, %5500 : tensor<768xf32>
    %6508 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6509 = stablehlo.multiply %6508, %arg345 : tensor<768xf32>
    %6510 = stablehlo.add %6507, %6509 : tensor<768xf32>
    %6511 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6512 = stablehlo.multiply %6511, %5505 : tensor<3072x768xf32>
    %6513 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6514 = stablehlo.multiply %6513, %arg346 : tensor<3072x768xf32>
    %6515 = stablehlo.add %6512, %6514 : tensor<3072x768xf32>
    %6516 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6517 = stablehlo.multiply %6516, %5510 : tensor<3072xf32>
    %6518 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6519 = stablehlo.multiply %6518, %arg347 : tensor<3072xf32>
    %6520 = stablehlo.add %6517, %6519 : tensor<3072xf32>
    %6521 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6522 = stablehlo.multiply %6521, %5515 : tensor<768x3072xf32>
    %6523 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6524 = stablehlo.multiply %6523, %arg348 : tensor<768x3072xf32>
    %6525 = stablehlo.add %6522, %6524 : tensor<768x3072xf32>
    %6526 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6527 = stablehlo.multiply %6526, %5520 : tensor<768xf32>
    %6528 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6529 = stablehlo.multiply %6528, %arg349 : tensor<768xf32>
    %6530 = stablehlo.add %6527, %6529 : tensor<768xf32>
    %6531 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6532 = stablehlo.multiply %6531, %5525 : tensor<768xf32>
    %6533 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6534 = stablehlo.multiply %6533, %arg350 : tensor<768xf32>
    %6535 = stablehlo.add %6532, %6534 : tensor<768xf32>
    %6536 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6537 = stablehlo.multiply %6536, %5530 : tensor<768xf32>
    %6538 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6539 = stablehlo.multiply %6538, %arg351 : tensor<768xf32>
    %6540 = stablehlo.add %6537, %6539 : tensor<768xf32>
    %6541 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6542 = stablehlo.multiply %6541, %5535 : tensor<768x768xf32>
    %6543 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6544 = stablehlo.multiply %6543, %arg352 : tensor<768x768xf32>
    %6545 = stablehlo.add %6542, %6544 : tensor<768x768xf32>
    %6546 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6547 = stablehlo.multiply %6546, %5540 : tensor<768xf32>
    %6548 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6549 = stablehlo.multiply %6548, %arg353 : tensor<768xf32>
    %6550 = stablehlo.add %6547, %6549 : tensor<768xf32>
    %6551 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6552 = stablehlo.multiply %6551, %5545 : tensor<768x768xf32>
    %6553 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6554 = stablehlo.multiply %6553, %arg354 : tensor<768x768xf32>
    %6555 = stablehlo.add %6552, %6554 : tensor<768x768xf32>
    %6556 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6557 = stablehlo.multiply %6556, %5550 : tensor<768xf32>
    %6558 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6559 = stablehlo.multiply %6558, %arg355 : tensor<768xf32>
    %6560 = stablehlo.add %6557, %6559 : tensor<768xf32>
    %6561 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6562 = stablehlo.multiply %6561, %5555 : tensor<768x768xf32>
    %6563 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6564 = stablehlo.multiply %6563, %arg356 : tensor<768x768xf32>
    %6565 = stablehlo.add %6562, %6564 : tensor<768x768xf32>
    %6566 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6567 = stablehlo.multiply %6566, %5560 : tensor<768xf32>
    %6568 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6569 = stablehlo.multiply %6568, %arg357 : tensor<768xf32>
    %6570 = stablehlo.add %6567, %6569 : tensor<768xf32>
    %6571 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6572 = stablehlo.multiply %6571, %5565 : tensor<768x768xf32>
    %6573 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6574 = stablehlo.multiply %6573, %arg358 : tensor<768x768xf32>
    %6575 = stablehlo.add %6572, %6574 : tensor<768x768xf32>
    %6576 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6577 = stablehlo.multiply %6576, %5570 : tensor<768xf32>
    %6578 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6579 = stablehlo.multiply %6578, %arg359 : tensor<768xf32>
    %6580 = stablehlo.add %6577, %6579 : tensor<768xf32>
    %6581 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6582 = stablehlo.multiply %6581, %5575 : tensor<768xf32>
    %6583 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6584 = stablehlo.multiply %6583, %arg360 : tensor<768xf32>
    %6585 = stablehlo.add %6582, %6584 : tensor<768xf32>
    %6586 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6587 = stablehlo.multiply %6586, %5580 : tensor<768xf32>
    %6588 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6589 = stablehlo.multiply %6588, %arg361 : tensor<768xf32>
    %6590 = stablehlo.add %6587, %6589 : tensor<768xf32>
    %6591 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6592 = stablehlo.multiply %6591, %5585 : tensor<3072x768xf32>
    %6593 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6594 = stablehlo.multiply %6593, %arg362 : tensor<3072x768xf32>
    %6595 = stablehlo.add %6592, %6594 : tensor<3072x768xf32>
    %6596 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6597 = stablehlo.multiply %6596, %5590 : tensor<3072xf32>
    %6598 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6599 = stablehlo.multiply %6598, %arg363 : tensor<3072xf32>
    %6600 = stablehlo.add %6597, %6599 : tensor<3072xf32>
    %6601 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6602 = stablehlo.multiply %6601, %5595 : tensor<768x3072xf32>
    %6603 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6604 = stablehlo.multiply %6603, %arg364 : tensor<768x3072xf32>
    %6605 = stablehlo.add %6602, %6604 : tensor<768x3072xf32>
    %6606 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6607 = stablehlo.multiply %6606, %5600 : tensor<768xf32>
    %6608 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6609 = stablehlo.multiply %6608, %arg365 : tensor<768xf32>
    %6610 = stablehlo.add %6607, %6609 : tensor<768xf32>
    %6611 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6612 = stablehlo.multiply %6611, %5605 : tensor<768xf32>
    %6613 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6614 = stablehlo.multiply %6613, %arg366 : tensor<768xf32>
    %6615 = stablehlo.add %6612, %6614 : tensor<768xf32>
    %6616 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6617 = stablehlo.multiply %6616, %5610 : tensor<768xf32>
    %6618 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6619 = stablehlo.multiply %6618, %arg367 : tensor<768xf32>
    %6620 = stablehlo.add %6617, %6619 : tensor<768xf32>
    %6621 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6622 = stablehlo.multiply %6621, %5615 : tensor<768x768xf32>
    %6623 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6624 = stablehlo.multiply %6623, %arg368 : tensor<768x768xf32>
    %6625 = stablehlo.add %6622, %6624 : tensor<768x768xf32>
    %6626 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6627 = stablehlo.multiply %6626, %5620 : tensor<768xf32>
    %6628 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6629 = stablehlo.multiply %6628, %arg369 : tensor<768xf32>
    %6630 = stablehlo.add %6627, %6629 : tensor<768xf32>
    %6631 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6632 = stablehlo.multiply %6631, %5625 : tensor<768x768xf32>
    %6633 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6634 = stablehlo.multiply %6633, %arg370 : tensor<768x768xf32>
    %6635 = stablehlo.add %6632, %6634 : tensor<768x768xf32>
    %6636 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6637 = stablehlo.multiply %6636, %5630 : tensor<768xf32>
    %6638 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6639 = stablehlo.multiply %6638, %arg371 : tensor<768xf32>
    %6640 = stablehlo.add %6637, %6639 : tensor<768xf32>
    %6641 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6642 = stablehlo.multiply %6641, %5635 : tensor<768x768xf32>
    %6643 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6644 = stablehlo.multiply %6643, %arg372 : tensor<768x768xf32>
    %6645 = stablehlo.add %6642, %6644 : tensor<768x768xf32>
    %6646 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6647 = stablehlo.multiply %6646, %5640 : tensor<768xf32>
    %6648 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6649 = stablehlo.multiply %6648, %arg373 : tensor<768xf32>
    %6650 = stablehlo.add %6647, %6649 : tensor<768xf32>
    %6651 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6652 = stablehlo.multiply %6651, %5645 : tensor<768x768xf32>
    %6653 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6654 = stablehlo.multiply %6653, %arg374 : tensor<768x768xf32>
    %6655 = stablehlo.add %6652, %6654 : tensor<768x768xf32>
    %6656 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6657 = stablehlo.multiply %6656, %5650 : tensor<768xf32>
    %6658 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6659 = stablehlo.multiply %6658, %arg375 : tensor<768xf32>
    %6660 = stablehlo.add %6657, %6659 : tensor<768xf32>
    %6661 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6662 = stablehlo.multiply %6661, %5655 : tensor<768xf32>
    %6663 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6664 = stablehlo.multiply %6663, %arg376 : tensor<768xf32>
    %6665 = stablehlo.add %6662, %6664 : tensor<768xf32>
    %6666 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6667 = stablehlo.multiply %6666, %5660 : tensor<768xf32>
    %6668 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6669 = stablehlo.multiply %6668, %arg377 : tensor<768xf32>
    %6670 = stablehlo.add %6667, %6669 : tensor<768xf32>
    %6671 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6672 = stablehlo.multiply %6671, %5665 : tensor<3072x768xf32>
    %6673 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6674 = stablehlo.multiply %6673, %arg378 : tensor<3072x768xf32>
    %6675 = stablehlo.add %6672, %6674 : tensor<3072x768xf32>
    %6676 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6677 = stablehlo.multiply %6676, %5670 : tensor<3072xf32>
    %6678 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6679 = stablehlo.multiply %6678, %arg379 : tensor<3072xf32>
    %6680 = stablehlo.add %6677, %6679 : tensor<3072xf32>
    %6681 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6682 = stablehlo.multiply %6681, %5675 : tensor<768x3072xf32>
    %6683 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6684 = stablehlo.multiply %6683, %arg380 : tensor<768x3072xf32>
    %6685 = stablehlo.add %6682, %6684 : tensor<768x3072xf32>
    %6686 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6687 = stablehlo.multiply %6686, %5680 : tensor<768xf32>
    %6688 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6689 = stablehlo.multiply %6688, %arg381 : tensor<768xf32>
    %6690 = stablehlo.add %6687, %6689 : tensor<768xf32>
    %6691 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6692 = stablehlo.multiply %6691, %5685 : tensor<768xf32>
    %6693 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6694 = stablehlo.multiply %6693, %arg382 : tensor<768xf32>
    %6695 = stablehlo.add %6692, %6694 : tensor<768xf32>
    %6696 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6697 = stablehlo.multiply %6696, %5690 : tensor<768xf32>
    %6698 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6699 = stablehlo.multiply %6698, %arg383 : tensor<768xf32>
    %6700 = stablehlo.add %6697, %6699 : tensor<768xf32>
    %6701 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6702 = stablehlo.multiply %6701, %5695 : tensor<768x768xf32>
    %6703 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6704 = stablehlo.multiply %6703, %arg384 : tensor<768x768xf32>
    %6705 = stablehlo.add %6702, %6704 : tensor<768x768xf32>
    %6706 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6707 = stablehlo.multiply %6706, %5700 : tensor<768xf32>
    %6708 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6709 = stablehlo.multiply %6708, %arg385 : tensor<768xf32>
    %6710 = stablehlo.add %6707, %6709 : tensor<768xf32>
    %6711 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6712 = stablehlo.multiply %6711, %5705 : tensor<768x768xf32>
    %6713 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6714 = stablehlo.multiply %6713, %arg386 : tensor<768x768xf32>
    %6715 = stablehlo.add %6712, %6714 : tensor<768x768xf32>
    %6716 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6717 = stablehlo.multiply %6716, %5710 : tensor<768xf32>
    %6718 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6719 = stablehlo.multiply %6718, %arg387 : tensor<768xf32>
    %6720 = stablehlo.add %6717, %6719 : tensor<768xf32>
    %6721 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6722 = stablehlo.multiply %6721, %5715 : tensor<768x768xf32>
    %6723 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6724 = stablehlo.multiply %6723, %arg388 : tensor<768x768xf32>
    %6725 = stablehlo.add %6722, %6724 : tensor<768x768xf32>
    %6726 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6727 = stablehlo.multiply %6726, %5720 : tensor<768xf32>
    %6728 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6729 = stablehlo.multiply %6728, %arg389 : tensor<768xf32>
    %6730 = stablehlo.add %6727, %6729 : tensor<768xf32>
    %6731 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6732 = stablehlo.multiply %6731, %5725 : tensor<768x768xf32>
    %6733 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6734 = stablehlo.multiply %6733, %arg390 : tensor<768x768xf32>
    %6735 = stablehlo.add %6732, %6734 : tensor<768x768xf32>
    %6736 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6737 = stablehlo.multiply %6736, %5730 : tensor<768xf32>
    %6738 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6739 = stablehlo.multiply %6738, %arg391 : tensor<768xf32>
    %6740 = stablehlo.add %6737, %6739 : tensor<768xf32>
    %6741 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6742 = stablehlo.multiply %6741, %5735 : tensor<768xf32>
    %6743 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6744 = stablehlo.multiply %6743, %arg392 : tensor<768xf32>
    %6745 = stablehlo.add %6742, %6744 : tensor<768xf32>
    %6746 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6747 = stablehlo.multiply %6746, %5740 : tensor<768xf32>
    %6748 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6749 = stablehlo.multiply %6748, %arg393 : tensor<768xf32>
    %6750 = stablehlo.add %6747, %6749 : tensor<768xf32>
    %6751 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6752 = stablehlo.multiply %6751, %5745 : tensor<3072x768xf32>
    %6753 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6754 = stablehlo.multiply %6753, %arg394 : tensor<3072x768xf32>
    %6755 = stablehlo.add %6752, %6754 : tensor<3072x768xf32>
    %6756 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6757 = stablehlo.multiply %6756, %5750 : tensor<3072xf32>
    %6758 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6759 = stablehlo.multiply %6758, %arg395 : tensor<3072xf32>
    %6760 = stablehlo.add %6757, %6759 : tensor<3072xf32>
    %6761 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6762 = stablehlo.multiply %6761, %5755 : tensor<768x3072xf32>
    %6763 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6764 = stablehlo.multiply %6763, %arg396 : tensor<768x3072xf32>
    %6765 = stablehlo.add %6762, %6764 : tensor<768x3072xf32>
    %6766 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6767 = stablehlo.multiply %6766, %5760 : tensor<768xf32>
    %6768 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6769 = stablehlo.multiply %6768, %arg397 : tensor<768xf32>
    %6770 = stablehlo.add %6767, %6769 : tensor<768xf32>
    %6771 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6772 = stablehlo.multiply %6771, %5765 : tensor<768xf32>
    %6773 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6774 = stablehlo.multiply %6773, %arg398 : tensor<768xf32>
    %6775 = stablehlo.add %6772, %6774 : tensor<768xf32>
    %6776 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6777 = stablehlo.multiply %6776, %5770 : tensor<768xf32>
    %6778 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6779 = stablehlo.multiply %6778, %arg399 : tensor<768xf32>
    %6780 = stablehlo.add %6777, %6779 : tensor<768xf32>
    %6781 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6782 = stablehlo.multiply %6781, %5775 : tensor<768x768xf32>
    %6783 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6784 = stablehlo.multiply %6783, %arg400 : tensor<768x768xf32>
    %6785 = stablehlo.add %6782, %6784 : tensor<768x768xf32>
    %6786 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6787 = stablehlo.multiply %6786, %5780 : tensor<768xf32>
    %6788 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6789 = stablehlo.multiply %6788, %arg401 : tensor<768xf32>
    %6790 = stablehlo.add %6787, %6789 : tensor<768xf32>
    %6791 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6792 = stablehlo.multiply %6791, %5785 : tensor<768xf32>
    %6793 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6794 = stablehlo.multiply %6793, %arg402 : tensor<768xf32>
    %6795 = stablehlo.add %6792, %6794 : tensor<768xf32>
    %6796 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6797 = stablehlo.multiply %6796, %5790 : tensor<768xf32>
    %6798 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6799 = stablehlo.multiply %6798, %arg403 : tensor<768xf32>
    %6800 = stablehlo.add %6797, %6799 : tensor<768xf32>
    %6801 = stablehlo.broadcast_in_dim %cst_647, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6802 = stablehlo.multiply %6801, %5795 : tensor<30522xf32>
    %6803 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6804 = stablehlo.multiply %6803, %arg404 : tensor<30522xf32>
    %6805 = stablehlo.add %6802, %6804 : tensor<30522xf32>
    %6806 = stablehlo.multiply %4790, %4790 : tensor<30522x768xf32>
    %cst_648 = stablehlo.constant dense<1.000000e-03> : tensor<f32>
    %6807 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6808 = stablehlo.multiply %6807, %6806 : tensor<30522x768xf32>
    %cst_649 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %6809 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6810 = stablehlo.multiply %6809, %arg405 : tensor<30522x768xf32>
    %6811 = stablehlo.add %6808, %6810 : tensor<30522x768xf32>
    %6812 = stablehlo.multiply %4795, %4795 : tensor<512x768xf32>
    %6813 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6814 = stablehlo.multiply %6813, %6812 : tensor<512x768xf32>
    %6815 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6816 = stablehlo.multiply %6815, %arg406 : tensor<512x768xf32>
    %6817 = stablehlo.add %6814, %6816 : tensor<512x768xf32>
    %6818 = stablehlo.multiply %4800, %4800 : tensor<2x768xf32>
    %6819 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6820 = stablehlo.multiply %6819, %6818 : tensor<2x768xf32>
    %6821 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6822 = stablehlo.multiply %6821, %arg407 : tensor<2x768xf32>
    %6823 = stablehlo.add %6820, %6822 : tensor<2x768xf32>
    %6824 = stablehlo.multiply %4805, %4805 : tensor<768xf32>
    %6825 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6826 = stablehlo.multiply %6825, %6824 : tensor<768xf32>
    %6827 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6828 = stablehlo.multiply %6827, %arg408 : tensor<768xf32>
    %6829 = stablehlo.add %6826, %6828 : tensor<768xf32>
    %6830 = stablehlo.multiply %4810, %4810 : tensor<768xf32>
    %6831 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6832 = stablehlo.multiply %6831, %6830 : tensor<768xf32>
    %6833 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6834 = stablehlo.multiply %6833, %arg409 : tensor<768xf32>
    %6835 = stablehlo.add %6832, %6834 : tensor<768xf32>
    %6836 = stablehlo.multiply %4815, %4815 : tensor<768x768xf32>
    %6837 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6838 = stablehlo.multiply %6837, %6836 : tensor<768x768xf32>
    %6839 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6840 = stablehlo.multiply %6839, %arg410 : tensor<768x768xf32>
    %6841 = stablehlo.add %6838, %6840 : tensor<768x768xf32>
    %6842 = stablehlo.multiply %4820, %4820 : tensor<768xf32>
    %6843 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6844 = stablehlo.multiply %6843, %6842 : tensor<768xf32>
    %6845 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6846 = stablehlo.multiply %6845, %arg411 : tensor<768xf32>
    %6847 = stablehlo.add %6844, %6846 : tensor<768xf32>
    %6848 = stablehlo.multiply %4825, %4825 : tensor<768x768xf32>
    %6849 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6850 = stablehlo.multiply %6849, %6848 : tensor<768x768xf32>
    %6851 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6852 = stablehlo.multiply %6851, %arg412 : tensor<768x768xf32>
    %6853 = stablehlo.add %6850, %6852 : tensor<768x768xf32>
    %6854 = stablehlo.multiply %4830, %4830 : tensor<768xf32>
    %6855 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6856 = stablehlo.multiply %6855, %6854 : tensor<768xf32>
    %6857 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6858 = stablehlo.multiply %6857, %arg413 : tensor<768xf32>
    %6859 = stablehlo.add %6856, %6858 : tensor<768xf32>
    %6860 = stablehlo.multiply %4835, %4835 : tensor<768x768xf32>
    %6861 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6862 = stablehlo.multiply %6861, %6860 : tensor<768x768xf32>
    %6863 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6864 = stablehlo.multiply %6863, %arg414 : tensor<768x768xf32>
    %6865 = stablehlo.add %6862, %6864 : tensor<768x768xf32>
    %6866 = stablehlo.multiply %4840, %4840 : tensor<768xf32>
    %6867 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6868 = stablehlo.multiply %6867, %6866 : tensor<768xf32>
    %6869 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6870 = stablehlo.multiply %6869, %arg415 : tensor<768xf32>
    %6871 = stablehlo.add %6868, %6870 : tensor<768xf32>
    %6872 = stablehlo.multiply %4845, %4845 : tensor<768x768xf32>
    %6873 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6874 = stablehlo.multiply %6873, %6872 : tensor<768x768xf32>
    %6875 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6876 = stablehlo.multiply %6875, %arg416 : tensor<768x768xf32>
    %6877 = stablehlo.add %6874, %6876 : tensor<768x768xf32>
    %6878 = stablehlo.multiply %4850, %4850 : tensor<768xf32>
    %6879 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6880 = stablehlo.multiply %6879, %6878 : tensor<768xf32>
    %6881 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6882 = stablehlo.multiply %6881, %arg417 : tensor<768xf32>
    %6883 = stablehlo.add %6880, %6882 : tensor<768xf32>
    %6884 = stablehlo.multiply %4855, %4855 : tensor<768xf32>
    %6885 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6886 = stablehlo.multiply %6885, %6884 : tensor<768xf32>
    %6887 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6888 = stablehlo.multiply %6887, %arg418 : tensor<768xf32>
    %6889 = stablehlo.add %6886, %6888 : tensor<768xf32>
    %6890 = stablehlo.multiply %4860, %4860 : tensor<768xf32>
    %6891 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6892 = stablehlo.multiply %6891, %6890 : tensor<768xf32>
    %6893 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6894 = stablehlo.multiply %6893, %arg419 : tensor<768xf32>
    %6895 = stablehlo.add %6892, %6894 : tensor<768xf32>
    %6896 = stablehlo.multiply %4865, %4865 : tensor<3072x768xf32>
    %6897 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6898 = stablehlo.multiply %6897, %6896 : tensor<3072x768xf32>
    %6899 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6900 = stablehlo.multiply %6899, %arg420 : tensor<3072x768xf32>
    %6901 = stablehlo.add %6898, %6900 : tensor<3072x768xf32>
    %6902 = stablehlo.multiply %4870, %4870 : tensor<3072xf32>
    %6903 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6904 = stablehlo.multiply %6903, %6902 : tensor<3072xf32>
    %6905 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6906 = stablehlo.multiply %6905, %arg421 : tensor<3072xf32>
    %6907 = stablehlo.add %6904, %6906 : tensor<3072xf32>
    %6908 = stablehlo.multiply %4875, %4875 : tensor<768x3072xf32>
    %6909 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6910 = stablehlo.multiply %6909, %6908 : tensor<768x3072xf32>
    %6911 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6912 = stablehlo.multiply %6911, %arg422 : tensor<768x3072xf32>
    %6913 = stablehlo.add %6910, %6912 : tensor<768x3072xf32>
    %6914 = stablehlo.multiply %4880, %4880 : tensor<768xf32>
    %6915 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6916 = stablehlo.multiply %6915, %6914 : tensor<768xf32>
    %6917 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6918 = stablehlo.multiply %6917, %arg423 : tensor<768xf32>
    %6919 = stablehlo.add %6916, %6918 : tensor<768xf32>
    %6920 = stablehlo.multiply %4885, %4885 : tensor<768xf32>
    %6921 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6922 = stablehlo.multiply %6921, %6920 : tensor<768xf32>
    %6923 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6924 = stablehlo.multiply %6923, %arg424 : tensor<768xf32>
    %6925 = stablehlo.add %6922, %6924 : tensor<768xf32>
    %6926 = stablehlo.multiply %4890, %4890 : tensor<768xf32>
    %6927 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6928 = stablehlo.multiply %6927, %6926 : tensor<768xf32>
    %6929 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6930 = stablehlo.multiply %6929, %arg425 : tensor<768xf32>
    %6931 = stablehlo.add %6928, %6930 : tensor<768xf32>
    %6932 = stablehlo.multiply %4895, %4895 : tensor<768x768xf32>
    %6933 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6934 = stablehlo.multiply %6933, %6932 : tensor<768x768xf32>
    %6935 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6936 = stablehlo.multiply %6935, %arg426 : tensor<768x768xf32>
    %6937 = stablehlo.add %6934, %6936 : tensor<768x768xf32>
    %6938 = stablehlo.multiply %4900, %4900 : tensor<768xf32>
    %6939 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6940 = stablehlo.multiply %6939, %6938 : tensor<768xf32>
    %6941 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6942 = stablehlo.multiply %6941, %arg427 : tensor<768xf32>
    %6943 = stablehlo.add %6940, %6942 : tensor<768xf32>
    %6944 = stablehlo.multiply %4905, %4905 : tensor<768x768xf32>
    %6945 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6946 = stablehlo.multiply %6945, %6944 : tensor<768x768xf32>
    %6947 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6948 = stablehlo.multiply %6947, %arg428 : tensor<768x768xf32>
    %6949 = stablehlo.add %6946, %6948 : tensor<768x768xf32>
    %6950 = stablehlo.multiply %4910, %4910 : tensor<768xf32>
    %6951 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6952 = stablehlo.multiply %6951, %6950 : tensor<768xf32>
    %6953 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6954 = stablehlo.multiply %6953, %arg429 : tensor<768xf32>
    %6955 = stablehlo.add %6952, %6954 : tensor<768xf32>
    %6956 = stablehlo.multiply %4915, %4915 : tensor<768x768xf32>
    %6957 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6958 = stablehlo.multiply %6957, %6956 : tensor<768x768xf32>
    %6959 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6960 = stablehlo.multiply %6959, %arg430 : tensor<768x768xf32>
    %6961 = stablehlo.add %6958, %6960 : tensor<768x768xf32>
    %6962 = stablehlo.multiply %4920, %4920 : tensor<768xf32>
    %6963 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6964 = stablehlo.multiply %6963, %6962 : tensor<768xf32>
    %6965 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6966 = stablehlo.multiply %6965, %arg431 : tensor<768xf32>
    %6967 = stablehlo.add %6964, %6966 : tensor<768xf32>
    %6968 = stablehlo.multiply %4925, %4925 : tensor<768x768xf32>
    %6969 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6970 = stablehlo.multiply %6969, %6968 : tensor<768x768xf32>
    %6971 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6972 = stablehlo.multiply %6971, %arg432 : tensor<768x768xf32>
    %6973 = stablehlo.add %6970, %6972 : tensor<768x768xf32>
    %6974 = stablehlo.multiply %4930, %4930 : tensor<768xf32>
    %6975 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6976 = stablehlo.multiply %6975, %6974 : tensor<768xf32>
    %6977 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6978 = stablehlo.multiply %6977, %arg433 : tensor<768xf32>
    %6979 = stablehlo.add %6976, %6978 : tensor<768xf32>
    %6980 = stablehlo.multiply %4935, %4935 : tensor<768xf32>
    %6981 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6982 = stablehlo.multiply %6981, %6980 : tensor<768xf32>
    %6983 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6984 = stablehlo.multiply %6983, %arg434 : tensor<768xf32>
    %6985 = stablehlo.add %6982, %6984 : tensor<768xf32>
    %6986 = stablehlo.multiply %4940, %4940 : tensor<768xf32>
    %6987 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6988 = stablehlo.multiply %6987, %6986 : tensor<768xf32>
    %6989 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6990 = stablehlo.multiply %6989, %arg435 : tensor<768xf32>
    %6991 = stablehlo.add %6988, %6990 : tensor<768xf32>
    %6992 = stablehlo.multiply %4945, %4945 : tensor<3072x768xf32>
    %6993 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6994 = stablehlo.multiply %6993, %6992 : tensor<3072x768xf32>
    %6995 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6996 = stablehlo.multiply %6995, %arg436 : tensor<3072x768xf32>
    %6997 = stablehlo.add %6994, %6996 : tensor<3072x768xf32>
    %6998 = stablehlo.multiply %4950, %4950 : tensor<3072xf32>
    %6999 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7000 = stablehlo.multiply %6999, %6998 : tensor<3072xf32>
    %7001 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7002 = stablehlo.multiply %7001, %arg437 : tensor<3072xf32>
    %7003 = stablehlo.add %7000, %7002 : tensor<3072xf32>
    %7004 = stablehlo.multiply %4955, %4955 : tensor<768x3072xf32>
    %7005 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7006 = stablehlo.multiply %7005, %7004 : tensor<768x3072xf32>
    %7007 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7008 = stablehlo.multiply %7007, %arg438 : tensor<768x3072xf32>
    %7009 = stablehlo.add %7006, %7008 : tensor<768x3072xf32>
    %7010 = stablehlo.multiply %4960, %4960 : tensor<768xf32>
    %7011 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7012 = stablehlo.multiply %7011, %7010 : tensor<768xf32>
    %7013 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7014 = stablehlo.multiply %7013, %arg439 : tensor<768xf32>
    %7015 = stablehlo.add %7012, %7014 : tensor<768xf32>
    %7016 = stablehlo.multiply %4965, %4965 : tensor<768xf32>
    %7017 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7018 = stablehlo.multiply %7017, %7016 : tensor<768xf32>
    %7019 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7020 = stablehlo.multiply %7019, %arg440 : tensor<768xf32>
    %7021 = stablehlo.add %7018, %7020 : tensor<768xf32>
    %7022 = stablehlo.multiply %4970, %4970 : tensor<768xf32>
    %7023 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7024 = stablehlo.multiply %7023, %7022 : tensor<768xf32>
    %7025 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7026 = stablehlo.multiply %7025, %arg441 : tensor<768xf32>
    %7027 = stablehlo.add %7024, %7026 : tensor<768xf32>
    %7028 = stablehlo.multiply %4975, %4975 : tensor<768x768xf32>
    %7029 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7030 = stablehlo.multiply %7029, %7028 : tensor<768x768xf32>
    %7031 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7032 = stablehlo.multiply %7031, %arg442 : tensor<768x768xf32>
    %7033 = stablehlo.add %7030, %7032 : tensor<768x768xf32>
    %7034 = stablehlo.multiply %4980, %4980 : tensor<768xf32>
    %7035 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7036 = stablehlo.multiply %7035, %7034 : tensor<768xf32>
    %7037 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7038 = stablehlo.multiply %7037, %arg443 : tensor<768xf32>
    %7039 = stablehlo.add %7036, %7038 : tensor<768xf32>
    %7040 = stablehlo.multiply %4985, %4985 : tensor<768x768xf32>
    %7041 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7042 = stablehlo.multiply %7041, %7040 : tensor<768x768xf32>
    %7043 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7044 = stablehlo.multiply %7043, %arg444 : tensor<768x768xf32>
    %7045 = stablehlo.add %7042, %7044 : tensor<768x768xf32>
    %7046 = stablehlo.multiply %4990, %4990 : tensor<768xf32>
    %7047 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7048 = stablehlo.multiply %7047, %7046 : tensor<768xf32>
    %7049 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7050 = stablehlo.multiply %7049, %arg445 : tensor<768xf32>
    %7051 = stablehlo.add %7048, %7050 : tensor<768xf32>
    %7052 = stablehlo.multiply %4995, %4995 : tensor<768x768xf32>
    %7053 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7054 = stablehlo.multiply %7053, %7052 : tensor<768x768xf32>
    %7055 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7056 = stablehlo.multiply %7055, %arg446 : tensor<768x768xf32>
    %7057 = stablehlo.add %7054, %7056 : tensor<768x768xf32>
    %7058 = stablehlo.multiply %5000, %5000 : tensor<768xf32>
    %7059 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7060 = stablehlo.multiply %7059, %7058 : tensor<768xf32>
    %7061 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7062 = stablehlo.multiply %7061, %arg447 : tensor<768xf32>
    %7063 = stablehlo.add %7060, %7062 : tensor<768xf32>
    %7064 = stablehlo.multiply %5005, %5005 : tensor<768x768xf32>
    %7065 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7066 = stablehlo.multiply %7065, %7064 : tensor<768x768xf32>
    %7067 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7068 = stablehlo.multiply %7067, %arg448 : tensor<768x768xf32>
    %7069 = stablehlo.add %7066, %7068 : tensor<768x768xf32>
    %7070 = stablehlo.multiply %5010, %5010 : tensor<768xf32>
    %7071 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7072 = stablehlo.multiply %7071, %7070 : tensor<768xf32>
    %7073 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7074 = stablehlo.multiply %7073, %arg449 : tensor<768xf32>
    %7075 = stablehlo.add %7072, %7074 : tensor<768xf32>
    %7076 = stablehlo.multiply %5015, %5015 : tensor<768xf32>
    %7077 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7078 = stablehlo.multiply %7077, %7076 : tensor<768xf32>
    %7079 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7080 = stablehlo.multiply %7079, %arg450 : tensor<768xf32>
    %7081 = stablehlo.add %7078, %7080 : tensor<768xf32>
    %7082 = stablehlo.multiply %5020, %5020 : tensor<768xf32>
    %7083 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7084 = stablehlo.multiply %7083, %7082 : tensor<768xf32>
    %7085 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7086 = stablehlo.multiply %7085, %arg451 : tensor<768xf32>
    %7087 = stablehlo.add %7084, %7086 : tensor<768xf32>
    %7088 = stablehlo.multiply %5025, %5025 : tensor<3072x768xf32>
    %7089 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7090 = stablehlo.multiply %7089, %7088 : tensor<3072x768xf32>
    %7091 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7092 = stablehlo.multiply %7091, %arg452 : tensor<3072x768xf32>
    %7093 = stablehlo.add %7090, %7092 : tensor<3072x768xf32>
    %7094 = stablehlo.multiply %5030, %5030 : tensor<3072xf32>
    %7095 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7096 = stablehlo.multiply %7095, %7094 : tensor<3072xf32>
    %7097 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7098 = stablehlo.multiply %7097, %arg453 : tensor<3072xf32>
    %7099 = stablehlo.add %7096, %7098 : tensor<3072xf32>
    %7100 = stablehlo.multiply %5035, %5035 : tensor<768x3072xf32>
    %7101 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7102 = stablehlo.multiply %7101, %7100 : tensor<768x3072xf32>
    %7103 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7104 = stablehlo.multiply %7103, %arg454 : tensor<768x3072xf32>
    %7105 = stablehlo.add %7102, %7104 : tensor<768x3072xf32>
    %7106 = stablehlo.multiply %5040, %5040 : tensor<768xf32>
    %7107 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7108 = stablehlo.multiply %7107, %7106 : tensor<768xf32>
    %7109 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7110 = stablehlo.multiply %7109, %arg455 : tensor<768xf32>
    %7111 = stablehlo.add %7108, %7110 : tensor<768xf32>
    %7112 = stablehlo.multiply %5045, %5045 : tensor<768xf32>
    %7113 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7114 = stablehlo.multiply %7113, %7112 : tensor<768xf32>
    %7115 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7116 = stablehlo.multiply %7115, %arg456 : tensor<768xf32>
    %7117 = stablehlo.add %7114, %7116 : tensor<768xf32>
    %7118 = stablehlo.multiply %5050, %5050 : tensor<768xf32>
    %7119 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7120 = stablehlo.multiply %7119, %7118 : tensor<768xf32>
    %7121 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7122 = stablehlo.multiply %7121, %arg457 : tensor<768xf32>
    %7123 = stablehlo.add %7120, %7122 : tensor<768xf32>
    %7124 = stablehlo.multiply %5055, %5055 : tensor<768x768xf32>
    %7125 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7126 = stablehlo.multiply %7125, %7124 : tensor<768x768xf32>
    %7127 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7128 = stablehlo.multiply %7127, %arg458 : tensor<768x768xf32>
    %7129 = stablehlo.add %7126, %7128 : tensor<768x768xf32>
    %7130 = stablehlo.multiply %5060, %5060 : tensor<768xf32>
    %7131 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7132 = stablehlo.multiply %7131, %7130 : tensor<768xf32>
    %7133 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7134 = stablehlo.multiply %7133, %arg459 : tensor<768xf32>
    %7135 = stablehlo.add %7132, %7134 : tensor<768xf32>
    %7136 = stablehlo.multiply %5065, %5065 : tensor<768x768xf32>
    %7137 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7138 = stablehlo.multiply %7137, %7136 : tensor<768x768xf32>
    %7139 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7140 = stablehlo.multiply %7139, %arg460 : tensor<768x768xf32>
    %7141 = stablehlo.add %7138, %7140 : tensor<768x768xf32>
    %7142 = stablehlo.multiply %5070, %5070 : tensor<768xf32>
    %7143 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7144 = stablehlo.multiply %7143, %7142 : tensor<768xf32>
    %7145 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7146 = stablehlo.multiply %7145, %arg461 : tensor<768xf32>
    %7147 = stablehlo.add %7144, %7146 : tensor<768xf32>
    %7148 = stablehlo.multiply %5075, %5075 : tensor<768x768xf32>
    %7149 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7150 = stablehlo.multiply %7149, %7148 : tensor<768x768xf32>
    %7151 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7152 = stablehlo.multiply %7151, %arg462 : tensor<768x768xf32>
    %7153 = stablehlo.add %7150, %7152 : tensor<768x768xf32>
    %7154 = stablehlo.multiply %5080, %5080 : tensor<768xf32>
    %7155 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7156 = stablehlo.multiply %7155, %7154 : tensor<768xf32>
    %7157 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7158 = stablehlo.multiply %7157, %arg463 : tensor<768xf32>
    %7159 = stablehlo.add %7156, %7158 : tensor<768xf32>
    %7160 = stablehlo.multiply %5085, %5085 : tensor<768x768xf32>
    %7161 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7162 = stablehlo.multiply %7161, %7160 : tensor<768x768xf32>
    %7163 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7164 = stablehlo.multiply %7163, %arg464 : tensor<768x768xf32>
    %7165 = stablehlo.add %7162, %7164 : tensor<768x768xf32>
    %7166 = stablehlo.multiply %5090, %5090 : tensor<768xf32>
    %7167 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7168 = stablehlo.multiply %7167, %7166 : tensor<768xf32>
    %7169 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7170 = stablehlo.multiply %7169, %arg465 : tensor<768xf32>
    %7171 = stablehlo.add %7168, %7170 : tensor<768xf32>
    %7172 = stablehlo.multiply %5095, %5095 : tensor<768xf32>
    %7173 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7174 = stablehlo.multiply %7173, %7172 : tensor<768xf32>
    %7175 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7176 = stablehlo.multiply %7175, %arg466 : tensor<768xf32>
    %7177 = stablehlo.add %7174, %7176 : tensor<768xf32>
    %7178 = stablehlo.multiply %5100, %5100 : tensor<768xf32>
    %7179 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7180 = stablehlo.multiply %7179, %7178 : tensor<768xf32>
    %7181 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7182 = stablehlo.multiply %7181, %arg467 : tensor<768xf32>
    %7183 = stablehlo.add %7180, %7182 : tensor<768xf32>
    %7184 = stablehlo.multiply %5105, %5105 : tensor<3072x768xf32>
    %7185 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7186 = stablehlo.multiply %7185, %7184 : tensor<3072x768xf32>
    %7187 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7188 = stablehlo.multiply %7187, %arg468 : tensor<3072x768xf32>
    %7189 = stablehlo.add %7186, %7188 : tensor<3072x768xf32>
    %7190 = stablehlo.multiply %5110, %5110 : tensor<3072xf32>
    %7191 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7192 = stablehlo.multiply %7191, %7190 : tensor<3072xf32>
    %7193 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7194 = stablehlo.multiply %7193, %arg469 : tensor<3072xf32>
    %7195 = stablehlo.add %7192, %7194 : tensor<3072xf32>
    %7196 = stablehlo.multiply %5115, %5115 : tensor<768x3072xf32>
    %7197 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7198 = stablehlo.multiply %7197, %7196 : tensor<768x3072xf32>
    %7199 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7200 = stablehlo.multiply %7199, %arg470 : tensor<768x3072xf32>
    %7201 = stablehlo.add %7198, %7200 : tensor<768x3072xf32>
    %7202 = stablehlo.multiply %5120, %5120 : tensor<768xf32>
    %7203 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7204 = stablehlo.multiply %7203, %7202 : tensor<768xf32>
    %7205 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7206 = stablehlo.multiply %7205, %arg471 : tensor<768xf32>
    %7207 = stablehlo.add %7204, %7206 : tensor<768xf32>
    %7208 = stablehlo.multiply %5125, %5125 : tensor<768xf32>
    %7209 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7210 = stablehlo.multiply %7209, %7208 : tensor<768xf32>
    %7211 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7212 = stablehlo.multiply %7211, %arg472 : tensor<768xf32>
    %7213 = stablehlo.add %7210, %7212 : tensor<768xf32>
    %7214 = stablehlo.multiply %5130, %5130 : tensor<768xf32>
    %7215 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7216 = stablehlo.multiply %7215, %7214 : tensor<768xf32>
    %7217 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7218 = stablehlo.multiply %7217, %arg473 : tensor<768xf32>
    %7219 = stablehlo.add %7216, %7218 : tensor<768xf32>
    %7220 = stablehlo.multiply %5135, %5135 : tensor<768x768xf32>
    %7221 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7222 = stablehlo.multiply %7221, %7220 : tensor<768x768xf32>
    %7223 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7224 = stablehlo.multiply %7223, %arg474 : tensor<768x768xf32>
    %7225 = stablehlo.add %7222, %7224 : tensor<768x768xf32>
    %7226 = stablehlo.multiply %5140, %5140 : tensor<768xf32>
    %7227 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7228 = stablehlo.multiply %7227, %7226 : tensor<768xf32>
    %7229 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7230 = stablehlo.multiply %7229, %arg475 : tensor<768xf32>
    %7231 = stablehlo.add %7228, %7230 : tensor<768xf32>
    %7232 = stablehlo.multiply %5145, %5145 : tensor<768x768xf32>
    %7233 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7234 = stablehlo.multiply %7233, %7232 : tensor<768x768xf32>
    %7235 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7236 = stablehlo.multiply %7235, %arg476 : tensor<768x768xf32>
    %7237 = stablehlo.add %7234, %7236 : tensor<768x768xf32>
    %7238 = stablehlo.multiply %5150, %5150 : tensor<768xf32>
    %7239 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7240 = stablehlo.multiply %7239, %7238 : tensor<768xf32>
    %7241 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7242 = stablehlo.multiply %7241, %arg477 : tensor<768xf32>
    %7243 = stablehlo.add %7240, %7242 : tensor<768xf32>
    %7244 = stablehlo.multiply %5155, %5155 : tensor<768x768xf32>
    %7245 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7246 = stablehlo.multiply %7245, %7244 : tensor<768x768xf32>
    %7247 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7248 = stablehlo.multiply %7247, %arg478 : tensor<768x768xf32>
    %7249 = stablehlo.add %7246, %7248 : tensor<768x768xf32>
    %7250 = stablehlo.multiply %5160, %5160 : tensor<768xf32>
    %7251 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7252 = stablehlo.multiply %7251, %7250 : tensor<768xf32>
    %7253 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7254 = stablehlo.multiply %7253, %arg479 : tensor<768xf32>
    %7255 = stablehlo.add %7252, %7254 : tensor<768xf32>
    %7256 = stablehlo.multiply %5165, %5165 : tensor<768x768xf32>
    %7257 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7258 = stablehlo.multiply %7257, %7256 : tensor<768x768xf32>
    %7259 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7260 = stablehlo.multiply %7259, %arg480 : tensor<768x768xf32>
    %7261 = stablehlo.add %7258, %7260 : tensor<768x768xf32>
    %7262 = stablehlo.multiply %5170, %5170 : tensor<768xf32>
    %7263 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7264 = stablehlo.multiply %7263, %7262 : tensor<768xf32>
    %7265 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7266 = stablehlo.multiply %7265, %arg481 : tensor<768xf32>
    %7267 = stablehlo.add %7264, %7266 : tensor<768xf32>
    %7268 = stablehlo.multiply %5175, %5175 : tensor<768xf32>
    %7269 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7270 = stablehlo.multiply %7269, %7268 : tensor<768xf32>
    %7271 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7272 = stablehlo.multiply %7271, %arg482 : tensor<768xf32>
    %7273 = stablehlo.add %7270, %7272 : tensor<768xf32>
    %7274 = stablehlo.multiply %5180, %5180 : tensor<768xf32>
    %7275 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7276 = stablehlo.multiply %7275, %7274 : tensor<768xf32>
    %7277 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7278 = stablehlo.multiply %7277, %arg483 : tensor<768xf32>
    %7279 = stablehlo.add %7276, %7278 : tensor<768xf32>
    %7280 = stablehlo.multiply %5185, %5185 : tensor<3072x768xf32>
    %7281 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7282 = stablehlo.multiply %7281, %7280 : tensor<3072x768xf32>
    %7283 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7284 = stablehlo.multiply %7283, %arg484 : tensor<3072x768xf32>
    %7285 = stablehlo.add %7282, %7284 : tensor<3072x768xf32>
    %7286 = stablehlo.multiply %5190, %5190 : tensor<3072xf32>
    %7287 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7288 = stablehlo.multiply %7287, %7286 : tensor<3072xf32>
    %7289 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7290 = stablehlo.multiply %7289, %arg485 : tensor<3072xf32>
    %7291 = stablehlo.add %7288, %7290 : tensor<3072xf32>
    %7292 = stablehlo.multiply %5195, %5195 : tensor<768x3072xf32>
    %7293 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7294 = stablehlo.multiply %7293, %7292 : tensor<768x3072xf32>
    %7295 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7296 = stablehlo.multiply %7295, %arg486 : tensor<768x3072xf32>
    %7297 = stablehlo.add %7294, %7296 : tensor<768x3072xf32>
    %7298 = stablehlo.multiply %5200, %5200 : tensor<768xf32>
    %7299 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7300 = stablehlo.multiply %7299, %7298 : tensor<768xf32>
    %7301 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7302 = stablehlo.multiply %7301, %arg487 : tensor<768xf32>
    %7303 = stablehlo.add %7300, %7302 : tensor<768xf32>
    %7304 = stablehlo.multiply %5205, %5205 : tensor<768xf32>
    %7305 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7306 = stablehlo.multiply %7305, %7304 : tensor<768xf32>
    %7307 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7308 = stablehlo.multiply %7307, %arg488 : tensor<768xf32>
    %7309 = stablehlo.add %7306, %7308 : tensor<768xf32>
    %7310 = stablehlo.multiply %5210, %5210 : tensor<768xf32>
    %7311 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7312 = stablehlo.multiply %7311, %7310 : tensor<768xf32>
    %7313 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7314 = stablehlo.multiply %7313, %arg489 : tensor<768xf32>
    %7315 = stablehlo.add %7312, %7314 : tensor<768xf32>
    %7316 = stablehlo.multiply %5215, %5215 : tensor<768x768xf32>
    %7317 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7318 = stablehlo.multiply %7317, %7316 : tensor<768x768xf32>
    %7319 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7320 = stablehlo.multiply %7319, %arg490 : tensor<768x768xf32>
    %7321 = stablehlo.add %7318, %7320 : tensor<768x768xf32>
    %7322 = stablehlo.multiply %5220, %5220 : tensor<768xf32>
    %7323 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7324 = stablehlo.multiply %7323, %7322 : tensor<768xf32>
    %7325 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7326 = stablehlo.multiply %7325, %arg491 : tensor<768xf32>
    %7327 = stablehlo.add %7324, %7326 : tensor<768xf32>
    %7328 = stablehlo.multiply %5225, %5225 : tensor<768x768xf32>
    %7329 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7330 = stablehlo.multiply %7329, %7328 : tensor<768x768xf32>
    %7331 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7332 = stablehlo.multiply %7331, %arg492 : tensor<768x768xf32>
    %7333 = stablehlo.add %7330, %7332 : tensor<768x768xf32>
    %7334 = stablehlo.multiply %5230, %5230 : tensor<768xf32>
    %7335 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7336 = stablehlo.multiply %7335, %7334 : tensor<768xf32>
    %7337 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7338 = stablehlo.multiply %7337, %arg493 : tensor<768xf32>
    %7339 = stablehlo.add %7336, %7338 : tensor<768xf32>
    %7340 = stablehlo.multiply %5235, %5235 : tensor<768x768xf32>
    %7341 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7342 = stablehlo.multiply %7341, %7340 : tensor<768x768xf32>
    %7343 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7344 = stablehlo.multiply %7343, %arg494 : tensor<768x768xf32>
    %7345 = stablehlo.add %7342, %7344 : tensor<768x768xf32>
    %7346 = stablehlo.multiply %5240, %5240 : tensor<768xf32>
    %7347 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7348 = stablehlo.multiply %7347, %7346 : tensor<768xf32>
    %7349 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7350 = stablehlo.multiply %7349, %arg495 : tensor<768xf32>
    %7351 = stablehlo.add %7348, %7350 : tensor<768xf32>
    %7352 = stablehlo.multiply %5245, %5245 : tensor<768x768xf32>
    %7353 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7354 = stablehlo.multiply %7353, %7352 : tensor<768x768xf32>
    %7355 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7356 = stablehlo.multiply %7355, %arg496 : tensor<768x768xf32>
    %7357 = stablehlo.add %7354, %7356 : tensor<768x768xf32>
    %7358 = stablehlo.multiply %5250, %5250 : tensor<768xf32>
    %7359 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7360 = stablehlo.multiply %7359, %7358 : tensor<768xf32>
    %7361 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7362 = stablehlo.multiply %7361, %arg497 : tensor<768xf32>
    %7363 = stablehlo.add %7360, %7362 : tensor<768xf32>
    %7364 = stablehlo.multiply %5255, %5255 : tensor<768xf32>
    %7365 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7366 = stablehlo.multiply %7365, %7364 : tensor<768xf32>
    %7367 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7368 = stablehlo.multiply %7367, %arg498 : tensor<768xf32>
    %7369 = stablehlo.add %7366, %7368 : tensor<768xf32>
    %7370 = stablehlo.multiply %5260, %5260 : tensor<768xf32>
    %7371 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7372 = stablehlo.multiply %7371, %7370 : tensor<768xf32>
    %7373 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7374 = stablehlo.multiply %7373, %arg499 : tensor<768xf32>
    %7375 = stablehlo.add %7372, %7374 : tensor<768xf32>
    %7376 = stablehlo.multiply %5265, %5265 : tensor<3072x768xf32>
    %7377 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7378 = stablehlo.multiply %7377, %7376 : tensor<3072x768xf32>
    %7379 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7380 = stablehlo.multiply %7379, %arg500 : tensor<3072x768xf32>
    %7381 = stablehlo.add %7378, %7380 : tensor<3072x768xf32>
    %7382 = stablehlo.multiply %5270, %5270 : tensor<3072xf32>
    %7383 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7384 = stablehlo.multiply %7383, %7382 : tensor<3072xf32>
    %7385 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7386 = stablehlo.multiply %7385, %arg501 : tensor<3072xf32>
    %7387 = stablehlo.add %7384, %7386 : tensor<3072xf32>
    %7388 = stablehlo.multiply %5275, %5275 : tensor<768x3072xf32>
    %7389 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7390 = stablehlo.multiply %7389, %7388 : tensor<768x3072xf32>
    %7391 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7392 = stablehlo.multiply %7391, %arg502 : tensor<768x3072xf32>
    %7393 = stablehlo.add %7390, %7392 : tensor<768x3072xf32>
    %7394 = stablehlo.multiply %5280, %5280 : tensor<768xf32>
    %7395 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7396 = stablehlo.multiply %7395, %7394 : tensor<768xf32>
    %7397 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7398 = stablehlo.multiply %7397, %arg503 : tensor<768xf32>
    %7399 = stablehlo.add %7396, %7398 : tensor<768xf32>
    %7400 = stablehlo.multiply %5285, %5285 : tensor<768xf32>
    %7401 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7402 = stablehlo.multiply %7401, %7400 : tensor<768xf32>
    %7403 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7404 = stablehlo.multiply %7403, %arg504 : tensor<768xf32>
    %7405 = stablehlo.add %7402, %7404 : tensor<768xf32>
    %7406 = stablehlo.multiply %5290, %5290 : tensor<768xf32>
    %7407 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7408 = stablehlo.multiply %7407, %7406 : tensor<768xf32>
    %7409 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7410 = stablehlo.multiply %7409, %arg505 : tensor<768xf32>
    %7411 = stablehlo.add %7408, %7410 : tensor<768xf32>
    %7412 = stablehlo.multiply %5295, %5295 : tensor<768x768xf32>
    %7413 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7414 = stablehlo.multiply %7413, %7412 : tensor<768x768xf32>
    %7415 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7416 = stablehlo.multiply %7415, %arg506 : tensor<768x768xf32>
    %7417 = stablehlo.add %7414, %7416 : tensor<768x768xf32>
    %7418 = stablehlo.multiply %5300, %5300 : tensor<768xf32>
    %7419 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7420 = stablehlo.multiply %7419, %7418 : tensor<768xf32>
    %7421 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7422 = stablehlo.multiply %7421, %arg507 : tensor<768xf32>
    %7423 = stablehlo.add %7420, %7422 : tensor<768xf32>
    %7424 = stablehlo.multiply %5305, %5305 : tensor<768x768xf32>
    %7425 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7426 = stablehlo.multiply %7425, %7424 : tensor<768x768xf32>
    %7427 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7428 = stablehlo.multiply %7427, %arg508 : tensor<768x768xf32>
    %7429 = stablehlo.add %7426, %7428 : tensor<768x768xf32>
    %7430 = stablehlo.multiply %5310, %5310 : tensor<768xf32>
    %7431 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7432 = stablehlo.multiply %7431, %7430 : tensor<768xf32>
    %7433 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7434 = stablehlo.multiply %7433, %arg509 : tensor<768xf32>
    %7435 = stablehlo.add %7432, %7434 : tensor<768xf32>
    %7436 = stablehlo.multiply %5315, %5315 : tensor<768x768xf32>
    %7437 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7438 = stablehlo.multiply %7437, %7436 : tensor<768x768xf32>
    %7439 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7440 = stablehlo.multiply %7439, %arg510 : tensor<768x768xf32>
    %7441 = stablehlo.add %7438, %7440 : tensor<768x768xf32>
    %7442 = stablehlo.multiply %5320, %5320 : tensor<768xf32>
    %7443 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7444 = stablehlo.multiply %7443, %7442 : tensor<768xf32>
    %7445 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7446 = stablehlo.multiply %7445, %arg511 : tensor<768xf32>
    %7447 = stablehlo.add %7444, %7446 : tensor<768xf32>
    %7448 = stablehlo.multiply %5325, %5325 : tensor<768x768xf32>
    %7449 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7450 = stablehlo.multiply %7449, %7448 : tensor<768x768xf32>
    %7451 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7452 = stablehlo.multiply %7451, %arg512 : tensor<768x768xf32>
    %7453 = stablehlo.add %7450, %7452 : tensor<768x768xf32>
    %7454 = stablehlo.multiply %5330, %5330 : tensor<768xf32>
    %7455 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7456 = stablehlo.multiply %7455, %7454 : tensor<768xf32>
    %7457 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7458 = stablehlo.multiply %7457, %arg513 : tensor<768xf32>
    %7459 = stablehlo.add %7456, %7458 : tensor<768xf32>
    %7460 = stablehlo.multiply %5335, %5335 : tensor<768xf32>
    %7461 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7462 = stablehlo.multiply %7461, %7460 : tensor<768xf32>
    %7463 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7464 = stablehlo.multiply %7463, %arg514 : tensor<768xf32>
    %7465 = stablehlo.add %7462, %7464 : tensor<768xf32>
    %7466 = stablehlo.multiply %5340, %5340 : tensor<768xf32>
    %7467 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7468 = stablehlo.multiply %7467, %7466 : tensor<768xf32>
    %7469 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7470 = stablehlo.multiply %7469, %arg515 : tensor<768xf32>
    %7471 = stablehlo.add %7468, %7470 : tensor<768xf32>
    %7472 = stablehlo.multiply %5345, %5345 : tensor<3072x768xf32>
    %7473 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7474 = stablehlo.multiply %7473, %7472 : tensor<3072x768xf32>
    %7475 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7476 = stablehlo.multiply %7475, %arg516 : tensor<3072x768xf32>
    %7477 = stablehlo.add %7474, %7476 : tensor<3072x768xf32>
    %7478 = stablehlo.multiply %5350, %5350 : tensor<3072xf32>
    %7479 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7480 = stablehlo.multiply %7479, %7478 : tensor<3072xf32>
    %7481 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7482 = stablehlo.multiply %7481, %arg517 : tensor<3072xf32>
    %7483 = stablehlo.add %7480, %7482 : tensor<3072xf32>
    %7484 = stablehlo.multiply %5355, %5355 : tensor<768x3072xf32>
    %7485 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7486 = stablehlo.multiply %7485, %7484 : tensor<768x3072xf32>
    %7487 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7488 = stablehlo.multiply %7487, %arg518 : tensor<768x3072xf32>
    %7489 = stablehlo.add %7486, %7488 : tensor<768x3072xf32>
    %7490 = stablehlo.multiply %5360, %5360 : tensor<768xf32>
    %7491 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7492 = stablehlo.multiply %7491, %7490 : tensor<768xf32>
    %7493 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7494 = stablehlo.multiply %7493, %arg519 : tensor<768xf32>
    %7495 = stablehlo.add %7492, %7494 : tensor<768xf32>
    %7496 = stablehlo.multiply %5365, %5365 : tensor<768xf32>
    %7497 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7498 = stablehlo.multiply %7497, %7496 : tensor<768xf32>
    %7499 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7500 = stablehlo.multiply %7499, %arg520 : tensor<768xf32>
    %7501 = stablehlo.add %7498, %7500 : tensor<768xf32>
    %7502 = stablehlo.multiply %5370, %5370 : tensor<768xf32>
    %7503 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7504 = stablehlo.multiply %7503, %7502 : tensor<768xf32>
    %7505 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7506 = stablehlo.multiply %7505, %arg521 : tensor<768xf32>
    %7507 = stablehlo.add %7504, %7506 : tensor<768xf32>
    %7508 = stablehlo.multiply %5375, %5375 : tensor<768x768xf32>
    %7509 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7510 = stablehlo.multiply %7509, %7508 : tensor<768x768xf32>
    %7511 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7512 = stablehlo.multiply %7511, %arg522 : tensor<768x768xf32>
    %7513 = stablehlo.add %7510, %7512 : tensor<768x768xf32>
    %7514 = stablehlo.multiply %5380, %5380 : tensor<768xf32>
    %7515 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7516 = stablehlo.multiply %7515, %7514 : tensor<768xf32>
    %7517 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7518 = stablehlo.multiply %7517, %arg523 : tensor<768xf32>
    %7519 = stablehlo.add %7516, %7518 : tensor<768xf32>
    %7520 = stablehlo.multiply %5385, %5385 : tensor<768x768xf32>
    %7521 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7522 = stablehlo.multiply %7521, %7520 : tensor<768x768xf32>
    %7523 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7524 = stablehlo.multiply %7523, %arg524 : tensor<768x768xf32>
    %7525 = stablehlo.add %7522, %7524 : tensor<768x768xf32>
    %7526 = stablehlo.multiply %5390, %5390 : tensor<768xf32>
    %7527 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7528 = stablehlo.multiply %7527, %7526 : tensor<768xf32>
    %7529 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7530 = stablehlo.multiply %7529, %arg525 : tensor<768xf32>
    %7531 = stablehlo.add %7528, %7530 : tensor<768xf32>
    %7532 = stablehlo.multiply %5395, %5395 : tensor<768x768xf32>
    %7533 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7534 = stablehlo.multiply %7533, %7532 : tensor<768x768xf32>
    %7535 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7536 = stablehlo.multiply %7535, %arg526 : tensor<768x768xf32>
    %7537 = stablehlo.add %7534, %7536 : tensor<768x768xf32>
    %7538 = stablehlo.multiply %5400, %5400 : tensor<768xf32>
    %7539 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7540 = stablehlo.multiply %7539, %7538 : tensor<768xf32>
    %7541 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7542 = stablehlo.multiply %7541, %arg527 : tensor<768xf32>
    %7543 = stablehlo.add %7540, %7542 : tensor<768xf32>
    %7544 = stablehlo.multiply %5405, %5405 : tensor<768x768xf32>
    %7545 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7546 = stablehlo.multiply %7545, %7544 : tensor<768x768xf32>
    %7547 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7548 = stablehlo.multiply %7547, %arg528 : tensor<768x768xf32>
    %7549 = stablehlo.add %7546, %7548 : tensor<768x768xf32>
    %7550 = stablehlo.multiply %5410, %5410 : tensor<768xf32>
    %7551 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7552 = stablehlo.multiply %7551, %7550 : tensor<768xf32>
    %7553 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7554 = stablehlo.multiply %7553, %arg529 : tensor<768xf32>
    %7555 = stablehlo.add %7552, %7554 : tensor<768xf32>
    %7556 = stablehlo.multiply %5415, %5415 : tensor<768xf32>
    %7557 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7558 = stablehlo.multiply %7557, %7556 : tensor<768xf32>
    %7559 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7560 = stablehlo.multiply %7559, %arg530 : tensor<768xf32>
    %7561 = stablehlo.add %7558, %7560 : tensor<768xf32>
    %7562 = stablehlo.multiply %5420, %5420 : tensor<768xf32>
    %7563 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7564 = stablehlo.multiply %7563, %7562 : tensor<768xf32>
    %7565 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7566 = stablehlo.multiply %7565, %arg531 : tensor<768xf32>
    %7567 = stablehlo.add %7564, %7566 : tensor<768xf32>
    %7568 = stablehlo.multiply %5425, %5425 : tensor<3072x768xf32>
    %7569 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7570 = stablehlo.multiply %7569, %7568 : tensor<3072x768xf32>
    %7571 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7572 = stablehlo.multiply %7571, %arg532 : tensor<3072x768xf32>
    %7573 = stablehlo.add %7570, %7572 : tensor<3072x768xf32>
    %7574 = stablehlo.multiply %5430, %5430 : tensor<3072xf32>
    %7575 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7576 = stablehlo.multiply %7575, %7574 : tensor<3072xf32>
    %7577 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7578 = stablehlo.multiply %7577, %arg533 : tensor<3072xf32>
    %7579 = stablehlo.add %7576, %7578 : tensor<3072xf32>
    %7580 = stablehlo.multiply %5435, %5435 : tensor<768x3072xf32>
    %7581 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7582 = stablehlo.multiply %7581, %7580 : tensor<768x3072xf32>
    %7583 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7584 = stablehlo.multiply %7583, %arg534 : tensor<768x3072xf32>
    %7585 = stablehlo.add %7582, %7584 : tensor<768x3072xf32>
    %7586 = stablehlo.multiply %5440, %5440 : tensor<768xf32>
    %7587 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7588 = stablehlo.multiply %7587, %7586 : tensor<768xf32>
    %7589 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7590 = stablehlo.multiply %7589, %arg535 : tensor<768xf32>
    %7591 = stablehlo.add %7588, %7590 : tensor<768xf32>
    %7592 = stablehlo.multiply %5445, %5445 : tensor<768xf32>
    %7593 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7594 = stablehlo.multiply %7593, %7592 : tensor<768xf32>
    %7595 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7596 = stablehlo.multiply %7595, %arg536 : tensor<768xf32>
    %7597 = stablehlo.add %7594, %7596 : tensor<768xf32>
    %7598 = stablehlo.multiply %5450, %5450 : tensor<768xf32>
    %7599 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7600 = stablehlo.multiply %7599, %7598 : tensor<768xf32>
    %7601 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7602 = stablehlo.multiply %7601, %arg537 : tensor<768xf32>
    %7603 = stablehlo.add %7600, %7602 : tensor<768xf32>
    %7604 = stablehlo.multiply %5455, %5455 : tensor<768x768xf32>
    %7605 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7606 = stablehlo.multiply %7605, %7604 : tensor<768x768xf32>
    %7607 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7608 = stablehlo.multiply %7607, %arg538 : tensor<768x768xf32>
    %7609 = stablehlo.add %7606, %7608 : tensor<768x768xf32>
    %7610 = stablehlo.multiply %5460, %5460 : tensor<768xf32>
    %7611 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7612 = stablehlo.multiply %7611, %7610 : tensor<768xf32>
    %7613 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7614 = stablehlo.multiply %7613, %arg539 : tensor<768xf32>
    %7615 = stablehlo.add %7612, %7614 : tensor<768xf32>
    %7616 = stablehlo.multiply %5465, %5465 : tensor<768x768xf32>
    %7617 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7618 = stablehlo.multiply %7617, %7616 : tensor<768x768xf32>
    %7619 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7620 = stablehlo.multiply %7619, %arg540 : tensor<768x768xf32>
    %7621 = stablehlo.add %7618, %7620 : tensor<768x768xf32>
    %7622 = stablehlo.multiply %5470, %5470 : tensor<768xf32>
    %7623 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7624 = stablehlo.multiply %7623, %7622 : tensor<768xf32>
    %7625 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7626 = stablehlo.multiply %7625, %arg541 : tensor<768xf32>
    %7627 = stablehlo.add %7624, %7626 : tensor<768xf32>
    %7628 = stablehlo.multiply %5475, %5475 : tensor<768x768xf32>
    %7629 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7630 = stablehlo.multiply %7629, %7628 : tensor<768x768xf32>
    %7631 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7632 = stablehlo.multiply %7631, %arg542 : tensor<768x768xf32>
    %7633 = stablehlo.add %7630, %7632 : tensor<768x768xf32>
    %7634 = stablehlo.multiply %5480, %5480 : tensor<768xf32>
    %7635 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7636 = stablehlo.multiply %7635, %7634 : tensor<768xf32>
    %7637 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7638 = stablehlo.multiply %7637, %arg543 : tensor<768xf32>
    %7639 = stablehlo.add %7636, %7638 : tensor<768xf32>
    %7640 = stablehlo.multiply %5485, %5485 : tensor<768x768xf32>
    %7641 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7642 = stablehlo.multiply %7641, %7640 : tensor<768x768xf32>
    %7643 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7644 = stablehlo.multiply %7643, %arg544 : tensor<768x768xf32>
    %7645 = stablehlo.add %7642, %7644 : tensor<768x768xf32>
    %7646 = stablehlo.multiply %5490, %5490 : tensor<768xf32>
    %7647 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7648 = stablehlo.multiply %7647, %7646 : tensor<768xf32>
    %7649 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7650 = stablehlo.multiply %7649, %arg545 : tensor<768xf32>
    %7651 = stablehlo.add %7648, %7650 : tensor<768xf32>
    %7652 = stablehlo.multiply %5495, %5495 : tensor<768xf32>
    %7653 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7654 = stablehlo.multiply %7653, %7652 : tensor<768xf32>
    %7655 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7656 = stablehlo.multiply %7655, %arg546 : tensor<768xf32>
    %7657 = stablehlo.add %7654, %7656 : tensor<768xf32>
    %7658 = stablehlo.multiply %5500, %5500 : tensor<768xf32>
    %7659 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7660 = stablehlo.multiply %7659, %7658 : tensor<768xf32>
    %7661 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7662 = stablehlo.multiply %7661, %arg547 : tensor<768xf32>
    %7663 = stablehlo.add %7660, %7662 : tensor<768xf32>
    %7664 = stablehlo.multiply %5505, %5505 : tensor<3072x768xf32>
    %7665 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7666 = stablehlo.multiply %7665, %7664 : tensor<3072x768xf32>
    %7667 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7668 = stablehlo.multiply %7667, %arg548 : tensor<3072x768xf32>
    %7669 = stablehlo.add %7666, %7668 : tensor<3072x768xf32>
    %7670 = stablehlo.multiply %5510, %5510 : tensor<3072xf32>
    %7671 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7672 = stablehlo.multiply %7671, %7670 : tensor<3072xf32>
    %7673 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7674 = stablehlo.multiply %7673, %arg549 : tensor<3072xf32>
    %7675 = stablehlo.add %7672, %7674 : tensor<3072xf32>
    %7676 = stablehlo.multiply %5515, %5515 : tensor<768x3072xf32>
    %7677 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7678 = stablehlo.multiply %7677, %7676 : tensor<768x3072xf32>
    %7679 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7680 = stablehlo.multiply %7679, %arg550 : tensor<768x3072xf32>
    %7681 = stablehlo.add %7678, %7680 : tensor<768x3072xf32>
    %7682 = stablehlo.multiply %5520, %5520 : tensor<768xf32>
    %7683 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7684 = stablehlo.multiply %7683, %7682 : tensor<768xf32>
    %7685 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7686 = stablehlo.multiply %7685, %arg551 : tensor<768xf32>
    %7687 = stablehlo.add %7684, %7686 : tensor<768xf32>
    %7688 = stablehlo.multiply %5525, %5525 : tensor<768xf32>
    %7689 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7690 = stablehlo.multiply %7689, %7688 : tensor<768xf32>
    %7691 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7692 = stablehlo.multiply %7691, %arg552 : tensor<768xf32>
    %7693 = stablehlo.add %7690, %7692 : tensor<768xf32>
    %7694 = stablehlo.multiply %5530, %5530 : tensor<768xf32>
    %7695 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7696 = stablehlo.multiply %7695, %7694 : tensor<768xf32>
    %7697 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7698 = stablehlo.multiply %7697, %arg553 : tensor<768xf32>
    %7699 = stablehlo.add %7696, %7698 : tensor<768xf32>
    %7700 = stablehlo.multiply %5535, %5535 : tensor<768x768xf32>
    %7701 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7702 = stablehlo.multiply %7701, %7700 : tensor<768x768xf32>
    %7703 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7704 = stablehlo.multiply %7703, %arg554 : tensor<768x768xf32>
    %7705 = stablehlo.add %7702, %7704 : tensor<768x768xf32>
    %7706 = stablehlo.multiply %5540, %5540 : tensor<768xf32>
    %7707 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7708 = stablehlo.multiply %7707, %7706 : tensor<768xf32>
    %7709 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7710 = stablehlo.multiply %7709, %arg555 : tensor<768xf32>
    %7711 = stablehlo.add %7708, %7710 : tensor<768xf32>
    %7712 = stablehlo.multiply %5545, %5545 : tensor<768x768xf32>
    %7713 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7714 = stablehlo.multiply %7713, %7712 : tensor<768x768xf32>
    %7715 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7716 = stablehlo.multiply %7715, %arg556 : tensor<768x768xf32>
    %7717 = stablehlo.add %7714, %7716 : tensor<768x768xf32>
    %7718 = stablehlo.multiply %5550, %5550 : tensor<768xf32>
    %7719 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7720 = stablehlo.multiply %7719, %7718 : tensor<768xf32>
    %7721 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7722 = stablehlo.multiply %7721, %arg557 : tensor<768xf32>
    %7723 = stablehlo.add %7720, %7722 : tensor<768xf32>
    %7724 = stablehlo.multiply %5555, %5555 : tensor<768x768xf32>
    %7725 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7726 = stablehlo.multiply %7725, %7724 : tensor<768x768xf32>
    %7727 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7728 = stablehlo.multiply %7727, %arg558 : tensor<768x768xf32>
    %7729 = stablehlo.add %7726, %7728 : tensor<768x768xf32>
    %7730 = stablehlo.multiply %5560, %5560 : tensor<768xf32>
    %7731 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7732 = stablehlo.multiply %7731, %7730 : tensor<768xf32>
    %7733 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7734 = stablehlo.multiply %7733, %arg559 : tensor<768xf32>
    %7735 = stablehlo.add %7732, %7734 : tensor<768xf32>
    %7736 = stablehlo.multiply %5565, %5565 : tensor<768x768xf32>
    %7737 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7738 = stablehlo.multiply %7737, %7736 : tensor<768x768xf32>
    %7739 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7740 = stablehlo.multiply %7739, %arg560 : tensor<768x768xf32>
    %7741 = stablehlo.add %7738, %7740 : tensor<768x768xf32>
    %7742 = stablehlo.multiply %5570, %5570 : tensor<768xf32>
    %7743 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7744 = stablehlo.multiply %7743, %7742 : tensor<768xf32>
    %7745 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7746 = stablehlo.multiply %7745, %arg561 : tensor<768xf32>
    %7747 = stablehlo.add %7744, %7746 : tensor<768xf32>
    %7748 = stablehlo.multiply %5575, %5575 : tensor<768xf32>
    %7749 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7750 = stablehlo.multiply %7749, %7748 : tensor<768xf32>
    %7751 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7752 = stablehlo.multiply %7751, %arg562 : tensor<768xf32>
    %7753 = stablehlo.add %7750, %7752 : tensor<768xf32>
    %7754 = stablehlo.multiply %5580, %5580 : tensor<768xf32>
    %7755 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7756 = stablehlo.multiply %7755, %7754 : tensor<768xf32>
    %7757 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7758 = stablehlo.multiply %7757, %arg563 : tensor<768xf32>
    %7759 = stablehlo.add %7756, %7758 : tensor<768xf32>
    %7760 = stablehlo.multiply %5585, %5585 : tensor<3072x768xf32>
    %7761 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7762 = stablehlo.multiply %7761, %7760 : tensor<3072x768xf32>
    %7763 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7764 = stablehlo.multiply %7763, %arg564 : tensor<3072x768xf32>
    %7765 = stablehlo.add %7762, %7764 : tensor<3072x768xf32>
    %7766 = stablehlo.multiply %5590, %5590 : tensor<3072xf32>
    %7767 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7768 = stablehlo.multiply %7767, %7766 : tensor<3072xf32>
    %7769 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7770 = stablehlo.multiply %7769, %arg565 : tensor<3072xf32>
    %7771 = stablehlo.add %7768, %7770 : tensor<3072xf32>
    %7772 = stablehlo.multiply %5595, %5595 : tensor<768x3072xf32>
    %7773 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7774 = stablehlo.multiply %7773, %7772 : tensor<768x3072xf32>
    %7775 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7776 = stablehlo.multiply %7775, %arg566 : tensor<768x3072xf32>
    %7777 = stablehlo.add %7774, %7776 : tensor<768x3072xf32>
    %7778 = stablehlo.multiply %5600, %5600 : tensor<768xf32>
    %7779 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7780 = stablehlo.multiply %7779, %7778 : tensor<768xf32>
    %7781 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7782 = stablehlo.multiply %7781, %arg567 : tensor<768xf32>
    %7783 = stablehlo.add %7780, %7782 : tensor<768xf32>
    %7784 = stablehlo.multiply %5605, %5605 : tensor<768xf32>
    %7785 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7786 = stablehlo.multiply %7785, %7784 : tensor<768xf32>
    %7787 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7788 = stablehlo.multiply %7787, %arg568 : tensor<768xf32>
    %7789 = stablehlo.add %7786, %7788 : tensor<768xf32>
    %7790 = stablehlo.multiply %5610, %5610 : tensor<768xf32>
    %7791 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7792 = stablehlo.multiply %7791, %7790 : tensor<768xf32>
    %7793 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7794 = stablehlo.multiply %7793, %arg569 : tensor<768xf32>
    %7795 = stablehlo.add %7792, %7794 : tensor<768xf32>
    %7796 = stablehlo.multiply %5615, %5615 : tensor<768x768xf32>
    %7797 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7798 = stablehlo.multiply %7797, %7796 : tensor<768x768xf32>
    %7799 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7800 = stablehlo.multiply %7799, %arg570 : tensor<768x768xf32>
    %7801 = stablehlo.add %7798, %7800 : tensor<768x768xf32>
    %7802 = stablehlo.multiply %5620, %5620 : tensor<768xf32>
    %7803 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7804 = stablehlo.multiply %7803, %7802 : tensor<768xf32>
    %7805 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7806 = stablehlo.multiply %7805, %arg571 : tensor<768xf32>
    %7807 = stablehlo.add %7804, %7806 : tensor<768xf32>
    %7808 = stablehlo.multiply %5625, %5625 : tensor<768x768xf32>
    %7809 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7810 = stablehlo.multiply %7809, %7808 : tensor<768x768xf32>
    %7811 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7812 = stablehlo.multiply %7811, %arg572 : tensor<768x768xf32>
    %7813 = stablehlo.add %7810, %7812 : tensor<768x768xf32>
    %7814 = stablehlo.multiply %5630, %5630 : tensor<768xf32>
    %7815 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7816 = stablehlo.multiply %7815, %7814 : tensor<768xf32>
    %7817 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7818 = stablehlo.multiply %7817, %arg573 : tensor<768xf32>
    %7819 = stablehlo.add %7816, %7818 : tensor<768xf32>
    %7820 = stablehlo.multiply %5635, %5635 : tensor<768x768xf32>
    %7821 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7822 = stablehlo.multiply %7821, %7820 : tensor<768x768xf32>
    %7823 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7824 = stablehlo.multiply %7823, %arg574 : tensor<768x768xf32>
    %7825 = stablehlo.add %7822, %7824 : tensor<768x768xf32>
    %7826 = stablehlo.multiply %5640, %5640 : tensor<768xf32>
    %7827 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7828 = stablehlo.multiply %7827, %7826 : tensor<768xf32>
    %7829 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7830 = stablehlo.multiply %7829, %arg575 : tensor<768xf32>
    %7831 = stablehlo.add %7828, %7830 : tensor<768xf32>
    %7832 = stablehlo.multiply %5645, %5645 : tensor<768x768xf32>
    %7833 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7834 = stablehlo.multiply %7833, %7832 : tensor<768x768xf32>
    %7835 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7836 = stablehlo.multiply %7835, %arg576 : tensor<768x768xf32>
    %7837 = stablehlo.add %7834, %7836 : tensor<768x768xf32>
    %7838 = stablehlo.multiply %5650, %5650 : tensor<768xf32>
    %7839 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7840 = stablehlo.multiply %7839, %7838 : tensor<768xf32>
    %7841 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7842 = stablehlo.multiply %7841, %arg577 : tensor<768xf32>
    %7843 = stablehlo.add %7840, %7842 : tensor<768xf32>
    %7844 = stablehlo.multiply %5655, %5655 : tensor<768xf32>
    %7845 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7846 = stablehlo.multiply %7845, %7844 : tensor<768xf32>
    %7847 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7848 = stablehlo.multiply %7847, %arg578 : tensor<768xf32>
    %7849 = stablehlo.add %7846, %7848 : tensor<768xf32>
    %7850 = stablehlo.multiply %5660, %5660 : tensor<768xf32>
    %7851 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7852 = stablehlo.multiply %7851, %7850 : tensor<768xf32>
    %7853 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7854 = stablehlo.multiply %7853, %arg579 : tensor<768xf32>
    %7855 = stablehlo.add %7852, %7854 : tensor<768xf32>
    %7856 = stablehlo.multiply %5665, %5665 : tensor<3072x768xf32>
    %7857 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7858 = stablehlo.multiply %7857, %7856 : tensor<3072x768xf32>
    %7859 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7860 = stablehlo.multiply %7859, %arg580 : tensor<3072x768xf32>
    %7861 = stablehlo.add %7858, %7860 : tensor<3072x768xf32>
    %7862 = stablehlo.multiply %5670, %5670 : tensor<3072xf32>
    %7863 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7864 = stablehlo.multiply %7863, %7862 : tensor<3072xf32>
    %7865 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7866 = stablehlo.multiply %7865, %arg581 : tensor<3072xf32>
    %7867 = stablehlo.add %7864, %7866 : tensor<3072xf32>
    %7868 = stablehlo.multiply %5675, %5675 : tensor<768x3072xf32>
    %7869 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7870 = stablehlo.multiply %7869, %7868 : tensor<768x3072xf32>
    %7871 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7872 = stablehlo.multiply %7871, %arg582 : tensor<768x3072xf32>
    %7873 = stablehlo.add %7870, %7872 : tensor<768x3072xf32>
    %7874 = stablehlo.multiply %5680, %5680 : tensor<768xf32>
    %7875 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7876 = stablehlo.multiply %7875, %7874 : tensor<768xf32>
    %7877 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7878 = stablehlo.multiply %7877, %arg583 : tensor<768xf32>
    %7879 = stablehlo.add %7876, %7878 : tensor<768xf32>
    %7880 = stablehlo.multiply %5685, %5685 : tensor<768xf32>
    %7881 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7882 = stablehlo.multiply %7881, %7880 : tensor<768xf32>
    %7883 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7884 = stablehlo.multiply %7883, %arg584 : tensor<768xf32>
    %7885 = stablehlo.add %7882, %7884 : tensor<768xf32>
    %7886 = stablehlo.multiply %5690, %5690 : tensor<768xf32>
    %7887 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7888 = stablehlo.multiply %7887, %7886 : tensor<768xf32>
    %7889 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7890 = stablehlo.multiply %7889, %arg585 : tensor<768xf32>
    %7891 = stablehlo.add %7888, %7890 : tensor<768xf32>
    %7892 = stablehlo.multiply %5695, %5695 : tensor<768x768xf32>
    %7893 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7894 = stablehlo.multiply %7893, %7892 : tensor<768x768xf32>
    %7895 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7896 = stablehlo.multiply %7895, %arg586 : tensor<768x768xf32>
    %7897 = stablehlo.add %7894, %7896 : tensor<768x768xf32>
    %7898 = stablehlo.multiply %5700, %5700 : tensor<768xf32>
    %7899 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7900 = stablehlo.multiply %7899, %7898 : tensor<768xf32>
    %7901 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7902 = stablehlo.multiply %7901, %arg587 : tensor<768xf32>
    %7903 = stablehlo.add %7900, %7902 : tensor<768xf32>
    %7904 = stablehlo.multiply %5705, %5705 : tensor<768x768xf32>
    %7905 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7906 = stablehlo.multiply %7905, %7904 : tensor<768x768xf32>
    %7907 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7908 = stablehlo.multiply %7907, %arg588 : tensor<768x768xf32>
    %7909 = stablehlo.add %7906, %7908 : tensor<768x768xf32>
    %7910 = stablehlo.multiply %5710, %5710 : tensor<768xf32>
    %7911 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7912 = stablehlo.multiply %7911, %7910 : tensor<768xf32>
    %7913 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7914 = stablehlo.multiply %7913, %arg589 : tensor<768xf32>
    %7915 = stablehlo.add %7912, %7914 : tensor<768xf32>
    %7916 = stablehlo.multiply %5715, %5715 : tensor<768x768xf32>
    %7917 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7918 = stablehlo.multiply %7917, %7916 : tensor<768x768xf32>
    %7919 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7920 = stablehlo.multiply %7919, %arg590 : tensor<768x768xf32>
    %7921 = stablehlo.add %7918, %7920 : tensor<768x768xf32>
    %7922 = stablehlo.multiply %5720, %5720 : tensor<768xf32>
    %7923 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7924 = stablehlo.multiply %7923, %7922 : tensor<768xf32>
    %7925 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7926 = stablehlo.multiply %7925, %arg591 : tensor<768xf32>
    %7927 = stablehlo.add %7924, %7926 : tensor<768xf32>
    %7928 = stablehlo.multiply %5725, %5725 : tensor<768x768xf32>
    %7929 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7930 = stablehlo.multiply %7929, %7928 : tensor<768x768xf32>
    %7931 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7932 = stablehlo.multiply %7931, %arg592 : tensor<768x768xf32>
    %7933 = stablehlo.add %7930, %7932 : tensor<768x768xf32>
    %7934 = stablehlo.multiply %5730, %5730 : tensor<768xf32>
    %7935 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7936 = stablehlo.multiply %7935, %7934 : tensor<768xf32>
    %7937 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7938 = stablehlo.multiply %7937, %arg593 : tensor<768xf32>
    %7939 = stablehlo.add %7936, %7938 : tensor<768xf32>
    %7940 = stablehlo.multiply %5735, %5735 : tensor<768xf32>
    %7941 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7942 = stablehlo.multiply %7941, %7940 : tensor<768xf32>
    %7943 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7944 = stablehlo.multiply %7943, %arg594 : tensor<768xf32>
    %7945 = stablehlo.add %7942, %7944 : tensor<768xf32>
    %7946 = stablehlo.multiply %5740, %5740 : tensor<768xf32>
    %7947 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7948 = stablehlo.multiply %7947, %7946 : tensor<768xf32>
    %7949 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7950 = stablehlo.multiply %7949, %arg595 : tensor<768xf32>
    %7951 = stablehlo.add %7948, %7950 : tensor<768xf32>
    %7952 = stablehlo.multiply %5745, %5745 : tensor<3072x768xf32>
    %7953 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7954 = stablehlo.multiply %7953, %7952 : tensor<3072x768xf32>
    %7955 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7956 = stablehlo.multiply %7955, %arg596 : tensor<3072x768xf32>
    %7957 = stablehlo.add %7954, %7956 : tensor<3072x768xf32>
    %7958 = stablehlo.multiply %5750, %5750 : tensor<3072xf32>
    %7959 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7960 = stablehlo.multiply %7959, %7958 : tensor<3072xf32>
    %7961 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7962 = stablehlo.multiply %7961, %arg597 : tensor<3072xf32>
    %7963 = stablehlo.add %7960, %7962 : tensor<3072xf32>
    %7964 = stablehlo.multiply %5755, %5755 : tensor<768x3072xf32>
    %7965 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7966 = stablehlo.multiply %7965, %7964 : tensor<768x3072xf32>
    %7967 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7968 = stablehlo.multiply %7967, %arg598 : tensor<768x3072xf32>
    %7969 = stablehlo.add %7966, %7968 : tensor<768x3072xf32>
    %7970 = stablehlo.multiply %5760, %5760 : tensor<768xf32>
    %7971 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7972 = stablehlo.multiply %7971, %7970 : tensor<768xf32>
    %7973 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7974 = stablehlo.multiply %7973, %arg599 : tensor<768xf32>
    %7975 = stablehlo.add %7972, %7974 : tensor<768xf32>
    %7976 = stablehlo.multiply %5765, %5765 : tensor<768xf32>
    %7977 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7978 = stablehlo.multiply %7977, %7976 : tensor<768xf32>
    %7979 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7980 = stablehlo.multiply %7979, %arg600 : tensor<768xf32>
    %7981 = stablehlo.add %7978, %7980 : tensor<768xf32>
    %7982 = stablehlo.multiply %5770, %5770 : tensor<768xf32>
    %7983 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7984 = stablehlo.multiply %7983, %7982 : tensor<768xf32>
    %7985 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7986 = stablehlo.multiply %7985, %arg601 : tensor<768xf32>
    %7987 = stablehlo.add %7984, %7986 : tensor<768xf32>
    %7988 = stablehlo.multiply %5775, %5775 : tensor<768x768xf32>
    %7989 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7990 = stablehlo.multiply %7989, %7988 : tensor<768x768xf32>
    %7991 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7992 = stablehlo.multiply %7991, %arg602 : tensor<768x768xf32>
    %7993 = stablehlo.add %7990, %7992 : tensor<768x768xf32>
    %7994 = stablehlo.multiply %5780, %5780 : tensor<768xf32>
    %7995 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7996 = stablehlo.multiply %7995, %7994 : tensor<768xf32>
    %7997 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7998 = stablehlo.multiply %7997, %arg603 : tensor<768xf32>
    %7999 = stablehlo.add %7996, %7998 : tensor<768xf32>
    %8000 = stablehlo.multiply %5785, %5785 : tensor<768xf32>
    %8001 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8002 = stablehlo.multiply %8001, %8000 : tensor<768xf32>
    %8003 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8004 = stablehlo.multiply %8003, %arg604 : tensor<768xf32>
    %8005 = stablehlo.add %8002, %8004 : tensor<768xf32>
    %8006 = stablehlo.multiply %5790, %5790 : tensor<768xf32>
    %8007 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8008 = stablehlo.multiply %8007, %8006 : tensor<768xf32>
    %8009 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8010 = stablehlo.multiply %8009, %arg605 : tensor<768xf32>
    %8011 = stablehlo.add %8008, %8010 : tensor<768xf32>
    %8012 = stablehlo.multiply %5795, %5795 : tensor<30522xf32>
    %8013 = stablehlo.broadcast_in_dim %cst_648, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8014 = stablehlo.multiply %8013, %8012 : tensor<30522xf32>
    %8015 = stablehlo.broadcast_in_dim %cst_649, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8016 = stablehlo.multiply %8015, %arg606 : tensor<30522xf32>
    %8017 = stablehlo.add %8014, %8016 : tensor<30522xf32>
    %c_650 = stablehlo.constant dense<2147483647> : tensor<i32>
    %8018 = stablehlo.compare  LT, %arg202, %c_650,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %8019 = stablehlo.add %arg202, %c_12 : tensor<i32>
    %8020 = call @_where_303(%8018, %8019, %c_650) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_651 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %8021 = stablehlo.convert %8020 : (tensor<i32>) -> tensor<f32>
    %8022 = stablehlo.power %cst_651, %8021 : tensor<f32>
    %8023 = stablehlo.subtract %cst_6, %8022 : tensor<f32>
    %8024 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8025 = stablehlo.divide %5800, %8024 : tensor<30522x768xf32>
    %8026 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8027 = stablehlo.divide %5805, %8026 : tensor<512x768xf32>
    %8028 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8029 = stablehlo.divide %5810, %8028 : tensor<2x768xf32>
    %8030 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8031 = stablehlo.divide %5815, %8030 : tensor<768xf32>
    %8032 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8033 = stablehlo.divide %5820, %8032 : tensor<768xf32>
    %8034 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8035 = stablehlo.divide %5825, %8034 : tensor<768x768xf32>
    %8036 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8037 = stablehlo.divide %5830, %8036 : tensor<768xf32>
    %8038 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8039 = stablehlo.divide %5835, %8038 : tensor<768x768xf32>
    %8040 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8041 = stablehlo.divide %5840, %8040 : tensor<768xf32>
    %8042 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8043 = stablehlo.divide %5845, %8042 : tensor<768x768xf32>
    %8044 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8045 = stablehlo.divide %5850, %8044 : tensor<768xf32>
    %8046 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8047 = stablehlo.divide %5855, %8046 : tensor<768x768xf32>
    %8048 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8049 = stablehlo.divide %5860, %8048 : tensor<768xf32>
    %8050 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8051 = stablehlo.divide %5865, %8050 : tensor<768xf32>
    %8052 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8053 = stablehlo.divide %5870, %8052 : tensor<768xf32>
    %8054 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8055 = stablehlo.divide %5875, %8054 : tensor<3072x768xf32>
    %8056 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8057 = stablehlo.divide %5880, %8056 : tensor<3072xf32>
    %8058 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8059 = stablehlo.divide %5885, %8058 : tensor<768x3072xf32>
    %8060 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8061 = stablehlo.divide %5890, %8060 : tensor<768xf32>
    %8062 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8063 = stablehlo.divide %5895, %8062 : tensor<768xf32>
    %8064 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8065 = stablehlo.divide %5900, %8064 : tensor<768xf32>
    %8066 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8067 = stablehlo.divide %5905, %8066 : tensor<768x768xf32>
    %8068 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8069 = stablehlo.divide %5910, %8068 : tensor<768xf32>
    %8070 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8071 = stablehlo.divide %5915, %8070 : tensor<768x768xf32>
    %8072 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8073 = stablehlo.divide %5920, %8072 : tensor<768xf32>
    %8074 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8075 = stablehlo.divide %5925, %8074 : tensor<768x768xf32>
    %8076 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8077 = stablehlo.divide %5930, %8076 : tensor<768xf32>
    %8078 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8079 = stablehlo.divide %5935, %8078 : tensor<768x768xf32>
    %8080 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8081 = stablehlo.divide %5940, %8080 : tensor<768xf32>
    %8082 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8083 = stablehlo.divide %5945, %8082 : tensor<768xf32>
    %8084 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8085 = stablehlo.divide %5950, %8084 : tensor<768xf32>
    %8086 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8087 = stablehlo.divide %5955, %8086 : tensor<3072x768xf32>
    %8088 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8089 = stablehlo.divide %5960, %8088 : tensor<3072xf32>
    %8090 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8091 = stablehlo.divide %5965, %8090 : tensor<768x3072xf32>
    %8092 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8093 = stablehlo.divide %5970, %8092 : tensor<768xf32>
    %8094 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8095 = stablehlo.divide %5975, %8094 : tensor<768xf32>
    %8096 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8097 = stablehlo.divide %5980, %8096 : tensor<768xf32>
    %8098 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8099 = stablehlo.divide %5985, %8098 : tensor<768x768xf32>
    %8100 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8101 = stablehlo.divide %5990, %8100 : tensor<768xf32>
    %8102 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8103 = stablehlo.divide %5995, %8102 : tensor<768x768xf32>
    %8104 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8105 = stablehlo.divide %6000, %8104 : tensor<768xf32>
    %8106 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8107 = stablehlo.divide %6005, %8106 : tensor<768x768xf32>
    %8108 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8109 = stablehlo.divide %6010, %8108 : tensor<768xf32>
    %8110 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8111 = stablehlo.divide %6015, %8110 : tensor<768x768xf32>
    %8112 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8113 = stablehlo.divide %6020, %8112 : tensor<768xf32>
    %8114 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8115 = stablehlo.divide %6025, %8114 : tensor<768xf32>
    %8116 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8117 = stablehlo.divide %6030, %8116 : tensor<768xf32>
    %8118 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8119 = stablehlo.divide %6035, %8118 : tensor<3072x768xf32>
    %8120 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8121 = stablehlo.divide %6040, %8120 : tensor<3072xf32>
    %8122 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8123 = stablehlo.divide %6045, %8122 : tensor<768x3072xf32>
    %8124 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8125 = stablehlo.divide %6050, %8124 : tensor<768xf32>
    %8126 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8127 = stablehlo.divide %6055, %8126 : tensor<768xf32>
    %8128 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8129 = stablehlo.divide %6060, %8128 : tensor<768xf32>
    %8130 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8131 = stablehlo.divide %6065, %8130 : tensor<768x768xf32>
    %8132 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8133 = stablehlo.divide %6070, %8132 : tensor<768xf32>
    %8134 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8135 = stablehlo.divide %6075, %8134 : tensor<768x768xf32>
    %8136 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8137 = stablehlo.divide %6080, %8136 : tensor<768xf32>
    %8138 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8139 = stablehlo.divide %6085, %8138 : tensor<768x768xf32>
    %8140 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8141 = stablehlo.divide %6090, %8140 : tensor<768xf32>
    %8142 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8143 = stablehlo.divide %6095, %8142 : tensor<768x768xf32>
    %8144 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8145 = stablehlo.divide %6100, %8144 : tensor<768xf32>
    %8146 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8147 = stablehlo.divide %6105, %8146 : tensor<768xf32>
    %8148 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8149 = stablehlo.divide %6110, %8148 : tensor<768xf32>
    %8150 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8151 = stablehlo.divide %6115, %8150 : tensor<3072x768xf32>
    %8152 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8153 = stablehlo.divide %6120, %8152 : tensor<3072xf32>
    %8154 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8155 = stablehlo.divide %6125, %8154 : tensor<768x3072xf32>
    %8156 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8157 = stablehlo.divide %6130, %8156 : tensor<768xf32>
    %8158 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8159 = stablehlo.divide %6135, %8158 : tensor<768xf32>
    %8160 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8161 = stablehlo.divide %6140, %8160 : tensor<768xf32>
    %8162 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8163 = stablehlo.divide %6145, %8162 : tensor<768x768xf32>
    %8164 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8165 = stablehlo.divide %6150, %8164 : tensor<768xf32>
    %8166 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8167 = stablehlo.divide %6155, %8166 : tensor<768x768xf32>
    %8168 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8169 = stablehlo.divide %6160, %8168 : tensor<768xf32>
    %8170 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8171 = stablehlo.divide %6165, %8170 : tensor<768x768xf32>
    %8172 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8173 = stablehlo.divide %6170, %8172 : tensor<768xf32>
    %8174 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8175 = stablehlo.divide %6175, %8174 : tensor<768x768xf32>
    %8176 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8177 = stablehlo.divide %6180, %8176 : tensor<768xf32>
    %8178 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8179 = stablehlo.divide %6185, %8178 : tensor<768xf32>
    %8180 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8181 = stablehlo.divide %6190, %8180 : tensor<768xf32>
    %8182 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8183 = stablehlo.divide %6195, %8182 : tensor<3072x768xf32>
    %8184 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8185 = stablehlo.divide %6200, %8184 : tensor<3072xf32>
    %8186 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8187 = stablehlo.divide %6205, %8186 : tensor<768x3072xf32>
    %8188 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8189 = stablehlo.divide %6210, %8188 : tensor<768xf32>
    %8190 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8191 = stablehlo.divide %6215, %8190 : tensor<768xf32>
    %8192 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8193 = stablehlo.divide %6220, %8192 : tensor<768xf32>
    %8194 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8195 = stablehlo.divide %6225, %8194 : tensor<768x768xf32>
    %8196 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8197 = stablehlo.divide %6230, %8196 : tensor<768xf32>
    %8198 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8199 = stablehlo.divide %6235, %8198 : tensor<768x768xf32>
    %8200 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8201 = stablehlo.divide %6240, %8200 : tensor<768xf32>
    %8202 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8203 = stablehlo.divide %6245, %8202 : tensor<768x768xf32>
    %8204 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8205 = stablehlo.divide %6250, %8204 : tensor<768xf32>
    %8206 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8207 = stablehlo.divide %6255, %8206 : tensor<768x768xf32>
    %8208 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8209 = stablehlo.divide %6260, %8208 : tensor<768xf32>
    %8210 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8211 = stablehlo.divide %6265, %8210 : tensor<768xf32>
    %8212 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8213 = stablehlo.divide %6270, %8212 : tensor<768xf32>
    %8214 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8215 = stablehlo.divide %6275, %8214 : tensor<3072x768xf32>
    %8216 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8217 = stablehlo.divide %6280, %8216 : tensor<3072xf32>
    %8218 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8219 = stablehlo.divide %6285, %8218 : tensor<768x3072xf32>
    %8220 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8221 = stablehlo.divide %6290, %8220 : tensor<768xf32>
    %8222 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8223 = stablehlo.divide %6295, %8222 : tensor<768xf32>
    %8224 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8225 = stablehlo.divide %6300, %8224 : tensor<768xf32>
    %8226 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8227 = stablehlo.divide %6305, %8226 : tensor<768x768xf32>
    %8228 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8229 = stablehlo.divide %6310, %8228 : tensor<768xf32>
    %8230 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8231 = stablehlo.divide %6315, %8230 : tensor<768x768xf32>
    %8232 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8233 = stablehlo.divide %6320, %8232 : tensor<768xf32>
    %8234 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8235 = stablehlo.divide %6325, %8234 : tensor<768x768xf32>
    %8236 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8237 = stablehlo.divide %6330, %8236 : tensor<768xf32>
    %8238 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8239 = stablehlo.divide %6335, %8238 : tensor<768x768xf32>
    %8240 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8241 = stablehlo.divide %6340, %8240 : tensor<768xf32>
    %8242 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8243 = stablehlo.divide %6345, %8242 : tensor<768xf32>
    %8244 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8245 = stablehlo.divide %6350, %8244 : tensor<768xf32>
    %8246 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8247 = stablehlo.divide %6355, %8246 : tensor<3072x768xf32>
    %8248 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8249 = stablehlo.divide %6360, %8248 : tensor<3072xf32>
    %8250 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8251 = stablehlo.divide %6365, %8250 : tensor<768x3072xf32>
    %8252 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8253 = stablehlo.divide %6370, %8252 : tensor<768xf32>
    %8254 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8255 = stablehlo.divide %6375, %8254 : tensor<768xf32>
    %8256 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8257 = stablehlo.divide %6380, %8256 : tensor<768xf32>
    %8258 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8259 = stablehlo.divide %6385, %8258 : tensor<768x768xf32>
    %8260 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8261 = stablehlo.divide %6390, %8260 : tensor<768xf32>
    %8262 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8263 = stablehlo.divide %6395, %8262 : tensor<768x768xf32>
    %8264 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8265 = stablehlo.divide %6400, %8264 : tensor<768xf32>
    %8266 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8267 = stablehlo.divide %6405, %8266 : tensor<768x768xf32>
    %8268 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8269 = stablehlo.divide %6410, %8268 : tensor<768xf32>
    %8270 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8271 = stablehlo.divide %6415, %8270 : tensor<768x768xf32>
    %8272 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8273 = stablehlo.divide %6420, %8272 : tensor<768xf32>
    %8274 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8275 = stablehlo.divide %6425, %8274 : tensor<768xf32>
    %8276 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8277 = stablehlo.divide %6430, %8276 : tensor<768xf32>
    %8278 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8279 = stablehlo.divide %6435, %8278 : tensor<3072x768xf32>
    %8280 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8281 = stablehlo.divide %6440, %8280 : tensor<3072xf32>
    %8282 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8283 = stablehlo.divide %6445, %8282 : tensor<768x3072xf32>
    %8284 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8285 = stablehlo.divide %6450, %8284 : tensor<768xf32>
    %8286 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8287 = stablehlo.divide %6455, %8286 : tensor<768xf32>
    %8288 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8289 = stablehlo.divide %6460, %8288 : tensor<768xf32>
    %8290 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8291 = stablehlo.divide %6465, %8290 : tensor<768x768xf32>
    %8292 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8293 = stablehlo.divide %6470, %8292 : tensor<768xf32>
    %8294 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8295 = stablehlo.divide %6475, %8294 : tensor<768x768xf32>
    %8296 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8297 = stablehlo.divide %6480, %8296 : tensor<768xf32>
    %8298 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8299 = stablehlo.divide %6485, %8298 : tensor<768x768xf32>
    %8300 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8301 = stablehlo.divide %6490, %8300 : tensor<768xf32>
    %8302 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8303 = stablehlo.divide %6495, %8302 : tensor<768x768xf32>
    %8304 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8305 = stablehlo.divide %6500, %8304 : tensor<768xf32>
    %8306 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8307 = stablehlo.divide %6505, %8306 : tensor<768xf32>
    %8308 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8309 = stablehlo.divide %6510, %8308 : tensor<768xf32>
    %8310 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8311 = stablehlo.divide %6515, %8310 : tensor<3072x768xf32>
    %8312 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8313 = stablehlo.divide %6520, %8312 : tensor<3072xf32>
    %8314 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8315 = stablehlo.divide %6525, %8314 : tensor<768x3072xf32>
    %8316 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8317 = stablehlo.divide %6530, %8316 : tensor<768xf32>
    %8318 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8319 = stablehlo.divide %6535, %8318 : tensor<768xf32>
    %8320 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8321 = stablehlo.divide %6540, %8320 : tensor<768xf32>
    %8322 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8323 = stablehlo.divide %6545, %8322 : tensor<768x768xf32>
    %8324 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8325 = stablehlo.divide %6550, %8324 : tensor<768xf32>
    %8326 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8327 = stablehlo.divide %6555, %8326 : tensor<768x768xf32>
    %8328 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8329 = stablehlo.divide %6560, %8328 : tensor<768xf32>
    %8330 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8331 = stablehlo.divide %6565, %8330 : tensor<768x768xf32>
    %8332 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8333 = stablehlo.divide %6570, %8332 : tensor<768xf32>
    %8334 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8335 = stablehlo.divide %6575, %8334 : tensor<768x768xf32>
    %8336 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8337 = stablehlo.divide %6580, %8336 : tensor<768xf32>
    %8338 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8339 = stablehlo.divide %6585, %8338 : tensor<768xf32>
    %8340 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8341 = stablehlo.divide %6590, %8340 : tensor<768xf32>
    %8342 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8343 = stablehlo.divide %6595, %8342 : tensor<3072x768xf32>
    %8344 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8345 = stablehlo.divide %6600, %8344 : tensor<3072xf32>
    %8346 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8347 = stablehlo.divide %6605, %8346 : tensor<768x3072xf32>
    %8348 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8349 = stablehlo.divide %6610, %8348 : tensor<768xf32>
    %8350 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8351 = stablehlo.divide %6615, %8350 : tensor<768xf32>
    %8352 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8353 = stablehlo.divide %6620, %8352 : tensor<768xf32>
    %8354 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8355 = stablehlo.divide %6625, %8354 : tensor<768x768xf32>
    %8356 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8357 = stablehlo.divide %6630, %8356 : tensor<768xf32>
    %8358 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8359 = stablehlo.divide %6635, %8358 : tensor<768x768xf32>
    %8360 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8361 = stablehlo.divide %6640, %8360 : tensor<768xf32>
    %8362 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8363 = stablehlo.divide %6645, %8362 : tensor<768x768xf32>
    %8364 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8365 = stablehlo.divide %6650, %8364 : tensor<768xf32>
    %8366 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8367 = stablehlo.divide %6655, %8366 : tensor<768x768xf32>
    %8368 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8369 = stablehlo.divide %6660, %8368 : tensor<768xf32>
    %8370 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8371 = stablehlo.divide %6665, %8370 : tensor<768xf32>
    %8372 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8373 = stablehlo.divide %6670, %8372 : tensor<768xf32>
    %8374 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8375 = stablehlo.divide %6675, %8374 : tensor<3072x768xf32>
    %8376 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8377 = stablehlo.divide %6680, %8376 : tensor<3072xf32>
    %8378 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8379 = stablehlo.divide %6685, %8378 : tensor<768x3072xf32>
    %8380 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8381 = stablehlo.divide %6690, %8380 : tensor<768xf32>
    %8382 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8383 = stablehlo.divide %6695, %8382 : tensor<768xf32>
    %8384 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8385 = stablehlo.divide %6700, %8384 : tensor<768xf32>
    %8386 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8387 = stablehlo.divide %6705, %8386 : tensor<768x768xf32>
    %8388 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8389 = stablehlo.divide %6710, %8388 : tensor<768xf32>
    %8390 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8391 = stablehlo.divide %6715, %8390 : tensor<768x768xf32>
    %8392 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8393 = stablehlo.divide %6720, %8392 : tensor<768xf32>
    %8394 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8395 = stablehlo.divide %6725, %8394 : tensor<768x768xf32>
    %8396 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8397 = stablehlo.divide %6730, %8396 : tensor<768xf32>
    %8398 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8399 = stablehlo.divide %6735, %8398 : tensor<768x768xf32>
    %8400 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8401 = stablehlo.divide %6740, %8400 : tensor<768xf32>
    %8402 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8403 = stablehlo.divide %6745, %8402 : tensor<768xf32>
    %8404 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8405 = stablehlo.divide %6750, %8404 : tensor<768xf32>
    %8406 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8407 = stablehlo.divide %6755, %8406 : tensor<3072x768xf32>
    %8408 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8409 = stablehlo.divide %6760, %8408 : tensor<3072xf32>
    %8410 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8411 = stablehlo.divide %6765, %8410 : tensor<768x3072xf32>
    %8412 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8413 = stablehlo.divide %6770, %8412 : tensor<768xf32>
    %8414 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8415 = stablehlo.divide %6775, %8414 : tensor<768xf32>
    %8416 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8417 = stablehlo.divide %6780, %8416 : tensor<768xf32>
    %8418 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8419 = stablehlo.divide %6785, %8418 : tensor<768x768xf32>
    %8420 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8421 = stablehlo.divide %6790, %8420 : tensor<768xf32>
    %8422 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8423 = stablehlo.divide %6795, %8422 : tensor<768xf32>
    %8424 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8425 = stablehlo.divide %6800, %8424 : tensor<768xf32>
    %8426 = stablehlo.broadcast_in_dim %8023, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8427 = stablehlo.divide %6805, %8426 : tensor<30522xf32>
    %cst_652 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %8428 = stablehlo.convert %8020 : (tensor<i32>) -> tensor<f32>
    %8429 = stablehlo.power %cst_652, %8428 : tensor<f32>
    %8430 = stablehlo.subtract %cst_6, %8429 : tensor<f32>
    %8431 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8432 = stablehlo.divide %6811, %8431 : tensor<30522x768xf32>
    %8433 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8434 = stablehlo.divide %6817, %8433 : tensor<512x768xf32>
    %8435 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8436 = stablehlo.divide %6823, %8435 : tensor<2x768xf32>
    %8437 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8438 = stablehlo.divide %6829, %8437 : tensor<768xf32>
    %8439 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8440 = stablehlo.divide %6835, %8439 : tensor<768xf32>
    %8441 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8442 = stablehlo.divide %6841, %8441 : tensor<768x768xf32>
    %8443 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8444 = stablehlo.divide %6847, %8443 : tensor<768xf32>
    %8445 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8446 = stablehlo.divide %6853, %8445 : tensor<768x768xf32>
    %8447 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8448 = stablehlo.divide %6859, %8447 : tensor<768xf32>
    %8449 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8450 = stablehlo.divide %6865, %8449 : tensor<768x768xf32>
    %8451 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8452 = stablehlo.divide %6871, %8451 : tensor<768xf32>
    %8453 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8454 = stablehlo.divide %6877, %8453 : tensor<768x768xf32>
    %8455 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8456 = stablehlo.divide %6883, %8455 : tensor<768xf32>
    %8457 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8458 = stablehlo.divide %6889, %8457 : tensor<768xf32>
    %8459 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8460 = stablehlo.divide %6895, %8459 : tensor<768xf32>
    %8461 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8462 = stablehlo.divide %6901, %8461 : tensor<3072x768xf32>
    %8463 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8464 = stablehlo.divide %6907, %8463 : tensor<3072xf32>
    %8465 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8466 = stablehlo.divide %6913, %8465 : tensor<768x3072xf32>
    %8467 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8468 = stablehlo.divide %6919, %8467 : tensor<768xf32>
    %8469 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8470 = stablehlo.divide %6925, %8469 : tensor<768xf32>
    %8471 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8472 = stablehlo.divide %6931, %8471 : tensor<768xf32>
    %8473 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8474 = stablehlo.divide %6937, %8473 : tensor<768x768xf32>
    %8475 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8476 = stablehlo.divide %6943, %8475 : tensor<768xf32>
    %8477 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8478 = stablehlo.divide %6949, %8477 : tensor<768x768xf32>
    %8479 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8480 = stablehlo.divide %6955, %8479 : tensor<768xf32>
    %8481 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8482 = stablehlo.divide %6961, %8481 : tensor<768x768xf32>
    %8483 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8484 = stablehlo.divide %6967, %8483 : tensor<768xf32>
    %8485 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8486 = stablehlo.divide %6973, %8485 : tensor<768x768xf32>
    %8487 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8488 = stablehlo.divide %6979, %8487 : tensor<768xf32>
    %8489 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8490 = stablehlo.divide %6985, %8489 : tensor<768xf32>
    %8491 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8492 = stablehlo.divide %6991, %8491 : tensor<768xf32>
    %8493 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8494 = stablehlo.divide %6997, %8493 : tensor<3072x768xf32>
    %8495 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8496 = stablehlo.divide %7003, %8495 : tensor<3072xf32>
    %8497 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8498 = stablehlo.divide %7009, %8497 : tensor<768x3072xf32>
    %8499 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8500 = stablehlo.divide %7015, %8499 : tensor<768xf32>
    %8501 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8502 = stablehlo.divide %7021, %8501 : tensor<768xf32>
    %8503 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8504 = stablehlo.divide %7027, %8503 : tensor<768xf32>
    %8505 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8506 = stablehlo.divide %7033, %8505 : tensor<768x768xf32>
    %8507 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8508 = stablehlo.divide %7039, %8507 : tensor<768xf32>
    %8509 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8510 = stablehlo.divide %7045, %8509 : tensor<768x768xf32>
    %8511 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8512 = stablehlo.divide %7051, %8511 : tensor<768xf32>
    %8513 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8514 = stablehlo.divide %7057, %8513 : tensor<768x768xf32>
    %8515 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8516 = stablehlo.divide %7063, %8515 : tensor<768xf32>
    %8517 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8518 = stablehlo.divide %7069, %8517 : tensor<768x768xf32>
    %8519 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8520 = stablehlo.divide %7075, %8519 : tensor<768xf32>
    %8521 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8522 = stablehlo.divide %7081, %8521 : tensor<768xf32>
    %8523 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8524 = stablehlo.divide %7087, %8523 : tensor<768xf32>
    %8525 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8526 = stablehlo.divide %7093, %8525 : tensor<3072x768xf32>
    %8527 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8528 = stablehlo.divide %7099, %8527 : tensor<3072xf32>
    %8529 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8530 = stablehlo.divide %7105, %8529 : tensor<768x3072xf32>
    %8531 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8532 = stablehlo.divide %7111, %8531 : tensor<768xf32>
    %8533 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8534 = stablehlo.divide %7117, %8533 : tensor<768xf32>
    %8535 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8536 = stablehlo.divide %7123, %8535 : tensor<768xf32>
    %8537 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8538 = stablehlo.divide %7129, %8537 : tensor<768x768xf32>
    %8539 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8540 = stablehlo.divide %7135, %8539 : tensor<768xf32>
    %8541 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8542 = stablehlo.divide %7141, %8541 : tensor<768x768xf32>
    %8543 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8544 = stablehlo.divide %7147, %8543 : tensor<768xf32>
    %8545 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8546 = stablehlo.divide %7153, %8545 : tensor<768x768xf32>
    %8547 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8548 = stablehlo.divide %7159, %8547 : tensor<768xf32>
    %8549 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8550 = stablehlo.divide %7165, %8549 : tensor<768x768xf32>
    %8551 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8552 = stablehlo.divide %7171, %8551 : tensor<768xf32>
    %8553 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8554 = stablehlo.divide %7177, %8553 : tensor<768xf32>
    %8555 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8556 = stablehlo.divide %7183, %8555 : tensor<768xf32>
    %8557 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8558 = stablehlo.divide %7189, %8557 : tensor<3072x768xf32>
    %8559 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8560 = stablehlo.divide %7195, %8559 : tensor<3072xf32>
    %8561 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8562 = stablehlo.divide %7201, %8561 : tensor<768x3072xf32>
    %8563 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8564 = stablehlo.divide %7207, %8563 : tensor<768xf32>
    %8565 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8566 = stablehlo.divide %7213, %8565 : tensor<768xf32>
    %8567 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8568 = stablehlo.divide %7219, %8567 : tensor<768xf32>
    %8569 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8570 = stablehlo.divide %7225, %8569 : tensor<768x768xf32>
    %8571 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8572 = stablehlo.divide %7231, %8571 : tensor<768xf32>
    %8573 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8574 = stablehlo.divide %7237, %8573 : tensor<768x768xf32>
    %8575 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8576 = stablehlo.divide %7243, %8575 : tensor<768xf32>
    %8577 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8578 = stablehlo.divide %7249, %8577 : tensor<768x768xf32>
    %8579 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8580 = stablehlo.divide %7255, %8579 : tensor<768xf32>
    %8581 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8582 = stablehlo.divide %7261, %8581 : tensor<768x768xf32>
    %8583 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8584 = stablehlo.divide %7267, %8583 : tensor<768xf32>
    %8585 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8586 = stablehlo.divide %7273, %8585 : tensor<768xf32>
    %8587 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8588 = stablehlo.divide %7279, %8587 : tensor<768xf32>
    %8589 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8590 = stablehlo.divide %7285, %8589 : tensor<3072x768xf32>
    %8591 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8592 = stablehlo.divide %7291, %8591 : tensor<3072xf32>
    %8593 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8594 = stablehlo.divide %7297, %8593 : tensor<768x3072xf32>
    %8595 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8596 = stablehlo.divide %7303, %8595 : tensor<768xf32>
    %8597 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8598 = stablehlo.divide %7309, %8597 : tensor<768xf32>
    %8599 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8600 = stablehlo.divide %7315, %8599 : tensor<768xf32>
    %8601 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8602 = stablehlo.divide %7321, %8601 : tensor<768x768xf32>
    %8603 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8604 = stablehlo.divide %7327, %8603 : tensor<768xf32>
    %8605 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8606 = stablehlo.divide %7333, %8605 : tensor<768x768xf32>
    %8607 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8608 = stablehlo.divide %7339, %8607 : tensor<768xf32>
    %8609 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8610 = stablehlo.divide %7345, %8609 : tensor<768x768xf32>
    %8611 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8612 = stablehlo.divide %7351, %8611 : tensor<768xf32>
    %8613 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8614 = stablehlo.divide %7357, %8613 : tensor<768x768xf32>
    %8615 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8616 = stablehlo.divide %7363, %8615 : tensor<768xf32>
    %8617 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8618 = stablehlo.divide %7369, %8617 : tensor<768xf32>
    %8619 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8620 = stablehlo.divide %7375, %8619 : tensor<768xf32>
    %8621 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8622 = stablehlo.divide %7381, %8621 : tensor<3072x768xf32>
    %8623 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8624 = stablehlo.divide %7387, %8623 : tensor<3072xf32>
    %8625 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8626 = stablehlo.divide %7393, %8625 : tensor<768x3072xf32>
    %8627 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8628 = stablehlo.divide %7399, %8627 : tensor<768xf32>
    %8629 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8630 = stablehlo.divide %7405, %8629 : tensor<768xf32>
    %8631 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8632 = stablehlo.divide %7411, %8631 : tensor<768xf32>
    %8633 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8634 = stablehlo.divide %7417, %8633 : tensor<768x768xf32>
    %8635 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8636 = stablehlo.divide %7423, %8635 : tensor<768xf32>
    %8637 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8638 = stablehlo.divide %7429, %8637 : tensor<768x768xf32>
    %8639 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8640 = stablehlo.divide %7435, %8639 : tensor<768xf32>
    %8641 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8642 = stablehlo.divide %7441, %8641 : tensor<768x768xf32>
    %8643 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8644 = stablehlo.divide %7447, %8643 : tensor<768xf32>
    %8645 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8646 = stablehlo.divide %7453, %8645 : tensor<768x768xf32>
    %8647 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8648 = stablehlo.divide %7459, %8647 : tensor<768xf32>
    %8649 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8650 = stablehlo.divide %7465, %8649 : tensor<768xf32>
    %8651 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8652 = stablehlo.divide %7471, %8651 : tensor<768xf32>
    %8653 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8654 = stablehlo.divide %7477, %8653 : tensor<3072x768xf32>
    %8655 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8656 = stablehlo.divide %7483, %8655 : tensor<3072xf32>
    %8657 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8658 = stablehlo.divide %7489, %8657 : tensor<768x3072xf32>
    %8659 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8660 = stablehlo.divide %7495, %8659 : tensor<768xf32>
    %8661 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8662 = stablehlo.divide %7501, %8661 : tensor<768xf32>
    %8663 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8664 = stablehlo.divide %7507, %8663 : tensor<768xf32>
    %8665 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8666 = stablehlo.divide %7513, %8665 : tensor<768x768xf32>
    %8667 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8668 = stablehlo.divide %7519, %8667 : tensor<768xf32>
    %8669 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8670 = stablehlo.divide %7525, %8669 : tensor<768x768xf32>
    %8671 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8672 = stablehlo.divide %7531, %8671 : tensor<768xf32>
    %8673 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8674 = stablehlo.divide %7537, %8673 : tensor<768x768xf32>
    %8675 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8676 = stablehlo.divide %7543, %8675 : tensor<768xf32>
    %8677 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8678 = stablehlo.divide %7549, %8677 : tensor<768x768xf32>
    %8679 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8680 = stablehlo.divide %7555, %8679 : tensor<768xf32>
    %8681 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8682 = stablehlo.divide %7561, %8681 : tensor<768xf32>
    %8683 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8684 = stablehlo.divide %7567, %8683 : tensor<768xf32>
    %8685 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8686 = stablehlo.divide %7573, %8685 : tensor<3072x768xf32>
    %8687 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8688 = stablehlo.divide %7579, %8687 : tensor<3072xf32>
    %8689 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8690 = stablehlo.divide %7585, %8689 : tensor<768x3072xf32>
    %8691 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8692 = stablehlo.divide %7591, %8691 : tensor<768xf32>
    %8693 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8694 = stablehlo.divide %7597, %8693 : tensor<768xf32>
    %8695 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8696 = stablehlo.divide %7603, %8695 : tensor<768xf32>
    %8697 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8698 = stablehlo.divide %7609, %8697 : tensor<768x768xf32>
    %8699 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8700 = stablehlo.divide %7615, %8699 : tensor<768xf32>
    %8701 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8702 = stablehlo.divide %7621, %8701 : tensor<768x768xf32>
    %8703 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8704 = stablehlo.divide %7627, %8703 : tensor<768xf32>
    %8705 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8706 = stablehlo.divide %7633, %8705 : tensor<768x768xf32>
    %8707 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8708 = stablehlo.divide %7639, %8707 : tensor<768xf32>
    %8709 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8710 = stablehlo.divide %7645, %8709 : tensor<768x768xf32>
    %8711 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8712 = stablehlo.divide %7651, %8711 : tensor<768xf32>
    %8713 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8714 = stablehlo.divide %7657, %8713 : tensor<768xf32>
    %8715 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8716 = stablehlo.divide %7663, %8715 : tensor<768xf32>
    %8717 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8718 = stablehlo.divide %7669, %8717 : tensor<3072x768xf32>
    %8719 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8720 = stablehlo.divide %7675, %8719 : tensor<3072xf32>
    %8721 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8722 = stablehlo.divide %7681, %8721 : tensor<768x3072xf32>
    %8723 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8724 = stablehlo.divide %7687, %8723 : tensor<768xf32>
    %8725 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8726 = stablehlo.divide %7693, %8725 : tensor<768xf32>
    %8727 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8728 = stablehlo.divide %7699, %8727 : tensor<768xf32>
    %8729 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8730 = stablehlo.divide %7705, %8729 : tensor<768x768xf32>
    %8731 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8732 = stablehlo.divide %7711, %8731 : tensor<768xf32>
    %8733 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8734 = stablehlo.divide %7717, %8733 : tensor<768x768xf32>
    %8735 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8736 = stablehlo.divide %7723, %8735 : tensor<768xf32>
    %8737 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8738 = stablehlo.divide %7729, %8737 : tensor<768x768xf32>
    %8739 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8740 = stablehlo.divide %7735, %8739 : tensor<768xf32>
    %8741 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8742 = stablehlo.divide %7741, %8741 : tensor<768x768xf32>
    %8743 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8744 = stablehlo.divide %7747, %8743 : tensor<768xf32>
    %8745 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8746 = stablehlo.divide %7753, %8745 : tensor<768xf32>
    %8747 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8748 = stablehlo.divide %7759, %8747 : tensor<768xf32>
    %8749 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8750 = stablehlo.divide %7765, %8749 : tensor<3072x768xf32>
    %8751 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8752 = stablehlo.divide %7771, %8751 : tensor<3072xf32>
    %8753 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8754 = stablehlo.divide %7777, %8753 : tensor<768x3072xf32>
    %8755 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8756 = stablehlo.divide %7783, %8755 : tensor<768xf32>
    %8757 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8758 = stablehlo.divide %7789, %8757 : tensor<768xf32>
    %8759 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8760 = stablehlo.divide %7795, %8759 : tensor<768xf32>
    %8761 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8762 = stablehlo.divide %7801, %8761 : tensor<768x768xf32>
    %8763 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8764 = stablehlo.divide %7807, %8763 : tensor<768xf32>
    %8765 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8766 = stablehlo.divide %7813, %8765 : tensor<768x768xf32>
    %8767 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8768 = stablehlo.divide %7819, %8767 : tensor<768xf32>
    %8769 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8770 = stablehlo.divide %7825, %8769 : tensor<768x768xf32>
    %8771 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8772 = stablehlo.divide %7831, %8771 : tensor<768xf32>
    %8773 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8774 = stablehlo.divide %7837, %8773 : tensor<768x768xf32>
    %8775 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8776 = stablehlo.divide %7843, %8775 : tensor<768xf32>
    %8777 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8778 = stablehlo.divide %7849, %8777 : tensor<768xf32>
    %8779 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8780 = stablehlo.divide %7855, %8779 : tensor<768xf32>
    %8781 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8782 = stablehlo.divide %7861, %8781 : tensor<3072x768xf32>
    %8783 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8784 = stablehlo.divide %7867, %8783 : tensor<3072xf32>
    %8785 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8786 = stablehlo.divide %7873, %8785 : tensor<768x3072xf32>
    %8787 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8788 = stablehlo.divide %7879, %8787 : tensor<768xf32>
    %8789 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8790 = stablehlo.divide %7885, %8789 : tensor<768xf32>
    %8791 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8792 = stablehlo.divide %7891, %8791 : tensor<768xf32>
    %8793 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8794 = stablehlo.divide %7897, %8793 : tensor<768x768xf32>
    %8795 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8796 = stablehlo.divide %7903, %8795 : tensor<768xf32>
    %8797 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8798 = stablehlo.divide %7909, %8797 : tensor<768x768xf32>
    %8799 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8800 = stablehlo.divide %7915, %8799 : tensor<768xf32>
    %8801 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8802 = stablehlo.divide %7921, %8801 : tensor<768x768xf32>
    %8803 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8804 = stablehlo.divide %7927, %8803 : tensor<768xf32>
    %8805 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8806 = stablehlo.divide %7933, %8805 : tensor<768x768xf32>
    %8807 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8808 = stablehlo.divide %7939, %8807 : tensor<768xf32>
    %8809 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8810 = stablehlo.divide %7945, %8809 : tensor<768xf32>
    %8811 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8812 = stablehlo.divide %7951, %8811 : tensor<768xf32>
    %8813 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8814 = stablehlo.divide %7957, %8813 : tensor<3072x768xf32>
    %8815 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8816 = stablehlo.divide %7963, %8815 : tensor<3072xf32>
    %8817 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8818 = stablehlo.divide %7969, %8817 : tensor<768x3072xf32>
    %8819 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8820 = stablehlo.divide %7975, %8819 : tensor<768xf32>
    %8821 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8822 = stablehlo.divide %7981, %8821 : tensor<768xf32>
    %8823 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8824 = stablehlo.divide %7987, %8823 : tensor<768xf32>
    %8825 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8826 = stablehlo.divide %7993, %8825 : tensor<768x768xf32>
    %8827 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8828 = stablehlo.divide %7999, %8827 : tensor<768xf32>
    %8829 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8830 = stablehlo.divide %8005, %8829 : tensor<768xf32>
    %8831 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8832 = stablehlo.divide %8011, %8831 : tensor<768xf32>
    %8833 = stablehlo.broadcast_in_dim %8430, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8834 = stablehlo.divide %8017, %8833 : tensor<30522xf32>
    %8835 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8836 = stablehlo.add %8432, %8835 : tensor<30522x768xf32>
    %8837 = stablehlo.sqrt %8836 : tensor<30522x768xf32>
    %cst_653 = stablehlo.constant dense<9.99999993E-9> : tensor<f32>
    %8838 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8839 = stablehlo.add %8837, %8838 : tensor<30522x768xf32>
    %8840 = stablehlo.divide %8025, %8839 : tensor<30522x768xf32>
    %8841 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8842 = stablehlo.add %8434, %8841 : tensor<512x768xf32>
    %8843 = stablehlo.sqrt %8842 : tensor<512x768xf32>
    %8844 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8845 = stablehlo.add %8843, %8844 : tensor<512x768xf32>
    %8846 = stablehlo.divide %8027, %8845 : tensor<512x768xf32>
    %8847 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8848 = stablehlo.add %8436, %8847 : tensor<2x768xf32>
    %8849 = stablehlo.sqrt %8848 : tensor<2x768xf32>
    %8850 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8851 = stablehlo.add %8849, %8850 : tensor<2x768xf32>
    %8852 = stablehlo.divide %8029, %8851 : tensor<2x768xf32>
    %8853 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8854 = stablehlo.add %8438, %8853 : tensor<768xf32>
    %8855 = stablehlo.sqrt %8854 : tensor<768xf32>
    %8856 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8857 = stablehlo.add %8855, %8856 : tensor<768xf32>
    %8858 = stablehlo.divide %8031, %8857 : tensor<768xf32>
    %8859 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8860 = stablehlo.add %8440, %8859 : tensor<768xf32>
    %8861 = stablehlo.sqrt %8860 : tensor<768xf32>
    %8862 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8863 = stablehlo.add %8861, %8862 : tensor<768xf32>
    %8864 = stablehlo.divide %8033, %8863 : tensor<768xf32>
    %8865 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8866 = stablehlo.add %8442, %8865 : tensor<768x768xf32>
    %8867 = stablehlo.sqrt %8866 : tensor<768x768xf32>
    %8868 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8869 = stablehlo.add %8867, %8868 : tensor<768x768xf32>
    %8870 = stablehlo.divide %8035, %8869 : tensor<768x768xf32>
    %8871 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8872 = stablehlo.add %8444, %8871 : tensor<768xf32>
    %8873 = stablehlo.sqrt %8872 : tensor<768xf32>
    %8874 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8875 = stablehlo.add %8873, %8874 : tensor<768xf32>
    %8876 = stablehlo.divide %8037, %8875 : tensor<768xf32>
    %8877 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8878 = stablehlo.add %8446, %8877 : tensor<768x768xf32>
    %8879 = stablehlo.sqrt %8878 : tensor<768x768xf32>
    %8880 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8881 = stablehlo.add %8879, %8880 : tensor<768x768xf32>
    %8882 = stablehlo.divide %8039, %8881 : tensor<768x768xf32>
    %8883 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8884 = stablehlo.add %8448, %8883 : tensor<768xf32>
    %8885 = stablehlo.sqrt %8884 : tensor<768xf32>
    %8886 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8887 = stablehlo.add %8885, %8886 : tensor<768xf32>
    %8888 = stablehlo.divide %8041, %8887 : tensor<768xf32>
    %8889 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8890 = stablehlo.add %8450, %8889 : tensor<768x768xf32>
    %8891 = stablehlo.sqrt %8890 : tensor<768x768xf32>
    %8892 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8893 = stablehlo.add %8891, %8892 : tensor<768x768xf32>
    %8894 = stablehlo.divide %8043, %8893 : tensor<768x768xf32>
    %8895 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8896 = stablehlo.add %8452, %8895 : tensor<768xf32>
    %8897 = stablehlo.sqrt %8896 : tensor<768xf32>
    %8898 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8899 = stablehlo.add %8897, %8898 : tensor<768xf32>
    %8900 = stablehlo.divide %8045, %8899 : tensor<768xf32>
    %8901 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8902 = stablehlo.add %8454, %8901 : tensor<768x768xf32>
    %8903 = stablehlo.sqrt %8902 : tensor<768x768xf32>
    %8904 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8905 = stablehlo.add %8903, %8904 : tensor<768x768xf32>
    %8906 = stablehlo.divide %8047, %8905 : tensor<768x768xf32>
    %8907 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8908 = stablehlo.add %8456, %8907 : tensor<768xf32>
    %8909 = stablehlo.sqrt %8908 : tensor<768xf32>
    %8910 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8911 = stablehlo.add %8909, %8910 : tensor<768xf32>
    %8912 = stablehlo.divide %8049, %8911 : tensor<768xf32>
    %8913 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8914 = stablehlo.add %8458, %8913 : tensor<768xf32>
    %8915 = stablehlo.sqrt %8914 : tensor<768xf32>
    %8916 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8917 = stablehlo.add %8915, %8916 : tensor<768xf32>
    %8918 = stablehlo.divide %8051, %8917 : tensor<768xf32>
    %8919 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8920 = stablehlo.add %8460, %8919 : tensor<768xf32>
    %8921 = stablehlo.sqrt %8920 : tensor<768xf32>
    %8922 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8923 = stablehlo.add %8921, %8922 : tensor<768xf32>
    %8924 = stablehlo.divide %8053, %8923 : tensor<768xf32>
    %8925 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8926 = stablehlo.add %8462, %8925 : tensor<3072x768xf32>
    %8927 = stablehlo.sqrt %8926 : tensor<3072x768xf32>
    %8928 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8929 = stablehlo.add %8927, %8928 : tensor<3072x768xf32>
    %8930 = stablehlo.divide %8055, %8929 : tensor<3072x768xf32>
    %8931 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8932 = stablehlo.add %8464, %8931 : tensor<3072xf32>
    %8933 = stablehlo.sqrt %8932 : tensor<3072xf32>
    %8934 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8935 = stablehlo.add %8933, %8934 : tensor<3072xf32>
    %8936 = stablehlo.divide %8057, %8935 : tensor<3072xf32>
    %8937 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8938 = stablehlo.add %8466, %8937 : tensor<768x3072xf32>
    %8939 = stablehlo.sqrt %8938 : tensor<768x3072xf32>
    %8940 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8941 = stablehlo.add %8939, %8940 : tensor<768x3072xf32>
    %8942 = stablehlo.divide %8059, %8941 : tensor<768x3072xf32>
    %8943 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8944 = stablehlo.add %8468, %8943 : tensor<768xf32>
    %8945 = stablehlo.sqrt %8944 : tensor<768xf32>
    %8946 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8947 = stablehlo.add %8945, %8946 : tensor<768xf32>
    %8948 = stablehlo.divide %8061, %8947 : tensor<768xf32>
    %8949 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8950 = stablehlo.add %8470, %8949 : tensor<768xf32>
    %8951 = stablehlo.sqrt %8950 : tensor<768xf32>
    %8952 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8953 = stablehlo.add %8951, %8952 : tensor<768xf32>
    %8954 = stablehlo.divide %8063, %8953 : tensor<768xf32>
    %8955 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8956 = stablehlo.add %8472, %8955 : tensor<768xf32>
    %8957 = stablehlo.sqrt %8956 : tensor<768xf32>
    %8958 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8959 = stablehlo.add %8957, %8958 : tensor<768xf32>
    %8960 = stablehlo.divide %8065, %8959 : tensor<768xf32>
    %8961 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8962 = stablehlo.add %8474, %8961 : tensor<768x768xf32>
    %8963 = stablehlo.sqrt %8962 : tensor<768x768xf32>
    %8964 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8965 = stablehlo.add %8963, %8964 : tensor<768x768xf32>
    %8966 = stablehlo.divide %8067, %8965 : tensor<768x768xf32>
    %8967 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8968 = stablehlo.add %8476, %8967 : tensor<768xf32>
    %8969 = stablehlo.sqrt %8968 : tensor<768xf32>
    %8970 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8971 = stablehlo.add %8969, %8970 : tensor<768xf32>
    %8972 = stablehlo.divide %8069, %8971 : tensor<768xf32>
    %8973 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8974 = stablehlo.add %8478, %8973 : tensor<768x768xf32>
    %8975 = stablehlo.sqrt %8974 : tensor<768x768xf32>
    %8976 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8977 = stablehlo.add %8975, %8976 : tensor<768x768xf32>
    %8978 = stablehlo.divide %8071, %8977 : tensor<768x768xf32>
    %8979 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8980 = stablehlo.add %8480, %8979 : tensor<768xf32>
    %8981 = stablehlo.sqrt %8980 : tensor<768xf32>
    %8982 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8983 = stablehlo.add %8981, %8982 : tensor<768xf32>
    %8984 = stablehlo.divide %8073, %8983 : tensor<768xf32>
    %8985 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8986 = stablehlo.add %8482, %8985 : tensor<768x768xf32>
    %8987 = stablehlo.sqrt %8986 : tensor<768x768xf32>
    %8988 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8989 = stablehlo.add %8987, %8988 : tensor<768x768xf32>
    %8990 = stablehlo.divide %8075, %8989 : tensor<768x768xf32>
    %8991 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8992 = stablehlo.add %8484, %8991 : tensor<768xf32>
    %8993 = stablehlo.sqrt %8992 : tensor<768xf32>
    %8994 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8995 = stablehlo.add %8993, %8994 : tensor<768xf32>
    %8996 = stablehlo.divide %8077, %8995 : tensor<768xf32>
    %8997 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8998 = stablehlo.add %8486, %8997 : tensor<768x768xf32>
    %8999 = stablehlo.sqrt %8998 : tensor<768x768xf32>
    %9000 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9001 = stablehlo.add %8999, %9000 : tensor<768x768xf32>
    %9002 = stablehlo.divide %8079, %9001 : tensor<768x768xf32>
    %9003 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9004 = stablehlo.add %8488, %9003 : tensor<768xf32>
    %9005 = stablehlo.sqrt %9004 : tensor<768xf32>
    %9006 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9007 = stablehlo.add %9005, %9006 : tensor<768xf32>
    %9008 = stablehlo.divide %8081, %9007 : tensor<768xf32>
    %9009 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9010 = stablehlo.add %8490, %9009 : tensor<768xf32>
    %9011 = stablehlo.sqrt %9010 : tensor<768xf32>
    %9012 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9013 = stablehlo.add %9011, %9012 : tensor<768xf32>
    %9014 = stablehlo.divide %8083, %9013 : tensor<768xf32>
    %9015 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9016 = stablehlo.add %8492, %9015 : tensor<768xf32>
    %9017 = stablehlo.sqrt %9016 : tensor<768xf32>
    %9018 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9019 = stablehlo.add %9017, %9018 : tensor<768xf32>
    %9020 = stablehlo.divide %8085, %9019 : tensor<768xf32>
    %9021 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9022 = stablehlo.add %8494, %9021 : tensor<3072x768xf32>
    %9023 = stablehlo.sqrt %9022 : tensor<3072x768xf32>
    %9024 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9025 = stablehlo.add %9023, %9024 : tensor<3072x768xf32>
    %9026 = stablehlo.divide %8087, %9025 : tensor<3072x768xf32>
    %9027 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9028 = stablehlo.add %8496, %9027 : tensor<3072xf32>
    %9029 = stablehlo.sqrt %9028 : tensor<3072xf32>
    %9030 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9031 = stablehlo.add %9029, %9030 : tensor<3072xf32>
    %9032 = stablehlo.divide %8089, %9031 : tensor<3072xf32>
    %9033 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9034 = stablehlo.add %8498, %9033 : tensor<768x3072xf32>
    %9035 = stablehlo.sqrt %9034 : tensor<768x3072xf32>
    %9036 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9037 = stablehlo.add %9035, %9036 : tensor<768x3072xf32>
    %9038 = stablehlo.divide %8091, %9037 : tensor<768x3072xf32>
    %9039 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9040 = stablehlo.add %8500, %9039 : tensor<768xf32>
    %9041 = stablehlo.sqrt %9040 : tensor<768xf32>
    %9042 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9043 = stablehlo.add %9041, %9042 : tensor<768xf32>
    %9044 = stablehlo.divide %8093, %9043 : tensor<768xf32>
    %9045 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9046 = stablehlo.add %8502, %9045 : tensor<768xf32>
    %9047 = stablehlo.sqrt %9046 : tensor<768xf32>
    %9048 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9049 = stablehlo.add %9047, %9048 : tensor<768xf32>
    %9050 = stablehlo.divide %8095, %9049 : tensor<768xf32>
    %9051 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9052 = stablehlo.add %8504, %9051 : tensor<768xf32>
    %9053 = stablehlo.sqrt %9052 : tensor<768xf32>
    %9054 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9055 = stablehlo.add %9053, %9054 : tensor<768xf32>
    %9056 = stablehlo.divide %8097, %9055 : tensor<768xf32>
    %9057 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9058 = stablehlo.add %8506, %9057 : tensor<768x768xf32>
    %9059 = stablehlo.sqrt %9058 : tensor<768x768xf32>
    %9060 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9061 = stablehlo.add %9059, %9060 : tensor<768x768xf32>
    %9062 = stablehlo.divide %8099, %9061 : tensor<768x768xf32>
    %9063 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9064 = stablehlo.add %8508, %9063 : tensor<768xf32>
    %9065 = stablehlo.sqrt %9064 : tensor<768xf32>
    %9066 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9067 = stablehlo.add %9065, %9066 : tensor<768xf32>
    %9068 = stablehlo.divide %8101, %9067 : tensor<768xf32>
    %9069 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9070 = stablehlo.add %8510, %9069 : tensor<768x768xf32>
    %9071 = stablehlo.sqrt %9070 : tensor<768x768xf32>
    %9072 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9073 = stablehlo.add %9071, %9072 : tensor<768x768xf32>
    %9074 = stablehlo.divide %8103, %9073 : tensor<768x768xf32>
    %9075 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9076 = stablehlo.add %8512, %9075 : tensor<768xf32>
    %9077 = stablehlo.sqrt %9076 : tensor<768xf32>
    %9078 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9079 = stablehlo.add %9077, %9078 : tensor<768xf32>
    %9080 = stablehlo.divide %8105, %9079 : tensor<768xf32>
    %9081 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9082 = stablehlo.add %8514, %9081 : tensor<768x768xf32>
    %9083 = stablehlo.sqrt %9082 : tensor<768x768xf32>
    %9084 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9085 = stablehlo.add %9083, %9084 : tensor<768x768xf32>
    %9086 = stablehlo.divide %8107, %9085 : tensor<768x768xf32>
    %9087 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9088 = stablehlo.add %8516, %9087 : tensor<768xf32>
    %9089 = stablehlo.sqrt %9088 : tensor<768xf32>
    %9090 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9091 = stablehlo.add %9089, %9090 : tensor<768xf32>
    %9092 = stablehlo.divide %8109, %9091 : tensor<768xf32>
    %9093 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9094 = stablehlo.add %8518, %9093 : tensor<768x768xf32>
    %9095 = stablehlo.sqrt %9094 : tensor<768x768xf32>
    %9096 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9097 = stablehlo.add %9095, %9096 : tensor<768x768xf32>
    %9098 = stablehlo.divide %8111, %9097 : tensor<768x768xf32>
    %9099 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9100 = stablehlo.add %8520, %9099 : tensor<768xf32>
    %9101 = stablehlo.sqrt %9100 : tensor<768xf32>
    %9102 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9103 = stablehlo.add %9101, %9102 : tensor<768xf32>
    %9104 = stablehlo.divide %8113, %9103 : tensor<768xf32>
    %9105 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9106 = stablehlo.add %8522, %9105 : tensor<768xf32>
    %9107 = stablehlo.sqrt %9106 : tensor<768xf32>
    %9108 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9109 = stablehlo.add %9107, %9108 : tensor<768xf32>
    %9110 = stablehlo.divide %8115, %9109 : tensor<768xf32>
    %9111 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9112 = stablehlo.add %8524, %9111 : tensor<768xf32>
    %9113 = stablehlo.sqrt %9112 : tensor<768xf32>
    %9114 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9115 = stablehlo.add %9113, %9114 : tensor<768xf32>
    %9116 = stablehlo.divide %8117, %9115 : tensor<768xf32>
    %9117 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9118 = stablehlo.add %8526, %9117 : tensor<3072x768xf32>
    %9119 = stablehlo.sqrt %9118 : tensor<3072x768xf32>
    %9120 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9121 = stablehlo.add %9119, %9120 : tensor<3072x768xf32>
    %9122 = stablehlo.divide %8119, %9121 : tensor<3072x768xf32>
    %9123 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9124 = stablehlo.add %8528, %9123 : tensor<3072xf32>
    %9125 = stablehlo.sqrt %9124 : tensor<3072xf32>
    %9126 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9127 = stablehlo.add %9125, %9126 : tensor<3072xf32>
    %9128 = stablehlo.divide %8121, %9127 : tensor<3072xf32>
    %9129 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9130 = stablehlo.add %8530, %9129 : tensor<768x3072xf32>
    %9131 = stablehlo.sqrt %9130 : tensor<768x3072xf32>
    %9132 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9133 = stablehlo.add %9131, %9132 : tensor<768x3072xf32>
    %9134 = stablehlo.divide %8123, %9133 : tensor<768x3072xf32>
    %9135 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9136 = stablehlo.add %8532, %9135 : tensor<768xf32>
    %9137 = stablehlo.sqrt %9136 : tensor<768xf32>
    %9138 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9139 = stablehlo.add %9137, %9138 : tensor<768xf32>
    %9140 = stablehlo.divide %8125, %9139 : tensor<768xf32>
    %9141 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9142 = stablehlo.add %8534, %9141 : tensor<768xf32>
    %9143 = stablehlo.sqrt %9142 : tensor<768xf32>
    %9144 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9145 = stablehlo.add %9143, %9144 : tensor<768xf32>
    %9146 = stablehlo.divide %8127, %9145 : tensor<768xf32>
    %9147 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9148 = stablehlo.add %8536, %9147 : tensor<768xf32>
    %9149 = stablehlo.sqrt %9148 : tensor<768xf32>
    %9150 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9151 = stablehlo.add %9149, %9150 : tensor<768xf32>
    %9152 = stablehlo.divide %8129, %9151 : tensor<768xf32>
    %9153 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9154 = stablehlo.add %8538, %9153 : tensor<768x768xf32>
    %9155 = stablehlo.sqrt %9154 : tensor<768x768xf32>
    %9156 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9157 = stablehlo.add %9155, %9156 : tensor<768x768xf32>
    %9158 = stablehlo.divide %8131, %9157 : tensor<768x768xf32>
    %9159 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9160 = stablehlo.add %8540, %9159 : tensor<768xf32>
    %9161 = stablehlo.sqrt %9160 : tensor<768xf32>
    %9162 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9163 = stablehlo.add %9161, %9162 : tensor<768xf32>
    %9164 = stablehlo.divide %8133, %9163 : tensor<768xf32>
    %9165 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9166 = stablehlo.add %8542, %9165 : tensor<768x768xf32>
    %9167 = stablehlo.sqrt %9166 : tensor<768x768xf32>
    %9168 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9169 = stablehlo.add %9167, %9168 : tensor<768x768xf32>
    %9170 = stablehlo.divide %8135, %9169 : tensor<768x768xf32>
    %9171 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9172 = stablehlo.add %8544, %9171 : tensor<768xf32>
    %9173 = stablehlo.sqrt %9172 : tensor<768xf32>
    %9174 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9175 = stablehlo.add %9173, %9174 : tensor<768xf32>
    %9176 = stablehlo.divide %8137, %9175 : tensor<768xf32>
    %9177 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9178 = stablehlo.add %8546, %9177 : tensor<768x768xf32>
    %9179 = stablehlo.sqrt %9178 : tensor<768x768xf32>
    %9180 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9181 = stablehlo.add %9179, %9180 : tensor<768x768xf32>
    %9182 = stablehlo.divide %8139, %9181 : tensor<768x768xf32>
    %9183 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9184 = stablehlo.add %8548, %9183 : tensor<768xf32>
    %9185 = stablehlo.sqrt %9184 : tensor<768xf32>
    %9186 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9187 = stablehlo.add %9185, %9186 : tensor<768xf32>
    %9188 = stablehlo.divide %8141, %9187 : tensor<768xf32>
    %9189 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9190 = stablehlo.add %8550, %9189 : tensor<768x768xf32>
    %9191 = stablehlo.sqrt %9190 : tensor<768x768xf32>
    %9192 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9193 = stablehlo.add %9191, %9192 : tensor<768x768xf32>
    %9194 = stablehlo.divide %8143, %9193 : tensor<768x768xf32>
    %9195 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9196 = stablehlo.add %8552, %9195 : tensor<768xf32>
    %9197 = stablehlo.sqrt %9196 : tensor<768xf32>
    %9198 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9199 = stablehlo.add %9197, %9198 : tensor<768xf32>
    %9200 = stablehlo.divide %8145, %9199 : tensor<768xf32>
    %9201 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9202 = stablehlo.add %8554, %9201 : tensor<768xf32>
    %9203 = stablehlo.sqrt %9202 : tensor<768xf32>
    %9204 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9205 = stablehlo.add %9203, %9204 : tensor<768xf32>
    %9206 = stablehlo.divide %8147, %9205 : tensor<768xf32>
    %9207 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9208 = stablehlo.add %8556, %9207 : tensor<768xf32>
    %9209 = stablehlo.sqrt %9208 : tensor<768xf32>
    %9210 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9211 = stablehlo.add %9209, %9210 : tensor<768xf32>
    %9212 = stablehlo.divide %8149, %9211 : tensor<768xf32>
    %9213 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9214 = stablehlo.add %8558, %9213 : tensor<3072x768xf32>
    %9215 = stablehlo.sqrt %9214 : tensor<3072x768xf32>
    %9216 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9217 = stablehlo.add %9215, %9216 : tensor<3072x768xf32>
    %9218 = stablehlo.divide %8151, %9217 : tensor<3072x768xf32>
    %9219 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9220 = stablehlo.add %8560, %9219 : tensor<3072xf32>
    %9221 = stablehlo.sqrt %9220 : tensor<3072xf32>
    %9222 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9223 = stablehlo.add %9221, %9222 : tensor<3072xf32>
    %9224 = stablehlo.divide %8153, %9223 : tensor<3072xf32>
    %9225 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9226 = stablehlo.add %8562, %9225 : tensor<768x3072xf32>
    %9227 = stablehlo.sqrt %9226 : tensor<768x3072xf32>
    %9228 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9229 = stablehlo.add %9227, %9228 : tensor<768x3072xf32>
    %9230 = stablehlo.divide %8155, %9229 : tensor<768x3072xf32>
    %9231 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9232 = stablehlo.add %8564, %9231 : tensor<768xf32>
    %9233 = stablehlo.sqrt %9232 : tensor<768xf32>
    %9234 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9235 = stablehlo.add %9233, %9234 : tensor<768xf32>
    %9236 = stablehlo.divide %8157, %9235 : tensor<768xf32>
    %9237 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9238 = stablehlo.add %8566, %9237 : tensor<768xf32>
    %9239 = stablehlo.sqrt %9238 : tensor<768xf32>
    %9240 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9241 = stablehlo.add %9239, %9240 : tensor<768xf32>
    %9242 = stablehlo.divide %8159, %9241 : tensor<768xf32>
    %9243 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9244 = stablehlo.add %8568, %9243 : tensor<768xf32>
    %9245 = stablehlo.sqrt %9244 : tensor<768xf32>
    %9246 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9247 = stablehlo.add %9245, %9246 : tensor<768xf32>
    %9248 = stablehlo.divide %8161, %9247 : tensor<768xf32>
    %9249 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9250 = stablehlo.add %8570, %9249 : tensor<768x768xf32>
    %9251 = stablehlo.sqrt %9250 : tensor<768x768xf32>
    %9252 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9253 = stablehlo.add %9251, %9252 : tensor<768x768xf32>
    %9254 = stablehlo.divide %8163, %9253 : tensor<768x768xf32>
    %9255 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9256 = stablehlo.add %8572, %9255 : tensor<768xf32>
    %9257 = stablehlo.sqrt %9256 : tensor<768xf32>
    %9258 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9259 = stablehlo.add %9257, %9258 : tensor<768xf32>
    %9260 = stablehlo.divide %8165, %9259 : tensor<768xf32>
    %9261 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9262 = stablehlo.add %8574, %9261 : tensor<768x768xf32>
    %9263 = stablehlo.sqrt %9262 : tensor<768x768xf32>
    %9264 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9265 = stablehlo.add %9263, %9264 : tensor<768x768xf32>
    %9266 = stablehlo.divide %8167, %9265 : tensor<768x768xf32>
    %9267 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9268 = stablehlo.add %8576, %9267 : tensor<768xf32>
    %9269 = stablehlo.sqrt %9268 : tensor<768xf32>
    %9270 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9271 = stablehlo.add %9269, %9270 : tensor<768xf32>
    %9272 = stablehlo.divide %8169, %9271 : tensor<768xf32>
    %9273 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9274 = stablehlo.add %8578, %9273 : tensor<768x768xf32>
    %9275 = stablehlo.sqrt %9274 : tensor<768x768xf32>
    %9276 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9277 = stablehlo.add %9275, %9276 : tensor<768x768xf32>
    %9278 = stablehlo.divide %8171, %9277 : tensor<768x768xf32>
    %9279 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9280 = stablehlo.add %8580, %9279 : tensor<768xf32>
    %9281 = stablehlo.sqrt %9280 : tensor<768xf32>
    %9282 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9283 = stablehlo.add %9281, %9282 : tensor<768xf32>
    %9284 = stablehlo.divide %8173, %9283 : tensor<768xf32>
    %9285 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9286 = stablehlo.add %8582, %9285 : tensor<768x768xf32>
    %9287 = stablehlo.sqrt %9286 : tensor<768x768xf32>
    %9288 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9289 = stablehlo.add %9287, %9288 : tensor<768x768xf32>
    %9290 = stablehlo.divide %8175, %9289 : tensor<768x768xf32>
    %9291 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9292 = stablehlo.add %8584, %9291 : tensor<768xf32>
    %9293 = stablehlo.sqrt %9292 : tensor<768xf32>
    %9294 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9295 = stablehlo.add %9293, %9294 : tensor<768xf32>
    %9296 = stablehlo.divide %8177, %9295 : tensor<768xf32>
    %9297 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9298 = stablehlo.add %8586, %9297 : tensor<768xf32>
    %9299 = stablehlo.sqrt %9298 : tensor<768xf32>
    %9300 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9301 = stablehlo.add %9299, %9300 : tensor<768xf32>
    %9302 = stablehlo.divide %8179, %9301 : tensor<768xf32>
    %9303 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9304 = stablehlo.add %8588, %9303 : tensor<768xf32>
    %9305 = stablehlo.sqrt %9304 : tensor<768xf32>
    %9306 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9307 = stablehlo.add %9305, %9306 : tensor<768xf32>
    %9308 = stablehlo.divide %8181, %9307 : tensor<768xf32>
    %9309 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9310 = stablehlo.add %8590, %9309 : tensor<3072x768xf32>
    %9311 = stablehlo.sqrt %9310 : tensor<3072x768xf32>
    %9312 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9313 = stablehlo.add %9311, %9312 : tensor<3072x768xf32>
    %9314 = stablehlo.divide %8183, %9313 : tensor<3072x768xf32>
    %9315 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9316 = stablehlo.add %8592, %9315 : tensor<3072xf32>
    %9317 = stablehlo.sqrt %9316 : tensor<3072xf32>
    %9318 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9319 = stablehlo.add %9317, %9318 : tensor<3072xf32>
    %9320 = stablehlo.divide %8185, %9319 : tensor<3072xf32>
    %9321 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9322 = stablehlo.add %8594, %9321 : tensor<768x3072xf32>
    %9323 = stablehlo.sqrt %9322 : tensor<768x3072xf32>
    %9324 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9325 = stablehlo.add %9323, %9324 : tensor<768x3072xf32>
    %9326 = stablehlo.divide %8187, %9325 : tensor<768x3072xf32>
    %9327 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9328 = stablehlo.add %8596, %9327 : tensor<768xf32>
    %9329 = stablehlo.sqrt %9328 : tensor<768xf32>
    %9330 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9331 = stablehlo.add %9329, %9330 : tensor<768xf32>
    %9332 = stablehlo.divide %8189, %9331 : tensor<768xf32>
    %9333 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9334 = stablehlo.add %8598, %9333 : tensor<768xf32>
    %9335 = stablehlo.sqrt %9334 : tensor<768xf32>
    %9336 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9337 = stablehlo.add %9335, %9336 : tensor<768xf32>
    %9338 = stablehlo.divide %8191, %9337 : tensor<768xf32>
    %9339 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9340 = stablehlo.add %8600, %9339 : tensor<768xf32>
    %9341 = stablehlo.sqrt %9340 : tensor<768xf32>
    %9342 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9343 = stablehlo.add %9341, %9342 : tensor<768xf32>
    %9344 = stablehlo.divide %8193, %9343 : tensor<768xf32>
    %9345 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9346 = stablehlo.add %8602, %9345 : tensor<768x768xf32>
    %9347 = stablehlo.sqrt %9346 : tensor<768x768xf32>
    %9348 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9349 = stablehlo.add %9347, %9348 : tensor<768x768xf32>
    %9350 = stablehlo.divide %8195, %9349 : tensor<768x768xf32>
    %9351 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9352 = stablehlo.add %8604, %9351 : tensor<768xf32>
    %9353 = stablehlo.sqrt %9352 : tensor<768xf32>
    %9354 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9355 = stablehlo.add %9353, %9354 : tensor<768xf32>
    %9356 = stablehlo.divide %8197, %9355 : tensor<768xf32>
    %9357 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9358 = stablehlo.add %8606, %9357 : tensor<768x768xf32>
    %9359 = stablehlo.sqrt %9358 : tensor<768x768xf32>
    %9360 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9361 = stablehlo.add %9359, %9360 : tensor<768x768xf32>
    %9362 = stablehlo.divide %8199, %9361 : tensor<768x768xf32>
    %9363 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9364 = stablehlo.add %8608, %9363 : tensor<768xf32>
    %9365 = stablehlo.sqrt %9364 : tensor<768xf32>
    %9366 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9367 = stablehlo.add %9365, %9366 : tensor<768xf32>
    %9368 = stablehlo.divide %8201, %9367 : tensor<768xf32>
    %9369 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9370 = stablehlo.add %8610, %9369 : tensor<768x768xf32>
    %9371 = stablehlo.sqrt %9370 : tensor<768x768xf32>
    %9372 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9373 = stablehlo.add %9371, %9372 : tensor<768x768xf32>
    %9374 = stablehlo.divide %8203, %9373 : tensor<768x768xf32>
    %9375 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9376 = stablehlo.add %8612, %9375 : tensor<768xf32>
    %9377 = stablehlo.sqrt %9376 : tensor<768xf32>
    %9378 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9379 = stablehlo.add %9377, %9378 : tensor<768xf32>
    %9380 = stablehlo.divide %8205, %9379 : tensor<768xf32>
    %9381 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9382 = stablehlo.add %8614, %9381 : tensor<768x768xf32>
    %9383 = stablehlo.sqrt %9382 : tensor<768x768xf32>
    %9384 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9385 = stablehlo.add %9383, %9384 : tensor<768x768xf32>
    %9386 = stablehlo.divide %8207, %9385 : tensor<768x768xf32>
    %9387 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9388 = stablehlo.add %8616, %9387 : tensor<768xf32>
    %9389 = stablehlo.sqrt %9388 : tensor<768xf32>
    %9390 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9391 = stablehlo.add %9389, %9390 : tensor<768xf32>
    %9392 = stablehlo.divide %8209, %9391 : tensor<768xf32>
    %9393 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9394 = stablehlo.add %8618, %9393 : tensor<768xf32>
    %9395 = stablehlo.sqrt %9394 : tensor<768xf32>
    %9396 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9397 = stablehlo.add %9395, %9396 : tensor<768xf32>
    %9398 = stablehlo.divide %8211, %9397 : tensor<768xf32>
    %9399 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9400 = stablehlo.add %8620, %9399 : tensor<768xf32>
    %9401 = stablehlo.sqrt %9400 : tensor<768xf32>
    %9402 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9403 = stablehlo.add %9401, %9402 : tensor<768xf32>
    %9404 = stablehlo.divide %8213, %9403 : tensor<768xf32>
    %9405 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9406 = stablehlo.add %8622, %9405 : tensor<3072x768xf32>
    %9407 = stablehlo.sqrt %9406 : tensor<3072x768xf32>
    %9408 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9409 = stablehlo.add %9407, %9408 : tensor<3072x768xf32>
    %9410 = stablehlo.divide %8215, %9409 : tensor<3072x768xf32>
    %9411 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9412 = stablehlo.add %8624, %9411 : tensor<3072xf32>
    %9413 = stablehlo.sqrt %9412 : tensor<3072xf32>
    %9414 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9415 = stablehlo.add %9413, %9414 : tensor<3072xf32>
    %9416 = stablehlo.divide %8217, %9415 : tensor<3072xf32>
    %9417 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9418 = stablehlo.add %8626, %9417 : tensor<768x3072xf32>
    %9419 = stablehlo.sqrt %9418 : tensor<768x3072xf32>
    %9420 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9421 = stablehlo.add %9419, %9420 : tensor<768x3072xf32>
    %9422 = stablehlo.divide %8219, %9421 : tensor<768x3072xf32>
    %9423 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9424 = stablehlo.add %8628, %9423 : tensor<768xf32>
    %9425 = stablehlo.sqrt %9424 : tensor<768xf32>
    %9426 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9427 = stablehlo.add %9425, %9426 : tensor<768xf32>
    %9428 = stablehlo.divide %8221, %9427 : tensor<768xf32>
    %9429 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9430 = stablehlo.add %8630, %9429 : tensor<768xf32>
    %9431 = stablehlo.sqrt %9430 : tensor<768xf32>
    %9432 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9433 = stablehlo.add %9431, %9432 : tensor<768xf32>
    %9434 = stablehlo.divide %8223, %9433 : tensor<768xf32>
    %9435 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9436 = stablehlo.add %8632, %9435 : tensor<768xf32>
    %9437 = stablehlo.sqrt %9436 : tensor<768xf32>
    %9438 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9439 = stablehlo.add %9437, %9438 : tensor<768xf32>
    %9440 = stablehlo.divide %8225, %9439 : tensor<768xf32>
    %9441 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9442 = stablehlo.add %8634, %9441 : tensor<768x768xf32>
    %9443 = stablehlo.sqrt %9442 : tensor<768x768xf32>
    %9444 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9445 = stablehlo.add %9443, %9444 : tensor<768x768xf32>
    %9446 = stablehlo.divide %8227, %9445 : tensor<768x768xf32>
    %9447 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9448 = stablehlo.add %8636, %9447 : tensor<768xf32>
    %9449 = stablehlo.sqrt %9448 : tensor<768xf32>
    %9450 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9451 = stablehlo.add %9449, %9450 : tensor<768xf32>
    %9452 = stablehlo.divide %8229, %9451 : tensor<768xf32>
    %9453 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9454 = stablehlo.add %8638, %9453 : tensor<768x768xf32>
    %9455 = stablehlo.sqrt %9454 : tensor<768x768xf32>
    %9456 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9457 = stablehlo.add %9455, %9456 : tensor<768x768xf32>
    %9458 = stablehlo.divide %8231, %9457 : tensor<768x768xf32>
    %9459 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9460 = stablehlo.add %8640, %9459 : tensor<768xf32>
    %9461 = stablehlo.sqrt %9460 : tensor<768xf32>
    %9462 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9463 = stablehlo.add %9461, %9462 : tensor<768xf32>
    %9464 = stablehlo.divide %8233, %9463 : tensor<768xf32>
    %9465 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9466 = stablehlo.add %8642, %9465 : tensor<768x768xf32>
    %9467 = stablehlo.sqrt %9466 : tensor<768x768xf32>
    %9468 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9469 = stablehlo.add %9467, %9468 : tensor<768x768xf32>
    %9470 = stablehlo.divide %8235, %9469 : tensor<768x768xf32>
    %9471 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9472 = stablehlo.add %8644, %9471 : tensor<768xf32>
    %9473 = stablehlo.sqrt %9472 : tensor<768xf32>
    %9474 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9475 = stablehlo.add %9473, %9474 : tensor<768xf32>
    %9476 = stablehlo.divide %8237, %9475 : tensor<768xf32>
    %9477 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9478 = stablehlo.add %8646, %9477 : tensor<768x768xf32>
    %9479 = stablehlo.sqrt %9478 : tensor<768x768xf32>
    %9480 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9481 = stablehlo.add %9479, %9480 : tensor<768x768xf32>
    %9482 = stablehlo.divide %8239, %9481 : tensor<768x768xf32>
    %9483 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9484 = stablehlo.add %8648, %9483 : tensor<768xf32>
    %9485 = stablehlo.sqrt %9484 : tensor<768xf32>
    %9486 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9487 = stablehlo.add %9485, %9486 : tensor<768xf32>
    %9488 = stablehlo.divide %8241, %9487 : tensor<768xf32>
    %9489 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9490 = stablehlo.add %8650, %9489 : tensor<768xf32>
    %9491 = stablehlo.sqrt %9490 : tensor<768xf32>
    %9492 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9493 = stablehlo.add %9491, %9492 : tensor<768xf32>
    %9494 = stablehlo.divide %8243, %9493 : tensor<768xf32>
    %9495 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9496 = stablehlo.add %8652, %9495 : tensor<768xf32>
    %9497 = stablehlo.sqrt %9496 : tensor<768xf32>
    %9498 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9499 = stablehlo.add %9497, %9498 : tensor<768xf32>
    %9500 = stablehlo.divide %8245, %9499 : tensor<768xf32>
    %9501 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9502 = stablehlo.add %8654, %9501 : tensor<3072x768xf32>
    %9503 = stablehlo.sqrt %9502 : tensor<3072x768xf32>
    %9504 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9505 = stablehlo.add %9503, %9504 : tensor<3072x768xf32>
    %9506 = stablehlo.divide %8247, %9505 : tensor<3072x768xf32>
    %9507 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9508 = stablehlo.add %8656, %9507 : tensor<3072xf32>
    %9509 = stablehlo.sqrt %9508 : tensor<3072xf32>
    %9510 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9511 = stablehlo.add %9509, %9510 : tensor<3072xf32>
    %9512 = stablehlo.divide %8249, %9511 : tensor<3072xf32>
    %9513 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9514 = stablehlo.add %8658, %9513 : tensor<768x3072xf32>
    %9515 = stablehlo.sqrt %9514 : tensor<768x3072xf32>
    %9516 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9517 = stablehlo.add %9515, %9516 : tensor<768x3072xf32>
    %9518 = stablehlo.divide %8251, %9517 : tensor<768x3072xf32>
    %9519 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9520 = stablehlo.add %8660, %9519 : tensor<768xf32>
    %9521 = stablehlo.sqrt %9520 : tensor<768xf32>
    %9522 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9523 = stablehlo.add %9521, %9522 : tensor<768xf32>
    %9524 = stablehlo.divide %8253, %9523 : tensor<768xf32>
    %9525 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9526 = stablehlo.add %8662, %9525 : tensor<768xf32>
    %9527 = stablehlo.sqrt %9526 : tensor<768xf32>
    %9528 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9529 = stablehlo.add %9527, %9528 : tensor<768xf32>
    %9530 = stablehlo.divide %8255, %9529 : tensor<768xf32>
    %9531 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9532 = stablehlo.add %8664, %9531 : tensor<768xf32>
    %9533 = stablehlo.sqrt %9532 : tensor<768xf32>
    %9534 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9535 = stablehlo.add %9533, %9534 : tensor<768xf32>
    %9536 = stablehlo.divide %8257, %9535 : tensor<768xf32>
    %9537 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9538 = stablehlo.add %8666, %9537 : tensor<768x768xf32>
    %9539 = stablehlo.sqrt %9538 : tensor<768x768xf32>
    %9540 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9541 = stablehlo.add %9539, %9540 : tensor<768x768xf32>
    %9542 = stablehlo.divide %8259, %9541 : tensor<768x768xf32>
    %9543 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9544 = stablehlo.add %8668, %9543 : tensor<768xf32>
    %9545 = stablehlo.sqrt %9544 : tensor<768xf32>
    %9546 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9547 = stablehlo.add %9545, %9546 : tensor<768xf32>
    %9548 = stablehlo.divide %8261, %9547 : tensor<768xf32>
    %9549 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9550 = stablehlo.add %8670, %9549 : tensor<768x768xf32>
    %9551 = stablehlo.sqrt %9550 : tensor<768x768xf32>
    %9552 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9553 = stablehlo.add %9551, %9552 : tensor<768x768xf32>
    %9554 = stablehlo.divide %8263, %9553 : tensor<768x768xf32>
    %9555 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9556 = stablehlo.add %8672, %9555 : tensor<768xf32>
    %9557 = stablehlo.sqrt %9556 : tensor<768xf32>
    %9558 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9559 = stablehlo.add %9557, %9558 : tensor<768xf32>
    %9560 = stablehlo.divide %8265, %9559 : tensor<768xf32>
    %9561 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9562 = stablehlo.add %8674, %9561 : tensor<768x768xf32>
    %9563 = stablehlo.sqrt %9562 : tensor<768x768xf32>
    %9564 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9565 = stablehlo.add %9563, %9564 : tensor<768x768xf32>
    %9566 = stablehlo.divide %8267, %9565 : tensor<768x768xf32>
    %9567 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9568 = stablehlo.add %8676, %9567 : tensor<768xf32>
    %9569 = stablehlo.sqrt %9568 : tensor<768xf32>
    %9570 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9571 = stablehlo.add %9569, %9570 : tensor<768xf32>
    %9572 = stablehlo.divide %8269, %9571 : tensor<768xf32>
    %9573 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9574 = stablehlo.add %8678, %9573 : tensor<768x768xf32>
    %9575 = stablehlo.sqrt %9574 : tensor<768x768xf32>
    %9576 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9577 = stablehlo.add %9575, %9576 : tensor<768x768xf32>
    %9578 = stablehlo.divide %8271, %9577 : tensor<768x768xf32>
    %9579 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9580 = stablehlo.add %8680, %9579 : tensor<768xf32>
    %9581 = stablehlo.sqrt %9580 : tensor<768xf32>
    %9582 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9583 = stablehlo.add %9581, %9582 : tensor<768xf32>
    %9584 = stablehlo.divide %8273, %9583 : tensor<768xf32>
    %9585 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9586 = stablehlo.add %8682, %9585 : tensor<768xf32>
    %9587 = stablehlo.sqrt %9586 : tensor<768xf32>
    %9588 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9589 = stablehlo.add %9587, %9588 : tensor<768xf32>
    %9590 = stablehlo.divide %8275, %9589 : tensor<768xf32>
    %9591 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9592 = stablehlo.add %8684, %9591 : tensor<768xf32>
    %9593 = stablehlo.sqrt %9592 : tensor<768xf32>
    %9594 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9595 = stablehlo.add %9593, %9594 : tensor<768xf32>
    %9596 = stablehlo.divide %8277, %9595 : tensor<768xf32>
    %9597 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9598 = stablehlo.add %8686, %9597 : tensor<3072x768xf32>
    %9599 = stablehlo.sqrt %9598 : tensor<3072x768xf32>
    %9600 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9601 = stablehlo.add %9599, %9600 : tensor<3072x768xf32>
    %9602 = stablehlo.divide %8279, %9601 : tensor<3072x768xf32>
    %9603 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9604 = stablehlo.add %8688, %9603 : tensor<3072xf32>
    %9605 = stablehlo.sqrt %9604 : tensor<3072xf32>
    %9606 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9607 = stablehlo.add %9605, %9606 : tensor<3072xf32>
    %9608 = stablehlo.divide %8281, %9607 : tensor<3072xf32>
    %9609 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9610 = stablehlo.add %8690, %9609 : tensor<768x3072xf32>
    %9611 = stablehlo.sqrt %9610 : tensor<768x3072xf32>
    %9612 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9613 = stablehlo.add %9611, %9612 : tensor<768x3072xf32>
    %9614 = stablehlo.divide %8283, %9613 : tensor<768x3072xf32>
    %9615 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9616 = stablehlo.add %8692, %9615 : tensor<768xf32>
    %9617 = stablehlo.sqrt %9616 : tensor<768xf32>
    %9618 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9619 = stablehlo.add %9617, %9618 : tensor<768xf32>
    %9620 = stablehlo.divide %8285, %9619 : tensor<768xf32>
    %9621 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9622 = stablehlo.add %8694, %9621 : tensor<768xf32>
    %9623 = stablehlo.sqrt %9622 : tensor<768xf32>
    %9624 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9625 = stablehlo.add %9623, %9624 : tensor<768xf32>
    %9626 = stablehlo.divide %8287, %9625 : tensor<768xf32>
    %9627 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9628 = stablehlo.add %8696, %9627 : tensor<768xf32>
    %9629 = stablehlo.sqrt %9628 : tensor<768xf32>
    %9630 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9631 = stablehlo.add %9629, %9630 : tensor<768xf32>
    %9632 = stablehlo.divide %8289, %9631 : tensor<768xf32>
    %9633 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9634 = stablehlo.add %8698, %9633 : tensor<768x768xf32>
    %9635 = stablehlo.sqrt %9634 : tensor<768x768xf32>
    %9636 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9637 = stablehlo.add %9635, %9636 : tensor<768x768xf32>
    %9638 = stablehlo.divide %8291, %9637 : tensor<768x768xf32>
    %9639 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9640 = stablehlo.add %8700, %9639 : tensor<768xf32>
    %9641 = stablehlo.sqrt %9640 : tensor<768xf32>
    %9642 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9643 = stablehlo.add %9641, %9642 : tensor<768xf32>
    %9644 = stablehlo.divide %8293, %9643 : tensor<768xf32>
    %9645 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9646 = stablehlo.add %8702, %9645 : tensor<768x768xf32>
    %9647 = stablehlo.sqrt %9646 : tensor<768x768xf32>
    %9648 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9649 = stablehlo.add %9647, %9648 : tensor<768x768xf32>
    %9650 = stablehlo.divide %8295, %9649 : tensor<768x768xf32>
    %9651 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9652 = stablehlo.add %8704, %9651 : tensor<768xf32>
    %9653 = stablehlo.sqrt %9652 : tensor<768xf32>
    %9654 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9655 = stablehlo.add %9653, %9654 : tensor<768xf32>
    %9656 = stablehlo.divide %8297, %9655 : tensor<768xf32>
    %9657 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9658 = stablehlo.add %8706, %9657 : tensor<768x768xf32>
    %9659 = stablehlo.sqrt %9658 : tensor<768x768xf32>
    %9660 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9661 = stablehlo.add %9659, %9660 : tensor<768x768xf32>
    %9662 = stablehlo.divide %8299, %9661 : tensor<768x768xf32>
    %9663 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9664 = stablehlo.add %8708, %9663 : tensor<768xf32>
    %9665 = stablehlo.sqrt %9664 : tensor<768xf32>
    %9666 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9667 = stablehlo.add %9665, %9666 : tensor<768xf32>
    %9668 = stablehlo.divide %8301, %9667 : tensor<768xf32>
    %9669 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9670 = stablehlo.add %8710, %9669 : tensor<768x768xf32>
    %9671 = stablehlo.sqrt %9670 : tensor<768x768xf32>
    %9672 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9673 = stablehlo.add %9671, %9672 : tensor<768x768xf32>
    %9674 = stablehlo.divide %8303, %9673 : tensor<768x768xf32>
    %9675 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9676 = stablehlo.add %8712, %9675 : tensor<768xf32>
    %9677 = stablehlo.sqrt %9676 : tensor<768xf32>
    %9678 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9679 = stablehlo.add %9677, %9678 : tensor<768xf32>
    %9680 = stablehlo.divide %8305, %9679 : tensor<768xf32>
    %9681 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9682 = stablehlo.add %8714, %9681 : tensor<768xf32>
    %9683 = stablehlo.sqrt %9682 : tensor<768xf32>
    %9684 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9685 = stablehlo.add %9683, %9684 : tensor<768xf32>
    %9686 = stablehlo.divide %8307, %9685 : tensor<768xf32>
    %9687 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9688 = stablehlo.add %8716, %9687 : tensor<768xf32>
    %9689 = stablehlo.sqrt %9688 : tensor<768xf32>
    %9690 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9691 = stablehlo.add %9689, %9690 : tensor<768xf32>
    %9692 = stablehlo.divide %8309, %9691 : tensor<768xf32>
    %9693 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9694 = stablehlo.add %8718, %9693 : tensor<3072x768xf32>
    %9695 = stablehlo.sqrt %9694 : tensor<3072x768xf32>
    %9696 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9697 = stablehlo.add %9695, %9696 : tensor<3072x768xf32>
    %9698 = stablehlo.divide %8311, %9697 : tensor<3072x768xf32>
    %9699 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9700 = stablehlo.add %8720, %9699 : tensor<3072xf32>
    %9701 = stablehlo.sqrt %9700 : tensor<3072xf32>
    %9702 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9703 = stablehlo.add %9701, %9702 : tensor<3072xf32>
    %9704 = stablehlo.divide %8313, %9703 : tensor<3072xf32>
    %9705 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9706 = stablehlo.add %8722, %9705 : tensor<768x3072xf32>
    %9707 = stablehlo.sqrt %9706 : tensor<768x3072xf32>
    %9708 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9709 = stablehlo.add %9707, %9708 : tensor<768x3072xf32>
    %9710 = stablehlo.divide %8315, %9709 : tensor<768x3072xf32>
    %9711 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9712 = stablehlo.add %8724, %9711 : tensor<768xf32>
    %9713 = stablehlo.sqrt %9712 : tensor<768xf32>
    %9714 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9715 = stablehlo.add %9713, %9714 : tensor<768xf32>
    %9716 = stablehlo.divide %8317, %9715 : tensor<768xf32>
    %9717 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9718 = stablehlo.add %8726, %9717 : tensor<768xf32>
    %9719 = stablehlo.sqrt %9718 : tensor<768xf32>
    %9720 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9721 = stablehlo.add %9719, %9720 : tensor<768xf32>
    %9722 = stablehlo.divide %8319, %9721 : tensor<768xf32>
    %9723 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9724 = stablehlo.add %8728, %9723 : tensor<768xf32>
    %9725 = stablehlo.sqrt %9724 : tensor<768xf32>
    %9726 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9727 = stablehlo.add %9725, %9726 : tensor<768xf32>
    %9728 = stablehlo.divide %8321, %9727 : tensor<768xf32>
    %9729 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9730 = stablehlo.add %8730, %9729 : tensor<768x768xf32>
    %9731 = stablehlo.sqrt %9730 : tensor<768x768xf32>
    %9732 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9733 = stablehlo.add %9731, %9732 : tensor<768x768xf32>
    %9734 = stablehlo.divide %8323, %9733 : tensor<768x768xf32>
    %9735 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9736 = stablehlo.add %8732, %9735 : tensor<768xf32>
    %9737 = stablehlo.sqrt %9736 : tensor<768xf32>
    %9738 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9739 = stablehlo.add %9737, %9738 : tensor<768xf32>
    %9740 = stablehlo.divide %8325, %9739 : tensor<768xf32>
    %9741 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9742 = stablehlo.add %8734, %9741 : tensor<768x768xf32>
    %9743 = stablehlo.sqrt %9742 : tensor<768x768xf32>
    %9744 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9745 = stablehlo.add %9743, %9744 : tensor<768x768xf32>
    %9746 = stablehlo.divide %8327, %9745 : tensor<768x768xf32>
    %9747 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9748 = stablehlo.add %8736, %9747 : tensor<768xf32>
    %9749 = stablehlo.sqrt %9748 : tensor<768xf32>
    %9750 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9751 = stablehlo.add %9749, %9750 : tensor<768xf32>
    %9752 = stablehlo.divide %8329, %9751 : tensor<768xf32>
    %9753 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9754 = stablehlo.add %8738, %9753 : tensor<768x768xf32>
    %9755 = stablehlo.sqrt %9754 : tensor<768x768xf32>
    %9756 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9757 = stablehlo.add %9755, %9756 : tensor<768x768xf32>
    %9758 = stablehlo.divide %8331, %9757 : tensor<768x768xf32>
    %9759 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9760 = stablehlo.add %8740, %9759 : tensor<768xf32>
    %9761 = stablehlo.sqrt %9760 : tensor<768xf32>
    %9762 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9763 = stablehlo.add %9761, %9762 : tensor<768xf32>
    %9764 = stablehlo.divide %8333, %9763 : tensor<768xf32>
    %9765 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9766 = stablehlo.add %8742, %9765 : tensor<768x768xf32>
    %9767 = stablehlo.sqrt %9766 : tensor<768x768xf32>
    %9768 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9769 = stablehlo.add %9767, %9768 : tensor<768x768xf32>
    %9770 = stablehlo.divide %8335, %9769 : tensor<768x768xf32>
    %9771 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9772 = stablehlo.add %8744, %9771 : tensor<768xf32>
    %9773 = stablehlo.sqrt %9772 : tensor<768xf32>
    %9774 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9775 = stablehlo.add %9773, %9774 : tensor<768xf32>
    %9776 = stablehlo.divide %8337, %9775 : tensor<768xf32>
    %9777 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9778 = stablehlo.add %8746, %9777 : tensor<768xf32>
    %9779 = stablehlo.sqrt %9778 : tensor<768xf32>
    %9780 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9781 = stablehlo.add %9779, %9780 : tensor<768xf32>
    %9782 = stablehlo.divide %8339, %9781 : tensor<768xf32>
    %9783 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9784 = stablehlo.add %8748, %9783 : tensor<768xf32>
    %9785 = stablehlo.sqrt %9784 : tensor<768xf32>
    %9786 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9787 = stablehlo.add %9785, %9786 : tensor<768xf32>
    %9788 = stablehlo.divide %8341, %9787 : tensor<768xf32>
    %9789 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9790 = stablehlo.add %8750, %9789 : tensor<3072x768xf32>
    %9791 = stablehlo.sqrt %9790 : tensor<3072x768xf32>
    %9792 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9793 = stablehlo.add %9791, %9792 : tensor<3072x768xf32>
    %9794 = stablehlo.divide %8343, %9793 : tensor<3072x768xf32>
    %9795 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9796 = stablehlo.add %8752, %9795 : tensor<3072xf32>
    %9797 = stablehlo.sqrt %9796 : tensor<3072xf32>
    %9798 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9799 = stablehlo.add %9797, %9798 : tensor<3072xf32>
    %9800 = stablehlo.divide %8345, %9799 : tensor<3072xf32>
    %9801 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9802 = stablehlo.add %8754, %9801 : tensor<768x3072xf32>
    %9803 = stablehlo.sqrt %9802 : tensor<768x3072xf32>
    %9804 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9805 = stablehlo.add %9803, %9804 : tensor<768x3072xf32>
    %9806 = stablehlo.divide %8347, %9805 : tensor<768x3072xf32>
    %9807 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9808 = stablehlo.add %8756, %9807 : tensor<768xf32>
    %9809 = stablehlo.sqrt %9808 : tensor<768xf32>
    %9810 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9811 = stablehlo.add %9809, %9810 : tensor<768xf32>
    %9812 = stablehlo.divide %8349, %9811 : tensor<768xf32>
    %9813 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9814 = stablehlo.add %8758, %9813 : tensor<768xf32>
    %9815 = stablehlo.sqrt %9814 : tensor<768xf32>
    %9816 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9817 = stablehlo.add %9815, %9816 : tensor<768xf32>
    %9818 = stablehlo.divide %8351, %9817 : tensor<768xf32>
    %9819 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9820 = stablehlo.add %8760, %9819 : tensor<768xf32>
    %9821 = stablehlo.sqrt %9820 : tensor<768xf32>
    %9822 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9823 = stablehlo.add %9821, %9822 : tensor<768xf32>
    %9824 = stablehlo.divide %8353, %9823 : tensor<768xf32>
    %9825 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9826 = stablehlo.add %8762, %9825 : tensor<768x768xf32>
    %9827 = stablehlo.sqrt %9826 : tensor<768x768xf32>
    %9828 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9829 = stablehlo.add %9827, %9828 : tensor<768x768xf32>
    %9830 = stablehlo.divide %8355, %9829 : tensor<768x768xf32>
    %9831 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9832 = stablehlo.add %8764, %9831 : tensor<768xf32>
    %9833 = stablehlo.sqrt %9832 : tensor<768xf32>
    %9834 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9835 = stablehlo.add %9833, %9834 : tensor<768xf32>
    %9836 = stablehlo.divide %8357, %9835 : tensor<768xf32>
    %9837 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9838 = stablehlo.add %8766, %9837 : tensor<768x768xf32>
    %9839 = stablehlo.sqrt %9838 : tensor<768x768xf32>
    %9840 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9841 = stablehlo.add %9839, %9840 : tensor<768x768xf32>
    %9842 = stablehlo.divide %8359, %9841 : tensor<768x768xf32>
    %9843 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9844 = stablehlo.add %8768, %9843 : tensor<768xf32>
    %9845 = stablehlo.sqrt %9844 : tensor<768xf32>
    %9846 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9847 = stablehlo.add %9845, %9846 : tensor<768xf32>
    %9848 = stablehlo.divide %8361, %9847 : tensor<768xf32>
    %9849 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9850 = stablehlo.add %8770, %9849 : tensor<768x768xf32>
    %9851 = stablehlo.sqrt %9850 : tensor<768x768xf32>
    %9852 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9853 = stablehlo.add %9851, %9852 : tensor<768x768xf32>
    %9854 = stablehlo.divide %8363, %9853 : tensor<768x768xf32>
    %9855 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9856 = stablehlo.add %8772, %9855 : tensor<768xf32>
    %9857 = stablehlo.sqrt %9856 : tensor<768xf32>
    %9858 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9859 = stablehlo.add %9857, %9858 : tensor<768xf32>
    %9860 = stablehlo.divide %8365, %9859 : tensor<768xf32>
    %9861 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9862 = stablehlo.add %8774, %9861 : tensor<768x768xf32>
    %9863 = stablehlo.sqrt %9862 : tensor<768x768xf32>
    %9864 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9865 = stablehlo.add %9863, %9864 : tensor<768x768xf32>
    %9866 = stablehlo.divide %8367, %9865 : tensor<768x768xf32>
    %9867 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9868 = stablehlo.add %8776, %9867 : tensor<768xf32>
    %9869 = stablehlo.sqrt %9868 : tensor<768xf32>
    %9870 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9871 = stablehlo.add %9869, %9870 : tensor<768xf32>
    %9872 = stablehlo.divide %8369, %9871 : tensor<768xf32>
    %9873 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9874 = stablehlo.add %8778, %9873 : tensor<768xf32>
    %9875 = stablehlo.sqrt %9874 : tensor<768xf32>
    %9876 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9877 = stablehlo.add %9875, %9876 : tensor<768xf32>
    %9878 = stablehlo.divide %8371, %9877 : tensor<768xf32>
    %9879 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9880 = stablehlo.add %8780, %9879 : tensor<768xf32>
    %9881 = stablehlo.sqrt %9880 : tensor<768xf32>
    %9882 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9883 = stablehlo.add %9881, %9882 : tensor<768xf32>
    %9884 = stablehlo.divide %8373, %9883 : tensor<768xf32>
    %9885 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9886 = stablehlo.add %8782, %9885 : tensor<3072x768xf32>
    %9887 = stablehlo.sqrt %9886 : tensor<3072x768xf32>
    %9888 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9889 = stablehlo.add %9887, %9888 : tensor<3072x768xf32>
    %9890 = stablehlo.divide %8375, %9889 : tensor<3072x768xf32>
    %9891 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9892 = stablehlo.add %8784, %9891 : tensor<3072xf32>
    %9893 = stablehlo.sqrt %9892 : tensor<3072xf32>
    %9894 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9895 = stablehlo.add %9893, %9894 : tensor<3072xf32>
    %9896 = stablehlo.divide %8377, %9895 : tensor<3072xf32>
    %9897 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9898 = stablehlo.add %8786, %9897 : tensor<768x3072xf32>
    %9899 = stablehlo.sqrt %9898 : tensor<768x3072xf32>
    %9900 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9901 = stablehlo.add %9899, %9900 : tensor<768x3072xf32>
    %9902 = stablehlo.divide %8379, %9901 : tensor<768x3072xf32>
    %9903 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9904 = stablehlo.add %8788, %9903 : tensor<768xf32>
    %9905 = stablehlo.sqrt %9904 : tensor<768xf32>
    %9906 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9907 = stablehlo.add %9905, %9906 : tensor<768xf32>
    %9908 = stablehlo.divide %8381, %9907 : tensor<768xf32>
    %9909 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9910 = stablehlo.add %8790, %9909 : tensor<768xf32>
    %9911 = stablehlo.sqrt %9910 : tensor<768xf32>
    %9912 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9913 = stablehlo.add %9911, %9912 : tensor<768xf32>
    %9914 = stablehlo.divide %8383, %9913 : tensor<768xf32>
    %9915 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9916 = stablehlo.add %8792, %9915 : tensor<768xf32>
    %9917 = stablehlo.sqrt %9916 : tensor<768xf32>
    %9918 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9919 = stablehlo.add %9917, %9918 : tensor<768xf32>
    %9920 = stablehlo.divide %8385, %9919 : tensor<768xf32>
    %9921 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9922 = stablehlo.add %8794, %9921 : tensor<768x768xf32>
    %9923 = stablehlo.sqrt %9922 : tensor<768x768xf32>
    %9924 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9925 = stablehlo.add %9923, %9924 : tensor<768x768xf32>
    %9926 = stablehlo.divide %8387, %9925 : tensor<768x768xf32>
    %9927 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9928 = stablehlo.add %8796, %9927 : tensor<768xf32>
    %9929 = stablehlo.sqrt %9928 : tensor<768xf32>
    %9930 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9931 = stablehlo.add %9929, %9930 : tensor<768xf32>
    %9932 = stablehlo.divide %8389, %9931 : tensor<768xf32>
    %9933 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9934 = stablehlo.add %8798, %9933 : tensor<768x768xf32>
    %9935 = stablehlo.sqrt %9934 : tensor<768x768xf32>
    %9936 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9937 = stablehlo.add %9935, %9936 : tensor<768x768xf32>
    %9938 = stablehlo.divide %8391, %9937 : tensor<768x768xf32>
    %9939 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9940 = stablehlo.add %8800, %9939 : tensor<768xf32>
    %9941 = stablehlo.sqrt %9940 : tensor<768xf32>
    %9942 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9943 = stablehlo.add %9941, %9942 : tensor<768xf32>
    %9944 = stablehlo.divide %8393, %9943 : tensor<768xf32>
    %9945 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9946 = stablehlo.add %8802, %9945 : tensor<768x768xf32>
    %9947 = stablehlo.sqrt %9946 : tensor<768x768xf32>
    %9948 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9949 = stablehlo.add %9947, %9948 : tensor<768x768xf32>
    %9950 = stablehlo.divide %8395, %9949 : tensor<768x768xf32>
    %9951 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9952 = stablehlo.add %8804, %9951 : tensor<768xf32>
    %9953 = stablehlo.sqrt %9952 : tensor<768xf32>
    %9954 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9955 = stablehlo.add %9953, %9954 : tensor<768xf32>
    %9956 = stablehlo.divide %8397, %9955 : tensor<768xf32>
    %9957 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9958 = stablehlo.add %8806, %9957 : tensor<768x768xf32>
    %9959 = stablehlo.sqrt %9958 : tensor<768x768xf32>
    %9960 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9961 = stablehlo.add %9959, %9960 : tensor<768x768xf32>
    %9962 = stablehlo.divide %8399, %9961 : tensor<768x768xf32>
    %9963 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9964 = stablehlo.add %8808, %9963 : tensor<768xf32>
    %9965 = stablehlo.sqrt %9964 : tensor<768xf32>
    %9966 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9967 = stablehlo.add %9965, %9966 : tensor<768xf32>
    %9968 = stablehlo.divide %8401, %9967 : tensor<768xf32>
    %9969 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9970 = stablehlo.add %8810, %9969 : tensor<768xf32>
    %9971 = stablehlo.sqrt %9970 : tensor<768xf32>
    %9972 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9973 = stablehlo.add %9971, %9972 : tensor<768xf32>
    %9974 = stablehlo.divide %8403, %9973 : tensor<768xf32>
    %9975 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9976 = stablehlo.add %8812, %9975 : tensor<768xf32>
    %9977 = stablehlo.sqrt %9976 : tensor<768xf32>
    %9978 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9979 = stablehlo.add %9977, %9978 : tensor<768xf32>
    %9980 = stablehlo.divide %8405, %9979 : tensor<768xf32>
    %9981 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9982 = stablehlo.add %8814, %9981 : tensor<3072x768xf32>
    %9983 = stablehlo.sqrt %9982 : tensor<3072x768xf32>
    %9984 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9985 = stablehlo.add %9983, %9984 : tensor<3072x768xf32>
    %9986 = stablehlo.divide %8407, %9985 : tensor<3072x768xf32>
    %9987 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9988 = stablehlo.add %8816, %9987 : tensor<3072xf32>
    %9989 = stablehlo.sqrt %9988 : tensor<3072xf32>
    %9990 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9991 = stablehlo.add %9989, %9990 : tensor<3072xf32>
    %9992 = stablehlo.divide %8409, %9991 : tensor<3072xf32>
    %9993 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9994 = stablehlo.add %8818, %9993 : tensor<768x3072xf32>
    %9995 = stablehlo.sqrt %9994 : tensor<768x3072xf32>
    %9996 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9997 = stablehlo.add %9995, %9996 : tensor<768x3072xf32>
    %9998 = stablehlo.divide %8411, %9997 : tensor<768x3072xf32>
    %9999 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10000 = stablehlo.add %8820, %9999 : tensor<768xf32>
    %10001 = stablehlo.sqrt %10000 : tensor<768xf32>
    %10002 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10003 = stablehlo.add %10001, %10002 : tensor<768xf32>
    %10004 = stablehlo.divide %8413, %10003 : tensor<768xf32>
    %10005 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10006 = stablehlo.add %8822, %10005 : tensor<768xf32>
    %10007 = stablehlo.sqrt %10006 : tensor<768xf32>
    %10008 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10009 = stablehlo.add %10007, %10008 : tensor<768xf32>
    %10010 = stablehlo.divide %8415, %10009 : tensor<768xf32>
    %10011 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10012 = stablehlo.add %8824, %10011 : tensor<768xf32>
    %10013 = stablehlo.sqrt %10012 : tensor<768xf32>
    %10014 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10015 = stablehlo.add %10013, %10014 : tensor<768xf32>
    %10016 = stablehlo.divide %8417, %10015 : tensor<768xf32>
    %10017 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10018 = stablehlo.add %8826, %10017 : tensor<768x768xf32>
    %10019 = stablehlo.sqrt %10018 : tensor<768x768xf32>
    %10020 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10021 = stablehlo.add %10019, %10020 : tensor<768x768xf32>
    %10022 = stablehlo.divide %8419, %10021 : tensor<768x768xf32>
    %10023 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10024 = stablehlo.add %8828, %10023 : tensor<768xf32>
    %10025 = stablehlo.sqrt %10024 : tensor<768xf32>
    %10026 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10027 = stablehlo.add %10025, %10026 : tensor<768xf32>
    %10028 = stablehlo.divide %8421, %10027 : tensor<768xf32>
    %10029 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10030 = stablehlo.add %8830, %10029 : tensor<768xf32>
    %10031 = stablehlo.sqrt %10030 : tensor<768xf32>
    %10032 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10033 = stablehlo.add %10031, %10032 : tensor<768xf32>
    %10034 = stablehlo.divide %8423, %10033 : tensor<768xf32>
    %10035 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10036 = stablehlo.add %8832, %10035 : tensor<768xf32>
    %10037 = stablehlo.sqrt %10036 : tensor<768xf32>
    %10038 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10039 = stablehlo.add %10037, %10038 : tensor<768xf32>
    %10040 = stablehlo.divide %8425, %10039 : tensor<768xf32>
    %10041 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10042 = stablehlo.add %8834, %10041 : tensor<30522xf32>
    %10043 = stablehlo.sqrt %10042 : tensor<30522xf32>
    %10044 = stablehlo.broadcast_in_dim %cst_653, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10045 = stablehlo.add %10043, %10044 : tensor<30522xf32>
    %10046 = stablehlo.divide %8427, %10045 : tensor<30522xf32>
    %cst_654 = stablehlo.constant dense<0.00999999977> : tensor<f32>
    %10047 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10048 = stablehlo.multiply %10047, %arg0 : tensor<30522x768xf32>
    %10049 = stablehlo.add %8840, %10048 : tensor<30522x768xf32>
    %10050 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10051 = stablehlo.multiply %10050, %arg1 : tensor<512x768xf32>
    %10052 = stablehlo.add %8846, %10051 : tensor<512x768xf32>
    %10053 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10054 = stablehlo.multiply %10053, %arg2 : tensor<2x768xf32>
    %10055 = stablehlo.add %8852, %10054 : tensor<2x768xf32>
    %10056 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10057 = stablehlo.multiply %10056, %arg3 : tensor<768xf32>
    %10058 = stablehlo.add %8858, %10057 : tensor<768xf32>
    %10059 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10060 = stablehlo.multiply %10059, %arg4 : tensor<768xf32>
    %10061 = stablehlo.add %8864, %10060 : tensor<768xf32>
    %10062 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10063 = stablehlo.multiply %10062, %arg5 : tensor<768x768xf32>
    %10064 = stablehlo.add %8870, %10063 : tensor<768x768xf32>
    %10065 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10066 = stablehlo.multiply %10065, %arg6 : tensor<768xf32>
    %10067 = stablehlo.add %8876, %10066 : tensor<768xf32>
    %10068 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10069 = stablehlo.multiply %10068, %arg7 : tensor<768x768xf32>
    %10070 = stablehlo.add %8882, %10069 : tensor<768x768xf32>
    %10071 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10072 = stablehlo.multiply %10071, %arg8 : tensor<768xf32>
    %10073 = stablehlo.add %8888, %10072 : tensor<768xf32>
    %10074 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10075 = stablehlo.multiply %10074, %arg9 : tensor<768x768xf32>
    %10076 = stablehlo.add %8894, %10075 : tensor<768x768xf32>
    %10077 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10078 = stablehlo.multiply %10077, %arg10 : tensor<768xf32>
    %10079 = stablehlo.add %8900, %10078 : tensor<768xf32>
    %10080 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10081 = stablehlo.multiply %10080, %arg11 : tensor<768x768xf32>
    %10082 = stablehlo.add %8906, %10081 : tensor<768x768xf32>
    %10083 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10084 = stablehlo.multiply %10083, %arg12 : tensor<768xf32>
    %10085 = stablehlo.add %8912, %10084 : tensor<768xf32>
    %10086 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10087 = stablehlo.multiply %10086, %arg13 : tensor<768xf32>
    %10088 = stablehlo.add %8918, %10087 : tensor<768xf32>
    %10089 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10090 = stablehlo.multiply %10089, %arg14 : tensor<768xf32>
    %10091 = stablehlo.add %8924, %10090 : tensor<768xf32>
    %10092 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10093 = stablehlo.multiply %10092, %arg15 : tensor<3072x768xf32>
    %10094 = stablehlo.add %8930, %10093 : tensor<3072x768xf32>
    %10095 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10096 = stablehlo.multiply %10095, %arg16 : tensor<3072xf32>
    %10097 = stablehlo.add %8936, %10096 : tensor<3072xf32>
    %10098 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10099 = stablehlo.multiply %10098, %arg17 : tensor<768x3072xf32>
    %10100 = stablehlo.add %8942, %10099 : tensor<768x3072xf32>
    %10101 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10102 = stablehlo.multiply %10101, %arg18 : tensor<768xf32>
    %10103 = stablehlo.add %8948, %10102 : tensor<768xf32>
    %10104 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10105 = stablehlo.multiply %10104, %arg19 : tensor<768xf32>
    %10106 = stablehlo.add %8954, %10105 : tensor<768xf32>
    %10107 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10108 = stablehlo.multiply %10107, %arg20 : tensor<768xf32>
    %10109 = stablehlo.add %8960, %10108 : tensor<768xf32>
    %10110 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10111 = stablehlo.multiply %10110, %arg21 : tensor<768x768xf32>
    %10112 = stablehlo.add %8966, %10111 : tensor<768x768xf32>
    %10113 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10114 = stablehlo.multiply %10113, %arg22 : tensor<768xf32>
    %10115 = stablehlo.add %8972, %10114 : tensor<768xf32>
    %10116 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10117 = stablehlo.multiply %10116, %arg23 : tensor<768x768xf32>
    %10118 = stablehlo.add %8978, %10117 : tensor<768x768xf32>
    %10119 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10120 = stablehlo.multiply %10119, %arg24 : tensor<768xf32>
    %10121 = stablehlo.add %8984, %10120 : tensor<768xf32>
    %10122 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10123 = stablehlo.multiply %10122, %arg25 : tensor<768x768xf32>
    %10124 = stablehlo.add %8990, %10123 : tensor<768x768xf32>
    %10125 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10126 = stablehlo.multiply %10125, %arg26 : tensor<768xf32>
    %10127 = stablehlo.add %8996, %10126 : tensor<768xf32>
    %10128 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10129 = stablehlo.multiply %10128, %arg27 : tensor<768x768xf32>
    %10130 = stablehlo.add %9002, %10129 : tensor<768x768xf32>
    %10131 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10132 = stablehlo.multiply %10131, %arg28 : tensor<768xf32>
    %10133 = stablehlo.add %9008, %10132 : tensor<768xf32>
    %10134 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10135 = stablehlo.multiply %10134, %arg29 : tensor<768xf32>
    %10136 = stablehlo.add %9014, %10135 : tensor<768xf32>
    %10137 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10138 = stablehlo.multiply %10137, %arg30 : tensor<768xf32>
    %10139 = stablehlo.add %9020, %10138 : tensor<768xf32>
    %10140 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10141 = stablehlo.multiply %10140, %arg31 : tensor<3072x768xf32>
    %10142 = stablehlo.add %9026, %10141 : tensor<3072x768xf32>
    %10143 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10144 = stablehlo.multiply %10143, %arg32 : tensor<3072xf32>
    %10145 = stablehlo.add %9032, %10144 : tensor<3072xf32>
    %10146 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10147 = stablehlo.multiply %10146, %arg33 : tensor<768x3072xf32>
    %10148 = stablehlo.add %9038, %10147 : tensor<768x3072xf32>
    %10149 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10150 = stablehlo.multiply %10149, %arg34 : tensor<768xf32>
    %10151 = stablehlo.add %9044, %10150 : tensor<768xf32>
    %10152 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10153 = stablehlo.multiply %10152, %arg35 : tensor<768xf32>
    %10154 = stablehlo.add %9050, %10153 : tensor<768xf32>
    %10155 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10156 = stablehlo.multiply %10155, %arg36 : tensor<768xf32>
    %10157 = stablehlo.add %9056, %10156 : tensor<768xf32>
    %10158 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10159 = stablehlo.multiply %10158, %arg37 : tensor<768x768xf32>
    %10160 = stablehlo.add %9062, %10159 : tensor<768x768xf32>
    %10161 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10162 = stablehlo.multiply %10161, %arg38 : tensor<768xf32>
    %10163 = stablehlo.add %9068, %10162 : tensor<768xf32>
    %10164 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10165 = stablehlo.multiply %10164, %arg39 : tensor<768x768xf32>
    %10166 = stablehlo.add %9074, %10165 : tensor<768x768xf32>
    %10167 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10168 = stablehlo.multiply %10167, %arg40 : tensor<768xf32>
    %10169 = stablehlo.add %9080, %10168 : tensor<768xf32>
    %10170 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10171 = stablehlo.multiply %10170, %arg41 : tensor<768x768xf32>
    %10172 = stablehlo.add %9086, %10171 : tensor<768x768xf32>
    %10173 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10174 = stablehlo.multiply %10173, %arg42 : tensor<768xf32>
    %10175 = stablehlo.add %9092, %10174 : tensor<768xf32>
    %10176 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10177 = stablehlo.multiply %10176, %arg43 : tensor<768x768xf32>
    %10178 = stablehlo.add %9098, %10177 : tensor<768x768xf32>
    %10179 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10180 = stablehlo.multiply %10179, %arg44 : tensor<768xf32>
    %10181 = stablehlo.add %9104, %10180 : tensor<768xf32>
    %10182 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10183 = stablehlo.multiply %10182, %arg45 : tensor<768xf32>
    %10184 = stablehlo.add %9110, %10183 : tensor<768xf32>
    %10185 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10186 = stablehlo.multiply %10185, %arg46 : tensor<768xf32>
    %10187 = stablehlo.add %9116, %10186 : tensor<768xf32>
    %10188 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10189 = stablehlo.multiply %10188, %arg47 : tensor<3072x768xf32>
    %10190 = stablehlo.add %9122, %10189 : tensor<3072x768xf32>
    %10191 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10192 = stablehlo.multiply %10191, %arg48 : tensor<3072xf32>
    %10193 = stablehlo.add %9128, %10192 : tensor<3072xf32>
    %10194 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10195 = stablehlo.multiply %10194, %arg49 : tensor<768x3072xf32>
    %10196 = stablehlo.add %9134, %10195 : tensor<768x3072xf32>
    %10197 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10198 = stablehlo.multiply %10197, %arg50 : tensor<768xf32>
    %10199 = stablehlo.add %9140, %10198 : tensor<768xf32>
    %10200 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10201 = stablehlo.multiply %10200, %arg51 : tensor<768xf32>
    %10202 = stablehlo.add %9146, %10201 : tensor<768xf32>
    %10203 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10204 = stablehlo.multiply %10203, %arg52 : tensor<768xf32>
    %10205 = stablehlo.add %9152, %10204 : tensor<768xf32>
    %10206 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10207 = stablehlo.multiply %10206, %arg53 : tensor<768x768xf32>
    %10208 = stablehlo.add %9158, %10207 : tensor<768x768xf32>
    %10209 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10210 = stablehlo.multiply %10209, %arg54 : tensor<768xf32>
    %10211 = stablehlo.add %9164, %10210 : tensor<768xf32>
    %10212 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10213 = stablehlo.multiply %10212, %arg55 : tensor<768x768xf32>
    %10214 = stablehlo.add %9170, %10213 : tensor<768x768xf32>
    %10215 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10216 = stablehlo.multiply %10215, %arg56 : tensor<768xf32>
    %10217 = stablehlo.add %9176, %10216 : tensor<768xf32>
    %10218 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10219 = stablehlo.multiply %10218, %arg57 : tensor<768x768xf32>
    %10220 = stablehlo.add %9182, %10219 : tensor<768x768xf32>
    %10221 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10222 = stablehlo.multiply %10221, %arg58 : tensor<768xf32>
    %10223 = stablehlo.add %9188, %10222 : tensor<768xf32>
    %10224 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10225 = stablehlo.multiply %10224, %arg59 : tensor<768x768xf32>
    %10226 = stablehlo.add %9194, %10225 : tensor<768x768xf32>
    %10227 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10228 = stablehlo.multiply %10227, %arg60 : tensor<768xf32>
    %10229 = stablehlo.add %9200, %10228 : tensor<768xf32>
    %10230 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10231 = stablehlo.multiply %10230, %arg61 : tensor<768xf32>
    %10232 = stablehlo.add %9206, %10231 : tensor<768xf32>
    %10233 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10234 = stablehlo.multiply %10233, %arg62 : tensor<768xf32>
    %10235 = stablehlo.add %9212, %10234 : tensor<768xf32>
    %10236 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10237 = stablehlo.multiply %10236, %arg63 : tensor<3072x768xf32>
    %10238 = stablehlo.add %9218, %10237 : tensor<3072x768xf32>
    %10239 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10240 = stablehlo.multiply %10239, %arg64 : tensor<3072xf32>
    %10241 = stablehlo.add %9224, %10240 : tensor<3072xf32>
    %10242 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10243 = stablehlo.multiply %10242, %arg65 : tensor<768x3072xf32>
    %10244 = stablehlo.add %9230, %10243 : tensor<768x3072xf32>
    %10245 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10246 = stablehlo.multiply %10245, %arg66 : tensor<768xf32>
    %10247 = stablehlo.add %9236, %10246 : tensor<768xf32>
    %10248 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10249 = stablehlo.multiply %10248, %arg67 : tensor<768xf32>
    %10250 = stablehlo.add %9242, %10249 : tensor<768xf32>
    %10251 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10252 = stablehlo.multiply %10251, %arg68 : tensor<768xf32>
    %10253 = stablehlo.add %9248, %10252 : tensor<768xf32>
    %10254 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10255 = stablehlo.multiply %10254, %arg69 : tensor<768x768xf32>
    %10256 = stablehlo.add %9254, %10255 : tensor<768x768xf32>
    %10257 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10258 = stablehlo.multiply %10257, %arg70 : tensor<768xf32>
    %10259 = stablehlo.add %9260, %10258 : tensor<768xf32>
    %10260 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10261 = stablehlo.multiply %10260, %arg71 : tensor<768x768xf32>
    %10262 = stablehlo.add %9266, %10261 : tensor<768x768xf32>
    %10263 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10264 = stablehlo.multiply %10263, %arg72 : tensor<768xf32>
    %10265 = stablehlo.add %9272, %10264 : tensor<768xf32>
    %10266 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10267 = stablehlo.multiply %10266, %arg73 : tensor<768x768xf32>
    %10268 = stablehlo.add %9278, %10267 : tensor<768x768xf32>
    %10269 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10270 = stablehlo.multiply %10269, %arg74 : tensor<768xf32>
    %10271 = stablehlo.add %9284, %10270 : tensor<768xf32>
    %10272 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10273 = stablehlo.multiply %10272, %arg75 : tensor<768x768xf32>
    %10274 = stablehlo.add %9290, %10273 : tensor<768x768xf32>
    %10275 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10276 = stablehlo.multiply %10275, %arg76 : tensor<768xf32>
    %10277 = stablehlo.add %9296, %10276 : tensor<768xf32>
    %10278 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10279 = stablehlo.multiply %10278, %arg77 : tensor<768xf32>
    %10280 = stablehlo.add %9302, %10279 : tensor<768xf32>
    %10281 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10282 = stablehlo.multiply %10281, %arg78 : tensor<768xf32>
    %10283 = stablehlo.add %9308, %10282 : tensor<768xf32>
    %10284 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10285 = stablehlo.multiply %10284, %arg79 : tensor<3072x768xf32>
    %10286 = stablehlo.add %9314, %10285 : tensor<3072x768xf32>
    %10287 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10288 = stablehlo.multiply %10287, %arg80 : tensor<3072xf32>
    %10289 = stablehlo.add %9320, %10288 : tensor<3072xf32>
    %10290 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10291 = stablehlo.multiply %10290, %arg81 : tensor<768x3072xf32>
    %10292 = stablehlo.add %9326, %10291 : tensor<768x3072xf32>
    %10293 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10294 = stablehlo.multiply %10293, %arg82 : tensor<768xf32>
    %10295 = stablehlo.add %9332, %10294 : tensor<768xf32>
    %10296 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10297 = stablehlo.multiply %10296, %arg83 : tensor<768xf32>
    %10298 = stablehlo.add %9338, %10297 : tensor<768xf32>
    %10299 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10300 = stablehlo.multiply %10299, %arg84 : tensor<768xf32>
    %10301 = stablehlo.add %9344, %10300 : tensor<768xf32>
    %10302 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10303 = stablehlo.multiply %10302, %arg85 : tensor<768x768xf32>
    %10304 = stablehlo.add %9350, %10303 : tensor<768x768xf32>
    %10305 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10306 = stablehlo.multiply %10305, %arg86 : tensor<768xf32>
    %10307 = stablehlo.add %9356, %10306 : tensor<768xf32>
    %10308 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10309 = stablehlo.multiply %10308, %arg87 : tensor<768x768xf32>
    %10310 = stablehlo.add %9362, %10309 : tensor<768x768xf32>
    %10311 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10312 = stablehlo.multiply %10311, %arg88 : tensor<768xf32>
    %10313 = stablehlo.add %9368, %10312 : tensor<768xf32>
    %10314 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10315 = stablehlo.multiply %10314, %arg89 : tensor<768x768xf32>
    %10316 = stablehlo.add %9374, %10315 : tensor<768x768xf32>
    %10317 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10318 = stablehlo.multiply %10317, %arg90 : tensor<768xf32>
    %10319 = stablehlo.add %9380, %10318 : tensor<768xf32>
    %10320 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10321 = stablehlo.multiply %10320, %arg91 : tensor<768x768xf32>
    %10322 = stablehlo.add %9386, %10321 : tensor<768x768xf32>
    %10323 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10324 = stablehlo.multiply %10323, %arg92 : tensor<768xf32>
    %10325 = stablehlo.add %9392, %10324 : tensor<768xf32>
    %10326 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10327 = stablehlo.multiply %10326, %arg93 : tensor<768xf32>
    %10328 = stablehlo.add %9398, %10327 : tensor<768xf32>
    %10329 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10330 = stablehlo.multiply %10329, %arg94 : tensor<768xf32>
    %10331 = stablehlo.add %9404, %10330 : tensor<768xf32>
    %10332 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10333 = stablehlo.multiply %10332, %arg95 : tensor<3072x768xf32>
    %10334 = stablehlo.add %9410, %10333 : tensor<3072x768xf32>
    %10335 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10336 = stablehlo.multiply %10335, %arg96 : tensor<3072xf32>
    %10337 = stablehlo.add %9416, %10336 : tensor<3072xf32>
    %10338 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10339 = stablehlo.multiply %10338, %arg97 : tensor<768x3072xf32>
    %10340 = stablehlo.add %9422, %10339 : tensor<768x3072xf32>
    %10341 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10342 = stablehlo.multiply %10341, %arg98 : tensor<768xf32>
    %10343 = stablehlo.add %9428, %10342 : tensor<768xf32>
    %10344 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10345 = stablehlo.multiply %10344, %arg99 : tensor<768xf32>
    %10346 = stablehlo.add %9434, %10345 : tensor<768xf32>
    %10347 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10348 = stablehlo.multiply %10347, %arg100 : tensor<768xf32>
    %10349 = stablehlo.add %9440, %10348 : tensor<768xf32>
    %10350 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10351 = stablehlo.multiply %10350, %arg101 : tensor<768x768xf32>
    %10352 = stablehlo.add %9446, %10351 : tensor<768x768xf32>
    %10353 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10354 = stablehlo.multiply %10353, %arg102 : tensor<768xf32>
    %10355 = stablehlo.add %9452, %10354 : tensor<768xf32>
    %10356 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10357 = stablehlo.multiply %10356, %arg103 : tensor<768x768xf32>
    %10358 = stablehlo.add %9458, %10357 : tensor<768x768xf32>
    %10359 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10360 = stablehlo.multiply %10359, %arg104 : tensor<768xf32>
    %10361 = stablehlo.add %9464, %10360 : tensor<768xf32>
    %10362 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10363 = stablehlo.multiply %10362, %arg105 : tensor<768x768xf32>
    %10364 = stablehlo.add %9470, %10363 : tensor<768x768xf32>
    %10365 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10366 = stablehlo.multiply %10365, %arg106 : tensor<768xf32>
    %10367 = stablehlo.add %9476, %10366 : tensor<768xf32>
    %10368 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10369 = stablehlo.multiply %10368, %arg107 : tensor<768x768xf32>
    %10370 = stablehlo.add %9482, %10369 : tensor<768x768xf32>
    %10371 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10372 = stablehlo.multiply %10371, %arg108 : tensor<768xf32>
    %10373 = stablehlo.add %9488, %10372 : tensor<768xf32>
    %10374 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10375 = stablehlo.multiply %10374, %arg109 : tensor<768xf32>
    %10376 = stablehlo.add %9494, %10375 : tensor<768xf32>
    %10377 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10378 = stablehlo.multiply %10377, %arg110 : tensor<768xf32>
    %10379 = stablehlo.add %9500, %10378 : tensor<768xf32>
    %10380 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10381 = stablehlo.multiply %10380, %arg111 : tensor<3072x768xf32>
    %10382 = stablehlo.add %9506, %10381 : tensor<3072x768xf32>
    %10383 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10384 = stablehlo.multiply %10383, %arg112 : tensor<3072xf32>
    %10385 = stablehlo.add %9512, %10384 : tensor<3072xf32>
    %10386 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10387 = stablehlo.multiply %10386, %arg113 : tensor<768x3072xf32>
    %10388 = stablehlo.add %9518, %10387 : tensor<768x3072xf32>
    %10389 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10390 = stablehlo.multiply %10389, %arg114 : tensor<768xf32>
    %10391 = stablehlo.add %9524, %10390 : tensor<768xf32>
    %10392 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10393 = stablehlo.multiply %10392, %arg115 : tensor<768xf32>
    %10394 = stablehlo.add %9530, %10393 : tensor<768xf32>
    %10395 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10396 = stablehlo.multiply %10395, %arg116 : tensor<768xf32>
    %10397 = stablehlo.add %9536, %10396 : tensor<768xf32>
    %10398 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10399 = stablehlo.multiply %10398, %arg117 : tensor<768x768xf32>
    %10400 = stablehlo.add %9542, %10399 : tensor<768x768xf32>
    %10401 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10402 = stablehlo.multiply %10401, %arg118 : tensor<768xf32>
    %10403 = stablehlo.add %9548, %10402 : tensor<768xf32>
    %10404 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10405 = stablehlo.multiply %10404, %arg119 : tensor<768x768xf32>
    %10406 = stablehlo.add %9554, %10405 : tensor<768x768xf32>
    %10407 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10408 = stablehlo.multiply %10407, %arg120 : tensor<768xf32>
    %10409 = stablehlo.add %9560, %10408 : tensor<768xf32>
    %10410 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10411 = stablehlo.multiply %10410, %arg121 : tensor<768x768xf32>
    %10412 = stablehlo.add %9566, %10411 : tensor<768x768xf32>
    %10413 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10414 = stablehlo.multiply %10413, %arg122 : tensor<768xf32>
    %10415 = stablehlo.add %9572, %10414 : tensor<768xf32>
    %10416 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10417 = stablehlo.multiply %10416, %arg123 : tensor<768x768xf32>
    %10418 = stablehlo.add %9578, %10417 : tensor<768x768xf32>
    %10419 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10420 = stablehlo.multiply %10419, %arg124 : tensor<768xf32>
    %10421 = stablehlo.add %9584, %10420 : tensor<768xf32>
    %10422 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10423 = stablehlo.multiply %10422, %arg125 : tensor<768xf32>
    %10424 = stablehlo.add %9590, %10423 : tensor<768xf32>
    %10425 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10426 = stablehlo.multiply %10425, %arg126 : tensor<768xf32>
    %10427 = stablehlo.add %9596, %10426 : tensor<768xf32>
    %10428 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10429 = stablehlo.multiply %10428, %arg127 : tensor<3072x768xf32>
    %10430 = stablehlo.add %9602, %10429 : tensor<3072x768xf32>
    %10431 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10432 = stablehlo.multiply %10431, %arg128 : tensor<3072xf32>
    %10433 = stablehlo.add %9608, %10432 : tensor<3072xf32>
    %10434 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10435 = stablehlo.multiply %10434, %arg129 : tensor<768x3072xf32>
    %10436 = stablehlo.add %9614, %10435 : tensor<768x3072xf32>
    %10437 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10438 = stablehlo.multiply %10437, %arg130 : tensor<768xf32>
    %10439 = stablehlo.add %9620, %10438 : tensor<768xf32>
    %10440 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10441 = stablehlo.multiply %10440, %arg131 : tensor<768xf32>
    %10442 = stablehlo.add %9626, %10441 : tensor<768xf32>
    %10443 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10444 = stablehlo.multiply %10443, %arg132 : tensor<768xf32>
    %10445 = stablehlo.add %9632, %10444 : tensor<768xf32>
    %10446 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10447 = stablehlo.multiply %10446, %arg133 : tensor<768x768xf32>
    %10448 = stablehlo.add %9638, %10447 : tensor<768x768xf32>
    %10449 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10450 = stablehlo.multiply %10449, %arg134 : tensor<768xf32>
    %10451 = stablehlo.add %9644, %10450 : tensor<768xf32>
    %10452 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10453 = stablehlo.multiply %10452, %arg135 : tensor<768x768xf32>
    %10454 = stablehlo.add %9650, %10453 : tensor<768x768xf32>
    %10455 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10456 = stablehlo.multiply %10455, %arg136 : tensor<768xf32>
    %10457 = stablehlo.add %9656, %10456 : tensor<768xf32>
    %10458 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10459 = stablehlo.multiply %10458, %arg137 : tensor<768x768xf32>
    %10460 = stablehlo.add %9662, %10459 : tensor<768x768xf32>
    %10461 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10462 = stablehlo.multiply %10461, %arg138 : tensor<768xf32>
    %10463 = stablehlo.add %9668, %10462 : tensor<768xf32>
    %10464 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10465 = stablehlo.multiply %10464, %arg139 : tensor<768x768xf32>
    %10466 = stablehlo.add %9674, %10465 : tensor<768x768xf32>
    %10467 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10468 = stablehlo.multiply %10467, %arg140 : tensor<768xf32>
    %10469 = stablehlo.add %9680, %10468 : tensor<768xf32>
    %10470 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10471 = stablehlo.multiply %10470, %arg141 : tensor<768xf32>
    %10472 = stablehlo.add %9686, %10471 : tensor<768xf32>
    %10473 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10474 = stablehlo.multiply %10473, %arg142 : tensor<768xf32>
    %10475 = stablehlo.add %9692, %10474 : tensor<768xf32>
    %10476 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10477 = stablehlo.multiply %10476, %arg143 : tensor<3072x768xf32>
    %10478 = stablehlo.add %9698, %10477 : tensor<3072x768xf32>
    %10479 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10480 = stablehlo.multiply %10479, %arg144 : tensor<3072xf32>
    %10481 = stablehlo.add %9704, %10480 : tensor<3072xf32>
    %10482 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10483 = stablehlo.multiply %10482, %arg145 : tensor<768x3072xf32>
    %10484 = stablehlo.add %9710, %10483 : tensor<768x3072xf32>
    %10485 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10486 = stablehlo.multiply %10485, %arg146 : tensor<768xf32>
    %10487 = stablehlo.add %9716, %10486 : tensor<768xf32>
    %10488 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10489 = stablehlo.multiply %10488, %arg147 : tensor<768xf32>
    %10490 = stablehlo.add %9722, %10489 : tensor<768xf32>
    %10491 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10492 = stablehlo.multiply %10491, %arg148 : tensor<768xf32>
    %10493 = stablehlo.add %9728, %10492 : tensor<768xf32>
    %10494 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10495 = stablehlo.multiply %10494, %arg149 : tensor<768x768xf32>
    %10496 = stablehlo.add %9734, %10495 : tensor<768x768xf32>
    %10497 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10498 = stablehlo.multiply %10497, %arg150 : tensor<768xf32>
    %10499 = stablehlo.add %9740, %10498 : tensor<768xf32>
    %10500 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10501 = stablehlo.multiply %10500, %arg151 : tensor<768x768xf32>
    %10502 = stablehlo.add %9746, %10501 : tensor<768x768xf32>
    %10503 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10504 = stablehlo.multiply %10503, %arg152 : tensor<768xf32>
    %10505 = stablehlo.add %9752, %10504 : tensor<768xf32>
    %10506 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10507 = stablehlo.multiply %10506, %arg153 : tensor<768x768xf32>
    %10508 = stablehlo.add %9758, %10507 : tensor<768x768xf32>
    %10509 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10510 = stablehlo.multiply %10509, %arg154 : tensor<768xf32>
    %10511 = stablehlo.add %9764, %10510 : tensor<768xf32>
    %10512 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10513 = stablehlo.multiply %10512, %arg155 : tensor<768x768xf32>
    %10514 = stablehlo.add %9770, %10513 : tensor<768x768xf32>
    %10515 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10516 = stablehlo.multiply %10515, %arg156 : tensor<768xf32>
    %10517 = stablehlo.add %9776, %10516 : tensor<768xf32>
    %10518 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10519 = stablehlo.multiply %10518, %arg157 : tensor<768xf32>
    %10520 = stablehlo.add %9782, %10519 : tensor<768xf32>
    %10521 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10522 = stablehlo.multiply %10521, %arg158 : tensor<768xf32>
    %10523 = stablehlo.add %9788, %10522 : tensor<768xf32>
    %10524 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10525 = stablehlo.multiply %10524, %arg159 : tensor<3072x768xf32>
    %10526 = stablehlo.add %9794, %10525 : tensor<3072x768xf32>
    %10527 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10528 = stablehlo.multiply %10527, %arg160 : tensor<3072xf32>
    %10529 = stablehlo.add %9800, %10528 : tensor<3072xf32>
    %10530 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10531 = stablehlo.multiply %10530, %arg161 : tensor<768x3072xf32>
    %10532 = stablehlo.add %9806, %10531 : tensor<768x3072xf32>
    %10533 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10534 = stablehlo.multiply %10533, %arg162 : tensor<768xf32>
    %10535 = stablehlo.add %9812, %10534 : tensor<768xf32>
    %10536 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10537 = stablehlo.multiply %10536, %arg163 : tensor<768xf32>
    %10538 = stablehlo.add %9818, %10537 : tensor<768xf32>
    %10539 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10540 = stablehlo.multiply %10539, %arg164 : tensor<768xf32>
    %10541 = stablehlo.add %9824, %10540 : tensor<768xf32>
    %10542 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10543 = stablehlo.multiply %10542, %arg165 : tensor<768x768xf32>
    %10544 = stablehlo.add %9830, %10543 : tensor<768x768xf32>
    %10545 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10546 = stablehlo.multiply %10545, %arg166 : tensor<768xf32>
    %10547 = stablehlo.add %9836, %10546 : tensor<768xf32>
    %10548 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10549 = stablehlo.multiply %10548, %arg167 : tensor<768x768xf32>
    %10550 = stablehlo.add %9842, %10549 : tensor<768x768xf32>
    %10551 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10552 = stablehlo.multiply %10551, %arg168 : tensor<768xf32>
    %10553 = stablehlo.add %9848, %10552 : tensor<768xf32>
    %10554 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10555 = stablehlo.multiply %10554, %arg169 : tensor<768x768xf32>
    %10556 = stablehlo.add %9854, %10555 : tensor<768x768xf32>
    %10557 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10558 = stablehlo.multiply %10557, %arg170 : tensor<768xf32>
    %10559 = stablehlo.add %9860, %10558 : tensor<768xf32>
    %10560 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10561 = stablehlo.multiply %10560, %arg171 : tensor<768x768xf32>
    %10562 = stablehlo.add %9866, %10561 : tensor<768x768xf32>
    %10563 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10564 = stablehlo.multiply %10563, %arg172 : tensor<768xf32>
    %10565 = stablehlo.add %9872, %10564 : tensor<768xf32>
    %10566 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10567 = stablehlo.multiply %10566, %arg173 : tensor<768xf32>
    %10568 = stablehlo.add %9878, %10567 : tensor<768xf32>
    %10569 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10570 = stablehlo.multiply %10569, %arg174 : tensor<768xf32>
    %10571 = stablehlo.add %9884, %10570 : tensor<768xf32>
    %10572 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10573 = stablehlo.multiply %10572, %arg175 : tensor<3072x768xf32>
    %10574 = stablehlo.add %9890, %10573 : tensor<3072x768xf32>
    %10575 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10576 = stablehlo.multiply %10575, %arg176 : tensor<3072xf32>
    %10577 = stablehlo.add %9896, %10576 : tensor<3072xf32>
    %10578 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10579 = stablehlo.multiply %10578, %arg177 : tensor<768x3072xf32>
    %10580 = stablehlo.add %9902, %10579 : tensor<768x3072xf32>
    %10581 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10582 = stablehlo.multiply %10581, %arg178 : tensor<768xf32>
    %10583 = stablehlo.add %9908, %10582 : tensor<768xf32>
    %10584 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10585 = stablehlo.multiply %10584, %arg179 : tensor<768xf32>
    %10586 = stablehlo.add %9914, %10585 : tensor<768xf32>
    %10587 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10588 = stablehlo.multiply %10587, %arg180 : tensor<768xf32>
    %10589 = stablehlo.add %9920, %10588 : tensor<768xf32>
    %10590 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10591 = stablehlo.multiply %10590, %arg181 : tensor<768x768xf32>
    %10592 = stablehlo.add %9926, %10591 : tensor<768x768xf32>
    %10593 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10594 = stablehlo.multiply %10593, %arg182 : tensor<768xf32>
    %10595 = stablehlo.add %9932, %10594 : tensor<768xf32>
    %10596 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10597 = stablehlo.multiply %10596, %arg183 : tensor<768x768xf32>
    %10598 = stablehlo.add %9938, %10597 : tensor<768x768xf32>
    %10599 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10600 = stablehlo.multiply %10599, %arg184 : tensor<768xf32>
    %10601 = stablehlo.add %9944, %10600 : tensor<768xf32>
    %10602 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10603 = stablehlo.multiply %10602, %arg185 : tensor<768x768xf32>
    %10604 = stablehlo.add %9950, %10603 : tensor<768x768xf32>
    %10605 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10606 = stablehlo.multiply %10605, %arg186 : tensor<768xf32>
    %10607 = stablehlo.add %9956, %10606 : tensor<768xf32>
    %10608 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10609 = stablehlo.multiply %10608, %arg187 : tensor<768x768xf32>
    %10610 = stablehlo.add %9962, %10609 : tensor<768x768xf32>
    %10611 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10612 = stablehlo.multiply %10611, %arg188 : tensor<768xf32>
    %10613 = stablehlo.add %9968, %10612 : tensor<768xf32>
    %10614 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10615 = stablehlo.multiply %10614, %arg189 : tensor<768xf32>
    %10616 = stablehlo.add %9974, %10615 : tensor<768xf32>
    %10617 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10618 = stablehlo.multiply %10617, %arg190 : tensor<768xf32>
    %10619 = stablehlo.add %9980, %10618 : tensor<768xf32>
    %10620 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10621 = stablehlo.multiply %10620, %arg191 : tensor<3072x768xf32>
    %10622 = stablehlo.add %9986, %10621 : tensor<3072x768xf32>
    %10623 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10624 = stablehlo.multiply %10623, %arg192 : tensor<3072xf32>
    %10625 = stablehlo.add %9992, %10624 : tensor<3072xf32>
    %10626 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10627 = stablehlo.multiply %10626, %arg193 : tensor<768x3072xf32>
    %10628 = stablehlo.add %9998, %10627 : tensor<768x3072xf32>
    %10629 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10630 = stablehlo.multiply %10629, %arg194 : tensor<768xf32>
    %10631 = stablehlo.add %10004, %10630 : tensor<768xf32>
    %10632 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10633 = stablehlo.multiply %10632, %arg195 : tensor<768xf32>
    %10634 = stablehlo.add %10010, %10633 : tensor<768xf32>
    %10635 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10636 = stablehlo.multiply %10635, %arg196 : tensor<768xf32>
    %10637 = stablehlo.add %10016, %10636 : tensor<768xf32>
    %10638 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10639 = stablehlo.multiply %10638, %arg197 : tensor<768x768xf32>
    %10640 = stablehlo.add %10022, %10639 : tensor<768x768xf32>
    %10641 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10642 = stablehlo.multiply %10641, %arg198 : tensor<768xf32>
    %10643 = stablehlo.add %10028, %10642 : tensor<768xf32>
    %10644 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10645 = stablehlo.multiply %10644, %arg199 : tensor<768xf32>
    %10646 = stablehlo.add %10034, %10645 : tensor<768xf32>
    %10647 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10648 = stablehlo.multiply %10647, %arg200 : tensor<768xf32>
    %10649 = stablehlo.add %10040, %10648 : tensor<768xf32>
    %10650 = stablehlo.broadcast_in_dim %cst_654, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10651 = stablehlo.multiply %10650, %arg201 : tensor<30522xf32>
    %10652 = stablehlo.add %10046, %10651 : tensor<30522xf32>
    %10653 = stablehlo.subtract %arg607, %c : tensor<i32>
    %c_655 = stablehlo.constant dense<1000> : tensor<i32>
    %10654 = call @clip(%10653, %c_4, %c_655) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %10655 = stablehlo.convert %10654 : (tensor<i32>) -> tensor<f32>
    %cst_656 = stablehlo.constant dense<1.000000e+03> : tensor<f32>
    %10656 = stablehlo.divide %10655, %cst_656 : tensor<f32>
    %10657 = stablehlo.subtract %cst_6, %10656 : tensor<f32>
    %cst_657 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %10658 = stablehlo.multiply %cst_657, %10657 : tensor<f32>
    %cst_658 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10659 = stablehlo.add %10658, %cst_658 : tensor<f32>
    %c_659 = stablehlo.constant dense<1000> : tensor<i32>
    %10660 = stablehlo.compare  LT, %arg607, %c_659,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %10661 = stablehlo.subtract %arg607, %c_659 : tensor<i32>
    %10662 = stablehlo.convert %10661 : (tensor<i32>) -> tensor<f32>
    %cst_660 = stablehlo.constant dense<9.000000e+03> : tensor<f32>
    %10663 = stablehlo.minimum %10662, %cst_660 : tensor<f32>
    %cst_661 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %10664 = stablehlo.multiply %cst_661, %10663 : tensor<f32>
    %10665 = stablehlo.divide %10664, %cst_660 : tensor<f32>
    %10666 = stablehlo.cosine %10665 : tensor<f32>
    %10667 = stablehlo.add %cst_11, %10666 : tensor<f32>
    %cst_662 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %10668 = stablehlo.multiply %cst_662, %10667 : tensor<f32>
    %10669 = stablehlo.power %10668, %cst_11 : tensor<f32>
    %10670 = stablehlo.multiply %cst_11, %10669 : tensor<f32>
    %10671 = stablehlo.add %10670, %cst_87 : tensor<f32>
    %cst_663 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10672 = stablehlo.multiply %cst_663, %10671 : tensor<f32>
    %10673 = call @_where_352(%10660, %10659, %10672) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_664 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %10674 = stablehlo.multiply %cst_664, %10673 : tensor<f32>
    %10675 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10676 = stablehlo.multiply %10675, %10049 : tensor<30522x768xf32>
    %10677 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10678 = stablehlo.multiply %10677, %10052 : tensor<512x768xf32>
    %10679 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10680 = stablehlo.multiply %10679, %10055 : tensor<2x768xf32>
    %10681 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10682 = stablehlo.multiply %10681, %10058 : tensor<768xf32>
    %10683 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10684 = stablehlo.multiply %10683, %10061 : tensor<768xf32>
    %10685 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10686 = stablehlo.multiply %10685, %10064 : tensor<768x768xf32>
    %10687 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10688 = stablehlo.multiply %10687, %10067 : tensor<768xf32>
    %10689 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10690 = stablehlo.multiply %10689, %10070 : tensor<768x768xf32>
    %10691 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10692 = stablehlo.multiply %10691, %10073 : tensor<768xf32>
    %10693 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10694 = stablehlo.multiply %10693, %10076 : tensor<768x768xf32>
    %10695 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10696 = stablehlo.multiply %10695, %10079 : tensor<768xf32>
    %10697 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10698 = stablehlo.multiply %10697, %10082 : tensor<768x768xf32>
    %10699 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10700 = stablehlo.multiply %10699, %10085 : tensor<768xf32>
    %10701 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10702 = stablehlo.multiply %10701, %10088 : tensor<768xf32>
    %10703 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10704 = stablehlo.multiply %10703, %10091 : tensor<768xf32>
    %10705 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10706 = stablehlo.multiply %10705, %10094 : tensor<3072x768xf32>
    %10707 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10708 = stablehlo.multiply %10707, %10097 : tensor<3072xf32>
    %10709 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10710 = stablehlo.multiply %10709, %10100 : tensor<768x3072xf32>
    %10711 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10712 = stablehlo.multiply %10711, %10103 : tensor<768xf32>
    %10713 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10714 = stablehlo.multiply %10713, %10106 : tensor<768xf32>
    %10715 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10716 = stablehlo.multiply %10715, %10109 : tensor<768xf32>
    %10717 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10718 = stablehlo.multiply %10717, %10112 : tensor<768x768xf32>
    %10719 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10720 = stablehlo.multiply %10719, %10115 : tensor<768xf32>
    %10721 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10722 = stablehlo.multiply %10721, %10118 : tensor<768x768xf32>
    %10723 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10724 = stablehlo.multiply %10723, %10121 : tensor<768xf32>
    %10725 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10726 = stablehlo.multiply %10725, %10124 : tensor<768x768xf32>
    %10727 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10728 = stablehlo.multiply %10727, %10127 : tensor<768xf32>
    %10729 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10730 = stablehlo.multiply %10729, %10130 : tensor<768x768xf32>
    %10731 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10732 = stablehlo.multiply %10731, %10133 : tensor<768xf32>
    %10733 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10734 = stablehlo.multiply %10733, %10136 : tensor<768xf32>
    %10735 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10736 = stablehlo.multiply %10735, %10139 : tensor<768xf32>
    %10737 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10738 = stablehlo.multiply %10737, %10142 : tensor<3072x768xf32>
    %10739 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10740 = stablehlo.multiply %10739, %10145 : tensor<3072xf32>
    %10741 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10742 = stablehlo.multiply %10741, %10148 : tensor<768x3072xf32>
    %10743 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10744 = stablehlo.multiply %10743, %10151 : tensor<768xf32>
    %10745 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10746 = stablehlo.multiply %10745, %10154 : tensor<768xf32>
    %10747 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10748 = stablehlo.multiply %10747, %10157 : tensor<768xf32>
    %10749 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10750 = stablehlo.multiply %10749, %10160 : tensor<768x768xf32>
    %10751 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10752 = stablehlo.multiply %10751, %10163 : tensor<768xf32>
    %10753 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10754 = stablehlo.multiply %10753, %10166 : tensor<768x768xf32>
    %10755 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10756 = stablehlo.multiply %10755, %10169 : tensor<768xf32>
    %10757 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10758 = stablehlo.multiply %10757, %10172 : tensor<768x768xf32>
    %10759 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10760 = stablehlo.multiply %10759, %10175 : tensor<768xf32>
    %10761 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10762 = stablehlo.multiply %10761, %10178 : tensor<768x768xf32>
    %10763 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10764 = stablehlo.multiply %10763, %10181 : tensor<768xf32>
    %10765 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10766 = stablehlo.multiply %10765, %10184 : tensor<768xf32>
    %10767 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10768 = stablehlo.multiply %10767, %10187 : tensor<768xf32>
    %10769 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10770 = stablehlo.multiply %10769, %10190 : tensor<3072x768xf32>
    %10771 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10772 = stablehlo.multiply %10771, %10193 : tensor<3072xf32>
    %10773 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10774 = stablehlo.multiply %10773, %10196 : tensor<768x3072xf32>
    %10775 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10776 = stablehlo.multiply %10775, %10199 : tensor<768xf32>
    %10777 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10778 = stablehlo.multiply %10777, %10202 : tensor<768xf32>
    %10779 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10780 = stablehlo.multiply %10779, %10205 : tensor<768xf32>
    %10781 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10782 = stablehlo.multiply %10781, %10208 : tensor<768x768xf32>
    %10783 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10784 = stablehlo.multiply %10783, %10211 : tensor<768xf32>
    %10785 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10786 = stablehlo.multiply %10785, %10214 : tensor<768x768xf32>
    %10787 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10788 = stablehlo.multiply %10787, %10217 : tensor<768xf32>
    %10789 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10790 = stablehlo.multiply %10789, %10220 : tensor<768x768xf32>
    %10791 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10792 = stablehlo.multiply %10791, %10223 : tensor<768xf32>
    %10793 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10794 = stablehlo.multiply %10793, %10226 : tensor<768x768xf32>
    %10795 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10796 = stablehlo.multiply %10795, %10229 : tensor<768xf32>
    %10797 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10798 = stablehlo.multiply %10797, %10232 : tensor<768xf32>
    %10799 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10800 = stablehlo.multiply %10799, %10235 : tensor<768xf32>
    %10801 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10802 = stablehlo.multiply %10801, %10238 : tensor<3072x768xf32>
    %10803 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10804 = stablehlo.multiply %10803, %10241 : tensor<3072xf32>
    %10805 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10806 = stablehlo.multiply %10805, %10244 : tensor<768x3072xf32>
    %10807 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10808 = stablehlo.multiply %10807, %10247 : tensor<768xf32>
    %10809 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10810 = stablehlo.multiply %10809, %10250 : tensor<768xf32>
    %10811 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10812 = stablehlo.multiply %10811, %10253 : tensor<768xf32>
    %10813 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10814 = stablehlo.multiply %10813, %10256 : tensor<768x768xf32>
    %10815 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10816 = stablehlo.multiply %10815, %10259 : tensor<768xf32>
    %10817 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10818 = stablehlo.multiply %10817, %10262 : tensor<768x768xf32>
    %10819 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10820 = stablehlo.multiply %10819, %10265 : tensor<768xf32>
    %10821 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10822 = stablehlo.multiply %10821, %10268 : tensor<768x768xf32>
    %10823 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10824 = stablehlo.multiply %10823, %10271 : tensor<768xf32>
    %10825 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10826 = stablehlo.multiply %10825, %10274 : tensor<768x768xf32>
    %10827 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10828 = stablehlo.multiply %10827, %10277 : tensor<768xf32>
    %10829 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10830 = stablehlo.multiply %10829, %10280 : tensor<768xf32>
    %10831 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10832 = stablehlo.multiply %10831, %10283 : tensor<768xf32>
    %10833 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10834 = stablehlo.multiply %10833, %10286 : tensor<3072x768xf32>
    %10835 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10836 = stablehlo.multiply %10835, %10289 : tensor<3072xf32>
    %10837 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10838 = stablehlo.multiply %10837, %10292 : tensor<768x3072xf32>
    %10839 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10840 = stablehlo.multiply %10839, %10295 : tensor<768xf32>
    %10841 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10842 = stablehlo.multiply %10841, %10298 : tensor<768xf32>
    %10843 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10844 = stablehlo.multiply %10843, %10301 : tensor<768xf32>
    %10845 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10846 = stablehlo.multiply %10845, %10304 : tensor<768x768xf32>
    %10847 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10848 = stablehlo.multiply %10847, %10307 : tensor<768xf32>
    %10849 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10850 = stablehlo.multiply %10849, %10310 : tensor<768x768xf32>
    %10851 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10852 = stablehlo.multiply %10851, %10313 : tensor<768xf32>
    %10853 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10854 = stablehlo.multiply %10853, %10316 : tensor<768x768xf32>
    %10855 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10856 = stablehlo.multiply %10855, %10319 : tensor<768xf32>
    %10857 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10858 = stablehlo.multiply %10857, %10322 : tensor<768x768xf32>
    %10859 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10860 = stablehlo.multiply %10859, %10325 : tensor<768xf32>
    %10861 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10862 = stablehlo.multiply %10861, %10328 : tensor<768xf32>
    %10863 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10864 = stablehlo.multiply %10863, %10331 : tensor<768xf32>
    %10865 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10866 = stablehlo.multiply %10865, %10334 : tensor<3072x768xf32>
    %10867 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10868 = stablehlo.multiply %10867, %10337 : tensor<3072xf32>
    %10869 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10870 = stablehlo.multiply %10869, %10340 : tensor<768x3072xf32>
    %10871 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10872 = stablehlo.multiply %10871, %10343 : tensor<768xf32>
    %10873 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10874 = stablehlo.multiply %10873, %10346 : tensor<768xf32>
    %10875 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10876 = stablehlo.multiply %10875, %10349 : tensor<768xf32>
    %10877 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10878 = stablehlo.multiply %10877, %10352 : tensor<768x768xf32>
    %10879 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10880 = stablehlo.multiply %10879, %10355 : tensor<768xf32>
    %10881 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10882 = stablehlo.multiply %10881, %10358 : tensor<768x768xf32>
    %10883 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10884 = stablehlo.multiply %10883, %10361 : tensor<768xf32>
    %10885 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10886 = stablehlo.multiply %10885, %10364 : tensor<768x768xf32>
    %10887 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10888 = stablehlo.multiply %10887, %10367 : tensor<768xf32>
    %10889 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10890 = stablehlo.multiply %10889, %10370 : tensor<768x768xf32>
    %10891 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10892 = stablehlo.multiply %10891, %10373 : tensor<768xf32>
    %10893 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10894 = stablehlo.multiply %10893, %10376 : tensor<768xf32>
    %10895 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10896 = stablehlo.multiply %10895, %10379 : tensor<768xf32>
    %10897 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10898 = stablehlo.multiply %10897, %10382 : tensor<3072x768xf32>
    %10899 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10900 = stablehlo.multiply %10899, %10385 : tensor<3072xf32>
    %10901 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10902 = stablehlo.multiply %10901, %10388 : tensor<768x3072xf32>
    %10903 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10904 = stablehlo.multiply %10903, %10391 : tensor<768xf32>
    %10905 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10906 = stablehlo.multiply %10905, %10394 : tensor<768xf32>
    %10907 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10908 = stablehlo.multiply %10907, %10397 : tensor<768xf32>
    %10909 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10910 = stablehlo.multiply %10909, %10400 : tensor<768x768xf32>
    %10911 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10912 = stablehlo.multiply %10911, %10403 : tensor<768xf32>
    %10913 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10914 = stablehlo.multiply %10913, %10406 : tensor<768x768xf32>
    %10915 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10916 = stablehlo.multiply %10915, %10409 : tensor<768xf32>
    %10917 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10918 = stablehlo.multiply %10917, %10412 : tensor<768x768xf32>
    %10919 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10920 = stablehlo.multiply %10919, %10415 : tensor<768xf32>
    %10921 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10922 = stablehlo.multiply %10921, %10418 : tensor<768x768xf32>
    %10923 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10924 = stablehlo.multiply %10923, %10421 : tensor<768xf32>
    %10925 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10926 = stablehlo.multiply %10925, %10424 : tensor<768xf32>
    %10927 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10928 = stablehlo.multiply %10927, %10427 : tensor<768xf32>
    %10929 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10930 = stablehlo.multiply %10929, %10430 : tensor<3072x768xf32>
    %10931 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10932 = stablehlo.multiply %10931, %10433 : tensor<3072xf32>
    %10933 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10934 = stablehlo.multiply %10933, %10436 : tensor<768x3072xf32>
    %10935 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10936 = stablehlo.multiply %10935, %10439 : tensor<768xf32>
    %10937 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10938 = stablehlo.multiply %10937, %10442 : tensor<768xf32>
    %10939 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10940 = stablehlo.multiply %10939, %10445 : tensor<768xf32>
    %10941 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10942 = stablehlo.multiply %10941, %10448 : tensor<768x768xf32>
    %10943 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10944 = stablehlo.multiply %10943, %10451 : tensor<768xf32>
    %10945 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10946 = stablehlo.multiply %10945, %10454 : tensor<768x768xf32>
    %10947 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10948 = stablehlo.multiply %10947, %10457 : tensor<768xf32>
    %10949 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10950 = stablehlo.multiply %10949, %10460 : tensor<768x768xf32>
    %10951 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10952 = stablehlo.multiply %10951, %10463 : tensor<768xf32>
    %10953 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10954 = stablehlo.multiply %10953, %10466 : tensor<768x768xf32>
    %10955 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10956 = stablehlo.multiply %10955, %10469 : tensor<768xf32>
    %10957 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10958 = stablehlo.multiply %10957, %10472 : tensor<768xf32>
    %10959 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10960 = stablehlo.multiply %10959, %10475 : tensor<768xf32>
    %10961 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10962 = stablehlo.multiply %10961, %10478 : tensor<3072x768xf32>
    %10963 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10964 = stablehlo.multiply %10963, %10481 : tensor<3072xf32>
    %10965 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10966 = stablehlo.multiply %10965, %10484 : tensor<768x3072xf32>
    %10967 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10968 = stablehlo.multiply %10967, %10487 : tensor<768xf32>
    %10969 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10970 = stablehlo.multiply %10969, %10490 : tensor<768xf32>
    %10971 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10972 = stablehlo.multiply %10971, %10493 : tensor<768xf32>
    %10973 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10974 = stablehlo.multiply %10973, %10496 : tensor<768x768xf32>
    %10975 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10976 = stablehlo.multiply %10975, %10499 : tensor<768xf32>
    %10977 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10978 = stablehlo.multiply %10977, %10502 : tensor<768x768xf32>
    %10979 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10980 = stablehlo.multiply %10979, %10505 : tensor<768xf32>
    %10981 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10982 = stablehlo.multiply %10981, %10508 : tensor<768x768xf32>
    %10983 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10984 = stablehlo.multiply %10983, %10511 : tensor<768xf32>
    %10985 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10986 = stablehlo.multiply %10985, %10514 : tensor<768x768xf32>
    %10987 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10988 = stablehlo.multiply %10987, %10517 : tensor<768xf32>
    %10989 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10990 = stablehlo.multiply %10989, %10520 : tensor<768xf32>
    %10991 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10992 = stablehlo.multiply %10991, %10523 : tensor<768xf32>
    %10993 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10994 = stablehlo.multiply %10993, %10526 : tensor<3072x768xf32>
    %10995 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10996 = stablehlo.multiply %10995, %10529 : tensor<3072xf32>
    %10997 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10998 = stablehlo.multiply %10997, %10532 : tensor<768x3072xf32>
    %10999 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11000 = stablehlo.multiply %10999, %10535 : tensor<768xf32>
    %11001 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11002 = stablehlo.multiply %11001, %10538 : tensor<768xf32>
    %11003 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11004 = stablehlo.multiply %11003, %10541 : tensor<768xf32>
    %11005 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11006 = stablehlo.multiply %11005, %10544 : tensor<768x768xf32>
    %11007 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11008 = stablehlo.multiply %11007, %10547 : tensor<768xf32>
    %11009 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11010 = stablehlo.multiply %11009, %10550 : tensor<768x768xf32>
    %11011 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11012 = stablehlo.multiply %11011, %10553 : tensor<768xf32>
    %11013 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11014 = stablehlo.multiply %11013, %10556 : tensor<768x768xf32>
    %11015 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11016 = stablehlo.multiply %11015, %10559 : tensor<768xf32>
    %11017 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11018 = stablehlo.multiply %11017, %10562 : tensor<768x768xf32>
    %11019 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11020 = stablehlo.multiply %11019, %10565 : tensor<768xf32>
    %11021 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11022 = stablehlo.multiply %11021, %10568 : tensor<768xf32>
    %11023 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11024 = stablehlo.multiply %11023, %10571 : tensor<768xf32>
    %11025 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11026 = stablehlo.multiply %11025, %10574 : tensor<3072x768xf32>
    %11027 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11028 = stablehlo.multiply %11027, %10577 : tensor<3072xf32>
    %11029 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11030 = stablehlo.multiply %11029, %10580 : tensor<768x3072xf32>
    %11031 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11032 = stablehlo.multiply %11031, %10583 : tensor<768xf32>
    %11033 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11034 = stablehlo.multiply %11033, %10586 : tensor<768xf32>
    %11035 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11036 = stablehlo.multiply %11035, %10589 : tensor<768xf32>
    %11037 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11038 = stablehlo.multiply %11037, %10592 : tensor<768x768xf32>
    %11039 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11040 = stablehlo.multiply %11039, %10595 : tensor<768xf32>
    %11041 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11042 = stablehlo.multiply %11041, %10598 : tensor<768x768xf32>
    %11043 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11044 = stablehlo.multiply %11043, %10601 : tensor<768xf32>
    %11045 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11046 = stablehlo.multiply %11045, %10604 : tensor<768x768xf32>
    %11047 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11048 = stablehlo.multiply %11047, %10607 : tensor<768xf32>
    %11049 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11050 = stablehlo.multiply %11049, %10610 : tensor<768x768xf32>
    %11051 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11052 = stablehlo.multiply %11051, %10613 : tensor<768xf32>
    %11053 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11054 = stablehlo.multiply %11053, %10616 : tensor<768xf32>
    %11055 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11056 = stablehlo.multiply %11055, %10619 : tensor<768xf32>
    %11057 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11058 = stablehlo.multiply %11057, %10622 : tensor<3072x768xf32>
    %11059 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11060 = stablehlo.multiply %11059, %10625 : tensor<3072xf32>
    %11061 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11062 = stablehlo.multiply %11061, %10628 : tensor<768x3072xf32>
    %11063 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11064 = stablehlo.multiply %11063, %10631 : tensor<768xf32>
    %11065 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11066 = stablehlo.multiply %11065, %10634 : tensor<768xf32>
    %11067 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11068 = stablehlo.multiply %11067, %10637 : tensor<768xf32>
    %11069 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11070 = stablehlo.multiply %11069, %10640 : tensor<768x768xf32>
    %11071 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11072 = stablehlo.multiply %11071, %10643 : tensor<768xf32>
    %11073 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11074 = stablehlo.multiply %11073, %10646 : tensor<768xf32>
    %11075 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11076 = stablehlo.multiply %11075, %10649 : tensor<768xf32>
    %11077 = stablehlo.broadcast_in_dim %10674, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11078 = stablehlo.multiply %11077, %10652 : tensor<30522xf32>
    %11079 = stablehlo.compare  LT, %arg607, %c_650,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11080 = stablehlo.add %arg607, %c_12 : tensor<i32>
    %11081 = call @_where_303(%11079, %11080, %c_650) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11082 = stablehlo.add %arg0, %10676 : tensor<30522x768xf32>
    %11083 = stablehlo.add %arg1, %10678 : tensor<512x768xf32>
    %11084 = stablehlo.add %arg2, %10680 : tensor<2x768xf32>
    %11085 = stablehlo.add %arg3, %10682 : tensor<768xf32>
    %11086 = stablehlo.add %arg4, %10684 : tensor<768xf32>
    %11087 = stablehlo.add %arg5, %10686 : tensor<768x768xf32>
    %11088 = stablehlo.add %arg6, %10688 : tensor<768xf32>
    %11089 = stablehlo.add %arg7, %10690 : tensor<768x768xf32>
    %11090 = stablehlo.add %arg8, %10692 : tensor<768xf32>
    %11091 = stablehlo.add %arg9, %10694 : tensor<768x768xf32>
    %11092 = stablehlo.add %arg10, %10696 : tensor<768xf32>
    %11093 = stablehlo.add %arg11, %10698 : tensor<768x768xf32>
    %11094 = stablehlo.add %arg12, %10700 : tensor<768xf32>
    %11095 = stablehlo.add %arg13, %10702 : tensor<768xf32>
    %11096 = stablehlo.add %arg14, %10704 : tensor<768xf32>
    %11097 = stablehlo.add %arg15, %10706 : tensor<3072x768xf32>
    %11098 = stablehlo.add %arg16, %10708 : tensor<3072xf32>
    %11099 = stablehlo.add %arg17, %10710 : tensor<768x3072xf32>
    %11100 = stablehlo.add %arg18, %10712 : tensor<768xf32>
    %11101 = stablehlo.add %arg19, %10714 : tensor<768xf32>
    %11102 = stablehlo.add %arg20, %10716 : tensor<768xf32>
    %11103 = stablehlo.add %arg21, %10718 : tensor<768x768xf32>
    %11104 = stablehlo.add %arg22, %10720 : tensor<768xf32>
    %11105 = stablehlo.add %arg23, %10722 : tensor<768x768xf32>
    %11106 = stablehlo.add %arg24, %10724 : tensor<768xf32>
    %11107 = stablehlo.add %arg25, %10726 : tensor<768x768xf32>
    %11108 = stablehlo.add %arg26, %10728 : tensor<768xf32>
    %11109 = stablehlo.add %arg27, %10730 : tensor<768x768xf32>
    %11110 = stablehlo.add %arg28, %10732 : tensor<768xf32>
    %11111 = stablehlo.add %arg29, %10734 : tensor<768xf32>
    %11112 = stablehlo.add %arg30, %10736 : tensor<768xf32>
    %11113 = stablehlo.add %arg31, %10738 : tensor<3072x768xf32>
    %11114 = stablehlo.add %arg32, %10740 : tensor<3072xf32>
    %11115 = stablehlo.add %arg33, %10742 : tensor<768x3072xf32>
    %11116 = stablehlo.add %arg34, %10744 : tensor<768xf32>
    %11117 = stablehlo.add %arg35, %10746 : tensor<768xf32>
    %11118 = stablehlo.add %arg36, %10748 : tensor<768xf32>
    %11119 = stablehlo.add %arg37, %10750 : tensor<768x768xf32>
    %11120 = stablehlo.add %arg38, %10752 : tensor<768xf32>
    %11121 = stablehlo.add %arg39, %10754 : tensor<768x768xf32>
    %11122 = stablehlo.add %arg40, %10756 : tensor<768xf32>
    %11123 = stablehlo.add %arg41, %10758 : tensor<768x768xf32>
    %11124 = stablehlo.add %arg42, %10760 : tensor<768xf32>
    %11125 = stablehlo.add %arg43, %10762 : tensor<768x768xf32>
    %11126 = stablehlo.add %arg44, %10764 : tensor<768xf32>
    %11127 = stablehlo.add %arg45, %10766 : tensor<768xf32>
    %11128 = stablehlo.add %arg46, %10768 : tensor<768xf32>
    %11129 = stablehlo.add %arg47, %10770 : tensor<3072x768xf32>
    %11130 = stablehlo.add %arg48, %10772 : tensor<3072xf32>
    %11131 = stablehlo.add %arg49, %10774 : tensor<768x3072xf32>
    %11132 = stablehlo.add %arg50, %10776 : tensor<768xf32>
    %11133 = stablehlo.add %arg51, %10778 : tensor<768xf32>
    %11134 = stablehlo.add %arg52, %10780 : tensor<768xf32>
    %11135 = stablehlo.add %arg53, %10782 : tensor<768x768xf32>
    %11136 = stablehlo.add %arg54, %10784 : tensor<768xf32>
    %11137 = stablehlo.add %arg55, %10786 : tensor<768x768xf32>
    %11138 = stablehlo.add %arg56, %10788 : tensor<768xf32>
    %11139 = stablehlo.add %arg57, %10790 : tensor<768x768xf32>
    %11140 = stablehlo.add %arg58, %10792 : tensor<768xf32>
    %11141 = stablehlo.add %arg59, %10794 : tensor<768x768xf32>
    %11142 = stablehlo.add %arg60, %10796 : tensor<768xf32>
    %11143 = stablehlo.add %arg61, %10798 : tensor<768xf32>
    %11144 = stablehlo.add %arg62, %10800 : tensor<768xf32>
    %11145 = stablehlo.add %arg63, %10802 : tensor<3072x768xf32>
    %11146 = stablehlo.add %arg64, %10804 : tensor<3072xf32>
    %11147 = stablehlo.add %arg65, %10806 : tensor<768x3072xf32>
    %11148 = stablehlo.add %arg66, %10808 : tensor<768xf32>
    %11149 = stablehlo.add %arg67, %10810 : tensor<768xf32>
    %11150 = stablehlo.add %arg68, %10812 : tensor<768xf32>
    %11151 = stablehlo.add %arg69, %10814 : tensor<768x768xf32>
    %11152 = stablehlo.add %arg70, %10816 : tensor<768xf32>
    %11153 = stablehlo.add %arg71, %10818 : tensor<768x768xf32>
    %11154 = stablehlo.add %arg72, %10820 : tensor<768xf32>
    %11155 = stablehlo.add %arg73, %10822 : tensor<768x768xf32>
    %11156 = stablehlo.add %arg74, %10824 : tensor<768xf32>
    %11157 = stablehlo.add %arg75, %10826 : tensor<768x768xf32>
    %11158 = stablehlo.add %arg76, %10828 : tensor<768xf32>
    %11159 = stablehlo.add %arg77, %10830 : tensor<768xf32>
    %11160 = stablehlo.add %arg78, %10832 : tensor<768xf32>
    %11161 = stablehlo.add %arg79, %10834 : tensor<3072x768xf32>
    %11162 = stablehlo.add %arg80, %10836 : tensor<3072xf32>
    %11163 = stablehlo.add %arg81, %10838 : tensor<768x3072xf32>
    %11164 = stablehlo.add %arg82, %10840 : tensor<768xf32>
    %11165 = stablehlo.add %arg83, %10842 : tensor<768xf32>
    %11166 = stablehlo.add %arg84, %10844 : tensor<768xf32>
    %11167 = stablehlo.add %arg85, %10846 : tensor<768x768xf32>
    %11168 = stablehlo.add %arg86, %10848 : tensor<768xf32>
    %11169 = stablehlo.add %arg87, %10850 : tensor<768x768xf32>
    %11170 = stablehlo.add %arg88, %10852 : tensor<768xf32>
    %11171 = stablehlo.add %arg89, %10854 : tensor<768x768xf32>
    %11172 = stablehlo.add %arg90, %10856 : tensor<768xf32>
    %11173 = stablehlo.add %arg91, %10858 : tensor<768x768xf32>
    %11174 = stablehlo.add %arg92, %10860 : tensor<768xf32>
    %11175 = stablehlo.add %arg93, %10862 : tensor<768xf32>
    %11176 = stablehlo.add %arg94, %10864 : tensor<768xf32>
    %11177 = stablehlo.add %arg95, %10866 : tensor<3072x768xf32>
    %11178 = stablehlo.add %arg96, %10868 : tensor<3072xf32>
    %11179 = stablehlo.add %arg97, %10870 : tensor<768x3072xf32>
    %11180 = stablehlo.add %arg98, %10872 : tensor<768xf32>
    %11181 = stablehlo.add %arg99, %10874 : tensor<768xf32>
    %11182 = stablehlo.add %arg100, %10876 : tensor<768xf32>
    %11183 = stablehlo.add %arg101, %10878 : tensor<768x768xf32>
    %11184 = stablehlo.add %arg102, %10880 : tensor<768xf32>
    %11185 = stablehlo.add %arg103, %10882 : tensor<768x768xf32>
    %11186 = stablehlo.add %arg104, %10884 : tensor<768xf32>
    %11187 = stablehlo.add %arg105, %10886 : tensor<768x768xf32>
    %11188 = stablehlo.add %arg106, %10888 : tensor<768xf32>
    %11189 = stablehlo.add %arg107, %10890 : tensor<768x768xf32>
    %11190 = stablehlo.add %arg108, %10892 : tensor<768xf32>
    %11191 = stablehlo.add %arg109, %10894 : tensor<768xf32>
    %11192 = stablehlo.add %arg110, %10896 : tensor<768xf32>
    %11193 = stablehlo.add %arg111, %10898 : tensor<3072x768xf32>
    %11194 = stablehlo.add %arg112, %10900 : tensor<3072xf32>
    %11195 = stablehlo.add %arg113, %10902 : tensor<768x3072xf32>
    %11196 = stablehlo.add %arg114, %10904 : tensor<768xf32>
    %11197 = stablehlo.add %arg115, %10906 : tensor<768xf32>
    %11198 = stablehlo.add %arg116, %10908 : tensor<768xf32>
    %11199 = stablehlo.add %arg117, %10910 : tensor<768x768xf32>
    %11200 = stablehlo.add %arg118, %10912 : tensor<768xf32>
    %11201 = stablehlo.add %arg119, %10914 : tensor<768x768xf32>
    %11202 = stablehlo.add %arg120, %10916 : tensor<768xf32>
    %11203 = stablehlo.add %arg121, %10918 : tensor<768x768xf32>
    %11204 = stablehlo.add %arg122, %10920 : tensor<768xf32>
    %11205 = stablehlo.add %arg123, %10922 : tensor<768x768xf32>
    %11206 = stablehlo.add %arg124, %10924 : tensor<768xf32>
    %11207 = stablehlo.add %arg125, %10926 : tensor<768xf32>
    %11208 = stablehlo.add %arg126, %10928 : tensor<768xf32>
    %11209 = stablehlo.add %arg127, %10930 : tensor<3072x768xf32>
    %11210 = stablehlo.add %arg128, %10932 : tensor<3072xf32>
    %11211 = stablehlo.add %arg129, %10934 : tensor<768x3072xf32>
    %11212 = stablehlo.add %arg130, %10936 : tensor<768xf32>
    %11213 = stablehlo.add %arg131, %10938 : tensor<768xf32>
    %11214 = stablehlo.add %arg132, %10940 : tensor<768xf32>
    %11215 = stablehlo.add %arg133, %10942 : tensor<768x768xf32>
    %11216 = stablehlo.add %arg134, %10944 : tensor<768xf32>
    %11217 = stablehlo.add %arg135, %10946 : tensor<768x768xf32>
    %11218 = stablehlo.add %arg136, %10948 : tensor<768xf32>
    %11219 = stablehlo.add %arg137, %10950 : tensor<768x768xf32>
    %11220 = stablehlo.add %arg138, %10952 : tensor<768xf32>
    %11221 = stablehlo.add %arg139, %10954 : tensor<768x768xf32>
    %11222 = stablehlo.add %arg140, %10956 : tensor<768xf32>
    %11223 = stablehlo.add %arg141, %10958 : tensor<768xf32>
    %11224 = stablehlo.add %arg142, %10960 : tensor<768xf32>
    %11225 = stablehlo.add %arg143, %10962 : tensor<3072x768xf32>
    %11226 = stablehlo.add %arg144, %10964 : tensor<3072xf32>
    %11227 = stablehlo.add %arg145, %10966 : tensor<768x3072xf32>
    %11228 = stablehlo.add %arg146, %10968 : tensor<768xf32>
    %11229 = stablehlo.add %arg147, %10970 : tensor<768xf32>
    %11230 = stablehlo.add %arg148, %10972 : tensor<768xf32>
    %11231 = stablehlo.add %arg149, %10974 : tensor<768x768xf32>
    %11232 = stablehlo.add %arg150, %10976 : tensor<768xf32>
    %11233 = stablehlo.add %arg151, %10978 : tensor<768x768xf32>
    %11234 = stablehlo.add %arg152, %10980 : tensor<768xf32>
    %11235 = stablehlo.add %arg153, %10982 : tensor<768x768xf32>
    %11236 = stablehlo.add %arg154, %10984 : tensor<768xf32>
    %11237 = stablehlo.add %arg155, %10986 : tensor<768x768xf32>
    %11238 = stablehlo.add %arg156, %10988 : tensor<768xf32>
    %11239 = stablehlo.add %arg157, %10990 : tensor<768xf32>
    %11240 = stablehlo.add %arg158, %10992 : tensor<768xf32>
    %11241 = stablehlo.add %arg159, %10994 : tensor<3072x768xf32>
    %11242 = stablehlo.add %arg160, %10996 : tensor<3072xf32>
    %11243 = stablehlo.add %arg161, %10998 : tensor<768x3072xf32>
    %11244 = stablehlo.add %arg162, %11000 : tensor<768xf32>
    %11245 = stablehlo.add %arg163, %11002 : tensor<768xf32>
    %11246 = stablehlo.add %arg164, %11004 : tensor<768xf32>
    %11247 = stablehlo.add %arg165, %11006 : tensor<768x768xf32>
    %11248 = stablehlo.add %arg166, %11008 : tensor<768xf32>
    %11249 = stablehlo.add %arg167, %11010 : tensor<768x768xf32>
    %11250 = stablehlo.add %arg168, %11012 : tensor<768xf32>
    %11251 = stablehlo.add %arg169, %11014 : tensor<768x768xf32>
    %11252 = stablehlo.add %arg170, %11016 : tensor<768xf32>
    %11253 = stablehlo.add %arg171, %11018 : tensor<768x768xf32>
    %11254 = stablehlo.add %arg172, %11020 : tensor<768xf32>
    %11255 = stablehlo.add %arg173, %11022 : tensor<768xf32>
    %11256 = stablehlo.add %arg174, %11024 : tensor<768xf32>
    %11257 = stablehlo.add %arg175, %11026 : tensor<3072x768xf32>
    %11258 = stablehlo.add %arg176, %11028 : tensor<3072xf32>
    %11259 = stablehlo.add %arg177, %11030 : tensor<768x3072xf32>
    %11260 = stablehlo.add %arg178, %11032 : tensor<768xf32>
    %11261 = stablehlo.add %arg179, %11034 : tensor<768xf32>
    %11262 = stablehlo.add %arg180, %11036 : tensor<768xf32>
    %11263 = stablehlo.add %arg181, %11038 : tensor<768x768xf32>
    %11264 = stablehlo.add %arg182, %11040 : tensor<768xf32>
    %11265 = stablehlo.add %arg183, %11042 : tensor<768x768xf32>
    %11266 = stablehlo.add %arg184, %11044 : tensor<768xf32>
    %11267 = stablehlo.add %arg185, %11046 : tensor<768x768xf32>
    %11268 = stablehlo.add %arg186, %11048 : tensor<768xf32>
    %11269 = stablehlo.add %arg187, %11050 : tensor<768x768xf32>
    %11270 = stablehlo.add %arg188, %11052 : tensor<768xf32>
    %11271 = stablehlo.add %arg189, %11054 : tensor<768xf32>
    %11272 = stablehlo.add %arg190, %11056 : tensor<768xf32>
    %11273 = stablehlo.add %arg191, %11058 : tensor<3072x768xf32>
    %11274 = stablehlo.add %arg192, %11060 : tensor<3072xf32>
    %11275 = stablehlo.add %arg193, %11062 : tensor<768x3072xf32>
    %11276 = stablehlo.add %arg194, %11064 : tensor<768xf32>
    %11277 = stablehlo.add %arg195, %11066 : tensor<768xf32>
    %11278 = stablehlo.add %arg196, %11068 : tensor<768xf32>
    %11279 = stablehlo.add %arg197, %11070 : tensor<768x768xf32>
    %11280 = stablehlo.add %arg198, %11072 : tensor<768xf32>
    %11281 = stablehlo.add %arg199, %11074 : tensor<768xf32>
    %11282 = stablehlo.add %arg200, %11076 : tensor<768xf32>
    %11283 = stablehlo.add %arg201, %11078 : tensor<30522xf32>
    return %c_4, %11082, %11083, %11084, %11085, %11086, %11087, %11088, %11089, %11090, %11091, %11092, %11093, %11094, %11095, %11096, %11097, %11098, %11099, %11100, %11101, %11102, %11103, %11104, %11105, %11106, %11107, %11108, %11109, %11110, %11111, %11112, %11113, %11114, %11115, %11116, %11117, %11118, %11119, %11120, %11121, %11122, %11123, %11124, %11125, %11126, %11127, %11128, %11129, %11130, %11131, %11132, %11133, %11134, %11135, %11136, %11137, %11138, %11139, %11140, %11141, %11142, %11143, %11144, %11145, %11146, %11147, %11148, %11149, %11150, %11151, %11152, %11153, %11154, %11155, %11156, %11157, %11158, %11159, %11160, %11161, %11162, %11163, %11164, %11165, %11166, %11167, %11168, %11169, %11170, %11171, %11172, %11173, %11174, %11175, %11176, %11177, %11178, %11179, %11180, %11181, %11182, %11183, %11184, %11185, %11186, %11187, %11188, %11189, %11190, %11191, %11192, %11193, %11194, %11195, %11196, %11197, %11198, %11199, %11200, %11201, %11202, %11203, %11204, %11205, %11206, %11207, %11208, %11209, %11210, %11211, %11212, %11213, %11214, %11215, %11216, %11217, %11218, %11219, %11220, %11221, %11222, %11223, %11224, %11225, %11226, %11227, %11228, %11229, %11230, %11231, %11232, %11233, %11234, %11235, %11236, %11237, %11238, %11239, %11240, %11241, %11242, %11243, %11244, %11245, %11246, %11247, %11248, %11249, %11250, %11251, %11252, %11253, %11254, %11255, %11256, %11257, %11258, %11259, %11260, %11261, %11262, %11263, %11264, %11265, %11266, %11267, %11268, %11269, %11270, %11271, %11272, %11273, %11274, %11275, %11276, %11277, %11278, %11279, %11280, %11281, %11282, %11283, %8020, %5800, %5805, %5810, %5815, %5820, %5825, %5830, %5835, %5840, %5845, %5850, %5855, %5860, %5865, %5870, %5875, %5880, %5885, %5890, %5895, %5900, %5905, %5910, %5915, %5920, %5925, %5930, %5935, %5940, %5945, %5950, %5955, %5960, %5965, %5970, %5975, %5980, %5985, %5990, %5995, %6000, %6005, %6010, %6015, %6020, %6025, %6030, %6035, %6040, %6045, %6050, %6055, %6060, %6065, %6070, %6075, %6080, %6085, %6090, %6095, %6100, %6105, %6110, %6115, %6120, %6125, %6130, %6135, %6140, %6145, %6150, %6155, %6160, %6165, %6170, %6175, %6180, %6185, %6190, %6195, %6200, %6205, %6210, %6215, %6220, %6225, %6230, %6235, %6240, %6245, %6250, %6255, %6260, %6265, %6270, %6275, %6280, %6285, %6290, %6295, %6300, %6305, %6310, %6315, %6320, %6325, %6330, %6335, %6340, %6345, %6350, %6355, %6360, %6365, %6370, %6375, %6380, %6385, %6390, %6395, %6400, %6405, %6410, %6415, %6420, %6425, %6430, %6435, %6440, %6445, %6450, %6455, %6460, %6465, %6470, %6475, %6480, %6485, %6490, %6495, %6500, %6505, %6510, %6515, %6520, %6525, %6530, %6535, %6540, %6545, %6550, %6555, %6560, %6565, %6570, %6575, %6580, %6585, %6590, %6595, %6600, %6605, %6610, %6615, %6620, %6625, %6630, %6635, %6640, %6645, %6650, %6655, %6660, %6665, %6670, %6675, %6680, %6685, %6690, %6695, %6700, %6705, %6710, %6715, %6720, %6725, %6730, %6735, %6740, %6745, %6750, %6755, %6760, %6765, %6770, %6775, %6780, %6785, %6790, %6795, %6800, %6805, %6811, %6817, %6823, %6829, %6835, %6841, %6847, %6853, %6859, %6865, %6871, %6877, %6883, %6889, %6895, %6901, %6907, %6913, %6919, %6925, %6931, %6937, %6943, %6949, %6955, %6961, %6967, %6973, %6979, %6985, %6991, %6997, %7003, %7009, %7015, %7021, %7027, %7033, %7039, %7045, %7051, %7057, %7063, %7069, %7075, %7081, %7087, %7093, %7099, %7105, %7111, %7117, %7123, %7129, %7135, %7141, %7147, %7153, %7159, %7165, %7171, %7177, %7183, %7189, %7195, %7201, %7207, %7213, %7219, %7225, %7231, %7237, %7243, %7249, %7255, %7261, %7267, %7273, %7279, %7285, %7291, %7297, %7303, %7309, %7315, %7321, %7327, %7333, %7339, %7345, %7351, %7357, %7363, %7369, %7375, %7381, %7387, %7393, %7399, %7405, %7411, %7417, %7423, %7429, %7435, %7441, %7447, %7453, %7459, %7465, %7471, %7477, %7483, %7489, %7495, %7501, %7507, %7513, %7519, %7525, %7531, %7537, %7543, %7549, %7555, %7561, %7567, %7573, %7579, %7585, %7591, %7597, %7603, %7609, %7615, %7621, %7627, %7633, %7639, %7645, %7651, %7657, %7663, %7669, %7675, %7681, %7687, %7693, %7699, %7705, %7711, %7717, %7723, %7729, %7735, %7741, %7747, %7753, %7759, %7765, %7771, %7777, %7783, %7789, %7795, %7801, %7807, %7813, %7819, %7825, %7831, %7837, %7843, %7849, %7855, %7861, %7867, %7873, %7879, %7885, %7891, %7897, %7903, %7909, %7915, %7921, %7927, %7933, %7939, %7945, %7951, %7957, %7963, %7969, %7975, %7981, %7987, %7993, %7999, %8005, %8011, %8017, %11081, %2277, %2272, %2270, %2272, %2272 : tensor<i32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<i32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_var(%arg0: tensor<64x512x768xf32>, %arg1: tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>) {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.reduce(%arg0 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_0 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3 = stablehlo.divide %1, %2 : tensor<64x512x1xf32>
    %4 = stablehlo.broadcast_in_dim %3, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %5 = stablehlo.subtract %arg0, %4 : tensor<64x512x768xf32>
    %6 = stablehlo.multiply %5, %5 : tensor<64x512x768xf32>
    %cst_1 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %7 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %8 = stablehlo.multiply %7, %5 : tensor<64x512x768xf32>
    %9 = stablehlo.convert %arg1 : (tensor<i32>) -> tensor<f32>
    %10 = stablehlo.subtract %cst_0, %9 : tensor<f32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %11 = stablehlo.reduce(%6 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %12 = stablehlo.broadcast_in_dim %11, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %13 = stablehlo.broadcast_in_dim %10, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %14 = stablehlo.divide %12, %13 : tensor<64x512x1xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %15 = stablehlo.compare  GT, %10, %cst_3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %cst_4 = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %16 = call @_where(%15, %14, %cst_4) : (tensor<i1>, tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    return %16, %8, %10, %15 : tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>
  }
  func.func private @_where(%arg0: tensor<i1>, %arg1: tensor<64x512x1xf32>, %arg2: tensor<f32>) -> tensor<64x512x1xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<i1>, tensor<64x512x1xf32>
    return %2 : tensor<64x512x1xf32>
  }
  func.func private @_threefry_fold_in(%arg0: tensor<2xui32>, %arg1: tensor<ui32>) -> tensor<2xui32> {
    %c = stablehlo.constant dense<32> : tensor<ui32>
    %0 = stablehlo.shift_right_logical %arg1, %c : tensor<ui32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %c_0 = stablehlo.constant dense<4294967295> : tensor<ui32>
    %2 = stablehlo.and %arg1, %c_0 : tensor<ui32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %4 = stablehlo.concatenate %1, %3, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    %5 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %6 = stablehlo.reshape %5 : (tensor<1xui32>) -> tensor<ui32>
    %7 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %8 = stablehlo.reshape %7 : (tensor<1xui32>) -> tensor<ui32>
    %9 = stablehlo.slice %4 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %10 = stablehlo.slice %4 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %11:2 = call @threefry2x32(%6, %8, %9, %10) : (tensor<ui32>, tensor<ui32>, tensor<1xui32>, tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>)
    %12 = stablehlo.concatenate %11#0, %11#1, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    return %12 : tensor<2xui32>
  }
  func.func private @threefry2x32(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<1xui32>, %arg3: tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<1xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<1xui32>
    %6 = stablehlo.add %3, %5 : tensor<1xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<1xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<1xui32>
    %11 = stablehlo.or %8, %10 : tensor<1xui32>
    %12 = stablehlo.xor %6, %11 : tensor<1xui32>
    %13 = stablehlo.add %6, %12 : tensor<1xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<1xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<1xui32>
    %18 = stablehlo.or %15, %17 : tensor<1xui32>
    %19 = stablehlo.xor %13, %18 : tensor<1xui32>
    %20 = stablehlo.add %13, %19 : tensor<1xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<1xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<1xui32>
    %25 = stablehlo.or %22, %24 : tensor<1xui32>
    %26 = stablehlo.xor %20, %25 : tensor<1xui32>
    %27 = stablehlo.add %20, %26 : tensor<1xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<1xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<1xui32>
    %32 = stablehlo.or %29, %31 : tensor<1xui32>
    %33 = stablehlo.xor %27, %32 : tensor<1xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %35 = stablehlo.add %27, %34 : tensor<1xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %37 = stablehlo.add %33, %36 : tensor<1xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %39 = stablehlo.add %37, %38 : tensor<1xui32>
    %40 = stablehlo.add %35, %39 : tensor<1xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<1xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<1xui32>
    %45 = stablehlo.or %42, %44 : tensor<1xui32>
    %46 = stablehlo.xor %40, %45 : tensor<1xui32>
    %47 = stablehlo.add %40, %46 : tensor<1xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<1xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<1xui32>
    %52 = stablehlo.or %49, %51 : tensor<1xui32>
    %53 = stablehlo.xor %47, %52 : tensor<1xui32>
    %54 = stablehlo.add %47, %53 : tensor<1xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<1xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<1xui32>
    %59 = stablehlo.or %56, %58 : tensor<1xui32>
    %60 = stablehlo.xor %54, %59 : tensor<1xui32>
    %61 = stablehlo.add %54, %60 : tensor<1xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<1xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<1xui32>
    %66 = stablehlo.or %63, %65 : tensor<1xui32>
    %67 = stablehlo.xor %61, %66 : tensor<1xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %69 = stablehlo.add %61, %68 : tensor<1xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %71 = stablehlo.add %67, %70 : tensor<1xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %73 = stablehlo.add %71, %72 : tensor<1xui32>
    %74 = stablehlo.add %69, %73 : tensor<1xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<1xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<1xui32>
    %79 = stablehlo.or %76, %78 : tensor<1xui32>
    %80 = stablehlo.xor %74, %79 : tensor<1xui32>
    %81 = stablehlo.add %74, %80 : tensor<1xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<1xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<1xui32>
    %86 = stablehlo.or %83, %85 : tensor<1xui32>
    %87 = stablehlo.xor %81, %86 : tensor<1xui32>
    %88 = stablehlo.add %81, %87 : tensor<1xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<1xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<1xui32>
    %93 = stablehlo.or %90, %92 : tensor<1xui32>
    %94 = stablehlo.xor %88, %93 : tensor<1xui32>
    %95 = stablehlo.add %88, %94 : tensor<1xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<1xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<1xui32>
    %100 = stablehlo.or %97, %99 : tensor<1xui32>
    %101 = stablehlo.xor %95, %100 : tensor<1xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %103 = stablehlo.add %95, %102 : tensor<1xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %105 = stablehlo.add %101, %104 : tensor<1xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %107 = stablehlo.add %105, %106 : tensor<1xui32>
    %108 = stablehlo.add %103, %107 : tensor<1xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<1xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<1xui32>
    %113 = stablehlo.or %110, %112 : tensor<1xui32>
    %114 = stablehlo.xor %108, %113 : tensor<1xui32>
    %115 = stablehlo.add %108, %114 : tensor<1xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<1xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<1xui32>
    %120 = stablehlo.or %117, %119 : tensor<1xui32>
    %121 = stablehlo.xor %115, %120 : tensor<1xui32>
    %122 = stablehlo.add %115, %121 : tensor<1xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<1xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<1xui32>
    %127 = stablehlo.or %124, %126 : tensor<1xui32>
    %128 = stablehlo.xor %122, %127 : tensor<1xui32>
    %129 = stablehlo.add %122, %128 : tensor<1xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<1xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<1xui32>
    %134 = stablehlo.or %131, %133 : tensor<1xui32>
    %135 = stablehlo.xor %129, %134 : tensor<1xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %137 = stablehlo.add %129, %136 : tensor<1xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %139 = stablehlo.add %135, %138 : tensor<1xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %141 = stablehlo.add %139, %140 : tensor<1xui32>
    %142 = stablehlo.add %137, %141 : tensor<1xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<1xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<1xui32>
    %147 = stablehlo.or %144, %146 : tensor<1xui32>
    %148 = stablehlo.xor %142, %147 : tensor<1xui32>
    %149 = stablehlo.add %142, %148 : tensor<1xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<1xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<1xui32>
    %154 = stablehlo.or %151, %153 : tensor<1xui32>
    %155 = stablehlo.xor %149, %154 : tensor<1xui32>
    %156 = stablehlo.add %149, %155 : tensor<1xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<1xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<1xui32>
    %161 = stablehlo.or %158, %160 : tensor<1xui32>
    %162 = stablehlo.xor %156, %161 : tensor<1xui32>
    %163 = stablehlo.add %156, %162 : tensor<1xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<1xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<1xui32>
    %168 = stablehlo.or %165, %167 : tensor<1xui32>
    %169 = stablehlo.xor %163, %168 : tensor<1xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %171 = stablehlo.add %163, %170 : tensor<1xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %173 = stablehlo.add %169, %172 : tensor<1xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %175 = stablehlo.add %173, %174 : tensor<1xui32>
    return %171, %175 : tensor<1xui32>, tensor<1xui32>
  }
  func.func private @_bernoulli(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x512x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x512x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<64x512x768xi1>
    return %2 : tensor<64x512x768xi1>
  }
  func.func private @_uniform(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x512x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x512x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x512x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x512x768xui64>
    %c = stablehlo.constant dense<393216> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x512x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x512x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x512x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x512x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x512x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x512x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %23:2 = call @threefry2x32_33(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x512x768xui32>, tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x512x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x512x768xui32>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x512x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x512x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x512x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x512x768xf32>
    return %38 : tensor<64x512x768xf32>
  }
  func.func private @threefry2x32_33(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x512x768xui32>, %arg3: tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x512x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x512x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x512x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x512x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x512x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x512x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x512x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x512x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x512x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x512x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x512x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x512x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x512x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x512x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x512x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x512x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x512x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x512x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x512x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x512x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x512x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x512x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x512x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x512x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x512x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x512x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x512x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x512x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x512x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x512x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x512x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x512x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x512x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x512x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x512x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x512x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x512x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x512x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x512x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x512x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x512x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x512x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x512x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x512x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x512x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x512x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x512x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x512x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x512x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x512x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x512x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x512x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x512x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x512x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x512x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x512x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x512x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x512x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x512x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x512x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x512x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x512x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x512x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x512x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x512x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x512x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x512x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x512x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x512x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x512x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x512x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x512x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x512x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x512x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x512x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x512x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x512x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x512x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x512x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x512x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x512x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x512x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x512x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x512x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x512x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x512x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x512x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x512x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x512x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x512x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x512x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x512x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x512x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x512x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x512x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x512x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x512x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x512x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x512x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x512x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x512x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x512x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x512x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x512x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x512x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x512x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x512x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x512x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x512x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x512x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x512x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x512x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x512x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x512x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x512x768xui32>
    return %171, %175 : tensor<64x512x768xui32>, tensor<64x512x768xui32>
  }
  func.func private @_where_61(%arg0: tensor<64x512x1x512xi1>, %arg1: tensor<64x512x12x512xf32>, %arg2: tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>) {
    %0 = stablehlo.broadcast_in_dim %arg0, dims = [0, 1, 2, 3] : (tensor<64x512x1x512xi1>) -> tensor<64x512x12x512xi1>
    %1 = stablehlo.broadcast_in_dim %arg2, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %2 = stablehlo.select %0, %arg1, %1 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>
    return %2, %0 : tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>
  }
  func.func private @_bernoulli_74(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x1x12x512xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_75(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x1x12x512xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x1x12x512xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x1x12x512xf32>, tensor<64x1x12x512xf32>) -> tensor<64x1x12x512xi1>
    return %2 : tensor<64x1x12x512xi1>
  }
  func.func private @_uniform_75(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x1x12x512xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x1x12x512xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x1x12x512xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x1x12x512xui64>
    %11 = stablehlo.iota dim = 3 : tensor<64x1x12x512xui64>
    %c = stablehlo.constant dense<6144> : tensor<ui64>
    %12 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %13 = stablehlo.multiply %12, %8 : tensor<64x1x12x512xui64>
    %c_0 = stablehlo.constant dense<6144> : tensor<ui64>
    %14 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %15 = stablehlo.multiply %14, %9 : tensor<64x1x12x512xui64>
    %c_1 = stablehlo.constant dense<512> : tensor<ui64>
    %16 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %17 = stablehlo.multiply %16, %10 : tensor<64x1x12x512xui64>
    %c_2 = stablehlo.constant dense<1> : tensor<ui64>
    %18 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %19 = stablehlo.multiply %18, %11 : tensor<64x1x12x512xui64>
    %20 = stablehlo.add %13, %15 : tensor<64x1x12x512xui64>
    %21 = stablehlo.add %20, %17 : tensor<64x1x12x512xui64>
    %22 = stablehlo.add %21, %19 : tensor<64x1x12x512xui64>
    %c_3 = stablehlo.constant dense<32> : tensor<ui64>
    %23 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %24 = stablehlo.shift_right_logical %22, %23 : tensor<64x1x12x512xui64>
    %25 = stablehlo.convert %22 : (tensor<64x1x12x512xui64>) -> tensor<64x1x12x512xui32>
    %26 = stablehlo.convert %24 : (tensor<64x1x12x512xui64>) -> tensor<64x1x12x512xui32>
    %27:2 = call @threefry2x32_79(%5, %7, %26, %25) : (tensor<ui32>, tensor<ui32>, tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>) -> (tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>)
    %28 = stablehlo.xor %27#0, %27#1 : tensor<64x1x12x512xui32>
    %c_4 = stablehlo.constant dense<9> : tensor<ui32>
    %29 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %30 = stablehlo.shift_right_logical %28, %29 : tensor<64x1x12x512xui32>
    %c_5 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %31 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %32 = stablehlo.or %30, %31 : tensor<64x1x12x512xui32>
    %33 = stablehlo.bitcast_convert %32 : (tensor<64x1x12x512xui32>) -> tensor<64x1x12x512xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x1x12x512xf32>
    %35 = stablehlo.subtract %33, %34 : tensor<64x1x12x512xf32>
    %36 = stablehlo.subtract %3, %2 : tensor<1x1x1x1xf32>
    %37 = stablehlo.broadcast_in_dim %36, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %38 = stablehlo.multiply %35, %37 : tensor<64x1x12x512xf32>
    %39 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %40 = stablehlo.add %38, %39 : tensor<64x1x12x512xf32>
    %41 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %42 = stablehlo.maximum %41, %40 : tensor<64x1x12x512xf32>
    return %42 : tensor<64x1x12x512xf32>
  }
  func.func private @threefry2x32_79(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x1x12x512xui32>, %arg3: tensor<64x1x12x512xui32>) -> (tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x1x12x512xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x1x12x512xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x1x12x512xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x1x12x512xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x1x12x512xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x1x12x512xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x1x12x512xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x1x12x512xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x1x12x512xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x1x12x512xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x1x12x512xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x1x12x512xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x1x12x512xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x1x12x512xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x1x12x512xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x1x12x512xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x1x12x512xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x1x12x512xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x1x12x512xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x1x12x512xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x1x12x512xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x1x12x512xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x1x12x512xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x1x12x512xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x1x12x512xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x1x12x512xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x1x12x512xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x1x12x512xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x1x12x512xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x1x12x512xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x1x12x512xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x1x12x512xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x1x12x512xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x1x12x512xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x1x12x512xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x1x12x512xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x1x12x512xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x1x12x512xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x1x12x512xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x1x12x512xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x1x12x512xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x1x12x512xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x1x12x512xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x1x12x512xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x1x12x512xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x1x12x512xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x1x12x512xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x1x12x512xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x1x12x512xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x1x12x512xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x1x12x512xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x1x12x512xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x1x12x512xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x1x12x512xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x1x12x512xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x1x12x512xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x1x12x512xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x1x12x512xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x1x12x512xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x1x12x512xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x1x12x512xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x1x12x512xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x1x12x512xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x1x12x512xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x1x12x512xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x1x12x512xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x1x12x512xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x1x12x512xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x1x12x512xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x1x12x512xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x1x12x512xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x1x12x512xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x1x12x512xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x1x12x512xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x1x12x512xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x1x12x512xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x1x12x512xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x1x12x512xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x1x12x512xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x1x12x512xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x1x12x512xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x1x12x512xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x1x12x512xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x1x12x512xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x1x12x512xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x1x12x512xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x1x12x512xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x1x12x512xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x1x12x512xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x1x12x512xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x1x12x512xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x1x12x512xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x1x12x512xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x1x12x512xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x1x12x512xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x1x12x512xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x1x12x512xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x1x12x512xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x1x12x512xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x1x12x512xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x1x12x512xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x1x12x512xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x1x12x512xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x1x12x512xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x1x12x512xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x1x12x512xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x1x12x512xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x1x12x512xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x1x12x512xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x1x12x512xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x1x12x512xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x1x12x512xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x1x12x512xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x1x12x512xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x1x12x512xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x1x12x512xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x1x12x512xui32>
    return %171, %175 : tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>
  }
  func.func private @_where_124(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_143(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_160(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_161(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_var_178(%arg0: tensor<64x512x768xf32>, %arg1: tensor<f32>, %arg2: tensor<i1>, %arg3: tensor<64x512x1xf32>) -> tensor<64x512x768xf32> {
    %0 = call @_where_179(%arg2, %arg3) : (tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2 = stablehlo.divide %0, %1 : tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3 = stablehlo.reduce(%2 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4 = stablehlo.broadcast_in_dim %3, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %5 = stablehlo.multiply %4, %arg0 : tensor<64x512x768xf32>
    %6 = stablehlo.negate %5 : tensor<64x512x768xf32>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %7 = stablehlo.reduce(%6 init: %cst_0) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %8 = stablehlo.reshape %7 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_1 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %9 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %10 = stablehlo.divide %8, %9 : tensor<64x512x1xf32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %11 = stablehlo.reduce(%10 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %12 = stablehlo.broadcast_in_dim %11, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %13 = stablehlo.add %5, %12 : tensor<64x512x768xf32>
    return %13 : tensor<64x512x768xf32>
  }
  func.func private @_where_179(%arg0: tensor<i1>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x1xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<64x512x1xf32>
    return %1 : tensor<64x512x1xf32>
  }
  func.func private @_where_205(%arg0: tensor<64x512x12x512xi1>, %arg1: tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>
    return %1 : tensor<64x512x12x512xf32>
  }
  func.func private @_where_303(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_352(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
