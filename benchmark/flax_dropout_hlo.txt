module @jit_train_step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  func.func public @main(%arg0: tensor<512x768xf32>, %arg1: tensor<2x768xf32>, %arg2: tensor<30522x768xf32>, %arg3: tensor<768xf32>, %arg4: tensor<768x768xf32>, %arg5: tensor<768xf32>, %arg6: tensor<768x768xf32>, %arg7: tensor<768xf32>, %arg8: tensor<768x768xf32>, %arg9: tensor<768xf32>, %arg10: tensor<768x768xf32>, %arg11: tensor<768xf32>, %arg12: tensor<768xf32>, %arg13: tensor<768xf32>, %arg14: tensor<3072x768xf32>, %arg15: tensor<768xf32>, %arg16: tensor<768xf32>, %arg17: tensor<3072xf32>, %arg18: tensor<768x3072xf32>, %arg19: tensor<768xf32>, %arg20: tensor<768x768xf32>, %arg21: tensor<768xf32>, %arg22: tensor<768x768xf32>, %arg23: tensor<768xf32>, %arg24: tensor<768x768xf32>, %arg25: tensor<768xf32>, %arg26: tensor<768x768xf32>, %arg27: tensor<768xf32>, %arg28: tensor<768xf32>, %arg29: tensor<768xf32>, %arg30: tensor<3072x768xf32>, %arg31: tensor<768xf32>, %arg32: tensor<768xf32>, %arg33: tensor<3072xf32>, %arg34: tensor<768x3072xf32>, %arg35: tensor<768xf32>, %arg36: tensor<768x768xf32>, %arg37: tensor<768xf32>, %arg38: tensor<768x768xf32>, %arg39: tensor<768xf32>, %arg40: tensor<768x768xf32>, %arg41: tensor<768xf32>, %arg42: tensor<768x768xf32>, %arg43: tensor<768xf32>, %arg44: tensor<768xf32>, %arg45: tensor<768xf32>, %arg46: tensor<3072x768xf32>, %arg47: tensor<768xf32>, %arg48: tensor<768xf32>, %arg49: tensor<3072xf32>, %arg50: tensor<768x3072xf32>, %arg51: tensor<768xf32>, %arg52: tensor<768x768xf32>, %arg53: tensor<768xf32>, %arg54: tensor<768x768xf32>, %arg55: tensor<768xf32>, %arg56: tensor<768x768xf32>, %arg57: tensor<768xf32>, %arg58: tensor<768x768xf32>, %arg59: tensor<768xf32>, %arg60: tensor<768xf32>, %arg61: tensor<768xf32>, %arg62: tensor<3072x768xf32>, %arg63: tensor<768xf32>, %arg64: tensor<768xf32>, %arg65: tensor<3072xf32>, %arg66: tensor<768x3072xf32>, %arg67: tensor<768xf32>, %arg68: tensor<768x768xf32>, %arg69: tensor<768xf32>, %arg70: tensor<768x768xf32>, %arg71: tensor<768xf32>, %arg72: tensor<768x768xf32>, %arg73: tensor<768xf32>, %arg74: tensor<768x768xf32>, %arg75: tensor<768xf32>, %arg76: tensor<768xf32>, %arg77: tensor<768xf32>, %arg78: tensor<3072x768xf32>, %arg79: tensor<768xf32>, %arg80: tensor<768xf32>, %arg81: tensor<3072xf32>, %arg82: tensor<768x3072xf32>, %arg83: tensor<768xf32>, %arg84: tensor<768x768xf32>, %arg85: tensor<768xf32>, %arg86: tensor<768x768xf32>, %arg87: tensor<768xf32>, %arg88: tensor<768x768xf32>, %arg89: tensor<768xf32>, %arg90: tensor<768x768xf32>, %arg91: tensor<768xf32>, %arg92: tensor<768xf32>, %arg93: tensor<768xf32>, %arg94: tensor<3072x768xf32>, %arg95: tensor<768xf32>, %arg96: tensor<768xf32>, %arg97: tensor<3072xf32>, %arg98: tensor<768x3072xf32>, %arg99: tensor<768xf32>, %arg100: tensor<768x768xf32>, %arg101: tensor<768xf32>, %arg102: tensor<768x768xf32>, %arg103: tensor<768xf32>, %arg104: tensor<768x768xf32>, %arg105: tensor<768xf32>, %arg106: tensor<768x768xf32>, %arg107: tensor<768xf32>, %arg108: tensor<768xf32>, %arg109: tensor<768xf32>, %arg110: tensor<3072x768xf32>, %arg111: tensor<768xf32>, %arg112: tensor<768xf32>, %arg113: tensor<3072xf32>, %arg114: tensor<768x3072xf32>, %arg115: tensor<768xf32>, %arg116: tensor<768x768xf32>, %arg117: tensor<768xf32>, %arg118: tensor<768x768xf32>, %arg119: tensor<768xf32>, %arg120: tensor<768x768xf32>, %arg121: tensor<768xf32>, %arg122: tensor<768x768xf32>, %arg123: tensor<768xf32>, %arg124: tensor<768xf32>, %arg125: tensor<768xf32>, %arg126: tensor<3072x768xf32>, %arg127: tensor<768xf32>, %arg128: tensor<768xf32>, %arg129: tensor<3072xf32>, %arg130: tensor<768x3072xf32>, %arg131: tensor<768xf32>, %arg132: tensor<768x768xf32>, %arg133: tensor<768xf32>, %arg134: tensor<768x768xf32>, %arg135: tensor<768xf32>, %arg136: tensor<768x768xf32>, %arg137: tensor<768xf32>, %arg138: tensor<768x768xf32>, %arg139: tensor<768xf32>, %arg140: tensor<768xf32>, %arg141: tensor<768xf32>, %arg142: tensor<3072x768xf32>, %arg143: tensor<768xf32>, %arg144: tensor<768xf32>, %arg145: tensor<3072xf32>, %arg146: tensor<768x3072xf32>, %arg147: tensor<768xf32>, %arg148: tensor<768x768xf32>, %arg149: tensor<768xf32>, %arg150: tensor<768x768xf32>, %arg151: tensor<768xf32>, %arg152: tensor<768x768xf32>, %arg153: tensor<768xf32>, %arg154: tensor<768x768xf32>, %arg155: tensor<768xf32>, %arg156: tensor<768xf32>, %arg157: tensor<768xf32>, %arg158: tensor<3072x768xf32>, %arg159: tensor<768xf32>, %arg160: tensor<768xf32>, %arg161: tensor<3072xf32>, %arg162: tensor<768x3072xf32>, %arg163: tensor<768xf32>, %arg164: tensor<768x768xf32>, %arg165: tensor<768xf32>, %arg166: tensor<768x768xf32>, %arg167: tensor<768xf32>, %arg168: tensor<768x768xf32>, %arg169: tensor<768xf32>, %arg170: tensor<768x768xf32>, %arg171: tensor<768xf32>, %arg172: tensor<768xf32>, %arg173: tensor<768xf32>, %arg174: tensor<3072x768xf32>, %arg175: tensor<768xf32>, %arg176: tensor<768xf32>, %arg177: tensor<3072xf32>, %arg178: tensor<768x3072xf32>, %arg179: tensor<768xf32>, %arg180: tensor<768x768xf32>, %arg181: tensor<768xf32>, %arg182: tensor<768x768xf32>, %arg183: tensor<768xf32>, %arg184: tensor<768x768xf32>, %arg185: tensor<768xf32>, %arg186: tensor<768x768xf32>, %arg187: tensor<768xf32>, %arg188: tensor<768xf32>, %arg189: tensor<768xf32>, %arg190: tensor<3072x768xf32>, %arg191: tensor<768xf32>, %arg192: tensor<768xf32>, %arg193: tensor<3072xf32>, %arg194: tensor<768x3072xf32>, %arg195: tensor<768xf32>, %arg196: tensor<768xf32>, %arg197: tensor<30522xf32>, %arg198: tensor<768xf32>, %arg199: tensor<768x768xf32>, %arg200: tensor<30522x768xf32>, %arg201: tensor<768xf32>, %arg202: tensor<768xf32>, %arg203: tensor<i32>, %arg204: tensor<512x768xf32>, %arg205: tensor<2x768xf32>, %arg206: tensor<30522x768xf32>, %arg207: tensor<768xf32>, %arg208: tensor<768x768xf32>, %arg209: tensor<768xf32>, %arg210: tensor<768x768xf32>, %arg211: tensor<768xf32>, %arg212: tensor<768x768xf32>, %arg213: tensor<768xf32>, %arg214: tensor<768x768xf32>, %arg215: tensor<768xf32>, %arg216: tensor<768xf32>, %arg217: tensor<768xf32>, %arg218: tensor<3072x768xf32>, %arg219: tensor<768xf32>, %arg220: tensor<768xf32>, %arg221: tensor<3072xf32>, %arg222: tensor<768x3072xf32>, %arg223: tensor<768xf32>, %arg224: tensor<768x768xf32>, %arg225: tensor<768xf32>, %arg226: tensor<768x768xf32>, %arg227: tensor<768xf32>, %arg228: tensor<768x768xf32>, %arg229: tensor<768xf32>, %arg230: tensor<768x768xf32>, %arg231: tensor<768xf32>, %arg232: tensor<768xf32>, %arg233: tensor<768xf32>, %arg234: tensor<3072x768xf32>, %arg235: tensor<768xf32>, %arg236: tensor<768xf32>, %arg237: tensor<3072xf32>, %arg238: tensor<768x3072xf32>, %arg239: tensor<768xf32>, %arg240: tensor<768x768xf32>, %arg241: tensor<768xf32>, %arg242: tensor<768x768xf32>, %arg243: tensor<768xf32>, %arg244: tensor<768x768xf32>, %arg245: tensor<768xf32>, %arg246: tensor<768x768xf32>, %arg247: tensor<768xf32>, %arg248: tensor<768xf32>, %arg249: tensor<768xf32>, %arg250: tensor<3072x768xf32>, %arg251: tensor<768xf32>, %arg252: tensor<768xf32>, %arg253: tensor<3072xf32>, %arg254: tensor<768x3072xf32>, %arg255: tensor<768xf32>, %arg256: tensor<768x768xf32>, %arg257: tensor<768xf32>, %arg258: tensor<768x768xf32>, %arg259: tensor<768xf32>, %arg260: tensor<768x768xf32>, %arg261: tensor<768xf32>, %arg262: tensor<768x768xf32>, %arg263: tensor<768xf32>, %arg264: tensor<768xf32>, %arg265: tensor<768xf32>, %arg266: tensor<3072x768xf32>, %arg267: tensor<768xf32>, %arg268: tensor<768xf32>, %arg269: tensor<3072xf32>, %arg270: tensor<768x3072xf32>, %arg271: tensor<768xf32>, %arg272: tensor<768x768xf32>, %arg273: tensor<768xf32>, %arg274: tensor<768x768xf32>, %arg275: tensor<768xf32>, %arg276: tensor<768x768xf32>, %arg277: tensor<768xf32>, %arg278: tensor<768x768xf32>, %arg279: tensor<768xf32>, %arg280: tensor<768xf32>, %arg281: tensor<768xf32>, %arg282: tensor<3072x768xf32>, %arg283: tensor<768xf32>, %arg284: tensor<768xf32>, %arg285: tensor<3072xf32>, %arg286: tensor<768x3072xf32>, %arg287: tensor<768xf32>, %arg288: tensor<768x768xf32>, %arg289: tensor<768xf32>, %arg290: tensor<768x768xf32>, %arg291: tensor<768xf32>, %arg292: tensor<768x768xf32>, %arg293: tensor<768xf32>, %arg294: tensor<768x768xf32>, %arg295: tensor<768xf32>, %arg296: tensor<768xf32>, %arg297: tensor<768xf32>, %arg298: tensor<3072x768xf32>, %arg299: tensor<768xf32>, %arg300: tensor<768xf32>, %arg301: tensor<3072xf32>, %arg302: tensor<768x3072xf32>, %arg303: tensor<768xf32>, %arg304: tensor<768x768xf32>, %arg305: tensor<768xf32>, %arg306: tensor<768x768xf32>, %arg307: tensor<768xf32>, %arg308: tensor<768x768xf32>, %arg309: tensor<768xf32>, %arg310: tensor<768x768xf32>, %arg311: tensor<768xf32>, %arg312: tensor<768xf32>, %arg313: tensor<768xf32>, %arg314: tensor<3072x768xf32>, %arg315: tensor<768xf32>, %arg316: tensor<768xf32>, %arg317: tensor<3072xf32>, %arg318: tensor<768x3072xf32>, %arg319: tensor<768xf32>, %arg320: tensor<768x768xf32>, %arg321: tensor<768xf32>, %arg322: tensor<768x768xf32>, %arg323: tensor<768xf32>, %arg324: tensor<768x768xf32>, %arg325: tensor<768xf32>, %arg326: tensor<768x768xf32>, %arg327: tensor<768xf32>, %arg328: tensor<768xf32>, %arg329: tensor<768xf32>, %arg330: tensor<3072x768xf32>, %arg331: tensor<768xf32>, %arg332: tensor<768xf32>, %arg333: tensor<3072xf32>, %arg334: tensor<768x3072xf32>, %arg335: tensor<768xf32>, %arg336: tensor<768x768xf32>, %arg337: tensor<768xf32>, %arg338: tensor<768x768xf32>, %arg339: tensor<768xf32>, %arg340: tensor<768x768xf32>, %arg341: tensor<768xf32>, %arg342: tensor<768x768xf32>, %arg343: tensor<768xf32>, %arg344: tensor<768xf32>, %arg345: tensor<768xf32>, %arg346: tensor<3072x768xf32>, %arg347: tensor<768xf32>, %arg348: tensor<768xf32>, %arg349: tensor<3072xf32>, %arg350: tensor<768x3072xf32>, %arg351: tensor<768xf32>, %arg352: tensor<768x768xf32>, %arg353: tensor<768xf32>, %arg354: tensor<768x768xf32>, %arg355: tensor<768xf32>, %arg356: tensor<768x768xf32>, %arg357: tensor<768xf32>, %arg358: tensor<768x768xf32>, %arg359: tensor<768xf32>, %arg360: tensor<768xf32>, %arg361: tensor<768xf32>, %arg362: tensor<3072x768xf32>, %arg363: tensor<768xf32>, %arg364: tensor<768xf32>, %arg365: tensor<3072xf32>, %arg366: tensor<768x3072xf32>, %arg367: tensor<768xf32>, %arg368: tensor<768x768xf32>, %arg369: tensor<768xf32>, %arg370: tensor<768x768xf32>, %arg371: tensor<768xf32>, %arg372: tensor<768x768xf32>, %arg373: tensor<768xf32>, %arg374: tensor<768x768xf32>, %arg375: tensor<768xf32>, %arg376: tensor<768xf32>, %arg377: tensor<768xf32>, %arg378: tensor<3072x768xf32>, %arg379: tensor<768xf32>, %arg380: tensor<768xf32>, %arg381: tensor<3072xf32>, %arg382: tensor<768x3072xf32>, %arg383: tensor<768xf32>, %arg384: tensor<768x768xf32>, %arg385: tensor<768xf32>, %arg386: tensor<768x768xf32>, %arg387: tensor<768xf32>, %arg388: tensor<768x768xf32>, %arg389: tensor<768xf32>, %arg390: tensor<768x768xf32>, %arg391: tensor<768xf32>, %arg392: tensor<768xf32>, %arg393: tensor<768xf32>, %arg394: tensor<3072x768xf32>, %arg395: tensor<768xf32>, %arg396: tensor<768xf32>, %arg397: tensor<3072xf32>, %arg398: tensor<768x3072xf32>, %arg399: tensor<768xf32>, %arg400: tensor<768xf32>, %arg401: tensor<30522xf32>, %arg402: tensor<768xf32>, %arg403: tensor<768x768xf32>, %arg404: tensor<30522x768xf32>, %arg405: tensor<768xf32>, %arg406: tensor<768xf32>, %arg407: tensor<512x768xf32>, %arg408: tensor<2x768xf32>, %arg409: tensor<30522x768xf32>, %arg410: tensor<768xf32>, %arg411: tensor<768x768xf32>, %arg412: tensor<768xf32>, %arg413: tensor<768x768xf32>, %arg414: tensor<768xf32>, %arg415: tensor<768x768xf32>, %arg416: tensor<768xf32>, %arg417: tensor<768x768xf32>, %arg418: tensor<768xf32>, %arg419: tensor<768xf32>, %arg420: tensor<768xf32>, %arg421: tensor<3072x768xf32>, %arg422: tensor<768xf32>, %arg423: tensor<768xf32>, %arg424: tensor<3072xf32>, %arg425: tensor<768x3072xf32>, %arg426: tensor<768xf32>, %arg427: tensor<768x768xf32>, %arg428: tensor<768xf32>, %arg429: tensor<768x768xf32>, %arg430: tensor<768xf32>, %arg431: tensor<768x768xf32>, %arg432: tensor<768xf32>, %arg433: tensor<768x768xf32>, %arg434: tensor<768xf32>, %arg435: tensor<768xf32>, %arg436: tensor<768xf32>, %arg437: tensor<3072x768xf32>, %arg438: tensor<768xf32>, %arg439: tensor<768xf32>, %arg440: tensor<3072xf32>, %arg441: tensor<768x3072xf32>, %arg442: tensor<768xf32>, %arg443: tensor<768x768xf32>, %arg444: tensor<768xf32>, %arg445: tensor<768x768xf32>, %arg446: tensor<768xf32>, %arg447: tensor<768x768xf32>, %arg448: tensor<768xf32>, %arg449: tensor<768x768xf32>, %arg450: tensor<768xf32>, %arg451: tensor<768xf32>, %arg452: tensor<768xf32>, %arg453: tensor<3072x768xf32>, %arg454: tensor<768xf32>, %arg455: tensor<768xf32>, %arg456: tensor<3072xf32>, %arg457: tensor<768x3072xf32>, %arg458: tensor<768xf32>, %arg459: tensor<768x768xf32>, %arg460: tensor<768xf32>, %arg461: tensor<768x768xf32>, %arg462: tensor<768xf32>, %arg463: tensor<768x768xf32>, %arg464: tensor<768xf32>, %arg465: tensor<768x768xf32>, %arg466: tensor<768xf32>, %arg467: tensor<768xf32>, %arg468: tensor<768xf32>, %arg469: tensor<3072x768xf32>, %arg470: tensor<768xf32>, %arg471: tensor<768xf32>, %arg472: tensor<3072xf32>, %arg473: tensor<768x3072xf32>, %arg474: tensor<768xf32>, %arg475: tensor<768x768xf32>, %arg476: tensor<768xf32>, %arg477: tensor<768x768xf32>, %arg478: tensor<768xf32>, %arg479: tensor<768x768xf32>, %arg480: tensor<768xf32>, %arg481: tensor<768x768xf32>, %arg482: tensor<768xf32>, %arg483: tensor<768xf32>, %arg484: tensor<768xf32>, %arg485: tensor<3072x768xf32>, %arg486: tensor<768xf32>, %arg487: tensor<768xf32>, %arg488: tensor<3072xf32>, %arg489: tensor<768x3072xf32>, %arg490: tensor<768xf32>, %arg491: tensor<768x768xf32>, %arg492: tensor<768xf32>, %arg493: tensor<768x768xf32>, %arg494: tensor<768xf32>, %arg495: tensor<768x768xf32>, %arg496: tensor<768xf32>, %arg497: tensor<768x768xf32>, %arg498: tensor<768xf32>, %arg499: tensor<768xf32>, %arg500: tensor<768xf32>, %arg501: tensor<3072x768xf32>, %arg502: tensor<768xf32>, %arg503: tensor<768xf32>, %arg504: tensor<3072xf32>, %arg505: tensor<768x3072xf32>, %arg506: tensor<768xf32>, %arg507: tensor<768x768xf32>, %arg508: tensor<768xf32>, %arg509: tensor<768x768xf32>, %arg510: tensor<768xf32>, %arg511: tensor<768x768xf32>, %arg512: tensor<768xf32>, %arg513: tensor<768x768xf32>, %arg514: tensor<768xf32>, %arg515: tensor<768xf32>, %arg516: tensor<768xf32>, %arg517: tensor<3072x768xf32>, %arg518: tensor<768xf32>, %arg519: tensor<768xf32>, %arg520: tensor<3072xf32>, %arg521: tensor<768x3072xf32>, %arg522: tensor<768xf32>, %arg523: tensor<768x768xf32>, %arg524: tensor<768xf32>, %arg525: tensor<768x768xf32>, %arg526: tensor<768xf32>, %arg527: tensor<768x768xf32>, %arg528: tensor<768xf32>, %arg529: tensor<768x768xf32>, %arg530: tensor<768xf32>, %arg531: tensor<768xf32>, %arg532: tensor<768xf32>, %arg533: tensor<3072x768xf32>, %arg534: tensor<768xf32>, %arg535: tensor<768xf32>, %arg536: tensor<3072xf32>, %arg537: tensor<768x3072xf32>, %arg538: tensor<768xf32>, %arg539: tensor<768x768xf32>, %arg540: tensor<768xf32>, %arg541: tensor<768x768xf32>, %arg542: tensor<768xf32>, %arg543: tensor<768x768xf32>, %arg544: tensor<768xf32>, %arg545: tensor<768x768xf32>, %arg546: tensor<768xf32>, %arg547: tensor<768xf32>, %arg548: tensor<768xf32>, %arg549: tensor<3072x768xf32>, %arg550: tensor<768xf32>, %arg551: tensor<768xf32>, %arg552: tensor<3072xf32>, %arg553: tensor<768x3072xf32>, %arg554: tensor<768xf32>, %arg555: tensor<768x768xf32>, %arg556: tensor<768xf32>, %arg557: tensor<768x768xf32>, %arg558: tensor<768xf32>, %arg559: tensor<768x768xf32>, %arg560: tensor<768xf32>, %arg561: tensor<768x768xf32>, %arg562: tensor<768xf32>, %arg563: tensor<768xf32>, %arg564: tensor<768xf32>, %arg565: tensor<3072x768xf32>, %arg566: tensor<768xf32>, %arg567: tensor<768xf32>, %arg568: tensor<3072xf32>, %arg569: tensor<768x3072xf32>, %arg570: tensor<768xf32>, %arg571: tensor<768x768xf32>, %arg572: tensor<768xf32>, %arg573: tensor<768x768xf32>, %arg574: tensor<768xf32>, %arg575: tensor<768x768xf32>, %arg576: tensor<768xf32>, %arg577: tensor<768x768xf32>, %arg578: tensor<768xf32>, %arg579: tensor<768xf32>, %arg580: tensor<768xf32>, %arg581: tensor<3072x768xf32>, %arg582: tensor<768xf32>, %arg583: tensor<768xf32>, %arg584: tensor<3072xf32>, %arg585: tensor<768x3072xf32>, %arg586: tensor<768xf32>, %arg587: tensor<768x768xf32>, %arg588: tensor<768xf32>, %arg589: tensor<768x768xf32>, %arg590: tensor<768xf32>, %arg591: tensor<768x768xf32>, %arg592: tensor<768xf32>, %arg593: tensor<768x768xf32>, %arg594: tensor<768xf32>, %arg595: tensor<768xf32>, %arg596: tensor<768xf32>, %arg597: tensor<3072x768xf32>, %arg598: tensor<768xf32>, %arg599: tensor<768xf32>, %arg600: tensor<3072xf32>, %arg601: tensor<768x3072xf32>, %arg602: tensor<768xf32>, %arg603: tensor<768xf32>, %arg604: tensor<30522xf32>, %arg605: tensor<768xf32>, %arg606: tensor<768x768xf32>, %arg607: tensor<30522x768xf32>, %arg608: tensor<768xf32>, %arg609: tensor<768xf32>, %arg610: tensor<i32>, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg612: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg613: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg614: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg615: tensor<2xui32>) -> (tensor<512x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].params['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][0].count"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['scale']"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[2]['total_token']"}) {
    %0 = stablehlo.iota dim = 0 : tensor<512xi32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %3 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %4 = stablehlo.compare  LT, %arg611, %3,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %5 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %6 = stablehlo.add %arg611, %5 : tensor<64x512xi32>
    %7 = stablehlo.select %4, %6, %arg611 : tensor<64x512xi1>, tensor<64x512xi32>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %9 = "stablehlo.gather"(%arg2, %8) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %10 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %11 = stablehlo.compare  LT, %2, %10,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %12 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %13 = stablehlo.add %2, %12 : tensor<64x512xi32>
    %14 = stablehlo.select %11, %13, %2 : tensor<64x512xi1>, tensor<64x512xi32>
    %15 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %16 = "stablehlo.gather"(%arg0, %15) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %17 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %18 = stablehlo.compare  LT, %arg613, %17,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %20 = stablehlo.add %arg613, %19 : tensor<64x512xi32>
    %21 = stablehlo.select %18, %20, %arg613 : tensor<64x512xi1>, tensor<64x512xi32>
    %22 = stablehlo.broadcast_in_dim %21, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %23 = "stablehlo.gather"(%arg1, %22) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %24 = stablehlo.add %16, %23 : tensor<64x512x768xf32>
    %25 = stablehlo.add %24, %9 : tensor<64x512x768xf32>
    %26 = stablehlo.multiply %25, %25 : tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %27 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %28 = stablehlo.multiply %27, %25 : tensor<64x512x768xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %29 = stablehlo.reduce(%25 init: %cst_3) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_4 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %31 = stablehlo.divide %29, %30 : tensor<64x512xf32>
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %32 = stablehlo.reduce(%26 init: %cst_5) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %33 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %34 = stablehlo.divide %32, %33 : tensor<64x512xf32>
    %35 = stablehlo.multiply %31, %31 : tensor<64x512xf32>
    %36 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %37 = stablehlo.multiply %36, %31 : tensor<64x512xf32>
    %38 = stablehlo.subtract %34, %35 : tensor<64x512xf32>
    %cst_6 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %39 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %40 = stablehlo.maximum %39, %38 : tensor<64x512xf32>
    %41 = stablehlo.compare  EQ, %38, %40,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %cst_7 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %42 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %43 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %44 = stablehlo.select %41, %42, %43 : tensor<64x512xi1>, tensor<64x512xf32>
    %45 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %46 = stablehlo.compare  EQ, %45, %40,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %47 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %48 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %49 = stablehlo.select %46, %47, %48 : tensor<64x512xi1>, tensor<64x512xf32>
    %50 = stablehlo.divide %44, %49 : tensor<64x512xf32>
    %51 = stablehlo.broadcast_in_dim %31, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %52 = stablehlo.broadcast_in_dim %40, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %53 = stablehlo.broadcast_in_dim %51, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %54 = stablehlo.subtract %25, %53 : tensor<64x512x768xf32>
    %cst_8 = stablehlo.constant dense<9.99999996E-13> : tensor<f32>
    %55 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %56 = stablehlo.add %52, %55 : tensor<64x512x1xf32>
    %57 = stablehlo.rsqrt %56 : tensor<64x512x1xf32>
    %58 = stablehlo.divide %57, %56 : tensor<64x512x1xf32>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<f32>
    %59 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %60 = stablehlo.multiply %59, %58 : tensor<64x512x1xf32>
    %61 = stablehlo.reshape %arg196 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %62 = stablehlo.broadcast_in_dim %57, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %63 = stablehlo.broadcast_in_dim %61, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %64 = stablehlo.multiply %62, %63 : tensor<64x512x768xf32>
    %65 = stablehlo.multiply %54, %64 : tensor<64x512x768xf32>
    %66 = stablehlo.reshape %arg195 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %67 = stablehlo.broadcast_in_dim %66, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %68 = stablehlo.add %65, %67 : tensor<64x512x768xf32>
    %c_10 = stablehlo.constant dense<4050721435> : tensor<ui32>
    %69 = call @_threefry_fold_in(%arg615, %c_10) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_11 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %70 = call @_bernoulli(%69, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %71 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %72 = stablehlo.divide %68, %71 : tensor<64x512x768xf32>
    %73 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %74 = stablehlo.select %70, %72, %73 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %75 = stablehlo.broadcast_in_dim %arg612, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %76 = stablehlo.broadcast_in_dim %arg612, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %77 = stablehlo.broadcast_in_dim %75, dims = [0, 1, 2] : (tensor<64x512x1xi32>) -> tensor<64x512x512xi32>
    %78 = stablehlo.broadcast_in_dim %76, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %79 = stablehlo.multiply %77, %78 : tensor<64x512x512xi32>
    %80 = stablehlo.broadcast_in_dim %79, dims = [0, 2, 3] : (tensor<64x512x512xi32>) -> tensor<64x1x512x512xi32>
    %81 = stablehlo.convert %80 : (tensor<64x1x512x512xi32>) -> tensor<64x1x512x512xf32>
    %82 = stablehlo.reshape %arg6 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %83 = stablehlo.dot_general %74, %82, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %84 = stablehlo.reshape %arg5 : (tensor<768xf32>) -> tensor<12x64xf32>
    %85 = stablehlo.broadcast_in_dim %84, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %86 = stablehlo.broadcast_in_dim %85, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %87 = stablehlo.broadcast_in_dim %86, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %88 = stablehlo.add %83, %87 : tensor<64x512x12x64xf32>
    %89 = stablehlo.reshape %arg4 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %90 = stablehlo.dot_general %74, %89, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %91 = stablehlo.reshape %arg3 : (tensor<768xf32>) -> tensor<12x64xf32>
    %92 = stablehlo.broadcast_in_dim %91, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %93 = stablehlo.broadcast_in_dim %92, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %94 = stablehlo.broadcast_in_dim %93, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %95 = stablehlo.add %90, %94 : tensor<64x512x12x64xf32>
    %96 = stablehlo.reshape %arg8 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %97 = stablehlo.dot_general %74, %96, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %98 = stablehlo.reshape %arg7 : (tensor<768xf32>) -> tensor<12x64xf32>
    %99 = stablehlo.broadcast_in_dim %98, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %100 = stablehlo.broadcast_in_dim %99, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %101 = stablehlo.broadcast_in_dim %100, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %102 = stablehlo.add %97, %101 : tensor<64x512x12x64xf32>
    %103 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %104 = stablehlo.compare  GT, %81, %103,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %cst_12 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %105 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %106 = stablehlo.convert %105 : tensor<64x1x512x512xf32>
    %cst_13 = stablehlo.constant dense<-1.000000e+10> : tensor<f32>
    %107 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %108 = stablehlo.convert %107 : tensor<64x1x512x512xf32>
    %109 = stablehlo.select %104, %106, %108 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_14 = stablehlo.constant dense<2530881375> : tensor<ui32>
    %110 = call @_threefry_fold_in(%arg615, %c_14) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_15 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %111 = stablehlo.sqrt %cst_15 : tensor<f32>
    %112 = stablehlo.convert %111 : tensor<f32>
    %113 = stablehlo.broadcast_in_dim %112, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %114 = stablehlo.divide %88, %113 : tensor<64x512x12x64xf32>
    %115 = stablehlo.dot_general %114, %95, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %116 = stablehlo.broadcast_in_dim %109, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %117 = stablehlo.add %115, %116 : tensor<64x12x512x512xf32>
    %cst_16 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %118 = stablehlo.reduce(%117 init: %cst_16) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %cst_17 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %119 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %120 = stablehlo.maximum %119, %118 : tensor<64x12x512xf32>
    %121 = stablehlo.broadcast_in_dim %120, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %122 = stablehlo.broadcast_in_dim %121, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %123 = stablehlo.subtract %117, %122 : tensor<64x12x512x512xf32>
    %124 = stablehlo.exponential %123 : tensor<64x12x512x512xf32>
    %cst_18 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %125 = stablehlo.reduce(%124 init: %cst_18) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %126 = stablehlo.broadcast_in_dim %125, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %127 = stablehlo.broadcast_in_dim %126, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %128 = stablehlo.divide %124, %127 : tensor<64x12x512x512xf32>
    %129 = stablehlo.multiply %126, %126 : tensor<64x12x512x1xf32>
    %cst_19 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %130 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %131 = stablehlo.divide %130, %129 : tensor<64x12x512x1xf32>
    %132 = call @_bernoulli_71(%110, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %133 = stablehlo.convert %132 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %134 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %135 = stablehlo.divide %133, %134 : tensor<64x12x512x512xf32>
    %136 = stablehlo.multiply %128, %135 : tensor<64x12x512x512xf32>
    %137 = stablehlo.dot_general %102, %136, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %138 = stablehlo.transpose %137, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %139 = stablehlo.reshape %arg10 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %140 = stablehlo.dot_general %138, %139, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %141 = stablehlo.broadcast_in_dim %arg9, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %142 = stablehlo.broadcast_in_dim %141, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %143 = stablehlo.broadcast_in_dim %142, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %144 = stablehlo.add %140, %143 : tensor<64x512x768xf32>
    %c_20 = stablehlo.constant dense<1268671986> : tensor<ui32>
    %145 = call @_threefry_fold_in(%arg615, %c_20) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %146 = call @_bernoulli(%145, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %147 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %148 = stablehlo.divide %144, %147 : tensor<64x512x768xf32>
    %149 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %150 = stablehlo.select %146, %148, %149 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %151 = stablehlo.add %150, %74 : tensor<64x512x768xf32>
    %152 = stablehlo.multiply %151, %151 : tensor<64x512x768xf32>
    %153 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %154 = stablehlo.multiply %153, %151 : tensor<64x512x768xf32>
    %cst_21 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %155 = stablehlo.reduce(%151 init: %cst_21) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %156 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %157 = stablehlo.divide %155, %156 : tensor<64x512xf32>
    %cst_22 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %158 = stablehlo.reduce(%152 init: %cst_22) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %159 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %160 = stablehlo.divide %158, %159 : tensor<64x512xf32>
    %161 = stablehlo.multiply %157, %157 : tensor<64x512xf32>
    %162 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %163 = stablehlo.multiply %162, %157 : tensor<64x512xf32>
    %164 = stablehlo.subtract %160, %161 : tensor<64x512xf32>
    %165 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %166 = stablehlo.maximum %165, %164 : tensor<64x512xf32>
    %167 = stablehlo.compare  EQ, %164, %166,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %168 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %169 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %170 = stablehlo.select %167, %168, %169 : tensor<64x512xi1>, tensor<64x512xf32>
    %171 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %172 = stablehlo.compare  EQ, %171, %166,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %173 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %174 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %175 = stablehlo.select %172, %173, %174 : tensor<64x512xi1>, tensor<64x512xf32>
    %176 = stablehlo.divide %170, %175 : tensor<64x512xf32>
    %177 = stablehlo.broadcast_in_dim %157, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %178 = stablehlo.broadcast_in_dim %166, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %179 = stablehlo.broadcast_in_dim %177, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %180 = stablehlo.subtract %151, %179 : tensor<64x512x768xf32>
    %181 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %182 = stablehlo.add %178, %181 : tensor<64x512x1xf32>
    %183 = stablehlo.rsqrt %182 : tensor<64x512x1xf32>
    %184 = stablehlo.divide %183, %182 : tensor<64x512x1xf32>
    %185 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %186 = stablehlo.multiply %185, %184 : tensor<64x512x1xf32>
    %187 = stablehlo.reshape %arg12 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %188 = stablehlo.broadcast_in_dim %183, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %189 = stablehlo.broadcast_in_dim %187, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %190 = stablehlo.multiply %188, %189 : tensor<64x512x768xf32>
    %191 = stablehlo.multiply %180, %190 : tensor<64x512x768xf32>
    %192 = stablehlo.reshape %arg11 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %193 = stablehlo.broadcast_in_dim %192, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %194 = stablehlo.add %191, %193 : tensor<64x512x768xf32>
    %195 = stablehlo.dot_general %194, %arg18, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %196 = stablehlo.broadcast_in_dim %arg17, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %197 = stablehlo.broadcast_in_dim %196, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %198 = stablehlo.broadcast_in_dim %197, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %199 = stablehlo.add %195, %198 : tensor<64x512x3072xf32>
    %200 = stablehlo.multiply %199, %199 : tensor<64x512x3072xf32>
    %201 = stablehlo.multiply %200, %199 : tensor<64x512x3072xf32>
    %202 = stablehlo.multiply %199, %199 : tensor<64x512x3072xf32>
    %cst_23 = stablehlo.constant dense<3.000000e+00> : tensor<f32>
    %203 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %204 = stablehlo.multiply %203, %202 : tensor<64x512x3072xf32>
    %cst_24 = stablehlo.constant dense<4.471500e-02> : tensor<f32>
    %205 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %206 = stablehlo.multiply %205, %201 : tensor<64x512x3072xf32>
    %207 = stablehlo.add %199, %206 : tensor<64x512x3072xf32>
    %cst_25 = stablehlo.constant dense<0.797884583> : tensor<f32>
    %208 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %209 = stablehlo.multiply %208, %207 : tensor<64x512x3072xf32>
    %210 = stablehlo.tanh %209 : tensor<64x512x3072xf32>
    %211 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %212 = stablehlo.broadcast_in_dim %211, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %213 = stablehlo.subtract %212, %210 : tensor<64x512x3072xf32>
    %214 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %215 = stablehlo.add %214, %210 : tensor<64x512x3072xf32>
    %cst_26 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %216 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %217 = stablehlo.multiply %216, %215 : tensor<64x512x3072xf32>
    %218 = stablehlo.multiply %199, %217 : tensor<64x512x3072xf32>
    %219 = stablehlo.dot_general %218, %arg14, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %220 = stablehlo.broadcast_in_dim %arg13, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %221 = stablehlo.broadcast_in_dim %220, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %222 = stablehlo.broadcast_in_dim %221, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %223 = stablehlo.add %219, %222 : tensor<64x512x768xf32>
    %c_27 = stablehlo.constant dense<1964414256> : tensor<ui32>
    %224 = call @_threefry_fold_in(%arg615, %c_27) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %225 = call @_bernoulli_112(%224, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %226 = stablehlo.broadcast_in_dim %225, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %227 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %228 = stablehlo.divide %223, %227 : tensor<64x512x768xf32>
    %229 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %230 = stablehlo.select %226, %228, %229 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %231 = stablehlo.add %230, %194 : tensor<64x512x768xf32>
    %232 = stablehlo.multiply %231, %231 : tensor<64x512x768xf32>
    %233 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %234 = stablehlo.multiply %233, %231 : tensor<64x512x768xf32>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %235 = stablehlo.reduce(%231 init: %cst_28) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %236 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %237 = stablehlo.divide %235, %236 : tensor<64x512xf32>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %238 = stablehlo.reduce(%232 init: %cst_29) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %239 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %240 = stablehlo.divide %238, %239 : tensor<64x512xf32>
    %241 = stablehlo.multiply %237, %237 : tensor<64x512xf32>
    %242 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %243 = stablehlo.multiply %242, %237 : tensor<64x512xf32>
    %244 = stablehlo.subtract %240, %241 : tensor<64x512xf32>
    %245 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %246 = stablehlo.maximum %245, %244 : tensor<64x512xf32>
    %247 = stablehlo.compare  EQ, %244, %246,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %248 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %249 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %250 = stablehlo.select %247, %248, %249 : tensor<64x512xi1>, tensor<64x512xf32>
    %251 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %252 = stablehlo.compare  EQ, %251, %246,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %253 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %254 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %255 = stablehlo.select %252, %253, %254 : tensor<64x512xi1>, tensor<64x512xf32>
    %256 = stablehlo.divide %250, %255 : tensor<64x512xf32>
    %257 = stablehlo.broadcast_in_dim %237, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %258 = stablehlo.broadcast_in_dim %246, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %259 = stablehlo.broadcast_in_dim %257, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %260 = stablehlo.subtract %231, %259 : tensor<64x512x768xf32>
    %261 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %262 = stablehlo.add %258, %261 : tensor<64x512x1xf32>
    %263 = stablehlo.rsqrt %262 : tensor<64x512x1xf32>
    %264 = stablehlo.divide %263, %262 : tensor<64x512x1xf32>
    %265 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %266 = stablehlo.multiply %265, %264 : tensor<64x512x1xf32>
    %267 = stablehlo.reshape %arg16 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %268 = stablehlo.broadcast_in_dim %263, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %269 = stablehlo.broadcast_in_dim %267, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %270 = stablehlo.multiply %268, %269 : tensor<64x512x768xf32>
    %271 = stablehlo.multiply %260, %270 : tensor<64x512x768xf32>
    %272 = stablehlo.reshape %arg15 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %273 = stablehlo.broadcast_in_dim %272, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %274 = stablehlo.add %271, %273 : tensor<64x512x768xf32>
    %275 = stablehlo.reshape %arg22 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %276 = stablehlo.dot_general %274, %275, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %277 = stablehlo.reshape %arg21 : (tensor<768xf32>) -> tensor<12x64xf32>
    %278 = stablehlo.broadcast_in_dim %277, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %279 = stablehlo.broadcast_in_dim %278, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %280 = stablehlo.broadcast_in_dim %279, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %281 = stablehlo.add %276, %280 : tensor<64x512x12x64xf32>
    %282 = stablehlo.reshape %arg20 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %283 = stablehlo.dot_general %274, %282, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %284 = stablehlo.reshape %arg19 : (tensor<768xf32>) -> tensor<12x64xf32>
    %285 = stablehlo.broadcast_in_dim %284, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %286 = stablehlo.broadcast_in_dim %285, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %287 = stablehlo.broadcast_in_dim %286, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %288 = stablehlo.add %283, %287 : tensor<64x512x12x64xf32>
    %289 = stablehlo.reshape %arg24 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %290 = stablehlo.dot_general %274, %289, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %291 = stablehlo.reshape %arg23 : (tensor<768xf32>) -> tensor<12x64xf32>
    %292 = stablehlo.broadcast_in_dim %291, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %293 = stablehlo.broadcast_in_dim %292, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %294 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %295 = stablehlo.add %290, %294 : tensor<64x512x12x64xf32>
    %296 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %297 = stablehlo.compare  GT, %81, %296,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %298 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %299 = stablehlo.convert %298 : tensor<64x1x512x512xf32>
    %300 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %301 = stablehlo.convert %300 : tensor<64x1x512x512xf32>
    %302 = stablehlo.select %297, %299, %301 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_30 = stablehlo.constant dense<2719293418> : tensor<ui32>
    %303 = call @_threefry_fold_in(%arg615, %c_30) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %304 = stablehlo.sqrt %cst_15 : tensor<f32>
    %305 = stablehlo.convert %304 : tensor<f32>
    %306 = stablehlo.broadcast_in_dim %305, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %307 = stablehlo.divide %281, %306 : tensor<64x512x12x64xf32>
    %308 = stablehlo.dot_general %307, %288, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %309 = stablehlo.broadcast_in_dim %302, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %310 = stablehlo.add %308, %309 : tensor<64x12x512x512xf32>
    %cst_31 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %311 = stablehlo.reduce(%310 init: %cst_31) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %312 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %313 = stablehlo.maximum %312, %311 : tensor<64x12x512xf32>
    %314 = stablehlo.broadcast_in_dim %313, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %315 = stablehlo.broadcast_in_dim %314, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %316 = stablehlo.subtract %310, %315 : tensor<64x12x512x512xf32>
    %317 = stablehlo.exponential %316 : tensor<64x12x512x512xf32>
    %cst_32 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %318 = stablehlo.reduce(%317 init: %cst_32) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %319 = stablehlo.broadcast_in_dim %318, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %320 = stablehlo.broadcast_in_dim %319, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %321 = stablehlo.divide %317, %320 : tensor<64x12x512x512xf32>
    %322 = stablehlo.multiply %319, %319 : tensor<64x12x512x1xf32>
    %cst_33 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %323 = stablehlo.broadcast_in_dim %cst_33, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %324 = stablehlo.divide %323, %322 : tensor<64x12x512x1xf32>
    %325 = call @_bernoulli_71(%303, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %326 = stablehlo.convert %325 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %327 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %328 = stablehlo.divide %326, %327 : tensor<64x12x512x512xf32>
    %329 = stablehlo.multiply %321, %328 : tensor<64x12x512x512xf32>
    %330 = stablehlo.dot_general %295, %329, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %331 = stablehlo.transpose %330, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %332 = stablehlo.reshape %arg26 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %333 = stablehlo.dot_general %331, %332, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %334 = stablehlo.broadcast_in_dim %arg25, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %335 = stablehlo.broadcast_in_dim %334, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %336 = stablehlo.broadcast_in_dim %335, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %337 = stablehlo.add %333, %336 : tensor<64x512x768xf32>
    %c_34 = stablehlo.constant dense<2608215118> : tensor<ui32>
    %338 = call @_threefry_fold_in(%arg615, %c_34) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %339 = call @_bernoulli(%338, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %340 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %341 = stablehlo.divide %337, %340 : tensor<64x512x768xf32>
    %342 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %343 = stablehlo.select %339, %341, %342 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %344 = stablehlo.add %343, %274 : tensor<64x512x768xf32>
    %345 = stablehlo.multiply %344, %344 : tensor<64x512x768xf32>
    %346 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %347 = stablehlo.multiply %346, %344 : tensor<64x512x768xf32>
    %cst_35 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %348 = stablehlo.reduce(%344 init: %cst_35) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %349 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %350 = stablehlo.divide %348, %349 : tensor<64x512xf32>
    %cst_36 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %351 = stablehlo.reduce(%345 init: %cst_36) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %352 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %353 = stablehlo.divide %351, %352 : tensor<64x512xf32>
    %354 = stablehlo.multiply %350, %350 : tensor<64x512xf32>
    %355 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %356 = stablehlo.multiply %355, %350 : tensor<64x512xf32>
    %357 = stablehlo.subtract %353, %354 : tensor<64x512xf32>
    %358 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %359 = stablehlo.maximum %358, %357 : tensor<64x512xf32>
    %360 = stablehlo.compare  EQ, %357, %359,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %361 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %362 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %363 = stablehlo.select %360, %361, %362 : tensor<64x512xi1>, tensor<64x512xf32>
    %364 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %365 = stablehlo.compare  EQ, %364, %359,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %366 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %367 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %368 = stablehlo.select %365, %366, %367 : tensor<64x512xi1>, tensor<64x512xf32>
    %369 = stablehlo.divide %363, %368 : tensor<64x512xf32>
    %370 = stablehlo.broadcast_in_dim %350, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %371 = stablehlo.broadcast_in_dim %359, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %372 = stablehlo.broadcast_in_dim %370, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %373 = stablehlo.subtract %344, %372 : tensor<64x512x768xf32>
    %374 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %375 = stablehlo.add %371, %374 : tensor<64x512x1xf32>
    %376 = stablehlo.rsqrt %375 : tensor<64x512x1xf32>
    %377 = stablehlo.divide %376, %375 : tensor<64x512x1xf32>
    %378 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %379 = stablehlo.multiply %378, %377 : tensor<64x512x1xf32>
    %380 = stablehlo.reshape %arg28 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %381 = stablehlo.broadcast_in_dim %376, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %382 = stablehlo.broadcast_in_dim %380, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %383 = stablehlo.multiply %381, %382 : tensor<64x512x768xf32>
    %384 = stablehlo.multiply %373, %383 : tensor<64x512x768xf32>
    %385 = stablehlo.reshape %arg27 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %386 = stablehlo.broadcast_in_dim %385, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %387 = stablehlo.add %384, %386 : tensor<64x512x768xf32>
    %388 = stablehlo.dot_general %387, %arg34, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %389 = stablehlo.broadcast_in_dim %arg33, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %390 = stablehlo.broadcast_in_dim %389, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %391 = stablehlo.broadcast_in_dim %390, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %392 = stablehlo.add %388, %391 : tensor<64x512x3072xf32>
    %393 = stablehlo.multiply %392, %392 : tensor<64x512x3072xf32>
    %394 = stablehlo.multiply %393, %392 : tensor<64x512x3072xf32>
    %395 = stablehlo.multiply %392, %392 : tensor<64x512x3072xf32>
    %396 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %397 = stablehlo.multiply %396, %395 : tensor<64x512x3072xf32>
    %398 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %399 = stablehlo.multiply %398, %394 : tensor<64x512x3072xf32>
    %400 = stablehlo.add %392, %399 : tensor<64x512x3072xf32>
    %401 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %402 = stablehlo.multiply %401, %400 : tensor<64x512x3072xf32>
    %403 = stablehlo.tanh %402 : tensor<64x512x3072xf32>
    %404 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %405 = stablehlo.broadcast_in_dim %404, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %406 = stablehlo.subtract %405, %403 : tensor<64x512x3072xf32>
    %407 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %408 = stablehlo.add %407, %403 : tensor<64x512x3072xf32>
    %409 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %410 = stablehlo.multiply %409, %408 : tensor<64x512x3072xf32>
    %411 = stablehlo.multiply %392, %410 : tensor<64x512x3072xf32>
    %412 = stablehlo.dot_general %411, %arg30, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %413 = stablehlo.broadcast_in_dim %arg29, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %414 = stablehlo.broadcast_in_dim %413, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %415 = stablehlo.broadcast_in_dim %414, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %416 = stablehlo.add %412, %415 : tensor<64x512x768xf32>
    %c_37 = stablehlo.constant dense<2710230233> : tensor<ui32>
    %417 = call @_threefry_fold_in(%arg615, %c_37) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %418 = call @_bernoulli_112(%417, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %419 = stablehlo.broadcast_in_dim %418, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %420 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %421 = stablehlo.divide %416, %420 : tensor<64x512x768xf32>
    %422 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %423 = stablehlo.select %419, %421, %422 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %424 = stablehlo.add %423, %387 : tensor<64x512x768xf32>
    %425 = stablehlo.multiply %424, %424 : tensor<64x512x768xf32>
    %426 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %427 = stablehlo.multiply %426, %424 : tensor<64x512x768xf32>
    %cst_38 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %428 = stablehlo.reduce(%424 init: %cst_38) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %429 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %430 = stablehlo.divide %428, %429 : tensor<64x512xf32>
    %cst_39 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %431 = stablehlo.reduce(%425 init: %cst_39) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %432 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %433 = stablehlo.divide %431, %432 : tensor<64x512xf32>
    %434 = stablehlo.multiply %430, %430 : tensor<64x512xf32>
    %435 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %436 = stablehlo.multiply %435, %430 : tensor<64x512xf32>
    %437 = stablehlo.subtract %433, %434 : tensor<64x512xf32>
    %438 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %439 = stablehlo.maximum %438, %437 : tensor<64x512xf32>
    %440 = stablehlo.compare  EQ, %437, %439,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %441 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %442 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %443 = stablehlo.select %440, %441, %442 : tensor<64x512xi1>, tensor<64x512xf32>
    %444 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %445 = stablehlo.compare  EQ, %444, %439,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %446 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %447 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %448 = stablehlo.select %445, %446, %447 : tensor<64x512xi1>, tensor<64x512xf32>
    %449 = stablehlo.divide %443, %448 : tensor<64x512xf32>
    %450 = stablehlo.broadcast_in_dim %430, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %451 = stablehlo.broadcast_in_dim %439, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %452 = stablehlo.broadcast_in_dim %450, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %453 = stablehlo.subtract %424, %452 : tensor<64x512x768xf32>
    %454 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %455 = stablehlo.add %451, %454 : tensor<64x512x1xf32>
    %456 = stablehlo.rsqrt %455 : tensor<64x512x1xf32>
    %457 = stablehlo.divide %456, %455 : tensor<64x512x1xf32>
    %458 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %459 = stablehlo.multiply %458, %457 : tensor<64x512x1xf32>
    %460 = stablehlo.reshape %arg32 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %461 = stablehlo.broadcast_in_dim %456, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %462 = stablehlo.broadcast_in_dim %460, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %463 = stablehlo.multiply %461, %462 : tensor<64x512x768xf32>
    %464 = stablehlo.multiply %453, %463 : tensor<64x512x768xf32>
    %465 = stablehlo.reshape %arg31 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %466 = stablehlo.broadcast_in_dim %465, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %467 = stablehlo.add %464, %466 : tensor<64x512x768xf32>
    %468 = stablehlo.reshape %arg70 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %469 = stablehlo.dot_general %467, %468, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %470 = stablehlo.reshape %arg69 : (tensor<768xf32>) -> tensor<12x64xf32>
    %471 = stablehlo.broadcast_in_dim %470, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %472 = stablehlo.broadcast_in_dim %471, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %473 = stablehlo.broadcast_in_dim %472, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %474 = stablehlo.add %469, %473 : tensor<64x512x12x64xf32>
    %475 = stablehlo.reshape %arg68 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %476 = stablehlo.dot_general %467, %475, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %477 = stablehlo.reshape %arg67 : (tensor<768xf32>) -> tensor<12x64xf32>
    %478 = stablehlo.broadcast_in_dim %477, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %479 = stablehlo.broadcast_in_dim %478, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %480 = stablehlo.broadcast_in_dim %479, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %481 = stablehlo.add %476, %480 : tensor<64x512x12x64xf32>
    %482 = stablehlo.reshape %arg72 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %483 = stablehlo.dot_general %467, %482, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %484 = stablehlo.reshape %arg71 : (tensor<768xf32>) -> tensor<12x64xf32>
    %485 = stablehlo.broadcast_in_dim %484, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %486 = stablehlo.broadcast_in_dim %485, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %487 = stablehlo.broadcast_in_dim %486, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %488 = stablehlo.add %483, %487 : tensor<64x512x12x64xf32>
    %489 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %490 = stablehlo.compare  GT, %81, %489,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %491 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %492 = stablehlo.convert %491 : tensor<64x1x512x512xf32>
    %493 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %494 = stablehlo.convert %493 : tensor<64x1x512x512xf32>
    %495 = stablehlo.select %490, %492, %494 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_40 = stablehlo.constant dense<4069916713> : tensor<ui32>
    %496 = call @_threefry_fold_in(%arg615, %c_40) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %497 = stablehlo.sqrt %cst_15 : tensor<f32>
    %498 = stablehlo.convert %497 : tensor<f32>
    %499 = stablehlo.broadcast_in_dim %498, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %500 = stablehlo.divide %474, %499 : tensor<64x512x12x64xf32>
    %501 = stablehlo.dot_general %500, %481, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %502 = stablehlo.broadcast_in_dim %495, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %503 = stablehlo.add %501, %502 : tensor<64x12x512x512xf32>
    %cst_41 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %504 = stablehlo.reduce(%503 init: %cst_41) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %505 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %506 = stablehlo.maximum %505, %504 : tensor<64x12x512xf32>
    %507 = stablehlo.broadcast_in_dim %506, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %508 = stablehlo.broadcast_in_dim %507, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %509 = stablehlo.subtract %503, %508 : tensor<64x12x512x512xf32>
    %510 = stablehlo.exponential %509 : tensor<64x12x512x512xf32>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %511 = stablehlo.reduce(%510 init: %cst_42) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %512 = stablehlo.broadcast_in_dim %511, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %513 = stablehlo.broadcast_in_dim %512, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %514 = stablehlo.divide %510, %513 : tensor<64x12x512x512xf32>
    %515 = stablehlo.multiply %512, %512 : tensor<64x12x512x1xf32>
    %cst_43 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %516 = stablehlo.broadcast_in_dim %cst_43, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %517 = stablehlo.divide %516, %515 : tensor<64x12x512x1xf32>
    %518 = call @_bernoulli_71(%496, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %519 = stablehlo.convert %518 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %520 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %521 = stablehlo.divide %519, %520 : tensor<64x12x512x512xf32>
    %522 = stablehlo.multiply %514, %521 : tensor<64x12x512x512xf32>
    %523 = stablehlo.dot_general %488, %522, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %524 = stablehlo.transpose %523, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %525 = stablehlo.reshape %arg74 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %526 = stablehlo.dot_general %524, %525, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %527 = stablehlo.broadcast_in_dim %arg73, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %528 = stablehlo.broadcast_in_dim %527, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %529 = stablehlo.broadcast_in_dim %528, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %530 = stablehlo.add %526, %529 : tensor<64x512x768xf32>
    %c_44 = stablehlo.constant dense<2440900070> : tensor<ui32>
    %531 = call @_threefry_fold_in(%arg615, %c_44) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %532 = call @_bernoulli(%531, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %533 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %534 = stablehlo.divide %530, %533 : tensor<64x512x768xf32>
    %535 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %536 = stablehlo.select %532, %534, %535 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %537 = stablehlo.add %536, %467 : tensor<64x512x768xf32>
    %538 = stablehlo.multiply %537, %537 : tensor<64x512x768xf32>
    %539 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %540 = stablehlo.multiply %539, %537 : tensor<64x512x768xf32>
    %cst_45 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %541 = stablehlo.reduce(%537 init: %cst_45) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %542 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %543 = stablehlo.divide %541, %542 : tensor<64x512xf32>
    %cst_46 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %544 = stablehlo.reduce(%538 init: %cst_46) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %545 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %546 = stablehlo.divide %544, %545 : tensor<64x512xf32>
    %547 = stablehlo.multiply %543, %543 : tensor<64x512xf32>
    %548 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %549 = stablehlo.multiply %548, %543 : tensor<64x512xf32>
    %550 = stablehlo.subtract %546, %547 : tensor<64x512xf32>
    %551 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %552 = stablehlo.maximum %551, %550 : tensor<64x512xf32>
    %553 = stablehlo.compare  EQ, %550, %552,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %554 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %555 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %556 = stablehlo.select %553, %554, %555 : tensor<64x512xi1>, tensor<64x512xf32>
    %557 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %558 = stablehlo.compare  EQ, %557, %552,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %559 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %560 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %561 = stablehlo.select %558, %559, %560 : tensor<64x512xi1>, tensor<64x512xf32>
    %562 = stablehlo.divide %556, %561 : tensor<64x512xf32>
    %563 = stablehlo.broadcast_in_dim %543, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %564 = stablehlo.broadcast_in_dim %552, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %565 = stablehlo.broadcast_in_dim %563, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %566 = stablehlo.subtract %537, %565 : tensor<64x512x768xf32>
    %567 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %568 = stablehlo.add %564, %567 : tensor<64x512x1xf32>
    %569 = stablehlo.rsqrt %568 : tensor<64x512x1xf32>
    %570 = stablehlo.divide %569, %568 : tensor<64x512x1xf32>
    %571 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %572 = stablehlo.multiply %571, %570 : tensor<64x512x1xf32>
    %573 = stablehlo.reshape %arg76 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %574 = stablehlo.broadcast_in_dim %569, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %575 = stablehlo.broadcast_in_dim %573, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %576 = stablehlo.multiply %574, %575 : tensor<64x512x768xf32>
    %577 = stablehlo.multiply %566, %576 : tensor<64x512x768xf32>
    %578 = stablehlo.reshape %arg75 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %579 = stablehlo.broadcast_in_dim %578, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %580 = stablehlo.add %577, %579 : tensor<64x512x768xf32>
    %581 = stablehlo.dot_general %580, %arg82, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %582 = stablehlo.broadcast_in_dim %arg81, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %583 = stablehlo.broadcast_in_dim %582, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %584 = stablehlo.broadcast_in_dim %583, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %585 = stablehlo.add %581, %584 : tensor<64x512x3072xf32>
    %586 = stablehlo.multiply %585, %585 : tensor<64x512x3072xf32>
    %587 = stablehlo.multiply %586, %585 : tensor<64x512x3072xf32>
    %588 = stablehlo.multiply %585, %585 : tensor<64x512x3072xf32>
    %589 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %590 = stablehlo.multiply %589, %588 : tensor<64x512x3072xf32>
    %591 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %592 = stablehlo.multiply %591, %587 : tensor<64x512x3072xf32>
    %593 = stablehlo.add %585, %592 : tensor<64x512x3072xf32>
    %594 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %595 = stablehlo.multiply %594, %593 : tensor<64x512x3072xf32>
    %596 = stablehlo.tanh %595 : tensor<64x512x3072xf32>
    %597 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %598 = stablehlo.broadcast_in_dim %597, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %599 = stablehlo.subtract %598, %596 : tensor<64x512x3072xf32>
    %600 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %601 = stablehlo.add %600, %596 : tensor<64x512x3072xf32>
    %602 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %603 = stablehlo.multiply %602, %601 : tensor<64x512x3072xf32>
    %604 = stablehlo.multiply %585, %603 : tensor<64x512x3072xf32>
    %605 = stablehlo.dot_general %604, %arg78, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %606 = stablehlo.broadcast_in_dim %arg77, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %607 = stablehlo.broadcast_in_dim %606, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %608 = stablehlo.broadcast_in_dim %607, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %609 = stablehlo.add %605, %608 : tensor<64x512x768xf32>
    %c_47 = stablehlo.constant dense<2001679006> : tensor<ui32>
    %610 = call @_threefry_fold_in(%arg615, %c_47) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %611 = call @_bernoulli_112(%610, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %612 = stablehlo.broadcast_in_dim %611, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %613 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %614 = stablehlo.divide %609, %613 : tensor<64x512x768xf32>
    %615 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %616 = stablehlo.select %612, %614, %615 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %617 = stablehlo.add %616, %580 : tensor<64x512x768xf32>
    %618 = stablehlo.multiply %617, %617 : tensor<64x512x768xf32>
    %619 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %620 = stablehlo.multiply %619, %617 : tensor<64x512x768xf32>
    %cst_48 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %621 = stablehlo.reduce(%617 init: %cst_48) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %622 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %623 = stablehlo.divide %621, %622 : tensor<64x512xf32>
    %cst_49 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %624 = stablehlo.reduce(%618 init: %cst_49) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %625 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %626 = stablehlo.divide %624, %625 : tensor<64x512xf32>
    %627 = stablehlo.multiply %623, %623 : tensor<64x512xf32>
    %628 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %629 = stablehlo.multiply %628, %623 : tensor<64x512xf32>
    %630 = stablehlo.subtract %626, %627 : tensor<64x512xf32>
    %631 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %632 = stablehlo.maximum %631, %630 : tensor<64x512xf32>
    %633 = stablehlo.compare  EQ, %630, %632,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %634 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %635 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %636 = stablehlo.select %633, %634, %635 : tensor<64x512xi1>, tensor<64x512xf32>
    %637 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %638 = stablehlo.compare  EQ, %637, %632,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %639 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %640 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %641 = stablehlo.select %638, %639, %640 : tensor<64x512xi1>, tensor<64x512xf32>
    %642 = stablehlo.divide %636, %641 : tensor<64x512xf32>
    %643 = stablehlo.broadcast_in_dim %623, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %644 = stablehlo.broadcast_in_dim %632, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %645 = stablehlo.broadcast_in_dim %643, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %646 = stablehlo.subtract %617, %645 : tensor<64x512x768xf32>
    %647 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %648 = stablehlo.add %644, %647 : tensor<64x512x1xf32>
    %649 = stablehlo.rsqrt %648 : tensor<64x512x1xf32>
    %650 = stablehlo.divide %649, %648 : tensor<64x512x1xf32>
    %651 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %652 = stablehlo.multiply %651, %650 : tensor<64x512x1xf32>
    %653 = stablehlo.reshape %arg80 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %654 = stablehlo.broadcast_in_dim %649, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %655 = stablehlo.broadcast_in_dim %653, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %656 = stablehlo.multiply %654, %655 : tensor<64x512x768xf32>
    %657 = stablehlo.multiply %646, %656 : tensor<64x512x768xf32>
    %658 = stablehlo.reshape %arg79 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %659 = stablehlo.broadcast_in_dim %658, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %660 = stablehlo.add %657, %659 : tensor<64x512x768xf32>
    %661 = stablehlo.reshape %arg86 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %662 = stablehlo.dot_general %660, %661, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %663 = stablehlo.reshape %arg85 : (tensor<768xf32>) -> tensor<12x64xf32>
    %664 = stablehlo.broadcast_in_dim %663, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %665 = stablehlo.broadcast_in_dim %664, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %666 = stablehlo.broadcast_in_dim %665, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %667 = stablehlo.add %662, %666 : tensor<64x512x12x64xf32>
    %668 = stablehlo.reshape %arg84 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %669 = stablehlo.dot_general %660, %668, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %670 = stablehlo.reshape %arg83 : (tensor<768xf32>) -> tensor<12x64xf32>
    %671 = stablehlo.broadcast_in_dim %670, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %672 = stablehlo.broadcast_in_dim %671, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %673 = stablehlo.broadcast_in_dim %672, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %674 = stablehlo.add %669, %673 : tensor<64x512x12x64xf32>
    %675 = stablehlo.reshape %arg88 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %676 = stablehlo.dot_general %660, %675, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %677 = stablehlo.reshape %arg87 : (tensor<768xf32>) -> tensor<12x64xf32>
    %678 = stablehlo.broadcast_in_dim %677, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %679 = stablehlo.broadcast_in_dim %678, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %680 = stablehlo.broadcast_in_dim %679, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %681 = stablehlo.add %676, %680 : tensor<64x512x12x64xf32>
    %682 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %683 = stablehlo.compare  GT, %81, %682,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %684 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %685 = stablehlo.convert %684 : tensor<64x1x512x512xf32>
    %686 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %687 = stablehlo.convert %686 : tensor<64x1x512x512xf32>
    %688 = stablehlo.select %683, %685, %687 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_50 = stablehlo.constant dense<1482862066> : tensor<ui32>
    %689 = call @_threefry_fold_in(%arg615, %c_50) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %690 = stablehlo.sqrt %cst_15 : tensor<f32>
    %691 = stablehlo.convert %690 : tensor<f32>
    %692 = stablehlo.broadcast_in_dim %691, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %693 = stablehlo.divide %667, %692 : tensor<64x512x12x64xf32>
    %694 = stablehlo.dot_general %693, %674, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %695 = stablehlo.broadcast_in_dim %688, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %696 = stablehlo.add %694, %695 : tensor<64x12x512x512xf32>
    %cst_51 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %697 = stablehlo.reduce(%696 init: %cst_51) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %698 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %699 = stablehlo.maximum %698, %697 : tensor<64x12x512xf32>
    %700 = stablehlo.broadcast_in_dim %699, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %701 = stablehlo.broadcast_in_dim %700, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %702 = stablehlo.subtract %696, %701 : tensor<64x12x512x512xf32>
    %703 = stablehlo.exponential %702 : tensor<64x12x512x512xf32>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %704 = stablehlo.reduce(%703 init: %cst_52) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %705 = stablehlo.broadcast_in_dim %704, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %706 = stablehlo.broadcast_in_dim %705, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %707 = stablehlo.divide %703, %706 : tensor<64x12x512x512xf32>
    %708 = stablehlo.multiply %705, %705 : tensor<64x12x512x1xf32>
    %cst_53 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %709 = stablehlo.broadcast_in_dim %cst_53, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %710 = stablehlo.divide %709, %708 : tensor<64x12x512x1xf32>
    %711 = call @_bernoulli_71(%689, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %712 = stablehlo.convert %711 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %713 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %714 = stablehlo.divide %712, %713 : tensor<64x12x512x512xf32>
    %715 = stablehlo.multiply %707, %714 : tensor<64x12x512x512xf32>
    %716 = stablehlo.dot_general %681, %715, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %717 = stablehlo.transpose %716, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %718 = stablehlo.reshape %arg90 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %719 = stablehlo.dot_general %717, %718, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %720 = stablehlo.broadcast_in_dim %arg89, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %721 = stablehlo.broadcast_in_dim %720, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %722 = stablehlo.broadcast_in_dim %721, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %723 = stablehlo.add %719, %722 : tensor<64x512x768xf32>
    %c_54 = stablehlo.constant dense<2121002933> : tensor<ui32>
    %724 = call @_threefry_fold_in(%arg615, %c_54) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %725 = call @_bernoulli(%724, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %726 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %727 = stablehlo.divide %723, %726 : tensor<64x512x768xf32>
    %728 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %729 = stablehlo.select %725, %727, %728 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %730 = stablehlo.add %729, %660 : tensor<64x512x768xf32>
    %731 = stablehlo.multiply %730, %730 : tensor<64x512x768xf32>
    %732 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %733 = stablehlo.multiply %732, %730 : tensor<64x512x768xf32>
    %cst_55 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %734 = stablehlo.reduce(%730 init: %cst_55) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %735 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %736 = stablehlo.divide %734, %735 : tensor<64x512xf32>
    %cst_56 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %737 = stablehlo.reduce(%731 init: %cst_56) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %738 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %739 = stablehlo.divide %737, %738 : tensor<64x512xf32>
    %740 = stablehlo.multiply %736, %736 : tensor<64x512xf32>
    %741 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %742 = stablehlo.multiply %741, %736 : tensor<64x512xf32>
    %743 = stablehlo.subtract %739, %740 : tensor<64x512xf32>
    %744 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %745 = stablehlo.maximum %744, %743 : tensor<64x512xf32>
    %746 = stablehlo.compare  EQ, %743, %745,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %747 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %748 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %749 = stablehlo.select %746, %747, %748 : tensor<64x512xi1>, tensor<64x512xf32>
    %750 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %751 = stablehlo.compare  EQ, %750, %745,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %752 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %753 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %754 = stablehlo.select %751, %752, %753 : tensor<64x512xi1>, tensor<64x512xf32>
    %755 = stablehlo.divide %749, %754 : tensor<64x512xf32>
    %756 = stablehlo.broadcast_in_dim %736, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %757 = stablehlo.broadcast_in_dim %745, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %758 = stablehlo.broadcast_in_dim %756, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %759 = stablehlo.subtract %730, %758 : tensor<64x512x768xf32>
    %760 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %761 = stablehlo.add %757, %760 : tensor<64x512x1xf32>
    %762 = stablehlo.rsqrt %761 : tensor<64x512x1xf32>
    %763 = stablehlo.divide %762, %761 : tensor<64x512x1xf32>
    %764 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %765 = stablehlo.multiply %764, %763 : tensor<64x512x1xf32>
    %766 = stablehlo.reshape %arg92 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %767 = stablehlo.broadcast_in_dim %762, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %768 = stablehlo.broadcast_in_dim %766, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %769 = stablehlo.multiply %767, %768 : tensor<64x512x768xf32>
    %770 = stablehlo.multiply %759, %769 : tensor<64x512x768xf32>
    %771 = stablehlo.reshape %arg91 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %772 = stablehlo.broadcast_in_dim %771, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %773 = stablehlo.add %770, %772 : tensor<64x512x768xf32>
    %774 = stablehlo.dot_general %773, %arg98, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %775 = stablehlo.broadcast_in_dim %arg97, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %776 = stablehlo.broadcast_in_dim %775, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %777 = stablehlo.broadcast_in_dim %776, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %778 = stablehlo.add %774, %777 : tensor<64x512x3072xf32>
    %779 = stablehlo.multiply %778, %778 : tensor<64x512x3072xf32>
    %780 = stablehlo.multiply %779, %778 : tensor<64x512x3072xf32>
    %781 = stablehlo.multiply %778, %778 : tensor<64x512x3072xf32>
    %782 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %783 = stablehlo.multiply %782, %781 : tensor<64x512x3072xf32>
    %784 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %785 = stablehlo.multiply %784, %780 : tensor<64x512x3072xf32>
    %786 = stablehlo.add %778, %785 : tensor<64x512x3072xf32>
    %787 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %788 = stablehlo.multiply %787, %786 : tensor<64x512x3072xf32>
    %789 = stablehlo.tanh %788 : tensor<64x512x3072xf32>
    %790 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %791 = stablehlo.broadcast_in_dim %790, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %792 = stablehlo.subtract %791, %789 : tensor<64x512x3072xf32>
    %793 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %794 = stablehlo.add %793, %789 : tensor<64x512x3072xf32>
    %795 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %796 = stablehlo.multiply %795, %794 : tensor<64x512x3072xf32>
    %797 = stablehlo.multiply %778, %796 : tensor<64x512x3072xf32>
    %798 = stablehlo.dot_general %797, %arg94, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %799 = stablehlo.broadcast_in_dim %arg93, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %800 = stablehlo.broadcast_in_dim %799, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %801 = stablehlo.broadcast_in_dim %800, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %802 = stablehlo.add %798, %801 : tensor<64x512x768xf32>
    %c_57 = stablehlo.constant dense<338706888> : tensor<ui32>
    %803 = call @_threefry_fold_in(%arg615, %c_57) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %804 = call @_bernoulli_112(%803, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %805 = stablehlo.broadcast_in_dim %804, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %806 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %807 = stablehlo.divide %802, %806 : tensor<64x512x768xf32>
    %808 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %809 = stablehlo.select %805, %807, %808 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %810 = stablehlo.add %809, %773 : tensor<64x512x768xf32>
    %811 = stablehlo.multiply %810, %810 : tensor<64x512x768xf32>
    %812 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %813 = stablehlo.multiply %812, %810 : tensor<64x512x768xf32>
    %cst_58 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %814 = stablehlo.reduce(%810 init: %cst_58) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %815 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %816 = stablehlo.divide %814, %815 : tensor<64x512xf32>
    %cst_59 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %817 = stablehlo.reduce(%811 init: %cst_59) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %818 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %819 = stablehlo.divide %817, %818 : tensor<64x512xf32>
    %820 = stablehlo.multiply %816, %816 : tensor<64x512xf32>
    %821 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %822 = stablehlo.multiply %821, %816 : tensor<64x512xf32>
    %823 = stablehlo.subtract %819, %820 : tensor<64x512xf32>
    %824 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %825 = stablehlo.maximum %824, %823 : tensor<64x512xf32>
    %826 = stablehlo.compare  EQ, %823, %825,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %827 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %828 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %829 = stablehlo.select %826, %827, %828 : tensor<64x512xi1>, tensor<64x512xf32>
    %830 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %831 = stablehlo.compare  EQ, %830, %825,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %832 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %833 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %834 = stablehlo.select %831, %832, %833 : tensor<64x512xi1>, tensor<64x512xf32>
    %835 = stablehlo.divide %829, %834 : tensor<64x512xf32>
    %836 = stablehlo.broadcast_in_dim %816, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %837 = stablehlo.broadcast_in_dim %825, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %838 = stablehlo.broadcast_in_dim %836, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %839 = stablehlo.subtract %810, %838 : tensor<64x512x768xf32>
    %840 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %841 = stablehlo.add %837, %840 : tensor<64x512x1xf32>
    %842 = stablehlo.rsqrt %841 : tensor<64x512x1xf32>
    %843 = stablehlo.divide %842, %841 : tensor<64x512x1xf32>
    %844 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %845 = stablehlo.multiply %844, %843 : tensor<64x512x1xf32>
    %846 = stablehlo.reshape %arg96 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %847 = stablehlo.broadcast_in_dim %842, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %848 = stablehlo.broadcast_in_dim %846, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %849 = stablehlo.multiply %847, %848 : tensor<64x512x768xf32>
    %850 = stablehlo.multiply %839, %849 : tensor<64x512x768xf32>
    %851 = stablehlo.reshape %arg95 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %852 = stablehlo.broadcast_in_dim %851, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %853 = stablehlo.add %850, %852 : tensor<64x512x768xf32>
    %854 = stablehlo.reshape %arg102 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %855 = stablehlo.dot_general %853, %854, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %856 = stablehlo.reshape %arg101 : (tensor<768xf32>) -> tensor<12x64xf32>
    %857 = stablehlo.broadcast_in_dim %856, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %858 = stablehlo.broadcast_in_dim %857, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %859 = stablehlo.broadcast_in_dim %858, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %860 = stablehlo.add %855, %859 : tensor<64x512x12x64xf32>
    %861 = stablehlo.reshape %arg100 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %862 = stablehlo.dot_general %853, %861, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %863 = stablehlo.reshape %arg99 : (tensor<768xf32>) -> tensor<12x64xf32>
    %864 = stablehlo.broadcast_in_dim %863, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %865 = stablehlo.broadcast_in_dim %864, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %866 = stablehlo.broadcast_in_dim %865, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %867 = stablehlo.add %862, %866 : tensor<64x512x12x64xf32>
    %868 = stablehlo.reshape %arg104 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %869 = stablehlo.dot_general %853, %868, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %870 = stablehlo.reshape %arg103 : (tensor<768xf32>) -> tensor<12x64xf32>
    %871 = stablehlo.broadcast_in_dim %870, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %872 = stablehlo.broadcast_in_dim %871, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %873 = stablehlo.broadcast_in_dim %872, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %874 = stablehlo.add %869, %873 : tensor<64x512x12x64xf32>
    %875 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %876 = stablehlo.compare  GT, %81, %875,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %877 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %878 = stablehlo.convert %877 : tensor<64x1x512x512xf32>
    %879 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %880 = stablehlo.convert %879 : tensor<64x1x512x512xf32>
    %881 = stablehlo.select %876, %878, %880 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_60 = stablehlo.constant dense<1369119635> : tensor<ui32>
    %882 = call @_threefry_fold_in(%arg615, %c_60) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %883 = stablehlo.sqrt %cst_15 : tensor<f32>
    %884 = stablehlo.convert %883 : tensor<f32>
    %885 = stablehlo.broadcast_in_dim %884, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %886 = stablehlo.divide %860, %885 : tensor<64x512x12x64xf32>
    %887 = stablehlo.dot_general %886, %867, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %888 = stablehlo.broadcast_in_dim %881, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %889 = stablehlo.add %887, %888 : tensor<64x12x512x512xf32>
    %cst_61 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %890 = stablehlo.reduce(%889 init: %cst_61) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %891 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %892 = stablehlo.maximum %891, %890 : tensor<64x12x512xf32>
    %893 = stablehlo.broadcast_in_dim %892, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %894 = stablehlo.broadcast_in_dim %893, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %895 = stablehlo.subtract %889, %894 : tensor<64x12x512x512xf32>
    %896 = stablehlo.exponential %895 : tensor<64x12x512x512xf32>
    %cst_62 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %897 = stablehlo.reduce(%896 init: %cst_62) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %898 = stablehlo.broadcast_in_dim %897, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %899 = stablehlo.broadcast_in_dim %898, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %900 = stablehlo.divide %896, %899 : tensor<64x12x512x512xf32>
    %901 = stablehlo.multiply %898, %898 : tensor<64x12x512x1xf32>
    %cst_63 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %902 = stablehlo.broadcast_in_dim %cst_63, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %903 = stablehlo.divide %902, %901 : tensor<64x12x512x1xf32>
    %904 = call @_bernoulli_71(%882, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %905 = stablehlo.convert %904 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %906 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %907 = stablehlo.divide %905, %906 : tensor<64x12x512x512xf32>
    %908 = stablehlo.multiply %900, %907 : tensor<64x12x512x512xf32>
    %909 = stablehlo.dot_general %874, %908, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %910 = stablehlo.transpose %909, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %911 = stablehlo.reshape %arg106 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %912 = stablehlo.dot_general %910, %911, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %913 = stablehlo.broadcast_in_dim %arg105, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %914 = stablehlo.broadcast_in_dim %913, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %915 = stablehlo.broadcast_in_dim %914, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %916 = stablehlo.add %912, %915 : tensor<64x512x768xf32>
    %c_64 = stablehlo.constant dense<2886391657> : tensor<ui32>
    %917 = call @_threefry_fold_in(%arg615, %c_64) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %918 = call @_bernoulli(%917, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %919 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %920 = stablehlo.divide %916, %919 : tensor<64x512x768xf32>
    %921 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %922 = stablehlo.select %918, %920, %921 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %923 = stablehlo.add %922, %853 : tensor<64x512x768xf32>
    %924 = stablehlo.multiply %923, %923 : tensor<64x512x768xf32>
    %925 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %926 = stablehlo.multiply %925, %923 : tensor<64x512x768xf32>
    %cst_65 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %927 = stablehlo.reduce(%923 init: %cst_65) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %928 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %929 = stablehlo.divide %927, %928 : tensor<64x512xf32>
    %cst_66 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %930 = stablehlo.reduce(%924 init: %cst_66) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %931 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %932 = stablehlo.divide %930, %931 : tensor<64x512xf32>
    %933 = stablehlo.multiply %929, %929 : tensor<64x512xf32>
    %934 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %935 = stablehlo.multiply %934, %929 : tensor<64x512xf32>
    %936 = stablehlo.subtract %932, %933 : tensor<64x512xf32>
    %937 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %938 = stablehlo.maximum %937, %936 : tensor<64x512xf32>
    %939 = stablehlo.compare  EQ, %936, %938,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %940 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %941 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %942 = stablehlo.select %939, %940, %941 : tensor<64x512xi1>, tensor<64x512xf32>
    %943 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %944 = stablehlo.compare  EQ, %943, %938,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %945 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %946 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %947 = stablehlo.select %944, %945, %946 : tensor<64x512xi1>, tensor<64x512xf32>
    %948 = stablehlo.divide %942, %947 : tensor<64x512xf32>
    %949 = stablehlo.broadcast_in_dim %929, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %950 = stablehlo.broadcast_in_dim %938, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %951 = stablehlo.broadcast_in_dim %949, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %952 = stablehlo.subtract %923, %951 : tensor<64x512x768xf32>
    %953 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %954 = stablehlo.add %950, %953 : tensor<64x512x1xf32>
    %955 = stablehlo.rsqrt %954 : tensor<64x512x1xf32>
    %956 = stablehlo.divide %955, %954 : tensor<64x512x1xf32>
    %957 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %958 = stablehlo.multiply %957, %956 : tensor<64x512x1xf32>
    %959 = stablehlo.reshape %arg108 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %960 = stablehlo.broadcast_in_dim %955, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %961 = stablehlo.broadcast_in_dim %959, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %962 = stablehlo.multiply %960, %961 : tensor<64x512x768xf32>
    %963 = stablehlo.multiply %952, %962 : tensor<64x512x768xf32>
    %964 = stablehlo.reshape %arg107 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %965 = stablehlo.broadcast_in_dim %964, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %966 = stablehlo.add %963, %965 : tensor<64x512x768xf32>
    %967 = stablehlo.dot_general %966, %arg114, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %968 = stablehlo.broadcast_in_dim %arg113, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %969 = stablehlo.broadcast_in_dim %968, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %970 = stablehlo.broadcast_in_dim %969, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %971 = stablehlo.add %967, %970 : tensor<64x512x3072xf32>
    %972 = stablehlo.multiply %971, %971 : tensor<64x512x3072xf32>
    %973 = stablehlo.multiply %972, %971 : tensor<64x512x3072xf32>
    %974 = stablehlo.multiply %971, %971 : tensor<64x512x3072xf32>
    %975 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %976 = stablehlo.multiply %975, %974 : tensor<64x512x3072xf32>
    %977 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %978 = stablehlo.multiply %977, %973 : tensor<64x512x3072xf32>
    %979 = stablehlo.add %971, %978 : tensor<64x512x3072xf32>
    %980 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %981 = stablehlo.multiply %980, %979 : tensor<64x512x3072xf32>
    %982 = stablehlo.tanh %981 : tensor<64x512x3072xf32>
    %983 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %984 = stablehlo.broadcast_in_dim %983, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %985 = stablehlo.subtract %984, %982 : tensor<64x512x3072xf32>
    %986 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %987 = stablehlo.add %986, %982 : tensor<64x512x3072xf32>
    %988 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %989 = stablehlo.multiply %988, %987 : tensor<64x512x3072xf32>
    %990 = stablehlo.multiply %971, %989 : tensor<64x512x3072xf32>
    %991 = stablehlo.dot_general %990, %arg110, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %992 = stablehlo.broadcast_in_dim %arg109, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %993 = stablehlo.broadcast_in_dim %992, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %994 = stablehlo.broadcast_in_dim %993, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %995 = stablehlo.add %991, %994 : tensor<64x512x768xf32>
    %c_67 = stablehlo.constant dense<2209904577> : tensor<ui32>
    %996 = call @_threefry_fold_in(%arg615, %c_67) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %997 = call @_bernoulli_112(%996, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %998 = stablehlo.broadcast_in_dim %997, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %999 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1000 = stablehlo.divide %995, %999 : tensor<64x512x768xf32>
    %1001 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1002 = stablehlo.select %998, %1000, %1001 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1003 = stablehlo.add %1002, %966 : tensor<64x512x768xf32>
    %1004 = stablehlo.multiply %1003, %1003 : tensor<64x512x768xf32>
    %1005 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1006 = stablehlo.multiply %1005, %1003 : tensor<64x512x768xf32>
    %cst_68 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1007 = stablehlo.reduce(%1003 init: %cst_68) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1008 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1009 = stablehlo.divide %1007, %1008 : tensor<64x512xf32>
    %cst_69 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1010 = stablehlo.reduce(%1004 init: %cst_69) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1011 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1012 = stablehlo.divide %1010, %1011 : tensor<64x512xf32>
    %1013 = stablehlo.multiply %1009, %1009 : tensor<64x512xf32>
    %1014 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1015 = stablehlo.multiply %1014, %1009 : tensor<64x512xf32>
    %1016 = stablehlo.subtract %1012, %1013 : tensor<64x512xf32>
    %1017 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1018 = stablehlo.maximum %1017, %1016 : tensor<64x512xf32>
    %1019 = stablehlo.compare  EQ, %1016, %1018,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1020 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1021 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1022 = stablehlo.select %1019, %1020, %1021 : tensor<64x512xi1>, tensor<64x512xf32>
    %1023 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1024 = stablehlo.compare  EQ, %1023, %1018,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1025 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1026 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1027 = stablehlo.select %1024, %1025, %1026 : tensor<64x512xi1>, tensor<64x512xf32>
    %1028 = stablehlo.divide %1022, %1027 : tensor<64x512xf32>
    %1029 = stablehlo.broadcast_in_dim %1009, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1030 = stablehlo.broadcast_in_dim %1018, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1031 = stablehlo.broadcast_in_dim %1029, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1032 = stablehlo.subtract %1003, %1031 : tensor<64x512x768xf32>
    %1033 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1034 = stablehlo.add %1030, %1033 : tensor<64x512x1xf32>
    %1035 = stablehlo.rsqrt %1034 : tensor<64x512x1xf32>
    %1036 = stablehlo.divide %1035, %1034 : tensor<64x512x1xf32>
    %1037 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1038 = stablehlo.multiply %1037, %1036 : tensor<64x512x1xf32>
    %1039 = stablehlo.reshape %arg112 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1040 = stablehlo.broadcast_in_dim %1035, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1041 = stablehlo.broadcast_in_dim %1039, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1042 = stablehlo.multiply %1040, %1041 : tensor<64x512x768xf32>
    %1043 = stablehlo.multiply %1032, %1042 : tensor<64x512x768xf32>
    %1044 = stablehlo.reshape %arg111 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1045 = stablehlo.broadcast_in_dim %1044, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1046 = stablehlo.add %1043, %1045 : tensor<64x512x768xf32>
    %1047 = stablehlo.reshape %arg118 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1048 = stablehlo.dot_general %1046, %1047, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1049 = stablehlo.reshape %arg117 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1050 = stablehlo.broadcast_in_dim %1049, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1051 = stablehlo.broadcast_in_dim %1050, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1052 = stablehlo.broadcast_in_dim %1051, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1053 = stablehlo.add %1048, %1052 : tensor<64x512x12x64xf32>
    %1054 = stablehlo.reshape %arg116 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1055 = stablehlo.dot_general %1046, %1054, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1056 = stablehlo.reshape %arg115 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1057 = stablehlo.broadcast_in_dim %1056, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1058 = stablehlo.broadcast_in_dim %1057, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1059 = stablehlo.broadcast_in_dim %1058, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1060 = stablehlo.add %1055, %1059 : tensor<64x512x12x64xf32>
    %1061 = stablehlo.reshape %arg120 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1062 = stablehlo.dot_general %1046, %1061, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1063 = stablehlo.reshape %arg119 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1064 = stablehlo.broadcast_in_dim %1063, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1065 = stablehlo.broadcast_in_dim %1064, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1066 = stablehlo.broadcast_in_dim %1065, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1067 = stablehlo.add %1062, %1066 : tensor<64x512x12x64xf32>
    %1068 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1069 = stablehlo.compare  GT, %81, %1068,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1070 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1071 = stablehlo.convert %1070 : tensor<64x1x512x512xf32>
    %1072 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1073 = stablehlo.convert %1072 : tensor<64x1x512x512xf32>
    %1074 = stablehlo.select %1069, %1071, %1073 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_70 = stablehlo.constant dense<3175365094> : tensor<ui32>
    %1075 = call @_threefry_fold_in(%arg615, %c_70) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1076 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1077 = stablehlo.convert %1076 : tensor<f32>
    %1078 = stablehlo.broadcast_in_dim %1077, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1079 = stablehlo.divide %1053, %1078 : tensor<64x512x12x64xf32>
    %1080 = stablehlo.dot_general %1079, %1060, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1081 = stablehlo.broadcast_in_dim %1074, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1082 = stablehlo.add %1080, %1081 : tensor<64x12x512x512xf32>
    %cst_71 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1083 = stablehlo.reduce(%1082 init: %cst_71) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1084 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1085 = stablehlo.maximum %1084, %1083 : tensor<64x12x512xf32>
    %1086 = stablehlo.broadcast_in_dim %1085, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1087 = stablehlo.broadcast_in_dim %1086, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1088 = stablehlo.subtract %1082, %1087 : tensor<64x12x512x512xf32>
    %1089 = stablehlo.exponential %1088 : tensor<64x12x512x512xf32>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1090 = stablehlo.reduce(%1089 init: %cst_72) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1091 = stablehlo.broadcast_in_dim %1090, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1092 = stablehlo.broadcast_in_dim %1091, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1093 = stablehlo.divide %1089, %1092 : tensor<64x12x512x512xf32>
    %1094 = stablehlo.multiply %1091, %1091 : tensor<64x12x512x1xf32>
    %cst_73 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1095 = stablehlo.broadcast_in_dim %cst_73, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1096 = stablehlo.divide %1095, %1094 : tensor<64x12x512x1xf32>
    %1097 = call @_bernoulli_71(%1075, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1098 = stablehlo.convert %1097 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1099 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1100 = stablehlo.divide %1098, %1099 : tensor<64x12x512x512xf32>
    %1101 = stablehlo.multiply %1093, %1100 : tensor<64x12x512x512xf32>
    %1102 = stablehlo.dot_general %1067, %1101, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1103 = stablehlo.transpose %1102, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1104 = stablehlo.reshape %arg122 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1105 = stablehlo.dot_general %1103, %1104, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1106 = stablehlo.broadcast_in_dim %arg121, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1107 = stablehlo.broadcast_in_dim %1106, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1108 = stablehlo.broadcast_in_dim %1107, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1109 = stablehlo.add %1105, %1108 : tensor<64x512x768xf32>
    %c_74 = stablehlo.constant dense<1700675584> : tensor<ui32>
    %1110 = call @_threefry_fold_in(%arg615, %c_74) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1111 = call @_bernoulli(%1110, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1112 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1113 = stablehlo.divide %1109, %1112 : tensor<64x512x768xf32>
    %1114 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1115 = stablehlo.select %1111, %1113, %1114 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1116 = stablehlo.add %1115, %1046 : tensor<64x512x768xf32>
    %1117 = stablehlo.multiply %1116, %1116 : tensor<64x512x768xf32>
    %1118 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1119 = stablehlo.multiply %1118, %1116 : tensor<64x512x768xf32>
    %cst_75 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1120 = stablehlo.reduce(%1116 init: %cst_75) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1121 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1122 = stablehlo.divide %1120, %1121 : tensor<64x512xf32>
    %cst_76 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1123 = stablehlo.reduce(%1117 init: %cst_76) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1124 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1125 = stablehlo.divide %1123, %1124 : tensor<64x512xf32>
    %1126 = stablehlo.multiply %1122, %1122 : tensor<64x512xf32>
    %1127 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1128 = stablehlo.multiply %1127, %1122 : tensor<64x512xf32>
    %1129 = stablehlo.subtract %1125, %1126 : tensor<64x512xf32>
    %1130 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1131 = stablehlo.maximum %1130, %1129 : tensor<64x512xf32>
    %1132 = stablehlo.compare  EQ, %1129, %1131,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1133 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1134 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1135 = stablehlo.select %1132, %1133, %1134 : tensor<64x512xi1>, tensor<64x512xf32>
    %1136 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1137 = stablehlo.compare  EQ, %1136, %1131,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1138 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1139 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1140 = stablehlo.select %1137, %1138, %1139 : tensor<64x512xi1>, tensor<64x512xf32>
    %1141 = stablehlo.divide %1135, %1140 : tensor<64x512xf32>
    %1142 = stablehlo.broadcast_in_dim %1122, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1143 = stablehlo.broadcast_in_dim %1131, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1144 = stablehlo.broadcast_in_dim %1142, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1145 = stablehlo.subtract %1116, %1144 : tensor<64x512x768xf32>
    %1146 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1147 = stablehlo.add %1143, %1146 : tensor<64x512x1xf32>
    %1148 = stablehlo.rsqrt %1147 : tensor<64x512x1xf32>
    %1149 = stablehlo.divide %1148, %1147 : tensor<64x512x1xf32>
    %1150 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1151 = stablehlo.multiply %1150, %1149 : tensor<64x512x1xf32>
    %1152 = stablehlo.reshape %arg124 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1153 = stablehlo.broadcast_in_dim %1148, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1154 = stablehlo.broadcast_in_dim %1152, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1155 = stablehlo.multiply %1153, %1154 : tensor<64x512x768xf32>
    %1156 = stablehlo.multiply %1145, %1155 : tensor<64x512x768xf32>
    %1157 = stablehlo.reshape %arg123 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1158 = stablehlo.broadcast_in_dim %1157, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1159 = stablehlo.add %1156, %1158 : tensor<64x512x768xf32>
    %1160 = stablehlo.dot_general %1159, %arg130, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1161 = stablehlo.broadcast_in_dim %arg129, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1162 = stablehlo.broadcast_in_dim %1161, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1163 = stablehlo.broadcast_in_dim %1162, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1164 = stablehlo.add %1160, %1163 : tensor<64x512x3072xf32>
    %1165 = stablehlo.multiply %1164, %1164 : tensor<64x512x3072xf32>
    %1166 = stablehlo.multiply %1165, %1164 : tensor<64x512x3072xf32>
    %1167 = stablehlo.multiply %1164, %1164 : tensor<64x512x3072xf32>
    %1168 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1169 = stablehlo.multiply %1168, %1167 : tensor<64x512x3072xf32>
    %1170 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1171 = stablehlo.multiply %1170, %1166 : tensor<64x512x3072xf32>
    %1172 = stablehlo.add %1164, %1171 : tensor<64x512x3072xf32>
    %1173 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1174 = stablehlo.multiply %1173, %1172 : tensor<64x512x3072xf32>
    %1175 = stablehlo.tanh %1174 : tensor<64x512x3072xf32>
    %1176 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1177 = stablehlo.broadcast_in_dim %1176, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1178 = stablehlo.subtract %1177, %1175 : tensor<64x512x3072xf32>
    %1179 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1180 = stablehlo.add %1179, %1175 : tensor<64x512x3072xf32>
    %1181 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1182 = stablehlo.multiply %1181, %1180 : tensor<64x512x3072xf32>
    %1183 = stablehlo.multiply %1164, %1182 : tensor<64x512x3072xf32>
    %1184 = stablehlo.dot_general %1183, %arg126, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1185 = stablehlo.broadcast_in_dim %arg125, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1186 = stablehlo.broadcast_in_dim %1185, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1187 = stablehlo.broadcast_in_dim %1186, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1188 = stablehlo.add %1184, %1187 : tensor<64x512x768xf32>
    %c_77 = stablehlo.constant dense<1886289568> : tensor<ui32>
    %1189 = call @_threefry_fold_in(%arg615, %c_77) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1190 = call @_bernoulli_112(%1189, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1191 = stablehlo.broadcast_in_dim %1190, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1192 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1193 = stablehlo.divide %1188, %1192 : tensor<64x512x768xf32>
    %1194 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1195 = stablehlo.select %1191, %1193, %1194 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1196 = stablehlo.add %1195, %1159 : tensor<64x512x768xf32>
    %1197 = stablehlo.multiply %1196, %1196 : tensor<64x512x768xf32>
    %1198 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1199 = stablehlo.multiply %1198, %1196 : tensor<64x512x768xf32>
    %cst_78 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1200 = stablehlo.reduce(%1196 init: %cst_78) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1201 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1202 = stablehlo.divide %1200, %1201 : tensor<64x512xf32>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1203 = stablehlo.reduce(%1197 init: %cst_79) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1204 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1205 = stablehlo.divide %1203, %1204 : tensor<64x512xf32>
    %1206 = stablehlo.multiply %1202, %1202 : tensor<64x512xf32>
    %1207 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1208 = stablehlo.multiply %1207, %1202 : tensor<64x512xf32>
    %1209 = stablehlo.subtract %1205, %1206 : tensor<64x512xf32>
    %1210 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1211 = stablehlo.maximum %1210, %1209 : tensor<64x512xf32>
    %1212 = stablehlo.compare  EQ, %1209, %1211,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1213 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1214 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1215 = stablehlo.select %1212, %1213, %1214 : tensor<64x512xi1>, tensor<64x512xf32>
    %1216 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1217 = stablehlo.compare  EQ, %1216, %1211,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1218 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1219 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1220 = stablehlo.select %1217, %1218, %1219 : tensor<64x512xi1>, tensor<64x512xf32>
    %1221 = stablehlo.divide %1215, %1220 : tensor<64x512xf32>
    %1222 = stablehlo.broadcast_in_dim %1202, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1223 = stablehlo.broadcast_in_dim %1211, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1224 = stablehlo.broadcast_in_dim %1222, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1225 = stablehlo.subtract %1196, %1224 : tensor<64x512x768xf32>
    %1226 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1227 = stablehlo.add %1223, %1226 : tensor<64x512x1xf32>
    %1228 = stablehlo.rsqrt %1227 : tensor<64x512x1xf32>
    %1229 = stablehlo.divide %1228, %1227 : tensor<64x512x1xf32>
    %1230 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1231 = stablehlo.multiply %1230, %1229 : tensor<64x512x1xf32>
    %1232 = stablehlo.reshape %arg128 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1233 = stablehlo.broadcast_in_dim %1228, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1234 = stablehlo.broadcast_in_dim %1232, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1235 = stablehlo.multiply %1233, %1234 : tensor<64x512x768xf32>
    %1236 = stablehlo.multiply %1225, %1235 : tensor<64x512x768xf32>
    %1237 = stablehlo.reshape %arg127 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1238 = stablehlo.broadcast_in_dim %1237, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1239 = stablehlo.add %1236, %1238 : tensor<64x512x768xf32>
    %1240 = stablehlo.reshape %arg134 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1241 = stablehlo.dot_general %1239, %1240, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1242 = stablehlo.reshape %arg133 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1243 = stablehlo.broadcast_in_dim %1242, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1244 = stablehlo.broadcast_in_dim %1243, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1245 = stablehlo.broadcast_in_dim %1244, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1246 = stablehlo.add %1241, %1245 : tensor<64x512x12x64xf32>
    %1247 = stablehlo.reshape %arg132 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1248 = stablehlo.dot_general %1239, %1247, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1249 = stablehlo.reshape %arg131 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1250 = stablehlo.broadcast_in_dim %1249, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1251 = stablehlo.broadcast_in_dim %1250, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1252 = stablehlo.broadcast_in_dim %1251, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1253 = stablehlo.add %1248, %1252 : tensor<64x512x12x64xf32>
    %1254 = stablehlo.reshape %arg136 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1255 = stablehlo.dot_general %1239, %1254, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1256 = stablehlo.reshape %arg135 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1257 = stablehlo.broadcast_in_dim %1256, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1258 = stablehlo.broadcast_in_dim %1257, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1259 = stablehlo.broadcast_in_dim %1258, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1260 = stablehlo.add %1255, %1259 : tensor<64x512x12x64xf32>
    %1261 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1262 = stablehlo.compare  GT, %81, %1261,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1263 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1264 = stablehlo.convert %1263 : tensor<64x1x512x512xf32>
    %1265 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1266 = stablehlo.convert %1265 : tensor<64x1x512x512xf32>
    %1267 = stablehlo.select %1262, %1264, %1266 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_80 = stablehlo.constant dense<837809314> : tensor<ui32>
    %1268 = call @_threefry_fold_in(%arg615, %c_80) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1269 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1270 = stablehlo.convert %1269 : tensor<f32>
    %1271 = stablehlo.broadcast_in_dim %1270, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1272 = stablehlo.divide %1246, %1271 : tensor<64x512x12x64xf32>
    %1273 = stablehlo.dot_general %1272, %1253, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1274 = stablehlo.broadcast_in_dim %1267, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1275 = stablehlo.add %1273, %1274 : tensor<64x12x512x512xf32>
    %cst_81 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1276 = stablehlo.reduce(%1275 init: %cst_81) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1277 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1278 = stablehlo.maximum %1277, %1276 : tensor<64x12x512xf32>
    %1279 = stablehlo.broadcast_in_dim %1278, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1280 = stablehlo.broadcast_in_dim %1279, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1281 = stablehlo.subtract %1275, %1280 : tensor<64x12x512x512xf32>
    %1282 = stablehlo.exponential %1281 : tensor<64x12x512x512xf32>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1283 = stablehlo.reduce(%1282 init: %cst_82) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1284 = stablehlo.broadcast_in_dim %1283, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1285 = stablehlo.broadcast_in_dim %1284, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1286 = stablehlo.divide %1282, %1285 : tensor<64x12x512x512xf32>
    %1287 = stablehlo.multiply %1284, %1284 : tensor<64x12x512x1xf32>
    %cst_83 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1288 = stablehlo.broadcast_in_dim %cst_83, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1289 = stablehlo.divide %1288, %1287 : tensor<64x12x512x1xf32>
    %1290 = call @_bernoulli_71(%1268, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1291 = stablehlo.convert %1290 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1292 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1293 = stablehlo.divide %1291, %1292 : tensor<64x12x512x512xf32>
    %1294 = stablehlo.multiply %1286, %1293 : tensor<64x12x512x512xf32>
    %1295 = stablehlo.dot_general %1260, %1294, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1296 = stablehlo.transpose %1295, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1297 = stablehlo.reshape %arg138 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1298 = stablehlo.dot_general %1296, %1297, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1299 = stablehlo.broadcast_in_dim %arg137, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1300 = stablehlo.broadcast_in_dim %1299, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1301 = stablehlo.broadcast_in_dim %1300, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1302 = stablehlo.add %1298, %1301 : tensor<64x512x768xf32>
    %c_84 = stablehlo.constant dense<3738706114> : tensor<ui32>
    %1303 = call @_threefry_fold_in(%arg615, %c_84) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1304 = call @_bernoulli(%1303, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1305 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1306 = stablehlo.divide %1302, %1305 : tensor<64x512x768xf32>
    %1307 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1308 = stablehlo.select %1304, %1306, %1307 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1309 = stablehlo.add %1308, %1239 : tensor<64x512x768xf32>
    %1310 = stablehlo.multiply %1309, %1309 : tensor<64x512x768xf32>
    %1311 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1312 = stablehlo.multiply %1311, %1309 : tensor<64x512x768xf32>
    %cst_85 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1313 = stablehlo.reduce(%1309 init: %cst_85) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1314 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1315 = stablehlo.divide %1313, %1314 : tensor<64x512xf32>
    %cst_86 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1316 = stablehlo.reduce(%1310 init: %cst_86) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1317 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1318 = stablehlo.divide %1316, %1317 : tensor<64x512xf32>
    %1319 = stablehlo.multiply %1315, %1315 : tensor<64x512xf32>
    %1320 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1321 = stablehlo.multiply %1320, %1315 : tensor<64x512xf32>
    %1322 = stablehlo.subtract %1318, %1319 : tensor<64x512xf32>
    %1323 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1324 = stablehlo.maximum %1323, %1322 : tensor<64x512xf32>
    %1325 = stablehlo.compare  EQ, %1322, %1324,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1326 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1327 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1328 = stablehlo.select %1325, %1326, %1327 : tensor<64x512xi1>, tensor<64x512xf32>
    %1329 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1330 = stablehlo.compare  EQ, %1329, %1324,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1331 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1332 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1333 = stablehlo.select %1330, %1331, %1332 : tensor<64x512xi1>, tensor<64x512xf32>
    %1334 = stablehlo.divide %1328, %1333 : tensor<64x512xf32>
    %1335 = stablehlo.broadcast_in_dim %1315, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1336 = stablehlo.broadcast_in_dim %1324, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1337 = stablehlo.broadcast_in_dim %1335, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1338 = stablehlo.subtract %1309, %1337 : tensor<64x512x768xf32>
    %1339 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1340 = stablehlo.add %1336, %1339 : tensor<64x512x1xf32>
    %1341 = stablehlo.rsqrt %1340 : tensor<64x512x1xf32>
    %1342 = stablehlo.divide %1341, %1340 : tensor<64x512x1xf32>
    %1343 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1344 = stablehlo.multiply %1343, %1342 : tensor<64x512x1xf32>
    %1345 = stablehlo.reshape %arg140 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1346 = stablehlo.broadcast_in_dim %1341, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1347 = stablehlo.broadcast_in_dim %1345, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1348 = stablehlo.multiply %1346, %1347 : tensor<64x512x768xf32>
    %1349 = stablehlo.multiply %1338, %1348 : tensor<64x512x768xf32>
    %1350 = stablehlo.reshape %arg139 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1351 = stablehlo.broadcast_in_dim %1350, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1352 = stablehlo.add %1349, %1351 : tensor<64x512x768xf32>
    %1353 = stablehlo.dot_general %1352, %arg146, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1354 = stablehlo.broadcast_in_dim %arg145, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1355 = stablehlo.broadcast_in_dim %1354, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1356 = stablehlo.broadcast_in_dim %1355, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1357 = stablehlo.add %1353, %1356 : tensor<64x512x3072xf32>
    %1358 = stablehlo.multiply %1357, %1357 : tensor<64x512x3072xf32>
    %1359 = stablehlo.multiply %1358, %1357 : tensor<64x512x3072xf32>
    %1360 = stablehlo.multiply %1357, %1357 : tensor<64x512x3072xf32>
    %1361 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1362 = stablehlo.multiply %1361, %1360 : tensor<64x512x3072xf32>
    %1363 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1364 = stablehlo.multiply %1363, %1359 : tensor<64x512x3072xf32>
    %1365 = stablehlo.add %1357, %1364 : tensor<64x512x3072xf32>
    %1366 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1367 = stablehlo.multiply %1366, %1365 : tensor<64x512x3072xf32>
    %1368 = stablehlo.tanh %1367 : tensor<64x512x3072xf32>
    %1369 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1370 = stablehlo.broadcast_in_dim %1369, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1371 = stablehlo.subtract %1370, %1368 : tensor<64x512x3072xf32>
    %1372 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1373 = stablehlo.add %1372, %1368 : tensor<64x512x3072xf32>
    %1374 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1375 = stablehlo.multiply %1374, %1373 : tensor<64x512x3072xf32>
    %1376 = stablehlo.multiply %1357, %1375 : tensor<64x512x3072xf32>
    %1377 = stablehlo.dot_general %1376, %arg142, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1378 = stablehlo.broadcast_in_dim %arg141, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1379 = stablehlo.broadcast_in_dim %1378, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1380 = stablehlo.broadcast_in_dim %1379, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1381 = stablehlo.add %1377, %1380 : tensor<64x512x768xf32>
    %c_87 = stablehlo.constant dense<114600768> : tensor<ui32>
    %1382 = call @_threefry_fold_in(%arg615, %c_87) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1383 = call @_bernoulli_112(%1382, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1384 = stablehlo.broadcast_in_dim %1383, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1385 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1386 = stablehlo.divide %1381, %1385 : tensor<64x512x768xf32>
    %1387 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1388 = stablehlo.select %1384, %1386, %1387 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1389 = stablehlo.add %1388, %1352 : tensor<64x512x768xf32>
    %1390 = stablehlo.multiply %1389, %1389 : tensor<64x512x768xf32>
    %1391 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1392 = stablehlo.multiply %1391, %1389 : tensor<64x512x768xf32>
    %cst_88 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1393 = stablehlo.reduce(%1389 init: %cst_88) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1394 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1395 = stablehlo.divide %1393, %1394 : tensor<64x512xf32>
    %cst_89 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1396 = stablehlo.reduce(%1390 init: %cst_89) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1397 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1398 = stablehlo.divide %1396, %1397 : tensor<64x512xf32>
    %1399 = stablehlo.multiply %1395, %1395 : tensor<64x512xf32>
    %1400 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1401 = stablehlo.multiply %1400, %1395 : tensor<64x512xf32>
    %1402 = stablehlo.subtract %1398, %1399 : tensor<64x512xf32>
    %1403 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1404 = stablehlo.maximum %1403, %1402 : tensor<64x512xf32>
    %1405 = stablehlo.compare  EQ, %1402, %1404,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1406 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1407 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1408 = stablehlo.select %1405, %1406, %1407 : tensor<64x512xi1>, tensor<64x512xf32>
    %1409 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1410 = stablehlo.compare  EQ, %1409, %1404,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1411 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1412 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1413 = stablehlo.select %1410, %1411, %1412 : tensor<64x512xi1>, tensor<64x512xf32>
    %1414 = stablehlo.divide %1408, %1413 : tensor<64x512xf32>
    %1415 = stablehlo.broadcast_in_dim %1395, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1416 = stablehlo.broadcast_in_dim %1404, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1417 = stablehlo.broadcast_in_dim %1415, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1418 = stablehlo.subtract %1389, %1417 : tensor<64x512x768xf32>
    %1419 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1420 = stablehlo.add %1416, %1419 : tensor<64x512x1xf32>
    %1421 = stablehlo.rsqrt %1420 : tensor<64x512x1xf32>
    %1422 = stablehlo.divide %1421, %1420 : tensor<64x512x1xf32>
    %1423 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1424 = stablehlo.multiply %1423, %1422 : tensor<64x512x1xf32>
    %1425 = stablehlo.reshape %arg144 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1426 = stablehlo.broadcast_in_dim %1421, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1427 = stablehlo.broadcast_in_dim %1425, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1428 = stablehlo.multiply %1426, %1427 : tensor<64x512x768xf32>
    %1429 = stablehlo.multiply %1418, %1428 : tensor<64x512x768xf32>
    %1430 = stablehlo.reshape %arg143 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1431 = stablehlo.broadcast_in_dim %1430, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1432 = stablehlo.add %1429, %1431 : tensor<64x512x768xf32>
    %1433 = stablehlo.reshape %arg150 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1434 = stablehlo.dot_general %1432, %1433, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1435 = stablehlo.reshape %arg149 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1436 = stablehlo.broadcast_in_dim %1435, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1437 = stablehlo.broadcast_in_dim %1436, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1438 = stablehlo.broadcast_in_dim %1437, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1439 = stablehlo.add %1434, %1438 : tensor<64x512x12x64xf32>
    %1440 = stablehlo.reshape %arg148 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1441 = stablehlo.dot_general %1432, %1440, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1442 = stablehlo.reshape %arg147 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1443 = stablehlo.broadcast_in_dim %1442, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1444 = stablehlo.broadcast_in_dim %1443, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1445 = stablehlo.broadcast_in_dim %1444, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1446 = stablehlo.add %1441, %1445 : tensor<64x512x12x64xf32>
    %1447 = stablehlo.reshape %arg152 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1448 = stablehlo.dot_general %1432, %1447, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1449 = stablehlo.reshape %arg151 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1450 = stablehlo.broadcast_in_dim %1449, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1451 = stablehlo.broadcast_in_dim %1450, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1452 = stablehlo.broadcast_in_dim %1451, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1453 = stablehlo.add %1448, %1452 : tensor<64x512x12x64xf32>
    %1454 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1455 = stablehlo.compare  GT, %81, %1454,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1456 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1457 = stablehlo.convert %1456 : tensor<64x1x512x512xf32>
    %1458 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1459 = stablehlo.convert %1458 : tensor<64x1x512x512xf32>
    %1460 = stablehlo.select %1455, %1457, %1459 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_90 = stablehlo.constant dense<2020620089> : tensor<ui32>
    %1461 = call @_threefry_fold_in(%arg615, %c_90) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1462 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1463 = stablehlo.convert %1462 : tensor<f32>
    %1464 = stablehlo.broadcast_in_dim %1463, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1465 = stablehlo.divide %1439, %1464 : tensor<64x512x12x64xf32>
    %1466 = stablehlo.dot_general %1465, %1446, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1467 = stablehlo.broadcast_in_dim %1460, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1468 = stablehlo.add %1466, %1467 : tensor<64x12x512x512xf32>
    %cst_91 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1469 = stablehlo.reduce(%1468 init: %cst_91) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1470 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1471 = stablehlo.maximum %1470, %1469 : tensor<64x12x512xf32>
    %1472 = stablehlo.broadcast_in_dim %1471, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1473 = stablehlo.broadcast_in_dim %1472, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1474 = stablehlo.subtract %1468, %1473 : tensor<64x12x512x512xf32>
    %1475 = stablehlo.exponential %1474 : tensor<64x12x512x512xf32>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1476 = stablehlo.reduce(%1475 init: %cst_92) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1477 = stablehlo.broadcast_in_dim %1476, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1478 = stablehlo.broadcast_in_dim %1477, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1479 = stablehlo.divide %1475, %1478 : tensor<64x12x512x512xf32>
    %1480 = stablehlo.multiply %1477, %1477 : tensor<64x12x512x1xf32>
    %cst_93 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1481 = stablehlo.broadcast_in_dim %cst_93, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1482 = stablehlo.divide %1481, %1480 : tensor<64x12x512x1xf32>
    %1483 = call @_bernoulli_71(%1461, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1484 = stablehlo.convert %1483 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1485 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1486 = stablehlo.divide %1484, %1485 : tensor<64x12x512x512xf32>
    %1487 = stablehlo.multiply %1479, %1486 : tensor<64x12x512x512xf32>
    %1488 = stablehlo.dot_general %1453, %1487, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1489 = stablehlo.transpose %1488, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1490 = stablehlo.reshape %arg154 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1491 = stablehlo.dot_general %1489, %1490, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1492 = stablehlo.broadcast_in_dim %arg153, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1493 = stablehlo.broadcast_in_dim %1492, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1494 = stablehlo.broadcast_in_dim %1493, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1495 = stablehlo.add %1491, %1494 : tensor<64x512x768xf32>
    %c_94 = stablehlo.constant dense<3357787579> : tensor<ui32>
    %1496 = call @_threefry_fold_in(%arg615, %c_94) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1497 = call @_bernoulli(%1496, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1498 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1499 = stablehlo.divide %1495, %1498 : tensor<64x512x768xf32>
    %1500 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1501 = stablehlo.select %1497, %1499, %1500 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1502 = stablehlo.add %1501, %1432 : tensor<64x512x768xf32>
    %1503 = stablehlo.multiply %1502, %1502 : tensor<64x512x768xf32>
    %1504 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1505 = stablehlo.multiply %1504, %1502 : tensor<64x512x768xf32>
    %cst_95 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1506 = stablehlo.reduce(%1502 init: %cst_95) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1507 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1508 = stablehlo.divide %1506, %1507 : tensor<64x512xf32>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1509 = stablehlo.reduce(%1503 init: %cst_96) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1510 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1511 = stablehlo.divide %1509, %1510 : tensor<64x512xf32>
    %1512 = stablehlo.multiply %1508, %1508 : tensor<64x512xf32>
    %1513 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1514 = stablehlo.multiply %1513, %1508 : tensor<64x512xf32>
    %1515 = stablehlo.subtract %1511, %1512 : tensor<64x512xf32>
    %1516 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1517 = stablehlo.maximum %1516, %1515 : tensor<64x512xf32>
    %1518 = stablehlo.compare  EQ, %1515, %1517,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1519 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1520 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1521 = stablehlo.select %1518, %1519, %1520 : tensor<64x512xi1>, tensor<64x512xf32>
    %1522 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1523 = stablehlo.compare  EQ, %1522, %1517,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1524 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1525 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1526 = stablehlo.select %1523, %1524, %1525 : tensor<64x512xi1>, tensor<64x512xf32>
    %1527 = stablehlo.divide %1521, %1526 : tensor<64x512xf32>
    %1528 = stablehlo.broadcast_in_dim %1508, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1529 = stablehlo.broadcast_in_dim %1517, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1530 = stablehlo.broadcast_in_dim %1528, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1531 = stablehlo.subtract %1502, %1530 : tensor<64x512x768xf32>
    %1532 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1533 = stablehlo.add %1529, %1532 : tensor<64x512x1xf32>
    %1534 = stablehlo.rsqrt %1533 : tensor<64x512x1xf32>
    %1535 = stablehlo.divide %1534, %1533 : tensor<64x512x1xf32>
    %1536 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1537 = stablehlo.multiply %1536, %1535 : tensor<64x512x1xf32>
    %1538 = stablehlo.reshape %arg156 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1539 = stablehlo.broadcast_in_dim %1534, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1540 = stablehlo.broadcast_in_dim %1538, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1541 = stablehlo.multiply %1539, %1540 : tensor<64x512x768xf32>
    %1542 = stablehlo.multiply %1531, %1541 : tensor<64x512x768xf32>
    %1543 = stablehlo.reshape %arg155 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1544 = stablehlo.broadcast_in_dim %1543, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1545 = stablehlo.add %1542, %1544 : tensor<64x512x768xf32>
    %1546 = stablehlo.dot_general %1545, %arg162, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1547 = stablehlo.broadcast_in_dim %arg161, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1548 = stablehlo.broadcast_in_dim %1547, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1549 = stablehlo.broadcast_in_dim %1548, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1550 = stablehlo.add %1546, %1549 : tensor<64x512x3072xf32>
    %1551 = stablehlo.multiply %1550, %1550 : tensor<64x512x3072xf32>
    %1552 = stablehlo.multiply %1551, %1550 : tensor<64x512x3072xf32>
    %1553 = stablehlo.multiply %1550, %1550 : tensor<64x512x3072xf32>
    %1554 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1555 = stablehlo.multiply %1554, %1553 : tensor<64x512x3072xf32>
    %1556 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1557 = stablehlo.multiply %1556, %1552 : tensor<64x512x3072xf32>
    %1558 = stablehlo.add %1550, %1557 : tensor<64x512x3072xf32>
    %1559 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1560 = stablehlo.multiply %1559, %1558 : tensor<64x512x3072xf32>
    %1561 = stablehlo.tanh %1560 : tensor<64x512x3072xf32>
    %1562 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1563 = stablehlo.broadcast_in_dim %1562, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1564 = stablehlo.subtract %1563, %1561 : tensor<64x512x3072xf32>
    %1565 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1566 = stablehlo.add %1565, %1561 : tensor<64x512x3072xf32>
    %1567 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1568 = stablehlo.multiply %1567, %1566 : tensor<64x512x3072xf32>
    %1569 = stablehlo.multiply %1550, %1568 : tensor<64x512x3072xf32>
    %1570 = stablehlo.dot_general %1569, %arg158, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1571 = stablehlo.broadcast_in_dim %arg157, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1572 = stablehlo.broadcast_in_dim %1571, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1573 = stablehlo.broadcast_in_dim %1572, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1574 = stablehlo.add %1570, %1573 : tensor<64x512x768xf32>
    %c_97 = stablehlo.constant dense<136902650> : tensor<ui32>
    %1575 = call @_threefry_fold_in(%arg615, %c_97) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1576 = call @_bernoulli_112(%1575, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1577 = stablehlo.broadcast_in_dim %1576, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1578 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1579 = stablehlo.divide %1574, %1578 : tensor<64x512x768xf32>
    %1580 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1581 = stablehlo.select %1577, %1579, %1580 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1582 = stablehlo.add %1581, %1545 : tensor<64x512x768xf32>
    %1583 = stablehlo.multiply %1582, %1582 : tensor<64x512x768xf32>
    %1584 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1585 = stablehlo.multiply %1584, %1582 : tensor<64x512x768xf32>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1586 = stablehlo.reduce(%1582 init: %cst_98) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1587 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1588 = stablehlo.divide %1586, %1587 : tensor<64x512xf32>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1589 = stablehlo.reduce(%1583 init: %cst_99) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1590 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1591 = stablehlo.divide %1589, %1590 : tensor<64x512xf32>
    %1592 = stablehlo.multiply %1588, %1588 : tensor<64x512xf32>
    %1593 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1594 = stablehlo.multiply %1593, %1588 : tensor<64x512xf32>
    %1595 = stablehlo.subtract %1591, %1592 : tensor<64x512xf32>
    %1596 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1597 = stablehlo.maximum %1596, %1595 : tensor<64x512xf32>
    %1598 = stablehlo.compare  EQ, %1595, %1597,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1599 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1600 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1601 = stablehlo.select %1598, %1599, %1600 : tensor<64x512xi1>, tensor<64x512xf32>
    %1602 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1603 = stablehlo.compare  EQ, %1602, %1597,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1604 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1605 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1606 = stablehlo.select %1603, %1604, %1605 : tensor<64x512xi1>, tensor<64x512xf32>
    %1607 = stablehlo.divide %1601, %1606 : tensor<64x512xf32>
    %1608 = stablehlo.broadcast_in_dim %1588, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1609 = stablehlo.broadcast_in_dim %1597, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1610 = stablehlo.broadcast_in_dim %1608, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1611 = stablehlo.subtract %1582, %1610 : tensor<64x512x768xf32>
    %1612 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1613 = stablehlo.add %1609, %1612 : tensor<64x512x1xf32>
    %1614 = stablehlo.rsqrt %1613 : tensor<64x512x1xf32>
    %1615 = stablehlo.divide %1614, %1613 : tensor<64x512x1xf32>
    %1616 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1617 = stablehlo.multiply %1616, %1615 : tensor<64x512x1xf32>
    %1618 = stablehlo.reshape %arg160 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1619 = stablehlo.broadcast_in_dim %1614, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1620 = stablehlo.broadcast_in_dim %1618, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1621 = stablehlo.multiply %1619, %1620 : tensor<64x512x768xf32>
    %1622 = stablehlo.multiply %1611, %1621 : tensor<64x512x768xf32>
    %1623 = stablehlo.reshape %arg159 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1624 = stablehlo.broadcast_in_dim %1623, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1625 = stablehlo.add %1622, %1624 : tensor<64x512x768xf32>
    %1626 = stablehlo.reshape %arg166 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1627 = stablehlo.dot_general %1625, %1626, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1628 = stablehlo.reshape %arg165 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1629 = stablehlo.broadcast_in_dim %1628, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1630 = stablehlo.broadcast_in_dim %1629, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1631 = stablehlo.broadcast_in_dim %1630, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1632 = stablehlo.add %1627, %1631 : tensor<64x512x12x64xf32>
    %1633 = stablehlo.reshape %arg164 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1634 = stablehlo.dot_general %1625, %1633, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1635 = stablehlo.reshape %arg163 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1636 = stablehlo.broadcast_in_dim %1635, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1637 = stablehlo.broadcast_in_dim %1636, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1638 = stablehlo.broadcast_in_dim %1637, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1639 = stablehlo.add %1634, %1638 : tensor<64x512x12x64xf32>
    %1640 = stablehlo.reshape %arg168 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1641 = stablehlo.dot_general %1625, %1640, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1642 = stablehlo.reshape %arg167 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1643 = stablehlo.broadcast_in_dim %1642, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1644 = stablehlo.broadcast_in_dim %1643, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1645 = stablehlo.broadcast_in_dim %1644, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1646 = stablehlo.add %1641, %1645 : tensor<64x512x12x64xf32>
    %1647 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1648 = stablehlo.compare  GT, %81, %1647,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1649 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1650 = stablehlo.convert %1649 : tensor<64x1x512x512xf32>
    %1651 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1652 = stablehlo.convert %1651 : tensor<64x1x512x512xf32>
    %1653 = stablehlo.select %1648, %1650, %1652 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_100 = stablehlo.constant dense<2878700954> : tensor<ui32>
    %1654 = call @_threefry_fold_in(%arg615, %c_100) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1655 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1656 = stablehlo.convert %1655 : tensor<f32>
    %1657 = stablehlo.broadcast_in_dim %1656, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1658 = stablehlo.divide %1632, %1657 : tensor<64x512x12x64xf32>
    %1659 = stablehlo.dot_general %1658, %1639, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1660 = stablehlo.broadcast_in_dim %1653, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1661 = stablehlo.add %1659, %1660 : tensor<64x12x512x512xf32>
    %cst_101 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1662 = stablehlo.reduce(%1661 init: %cst_101) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1663 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1664 = stablehlo.maximum %1663, %1662 : tensor<64x12x512xf32>
    %1665 = stablehlo.broadcast_in_dim %1664, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1666 = stablehlo.broadcast_in_dim %1665, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1667 = stablehlo.subtract %1661, %1666 : tensor<64x12x512x512xf32>
    %1668 = stablehlo.exponential %1667 : tensor<64x12x512x512xf32>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1669 = stablehlo.reduce(%1668 init: %cst_102) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1670 = stablehlo.broadcast_in_dim %1669, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1671 = stablehlo.broadcast_in_dim %1670, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1672 = stablehlo.divide %1668, %1671 : tensor<64x12x512x512xf32>
    %1673 = stablehlo.multiply %1670, %1670 : tensor<64x12x512x1xf32>
    %cst_103 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1674 = stablehlo.broadcast_in_dim %cst_103, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1675 = stablehlo.divide %1674, %1673 : tensor<64x12x512x1xf32>
    %1676 = call @_bernoulli_71(%1654, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1677 = stablehlo.convert %1676 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1678 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1679 = stablehlo.divide %1677, %1678 : tensor<64x12x512x512xf32>
    %1680 = stablehlo.multiply %1672, %1679 : tensor<64x12x512x512xf32>
    %1681 = stablehlo.dot_general %1646, %1680, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1682 = stablehlo.transpose %1681, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1683 = stablehlo.reshape %arg170 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1684 = stablehlo.dot_general %1682, %1683, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1685 = stablehlo.broadcast_in_dim %arg169, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1686 = stablehlo.broadcast_in_dim %1685, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1687 = stablehlo.broadcast_in_dim %1686, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1688 = stablehlo.add %1684, %1687 : tensor<64x512x768xf32>
    %c_104 = stablehlo.constant dense<3607288244> : tensor<ui32>
    %1689 = call @_threefry_fold_in(%arg615, %c_104) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1690 = call @_bernoulli(%1689, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1691 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1692 = stablehlo.divide %1688, %1691 : tensor<64x512x768xf32>
    %1693 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1694 = stablehlo.select %1690, %1692, %1693 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1695 = stablehlo.add %1694, %1625 : tensor<64x512x768xf32>
    %1696 = stablehlo.multiply %1695, %1695 : tensor<64x512x768xf32>
    %1697 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1698 = stablehlo.multiply %1697, %1695 : tensor<64x512x768xf32>
    %cst_105 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1699 = stablehlo.reduce(%1695 init: %cst_105) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1700 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1701 = stablehlo.divide %1699, %1700 : tensor<64x512xf32>
    %cst_106 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1702 = stablehlo.reduce(%1696 init: %cst_106) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1703 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1704 = stablehlo.divide %1702, %1703 : tensor<64x512xf32>
    %1705 = stablehlo.multiply %1701, %1701 : tensor<64x512xf32>
    %1706 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1707 = stablehlo.multiply %1706, %1701 : tensor<64x512xf32>
    %1708 = stablehlo.subtract %1704, %1705 : tensor<64x512xf32>
    %1709 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1710 = stablehlo.maximum %1709, %1708 : tensor<64x512xf32>
    %1711 = stablehlo.compare  EQ, %1708, %1710,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1712 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1713 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1714 = stablehlo.select %1711, %1712, %1713 : tensor<64x512xi1>, tensor<64x512xf32>
    %1715 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1716 = stablehlo.compare  EQ, %1715, %1710,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1717 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1718 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1719 = stablehlo.select %1716, %1717, %1718 : tensor<64x512xi1>, tensor<64x512xf32>
    %1720 = stablehlo.divide %1714, %1719 : tensor<64x512xf32>
    %1721 = stablehlo.broadcast_in_dim %1701, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1722 = stablehlo.broadcast_in_dim %1710, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1723 = stablehlo.broadcast_in_dim %1721, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1724 = stablehlo.subtract %1695, %1723 : tensor<64x512x768xf32>
    %1725 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1726 = stablehlo.add %1722, %1725 : tensor<64x512x1xf32>
    %1727 = stablehlo.rsqrt %1726 : tensor<64x512x1xf32>
    %1728 = stablehlo.divide %1727, %1726 : tensor<64x512x1xf32>
    %1729 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1730 = stablehlo.multiply %1729, %1728 : tensor<64x512x1xf32>
    %1731 = stablehlo.reshape %arg172 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1732 = stablehlo.broadcast_in_dim %1727, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1733 = stablehlo.broadcast_in_dim %1731, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1734 = stablehlo.multiply %1732, %1733 : tensor<64x512x768xf32>
    %1735 = stablehlo.multiply %1724, %1734 : tensor<64x512x768xf32>
    %1736 = stablehlo.reshape %arg171 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1737 = stablehlo.broadcast_in_dim %1736, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1738 = stablehlo.add %1735, %1737 : tensor<64x512x768xf32>
    %1739 = stablehlo.dot_general %1738, %arg178, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1740 = stablehlo.broadcast_in_dim %arg177, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1741 = stablehlo.broadcast_in_dim %1740, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1742 = stablehlo.broadcast_in_dim %1741, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1743 = stablehlo.add %1739, %1742 : tensor<64x512x3072xf32>
    %1744 = stablehlo.multiply %1743, %1743 : tensor<64x512x3072xf32>
    %1745 = stablehlo.multiply %1744, %1743 : tensor<64x512x3072xf32>
    %1746 = stablehlo.multiply %1743, %1743 : tensor<64x512x3072xf32>
    %1747 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1748 = stablehlo.multiply %1747, %1746 : tensor<64x512x3072xf32>
    %1749 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1750 = stablehlo.multiply %1749, %1745 : tensor<64x512x3072xf32>
    %1751 = stablehlo.add %1743, %1750 : tensor<64x512x3072xf32>
    %1752 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1753 = stablehlo.multiply %1752, %1751 : tensor<64x512x3072xf32>
    %1754 = stablehlo.tanh %1753 : tensor<64x512x3072xf32>
    %1755 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1756 = stablehlo.broadcast_in_dim %1755, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1757 = stablehlo.subtract %1756, %1754 : tensor<64x512x3072xf32>
    %1758 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1759 = stablehlo.add %1758, %1754 : tensor<64x512x3072xf32>
    %1760 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1761 = stablehlo.multiply %1760, %1759 : tensor<64x512x3072xf32>
    %1762 = stablehlo.multiply %1743, %1761 : tensor<64x512x3072xf32>
    %1763 = stablehlo.dot_general %1762, %arg174, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1764 = stablehlo.broadcast_in_dim %arg173, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1765 = stablehlo.broadcast_in_dim %1764, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1766 = stablehlo.broadcast_in_dim %1765, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1767 = stablehlo.add %1763, %1766 : tensor<64x512x768xf32>
    %c_107 = stablehlo.constant dense<1709333009> : tensor<ui32>
    %1768 = call @_threefry_fold_in(%arg615, %c_107) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1769 = call @_bernoulli_112(%1768, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1770 = stablehlo.broadcast_in_dim %1769, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1771 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1772 = stablehlo.divide %1767, %1771 : tensor<64x512x768xf32>
    %1773 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1774 = stablehlo.select %1770, %1772, %1773 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1775 = stablehlo.add %1774, %1738 : tensor<64x512x768xf32>
    %1776 = stablehlo.multiply %1775, %1775 : tensor<64x512x768xf32>
    %1777 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1778 = stablehlo.multiply %1777, %1775 : tensor<64x512x768xf32>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1779 = stablehlo.reduce(%1775 init: %cst_108) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1780 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1781 = stablehlo.divide %1779, %1780 : tensor<64x512xf32>
    %cst_109 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1782 = stablehlo.reduce(%1776 init: %cst_109) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1783 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1784 = stablehlo.divide %1782, %1783 : tensor<64x512xf32>
    %1785 = stablehlo.multiply %1781, %1781 : tensor<64x512xf32>
    %1786 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1787 = stablehlo.multiply %1786, %1781 : tensor<64x512xf32>
    %1788 = stablehlo.subtract %1784, %1785 : tensor<64x512xf32>
    %1789 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1790 = stablehlo.maximum %1789, %1788 : tensor<64x512xf32>
    %1791 = stablehlo.compare  EQ, %1788, %1790,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1792 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1794 = stablehlo.select %1791, %1792, %1793 : tensor<64x512xi1>, tensor<64x512xf32>
    %1795 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1796 = stablehlo.compare  EQ, %1795, %1790,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1797 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1798 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1799 = stablehlo.select %1796, %1797, %1798 : tensor<64x512xi1>, tensor<64x512xf32>
    %1800 = stablehlo.divide %1794, %1799 : tensor<64x512xf32>
    %1801 = stablehlo.broadcast_in_dim %1781, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1802 = stablehlo.broadcast_in_dim %1790, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1803 = stablehlo.broadcast_in_dim %1801, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1804 = stablehlo.subtract %1775, %1803 : tensor<64x512x768xf32>
    %1805 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1806 = stablehlo.add %1802, %1805 : tensor<64x512x1xf32>
    %1807 = stablehlo.rsqrt %1806 : tensor<64x512x1xf32>
    %1808 = stablehlo.divide %1807, %1806 : tensor<64x512x1xf32>
    %1809 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1810 = stablehlo.multiply %1809, %1808 : tensor<64x512x1xf32>
    %1811 = stablehlo.reshape %arg176 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1812 = stablehlo.broadcast_in_dim %1807, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1813 = stablehlo.broadcast_in_dim %1811, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1814 = stablehlo.multiply %1812, %1813 : tensor<64x512x768xf32>
    %1815 = stablehlo.multiply %1804, %1814 : tensor<64x512x768xf32>
    %1816 = stablehlo.reshape %arg175 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1817 = stablehlo.broadcast_in_dim %1816, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1818 = stablehlo.add %1815, %1817 : tensor<64x512x768xf32>
    %1819 = stablehlo.reshape %arg182 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1820 = stablehlo.dot_general %1818, %1819, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1821 = stablehlo.reshape %arg181 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1822 = stablehlo.broadcast_in_dim %1821, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1823 = stablehlo.broadcast_in_dim %1822, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1824 = stablehlo.broadcast_in_dim %1823, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1825 = stablehlo.add %1820, %1824 : tensor<64x512x12x64xf32>
    %1826 = stablehlo.reshape %arg180 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1827 = stablehlo.dot_general %1818, %1826, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1828 = stablehlo.reshape %arg179 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1829 = stablehlo.broadcast_in_dim %1828, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1830 = stablehlo.broadcast_in_dim %1829, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1831 = stablehlo.broadcast_in_dim %1830, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1832 = stablehlo.add %1827, %1831 : tensor<64x512x12x64xf32>
    %1833 = stablehlo.reshape %arg184 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1834 = stablehlo.dot_general %1818, %1833, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1835 = stablehlo.reshape %arg183 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1836 = stablehlo.broadcast_in_dim %1835, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1837 = stablehlo.broadcast_in_dim %1836, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1838 = stablehlo.broadcast_in_dim %1837, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1839 = stablehlo.add %1834, %1838 : tensor<64x512x12x64xf32>
    %1840 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1841 = stablehlo.compare  GT, %81, %1840,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1842 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1843 = stablehlo.convert %1842 : tensor<64x1x512x512xf32>
    %1844 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1845 = stablehlo.convert %1844 : tensor<64x1x512x512xf32>
    %1846 = stablehlo.select %1841, %1843, %1845 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_110 = stablehlo.constant dense<2063106453> : tensor<ui32>
    %1847 = call @_threefry_fold_in(%arg615, %c_110) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1848 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1849 = stablehlo.convert %1848 : tensor<f32>
    %1850 = stablehlo.broadcast_in_dim %1849, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1851 = stablehlo.divide %1825, %1850 : tensor<64x512x12x64xf32>
    %1852 = stablehlo.dot_general %1851, %1832, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1853 = stablehlo.broadcast_in_dim %1846, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1854 = stablehlo.add %1852, %1853 : tensor<64x12x512x512xf32>
    %cst_111 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1855 = stablehlo.reduce(%1854 init: %cst_111) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1856 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1857 = stablehlo.maximum %1856, %1855 : tensor<64x12x512xf32>
    %1858 = stablehlo.broadcast_in_dim %1857, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1859 = stablehlo.broadcast_in_dim %1858, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1860 = stablehlo.subtract %1854, %1859 : tensor<64x12x512x512xf32>
    %1861 = stablehlo.exponential %1860 : tensor<64x12x512x512xf32>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1862 = stablehlo.reduce(%1861 init: %cst_112) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1863 = stablehlo.broadcast_in_dim %1862, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1864 = stablehlo.broadcast_in_dim %1863, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1865 = stablehlo.divide %1861, %1864 : tensor<64x12x512x512xf32>
    %1866 = stablehlo.multiply %1863, %1863 : tensor<64x12x512x1xf32>
    %cst_113 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1867 = stablehlo.broadcast_in_dim %cst_113, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1868 = stablehlo.divide %1867, %1866 : tensor<64x12x512x1xf32>
    %1869 = call @_bernoulli_71(%1847, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1870 = stablehlo.convert %1869 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1871 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1872 = stablehlo.divide %1870, %1871 : tensor<64x12x512x512xf32>
    %1873 = stablehlo.multiply %1865, %1872 : tensor<64x12x512x512xf32>
    %1874 = stablehlo.dot_general %1839, %1873, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1875 = stablehlo.transpose %1874, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1876 = stablehlo.reshape %arg186 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1877 = stablehlo.dot_general %1875, %1876, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1878 = stablehlo.broadcast_in_dim %arg185, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1879 = stablehlo.broadcast_in_dim %1878, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1880 = stablehlo.broadcast_in_dim %1879, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1881 = stablehlo.add %1877, %1880 : tensor<64x512x768xf32>
    %c_114 = stablehlo.constant dense<4132262148> : tensor<ui32>
    %1882 = call @_threefry_fold_in(%arg615, %c_114) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1883 = call @_bernoulli(%1882, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1884 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1885 = stablehlo.divide %1881, %1884 : tensor<64x512x768xf32>
    %1886 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1887 = stablehlo.select %1883, %1885, %1886 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1888 = stablehlo.add %1887, %1818 : tensor<64x512x768xf32>
    %1889 = stablehlo.multiply %1888, %1888 : tensor<64x512x768xf32>
    %1890 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1891 = stablehlo.multiply %1890, %1888 : tensor<64x512x768xf32>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1892 = stablehlo.reduce(%1888 init: %cst_115) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1893 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1894 = stablehlo.divide %1892, %1893 : tensor<64x512xf32>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1895 = stablehlo.reduce(%1889 init: %cst_116) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1896 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1897 = stablehlo.divide %1895, %1896 : tensor<64x512xf32>
    %1898 = stablehlo.multiply %1894, %1894 : tensor<64x512xf32>
    %1899 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1900 = stablehlo.multiply %1899, %1894 : tensor<64x512xf32>
    %1901 = stablehlo.subtract %1897, %1898 : tensor<64x512xf32>
    %1902 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1903 = stablehlo.maximum %1902, %1901 : tensor<64x512xf32>
    %1904 = stablehlo.compare  EQ, %1901, %1903,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1905 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1906 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1907 = stablehlo.select %1904, %1905, %1906 : tensor<64x512xi1>, tensor<64x512xf32>
    %1908 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1909 = stablehlo.compare  EQ, %1908, %1903,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1910 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1911 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1912 = stablehlo.select %1909, %1910, %1911 : tensor<64x512xi1>, tensor<64x512xf32>
    %1913 = stablehlo.divide %1907, %1912 : tensor<64x512xf32>
    %1914 = stablehlo.broadcast_in_dim %1894, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1915 = stablehlo.broadcast_in_dim %1903, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1916 = stablehlo.broadcast_in_dim %1914, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1917 = stablehlo.subtract %1888, %1916 : tensor<64x512x768xf32>
    %1918 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1919 = stablehlo.add %1915, %1918 : tensor<64x512x1xf32>
    %1920 = stablehlo.rsqrt %1919 : tensor<64x512x1xf32>
    %1921 = stablehlo.divide %1920, %1919 : tensor<64x512x1xf32>
    %1922 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1923 = stablehlo.multiply %1922, %1921 : tensor<64x512x1xf32>
    %1924 = stablehlo.reshape %arg188 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1925 = stablehlo.broadcast_in_dim %1920, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1926 = stablehlo.broadcast_in_dim %1924, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1927 = stablehlo.multiply %1925, %1926 : tensor<64x512x768xf32>
    %1928 = stablehlo.multiply %1917, %1927 : tensor<64x512x768xf32>
    %1929 = stablehlo.reshape %arg187 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1930 = stablehlo.broadcast_in_dim %1929, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1931 = stablehlo.add %1928, %1930 : tensor<64x512x768xf32>
    %1932 = stablehlo.dot_general %1931, %arg194, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1933 = stablehlo.broadcast_in_dim %arg193, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1934 = stablehlo.broadcast_in_dim %1933, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1935 = stablehlo.broadcast_in_dim %1934, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1936 = stablehlo.add %1932, %1935 : tensor<64x512x3072xf32>
    %1937 = stablehlo.multiply %1936, %1936 : tensor<64x512x3072xf32>
    %1938 = stablehlo.multiply %1937, %1936 : tensor<64x512x3072xf32>
    %1939 = stablehlo.multiply %1936, %1936 : tensor<64x512x3072xf32>
    %1940 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1941 = stablehlo.multiply %1940, %1939 : tensor<64x512x3072xf32>
    %1942 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1943 = stablehlo.multiply %1942, %1938 : tensor<64x512x3072xf32>
    %1944 = stablehlo.add %1936, %1943 : tensor<64x512x3072xf32>
    %1945 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1946 = stablehlo.multiply %1945, %1944 : tensor<64x512x3072xf32>
    %1947 = stablehlo.tanh %1946 : tensor<64x512x3072xf32>
    %1948 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1949 = stablehlo.broadcast_in_dim %1948, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1950 = stablehlo.subtract %1949, %1947 : tensor<64x512x3072xf32>
    %1951 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1952 = stablehlo.add %1951, %1947 : tensor<64x512x3072xf32>
    %1953 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1954 = stablehlo.multiply %1953, %1952 : tensor<64x512x3072xf32>
    %1955 = stablehlo.multiply %1936, %1954 : tensor<64x512x3072xf32>
    %1956 = stablehlo.dot_general %1955, %arg190, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1957 = stablehlo.broadcast_in_dim %arg189, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1958 = stablehlo.broadcast_in_dim %1957, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1959 = stablehlo.broadcast_in_dim %1958, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1960 = stablehlo.add %1956, %1959 : tensor<64x512x768xf32>
    %c_117 = stablehlo.constant dense<1356901351> : tensor<ui32>
    %1961 = call @_threefry_fold_in(%arg615, %c_117) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1962 = call @_bernoulli_112(%1961, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1963 = stablehlo.broadcast_in_dim %1962, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1964 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1965 = stablehlo.divide %1960, %1964 : tensor<64x512x768xf32>
    %1966 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1967 = stablehlo.select %1963, %1965, %1966 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1968 = stablehlo.add %1967, %1931 : tensor<64x512x768xf32>
    %1969 = stablehlo.multiply %1968, %1968 : tensor<64x512x768xf32>
    %1970 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1971 = stablehlo.multiply %1970, %1968 : tensor<64x512x768xf32>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1972 = stablehlo.reduce(%1968 init: %cst_118) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1973 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1974 = stablehlo.divide %1972, %1973 : tensor<64x512xf32>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1975 = stablehlo.reduce(%1969 init: %cst_119) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1976 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1977 = stablehlo.divide %1975, %1976 : tensor<64x512xf32>
    %1978 = stablehlo.multiply %1974, %1974 : tensor<64x512xf32>
    %1979 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1980 = stablehlo.multiply %1979, %1974 : tensor<64x512xf32>
    %1981 = stablehlo.subtract %1977, %1978 : tensor<64x512xf32>
    %1982 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1983 = stablehlo.maximum %1982, %1981 : tensor<64x512xf32>
    %1984 = stablehlo.compare  EQ, %1981, %1983,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1985 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1986 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1987 = stablehlo.select %1984, %1985, %1986 : tensor<64x512xi1>, tensor<64x512xf32>
    %1988 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1989 = stablehlo.compare  EQ, %1988, %1983,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1990 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1991 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1992 = stablehlo.select %1989, %1990, %1991 : tensor<64x512xi1>, tensor<64x512xf32>
    %1993 = stablehlo.divide %1987, %1992 : tensor<64x512xf32>
    %1994 = stablehlo.broadcast_in_dim %1974, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1995 = stablehlo.broadcast_in_dim %1983, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1996 = stablehlo.broadcast_in_dim %1994, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1997 = stablehlo.subtract %1968, %1996 : tensor<64x512x768xf32>
    %1998 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1999 = stablehlo.add %1995, %1998 : tensor<64x512x1xf32>
    %2000 = stablehlo.rsqrt %1999 : tensor<64x512x1xf32>
    %2001 = stablehlo.divide %2000, %1999 : tensor<64x512x1xf32>
    %2002 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2003 = stablehlo.multiply %2002, %2001 : tensor<64x512x1xf32>
    %2004 = stablehlo.reshape %arg192 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2005 = stablehlo.broadcast_in_dim %2000, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2006 = stablehlo.broadcast_in_dim %2004, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2007 = stablehlo.multiply %2005, %2006 : tensor<64x512x768xf32>
    %2008 = stablehlo.multiply %1997, %2007 : tensor<64x512x768xf32>
    %2009 = stablehlo.reshape %arg191 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2010 = stablehlo.broadcast_in_dim %2009, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2011 = stablehlo.add %2008, %2010 : tensor<64x512x768xf32>
    %2012 = stablehlo.reshape %arg38 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2013 = stablehlo.dot_general %2011, %2012, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2014 = stablehlo.reshape %arg37 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2015 = stablehlo.broadcast_in_dim %2014, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2016 = stablehlo.broadcast_in_dim %2015, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2017 = stablehlo.broadcast_in_dim %2016, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2018 = stablehlo.add %2013, %2017 : tensor<64x512x12x64xf32>
    %2019 = stablehlo.reshape %arg36 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2020 = stablehlo.dot_general %2011, %2019, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2021 = stablehlo.reshape %arg35 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2022 = stablehlo.broadcast_in_dim %2021, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2023 = stablehlo.broadcast_in_dim %2022, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2024 = stablehlo.broadcast_in_dim %2023, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2025 = stablehlo.add %2020, %2024 : tensor<64x512x12x64xf32>
    %2026 = stablehlo.reshape %arg40 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2027 = stablehlo.dot_general %2011, %2026, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2028 = stablehlo.reshape %arg39 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2029 = stablehlo.broadcast_in_dim %2028, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2030 = stablehlo.broadcast_in_dim %2029, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2031 = stablehlo.broadcast_in_dim %2030, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2032 = stablehlo.add %2027, %2031 : tensor<64x512x12x64xf32>
    %2033 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2034 = stablehlo.compare  GT, %81, %2033,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %2035 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2036 = stablehlo.convert %2035 : tensor<64x1x512x512xf32>
    %2037 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2038 = stablehlo.convert %2037 : tensor<64x1x512x512xf32>
    %2039 = stablehlo.select %2034, %2036, %2038 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_120 = stablehlo.constant dense<3420478591> : tensor<ui32>
    %2040 = call @_threefry_fold_in(%arg615, %c_120) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2041 = stablehlo.sqrt %cst_15 : tensor<f32>
    %2042 = stablehlo.convert %2041 : tensor<f32>
    %2043 = stablehlo.broadcast_in_dim %2042, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2044 = stablehlo.divide %2018, %2043 : tensor<64x512x12x64xf32>
    %2045 = stablehlo.dot_general %2044, %2025, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2046 = stablehlo.broadcast_in_dim %2039, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %2047 = stablehlo.add %2045, %2046 : tensor<64x12x512x512xf32>
    %cst_121 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2048 = stablehlo.reduce(%2047 init: %cst_121) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2049 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %2050 = stablehlo.maximum %2049, %2048 : tensor<64x12x512xf32>
    %2051 = stablehlo.broadcast_in_dim %2050, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2052 = stablehlo.broadcast_in_dim %2051, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2053 = stablehlo.subtract %2047, %2052 : tensor<64x12x512x512xf32>
    %2054 = stablehlo.exponential %2053 : tensor<64x12x512x512xf32>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2055 = stablehlo.reduce(%2054 init: %cst_122) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2056 = stablehlo.broadcast_in_dim %2055, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2057 = stablehlo.broadcast_in_dim %2056, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2058 = stablehlo.divide %2054, %2057 : tensor<64x12x512x512xf32>
    %2059 = stablehlo.multiply %2056, %2056 : tensor<64x12x512x1xf32>
    %cst_123 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2060 = stablehlo.broadcast_in_dim %cst_123, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %2061 = stablehlo.divide %2060, %2059 : tensor<64x12x512x1xf32>
    %2062 = call @_bernoulli_71(%2040, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %2063 = stablehlo.convert %2062 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %2064 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2065 = stablehlo.divide %2063, %2064 : tensor<64x12x512x512xf32>
    %2066 = stablehlo.multiply %2058, %2065 : tensor<64x12x512x512xf32>
    %2067 = stablehlo.dot_general %2032, %2066, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2068 = stablehlo.transpose %2067, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2069 = stablehlo.reshape %arg42 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %2070 = stablehlo.dot_general %2068, %2069, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %2071 = stablehlo.broadcast_in_dim %arg41, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2072 = stablehlo.broadcast_in_dim %2071, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2073 = stablehlo.broadcast_in_dim %2072, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2074 = stablehlo.add %2070, %2073 : tensor<64x512x768xf32>
    %c_124 = stablehlo.constant dense<2585465220> : tensor<ui32>
    %2075 = call @_threefry_fold_in(%arg615, %c_124) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2076 = call @_bernoulli(%2075, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2077 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2078 = stablehlo.divide %2074, %2077 : tensor<64x512x768xf32>
    %2079 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2080 = stablehlo.select %2076, %2078, %2079 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2081 = stablehlo.add %2080, %2011 : tensor<64x512x768xf32>
    %2082 = stablehlo.multiply %2081, %2081 : tensor<64x512x768xf32>
    %2083 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2084 = stablehlo.multiply %2083, %2081 : tensor<64x512x768xf32>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2085 = stablehlo.reduce(%2081 init: %cst_125) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2086 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2087 = stablehlo.divide %2085, %2086 : tensor<64x512xf32>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2088 = stablehlo.reduce(%2082 init: %cst_126) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2089 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2090 = stablehlo.divide %2088, %2089 : tensor<64x512xf32>
    %2091 = stablehlo.multiply %2087, %2087 : tensor<64x512xf32>
    %2092 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2093 = stablehlo.multiply %2092, %2087 : tensor<64x512xf32>
    %2094 = stablehlo.subtract %2090, %2091 : tensor<64x512xf32>
    %2095 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2096 = stablehlo.maximum %2095, %2094 : tensor<64x512xf32>
    %2097 = stablehlo.compare  EQ, %2094, %2096,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2098 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2099 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2100 = stablehlo.select %2097, %2098, %2099 : tensor<64x512xi1>, tensor<64x512xf32>
    %2101 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2102 = stablehlo.compare  EQ, %2101, %2096,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2103 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2104 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2105 = stablehlo.select %2102, %2103, %2104 : tensor<64x512xi1>, tensor<64x512xf32>
    %2106 = stablehlo.divide %2100, %2105 : tensor<64x512xf32>
    %2107 = stablehlo.broadcast_in_dim %2087, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2108 = stablehlo.broadcast_in_dim %2096, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2109 = stablehlo.broadcast_in_dim %2107, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2110 = stablehlo.subtract %2081, %2109 : tensor<64x512x768xf32>
    %2111 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2112 = stablehlo.add %2108, %2111 : tensor<64x512x1xf32>
    %2113 = stablehlo.rsqrt %2112 : tensor<64x512x1xf32>
    %2114 = stablehlo.divide %2113, %2112 : tensor<64x512x1xf32>
    %2115 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2116 = stablehlo.multiply %2115, %2114 : tensor<64x512x1xf32>
    %2117 = stablehlo.reshape %arg44 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2118 = stablehlo.broadcast_in_dim %2113, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2119 = stablehlo.broadcast_in_dim %2117, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2120 = stablehlo.multiply %2118, %2119 : tensor<64x512x768xf32>
    %2121 = stablehlo.multiply %2110, %2120 : tensor<64x512x768xf32>
    %2122 = stablehlo.reshape %arg43 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2123 = stablehlo.broadcast_in_dim %2122, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2124 = stablehlo.add %2121, %2123 : tensor<64x512x768xf32>
    %2125 = stablehlo.dot_general %2124, %arg50, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2126 = stablehlo.broadcast_in_dim %arg49, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %2127 = stablehlo.broadcast_in_dim %2126, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %2128 = stablehlo.broadcast_in_dim %2127, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2129 = stablehlo.add %2125, %2128 : tensor<64x512x3072xf32>
    %2130 = stablehlo.multiply %2129, %2129 : tensor<64x512x3072xf32>
    %2131 = stablehlo.multiply %2130, %2129 : tensor<64x512x3072xf32>
    %2132 = stablehlo.multiply %2129, %2129 : tensor<64x512x3072xf32>
    %2133 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2134 = stablehlo.multiply %2133, %2132 : tensor<64x512x3072xf32>
    %2135 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2136 = stablehlo.multiply %2135, %2131 : tensor<64x512x3072xf32>
    %2137 = stablehlo.add %2129, %2136 : tensor<64x512x3072xf32>
    %2138 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2139 = stablehlo.multiply %2138, %2137 : tensor<64x512x3072xf32>
    %2140 = stablehlo.tanh %2139 : tensor<64x512x3072xf32>
    %2141 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2142 = stablehlo.broadcast_in_dim %2141, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2143 = stablehlo.subtract %2142, %2140 : tensor<64x512x3072xf32>
    %2144 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2145 = stablehlo.add %2144, %2140 : tensor<64x512x3072xf32>
    %2146 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2147 = stablehlo.multiply %2146, %2145 : tensor<64x512x3072xf32>
    %2148 = stablehlo.multiply %2129, %2147 : tensor<64x512x3072xf32>
    %2149 = stablehlo.dot_general %2148, %arg46, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2150 = stablehlo.broadcast_in_dim %arg45, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2151 = stablehlo.broadcast_in_dim %2150, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2152 = stablehlo.broadcast_in_dim %2151, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2153 = stablehlo.add %2149, %2152 : tensor<64x512x768xf32>
    %c_127 = stablehlo.constant dense<211573412> : tensor<ui32>
    %2154 = call @_threefry_fold_in(%arg615, %c_127) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2155 = call @_bernoulli_112(%2154, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %2156 = stablehlo.broadcast_in_dim %2155, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %2157 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2158 = stablehlo.divide %2153, %2157 : tensor<64x512x768xf32>
    %2159 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2160 = stablehlo.select %2156, %2158, %2159 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2161 = stablehlo.add %2160, %2124 : tensor<64x512x768xf32>
    %2162 = stablehlo.multiply %2161, %2161 : tensor<64x512x768xf32>
    %2163 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2164 = stablehlo.multiply %2163, %2161 : tensor<64x512x768xf32>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2165 = stablehlo.reduce(%2161 init: %cst_128) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2166 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2167 = stablehlo.divide %2165, %2166 : tensor<64x512xf32>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2168 = stablehlo.reduce(%2162 init: %cst_129) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2169 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2170 = stablehlo.divide %2168, %2169 : tensor<64x512xf32>
    %2171 = stablehlo.multiply %2167, %2167 : tensor<64x512xf32>
    %2172 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2173 = stablehlo.multiply %2172, %2167 : tensor<64x512xf32>
    %2174 = stablehlo.subtract %2170, %2171 : tensor<64x512xf32>
    %2175 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2176 = stablehlo.maximum %2175, %2174 : tensor<64x512xf32>
    %2177 = stablehlo.compare  EQ, %2174, %2176,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2178 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2179 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2180 = stablehlo.select %2177, %2178, %2179 : tensor<64x512xi1>, tensor<64x512xf32>
    %2181 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2182 = stablehlo.compare  EQ, %2181, %2176,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2183 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2184 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2185 = stablehlo.select %2182, %2183, %2184 : tensor<64x512xi1>, tensor<64x512xf32>
    %2186 = stablehlo.divide %2180, %2185 : tensor<64x512xf32>
    %2187 = stablehlo.broadcast_in_dim %2167, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2188 = stablehlo.broadcast_in_dim %2176, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2189 = stablehlo.broadcast_in_dim %2187, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2190 = stablehlo.subtract %2161, %2189 : tensor<64x512x768xf32>
    %2191 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2192 = stablehlo.add %2188, %2191 : tensor<64x512x1xf32>
    %2193 = stablehlo.rsqrt %2192 : tensor<64x512x1xf32>
    %2194 = stablehlo.divide %2193, %2192 : tensor<64x512x1xf32>
    %2195 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2196 = stablehlo.multiply %2195, %2194 : tensor<64x512x1xf32>
    %2197 = stablehlo.reshape %arg48 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2198 = stablehlo.broadcast_in_dim %2193, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2199 = stablehlo.broadcast_in_dim %2197, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2200 = stablehlo.multiply %2198, %2199 : tensor<64x512x768xf32>
    %2201 = stablehlo.multiply %2190, %2200 : tensor<64x512x768xf32>
    %2202 = stablehlo.reshape %arg47 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2203 = stablehlo.broadcast_in_dim %2202, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2204 = stablehlo.add %2201, %2203 : tensor<64x512x768xf32>
    %2205 = stablehlo.reshape %arg54 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2206 = stablehlo.dot_general %2204, %2205, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2207 = stablehlo.reshape %arg53 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2208 = stablehlo.broadcast_in_dim %2207, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2209 = stablehlo.broadcast_in_dim %2208, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2210 = stablehlo.broadcast_in_dim %2209, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2211 = stablehlo.add %2206, %2210 : tensor<64x512x12x64xf32>
    %2212 = stablehlo.reshape %arg52 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2213 = stablehlo.dot_general %2204, %2212, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2214 = stablehlo.reshape %arg51 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2215 = stablehlo.broadcast_in_dim %2214, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2216 = stablehlo.broadcast_in_dim %2215, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2217 = stablehlo.broadcast_in_dim %2216, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2218 = stablehlo.add %2213, %2217 : tensor<64x512x12x64xf32>
    %2219 = stablehlo.reshape %arg56 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2220 = stablehlo.dot_general %2204, %2219, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2221 = stablehlo.reshape %arg55 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2222 = stablehlo.broadcast_in_dim %2221, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2223 = stablehlo.broadcast_in_dim %2222, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2224 = stablehlo.broadcast_in_dim %2223, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2225 = stablehlo.add %2220, %2224 : tensor<64x512x12x64xf32>
    %2226 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2227 = stablehlo.compare  GT, %81, %2226,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %2228 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2229 = stablehlo.convert %2228 : tensor<64x1x512x512xf32>
    %2230 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2231 = stablehlo.convert %2230 : tensor<64x1x512x512xf32>
    %2232 = stablehlo.select %2227, %2229, %2231 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_130 = stablehlo.constant dense<2546847265> : tensor<ui32>
    %2233 = call @_threefry_fold_in(%arg615, %c_130) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2234 = stablehlo.sqrt %cst_15 : tensor<f32>
    %2235 = stablehlo.convert %2234 : tensor<f32>
    %2236 = stablehlo.broadcast_in_dim %2235, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2237 = stablehlo.divide %2211, %2236 : tensor<64x512x12x64xf32>
    %2238 = stablehlo.dot_general %2237, %2218, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2239 = stablehlo.broadcast_in_dim %2232, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %2240 = stablehlo.add %2238, %2239 : tensor<64x12x512x512xf32>
    %cst_131 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2241 = stablehlo.reduce(%2240 init: %cst_131) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2242 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %2243 = stablehlo.maximum %2242, %2241 : tensor<64x12x512xf32>
    %2244 = stablehlo.broadcast_in_dim %2243, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2245 = stablehlo.broadcast_in_dim %2244, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2246 = stablehlo.subtract %2240, %2245 : tensor<64x12x512x512xf32>
    %2247 = stablehlo.exponential %2246 : tensor<64x12x512x512xf32>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2248 = stablehlo.reduce(%2247 init: %cst_132) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2249 = stablehlo.broadcast_in_dim %2248, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2250 = stablehlo.broadcast_in_dim %2249, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2251 = stablehlo.divide %2247, %2250 : tensor<64x12x512x512xf32>
    %2252 = stablehlo.multiply %2249, %2249 : tensor<64x12x512x1xf32>
    %cst_133 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2253 = stablehlo.broadcast_in_dim %cst_133, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %2254 = stablehlo.divide %2253, %2252 : tensor<64x12x512x1xf32>
    %2255 = call @_bernoulli_71(%2233, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %2256 = stablehlo.convert %2255 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %2257 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2258 = stablehlo.divide %2256, %2257 : tensor<64x12x512x512xf32>
    %2259 = stablehlo.multiply %2251, %2258 : tensor<64x12x512x512xf32>
    %2260 = stablehlo.dot_general %2225, %2259, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2261 = stablehlo.transpose %2260, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2262 = stablehlo.reshape %arg58 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %2263 = stablehlo.dot_general %2261, %2262, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %2264 = stablehlo.broadcast_in_dim %arg57, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2265 = stablehlo.broadcast_in_dim %2264, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2266 = stablehlo.broadcast_in_dim %2265, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2267 = stablehlo.add %2263, %2266 : tensor<64x512x768xf32>
    %c_134 = stablehlo.constant dense<2360657618> : tensor<ui32>
    %2268 = call @_threefry_fold_in(%arg615, %c_134) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2269 = call @_bernoulli(%2268, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2270 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2271 = stablehlo.divide %2267, %2270 : tensor<64x512x768xf32>
    %2272 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2273 = stablehlo.select %2269, %2271, %2272 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2274 = stablehlo.add %2273, %2204 : tensor<64x512x768xf32>
    %2275 = stablehlo.multiply %2274, %2274 : tensor<64x512x768xf32>
    %2276 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2277 = stablehlo.multiply %2276, %2274 : tensor<64x512x768xf32>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2278 = stablehlo.reduce(%2274 init: %cst_135) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2279 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2280 = stablehlo.divide %2278, %2279 : tensor<64x512xf32>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2281 = stablehlo.reduce(%2275 init: %cst_136) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2282 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2283 = stablehlo.divide %2281, %2282 : tensor<64x512xf32>
    %2284 = stablehlo.multiply %2280, %2280 : tensor<64x512xf32>
    %2285 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2286 = stablehlo.multiply %2285, %2280 : tensor<64x512xf32>
    %2287 = stablehlo.subtract %2283, %2284 : tensor<64x512xf32>
    %2288 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2289 = stablehlo.maximum %2288, %2287 : tensor<64x512xf32>
    %2290 = stablehlo.compare  EQ, %2287, %2289,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2291 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2292 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2293 = stablehlo.select %2290, %2291, %2292 : tensor<64x512xi1>, tensor<64x512xf32>
    %2294 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2295 = stablehlo.compare  EQ, %2294, %2289,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2296 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2297 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2298 = stablehlo.select %2295, %2296, %2297 : tensor<64x512xi1>, tensor<64x512xf32>
    %2299 = stablehlo.divide %2293, %2298 : tensor<64x512xf32>
    %2300 = stablehlo.broadcast_in_dim %2280, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2301 = stablehlo.broadcast_in_dim %2289, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2302 = stablehlo.broadcast_in_dim %2300, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2303 = stablehlo.subtract %2274, %2302 : tensor<64x512x768xf32>
    %2304 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2305 = stablehlo.add %2301, %2304 : tensor<64x512x1xf32>
    %2306 = stablehlo.rsqrt %2305 : tensor<64x512x1xf32>
    %2307 = stablehlo.divide %2306, %2305 : tensor<64x512x1xf32>
    %2308 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2309 = stablehlo.multiply %2308, %2307 : tensor<64x512x1xf32>
    %2310 = stablehlo.reshape %arg60 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2311 = stablehlo.broadcast_in_dim %2306, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2312 = stablehlo.broadcast_in_dim %2310, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2313 = stablehlo.multiply %2311, %2312 : tensor<64x512x768xf32>
    %2314 = stablehlo.multiply %2303, %2313 : tensor<64x512x768xf32>
    %2315 = stablehlo.reshape %arg59 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2316 = stablehlo.broadcast_in_dim %2315, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2317 = stablehlo.add %2314, %2316 : tensor<64x512x768xf32>
    %2318 = stablehlo.dot_general %2317, %arg66, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2319 = stablehlo.broadcast_in_dim %arg65, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %2320 = stablehlo.broadcast_in_dim %2319, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %2321 = stablehlo.broadcast_in_dim %2320, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2322 = stablehlo.add %2318, %2321 : tensor<64x512x3072xf32>
    %2323 = stablehlo.multiply %2322, %2322 : tensor<64x512x3072xf32>
    %2324 = stablehlo.multiply %2323, %2322 : tensor<64x512x3072xf32>
    %2325 = stablehlo.multiply %2322, %2322 : tensor<64x512x3072xf32>
    %2326 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2327 = stablehlo.multiply %2326, %2325 : tensor<64x512x3072xf32>
    %2328 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2329 = stablehlo.multiply %2328, %2324 : tensor<64x512x3072xf32>
    %2330 = stablehlo.add %2322, %2329 : tensor<64x512x3072xf32>
    %2331 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2332 = stablehlo.multiply %2331, %2330 : tensor<64x512x3072xf32>
    %2333 = stablehlo.tanh %2332 : tensor<64x512x3072xf32>
    %2334 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2335 = stablehlo.broadcast_in_dim %2334, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2336 = stablehlo.subtract %2335, %2333 : tensor<64x512x3072xf32>
    %2337 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2338 = stablehlo.add %2337, %2333 : tensor<64x512x3072xf32>
    %2339 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2340 = stablehlo.multiply %2339, %2338 : tensor<64x512x3072xf32>
    %2341 = stablehlo.multiply %2322, %2340 : tensor<64x512x3072xf32>
    %2342 = stablehlo.dot_general %2341, %arg62, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2343 = stablehlo.broadcast_in_dim %arg61, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2344 = stablehlo.broadcast_in_dim %2343, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2345 = stablehlo.broadcast_in_dim %2344, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2346 = stablehlo.add %2342, %2345 : tensor<64x512x768xf32>
    %c_137 = stablehlo.constant dense<216611501> : tensor<ui32>
    %2347 = call @_threefry_fold_in(%arg615, %c_137) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2348 = call @_bernoulli_112(%2347, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %2349 = stablehlo.broadcast_in_dim %2348, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %2350 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2351 = stablehlo.divide %2346, %2350 : tensor<64x512x768xf32>
    %2352 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2353 = stablehlo.select %2349, %2351, %2352 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2354 = stablehlo.add %2353, %2317 : tensor<64x512x768xf32>
    %2355 = stablehlo.multiply %2354, %2354 : tensor<64x512x768xf32>
    %2356 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2357 = stablehlo.multiply %2356, %2354 : tensor<64x512x768xf32>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2358 = stablehlo.reduce(%2354 init: %cst_138) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2359 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2360 = stablehlo.divide %2358, %2359 : tensor<64x512xf32>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2361 = stablehlo.reduce(%2355 init: %cst_139) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2362 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2363 = stablehlo.divide %2361, %2362 : tensor<64x512xf32>
    %2364 = stablehlo.multiply %2360, %2360 : tensor<64x512xf32>
    %2365 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2366 = stablehlo.multiply %2365, %2360 : tensor<64x512xf32>
    %2367 = stablehlo.subtract %2363, %2364 : tensor<64x512xf32>
    %2368 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2369 = stablehlo.maximum %2368, %2367 : tensor<64x512xf32>
    %2370 = stablehlo.compare  EQ, %2367, %2369,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2371 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2372 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2373 = stablehlo.select %2370, %2371, %2372 : tensor<64x512xi1>, tensor<64x512xf32>
    %2374 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2375 = stablehlo.compare  EQ, %2374, %2369,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2376 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2377 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2378 = stablehlo.select %2375, %2376, %2377 : tensor<64x512xi1>, tensor<64x512xf32>
    %2379 = stablehlo.divide %2373, %2378 : tensor<64x512xf32>
    %2380 = stablehlo.broadcast_in_dim %2360, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2381 = stablehlo.broadcast_in_dim %2369, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2382 = stablehlo.broadcast_in_dim %2380, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2383 = stablehlo.subtract %2354, %2382 : tensor<64x512x768xf32>
    %2384 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2385 = stablehlo.add %2381, %2384 : tensor<64x512x1xf32>
    %2386 = stablehlo.rsqrt %2385 : tensor<64x512x1xf32>
    %2387 = stablehlo.divide %2386, %2385 : tensor<64x512x1xf32>
    %2388 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2389 = stablehlo.multiply %2388, %2387 : tensor<64x512x1xf32>
    %2390 = stablehlo.reshape %arg64 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2391 = stablehlo.broadcast_in_dim %2386, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2392 = stablehlo.broadcast_in_dim %2390, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2393 = stablehlo.multiply %2391, %2392 : tensor<64x512x768xf32>
    %2394 = stablehlo.multiply %2383, %2393 : tensor<64x512x768xf32>
    %2395 = stablehlo.reshape %arg63 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2396 = stablehlo.broadcast_in_dim %2395, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2397 = stablehlo.add %2394, %2396 : tensor<64x512x768xf32>
    %2398 = stablehlo.dot_general %2397, %arg199, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2399 = stablehlo.broadcast_in_dim %arg198, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2400 = stablehlo.broadcast_in_dim %2399, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2401 = stablehlo.broadcast_in_dim %2400, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2402 = stablehlo.add %2398, %2401 : tensor<64x512x768xf32>
    %2403 = stablehlo.multiply %2402, %2402 : tensor<64x512x768xf32>
    %2404 = stablehlo.multiply %2403, %2402 : tensor<64x512x768xf32>
    %2405 = stablehlo.multiply %2402, %2402 : tensor<64x512x768xf32>
    %2406 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2407 = stablehlo.multiply %2406, %2405 : tensor<64x512x768xf32>
    %2408 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2409 = stablehlo.multiply %2408, %2404 : tensor<64x512x768xf32>
    %2410 = stablehlo.add %2402, %2409 : tensor<64x512x768xf32>
    %2411 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2412 = stablehlo.multiply %2411, %2410 : tensor<64x512x768xf32>
    %2413 = stablehlo.tanh %2412 : tensor<64x512x768xf32>
    %2414 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2415 = stablehlo.broadcast_in_dim %2414, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2416 = stablehlo.subtract %2415, %2413 : tensor<64x512x768xf32>
    %2417 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2418 = stablehlo.add %2417, %2413 : tensor<64x512x768xf32>
    %2419 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2420 = stablehlo.multiply %2419, %2418 : tensor<64x512x768xf32>
    %2421 = stablehlo.multiply %2402, %2420 : tensor<64x512x768xf32>
    %2422 = stablehlo.multiply %2421, %2421 : tensor<64x512x768xf32>
    %2423 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2424 = stablehlo.multiply %2423, %2421 : tensor<64x512x768xf32>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2425 = stablehlo.reduce(%2421 init: %cst_140) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2426 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2427 = stablehlo.divide %2425, %2426 : tensor<64x512xf32>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2428 = stablehlo.reduce(%2422 init: %cst_141) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2429 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2430 = stablehlo.divide %2428, %2429 : tensor<64x512xf32>
    %2431 = stablehlo.multiply %2427, %2427 : tensor<64x512xf32>
    %2432 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2433 = stablehlo.multiply %2432, %2427 : tensor<64x512xf32>
    %2434 = stablehlo.subtract %2430, %2431 : tensor<64x512xf32>
    %2435 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2436 = stablehlo.maximum %2435, %2434 : tensor<64x512xf32>
    %2437 = stablehlo.compare  EQ, %2434, %2436,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2438 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2439 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2440 = stablehlo.select %2437, %2438, %2439 : tensor<64x512xi1>, tensor<64x512xf32>
    %2441 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2442 = stablehlo.compare  EQ, %2441, %2436,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2443 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2444 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2445 = stablehlo.select %2442, %2443, %2444 : tensor<64x512xi1>, tensor<64x512xf32>
    %2446 = stablehlo.divide %2440, %2445 : tensor<64x512xf32>
    %2447 = stablehlo.broadcast_in_dim %2427, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2448 = stablehlo.broadcast_in_dim %2436, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2449 = stablehlo.broadcast_in_dim %2447, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2450 = stablehlo.subtract %2421, %2449 : tensor<64x512x768xf32>
    %2451 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2452 = stablehlo.add %2448, %2451 : tensor<64x512x1xf32>
    %2453 = stablehlo.rsqrt %2452 : tensor<64x512x1xf32>
    %2454 = stablehlo.divide %2453, %2452 : tensor<64x512x1xf32>
    %2455 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2456 = stablehlo.multiply %2455, %2454 : tensor<64x512x1xf32>
    %2457 = stablehlo.reshape %arg202 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2458 = stablehlo.broadcast_in_dim %2453, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2459 = stablehlo.broadcast_in_dim %2457, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2460 = stablehlo.multiply %2458, %2459 : tensor<64x512x768xf32>
    %2461 = stablehlo.multiply %2450, %2460 : tensor<64x512x768xf32>
    %2462 = stablehlo.reshape %arg201 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2463 = stablehlo.broadcast_in_dim %2462, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2464 = stablehlo.add %2461, %2463 : tensor<64x512x768xf32>
    %2465 = stablehlo.transpose %arg200, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2466 = stablehlo.dot_general %2464, %2465, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x30522xf32>) -> tensor<64x512x30522xf32>
    %2467 = stablehlo.broadcast_in_dim %arg197, dims = [2] : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %2468 = stablehlo.broadcast_in_dim %2467, dims = [0, 1, 2] : (tensor<1x1x30522xf32>) -> tensor<64x512x30522xf32>
    %2469 = stablehlo.add %2466, %2468 : tensor<64x512x30522xf32>
    %c_142 = stablehlo.constant dense<-100> : tensor<i32>
    %2470 = stablehlo.broadcast_in_dim %c_142, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2471 = stablehlo.compare  NE, %arg614, %2470,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_143 = stablehlo.constant dense<0> : tensor<i32>
    %2472 = call @_where(%2471, %arg614, %c_143) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %2473 = call @_where(%2471, %2472, %c_143) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_144 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2474 = stablehlo.reduce(%2469 init: %cst_144) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2475 = stablehlo.broadcast_in_dim %2474, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2476 = stablehlo.broadcast_in_dim %2475, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2477 = stablehlo.subtract %2469, %2476 : tensor<64x512x30522xf32>
    %2478 = stablehlo.exponential %2477 : tensor<64x512x30522xf32>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2479 = stablehlo.reduce(%2478 init: %cst_145) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2480 = stablehlo.log %2479 : tensor<64x512xf32>
    %2481 = stablehlo.broadcast_in_dim %2473, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %2482:2 = call @take_along_axis(%2477, %2481) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %2483 = stablehlo.slice %2482#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %2484 = stablehlo.reshape %2483 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %2485 = stablehlo.subtract %2480, %2484 : tensor<64x512xf32>
    %2486 = call @_where_160(%2471, %2485, %cst_12) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2487 = stablehlo.reduce(%2486 init: %cst_146) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %2488 = stablehlo.convert %2471 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_147 = stablehlo.constant dense<0> : tensor<i32>
    %2489 = stablehlo.reduce(%2488 init: %c_147) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2490 = call @argmax(%2469) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %2491 = stablehlo.compare  EQ, %2490, %arg614,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %2492 = stablehlo.and %2491, %2471 : tensor<64x512xi1>
    %2493 = stablehlo.convert %2492 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_148 = stablehlo.constant dense<0> : tensor<i32>
    %2494 = stablehlo.reduce(%2493 init: %c_148) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2495 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2496 = stablehlo.broadcast_in_dim %2495, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2497 = call @_where_176(%2471, %2496) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %2498 = stablehlo.negate %2497 : tensor<64x512xf32>
    %2499 = stablehlo.broadcast_in_dim %2498, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2500 = stablehlo.pad %2499, %cst_6, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %2501 = call @take_along_axis_177(%2482#1, %2500) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2502 = stablehlo.divide %2497, %2479 : tensor<64x512xf32>
    %2503 = stablehlo.broadcast_in_dim %2502, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %2504 = stablehlo.multiply %2503, %2478 : tensor<64x512x30522xf32>
    %2505 = stablehlo.add %2501, %2504 : tensor<64x512x30522xf32>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2506 = stablehlo.reduce(%2505 init: %cst_149) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2507 = stablehlo.reshape %2506 : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2508 = stablehlo.reduce(%2507 init: %cst_150) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2509 = stablehlo.dot_general %2505, %2464, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %2510 = stablehlo.transpose %2509, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2511 = stablehlo.dot_general %2505, %2465, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<768x30522xf32>) -> tensor<64x512x768xf32>
    %2512 = stablehlo.transpose %2510, dims = [1, 0] : (tensor<768x30522xf32>) -> tensor<30522x768xf32>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2513 = stablehlo.reduce(%2511 init: %cst_151) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2514 = stablehlo.reshape %2513 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2515 = stablehlo.reshape %2514 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2516 = stablehlo.multiply %2450, %2511 : tensor<64x512x768xf32>
    %2517 = stablehlo.multiply %2511, %2460 : tensor<64x512x768xf32>
    %2518 = stablehlo.broadcast_in_dim %2453, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2519 = stablehlo.multiply %2518, %2516 : tensor<64x512x768xf32>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2520 = stablehlo.reduce(%2519 init: %cst_152) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2521 = stablehlo.reshape %2520 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2522 = stablehlo.broadcast_in_dim %2457, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2523 = stablehlo.multiply %2516, %2522 : tensor<64x512x768xf32>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2524 = stablehlo.reduce(%2523 init: %cst_153) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2525 = stablehlo.reshape %2524 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2526 = stablehlo.reshape %2521 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2527 = stablehlo.multiply %2525, %2456 : tensor<64x512x1xf32>
    %2528 = stablehlo.negate %2517 : tensor<64x512x768xf32>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2529 = stablehlo.reduce(%2528 init: %cst_154) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2530 = stablehlo.reshape %2529 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2531 = stablehlo.reduce(%2527 init: %cst_155) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2532 = stablehlo.reduce(%2530 init: %cst_156) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2533 = stablehlo.multiply %2531, %2446 : tensor<64x512xf32>
    %2534 = stablehlo.negate %2533 : tensor<64x512xf32>
    %2535 = stablehlo.multiply %2534, %2433 : tensor<64x512xf32>
    %2536 = stablehlo.add %2532, %2535 : tensor<64x512xf32>
    %2537 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2538 = stablehlo.divide %2533, %2537 : tensor<64x512xf32>
    %2539 = stablehlo.broadcast_in_dim %2538, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2540 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2541 = stablehlo.divide %2536, %2540 : tensor<64x512xf32>
    %2542 = stablehlo.broadcast_in_dim %2541, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2543 = stablehlo.add %2517, %2542 : tensor<64x512x768xf32>
    %2544 = stablehlo.multiply %2539, %2424 : tensor<64x512x768xf32>
    %2545 = stablehlo.add %2543, %2544 : tensor<64x512x768xf32>
    %2546 = stablehlo.multiply %2402, %2545 : tensor<64x512x768xf32>
    %2547 = stablehlo.multiply %2545, %2420 : tensor<64x512x768xf32>
    %2548 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2549 = stablehlo.multiply %2548, %2546 : tensor<64x512x768xf32>
    %2550 = stablehlo.multiply %2549, %2416 : tensor<64x512x768xf32>
    %2551 = stablehlo.multiply %2550, %2413 : tensor<64x512x768xf32>
    %2552 = stablehlo.add %2550, %2551 : tensor<64x512x768xf32>
    %2553 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2554 = stablehlo.multiply %2553, %2552 : tensor<64x512x768xf32>
    %2555 = stablehlo.add %2547, %2554 : tensor<64x512x768xf32>
    %2556 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2557 = stablehlo.multiply %2556, %2554 : tensor<64x512x768xf32>
    %2558 = stablehlo.multiply %2557, %2407 : tensor<64x512x768xf32>
    %2559 = stablehlo.add %2555, %2558 : tensor<64x512x768xf32>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2560 = stablehlo.reduce(%2559 init: %cst_157) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2561 = stablehlo.reshape %2560 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2562 = stablehlo.reduce(%2561 init: %cst_158) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2563 = stablehlo.broadcast_in_dim %2562, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2564 = stablehlo.reduce(%2563 init: %cst_159) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2565 = stablehlo.dot_general %2559, %2397, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2566 = stablehlo.transpose %2565, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2567 = stablehlo.dot_general %2559, %arg199, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2568 = stablehlo.reduce(%2567 init: %cst_160) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2569 = stablehlo.reshape %2568 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2570 = stablehlo.reshape %2569 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2571 = stablehlo.multiply %2383, %2567 : tensor<64x512x768xf32>
    %2572 = stablehlo.multiply %2567, %2393 : tensor<64x512x768xf32>
    %2573 = stablehlo.broadcast_in_dim %2386, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2574 = stablehlo.multiply %2573, %2571 : tensor<64x512x768xf32>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2575 = stablehlo.reduce(%2574 init: %cst_161) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2576 = stablehlo.reshape %2575 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2577 = stablehlo.broadcast_in_dim %2390, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2578 = stablehlo.multiply %2571, %2577 : tensor<64x512x768xf32>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2579 = stablehlo.reduce(%2578 init: %cst_162) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2580 = stablehlo.reshape %2579 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2581 = stablehlo.reshape %2576 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2582 = stablehlo.multiply %2580, %2389 : tensor<64x512x1xf32>
    %2583 = stablehlo.negate %2572 : tensor<64x512x768xf32>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2584 = stablehlo.reduce(%2583 init: %cst_163) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2585 = stablehlo.reshape %2584 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2586 = stablehlo.reduce(%2582 init: %cst_164) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2587 = stablehlo.reduce(%2585 init: %cst_165) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2588 = stablehlo.multiply %2586, %2379 : tensor<64x512xf32>
    %2589 = stablehlo.negate %2588 : tensor<64x512xf32>
    %2590 = stablehlo.multiply %2589, %2366 : tensor<64x512xf32>
    %2591 = stablehlo.add %2587, %2590 : tensor<64x512xf32>
    %2592 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2593 = stablehlo.divide %2588, %2592 : tensor<64x512xf32>
    %2594 = stablehlo.broadcast_in_dim %2593, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2595 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2596 = stablehlo.divide %2591, %2595 : tensor<64x512xf32>
    %2597 = stablehlo.broadcast_in_dim %2596, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2598 = stablehlo.add %2572, %2597 : tensor<64x512x768xf32>
    %2599 = stablehlo.multiply %2594, %2357 : tensor<64x512x768xf32>
    %2600 = stablehlo.add %2598, %2599 : tensor<64x512x768xf32>
    %2601 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2602 = stablehlo.select %2349, %2600, %2601 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2603 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2604 = stablehlo.divide %2602, %2603 : tensor<64x512x768xf32>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2605 = stablehlo.reduce(%2604 init: %cst_166) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2606 = stablehlo.reshape %2605 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2607 = stablehlo.reduce(%2606 init: %cst_167) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2608 = stablehlo.broadcast_in_dim %2607, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2609 = stablehlo.reduce(%2608 init: %cst_168) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2610 = stablehlo.dot_general %2604, %2341, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2611 = stablehlo.transpose %2610, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2612 = stablehlo.dot_general %2604, %arg62, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2613 = stablehlo.multiply %2322, %2612 : tensor<64x512x3072xf32>
    %2614 = stablehlo.multiply %2612, %2340 : tensor<64x512x3072xf32>
    %2615 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2616 = stablehlo.multiply %2615, %2613 : tensor<64x512x3072xf32>
    %2617 = stablehlo.multiply %2616, %2336 : tensor<64x512x3072xf32>
    %2618 = stablehlo.multiply %2617, %2333 : tensor<64x512x3072xf32>
    %2619 = stablehlo.add %2617, %2618 : tensor<64x512x3072xf32>
    %2620 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2621 = stablehlo.multiply %2620, %2619 : tensor<64x512x3072xf32>
    %2622 = stablehlo.add %2614, %2621 : tensor<64x512x3072xf32>
    %2623 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2624 = stablehlo.multiply %2623, %2621 : tensor<64x512x3072xf32>
    %2625 = stablehlo.multiply %2624, %2327 : tensor<64x512x3072xf32>
    %2626 = stablehlo.add %2622, %2625 : tensor<64x512x3072xf32>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2627 = stablehlo.reduce(%2626 init: %cst_169) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2628 = stablehlo.reshape %2627 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2629 = stablehlo.reduce(%2628 init: %cst_170) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2630 = stablehlo.broadcast_in_dim %2629, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2631 = stablehlo.reduce(%2630 init: %cst_171) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2632 = stablehlo.dot_general %2626, %2317, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2633 = stablehlo.transpose %2632, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2634 = stablehlo.dot_general %2626, %arg66, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2635 = stablehlo.add %2600, %2634 : tensor<64x512x768xf32>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2636 = stablehlo.reduce(%2635 init: %cst_172) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2637 = stablehlo.reshape %2636 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2638 = stablehlo.reshape %2637 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2639 = stablehlo.multiply %2303, %2635 : tensor<64x512x768xf32>
    %2640 = stablehlo.multiply %2635, %2313 : tensor<64x512x768xf32>
    %2641 = stablehlo.broadcast_in_dim %2306, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2642 = stablehlo.multiply %2641, %2639 : tensor<64x512x768xf32>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2643 = stablehlo.reduce(%2642 init: %cst_173) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2644 = stablehlo.reshape %2643 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2645 = stablehlo.broadcast_in_dim %2310, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2646 = stablehlo.multiply %2639, %2645 : tensor<64x512x768xf32>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2647 = stablehlo.reduce(%2646 init: %cst_174) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2648 = stablehlo.reshape %2647 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2649 = stablehlo.reshape %2644 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2650 = stablehlo.multiply %2648, %2309 : tensor<64x512x1xf32>
    %2651 = stablehlo.negate %2640 : tensor<64x512x768xf32>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2652 = stablehlo.reduce(%2651 init: %cst_175) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2653 = stablehlo.reshape %2652 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2654 = stablehlo.reduce(%2650 init: %cst_176) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2655 = stablehlo.reduce(%2653 init: %cst_177) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2656 = stablehlo.multiply %2654, %2299 : tensor<64x512xf32>
    %2657 = stablehlo.negate %2656 : tensor<64x512xf32>
    %2658 = stablehlo.multiply %2657, %2286 : tensor<64x512xf32>
    %2659 = stablehlo.add %2655, %2658 : tensor<64x512xf32>
    %2660 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2661 = stablehlo.divide %2656, %2660 : tensor<64x512xf32>
    %2662 = stablehlo.broadcast_in_dim %2661, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2663 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2664 = stablehlo.divide %2659, %2663 : tensor<64x512xf32>
    %2665 = stablehlo.broadcast_in_dim %2664, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2666 = stablehlo.add %2640, %2665 : tensor<64x512x768xf32>
    %2667 = stablehlo.multiply %2662, %2277 : tensor<64x512x768xf32>
    %2668 = stablehlo.add %2666, %2667 : tensor<64x512x768xf32>
    %2669 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2670 = stablehlo.select %2269, %2668, %2669 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2671 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2672 = stablehlo.divide %2670, %2671 : tensor<64x512x768xf32>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2673 = stablehlo.reduce(%2672 init: %cst_178) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2674 = stablehlo.reshape %2673 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2675 = stablehlo.reduce(%2674 init: %cst_179) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2676 = stablehlo.broadcast_in_dim %2675, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2677 = stablehlo.reduce(%2676 init: %cst_180) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2678 = stablehlo.dot_general %2672, %2261, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2679 = stablehlo.transpose %2678, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2680 = stablehlo.dot_general %2672, %2262, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2681 = stablehlo.reshape %2679 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2682 = stablehlo.transpose %2680, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2683 = stablehlo.dot_general %2682, %2225, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2684 = stablehlo.dot_general %2682, %2259, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2685 = stablehlo.transpose %2684, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2686 = stablehlo.multiply %2683, %2258 : tensor<64x12x512x512xf32>
    %2687 = stablehlo.broadcast_in_dim %2254, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2688 = stablehlo.multiply %2686, %2687 : tensor<64x12x512x512xf32>
    %2689 = stablehlo.multiply %2688, %2247 : tensor<64x12x512x512xf32>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2690 = stablehlo.reduce(%2689 init: %cst_181) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2691 = stablehlo.reshape %2690 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2692 = stablehlo.negate %2691 : tensor<64x12x512x1xf32>
    %2693 = stablehlo.broadcast_in_dim %2249, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2694 = stablehlo.divide %2686, %2693 : tensor<64x12x512x512xf32>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2695 = stablehlo.reduce(%2692 init: %cst_182) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2696 = stablehlo.broadcast_in_dim %2695, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2697 = stablehlo.add %2694, %2696 : tensor<64x12x512x512xf32>
    %2698 = stablehlo.multiply %2697, %2247 : tensor<64x12x512x512xf32>
    %2699 = stablehlo.dot_general %2698, %2237, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2700 = stablehlo.transpose %2699, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2701 = stablehlo.dot_general %2698, %2218, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2702 = stablehlo.transpose %2701, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2703 = stablehlo.broadcast_in_dim %2235, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2704 = stablehlo.divide %2702, %2703 : tensor<64x512x12x64xf32>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2705 = stablehlo.reduce(%2685 init: %cst_183) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2706 = stablehlo.reshape %2705 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2707 = stablehlo.reduce(%2706 init: %cst_184) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2708 = stablehlo.broadcast_in_dim %2707, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2709 = stablehlo.reduce(%2708 init: %cst_185) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2710 = stablehlo.reshape %2709 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2711 = stablehlo.dot_general %2685, %2204, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2712 = stablehlo.transpose %2711, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2713 = stablehlo.dot_general %2685, %2219, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2714 = stablehlo.add %2668, %2713 : tensor<64x512x768xf32>
    %2715 = stablehlo.reshape %2712 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2716 = stablehlo.reduce(%2700 init: %cst_186) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2717 = stablehlo.reshape %2716 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2718 = stablehlo.reduce(%2717 init: %cst_187) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2719 = stablehlo.broadcast_in_dim %2718, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2720 = stablehlo.reduce(%2719 init: %cst_188) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2721 = stablehlo.reshape %2720 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2722 = stablehlo.dot_general %2700, %2204, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2723 = stablehlo.transpose %2722, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2724 = stablehlo.dot_general %2700, %2212, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2725 = stablehlo.add %2714, %2724 : tensor<64x512x768xf32>
    %2726 = stablehlo.reshape %2723 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2727 = stablehlo.reduce(%2704 init: %cst_189) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2728 = stablehlo.reshape %2727 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2729 = stablehlo.reduce(%2728 init: %cst_190) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2730 = stablehlo.broadcast_in_dim %2729, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2731 = stablehlo.reduce(%2730 init: %cst_191) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2732 = stablehlo.reshape %2731 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2733 = stablehlo.dot_general %2704, %2204, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2734 = stablehlo.transpose %2733, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2735 = stablehlo.dot_general %2704, %2205, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2736 = stablehlo.add %2725, %2735 : tensor<64x512x768xf32>
    %2737 = stablehlo.reshape %2734 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2738 = stablehlo.reduce(%2736 init: %cst_192) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2739 = stablehlo.reshape %2738 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2740 = stablehlo.reshape %2739 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2741 = stablehlo.multiply %2190, %2736 : tensor<64x512x768xf32>
    %2742 = stablehlo.multiply %2736, %2200 : tensor<64x512x768xf32>
    %2743 = stablehlo.broadcast_in_dim %2193, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2744 = stablehlo.multiply %2743, %2741 : tensor<64x512x768xf32>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2745 = stablehlo.reduce(%2744 init: %cst_193) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2746 = stablehlo.reshape %2745 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2747 = stablehlo.broadcast_in_dim %2197, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2748 = stablehlo.multiply %2741, %2747 : tensor<64x512x768xf32>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2749 = stablehlo.reduce(%2748 init: %cst_194) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2750 = stablehlo.reshape %2749 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2751 = stablehlo.reshape %2746 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2752 = stablehlo.multiply %2750, %2196 : tensor<64x512x1xf32>
    %2753 = stablehlo.negate %2742 : tensor<64x512x768xf32>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2754 = stablehlo.reduce(%2753 init: %cst_195) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2755 = stablehlo.reshape %2754 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2756 = stablehlo.reduce(%2752 init: %cst_196) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2757 = stablehlo.reduce(%2755 init: %cst_197) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2758 = stablehlo.multiply %2756, %2186 : tensor<64x512xf32>
    %2759 = stablehlo.negate %2758 : tensor<64x512xf32>
    %2760 = stablehlo.multiply %2759, %2173 : tensor<64x512xf32>
    %2761 = stablehlo.add %2757, %2760 : tensor<64x512xf32>
    %2762 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2763 = stablehlo.divide %2758, %2762 : tensor<64x512xf32>
    %2764 = stablehlo.broadcast_in_dim %2763, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2765 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2766 = stablehlo.divide %2761, %2765 : tensor<64x512xf32>
    %2767 = stablehlo.broadcast_in_dim %2766, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2768 = stablehlo.add %2742, %2767 : tensor<64x512x768xf32>
    %2769 = stablehlo.multiply %2764, %2164 : tensor<64x512x768xf32>
    %2770 = stablehlo.add %2768, %2769 : tensor<64x512x768xf32>
    %2771 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2772 = stablehlo.select %2156, %2770, %2771 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2773 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2774 = stablehlo.divide %2772, %2773 : tensor<64x512x768xf32>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2775 = stablehlo.reduce(%2774 init: %cst_198) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2776 = stablehlo.reshape %2775 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2777 = stablehlo.reduce(%2776 init: %cst_199) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2778 = stablehlo.broadcast_in_dim %2777, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2779 = stablehlo.reduce(%2778 init: %cst_200) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2780 = stablehlo.dot_general %2774, %2148, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2781 = stablehlo.transpose %2780, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2782 = stablehlo.dot_general %2774, %arg46, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2783 = stablehlo.multiply %2129, %2782 : tensor<64x512x3072xf32>
    %2784 = stablehlo.multiply %2782, %2147 : tensor<64x512x3072xf32>
    %2785 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2786 = stablehlo.multiply %2785, %2783 : tensor<64x512x3072xf32>
    %2787 = stablehlo.multiply %2786, %2143 : tensor<64x512x3072xf32>
    %2788 = stablehlo.multiply %2787, %2140 : tensor<64x512x3072xf32>
    %2789 = stablehlo.add %2787, %2788 : tensor<64x512x3072xf32>
    %2790 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2791 = stablehlo.multiply %2790, %2789 : tensor<64x512x3072xf32>
    %2792 = stablehlo.add %2784, %2791 : tensor<64x512x3072xf32>
    %2793 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2794 = stablehlo.multiply %2793, %2791 : tensor<64x512x3072xf32>
    %2795 = stablehlo.multiply %2794, %2134 : tensor<64x512x3072xf32>
    %2796 = stablehlo.add %2792, %2795 : tensor<64x512x3072xf32>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2797 = stablehlo.reduce(%2796 init: %cst_201) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2798 = stablehlo.reshape %2797 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2799 = stablehlo.reduce(%2798 init: %cst_202) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2800 = stablehlo.broadcast_in_dim %2799, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2801 = stablehlo.reduce(%2800 init: %cst_203) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2802 = stablehlo.dot_general %2796, %2124, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2803 = stablehlo.transpose %2802, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2804 = stablehlo.dot_general %2796, %arg50, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2805 = stablehlo.add %2770, %2804 : tensor<64x512x768xf32>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2806 = stablehlo.reduce(%2805 init: %cst_204) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2807 = stablehlo.reshape %2806 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2808 = stablehlo.reshape %2807 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2809 = stablehlo.multiply %2110, %2805 : tensor<64x512x768xf32>
    %2810 = stablehlo.multiply %2805, %2120 : tensor<64x512x768xf32>
    %2811 = stablehlo.broadcast_in_dim %2113, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2812 = stablehlo.multiply %2811, %2809 : tensor<64x512x768xf32>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2813 = stablehlo.reduce(%2812 init: %cst_205) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2814 = stablehlo.reshape %2813 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2815 = stablehlo.broadcast_in_dim %2117, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2816 = stablehlo.multiply %2809, %2815 : tensor<64x512x768xf32>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2817 = stablehlo.reduce(%2816 init: %cst_206) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2818 = stablehlo.reshape %2817 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2819 = stablehlo.reshape %2814 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2820 = stablehlo.multiply %2818, %2116 : tensor<64x512x1xf32>
    %2821 = stablehlo.negate %2810 : tensor<64x512x768xf32>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2822 = stablehlo.reduce(%2821 init: %cst_207) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2823 = stablehlo.reshape %2822 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2824 = stablehlo.reduce(%2820 init: %cst_208) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2825 = stablehlo.reduce(%2823 init: %cst_209) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2826 = stablehlo.multiply %2824, %2106 : tensor<64x512xf32>
    %2827 = stablehlo.negate %2826 : tensor<64x512xf32>
    %2828 = stablehlo.multiply %2827, %2093 : tensor<64x512xf32>
    %2829 = stablehlo.add %2825, %2828 : tensor<64x512xf32>
    %2830 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2831 = stablehlo.divide %2826, %2830 : tensor<64x512xf32>
    %2832 = stablehlo.broadcast_in_dim %2831, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2833 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2834 = stablehlo.divide %2829, %2833 : tensor<64x512xf32>
    %2835 = stablehlo.broadcast_in_dim %2834, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2836 = stablehlo.add %2810, %2835 : tensor<64x512x768xf32>
    %2837 = stablehlo.multiply %2832, %2084 : tensor<64x512x768xf32>
    %2838 = stablehlo.add %2836, %2837 : tensor<64x512x768xf32>
    %2839 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2840 = stablehlo.select %2076, %2838, %2839 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2841 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2842 = stablehlo.divide %2840, %2841 : tensor<64x512x768xf32>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2843 = stablehlo.reduce(%2842 init: %cst_210) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2844 = stablehlo.reshape %2843 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2845 = stablehlo.reduce(%2844 init: %cst_211) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2846 = stablehlo.broadcast_in_dim %2845, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2847 = stablehlo.reduce(%2846 init: %cst_212) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2848 = stablehlo.dot_general %2842, %2068, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2849 = stablehlo.transpose %2848, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2850 = stablehlo.dot_general %2842, %2069, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2851 = stablehlo.reshape %2849 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2852 = stablehlo.transpose %2850, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2853 = stablehlo.dot_general %2852, %2032, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2854 = stablehlo.dot_general %2852, %2066, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2855 = stablehlo.transpose %2854, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2856 = stablehlo.multiply %2853, %2065 : tensor<64x12x512x512xf32>
    %2857 = stablehlo.broadcast_in_dim %2061, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2858 = stablehlo.multiply %2856, %2857 : tensor<64x12x512x512xf32>
    %2859 = stablehlo.multiply %2858, %2054 : tensor<64x12x512x512xf32>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2860 = stablehlo.reduce(%2859 init: %cst_213) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2861 = stablehlo.reshape %2860 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2862 = stablehlo.negate %2861 : tensor<64x12x512x1xf32>
    %2863 = stablehlo.broadcast_in_dim %2056, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2864 = stablehlo.divide %2856, %2863 : tensor<64x12x512x512xf32>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2865 = stablehlo.reduce(%2862 init: %cst_214) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2866 = stablehlo.broadcast_in_dim %2865, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2867 = stablehlo.add %2864, %2866 : tensor<64x12x512x512xf32>
    %2868 = stablehlo.multiply %2867, %2054 : tensor<64x12x512x512xf32>
    %2869 = stablehlo.dot_general %2868, %2044, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2870 = stablehlo.transpose %2869, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2871 = stablehlo.dot_general %2868, %2025, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2872 = stablehlo.transpose %2871, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2873 = stablehlo.broadcast_in_dim %2042, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2874 = stablehlo.divide %2872, %2873 : tensor<64x512x12x64xf32>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2875 = stablehlo.reduce(%2855 init: %cst_215) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2876 = stablehlo.reshape %2875 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2877 = stablehlo.reduce(%2876 init: %cst_216) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2878 = stablehlo.broadcast_in_dim %2877, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2879 = stablehlo.reduce(%2878 init: %cst_217) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2880 = stablehlo.reshape %2879 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2881 = stablehlo.dot_general %2855, %2011, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2882 = stablehlo.transpose %2881, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2883 = stablehlo.dot_general %2855, %2026, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2884 = stablehlo.add %2838, %2883 : tensor<64x512x768xf32>
    %2885 = stablehlo.reshape %2882 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2886 = stablehlo.reduce(%2870 init: %cst_218) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2887 = stablehlo.reshape %2886 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2888 = stablehlo.reduce(%2887 init: %cst_219) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2889 = stablehlo.broadcast_in_dim %2888, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2890 = stablehlo.reduce(%2889 init: %cst_220) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2891 = stablehlo.reshape %2890 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2892 = stablehlo.dot_general %2870, %2011, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2893 = stablehlo.transpose %2892, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2894 = stablehlo.dot_general %2870, %2019, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2895 = stablehlo.add %2884, %2894 : tensor<64x512x768xf32>
    %2896 = stablehlo.reshape %2893 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2897 = stablehlo.reduce(%2874 init: %cst_221) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2898 = stablehlo.reshape %2897 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2899 = stablehlo.reduce(%2898 init: %cst_222) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2900 = stablehlo.broadcast_in_dim %2899, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2901 = stablehlo.reduce(%2900 init: %cst_223) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2902 = stablehlo.reshape %2901 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2903 = stablehlo.dot_general %2874, %2011, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2904 = stablehlo.transpose %2903, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2905 = stablehlo.dot_general %2874, %2012, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2906 = stablehlo.add %2895, %2905 : tensor<64x512x768xf32>
    %2907 = stablehlo.reshape %2904 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2908 = stablehlo.reduce(%2906 init: %cst_224) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2909 = stablehlo.reshape %2908 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2910 = stablehlo.reshape %2909 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2911 = stablehlo.multiply %1997, %2906 : tensor<64x512x768xf32>
    %2912 = stablehlo.multiply %2906, %2007 : tensor<64x512x768xf32>
    %2913 = stablehlo.broadcast_in_dim %2000, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2914 = stablehlo.multiply %2913, %2911 : tensor<64x512x768xf32>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2915 = stablehlo.reduce(%2914 init: %cst_225) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2916 = stablehlo.reshape %2915 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2917 = stablehlo.broadcast_in_dim %2004, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2918 = stablehlo.multiply %2911, %2917 : tensor<64x512x768xf32>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2919 = stablehlo.reduce(%2918 init: %cst_226) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2920 = stablehlo.reshape %2919 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2921 = stablehlo.reshape %2916 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2922 = stablehlo.multiply %2920, %2003 : tensor<64x512x1xf32>
    %2923 = stablehlo.negate %2912 : tensor<64x512x768xf32>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2924 = stablehlo.reduce(%2923 init: %cst_227) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2925 = stablehlo.reshape %2924 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2926 = stablehlo.reduce(%2922 init: %cst_228) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2927 = stablehlo.reduce(%2925 init: %cst_229) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2928 = stablehlo.multiply %2926, %1993 : tensor<64x512xf32>
    %2929 = stablehlo.negate %2928 : tensor<64x512xf32>
    %2930 = stablehlo.multiply %2929, %1980 : tensor<64x512xf32>
    %2931 = stablehlo.add %2927, %2930 : tensor<64x512xf32>
    %2932 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2933 = stablehlo.divide %2928, %2932 : tensor<64x512xf32>
    %2934 = stablehlo.broadcast_in_dim %2933, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2935 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2936 = stablehlo.divide %2931, %2935 : tensor<64x512xf32>
    %2937 = stablehlo.broadcast_in_dim %2936, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2938 = stablehlo.add %2912, %2937 : tensor<64x512x768xf32>
    %2939 = stablehlo.multiply %2934, %1971 : tensor<64x512x768xf32>
    %2940 = stablehlo.add %2938, %2939 : tensor<64x512x768xf32>
    %2941 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2942 = stablehlo.select %1963, %2940, %2941 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2943 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2944 = stablehlo.divide %2942, %2943 : tensor<64x512x768xf32>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2945 = stablehlo.reduce(%2944 init: %cst_230) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2946 = stablehlo.reshape %2945 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2947 = stablehlo.reduce(%2946 init: %cst_231) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2948 = stablehlo.broadcast_in_dim %2947, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2949 = stablehlo.reduce(%2948 init: %cst_232) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2950 = stablehlo.dot_general %2944, %1955, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2951 = stablehlo.transpose %2950, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2952 = stablehlo.dot_general %2944, %arg190, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2953 = stablehlo.multiply %1936, %2952 : tensor<64x512x3072xf32>
    %2954 = stablehlo.multiply %2952, %1954 : tensor<64x512x3072xf32>
    %2955 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2956 = stablehlo.multiply %2955, %2953 : tensor<64x512x3072xf32>
    %2957 = stablehlo.multiply %2956, %1950 : tensor<64x512x3072xf32>
    %2958 = stablehlo.multiply %2957, %1947 : tensor<64x512x3072xf32>
    %2959 = stablehlo.add %2957, %2958 : tensor<64x512x3072xf32>
    %2960 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2961 = stablehlo.multiply %2960, %2959 : tensor<64x512x3072xf32>
    %2962 = stablehlo.add %2954, %2961 : tensor<64x512x3072xf32>
    %2963 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2964 = stablehlo.multiply %2963, %2961 : tensor<64x512x3072xf32>
    %2965 = stablehlo.multiply %2964, %1941 : tensor<64x512x3072xf32>
    %2966 = stablehlo.add %2962, %2965 : tensor<64x512x3072xf32>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2967 = stablehlo.reduce(%2966 init: %cst_233) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2968 = stablehlo.reshape %2967 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2969 = stablehlo.reduce(%2968 init: %cst_234) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2970 = stablehlo.broadcast_in_dim %2969, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2971 = stablehlo.reduce(%2970 init: %cst_235) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2972 = stablehlo.dot_general %2966, %1931, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2973 = stablehlo.transpose %2972, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2974 = stablehlo.dot_general %2966, %arg194, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2975 = stablehlo.add %2940, %2974 : tensor<64x512x768xf32>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2976 = stablehlo.reduce(%2975 init: %cst_236) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2977 = stablehlo.reshape %2976 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2978 = stablehlo.reshape %2977 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2979 = stablehlo.multiply %1917, %2975 : tensor<64x512x768xf32>
    %2980 = stablehlo.multiply %2975, %1927 : tensor<64x512x768xf32>
    %2981 = stablehlo.broadcast_in_dim %1920, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2982 = stablehlo.multiply %2981, %2979 : tensor<64x512x768xf32>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2983 = stablehlo.reduce(%2982 init: %cst_237) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2984 = stablehlo.reshape %2983 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2985 = stablehlo.broadcast_in_dim %1924, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2986 = stablehlo.multiply %2979, %2985 : tensor<64x512x768xf32>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2987 = stablehlo.reduce(%2986 init: %cst_238) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2988 = stablehlo.reshape %2987 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2989 = stablehlo.reshape %2984 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2990 = stablehlo.multiply %2988, %1923 : tensor<64x512x1xf32>
    %2991 = stablehlo.negate %2980 : tensor<64x512x768xf32>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2992 = stablehlo.reduce(%2991 init: %cst_239) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2993 = stablehlo.reshape %2992 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2994 = stablehlo.reduce(%2990 init: %cst_240) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2995 = stablehlo.reduce(%2993 init: %cst_241) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2996 = stablehlo.multiply %2994, %1913 : tensor<64x512xf32>
    %2997 = stablehlo.negate %2996 : tensor<64x512xf32>
    %2998 = stablehlo.multiply %2997, %1900 : tensor<64x512xf32>
    %2999 = stablehlo.add %2995, %2998 : tensor<64x512xf32>
    %3000 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3001 = stablehlo.divide %2996, %3000 : tensor<64x512xf32>
    %3002 = stablehlo.broadcast_in_dim %3001, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3003 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3004 = stablehlo.divide %2999, %3003 : tensor<64x512xf32>
    %3005 = stablehlo.broadcast_in_dim %3004, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3006 = stablehlo.add %2980, %3005 : tensor<64x512x768xf32>
    %3007 = stablehlo.multiply %3002, %1891 : tensor<64x512x768xf32>
    %3008 = stablehlo.add %3006, %3007 : tensor<64x512x768xf32>
    %3009 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3010 = stablehlo.select %1883, %3008, %3009 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3011 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3012 = stablehlo.divide %3010, %3011 : tensor<64x512x768xf32>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3013 = stablehlo.reduce(%3012 init: %cst_242) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3014 = stablehlo.reshape %3013 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3015 = stablehlo.reduce(%3014 init: %cst_243) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3016 = stablehlo.broadcast_in_dim %3015, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3017 = stablehlo.reduce(%3016 init: %cst_244) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3018 = stablehlo.dot_general %3012, %1875, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3019 = stablehlo.transpose %3018, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3020 = stablehlo.dot_general %3012, %1876, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3021 = stablehlo.reshape %3019 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3022 = stablehlo.transpose %3020, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3023 = stablehlo.dot_general %3022, %1839, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3024 = stablehlo.dot_general %3022, %1873, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3025 = stablehlo.transpose %3024, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3026 = stablehlo.multiply %3023, %1872 : tensor<64x12x512x512xf32>
    %3027 = stablehlo.broadcast_in_dim %1868, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3028 = stablehlo.multiply %3026, %3027 : tensor<64x12x512x512xf32>
    %3029 = stablehlo.multiply %3028, %1861 : tensor<64x12x512x512xf32>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3030 = stablehlo.reduce(%3029 init: %cst_245) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3031 = stablehlo.reshape %3030 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3032 = stablehlo.negate %3031 : tensor<64x12x512x1xf32>
    %3033 = stablehlo.broadcast_in_dim %1863, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3034 = stablehlo.divide %3026, %3033 : tensor<64x12x512x512xf32>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3035 = stablehlo.reduce(%3032 init: %cst_246) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3036 = stablehlo.broadcast_in_dim %3035, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3037 = stablehlo.add %3034, %3036 : tensor<64x12x512x512xf32>
    %3038 = stablehlo.multiply %3037, %1861 : tensor<64x12x512x512xf32>
    %3039 = stablehlo.dot_general %3038, %1851, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3040 = stablehlo.transpose %3039, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3041 = stablehlo.dot_general %3038, %1832, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3042 = stablehlo.transpose %3041, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3043 = stablehlo.broadcast_in_dim %1849, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3044 = stablehlo.divide %3042, %3043 : tensor<64x512x12x64xf32>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3045 = stablehlo.reduce(%3025 init: %cst_247) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3046 = stablehlo.reshape %3045 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3047 = stablehlo.reduce(%3046 init: %cst_248) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3048 = stablehlo.broadcast_in_dim %3047, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3049 = stablehlo.reduce(%3048 init: %cst_249) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3050 = stablehlo.reshape %3049 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3051 = stablehlo.dot_general %3025, %1818, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3052 = stablehlo.transpose %3051, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3053 = stablehlo.dot_general %3025, %1833, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3054 = stablehlo.add %3008, %3053 : tensor<64x512x768xf32>
    %3055 = stablehlo.reshape %3052 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3056 = stablehlo.reduce(%3040 init: %cst_250) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3057 = stablehlo.reshape %3056 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3058 = stablehlo.reduce(%3057 init: %cst_251) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3059 = stablehlo.broadcast_in_dim %3058, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3060 = stablehlo.reduce(%3059 init: %cst_252) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3061 = stablehlo.reshape %3060 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3062 = stablehlo.dot_general %3040, %1818, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3063 = stablehlo.transpose %3062, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3064 = stablehlo.dot_general %3040, %1826, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3065 = stablehlo.add %3054, %3064 : tensor<64x512x768xf32>
    %3066 = stablehlo.reshape %3063 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3067 = stablehlo.reduce(%3044 init: %cst_253) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3068 = stablehlo.reshape %3067 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3069 = stablehlo.reduce(%3068 init: %cst_254) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3070 = stablehlo.broadcast_in_dim %3069, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3071 = stablehlo.reduce(%3070 init: %cst_255) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3072 = stablehlo.reshape %3071 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3073 = stablehlo.dot_general %3044, %1818, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3074 = stablehlo.transpose %3073, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3075 = stablehlo.dot_general %3044, %1819, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3076 = stablehlo.add %3065, %3075 : tensor<64x512x768xf32>
    %3077 = stablehlo.reshape %3074 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3078 = stablehlo.reduce(%3076 init: %cst_256) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3079 = stablehlo.reshape %3078 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3080 = stablehlo.reshape %3079 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3081 = stablehlo.multiply %1804, %3076 : tensor<64x512x768xf32>
    %3082 = stablehlo.multiply %3076, %1814 : tensor<64x512x768xf32>
    %3083 = stablehlo.broadcast_in_dim %1807, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3084 = stablehlo.multiply %3083, %3081 : tensor<64x512x768xf32>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3085 = stablehlo.reduce(%3084 init: %cst_257) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3086 = stablehlo.reshape %3085 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3087 = stablehlo.broadcast_in_dim %1811, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3088 = stablehlo.multiply %3081, %3087 : tensor<64x512x768xf32>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3089 = stablehlo.reduce(%3088 init: %cst_258) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3090 = stablehlo.reshape %3089 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3091 = stablehlo.reshape %3086 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3092 = stablehlo.multiply %3090, %1810 : tensor<64x512x1xf32>
    %3093 = stablehlo.negate %3082 : tensor<64x512x768xf32>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3094 = stablehlo.reduce(%3093 init: %cst_259) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3095 = stablehlo.reshape %3094 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3096 = stablehlo.reduce(%3092 init: %cst_260) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3097 = stablehlo.reduce(%3095 init: %cst_261) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3098 = stablehlo.multiply %3096, %1800 : tensor<64x512xf32>
    %3099 = stablehlo.negate %3098 : tensor<64x512xf32>
    %3100 = stablehlo.multiply %3099, %1787 : tensor<64x512xf32>
    %3101 = stablehlo.add %3097, %3100 : tensor<64x512xf32>
    %3102 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3103 = stablehlo.divide %3098, %3102 : tensor<64x512xf32>
    %3104 = stablehlo.broadcast_in_dim %3103, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3105 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3106 = stablehlo.divide %3101, %3105 : tensor<64x512xf32>
    %3107 = stablehlo.broadcast_in_dim %3106, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3108 = stablehlo.add %3082, %3107 : tensor<64x512x768xf32>
    %3109 = stablehlo.multiply %3104, %1778 : tensor<64x512x768xf32>
    %3110 = stablehlo.add %3108, %3109 : tensor<64x512x768xf32>
    %3111 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3112 = stablehlo.select %1770, %3110, %3111 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3113 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3114 = stablehlo.divide %3112, %3113 : tensor<64x512x768xf32>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3115 = stablehlo.reduce(%3114 init: %cst_262) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3116 = stablehlo.reshape %3115 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3117 = stablehlo.reduce(%3116 init: %cst_263) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3118 = stablehlo.broadcast_in_dim %3117, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3119 = stablehlo.reduce(%3118 init: %cst_264) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3120 = stablehlo.dot_general %3114, %1762, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3121 = stablehlo.transpose %3120, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3122 = stablehlo.dot_general %3114, %arg174, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3123 = stablehlo.multiply %1743, %3122 : tensor<64x512x3072xf32>
    %3124 = stablehlo.multiply %3122, %1761 : tensor<64x512x3072xf32>
    %3125 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3126 = stablehlo.multiply %3125, %3123 : tensor<64x512x3072xf32>
    %3127 = stablehlo.multiply %3126, %1757 : tensor<64x512x3072xf32>
    %3128 = stablehlo.multiply %3127, %1754 : tensor<64x512x3072xf32>
    %3129 = stablehlo.add %3127, %3128 : tensor<64x512x3072xf32>
    %3130 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3131 = stablehlo.multiply %3130, %3129 : tensor<64x512x3072xf32>
    %3132 = stablehlo.add %3124, %3131 : tensor<64x512x3072xf32>
    %3133 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3134 = stablehlo.multiply %3133, %3131 : tensor<64x512x3072xf32>
    %3135 = stablehlo.multiply %3134, %1748 : tensor<64x512x3072xf32>
    %3136 = stablehlo.add %3132, %3135 : tensor<64x512x3072xf32>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3137 = stablehlo.reduce(%3136 init: %cst_265) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3138 = stablehlo.reshape %3137 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3139 = stablehlo.reduce(%3138 init: %cst_266) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3140 = stablehlo.broadcast_in_dim %3139, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3141 = stablehlo.reduce(%3140 init: %cst_267) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3142 = stablehlo.dot_general %3136, %1738, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3143 = stablehlo.transpose %3142, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3144 = stablehlo.dot_general %3136, %arg178, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3145 = stablehlo.add %3110, %3144 : tensor<64x512x768xf32>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3146 = stablehlo.reduce(%3145 init: %cst_268) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3147 = stablehlo.reshape %3146 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3148 = stablehlo.reshape %3147 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3149 = stablehlo.multiply %1724, %3145 : tensor<64x512x768xf32>
    %3150 = stablehlo.multiply %3145, %1734 : tensor<64x512x768xf32>
    %3151 = stablehlo.broadcast_in_dim %1727, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3152 = stablehlo.multiply %3151, %3149 : tensor<64x512x768xf32>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3153 = stablehlo.reduce(%3152 init: %cst_269) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3154 = stablehlo.reshape %3153 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3155 = stablehlo.broadcast_in_dim %1731, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3156 = stablehlo.multiply %3149, %3155 : tensor<64x512x768xf32>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3157 = stablehlo.reduce(%3156 init: %cst_270) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3158 = stablehlo.reshape %3157 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3159 = stablehlo.reshape %3154 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3160 = stablehlo.multiply %3158, %1730 : tensor<64x512x1xf32>
    %3161 = stablehlo.negate %3150 : tensor<64x512x768xf32>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3162 = stablehlo.reduce(%3161 init: %cst_271) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3163 = stablehlo.reshape %3162 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3164 = stablehlo.reduce(%3160 init: %cst_272) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3165 = stablehlo.reduce(%3163 init: %cst_273) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3166 = stablehlo.multiply %3164, %1720 : tensor<64x512xf32>
    %3167 = stablehlo.negate %3166 : tensor<64x512xf32>
    %3168 = stablehlo.multiply %3167, %1707 : tensor<64x512xf32>
    %3169 = stablehlo.add %3165, %3168 : tensor<64x512xf32>
    %3170 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3171 = stablehlo.divide %3166, %3170 : tensor<64x512xf32>
    %3172 = stablehlo.broadcast_in_dim %3171, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3173 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3174 = stablehlo.divide %3169, %3173 : tensor<64x512xf32>
    %3175 = stablehlo.broadcast_in_dim %3174, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3176 = stablehlo.add %3150, %3175 : tensor<64x512x768xf32>
    %3177 = stablehlo.multiply %3172, %1698 : tensor<64x512x768xf32>
    %3178 = stablehlo.add %3176, %3177 : tensor<64x512x768xf32>
    %3179 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3180 = stablehlo.select %1690, %3178, %3179 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3181 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3182 = stablehlo.divide %3180, %3181 : tensor<64x512x768xf32>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3183 = stablehlo.reduce(%3182 init: %cst_274) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3184 = stablehlo.reshape %3183 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3185 = stablehlo.reduce(%3184 init: %cst_275) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3186 = stablehlo.broadcast_in_dim %3185, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3187 = stablehlo.reduce(%3186 init: %cst_276) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3188 = stablehlo.dot_general %3182, %1682, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3189 = stablehlo.transpose %3188, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3190 = stablehlo.dot_general %3182, %1683, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3191 = stablehlo.reshape %3189 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3192 = stablehlo.transpose %3190, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3193 = stablehlo.dot_general %3192, %1646, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3194 = stablehlo.dot_general %3192, %1680, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3195 = stablehlo.transpose %3194, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3196 = stablehlo.multiply %3193, %1679 : tensor<64x12x512x512xf32>
    %3197 = stablehlo.broadcast_in_dim %1675, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3198 = stablehlo.multiply %3196, %3197 : tensor<64x12x512x512xf32>
    %3199 = stablehlo.multiply %3198, %1668 : tensor<64x12x512x512xf32>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3200 = stablehlo.reduce(%3199 init: %cst_277) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3201 = stablehlo.reshape %3200 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3202 = stablehlo.negate %3201 : tensor<64x12x512x1xf32>
    %3203 = stablehlo.broadcast_in_dim %1670, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3204 = stablehlo.divide %3196, %3203 : tensor<64x12x512x512xf32>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3205 = stablehlo.reduce(%3202 init: %cst_278) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3206 = stablehlo.broadcast_in_dim %3205, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3207 = stablehlo.add %3204, %3206 : tensor<64x12x512x512xf32>
    %3208 = stablehlo.multiply %3207, %1668 : tensor<64x12x512x512xf32>
    %3209 = stablehlo.dot_general %3208, %1658, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3210 = stablehlo.transpose %3209, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3211 = stablehlo.dot_general %3208, %1639, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3212 = stablehlo.transpose %3211, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3213 = stablehlo.broadcast_in_dim %1656, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3214 = stablehlo.divide %3212, %3213 : tensor<64x512x12x64xf32>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3215 = stablehlo.reduce(%3195 init: %cst_279) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3216 = stablehlo.reshape %3215 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3217 = stablehlo.reduce(%3216 init: %cst_280) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3218 = stablehlo.broadcast_in_dim %3217, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3219 = stablehlo.reduce(%3218 init: %cst_281) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3220 = stablehlo.reshape %3219 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3221 = stablehlo.dot_general %3195, %1625, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3222 = stablehlo.transpose %3221, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3223 = stablehlo.dot_general %3195, %1640, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3224 = stablehlo.add %3178, %3223 : tensor<64x512x768xf32>
    %3225 = stablehlo.reshape %3222 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3226 = stablehlo.reduce(%3210 init: %cst_282) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3227 = stablehlo.reshape %3226 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3228 = stablehlo.reduce(%3227 init: %cst_283) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3229 = stablehlo.broadcast_in_dim %3228, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3230 = stablehlo.reduce(%3229 init: %cst_284) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3231 = stablehlo.reshape %3230 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3232 = stablehlo.dot_general %3210, %1625, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3233 = stablehlo.transpose %3232, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3234 = stablehlo.dot_general %3210, %1633, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3235 = stablehlo.add %3224, %3234 : tensor<64x512x768xf32>
    %3236 = stablehlo.reshape %3233 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3237 = stablehlo.reduce(%3214 init: %cst_285) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3238 = stablehlo.reshape %3237 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3239 = stablehlo.reduce(%3238 init: %cst_286) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3240 = stablehlo.broadcast_in_dim %3239, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3241 = stablehlo.reduce(%3240 init: %cst_287) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3242 = stablehlo.reshape %3241 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3243 = stablehlo.dot_general %3214, %1625, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3244 = stablehlo.transpose %3243, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3245 = stablehlo.dot_general %3214, %1626, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3246 = stablehlo.add %3235, %3245 : tensor<64x512x768xf32>
    %3247 = stablehlo.reshape %3244 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3248 = stablehlo.reduce(%3246 init: %cst_288) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3249 = stablehlo.reshape %3248 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3250 = stablehlo.reshape %3249 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3251 = stablehlo.multiply %1611, %3246 : tensor<64x512x768xf32>
    %3252 = stablehlo.multiply %3246, %1621 : tensor<64x512x768xf32>
    %3253 = stablehlo.broadcast_in_dim %1614, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3254 = stablehlo.multiply %3253, %3251 : tensor<64x512x768xf32>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3255 = stablehlo.reduce(%3254 init: %cst_289) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3256 = stablehlo.reshape %3255 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3257 = stablehlo.broadcast_in_dim %1618, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3258 = stablehlo.multiply %3251, %3257 : tensor<64x512x768xf32>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3259 = stablehlo.reduce(%3258 init: %cst_290) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3260 = stablehlo.reshape %3259 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3261 = stablehlo.reshape %3256 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3262 = stablehlo.multiply %3260, %1617 : tensor<64x512x1xf32>
    %3263 = stablehlo.negate %3252 : tensor<64x512x768xf32>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3264 = stablehlo.reduce(%3263 init: %cst_291) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3265 = stablehlo.reshape %3264 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3266 = stablehlo.reduce(%3262 init: %cst_292) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3267 = stablehlo.reduce(%3265 init: %cst_293) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3268 = stablehlo.multiply %3266, %1607 : tensor<64x512xf32>
    %3269 = stablehlo.negate %3268 : tensor<64x512xf32>
    %3270 = stablehlo.multiply %3269, %1594 : tensor<64x512xf32>
    %3271 = stablehlo.add %3267, %3270 : tensor<64x512xf32>
    %3272 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3273 = stablehlo.divide %3268, %3272 : tensor<64x512xf32>
    %3274 = stablehlo.broadcast_in_dim %3273, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3275 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3276 = stablehlo.divide %3271, %3275 : tensor<64x512xf32>
    %3277 = stablehlo.broadcast_in_dim %3276, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3278 = stablehlo.add %3252, %3277 : tensor<64x512x768xf32>
    %3279 = stablehlo.multiply %3274, %1585 : tensor<64x512x768xf32>
    %3280 = stablehlo.add %3278, %3279 : tensor<64x512x768xf32>
    %3281 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3282 = stablehlo.select %1577, %3280, %3281 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3283 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3284 = stablehlo.divide %3282, %3283 : tensor<64x512x768xf32>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3285 = stablehlo.reduce(%3284 init: %cst_294) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3286 = stablehlo.reshape %3285 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3287 = stablehlo.reduce(%3286 init: %cst_295) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3288 = stablehlo.broadcast_in_dim %3287, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3289 = stablehlo.reduce(%3288 init: %cst_296) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3290 = stablehlo.dot_general %3284, %1569, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3291 = stablehlo.transpose %3290, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3292 = stablehlo.dot_general %3284, %arg158, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3293 = stablehlo.multiply %1550, %3292 : tensor<64x512x3072xf32>
    %3294 = stablehlo.multiply %3292, %1568 : tensor<64x512x3072xf32>
    %3295 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3296 = stablehlo.multiply %3295, %3293 : tensor<64x512x3072xf32>
    %3297 = stablehlo.multiply %3296, %1564 : tensor<64x512x3072xf32>
    %3298 = stablehlo.multiply %3297, %1561 : tensor<64x512x3072xf32>
    %3299 = stablehlo.add %3297, %3298 : tensor<64x512x3072xf32>
    %3300 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3301 = stablehlo.multiply %3300, %3299 : tensor<64x512x3072xf32>
    %3302 = stablehlo.add %3294, %3301 : tensor<64x512x3072xf32>
    %3303 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3304 = stablehlo.multiply %3303, %3301 : tensor<64x512x3072xf32>
    %3305 = stablehlo.multiply %3304, %1555 : tensor<64x512x3072xf32>
    %3306 = stablehlo.add %3302, %3305 : tensor<64x512x3072xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3307 = stablehlo.reduce(%3306 init: %cst_297) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3308 = stablehlo.reshape %3307 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3309 = stablehlo.reduce(%3308 init: %cst_298) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3310 = stablehlo.broadcast_in_dim %3309, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3311 = stablehlo.reduce(%3310 init: %cst_299) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3312 = stablehlo.dot_general %3306, %1545, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3313 = stablehlo.transpose %3312, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3314 = stablehlo.dot_general %3306, %arg162, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3315 = stablehlo.add %3280, %3314 : tensor<64x512x768xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3316 = stablehlo.reduce(%3315 init: %cst_300) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3317 = stablehlo.reshape %3316 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3318 = stablehlo.reshape %3317 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3319 = stablehlo.multiply %1531, %3315 : tensor<64x512x768xf32>
    %3320 = stablehlo.multiply %3315, %1541 : tensor<64x512x768xf32>
    %3321 = stablehlo.broadcast_in_dim %1534, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3322 = stablehlo.multiply %3321, %3319 : tensor<64x512x768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3323 = stablehlo.reduce(%3322 init: %cst_301) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3324 = stablehlo.reshape %3323 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3325 = stablehlo.broadcast_in_dim %1538, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3326 = stablehlo.multiply %3319, %3325 : tensor<64x512x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3327 = stablehlo.reduce(%3326 init: %cst_302) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3328 = stablehlo.reshape %3327 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3329 = stablehlo.reshape %3324 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3330 = stablehlo.multiply %3328, %1537 : tensor<64x512x1xf32>
    %3331 = stablehlo.negate %3320 : tensor<64x512x768xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3332 = stablehlo.reduce(%3331 init: %cst_303) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3333 = stablehlo.reshape %3332 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3334 = stablehlo.reduce(%3330 init: %cst_304) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3335 = stablehlo.reduce(%3333 init: %cst_305) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3336 = stablehlo.multiply %3334, %1527 : tensor<64x512xf32>
    %3337 = stablehlo.negate %3336 : tensor<64x512xf32>
    %3338 = stablehlo.multiply %3337, %1514 : tensor<64x512xf32>
    %3339 = stablehlo.add %3335, %3338 : tensor<64x512xf32>
    %3340 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3341 = stablehlo.divide %3336, %3340 : tensor<64x512xf32>
    %3342 = stablehlo.broadcast_in_dim %3341, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3343 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3344 = stablehlo.divide %3339, %3343 : tensor<64x512xf32>
    %3345 = stablehlo.broadcast_in_dim %3344, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3346 = stablehlo.add %3320, %3345 : tensor<64x512x768xf32>
    %3347 = stablehlo.multiply %3342, %1505 : tensor<64x512x768xf32>
    %3348 = stablehlo.add %3346, %3347 : tensor<64x512x768xf32>
    %3349 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3350 = stablehlo.select %1497, %3348, %3349 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3351 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3352 = stablehlo.divide %3350, %3351 : tensor<64x512x768xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3353 = stablehlo.reduce(%3352 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3354 = stablehlo.reshape %3353 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3355 = stablehlo.reduce(%3354 init: %cst_307) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3356 = stablehlo.broadcast_in_dim %3355, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3357 = stablehlo.reduce(%3356 init: %cst_308) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3358 = stablehlo.dot_general %3352, %1489, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3359 = stablehlo.transpose %3358, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3360 = stablehlo.dot_general %3352, %1490, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3361 = stablehlo.reshape %3359 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3362 = stablehlo.transpose %3360, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3363 = stablehlo.dot_general %3362, %1453, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3364 = stablehlo.dot_general %3362, %1487, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3365 = stablehlo.transpose %3364, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3366 = stablehlo.multiply %3363, %1486 : tensor<64x12x512x512xf32>
    %3367 = stablehlo.broadcast_in_dim %1482, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3368 = stablehlo.multiply %3366, %3367 : tensor<64x12x512x512xf32>
    %3369 = stablehlo.multiply %3368, %1475 : tensor<64x12x512x512xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3370 = stablehlo.reduce(%3369 init: %cst_309) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3371 = stablehlo.reshape %3370 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3372 = stablehlo.negate %3371 : tensor<64x12x512x1xf32>
    %3373 = stablehlo.broadcast_in_dim %1477, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3374 = stablehlo.divide %3366, %3373 : tensor<64x12x512x512xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3375 = stablehlo.reduce(%3372 init: %cst_310) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3376 = stablehlo.broadcast_in_dim %3375, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3377 = stablehlo.add %3374, %3376 : tensor<64x12x512x512xf32>
    %3378 = stablehlo.multiply %3377, %1475 : tensor<64x12x512x512xf32>
    %3379 = stablehlo.dot_general %3378, %1465, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3380 = stablehlo.transpose %3379, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3381 = stablehlo.dot_general %3378, %1446, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3382 = stablehlo.transpose %3381, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3383 = stablehlo.broadcast_in_dim %1463, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3384 = stablehlo.divide %3382, %3383 : tensor<64x512x12x64xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3385 = stablehlo.reduce(%3365 init: %cst_311) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3386 = stablehlo.reshape %3385 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3387 = stablehlo.reduce(%3386 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3388 = stablehlo.broadcast_in_dim %3387, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3389 = stablehlo.reduce(%3388 init: %cst_313) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3390 = stablehlo.reshape %3389 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3391 = stablehlo.dot_general %3365, %1432, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3392 = stablehlo.transpose %3391, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3393 = stablehlo.dot_general %3365, %1447, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3394 = stablehlo.add %3348, %3393 : tensor<64x512x768xf32>
    %3395 = stablehlo.reshape %3392 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3396 = stablehlo.reduce(%3380 init: %cst_314) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3397 = stablehlo.reshape %3396 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3398 = stablehlo.reduce(%3397 init: %cst_315) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3399 = stablehlo.broadcast_in_dim %3398, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3400 = stablehlo.reduce(%3399 init: %cst_316) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3401 = stablehlo.reshape %3400 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3402 = stablehlo.dot_general %3380, %1432, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3403 = stablehlo.transpose %3402, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3404 = stablehlo.dot_general %3380, %1440, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3405 = stablehlo.add %3394, %3404 : tensor<64x512x768xf32>
    %3406 = stablehlo.reshape %3403 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3407 = stablehlo.reduce(%3384 init: %cst_317) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3408 = stablehlo.reshape %3407 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3409 = stablehlo.reduce(%3408 init: %cst_318) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3410 = stablehlo.broadcast_in_dim %3409, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3411 = stablehlo.reduce(%3410 init: %cst_319) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3412 = stablehlo.reshape %3411 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3413 = stablehlo.dot_general %3384, %1432, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3414 = stablehlo.transpose %3413, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3415 = stablehlo.dot_general %3384, %1433, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3416 = stablehlo.add %3405, %3415 : tensor<64x512x768xf32>
    %3417 = stablehlo.reshape %3414 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3418 = stablehlo.reduce(%3416 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3419 = stablehlo.reshape %3418 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3420 = stablehlo.reshape %3419 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3421 = stablehlo.multiply %1418, %3416 : tensor<64x512x768xf32>
    %3422 = stablehlo.multiply %3416, %1428 : tensor<64x512x768xf32>
    %3423 = stablehlo.broadcast_in_dim %1421, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3424 = stablehlo.multiply %3423, %3421 : tensor<64x512x768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3425 = stablehlo.reduce(%3424 init: %cst_321) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3426 = stablehlo.reshape %3425 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3427 = stablehlo.broadcast_in_dim %1425, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3428 = stablehlo.multiply %3421, %3427 : tensor<64x512x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3429 = stablehlo.reduce(%3428 init: %cst_322) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3430 = stablehlo.reshape %3429 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3431 = stablehlo.reshape %3426 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3432 = stablehlo.multiply %3430, %1424 : tensor<64x512x1xf32>
    %3433 = stablehlo.negate %3422 : tensor<64x512x768xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3434 = stablehlo.reduce(%3433 init: %cst_323) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3435 = stablehlo.reshape %3434 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3436 = stablehlo.reduce(%3432 init: %cst_324) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3437 = stablehlo.reduce(%3435 init: %cst_325) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3438 = stablehlo.multiply %3436, %1414 : tensor<64x512xf32>
    %3439 = stablehlo.negate %3438 : tensor<64x512xf32>
    %3440 = stablehlo.multiply %3439, %1401 : tensor<64x512xf32>
    %3441 = stablehlo.add %3437, %3440 : tensor<64x512xf32>
    %3442 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3443 = stablehlo.divide %3438, %3442 : tensor<64x512xf32>
    %3444 = stablehlo.broadcast_in_dim %3443, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3445 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3446 = stablehlo.divide %3441, %3445 : tensor<64x512xf32>
    %3447 = stablehlo.broadcast_in_dim %3446, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3448 = stablehlo.add %3422, %3447 : tensor<64x512x768xf32>
    %3449 = stablehlo.multiply %3444, %1392 : tensor<64x512x768xf32>
    %3450 = stablehlo.add %3448, %3449 : tensor<64x512x768xf32>
    %3451 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3452 = stablehlo.select %1384, %3450, %3451 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3453 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3454 = stablehlo.divide %3452, %3453 : tensor<64x512x768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3455 = stablehlo.reduce(%3454 init: %cst_326) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3456 = stablehlo.reshape %3455 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3457 = stablehlo.reduce(%3456 init: %cst_327) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3458 = stablehlo.broadcast_in_dim %3457, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3459 = stablehlo.reduce(%3458 init: %cst_328) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3460 = stablehlo.dot_general %3454, %1376, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3461 = stablehlo.transpose %3460, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3462 = stablehlo.dot_general %3454, %arg142, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3463 = stablehlo.multiply %1357, %3462 : tensor<64x512x3072xf32>
    %3464 = stablehlo.multiply %3462, %1375 : tensor<64x512x3072xf32>
    %3465 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3466 = stablehlo.multiply %3465, %3463 : tensor<64x512x3072xf32>
    %3467 = stablehlo.multiply %3466, %1371 : tensor<64x512x3072xf32>
    %3468 = stablehlo.multiply %3467, %1368 : tensor<64x512x3072xf32>
    %3469 = stablehlo.add %3467, %3468 : tensor<64x512x3072xf32>
    %3470 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3471 = stablehlo.multiply %3470, %3469 : tensor<64x512x3072xf32>
    %3472 = stablehlo.add %3464, %3471 : tensor<64x512x3072xf32>
    %3473 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3474 = stablehlo.multiply %3473, %3471 : tensor<64x512x3072xf32>
    %3475 = stablehlo.multiply %3474, %1362 : tensor<64x512x3072xf32>
    %3476 = stablehlo.add %3472, %3475 : tensor<64x512x3072xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3477 = stablehlo.reduce(%3476 init: %cst_329) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3478 = stablehlo.reshape %3477 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3479 = stablehlo.reduce(%3478 init: %cst_330) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3480 = stablehlo.broadcast_in_dim %3479, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3481 = stablehlo.reduce(%3480 init: %cst_331) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3482 = stablehlo.dot_general %3476, %1352, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3483 = stablehlo.transpose %3482, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3484 = stablehlo.dot_general %3476, %arg146, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3485 = stablehlo.add %3450, %3484 : tensor<64x512x768xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3486 = stablehlo.reduce(%3485 init: %cst_332) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3487 = stablehlo.reshape %3486 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3488 = stablehlo.reshape %3487 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3489 = stablehlo.multiply %1338, %3485 : tensor<64x512x768xf32>
    %3490 = stablehlo.multiply %3485, %1348 : tensor<64x512x768xf32>
    %3491 = stablehlo.broadcast_in_dim %1341, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3492 = stablehlo.multiply %3491, %3489 : tensor<64x512x768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3493 = stablehlo.reduce(%3492 init: %cst_333) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3494 = stablehlo.reshape %3493 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3495 = stablehlo.broadcast_in_dim %1345, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3496 = stablehlo.multiply %3489, %3495 : tensor<64x512x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3497 = stablehlo.reduce(%3496 init: %cst_334) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3498 = stablehlo.reshape %3497 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3499 = stablehlo.reshape %3494 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3500 = stablehlo.multiply %3498, %1344 : tensor<64x512x1xf32>
    %3501 = stablehlo.negate %3490 : tensor<64x512x768xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3502 = stablehlo.reduce(%3501 init: %cst_335) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3503 = stablehlo.reshape %3502 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3504 = stablehlo.reduce(%3500 init: %cst_336) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3505 = stablehlo.reduce(%3503 init: %cst_337) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3506 = stablehlo.multiply %3504, %1334 : tensor<64x512xf32>
    %3507 = stablehlo.negate %3506 : tensor<64x512xf32>
    %3508 = stablehlo.multiply %3507, %1321 : tensor<64x512xf32>
    %3509 = stablehlo.add %3505, %3508 : tensor<64x512xf32>
    %3510 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3511 = stablehlo.divide %3506, %3510 : tensor<64x512xf32>
    %3512 = stablehlo.broadcast_in_dim %3511, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3513 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3514 = stablehlo.divide %3509, %3513 : tensor<64x512xf32>
    %3515 = stablehlo.broadcast_in_dim %3514, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3516 = stablehlo.add %3490, %3515 : tensor<64x512x768xf32>
    %3517 = stablehlo.multiply %3512, %1312 : tensor<64x512x768xf32>
    %3518 = stablehlo.add %3516, %3517 : tensor<64x512x768xf32>
    %3519 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3520 = stablehlo.select %1304, %3518, %3519 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3521 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3522 = stablehlo.divide %3520, %3521 : tensor<64x512x768xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3523 = stablehlo.reduce(%3522 init: %cst_338) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3524 = stablehlo.reshape %3523 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3525 = stablehlo.reduce(%3524 init: %cst_339) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3526 = stablehlo.broadcast_in_dim %3525, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3527 = stablehlo.reduce(%3526 init: %cst_340) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3528 = stablehlo.dot_general %3522, %1296, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3529 = stablehlo.transpose %3528, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3530 = stablehlo.dot_general %3522, %1297, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3531 = stablehlo.reshape %3529 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3532 = stablehlo.transpose %3530, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3533 = stablehlo.dot_general %3532, %1260, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3534 = stablehlo.dot_general %3532, %1294, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3535 = stablehlo.transpose %3534, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3536 = stablehlo.multiply %3533, %1293 : tensor<64x12x512x512xf32>
    %3537 = stablehlo.broadcast_in_dim %1289, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3538 = stablehlo.multiply %3536, %3537 : tensor<64x12x512x512xf32>
    %3539 = stablehlo.multiply %3538, %1282 : tensor<64x12x512x512xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3540 = stablehlo.reduce(%3539 init: %cst_341) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3541 = stablehlo.reshape %3540 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3542 = stablehlo.negate %3541 : tensor<64x12x512x1xf32>
    %3543 = stablehlo.broadcast_in_dim %1284, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3544 = stablehlo.divide %3536, %3543 : tensor<64x12x512x512xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3545 = stablehlo.reduce(%3542 init: %cst_342) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3546 = stablehlo.broadcast_in_dim %3545, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3547 = stablehlo.add %3544, %3546 : tensor<64x12x512x512xf32>
    %3548 = stablehlo.multiply %3547, %1282 : tensor<64x12x512x512xf32>
    %3549 = stablehlo.dot_general %3548, %1272, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3550 = stablehlo.transpose %3549, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3551 = stablehlo.dot_general %3548, %1253, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3552 = stablehlo.transpose %3551, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3553 = stablehlo.broadcast_in_dim %1270, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3554 = stablehlo.divide %3552, %3553 : tensor<64x512x12x64xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3555 = stablehlo.reduce(%3535 init: %cst_343) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3556 = stablehlo.reshape %3555 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3557 = stablehlo.reduce(%3556 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3558 = stablehlo.broadcast_in_dim %3557, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3559 = stablehlo.reduce(%3558 init: %cst_345) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3560 = stablehlo.reshape %3559 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3561 = stablehlo.dot_general %3535, %1239, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3562 = stablehlo.transpose %3561, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3563 = stablehlo.dot_general %3535, %1254, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3564 = stablehlo.add %3518, %3563 : tensor<64x512x768xf32>
    %3565 = stablehlo.reshape %3562 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3566 = stablehlo.reduce(%3550 init: %cst_346) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3567 = stablehlo.reshape %3566 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3568 = stablehlo.reduce(%3567 init: %cst_347) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3569 = stablehlo.broadcast_in_dim %3568, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3570 = stablehlo.reduce(%3569 init: %cst_348) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3571 = stablehlo.reshape %3570 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3572 = stablehlo.dot_general %3550, %1239, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3573 = stablehlo.transpose %3572, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3574 = stablehlo.dot_general %3550, %1247, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3575 = stablehlo.add %3564, %3574 : tensor<64x512x768xf32>
    %3576 = stablehlo.reshape %3573 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3577 = stablehlo.reduce(%3554 init: %cst_349) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3578 = stablehlo.reshape %3577 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3579 = stablehlo.reduce(%3578 init: %cst_350) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3580 = stablehlo.broadcast_in_dim %3579, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3581 = stablehlo.reduce(%3580 init: %cst_351) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3582 = stablehlo.reshape %3581 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3583 = stablehlo.dot_general %3554, %1239, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3584 = stablehlo.transpose %3583, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3585 = stablehlo.dot_general %3554, %1240, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3586 = stablehlo.add %3575, %3585 : tensor<64x512x768xf32>
    %3587 = stablehlo.reshape %3584 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3588 = stablehlo.reduce(%3586 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3589 = stablehlo.reshape %3588 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3590 = stablehlo.reshape %3589 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3591 = stablehlo.multiply %1225, %3586 : tensor<64x512x768xf32>
    %3592 = stablehlo.multiply %3586, %1235 : tensor<64x512x768xf32>
    %3593 = stablehlo.broadcast_in_dim %1228, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3594 = stablehlo.multiply %3593, %3591 : tensor<64x512x768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3595 = stablehlo.reduce(%3594 init: %cst_353) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3596 = stablehlo.reshape %3595 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3597 = stablehlo.broadcast_in_dim %1232, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3598 = stablehlo.multiply %3591, %3597 : tensor<64x512x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3599 = stablehlo.reduce(%3598 init: %cst_354) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3600 = stablehlo.reshape %3599 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3601 = stablehlo.reshape %3596 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3602 = stablehlo.multiply %3600, %1231 : tensor<64x512x1xf32>
    %3603 = stablehlo.negate %3592 : tensor<64x512x768xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3604 = stablehlo.reduce(%3603 init: %cst_355) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3605 = stablehlo.reshape %3604 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3606 = stablehlo.reduce(%3602 init: %cst_356) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3607 = stablehlo.reduce(%3605 init: %cst_357) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3608 = stablehlo.multiply %3606, %1221 : tensor<64x512xf32>
    %3609 = stablehlo.negate %3608 : tensor<64x512xf32>
    %3610 = stablehlo.multiply %3609, %1208 : tensor<64x512xf32>
    %3611 = stablehlo.add %3607, %3610 : tensor<64x512xf32>
    %3612 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3613 = stablehlo.divide %3608, %3612 : tensor<64x512xf32>
    %3614 = stablehlo.broadcast_in_dim %3613, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3615 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3616 = stablehlo.divide %3611, %3615 : tensor<64x512xf32>
    %3617 = stablehlo.broadcast_in_dim %3616, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3618 = stablehlo.add %3592, %3617 : tensor<64x512x768xf32>
    %3619 = stablehlo.multiply %3614, %1199 : tensor<64x512x768xf32>
    %3620 = stablehlo.add %3618, %3619 : tensor<64x512x768xf32>
    %3621 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3622 = stablehlo.select %1191, %3620, %3621 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3623 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3624 = stablehlo.divide %3622, %3623 : tensor<64x512x768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3625 = stablehlo.reduce(%3624 init: %cst_358) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3626 = stablehlo.reshape %3625 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3627 = stablehlo.reduce(%3626 init: %cst_359) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3628 = stablehlo.broadcast_in_dim %3627, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3629 = stablehlo.reduce(%3628 init: %cst_360) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3630 = stablehlo.dot_general %3624, %1183, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3631 = stablehlo.transpose %3630, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3632 = stablehlo.dot_general %3624, %arg126, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3633 = stablehlo.multiply %1164, %3632 : tensor<64x512x3072xf32>
    %3634 = stablehlo.multiply %3632, %1182 : tensor<64x512x3072xf32>
    %3635 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3636 = stablehlo.multiply %3635, %3633 : tensor<64x512x3072xf32>
    %3637 = stablehlo.multiply %3636, %1178 : tensor<64x512x3072xf32>
    %3638 = stablehlo.multiply %3637, %1175 : tensor<64x512x3072xf32>
    %3639 = stablehlo.add %3637, %3638 : tensor<64x512x3072xf32>
    %3640 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3641 = stablehlo.multiply %3640, %3639 : tensor<64x512x3072xf32>
    %3642 = stablehlo.add %3634, %3641 : tensor<64x512x3072xf32>
    %3643 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3644 = stablehlo.multiply %3643, %3641 : tensor<64x512x3072xf32>
    %3645 = stablehlo.multiply %3644, %1169 : tensor<64x512x3072xf32>
    %3646 = stablehlo.add %3642, %3645 : tensor<64x512x3072xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3647 = stablehlo.reduce(%3646 init: %cst_361) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3648 = stablehlo.reshape %3647 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3649 = stablehlo.reduce(%3648 init: %cst_362) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3650 = stablehlo.broadcast_in_dim %3649, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3651 = stablehlo.reduce(%3650 init: %cst_363) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3652 = stablehlo.dot_general %3646, %1159, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3653 = stablehlo.transpose %3652, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3654 = stablehlo.dot_general %3646, %arg130, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3655 = stablehlo.add %3620, %3654 : tensor<64x512x768xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3656 = stablehlo.reduce(%3655 init: %cst_364) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3657 = stablehlo.reshape %3656 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3658 = stablehlo.reshape %3657 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3659 = stablehlo.multiply %1145, %3655 : tensor<64x512x768xf32>
    %3660 = stablehlo.multiply %3655, %1155 : tensor<64x512x768xf32>
    %3661 = stablehlo.broadcast_in_dim %1148, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3662 = stablehlo.multiply %3661, %3659 : tensor<64x512x768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3663 = stablehlo.reduce(%3662 init: %cst_365) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3664 = stablehlo.reshape %3663 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3665 = stablehlo.broadcast_in_dim %1152, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3666 = stablehlo.multiply %3659, %3665 : tensor<64x512x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3667 = stablehlo.reduce(%3666 init: %cst_366) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3668 = stablehlo.reshape %3667 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3669 = stablehlo.reshape %3664 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3670 = stablehlo.multiply %3668, %1151 : tensor<64x512x1xf32>
    %3671 = stablehlo.negate %3660 : tensor<64x512x768xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3672 = stablehlo.reduce(%3671 init: %cst_367) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3673 = stablehlo.reshape %3672 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3674 = stablehlo.reduce(%3670 init: %cst_368) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3675 = stablehlo.reduce(%3673 init: %cst_369) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3676 = stablehlo.multiply %3674, %1141 : tensor<64x512xf32>
    %3677 = stablehlo.negate %3676 : tensor<64x512xf32>
    %3678 = stablehlo.multiply %3677, %1128 : tensor<64x512xf32>
    %3679 = stablehlo.add %3675, %3678 : tensor<64x512xf32>
    %3680 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3681 = stablehlo.divide %3676, %3680 : tensor<64x512xf32>
    %3682 = stablehlo.broadcast_in_dim %3681, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3683 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3684 = stablehlo.divide %3679, %3683 : tensor<64x512xf32>
    %3685 = stablehlo.broadcast_in_dim %3684, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3686 = stablehlo.add %3660, %3685 : tensor<64x512x768xf32>
    %3687 = stablehlo.multiply %3682, %1119 : tensor<64x512x768xf32>
    %3688 = stablehlo.add %3686, %3687 : tensor<64x512x768xf32>
    %3689 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3690 = stablehlo.select %1111, %3688, %3689 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3691 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3692 = stablehlo.divide %3690, %3691 : tensor<64x512x768xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3693 = stablehlo.reduce(%3692 init: %cst_370) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3694 = stablehlo.reshape %3693 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3695 = stablehlo.reduce(%3694 init: %cst_371) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3696 = stablehlo.broadcast_in_dim %3695, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3697 = stablehlo.reduce(%3696 init: %cst_372) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3698 = stablehlo.dot_general %3692, %1103, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3699 = stablehlo.transpose %3698, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3700 = stablehlo.dot_general %3692, %1104, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3701 = stablehlo.reshape %3699 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3702 = stablehlo.transpose %3700, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3703 = stablehlo.dot_general %3702, %1067, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3704 = stablehlo.dot_general %3702, %1101, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3705 = stablehlo.transpose %3704, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3706 = stablehlo.multiply %3703, %1100 : tensor<64x12x512x512xf32>
    %3707 = stablehlo.broadcast_in_dim %1096, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3708 = stablehlo.multiply %3706, %3707 : tensor<64x12x512x512xf32>
    %3709 = stablehlo.multiply %3708, %1089 : tensor<64x12x512x512xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3710 = stablehlo.reduce(%3709 init: %cst_373) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3711 = stablehlo.reshape %3710 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3712 = stablehlo.negate %3711 : tensor<64x12x512x1xf32>
    %3713 = stablehlo.broadcast_in_dim %1091, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3714 = stablehlo.divide %3706, %3713 : tensor<64x12x512x512xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3715 = stablehlo.reduce(%3712 init: %cst_374) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3716 = stablehlo.broadcast_in_dim %3715, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3717 = stablehlo.add %3714, %3716 : tensor<64x12x512x512xf32>
    %3718 = stablehlo.multiply %3717, %1089 : tensor<64x12x512x512xf32>
    %3719 = stablehlo.dot_general %3718, %1079, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3720 = stablehlo.transpose %3719, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3721 = stablehlo.dot_general %3718, %1060, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3722 = stablehlo.transpose %3721, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3723 = stablehlo.broadcast_in_dim %1077, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3724 = stablehlo.divide %3722, %3723 : tensor<64x512x12x64xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3725 = stablehlo.reduce(%3705 init: %cst_375) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3726 = stablehlo.reshape %3725 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3727 = stablehlo.reduce(%3726 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3728 = stablehlo.broadcast_in_dim %3727, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3729 = stablehlo.reduce(%3728 init: %cst_377) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3730 = stablehlo.reshape %3729 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3731 = stablehlo.dot_general %3705, %1046, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3732 = stablehlo.transpose %3731, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3733 = stablehlo.dot_general %3705, %1061, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3734 = stablehlo.add %3688, %3733 : tensor<64x512x768xf32>
    %3735 = stablehlo.reshape %3732 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3736 = stablehlo.reduce(%3720 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3737 = stablehlo.reshape %3736 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3738 = stablehlo.reduce(%3737 init: %cst_379) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3739 = stablehlo.broadcast_in_dim %3738, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3740 = stablehlo.reduce(%3739 init: %cst_380) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3741 = stablehlo.reshape %3740 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3742 = stablehlo.dot_general %3720, %1046, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3743 = stablehlo.transpose %3742, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3744 = stablehlo.dot_general %3720, %1054, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3745 = stablehlo.add %3734, %3744 : tensor<64x512x768xf32>
    %3746 = stablehlo.reshape %3743 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3747 = stablehlo.reduce(%3724 init: %cst_381) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3748 = stablehlo.reshape %3747 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3749 = stablehlo.reduce(%3748 init: %cst_382) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3750 = stablehlo.broadcast_in_dim %3749, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3751 = stablehlo.reduce(%3750 init: %cst_383) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3752 = stablehlo.reshape %3751 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3753 = stablehlo.dot_general %3724, %1046, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3754 = stablehlo.transpose %3753, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3755 = stablehlo.dot_general %3724, %1047, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3756 = stablehlo.add %3745, %3755 : tensor<64x512x768xf32>
    %3757 = stablehlo.reshape %3754 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3758 = stablehlo.reduce(%3756 init: %cst_384) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3759 = stablehlo.reshape %3758 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3760 = stablehlo.reshape %3759 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3761 = stablehlo.multiply %1032, %3756 : tensor<64x512x768xf32>
    %3762 = stablehlo.multiply %3756, %1042 : tensor<64x512x768xf32>
    %3763 = stablehlo.broadcast_in_dim %1035, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3764 = stablehlo.multiply %3763, %3761 : tensor<64x512x768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3765 = stablehlo.reduce(%3764 init: %cst_385) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3766 = stablehlo.reshape %3765 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3767 = stablehlo.broadcast_in_dim %1039, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3768 = stablehlo.multiply %3761, %3767 : tensor<64x512x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3769 = stablehlo.reduce(%3768 init: %cst_386) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3770 = stablehlo.reshape %3769 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3771 = stablehlo.reshape %3766 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3772 = stablehlo.multiply %3770, %1038 : tensor<64x512x1xf32>
    %3773 = stablehlo.negate %3762 : tensor<64x512x768xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3774 = stablehlo.reduce(%3773 init: %cst_387) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3775 = stablehlo.reshape %3774 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3776 = stablehlo.reduce(%3772 init: %cst_388) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3777 = stablehlo.reduce(%3775 init: %cst_389) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3778 = stablehlo.multiply %3776, %1028 : tensor<64x512xf32>
    %3779 = stablehlo.negate %3778 : tensor<64x512xf32>
    %3780 = stablehlo.multiply %3779, %1015 : tensor<64x512xf32>
    %3781 = stablehlo.add %3777, %3780 : tensor<64x512xf32>
    %3782 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3783 = stablehlo.divide %3778, %3782 : tensor<64x512xf32>
    %3784 = stablehlo.broadcast_in_dim %3783, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3785 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3786 = stablehlo.divide %3781, %3785 : tensor<64x512xf32>
    %3787 = stablehlo.broadcast_in_dim %3786, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3788 = stablehlo.add %3762, %3787 : tensor<64x512x768xf32>
    %3789 = stablehlo.multiply %3784, %1006 : tensor<64x512x768xf32>
    %3790 = stablehlo.add %3788, %3789 : tensor<64x512x768xf32>
    %3791 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3792 = stablehlo.select %998, %3790, %3791 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3793 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3794 = stablehlo.divide %3792, %3793 : tensor<64x512x768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3795 = stablehlo.reduce(%3794 init: %cst_390) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3796 = stablehlo.reshape %3795 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3797 = stablehlo.reduce(%3796 init: %cst_391) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3798 = stablehlo.broadcast_in_dim %3797, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3799 = stablehlo.reduce(%3798 init: %cst_392) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3800 = stablehlo.dot_general %3794, %990, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3801 = stablehlo.transpose %3800, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3802 = stablehlo.dot_general %3794, %arg110, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3803 = stablehlo.multiply %971, %3802 : tensor<64x512x3072xf32>
    %3804 = stablehlo.multiply %3802, %989 : tensor<64x512x3072xf32>
    %3805 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3806 = stablehlo.multiply %3805, %3803 : tensor<64x512x3072xf32>
    %3807 = stablehlo.multiply %3806, %985 : tensor<64x512x3072xf32>
    %3808 = stablehlo.multiply %3807, %982 : tensor<64x512x3072xf32>
    %3809 = stablehlo.add %3807, %3808 : tensor<64x512x3072xf32>
    %3810 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3811 = stablehlo.multiply %3810, %3809 : tensor<64x512x3072xf32>
    %3812 = stablehlo.add %3804, %3811 : tensor<64x512x3072xf32>
    %3813 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3814 = stablehlo.multiply %3813, %3811 : tensor<64x512x3072xf32>
    %3815 = stablehlo.multiply %3814, %976 : tensor<64x512x3072xf32>
    %3816 = stablehlo.add %3812, %3815 : tensor<64x512x3072xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3817 = stablehlo.reduce(%3816 init: %cst_393) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3818 = stablehlo.reshape %3817 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3819 = stablehlo.reduce(%3818 init: %cst_394) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3820 = stablehlo.broadcast_in_dim %3819, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3821 = stablehlo.reduce(%3820 init: %cst_395) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3822 = stablehlo.dot_general %3816, %966, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3823 = stablehlo.transpose %3822, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3824 = stablehlo.dot_general %3816, %arg114, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3825 = stablehlo.add %3790, %3824 : tensor<64x512x768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3826 = stablehlo.reduce(%3825 init: %cst_396) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3827 = stablehlo.reshape %3826 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3828 = stablehlo.reshape %3827 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3829 = stablehlo.multiply %952, %3825 : tensor<64x512x768xf32>
    %3830 = stablehlo.multiply %3825, %962 : tensor<64x512x768xf32>
    %3831 = stablehlo.broadcast_in_dim %955, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3832 = stablehlo.multiply %3831, %3829 : tensor<64x512x768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3833 = stablehlo.reduce(%3832 init: %cst_397) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3834 = stablehlo.reshape %3833 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3835 = stablehlo.broadcast_in_dim %959, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3836 = stablehlo.multiply %3829, %3835 : tensor<64x512x768xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3837 = stablehlo.reduce(%3836 init: %cst_398) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3838 = stablehlo.reshape %3837 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3839 = stablehlo.reshape %3834 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3840 = stablehlo.multiply %3838, %958 : tensor<64x512x1xf32>
    %3841 = stablehlo.negate %3830 : tensor<64x512x768xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3842 = stablehlo.reduce(%3841 init: %cst_399) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3843 = stablehlo.reshape %3842 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3844 = stablehlo.reduce(%3840 init: %cst_400) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3845 = stablehlo.reduce(%3843 init: %cst_401) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3846 = stablehlo.multiply %3844, %948 : tensor<64x512xf32>
    %3847 = stablehlo.negate %3846 : tensor<64x512xf32>
    %3848 = stablehlo.multiply %3847, %935 : tensor<64x512xf32>
    %3849 = stablehlo.add %3845, %3848 : tensor<64x512xf32>
    %3850 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3851 = stablehlo.divide %3846, %3850 : tensor<64x512xf32>
    %3852 = stablehlo.broadcast_in_dim %3851, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3853 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3854 = stablehlo.divide %3849, %3853 : tensor<64x512xf32>
    %3855 = stablehlo.broadcast_in_dim %3854, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3856 = stablehlo.add %3830, %3855 : tensor<64x512x768xf32>
    %3857 = stablehlo.multiply %3852, %926 : tensor<64x512x768xf32>
    %3858 = stablehlo.add %3856, %3857 : tensor<64x512x768xf32>
    %3859 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3860 = stablehlo.select %918, %3858, %3859 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3861 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3862 = stablehlo.divide %3860, %3861 : tensor<64x512x768xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3863 = stablehlo.reduce(%3862 init: %cst_402) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3864 = stablehlo.reshape %3863 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3865 = stablehlo.reduce(%3864 init: %cst_403) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3866 = stablehlo.broadcast_in_dim %3865, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3867 = stablehlo.reduce(%3866 init: %cst_404) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3868 = stablehlo.dot_general %3862, %910, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3869 = stablehlo.transpose %3868, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3870 = stablehlo.dot_general %3862, %911, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3871 = stablehlo.reshape %3869 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3872 = stablehlo.transpose %3870, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3873 = stablehlo.dot_general %3872, %874, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3874 = stablehlo.dot_general %3872, %908, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3875 = stablehlo.transpose %3874, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3876 = stablehlo.multiply %3873, %907 : tensor<64x12x512x512xf32>
    %3877 = stablehlo.broadcast_in_dim %903, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3878 = stablehlo.multiply %3876, %3877 : tensor<64x12x512x512xf32>
    %3879 = stablehlo.multiply %3878, %896 : tensor<64x12x512x512xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3880 = stablehlo.reduce(%3879 init: %cst_405) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3881 = stablehlo.reshape %3880 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3882 = stablehlo.negate %3881 : tensor<64x12x512x1xf32>
    %3883 = stablehlo.broadcast_in_dim %898, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3884 = stablehlo.divide %3876, %3883 : tensor<64x12x512x512xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3885 = stablehlo.reduce(%3882 init: %cst_406) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3886 = stablehlo.broadcast_in_dim %3885, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3887 = stablehlo.add %3884, %3886 : tensor<64x12x512x512xf32>
    %3888 = stablehlo.multiply %3887, %896 : tensor<64x12x512x512xf32>
    %3889 = stablehlo.dot_general %3888, %886, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3890 = stablehlo.transpose %3889, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3891 = stablehlo.dot_general %3888, %867, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3892 = stablehlo.transpose %3891, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3893 = stablehlo.broadcast_in_dim %884, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3894 = stablehlo.divide %3892, %3893 : tensor<64x512x12x64xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3895 = stablehlo.reduce(%3875 init: %cst_407) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3896 = stablehlo.reshape %3895 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3897 = stablehlo.reduce(%3896 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3898 = stablehlo.broadcast_in_dim %3897, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3899 = stablehlo.reduce(%3898 init: %cst_409) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3900 = stablehlo.reshape %3899 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3901 = stablehlo.dot_general %3875, %853, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3902 = stablehlo.transpose %3901, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3903 = stablehlo.dot_general %3875, %868, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3904 = stablehlo.add %3858, %3903 : tensor<64x512x768xf32>
    %3905 = stablehlo.reshape %3902 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3906 = stablehlo.reduce(%3890 init: %cst_410) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3907 = stablehlo.reshape %3906 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3908 = stablehlo.reduce(%3907 init: %cst_411) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3909 = stablehlo.broadcast_in_dim %3908, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3910 = stablehlo.reduce(%3909 init: %cst_412) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3911 = stablehlo.reshape %3910 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3912 = stablehlo.dot_general %3890, %853, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3913 = stablehlo.transpose %3912, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3914 = stablehlo.dot_general %3890, %861, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3915 = stablehlo.add %3904, %3914 : tensor<64x512x768xf32>
    %3916 = stablehlo.reshape %3913 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3917 = stablehlo.reduce(%3894 init: %cst_413) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3918 = stablehlo.reshape %3917 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3919 = stablehlo.reduce(%3918 init: %cst_414) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3920 = stablehlo.broadcast_in_dim %3919, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3921 = stablehlo.reduce(%3920 init: %cst_415) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3922 = stablehlo.reshape %3921 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3923 = stablehlo.dot_general %3894, %853, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3924 = stablehlo.transpose %3923, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3925 = stablehlo.dot_general %3894, %854, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3926 = stablehlo.add %3915, %3925 : tensor<64x512x768xf32>
    %3927 = stablehlo.reshape %3924 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3928 = stablehlo.reduce(%3926 init: %cst_416) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3929 = stablehlo.reshape %3928 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3930 = stablehlo.reshape %3929 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3931 = stablehlo.multiply %839, %3926 : tensor<64x512x768xf32>
    %3932 = stablehlo.multiply %3926, %849 : tensor<64x512x768xf32>
    %3933 = stablehlo.broadcast_in_dim %842, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3934 = stablehlo.multiply %3933, %3931 : tensor<64x512x768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3935 = stablehlo.reduce(%3934 init: %cst_417) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3936 = stablehlo.reshape %3935 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3937 = stablehlo.broadcast_in_dim %846, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3938 = stablehlo.multiply %3931, %3937 : tensor<64x512x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3939 = stablehlo.reduce(%3938 init: %cst_418) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3940 = stablehlo.reshape %3939 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3941 = stablehlo.reshape %3936 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3942 = stablehlo.multiply %3940, %845 : tensor<64x512x1xf32>
    %3943 = stablehlo.negate %3932 : tensor<64x512x768xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3944 = stablehlo.reduce(%3943 init: %cst_419) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3945 = stablehlo.reshape %3944 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3946 = stablehlo.reduce(%3942 init: %cst_420) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3947 = stablehlo.reduce(%3945 init: %cst_421) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3948 = stablehlo.multiply %3946, %835 : tensor<64x512xf32>
    %3949 = stablehlo.negate %3948 : tensor<64x512xf32>
    %3950 = stablehlo.multiply %3949, %822 : tensor<64x512xf32>
    %3951 = stablehlo.add %3947, %3950 : tensor<64x512xf32>
    %3952 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3953 = stablehlo.divide %3948, %3952 : tensor<64x512xf32>
    %3954 = stablehlo.broadcast_in_dim %3953, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3955 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3956 = stablehlo.divide %3951, %3955 : tensor<64x512xf32>
    %3957 = stablehlo.broadcast_in_dim %3956, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3958 = stablehlo.add %3932, %3957 : tensor<64x512x768xf32>
    %3959 = stablehlo.multiply %3954, %813 : tensor<64x512x768xf32>
    %3960 = stablehlo.add %3958, %3959 : tensor<64x512x768xf32>
    %3961 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3962 = stablehlo.select %805, %3960, %3961 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3963 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3964 = stablehlo.divide %3962, %3963 : tensor<64x512x768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3965 = stablehlo.reduce(%3964 init: %cst_422) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3966 = stablehlo.reshape %3965 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3967 = stablehlo.reduce(%3966 init: %cst_423) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3968 = stablehlo.broadcast_in_dim %3967, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3969 = stablehlo.reduce(%3968 init: %cst_424) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3970 = stablehlo.dot_general %3964, %797, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3971 = stablehlo.transpose %3970, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3972 = stablehlo.dot_general %3964, %arg94, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3973 = stablehlo.multiply %778, %3972 : tensor<64x512x3072xf32>
    %3974 = stablehlo.multiply %3972, %796 : tensor<64x512x3072xf32>
    %3975 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3976 = stablehlo.multiply %3975, %3973 : tensor<64x512x3072xf32>
    %3977 = stablehlo.multiply %3976, %792 : tensor<64x512x3072xf32>
    %3978 = stablehlo.multiply %3977, %789 : tensor<64x512x3072xf32>
    %3979 = stablehlo.add %3977, %3978 : tensor<64x512x3072xf32>
    %3980 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3981 = stablehlo.multiply %3980, %3979 : tensor<64x512x3072xf32>
    %3982 = stablehlo.add %3974, %3981 : tensor<64x512x3072xf32>
    %3983 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3984 = stablehlo.multiply %3983, %3981 : tensor<64x512x3072xf32>
    %3985 = stablehlo.multiply %3984, %783 : tensor<64x512x3072xf32>
    %3986 = stablehlo.add %3982, %3985 : tensor<64x512x3072xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3987 = stablehlo.reduce(%3986 init: %cst_425) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3988 = stablehlo.reshape %3987 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3989 = stablehlo.reduce(%3988 init: %cst_426) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3990 = stablehlo.broadcast_in_dim %3989, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3991 = stablehlo.reduce(%3990 init: %cst_427) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3992 = stablehlo.dot_general %3986, %773, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3993 = stablehlo.transpose %3992, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3994 = stablehlo.dot_general %3986, %arg98, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3995 = stablehlo.add %3960, %3994 : tensor<64x512x768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3996 = stablehlo.reduce(%3995 init: %cst_428) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3997 = stablehlo.reshape %3996 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3998 = stablehlo.reshape %3997 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3999 = stablehlo.multiply %759, %3995 : tensor<64x512x768xf32>
    %4000 = stablehlo.multiply %3995, %769 : tensor<64x512x768xf32>
    %4001 = stablehlo.broadcast_in_dim %762, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4002 = stablehlo.multiply %4001, %3999 : tensor<64x512x768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4003 = stablehlo.reduce(%4002 init: %cst_429) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4004 = stablehlo.reshape %4003 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4005 = stablehlo.broadcast_in_dim %766, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4006 = stablehlo.multiply %3999, %4005 : tensor<64x512x768xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4007 = stablehlo.reduce(%4006 init: %cst_430) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4008 = stablehlo.reshape %4007 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4009 = stablehlo.reshape %4004 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4010 = stablehlo.multiply %4008, %765 : tensor<64x512x1xf32>
    %4011 = stablehlo.negate %4000 : tensor<64x512x768xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4012 = stablehlo.reduce(%4011 init: %cst_431) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4013 = stablehlo.reshape %4012 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4014 = stablehlo.reduce(%4010 init: %cst_432) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4015 = stablehlo.reduce(%4013 init: %cst_433) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4016 = stablehlo.multiply %4014, %755 : tensor<64x512xf32>
    %4017 = stablehlo.negate %4016 : tensor<64x512xf32>
    %4018 = stablehlo.multiply %4017, %742 : tensor<64x512xf32>
    %4019 = stablehlo.add %4015, %4018 : tensor<64x512xf32>
    %4020 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4021 = stablehlo.divide %4016, %4020 : tensor<64x512xf32>
    %4022 = stablehlo.broadcast_in_dim %4021, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4023 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4024 = stablehlo.divide %4019, %4023 : tensor<64x512xf32>
    %4025 = stablehlo.broadcast_in_dim %4024, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4026 = stablehlo.add %4000, %4025 : tensor<64x512x768xf32>
    %4027 = stablehlo.multiply %4022, %733 : tensor<64x512x768xf32>
    %4028 = stablehlo.add %4026, %4027 : tensor<64x512x768xf32>
    %4029 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4030 = stablehlo.select %725, %4028, %4029 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4031 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4032 = stablehlo.divide %4030, %4031 : tensor<64x512x768xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4033 = stablehlo.reduce(%4032 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4034 = stablehlo.reshape %4033 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4035 = stablehlo.reduce(%4034 init: %cst_435) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4036 = stablehlo.broadcast_in_dim %4035, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4037 = stablehlo.reduce(%4036 init: %cst_436) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4038 = stablehlo.dot_general %4032, %717, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4039 = stablehlo.transpose %4038, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4040 = stablehlo.dot_general %4032, %718, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4041 = stablehlo.reshape %4039 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4042 = stablehlo.transpose %4040, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4043 = stablehlo.dot_general %4042, %681, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4044 = stablehlo.dot_general %4042, %715, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4045 = stablehlo.transpose %4044, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4046 = stablehlo.multiply %4043, %714 : tensor<64x12x512x512xf32>
    %4047 = stablehlo.broadcast_in_dim %710, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4048 = stablehlo.multiply %4046, %4047 : tensor<64x12x512x512xf32>
    %4049 = stablehlo.multiply %4048, %703 : tensor<64x12x512x512xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4050 = stablehlo.reduce(%4049 init: %cst_437) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4051 = stablehlo.reshape %4050 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4052 = stablehlo.negate %4051 : tensor<64x12x512x1xf32>
    %4053 = stablehlo.broadcast_in_dim %705, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4054 = stablehlo.divide %4046, %4053 : tensor<64x12x512x512xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4055 = stablehlo.reduce(%4052 init: %cst_438) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4056 = stablehlo.broadcast_in_dim %4055, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4057 = stablehlo.add %4054, %4056 : tensor<64x12x512x512xf32>
    %4058 = stablehlo.multiply %4057, %703 : tensor<64x12x512x512xf32>
    %4059 = stablehlo.dot_general %4058, %693, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4060 = stablehlo.transpose %4059, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4061 = stablehlo.dot_general %4058, %674, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4062 = stablehlo.transpose %4061, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4063 = stablehlo.broadcast_in_dim %691, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4064 = stablehlo.divide %4062, %4063 : tensor<64x512x12x64xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4065 = stablehlo.reduce(%4045 init: %cst_439) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4066 = stablehlo.reshape %4065 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4067 = stablehlo.reduce(%4066 init: %cst_440) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4068 = stablehlo.broadcast_in_dim %4067, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4069 = stablehlo.reduce(%4068 init: %cst_441) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4070 = stablehlo.reshape %4069 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4071 = stablehlo.dot_general %4045, %660, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4072 = stablehlo.transpose %4071, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4073 = stablehlo.dot_general %4045, %675, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4074 = stablehlo.add %4028, %4073 : tensor<64x512x768xf32>
    %4075 = stablehlo.reshape %4072 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4076 = stablehlo.reduce(%4060 init: %cst_442) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4077 = stablehlo.reshape %4076 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4078 = stablehlo.reduce(%4077 init: %cst_443) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4079 = stablehlo.broadcast_in_dim %4078, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4080 = stablehlo.reduce(%4079 init: %cst_444) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4081 = stablehlo.reshape %4080 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4082 = stablehlo.dot_general %4060, %660, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4083 = stablehlo.transpose %4082, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4084 = stablehlo.dot_general %4060, %668, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4085 = stablehlo.add %4074, %4084 : tensor<64x512x768xf32>
    %4086 = stablehlo.reshape %4083 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4087 = stablehlo.reduce(%4064 init: %cst_445) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4088 = stablehlo.reshape %4087 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4089 = stablehlo.reduce(%4088 init: %cst_446) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4090 = stablehlo.broadcast_in_dim %4089, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4091 = stablehlo.reduce(%4090 init: %cst_447) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4092 = stablehlo.reshape %4091 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4093 = stablehlo.dot_general %4064, %660, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4094 = stablehlo.transpose %4093, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4095 = stablehlo.dot_general %4064, %661, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4096 = stablehlo.add %4085, %4095 : tensor<64x512x768xf32>
    %4097 = stablehlo.reshape %4094 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4098 = stablehlo.reduce(%4096 init: %cst_448) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4099 = stablehlo.reshape %4098 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4100 = stablehlo.reshape %4099 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4101 = stablehlo.multiply %646, %4096 : tensor<64x512x768xf32>
    %4102 = stablehlo.multiply %4096, %656 : tensor<64x512x768xf32>
    %4103 = stablehlo.broadcast_in_dim %649, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4104 = stablehlo.multiply %4103, %4101 : tensor<64x512x768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4105 = stablehlo.reduce(%4104 init: %cst_449) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4106 = stablehlo.reshape %4105 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4107 = stablehlo.broadcast_in_dim %653, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4108 = stablehlo.multiply %4101, %4107 : tensor<64x512x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4109 = stablehlo.reduce(%4108 init: %cst_450) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4110 = stablehlo.reshape %4109 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4111 = stablehlo.reshape %4106 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4112 = stablehlo.multiply %4110, %652 : tensor<64x512x1xf32>
    %4113 = stablehlo.negate %4102 : tensor<64x512x768xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4114 = stablehlo.reduce(%4113 init: %cst_451) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4115 = stablehlo.reshape %4114 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4116 = stablehlo.reduce(%4112 init: %cst_452) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4117 = stablehlo.reduce(%4115 init: %cst_453) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4118 = stablehlo.multiply %4116, %642 : tensor<64x512xf32>
    %4119 = stablehlo.negate %4118 : tensor<64x512xf32>
    %4120 = stablehlo.multiply %4119, %629 : tensor<64x512xf32>
    %4121 = stablehlo.add %4117, %4120 : tensor<64x512xf32>
    %4122 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4123 = stablehlo.divide %4118, %4122 : tensor<64x512xf32>
    %4124 = stablehlo.broadcast_in_dim %4123, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4125 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4126 = stablehlo.divide %4121, %4125 : tensor<64x512xf32>
    %4127 = stablehlo.broadcast_in_dim %4126, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4128 = stablehlo.add %4102, %4127 : tensor<64x512x768xf32>
    %4129 = stablehlo.multiply %4124, %620 : tensor<64x512x768xf32>
    %4130 = stablehlo.add %4128, %4129 : tensor<64x512x768xf32>
    %4131 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4132 = stablehlo.select %612, %4130, %4131 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4133 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4134 = stablehlo.divide %4132, %4133 : tensor<64x512x768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4135 = stablehlo.reduce(%4134 init: %cst_454) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4136 = stablehlo.reshape %4135 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4137 = stablehlo.reduce(%4136 init: %cst_455) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4138 = stablehlo.broadcast_in_dim %4137, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4139 = stablehlo.reduce(%4138 init: %cst_456) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4140 = stablehlo.dot_general %4134, %604, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4141 = stablehlo.transpose %4140, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4142 = stablehlo.dot_general %4134, %arg78, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4143 = stablehlo.multiply %585, %4142 : tensor<64x512x3072xf32>
    %4144 = stablehlo.multiply %4142, %603 : tensor<64x512x3072xf32>
    %4145 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4146 = stablehlo.multiply %4145, %4143 : tensor<64x512x3072xf32>
    %4147 = stablehlo.multiply %4146, %599 : tensor<64x512x3072xf32>
    %4148 = stablehlo.multiply %4147, %596 : tensor<64x512x3072xf32>
    %4149 = stablehlo.add %4147, %4148 : tensor<64x512x3072xf32>
    %4150 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4151 = stablehlo.multiply %4150, %4149 : tensor<64x512x3072xf32>
    %4152 = stablehlo.add %4144, %4151 : tensor<64x512x3072xf32>
    %4153 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4154 = stablehlo.multiply %4153, %4151 : tensor<64x512x3072xf32>
    %4155 = stablehlo.multiply %4154, %590 : tensor<64x512x3072xf32>
    %4156 = stablehlo.add %4152, %4155 : tensor<64x512x3072xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4157 = stablehlo.reduce(%4156 init: %cst_457) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4158 = stablehlo.reshape %4157 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4159 = stablehlo.reduce(%4158 init: %cst_458) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4160 = stablehlo.broadcast_in_dim %4159, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4161 = stablehlo.reduce(%4160 init: %cst_459) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4162 = stablehlo.dot_general %4156, %580, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4163 = stablehlo.transpose %4162, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4164 = stablehlo.dot_general %4156, %arg82, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4165 = stablehlo.add %4130, %4164 : tensor<64x512x768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4166 = stablehlo.reduce(%4165 init: %cst_460) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4167 = stablehlo.reshape %4166 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4168 = stablehlo.reshape %4167 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4169 = stablehlo.multiply %566, %4165 : tensor<64x512x768xf32>
    %4170 = stablehlo.multiply %4165, %576 : tensor<64x512x768xf32>
    %4171 = stablehlo.broadcast_in_dim %569, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4172 = stablehlo.multiply %4171, %4169 : tensor<64x512x768xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4173 = stablehlo.reduce(%4172 init: %cst_461) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4174 = stablehlo.reshape %4173 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4175 = stablehlo.broadcast_in_dim %573, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4176 = stablehlo.multiply %4169, %4175 : tensor<64x512x768xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4177 = stablehlo.reduce(%4176 init: %cst_462) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4178 = stablehlo.reshape %4177 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4179 = stablehlo.reshape %4174 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4180 = stablehlo.multiply %4178, %572 : tensor<64x512x1xf32>
    %4181 = stablehlo.negate %4170 : tensor<64x512x768xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4182 = stablehlo.reduce(%4181 init: %cst_463) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4183 = stablehlo.reshape %4182 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4184 = stablehlo.reduce(%4180 init: %cst_464) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4185 = stablehlo.reduce(%4183 init: %cst_465) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4186 = stablehlo.multiply %4184, %562 : tensor<64x512xf32>
    %4187 = stablehlo.negate %4186 : tensor<64x512xf32>
    %4188 = stablehlo.multiply %4187, %549 : tensor<64x512xf32>
    %4189 = stablehlo.add %4185, %4188 : tensor<64x512xf32>
    %4190 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4191 = stablehlo.divide %4186, %4190 : tensor<64x512xf32>
    %4192 = stablehlo.broadcast_in_dim %4191, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4193 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4194 = stablehlo.divide %4189, %4193 : tensor<64x512xf32>
    %4195 = stablehlo.broadcast_in_dim %4194, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4196 = stablehlo.add %4170, %4195 : tensor<64x512x768xf32>
    %4197 = stablehlo.multiply %4192, %540 : tensor<64x512x768xf32>
    %4198 = stablehlo.add %4196, %4197 : tensor<64x512x768xf32>
    %4199 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4200 = stablehlo.select %532, %4198, %4199 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4201 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4202 = stablehlo.divide %4200, %4201 : tensor<64x512x768xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4203 = stablehlo.reduce(%4202 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4204 = stablehlo.reshape %4203 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4205 = stablehlo.reduce(%4204 init: %cst_467) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4206 = stablehlo.broadcast_in_dim %4205, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4207 = stablehlo.reduce(%4206 init: %cst_468) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4208 = stablehlo.dot_general %4202, %524, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4209 = stablehlo.transpose %4208, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4210 = stablehlo.dot_general %4202, %525, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4211 = stablehlo.reshape %4209 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4212 = stablehlo.transpose %4210, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4213 = stablehlo.dot_general %4212, %488, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4214 = stablehlo.dot_general %4212, %522, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4215 = stablehlo.transpose %4214, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4216 = stablehlo.multiply %4213, %521 : tensor<64x12x512x512xf32>
    %4217 = stablehlo.broadcast_in_dim %517, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4218 = stablehlo.multiply %4216, %4217 : tensor<64x12x512x512xf32>
    %4219 = stablehlo.multiply %4218, %510 : tensor<64x12x512x512xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4220 = stablehlo.reduce(%4219 init: %cst_469) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4221 = stablehlo.reshape %4220 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4222 = stablehlo.negate %4221 : tensor<64x12x512x1xf32>
    %4223 = stablehlo.broadcast_in_dim %512, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4224 = stablehlo.divide %4216, %4223 : tensor<64x12x512x512xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4225 = stablehlo.reduce(%4222 init: %cst_470) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4226 = stablehlo.broadcast_in_dim %4225, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4227 = stablehlo.add %4224, %4226 : tensor<64x12x512x512xf32>
    %4228 = stablehlo.multiply %4227, %510 : tensor<64x12x512x512xf32>
    %4229 = stablehlo.dot_general %4228, %500, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4230 = stablehlo.transpose %4229, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4231 = stablehlo.dot_general %4228, %481, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4232 = stablehlo.transpose %4231, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4233 = stablehlo.broadcast_in_dim %498, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4234 = stablehlo.divide %4232, %4233 : tensor<64x512x12x64xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4235 = stablehlo.reduce(%4215 init: %cst_471) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4236 = stablehlo.reshape %4235 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4237 = stablehlo.reduce(%4236 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4238 = stablehlo.broadcast_in_dim %4237, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4239 = stablehlo.reduce(%4238 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4240 = stablehlo.reshape %4239 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4241 = stablehlo.dot_general %4215, %467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4242 = stablehlo.transpose %4241, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4243 = stablehlo.dot_general %4215, %482, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4244 = stablehlo.add %4198, %4243 : tensor<64x512x768xf32>
    %4245 = stablehlo.reshape %4242 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4246 = stablehlo.reduce(%4230 init: %cst_474) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4247 = stablehlo.reshape %4246 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4248 = stablehlo.reduce(%4247 init: %cst_475) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4249 = stablehlo.broadcast_in_dim %4248, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4250 = stablehlo.reduce(%4249 init: %cst_476) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4251 = stablehlo.reshape %4250 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4252 = stablehlo.dot_general %4230, %467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4253 = stablehlo.transpose %4252, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4254 = stablehlo.dot_general %4230, %475, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4255 = stablehlo.add %4244, %4254 : tensor<64x512x768xf32>
    %4256 = stablehlo.reshape %4253 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4257 = stablehlo.reduce(%4234 init: %cst_477) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4258 = stablehlo.reshape %4257 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4259 = stablehlo.reduce(%4258 init: %cst_478) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4260 = stablehlo.broadcast_in_dim %4259, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4261 = stablehlo.reduce(%4260 init: %cst_479) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4262 = stablehlo.reshape %4261 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4263 = stablehlo.dot_general %4234, %467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4264 = stablehlo.transpose %4263, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4265 = stablehlo.dot_general %4234, %468, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4266 = stablehlo.add %4255, %4265 : tensor<64x512x768xf32>
    %4267 = stablehlo.reshape %4264 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4268 = stablehlo.reduce(%4266 init: %cst_480) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4269 = stablehlo.reshape %4268 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4270 = stablehlo.reshape %4269 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4271 = stablehlo.multiply %453, %4266 : tensor<64x512x768xf32>
    %4272 = stablehlo.multiply %4266, %463 : tensor<64x512x768xf32>
    %4273 = stablehlo.broadcast_in_dim %456, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4274 = stablehlo.multiply %4273, %4271 : tensor<64x512x768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4275 = stablehlo.reduce(%4274 init: %cst_481) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4276 = stablehlo.reshape %4275 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4277 = stablehlo.broadcast_in_dim %460, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4278 = stablehlo.multiply %4271, %4277 : tensor<64x512x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4279 = stablehlo.reduce(%4278 init: %cst_482) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4280 = stablehlo.reshape %4279 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4281 = stablehlo.reshape %4276 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4282 = stablehlo.multiply %4280, %459 : tensor<64x512x1xf32>
    %4283 = stablehlo.negate %4272 : tensor<64x512x768xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4284 = stablehlo.reduce(%4283 init: %cst_483) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4285 = stablehlo.reshape %4284 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4286 = stablehlo.reduce(%4282 init: %cst_484) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4287 = stablehlo.reduce(%4285 init: %cst_485) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4288 = stablehlo.multiply %4286, %449 : tensor<64x512xf32>
    %4289 = stablehlo.negate %4288 : tensor<64x512xf32>
    %4290 = stablehlo.multiply %4289, %436 : tensor<64x512xf32>
    %4291 = stablehlo.add %4287, %4290 : tensor<64x512xf32>
    %4292 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4293 = stablehlo.divide %4288, %4292 : tensor<64x512xf32>
    %4294 = stablehlo.broadcast_in_dim %4293, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4295 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4296 = stablehlo.divide %4291, %4295 : tensor<64x512xf32>
    %4297 = stablehlo.broadcast_in_dim %4296, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4298 = stablehlo.add %4272, %4297 : tensor<64x512x768xf32>
    %4299 = stablehlo.multiply %4294, %427 : tensor<64x512x768xf32>
    %4300 = stablehlo.add %4298, %4299 : tensor<64x512x768xf32>
    %4301 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4302 = stablehlo.select %419, %4300, %4301 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4303 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4304 = stablehlo.divide %4302, %4303 : tensor<64x512x768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4305 = stablehlo.reduce(%4304 init: %cst_486) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4306 = stablehlo.reshape %4305 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4307 = stablehlo.reduce(%4306 init: %cst_487) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4308 = stablehlo.broadcast_in_dim %4307, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4309 = stablehlo.reduce(%4308 init: %cst_488) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4310 = stablehlo.dot_general %4304, %411, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4311 = stablehlo.transpose %4310, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4312 = stablehlo.dot_general %4304, %arg30, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4313 = stablehlo.multiply %392, %4312 : tensor<64x512x3072xf32>
    %4314 = stablehlo.multiply %4312, %410 : tensor<64x512x3072xf32>
    %4315 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4316 = stablehlo.multiply %4315, %4313 : tensor<64x512x3072xf32>
    %4317 = stablehlo.multiply %4316, %406 : tensor<64x512x3072xf32>
    %4318 = stablehlo.multiply %4317, %403 : tensor<64x512x3072xf32>
    %4319 = stablehlo.add %4317, %4318 : tensor<64x512x3072xf32>
    %4320 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4321 = stablehlo.multiply %4320, %4319 : tensor<64x512x3072xf32>
    %4322 = stablehlo.add %4314, %4321 : tensor<64x512x3072xf32>
    %4323 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4324 = stablehlo.multiply %4323, %4321 : tensor<64x512x3072xf32>
    %4325 = stablehlo.multiply %4324, %397 : tensor<64x512x3072xf32>
    %4326 = stablehlo.add %4322, %4325 : tensor<64x512x3072xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4327 = stablehlo.reduce(%4326 init: %cst_489) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4328 = stablehlo.reshape %4327 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4329 = stablehlo.reduce(%4328 init: %cst_490) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4330 = stablehlo.broadcast_in_dim %4329, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4331 = stablehlo.reduce(%4330 init: %cst_491) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4332 = stablehlo.dot_general %4326, %387, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4333 = stablehlo.transpose %4332, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4334 = stablehlo.dot_general %4326, %arg34, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4335 = stablehlo.add %4300, %4334 : tensor<64x512x768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4336 = stablehlo.reduce(%4335 init: %cst_492) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4337 = stablehlo.reshape %4336 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4338 = stablehlo.reshape %4337 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4339 = stablehlo.multiply %373, %4335 : tensor<64x512x768xf32>
    %4340 = stablehlo.multiply %4335, %383 : tensor<64x512x768xf32>
    %4341 = stablehlo.broadcast_in_dim %376, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4342 = stablehlo.multiply %4341, %4339 : tensor<64x512x768xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4343 = stablehlo.reduce(%4342 init: %cst_493) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4344 = stablehlo.reshape %4343 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4345 = stablehlo.broadcast_in_dim %380, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4346 = stablehlo.multiply %4339, %4345 : tensor<64x512x768xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4347 = stablehlo.reduce(%4346 init: %cst_494) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4348 = stablehlo.reshape %4347 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4349 = stablehlo.reshape %4344 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4350 = stablehlo.multiply %4348, %379 : tensor<64x512x1xf32>
    %4351 = stablehlo.negate %4340 : tensor<64x512x768xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4352 = stablehlo.reduce(%4351 init: %cst_495) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4353 = stablehlo.reshape %4352 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4354 = stablehlo.reduce(%4350 init: %cst_496) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4355 = stablehlo.reduce(%4353 init: %cst_497) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4356 = stablehlo.multiply %4354, %369 : tensor<64x512xf32>
    %4357 = stablehlo.negate %4356 : tensor<64x512xf32>
    %4358 = stablehlo.multiply %4357, %356 : tensor<64x512xf32>
    %4359 = stablehlo.add %4355, %4358 : tensor<64x512xf32>
    %4360 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4361 = stablehlo.divide %4356, %4360 : tensor<64x512xf32>
    %4362 = stablehlo.broadcast_in_dim %4361, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4363 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4364 = stablehlo.divide %4359, %4363 : tensor<64x512xf32>
    %4365 = stablehlo.broadcast_in_dim %4364, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4366 = stablehlo.add %4340, %4365 : tensor<64x512x768xf32>
    %4367 = stablehlo.multiply %4362, %347 : tensor<64x512x768xf32>
    %4368 = stablehlo.add %4366, %4367 : tensor<64x512x768xf32>
    %4369 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4370 = stablehlo.select %339, %4368, %4369 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4371 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4372 = stablehlo.divide %4370, %4371 : tensor<64x512x768xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4373 = stablehlo.reduce(%4372 init: %cst_498) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4374 = stablehlo.reshape %4373 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_499 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4375 = stablehlo.reduce(%4374 init: %cst_499) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4376 = stablehlo.broadcast_in_dim %4375, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_500 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4377 = stablehlo.reduce(%4376 init: %cst_500) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4378 = stablehlo.dot_general %4372, %331, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4379 = stablehlo.transpose %4378, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4380 = stablehlo.dot_general %4372, %332, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4381 = stablehlo.reshape %4379 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4382 = stablehlo.transpose %4380, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4383 = stablehlo.dot_general %4382, %295, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4384 = stablehlo.dot_general %4382, %329, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4385 = stablehlo.transpose %4384, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4386 = stablehlo.multiply %4383, %328 : tensor<64x12x512x512xf32>
    %4387 = stablehlo.broadcast_in_dim %324, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4388 = stablehlo.multiply %4386, %4387 : tensor<64x12x512x512xf32>
    %4389 = stablehlo.multiply %4388, %317 : tensor<64x12x512x512xf32>
    %cst_501 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4390 = stablehlo.reduce(%4389 init: %cst_501) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4391 = stablehlo.reshape %4390 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4392 = stablehlo.negate %4391 : tensor<64x12x512x1xf32>
    %4393 = stablehlo.broadcast_in_dim %319, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4394 = stablehlo.divide %4386, %4393 : tensor<64x12x512x512xf32>
    %cst_502 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4395 = stablehlo.reduce(%4392 init: %cst_502) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4396 = stablehlo.broadcast_in_dim %4395, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4397 = stablehlo.add %4394, %4396 : tensor<64x12x512x512xf32>
    %4398 = stablehlo.multiply %4397, %317 : tensor<64x12x512x512xf32>
    %4399 = stablehlo.dot_general %4398, %307, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4400 = stablehlo.transpose %4399, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4401 = stablehlo.dot_general %4398, %288, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4402 = stablehlo.transpose %4401, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4403 = stablehlo.broadcast_in_dim %305, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4404 = stablehlo.divide %4402, %4403 : tensor<64x512x12x64xf32>
    %cst_503 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4405 = stablehlo.reduce(%4385 init: %cst_503) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4406 = stablehlo.reshape %4405 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_504 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4407 = stablehlo.reduce(%4406 init: %cst_504) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4408 = stablehlo.broadcast_in_dim %4407, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_505 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4409 = stablehlo.reduce(%4408 init: %cst_505) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4410 = stablehlo.reshape %4409 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4411 = stablehlo.dot_general %4385, %274, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4412 = stablehlo.transpose %4411, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4413 = stablehlo.dot_general %4385, %289, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4414 = stablehlo.add %4368, %4413 : tensor<64x512x768xf32>
    %4415 = stablehlo.reshape %4412 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_506 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4416 = stablehlo.reduce(%4400 init: %cst_506) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4417 = stablehlo.reshape %4416 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_507 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4418 = stablehlo.reduce(%4417 init: %cst_507) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4419 = stablehlo.broadcast_in_dim %4418, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_508 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4420 = stablehlo.reduce(%4419 init: %cst_508) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4421 = stablehlo.reshape %4420 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4422 = stablehlo.dot_general %4400, %274, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4423 = stablehlo.transpose %4422, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4424 = stablehlo.dot_general %4400, %282, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4425 = stablehlo.add %4414, %4424 : tensor<64x512x768xf32>
    %4426 = stablehlo.reshape %4423 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_509 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4427 = stablehlo.reduce(%4404 init: %cst_509) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4428 = stablehlo.reshape %4427 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_510 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4429 = stablehlo.reduce(%4428 init: %cst_510) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4430 = stablehlo.broadcast_in_dim %4429, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_511 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4431 = stablehlo.reduce(%4430 init: %cst_511) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4432 = stablehlo.reshape %4431 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4433 = stablehlo.dot_general %4404, %274, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4434 = stablehlo.transpose %4433, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4435 = stablehlo.dot_general %4404, %275, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4436 = stablehlo.add %4425, %4435 : tensor<64x512x768xf32>
    %4437 = stablehlo.reshape %4434 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_512 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4438 = stablehlo.reduce(%4436 init: %cst_512) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4439 = stablehlo.reshape %4438 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4440 = stablehlo.reshape %4439 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4441 = stablehlo.multiply %260, %4436 : tensor<64x512x768xf32>
    %4442 = stablehlo.multiply %4436, %270 : tensor<64x512x768xf32>
    %4443 = stablehlo.broadcast_in_dim %263, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4444 = stablehlo.multiply %4443, %4441 : tensor<64x512x768xf32>
    %cst_513 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4445 = stablehlo.reduce(%4444 init: %cst_513) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4446 = stablehlo.reshape %4445 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4447 = stablehlo.broadcast_in_dim %267, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4448 = stablehlo.multiply %4441, %4447 : tensor<64x512x768xf32>
    %cst_514 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4449 = stablehlo.reduce(%4448 init: %cst_514) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4450 = stablehlo.reshape %4449 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4451 = stablehlo.reshape %4446 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4452 = stablehlo.multiply %4450, %266 : tensor<64x512x1xf32>
    %4453 = stablehlo.negate %4442 : tensor<64x512x768xf32>
    %cst_515 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4454 = stablehlo.reduce(%4453 init: %cst_515) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4455 = stablehlo.reshape %4454 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_516 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4456 = stablehlo.reduce(%4452 init: %cst_516) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_517 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4457 = stablehlo.reduce(%4455 init: %cst_517) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4458 = stablehlo.multiply %4456, %256 : tensor<64x512xf32>
    %4459 = stablehlo.negate %4458 : tensor<64x512xf32>
    %4460 = stablehlo.multiply %4459, %243 : tensor<64x512xf32>
    %4461 = stablehlo.add %4457, %4460 : tensor<64x512xf32>
    %4462 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4463 = stablehlo.divide %4458, %4462 : tensor<64x512xf32>
    %4464 = stablehlo.broadcast_in_dim %4463, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4465 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4466 = stablehlo.divide %4461, %4465 : tensor<64x512xf32>
    %4467 = stablehlo.broadcast_in_dim %4466, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4468 = stablehlo.add %4442, %4467 : tensor<64x512x768xf32>
    %4469 = stablehlo.multiply %4464, %234 : tensor<64x512x768xf32>
    %4470 = stablehlo.add %4468, %4469 : tensor<64x512x768xf32>
    %4471 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4472 = stablehlo.select %226, %4470, %4471 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4473 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4474 = stablehlo.divide %4472, %4473 : tensor<64x512x768xf32>
    %cst_518 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4475 = stablehlo.reduce(%4474 init: %cst_518) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4476 = stablehlo.reshape %4475 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_519 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4477 = stablehlo.reduce(%4476 init: %cst_519) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4478 = stablehlo.broadcast_in_dim %4477, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_520 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4479 = stablehlo.reduce(%4478 init: %cst_520) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4480 = stablehlo.dot_general %4474, %218, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4481 = stablehlo.transpose %4480, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4482 = stablehlo.dot_general %4474, %arg14, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4483 = stablehlo.multiply %199, %4482 : tensor<64x512x3072xf32>
    %4484 = stablehlo.multiply %4482, %217 : tensor<64x512x3072xf32>
    %4485 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4486 = stablehlo.multiply %4485, %4483 : tensor<64x512x3072xf32>
    %4487 = stablehlo.multiply %4486, %213 : tensor<64x512x3072xf32>
    %4488 = stablehlo.multiply %4487, %210 : tensor<64x512x3072xf32>
    %4489 = stablehlo.add %4487, %4488 : tensor<64x512x3072xf32>
    %4490 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4491 = stablehlo.multiply %4490, %4489 : tensor<64x512x3072xf32>
    %4492 = stablehlo.add %4484, %4491 : tensor<64x512x3072xf32>
    %4493 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4494 = stablehlo.multiply %4493, %4491 : tensor<64x512x3072xf32>
    %4495 = stablehlo.multiply %4494, %204 : tensor<64x512x3072xf32>
    %4496 = stablehlo.add %4492, %4495 : tensor<64x512x3072xf32>
    %cst_521 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4497 = stablehlo.reduce(%4496 init: %cst_521) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4498 = stablehlo.reshape %4497 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_522 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4499 = stablehlo.reduce(%4498 init: %cst_522) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4500 = stablehlo.broadcast_in_dim %4499, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_523 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4501 = stablehlo.reduce(%4500 init: %cst_523) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4502 = stablehlo.dot_general %4496, %194, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4503 = stablehlo.transpose %4502, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4504 = stablehlo.dot_general %4496, %arg18, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4505 = stablehlo.add %4470, %4504 : tensor<64x512x768xf32>
    %cst_524 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4506 = stablehlo.reduce(%4505 init: %cst_524) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4507 = stablehlo.reshape %4506 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4508 = stablehlo.reshape %4507 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4509 = stablehlo.multiply %180, %4505 : tensor<64x512x768xf32>
    %4510 = stablehlo.multiply %4505, %190 : tensor<64x512x768xf32>
    %4511 = stablehlo.broadcast_in_dim %183, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4512 = stablehlo.multiply %4511, %4509 : tensor<64x512x768xf32>
    %cst_525 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4513 = stablehlo.reduce(%4512 init: %cst_525) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4514 = stablehlo.reshape %4513 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4515 = stablehlo.broadcast_in_dim %187, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4516 = stablehlo.multiply %4509, %4515 : tensor<64x512x768xf32>
    %cst_526 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4517 = stablehlo.reduce(%4516 init: %cst_526) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4518 = stablehlo.reshape %4517 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4519 = stablehlo.reshape %4514 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4520 = stablehlo.multiply %4518, %186 : tensor<64x512x1xf32>
    %4521 = stablehlo.negate %4510 : tensor<64x512x768xf32>
    %cst_527 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4522 = stablehlo.reduce(%4521 init: %cst_527) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4523 = stablehlo.reshape %4522 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_528 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4524 = stablehlo.reduce(%4520 init: %cst_528) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_529 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4525 = stablehlo.reduce(%4523 init: %cst_529) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4526 = stablehlo.multiply %4524, %176 : tensor<64x512xf32>
    %4527 = stablehlo.negate %4526 : tensor<64x512xf32>
    %4528 = stablehlo.multiply %4527, %163 : tensor<64x512xf32>
    %4529 = stablehlo.add %4525, %4528 : tensor<64x512xf32>
    %4530 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4531 = stablehlo.divide %4526, %4530 : tensor<64x512xf32>
    %4532 = stablehlo.broadcast_in_dim %4531, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4533 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4534 = stablehlo.divide %4529, %4533 : tensor<64x512xf32>
    %4535 = stablehlo.broadcast_in_dim %4534, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4536 = stablehlo.add %4510, %4535 : tensor<64x512x768xf32>
    %4537 = stablehlo.multiply %4532, %154 : tensor<64x512x768xf32>
    %4538 = stablehlo.add %4536, %4537 : tensor<64x512x768xf32>
    %4539 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4540 = stablehlo.select %146, %4538, %4539 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4541 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4542 = stablehlo.divide %4540, %4541 : tensor<64x512x768xf32>
    %cst_530 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4543 = stablehlo.reduce(%4542 init: %cst_530) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4544 = stablehlo.reshape %4543 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_531 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4545 = stablehlo.reduce(%4544 init: %cst_531) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4546 = stablehlo.broadcast_in_dim %4545, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_532 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4547 = stablehlo.reduce(%4546 init: %cst_532) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4548 = stablehlo.dot_general %4542, %138, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4549 = stablehlo.transpose %4548, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4550 = stablehlo.dot_general %4542, %139, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4551 = stablehlo.reshape %4549 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4552 = stablehlo.transpose %4550, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4553 = stablehlo.dot_general %4552, %102, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4554 = stablehlo.dot_general %4552, %136, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4555 = stablehlo.transpose %4554, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4556 = stablehlo.multiply %4553, %135 : tensor<64x12x512x512xf32>
    %4557 = stablehlo.broadcast_in_dim %131, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4558 = stablehlo.multiply %4556, %4557 : tensor<64x12x512x512xf32>
    %4559 = stablehlo.multiply %4558, %124 : tensor<64x12x512x512xf32>
    %cst_533 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4560 = stablehlo.reduce(%4559 init: %cst_533) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4561 = stablehlo.reshape %4560 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4562 = stablehlo.negate %4561 : tensor<64x12x512x1xf32>
    %4563 = stablehlo.broadcast_in_dim %126, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4564 = stablehlo.divide %4556, %4563 : tensor<64x12x512x512xf32>
    %cst_534 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4565 = stablehlo.reduce(%4562 init: %cst_534) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4566 = stablehlo.broadcast_in_dim %4565, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4567 = stablehlo.add %4564, %4566 : tensor<64x12x512x512xf32>
    %4568 = stablehlo.multiply %4567, %124 : tensor<64x12x512x512xf32>
    %4569 = stablehlo.dot_general %4568, %114, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4570 = stablehlo.transpose %4569, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4571 = stablehlo.dot_general %4568, %95, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4572 = stablehlo.transpose %4571, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4573 = stablehlo.broadcast_in_dim %112, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4574 = stablehlo.divide %4572, %4573 : tensor<64x512x12x64xf32>
    %cst_535 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4575 = stablehlo.reduce(%4555 init: %cst_535) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4576 = stablehlo.reshape %4575 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_536 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4577 = stablehlo.reduce(%4576 init: %cst_536) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4578 = stablehlo.broadcast_in_dim %4577, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_537 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4579 = stablehlo.reduce(%4578 init: %cst_537) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4580 = stablehlo.reshape %4579 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4581 = stablehlo.dot_general %4555, %74, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4582 = stablehlo.transpose %4581, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4583 = stablehlo.dot_general %4555, %96, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4584 = stablehlo.add %4538, %4583 : tensor<64x512x768xf32>
    %4585 = stablehlo.reshape %4582 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_538 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4586 = stablehlo.reduce(%4570 init: %cst_538) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4587 = stablehlo.reshape %4586 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_539 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4588 = stablehlo.reduce(%4587 init: %cst_539) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4589 = stablehlo.broadcast_in_dim %4588, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_540 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4590 = stablehlo.reduce(%4589 init: %cst_540) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4591 = stablehlo.reshape %4590 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4592 = stablehlo.dot_general %4570, %74, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4593 = stablehlo.transpose %4592, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4594 = stablehlo.dot_general %4570, %89, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4595 = stablehlo.add %4584, %4594 : tensor<64x512x768xf32>
    %4596 = stablehlo.reshape %4593 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_541 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4597 = stablehlo.reduce(%4574 init: %cst_541) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4598 = stablehlo.reshape %4597 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_542 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4599 = stablehlo.reduce(%4598 init: %cst_542) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4600 = stablehlo.broadcast_in_dim %4599, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_543 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4601 = stablehlo.reduce(%4600 init: %cst_543) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4602 = stablehlo.reshape %4601 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4603 = stablehlo.dot_general %4574, %74, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4604 = stablehlo.transpose %4603, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4605 = stablehlo.dot_general %4574, %82, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4606 = stablehlo.add %4595, %4605 : tensor<64x512x768xf32>
    %4607 = stablehlo.reshape %4604 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %4608 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4609 = stablehlo.select %70, %4606, %4608 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4610 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4611 = stablehlo.divide %4609, %4610 : tensor<64x512x768xf32>
    %cst_544 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4612 = stablehlo.reduce(%4611 init: %cst_544) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4613 = stablehlo.reshape %4612 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4614 = stablehlo.reshape %4613 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4615 = stablehlo.multiply %54, %4611 : tensor<64x512x768xf32>
    %4616 = stablehlo.multiply %4611, %64 : tensor<64x512x768xf32>
    %4617 = stablehlo.broadcast_in_dim %57, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4618 = stablehlo.multiply %4617, %4615 : tensor<64x512x768xf32>
    %cst_545 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4619 = stablehlo.reduce(%4618 init: %cst_545) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4620 = stablehlo.reshape %4619 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4621 = stablehlo.broadcast_in_dim %61, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4622 = stablehlo.multiply %4615, %4621 : tensor<64x512x768xf32>
    %cst_546 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4623 = stablehlo.reduce(%4622 init: %cst_546) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4624 = stablehlo.reshape %4623 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4625 = stablehlo.reshape %4620 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4626 = stablehlo.multiply %4624, %60 : tensor<64x512x1xf32>
    %4627 = stablehlo.negate %4616 : tensor<64x512x768xf32>
    %cst_547 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4628 = stablehlo.reduce(%4627 init: %cst_547) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4629 = stablehlo.reshape %4628 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_548 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4630 = stablehlo.reduce(%4626 init: %cst_548) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_549 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4631 = stablehlo.reduce(%4629 init: %cst_549) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4632 = stablehlo.multiply %4630, %50 : tensor<64x512xf32>
    %4633 = stablehlo.negate %4632 : tensor<64x512xf32>
    %4634 = stablehlo.multiply %4633, %37 : tensor<64x512xf32>
    %4635 = stablehlo.add %4631, %4634 : tensor<64x512xf32>
    %4636 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4637 = stablehlo.divide %4632, %4636 : tensor<64x512xf32>
    %4638 = stablehlo.broadcast_in_dim %4637, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4639 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4640 = stablehlo.divide %4635, %4639 : tensor<64x512xf32>
    %4641 = stablehlo.broadcast_in_dim %4640, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4642 = stablehlo.add %4616, %4641 : tensor<64x512x768xf32>
    %4643 = stablehlo.multiply %4638, %28 : tensor<64x512x768xf32>
    %4644 = stablehlo.add %4642, %4643 : tensor<64x512x768xf32>
    %4645 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4646 = "stablehlo.scatter"(%4645, %22, %4644) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11792 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11792 : tensor<f32>
    }) : (tensor<2x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<2x768xf32>
    %4647 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4648 = "stablehlo.scatter"(%4647, %15, %4644) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11792 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11792 : tensor<f32>
    }) : (tensor<512x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<512x768xf32>
    %4649 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4650 = "stablehlo.scatter"(%4649, %8, %4644) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11792 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11792 : tensor<f32>
    }) : (tensor<30522x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %4651 = stablehlo.multiply %4648, %4648 : tensor<512x768xf32>
    %cst_550 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4652 = stablehlo.reduce(%4651 init: %cst_550) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %4653 = stablehlo.add %cst_6, %4652 : tensor<f32>
    %4654 = stablehlo.multiply %4646, %4646 : tensor<2x768xf32>
    %cst_551 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4655 = stablehlo.reduce(%4654 init: %cst_551) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %4656 = stablehlo.add %4653, %4655 : tensor<f32>
    %4657 = stablehlo.multiply %4650, %4650 : tensor<30522x768xf32>
    %cst_552 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4658 = stablehlo.reduce(%4657 init: %cst_552) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %4659 = stablehlo.add %4656, %4658 : tensor<f32>
    %4660 = stablehlo.multiply %4591, %4591 : tensor<768xf32>
    %cst_553 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4661 = stablehlo.reduce(%4660 init: %cst_553) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4662 = stablehlo.add %4659, %4661 : tensor<f32>
    %4663 = stablehlo.multiply %4596, %4596 : tensor<768x768xf32>
    %cst_554 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4664 = stablehlo.reduce(%4663 init: %cst_554) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4665 = stablehlo.add %4662, %4664 : tensor<f32>
    %4666 = stablehlo.multiply %4602, %4602 : tensor<768xf32>
    %cst_555 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4667 = stablehlo.reduce(%4666 init: %cst_555) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4668 = stablehlo.add %4665, %4667 : tensor<f32>
    %4669 = stablehlo.multiply %4607, %4607 : tensor<768x768xf32>
    %cst_556 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4670 = stablehlo.reduce(%4669 init: %cst_556) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4671 = stablehlo.add %4668, %4670 : tensor<f32>
    %4672 = stablehlo.multiply %4580, %4580 : tensor<768xf32>
    %cst_557 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4673 = stablehlo.reduce(%4672 init: %cst_557) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4674 = stablehlo.add %4671, %4673 : tensor<f32>
    %4675 = stablehlo.multiply %4585, %4585 : tensor<768x768xf32>
    %cst_558 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4676 = stablehlo.reduce(%4675 init: %cst_558) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4677 = stablehlo.add %4674, %4676 : tensor<f32>
    %4678 = stablehlo.multiply %4547, %4547 : tensor<768xf32>
    %cst_559 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4679 = stablehlo.reduce(%4678 init: %cst_559) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4680 = stablehlo.add %4677, %4679 : tensor<f32>
    %4681 = stablehlo.multiply %4551, %4551 : tensor<768x768xf32>
    %cst_560 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4682 = stablehlo.reduce(%4681 init: %cst_560) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4683 = stablehlo.add %4680, %4682 : tensor<f32>
    %4684 = stablehlo.multiply %4508, %4508 : tensor<768xf32>
    %cst_561 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4685 = stablehlo.reduce(%4684 init: %cst_561) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4686 = stablehlo.add %4683, %4685 : tensor<f32>
    %4687 = stablehlo.multiply %4519, %4519 : tensor<768xf32>
    %cst_562 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4688 = stablehlo.reduce(%4687 init: %cst_562) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4689 = stablehlo.add %4686, %4688 : tensor<f32>
    %4690 = stablehlo.multiply %4479, %4479 : tensor<768xf32>
    %cst_563 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4691 = stablehlo.reduce(%4690 init: %cst_563) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4692 = stablehlo.add %4689, %4691 : tensor<f32>
    %4693 = stablehlo.multiply %4481, %4481 : tensor<3072x768xf32>
    %cst_564 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4694 = stablehlo.reduce(%4693 init: %cst_564) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4695 = stablehlo.add %4692, %4694 : tensor<f32>
    %4696 = stablehlo.multiply %4440, %4440 : tensor<768xf32>
    %cst_565 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4697 = stablehlo.reduce(%4696 init: %cst_565) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4698 = stablehlo.add %4695, %4697 : tensor<f32>
    %4699 = stablehlo.multiply %4451, %4451 : tensor<768xf32>
    %cst_566 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4700 = stablehlo.reduce(%4699 init: %cst_566) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4701 = stablehlo.add %4698, %4700 : tensor<f32>
    %4702 = stablehlo.multiply %4501, %4501 : tensor<3072xf32>
    %cst_567 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4703 = stablehlo.reduce(%4702 init: %cst_567) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4704 = stablehlo.add %4701, %4703 : tensor<f32>
    %4705 = stablehlo.multiply %4503, %4503 : tensor<768x3072xf32>
    %cst_568 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4706 = stablehlo.reduce(%4705 init: %cst_568) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4707 = stablehlo.add %4704, %4706 : tensor<f32>
    %4708 = stablehlo.multiply %4421, %4421 : tensor<768xf32>
    %cst_569 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4709 = stablehlo.reduce(%4708 init: %cst_569) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4710 = stablehlo.add %4707, %4709 : tensor<f32>
    %4711 = stablehlo.multiply %4426, %4426 : tensor<768x768xf32>
    %cst_570 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4712 = stablehlo.reduce(%4711 init: %cst_570) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4713 = stablehlo.add %4710, %4712 : tensor<f32>
    %4714 = stablehlo.multiply %4432, %4432 : tensor<768xf32>
    %cst_571 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4715 = stablehlo.reduce(%4714 init: %cst_571) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4716 = stablehlo.add %4713, %4715 : tensor<f32>
    %4717 = stablehlo.multiply %4437, %4437 : tensor<768x768xf32>
    %cst_572 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4718 = stablehlo.reduce(%4717 init: %cst_572) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4719 = stablehlo.add %4716, %4718 : tensor<f32>
    %4720 = stablehlo.multiply %4410, %4410 : tensor<768xf32>
    %cst_573 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4721 = stablehlo.reduce(%4720 init: %cst_573) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4722 = stablehlo.add %4719, %4721 : tensor<f32>
    %4723 = stablehlo.multiply %4415, %4415 : tensor<768x768xf32>
    %cst_574 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4724 = stablehlo.reduce(%4723 init: %cst_574) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4725 = stablehlo.add %4722, %4724 : tensor<f32>
    %4726 = stablehlo.multiply %4377, %4377 : tensor<768xf32>
    %cst_575 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4727 = stablehlo.reduce(%4726 init: %cst_575) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4728 = stablehlo.add %4725, %4727 : tensor<f32>
    %4729 = stablehlo.multiply %4381, %4381 : tensor<768x768xf32>
    %cst_576 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4730 = stablehlo.reduce(%4729 init: %cst_576) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4731 = stablehlo.add %4728, %4730 : tensor<f32>
    %4732 = stablehlo.multiply %4338, %4338 : tensor<768xf32>
    %cst_577 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4733 = stablehlo.reduce(%4732 init: %cst_577) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4734 = stablehlo.add %4731, %4733 : tensor<f32>
    %4735 = stablehlo.multiply %4349, %4349 : tensor<768xf32>
    %cst_578 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4736 = stablehlo.reduce(%4735 init: %cst_578) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4737 = stablehlo.add %4734, %4736 : tensor<f32>
    %4738 = stablehlo.multiply %4309, %4309 : tensor<768xf32>
    %cst_579 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4739 = stablehlo.reduce(%4738 init: %cst_579) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4740 = stablehlo.add %4737, %4739 : tensor<f32>
    %4741 = stablehlo.multiply %4311, %4311 : tensor<3072x768xf32>
    %cst_580 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4742 = stablehlo.reduce(%4741 init: %cst_580) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4743 = stablehlo.add %4740, %4742 : tensor<f32>
    %4744 = stablehlo.multiply %4270, %4270 : tensor<768xf32>
    %cst_581 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4745 = stablehlo.reduce(%4744 init: %cst_581) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4746 = stablehlo.add %4743, %4745 : tensor<f32>
    %4747 = stablehlo.multiply %4281, %4281 : tensor<768xf32>
    %cst_582 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4748 = stablehlo.reduce(%4747 init: %cst_582) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4749 = stablehlo.add %4746, %4748 : tensor<f32>
    %4750 = stablehlo.multiply %4331, %4331 : tensor<3072xf32>
    %cst_583 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4751 = stablehlo.reduce(%4750 init: %cst_583) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4752 = stablehlo.add %4749, %4751 : tensor<f32>
    %4753 = stablehlo.multiply %4333, %4333 : tensor<768x3072xf32>
    %cst_584 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4754 = stablehlo.reduce(%4753 init: %cst_584) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4755 = stablehlo.add %4752, %4754 : tensor<f32>
    %4756 = stablehlo.multiply %2891, %2891 : tensor<768xf32>
    %cst_585 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4757 = stablehlo.reduce(%4756 init: %cst_585) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4758 = stablehlo.add %4755, %4757 : tensor<f32>
    %4759 = stablehlo.multiply %2896, %2896 : tensor<768x768xf32>
    %cst_586 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4760 = stablehlo.reduce(%4759 init: %cst_586) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4761 = stablehlo.add %4758, %4760 : tensor<f32>
    %4762 = stablehlo.multiply %2902, %2902 : tensor<768xf32>
    %cst_587 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4763 = stablehlo.reduce(%4762 init: %cst_587) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4764 = stablehlo.add %4761, %4763 : tensor<f32>
    %4765 = stablehlo.multiply %2907, %2907 : tensor<768x768xf32>
    %cst_588 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4766 = stablehlo.reduce(%4765 init: %cst_588) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4767 = stablehlo.add %4764, %4766 : tensor<f32>
    %4768 = stablehlo.multiply %2880, %2880 : tensor<768xf32>
    %cst_589 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4769 = stablehlo.reduce(%4768 init: %cst_589) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4770 = stablehlo.add %4767, %4769 : tensor<f32>
    %4771 = stablehlo.multiply %2885, %2885 : tensor<768x768xf32>
    %cst_590 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4772 = stablehlo.reduce(%4771 init: %cst_590) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4773 = stablehlo.add %4770, %4772 : tensor<f32>
    %4774 = stablehlo.multiply %2847, %2847 : tensor<768xf32>
    %cst_591 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4775 = stablehlo.reduce(%4774 init: %cst_591) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4776 = stablehlo.add %4773, %4775 : tensor<f32>
    %4777 = stablehlo.multiply %2851, %2851 : tensor<768x768xf32>
    %cst_592 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4778 = stablehlo.reduce(%4777 init: %cst_592) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4779 = stablehlo.add %4776, %4778 : tensor<f32>
    %4780 = stablehlo.multiply %2808, %2808 : tensor<768xf32>
    %cst_593 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4781 = stablehlo.reduce(%4780 init: %cst_593) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4782 = stablehlo.add %4779, %4781 : tensor<f32>
    %4783 = stablehlo.multiply %2819, %2819 : tensor<768xf32>
    %cst_594 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4784 = stablehlo.reduce(%4783 init: %cst_594) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4785 = stablehlo.add %4782, %4784 : tensor<f32>
    %4786 = stablehlo.multiply %2779, %2779 : tensor<768xf32>
    %cst_595 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4787 = stablehlo.reduce(%4786 init: %cst_595) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4788 = stablehlo.add %4785, %4787 : tensor<f32>
    %4789 = stablehlo.multiply %2781, %2781 : tensor<3072x768xf32>
    %cst_596 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4790 = stablehlo.reduce(%4789 init: %cst_596) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4791 = stablehlo.add %4788, %4790 : tensor<f32>
    %4792 = stablehlo.multiply %2740, %2740 : tensor<768xf32>
    %cst_597 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4793 = stablehlo.reduce(%4792 init: %cst_597) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4794 = stablehlo.add %4791, %4793 : tensor<f32>
    %4795 = stablehlo.multiply %2751, %2751 : tensor<768xf32>
    %cst_598 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4796 = stablehlo.reduce(%4795 init: %cst_598) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4797 = stablehlo.add %4794, %4796 : tensor<f32>
    %4798 = stablehlo.multiply %2801, %2801 : tensor<3072xf32>
    %cst_599 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4799 = stablehlo.reduce(%4798 init: %cst_599) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4800 = stablehlo.add %4797, %4799 : tensor<f32>
    %4801 = stablehlo.multiply %2803, %2803 : tensor<768x3072xf32>
    %cst_600 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4802 = stablehlo.reduce(%4801 init: %cst_600) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4803 = stablehlo.add %4800, %4802 : tensor<f32>
    %4804 = stablehlo.multiply %2721, %2721 : tensor<768xf32>
    %cst_601 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4805 = stablehlo.reduce(%4804 init: %cst_601) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4806 = stablehlo.add %4803, %4805 : tensor<f32>
    %4807 = stablehlo.multiply %2726, %2726 : tensor<768x768xf32>
    %cst_602 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4808 = stablehlo.reduce(%4807 init: %cst_602) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4809 = stablehlo.add %4806, %4808 : tensor<f32>
    %4810 = stablehlo.multiply %2732, %2732 : tensor<768xf32>
    %cst_603 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4811 = stablehlo.reduce(%4810 init: %cst_603) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4812 = stablehlo.add %4809, %4811 : tensor<f32>
    %4813 = stablehlo.multiply %2737, %2737 : tensor<768x768xf32>
    %cst_604 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4814 = stablehlo.reduce(%4813 init: %cst_604) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4815 = stablehlo.add %4812, %4814 : tensor<f32>
    %4816 = stablehlo.multiply %2710, %2710 : tensor<768xf32>
    %cst_605 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4817 = stablehlo.reduce(%4816 init: %cst_605) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4818 = stablehlo.add %4815, %4817 : tensor<f32>
    %4819 = stablehlo.multiply %2715, %2715 : tensor<768x768xf32>
    %cst_606 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4820 = stablehlo.reduce(%4819 init: %cst_606) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4821 = stablehlo.add %4818, %4820 : tensor<f32>
    %4822 = stablehlo.multiply %2677, %2677 : tensor<768xf32>
    %cst_607 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4823 = stablehlo.reduce(%4822 init: %cst_607) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4824 = stablehlo.add %4821, %4823 : tensor<f32>
    %4825 = stablehlo.multiply %2681, %2681 : tensor<768x768xf32>
    %cst_608 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4826 = stablehlo.reduce(%4825 init: %cst_608) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4827 = stablehlo.add %4824, %4826 : tensor<f32>
    %4828 = stablehlo.multiply %2638, %2638 : tensor<768xf32>
    %cst_609 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4829 = stablehlo.reduce(%4828 init: %cst_609) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4830 = stablehlo.add %4827, %4829 : tensor<f32>
    %4831 = stablehlo.multiply %2649, %2649 : tensor<768xf32>
    %cst_610 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4832 = stablehlo.reduce(%4831 init: %cst_610) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4833 = stablehlo.add %4830, %4832 : tensor<f32>
    %4834 = stablehlo.multiply %2609, %2609 : tensor<768xf32>
    %cst_611 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4835 = stablehlo.reduce(%4834 init: %cst_611) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4836 = stablehlo.add %4833, %4835 : tensor<f32>
    %4837 = stablehlo.multiply %2611, %2611 : tensor<3072x768xf32>
    %cst_612 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4838 = stablehlo.reduce(%4837 init: %cst_612) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4839 = stablehlo.add %4836, %4838 : tensor<f32>
    %4840 = stablehlo.multiply %2570, %2570 : tensor<768xf32>
    %cst_613 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4841 = stablehlo.reduce(%4840 init: %cst_613) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4842 = stablehlo.add %4839, %4841 : tensor<f32>
    %4843 = stablehlo.multiply %2581, %2581 : tensor<768xf32>
    %cst_614 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4844 = stablehlo.reduce(%4843 init: %cst_614) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4845 = stablehlo.add %4842, %4844 : tensor<f32>
    %4846 = stablehlo.multiply %2631, %2631 : tensor<3072xf32>
    %cst_615 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4847 = stablehlo.reduce(%4846 init: %cst_615) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4848 = stablehlo.add %4845, %4847 : tensor<f32>
    %4849 = stablehlo.multiply %2633, %2633 : tensor<768x3072xf32>
    %cst_616 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4850 = stablehlo.reduce(%4849 init: %cst_616) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4851 = stablehlo.add %4848, %4850 : tensor<f32>
    %4852 = stablehlo.multiply %4251, %4251 : tensor<768xf32>
    %cst_617 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4853 = stablehlo.reduce(%4852 init: %cst_617) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4854 = stablehlo.add %4851, %4853 : tensor<f32>
    %4855 = stablehlo.multiply %4256, %4256 : tensor<768x768xf32>
    %cst_618 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4856 = stablehlo.reduce(%4855 init: %cst_618) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4857 = stablehlo.add %4854, %4856 : tensor<f32>
    %4858 = stablehlo.multiply %4262, %4262 : tensor<768xf32>
    %cst_619 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4859 = stablehlo.reduce(%4858 init: %cst_619) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4860 = stablehlo.add %4857, %4859 : tensor<f32>
    %4861 = stablehlo.multiply %4267, %4267 : tensor<768x768xf32>
    %cst_620 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4862 = stablehlo.reduce(%4861 init: %cst_620) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4863 = stablehlo.add %4860, %4862 : tensor<f32>
    %4864 = stablehlo.multiply %4240, %4240 : tensor<768xf32>
    %cst_621 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4865 = stablehlo.reduce(%4864 init: %cst_621) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4866 = stablehlo.add %4863, %4865 : tensor<f32>
    %4867 = stablehlo.multiply %4245, %4245 : tensor<768x768xf32>
    %cst_622 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4868 = stablehlo.reduce(%4867 init: %cst_622) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4869 = stablehlo.add %4866, %4868 : tensor<f32>
    %4870 = stablehlo.multiply %4207, %4207 : tensor<768xf32>
    %cst_623 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4871 = stablehlo.reduce(%4870 init: %cst_623) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4872 = stablehlo.add %4869, %4871 : tensor<f32>
    %4873 = stablehlo.multiply %4211, %4211 : tensor<768x768xf32>
    %cst_624 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4874 = stablehlo.reduce(%4873 init: %cst_624) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4875 = stablehlo.add %4872, %4874 : tensor<f32>
    %4876 = stablehlo.multiply %4168, %4168 : tensor<768xf32>
    %cst_625 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4877 = stablehlo.reduce(%4876 init: %cst_625) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4878 = stablehlo.add %4875, %4877 : tensor<f32>
    %4879 = stablehlo.multiply %4179, %4179 : tensor<768xf32>
    %cst_626 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4880 = stablehlo.reduce(%4879 init: %cst_626) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4881 = stablehlo.add %4878, %4880 : tensor<f32>
    %4882 = stablehlo.multiply %4139, %4139 : tensor<768xf32>
    %cst_627 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4883 = stablehlo.reduce(%4882 init: %cst_627) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4884 = stablehlo.add %4881, %4883 : tensor<f32>
    %4885 = stablehlo.multiply %4141, %4141 : tensor<3072x768xf32>
    %cst_628 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4886 = stablehlo.reduce(%4885 init: %cst_628) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4887 = stablehlo.add %4884, %4886 : tensor<f32>
    %4888 = stablehlo.multiply %4100, %4100 : tensor<768xf32>
    %cst_629 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4889 = stablehlo.reduce(%4888 init: %cst_629) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4890 = stablehlo.add %4887, %4889 : tensor<f32>
    %4891 = stablehlo.multiply %4111, %4111 : tensor<768xf32>
    %cst_630 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4892 = stablehlo.reduce(%4891 init: %cst_630) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4893 = stablehlo.add %4890, %4892 : tensor<f32>
    %4894 = stablehlo.multiply %4161, %4161 : tensor<3072xf32>
    %cst_631 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4895 = stablehlo.reduce(%4894 init: %cst_631) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4896 = stablehlo.add %4893, %4895 : tensor<f32>
    %4897 = stablehlo.multiply %4163, %4163 : tensor<768x3072xf32>
    %cst_632 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4898 = stablehlo.reduce(%4897 init: %cst_632) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4899 = stablehlo.add %4896, %4898 : tensor<f32>
    %4900 = stablehlo.multiply %4081, %4081 : tensor<768xf32>
    %cst_633 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4901 = stablehlo.reduce(%4900 init: %cst_633) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4902 = stablehlo.add %4899, %4901 : tensor<f32>
    %4903 = stablehlo.multiply %4086, %4086 : tensor<768x768xf32>
    %cst_634 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4904 = stablehlo.reduce(%4903 init: %cst_634) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4905 = stablehlo.add %4902, %4904 : tensor<f32>
    %4906 = stablehlo.multiply %4092, %4092 : tensor<768xf32>
    %cst_635 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4907 = stablehlo.reduce(%4906 init: %cst_635) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4908 = stablehlo.add %4905, %4907 : tensor<f32>
    %4909 = stablehlo.multiply %4097, %4097 : tensor<768x768xf32>
    %cst_636 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4910 = stablehlo.reduce(%4909 init: %cst_636) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4911 = stablehlo.add %4908, %4910 : tensor<f32>
    %4912 = stablehlo.multiply %4070, %4070 : tensor<768xf32>
    %cst_637 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4913 = stablehlo.reduce(%4912 init: %cst_637) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4914 = stablehlo.add %4911, %4913 : tensor<f32>
    %4915 = stablehlo.multiply %4075, %4075 : tensor<768x768xf32>
    %cst_638 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4916 = stablehlo.reduce(%4915 init: %cst_638) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4917 = stablehlo.add %4914, %4916 : tensor<f32>
    %4918 = stablehlo.multiply %4037, %4037 : tensor<768xf32>
    %cst_639 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4919 = stablehlo.reduce(%4918 init: %cst_639) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4920 = stablehlo.add %4917, %4919 : tensor<f32>
    %4921 = stablehlo.multiply %4041, %4041 : tensor<768x768xf32>
    %cst_640 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4922 = stablehlo.reduce(%4921 init: %cst_640) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4923 = stablehlo.add %4920, %4922 : tensor<f32>
    %4924 = stablehlo.multiply %3998, %3998 : tensor<768xf32>
    %cst_641 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4925 = stablehlo.reduce(%4924 init: %cst_641) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4926 = stablehlo.add %4923, %4925 : tensor<f32>
    %4927 = stablehlo.multiply %4009, %4009 : tensor<768xf32>
    %cst_642 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4928 = stablehlo.reduce(%4927 init: %cst_642) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4929 = stablehlo.add %4926, %4928 : tensor<f32>
    %4930 = stablehlo.multiply %3969, %3969 : tensor<768xf32>
    %cst_643 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4931 = stablehlo.reduce(%4930 init: %cst_643) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4932 = stablehlo.add %4929, %4931 : tensor<f32>
    %4933 = stablehlo.multiply %3971, %3971 : tensor<3072x768xf32>
    %cst_644 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4934 = stablehlo.reduce(%4933 init: %cst_644) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4935 = stablehlo.add %4932, %4934 : tensor<f32>
    %4936 = stablehlo.multiply %3930, %3930 : tensor<768xf32>
    %cst_645 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4937 = stablehlo.reduce(%4936 init: %cst_645) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4938 = stablehlo.add %4935, %4937 : tensor<f32>
    %4939 = stablehlo.multiply %3941, %3941 : tensor<768xf32>
    %cst_646 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4940 = stablehlo.reduce(%4939 init: %cst_646) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4941 = stablehlo.add %4938, %4940 : tensor<f32>
    %4942 = stablehlo.multiply %3991, %3991 : tensor<3072xf32>
    %cst_647 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4943 = stablehlo.reduce(%4942 init: %cst_647) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4944 = stablehlo.add %4941, %4943 : tensor<f32>
    %4945 = stablehlo.multiply %3993, %3993 : tensor<768x3072xf32>
    %cst_648 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4946 = stablehlo.reduce(%4945 init: %cst_648) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4947 = stablehlo.add %4944, %4946 : tensor<f32>
    %4948 = stablehlo.multiply %3911, %3911 : tensor<768xf32>
    %cst_649 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4949 = stablehlo.reduce(%4948 init: %cst_649) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4950 = stablehlo.add %4947, %4949 : tensor<f32>
    %4951 = stablehlo.multiply %3916, %3916 : tensor<768x768xf32>
    %cst_650 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4952 = stablehlo.reduce(%4951 init: %cst_650) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4953 = stablehlo.add %4950, %4952 : tensor<f32>
    %4954 = stablehlo.multiply %3922, %3922 : tensor<768xf32>
    %cst_651 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4955 = stablehlo.reduce(%4954 init: %cst_651) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4956 = stablehlo.add %4953, %4955 : tensor<f32>
    %4957 = stablehlo.multiply %3927, %3927 : tensor<768x768xf32>
    %cst_652 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4958 = stablehlo.reduce(%4957 init: %cst_652) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4959 = stablehlo.add %4956, %4958 : tensor<f32>
    %4960 = stablehlo.multiply %3900, %3900 : tensor<768xf32>
    %cst_653 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4961 = stablehlo.reduce(%4960 init: %cst_653) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4962 = stablehlo.add %4959, %4961 : tensor<f32>
    %4963 = stablehlo.multiply %3905, %3905 : tensor<768x768xf32>
    %cst_654 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4964 = stablehlo.reduce(%4963 init: %cst_654) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4965 = stablehlo.add %4962, %4964 : tensor<f32>
    %4966 = stablehlo.multiply %3867, %3867 : tensor<768xf32>
    %cst_655 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4967 = stablehlo.reduce(%4966 init: %cst_655) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4968 = stablehlo.add %4965, %4967 : tensor<f32>
    %4969 = stablehlo.multiply %3871, %3871 : tensor<768x768xf32>
    %cst_656 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4970 = stablehlo.reduce(%4969 init: %cst_656) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4971 = stablehlo.add %4968, %4970 : tensor<f32>
    %4972 = stablehlo.multiply %3828, %3828 : tensor<768xf32>
    %cst_657 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4973 = stablehlo.reduce(%4972 init: %cst_657) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4974 = stablehlo.add %4971, %4973 : tensor<f32>
    %4975 = stablehlo.multiply %3839, %3839 : tensor<768xf32>
    %cst_658 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4976 = stablehlo.reduce(%4975 init: %cst_658) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4977 = stablehlo.add %4974, %4976 : tensor<f32>
    %4978 = stablehlo.multiply %3799, %3799 : tensor<768xf32>
    %cst_659 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4979 = stablehlo.reduce(%4978 init: %cst_659) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4980 = stablehlo.add %4977, %4979 : tensor<f32>
    %4981 = stablehlo.multiply %3801, %3801 : tensor<3072x768xf32>
    %cst_660 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4982 = stablehlo.reduce(%4981 init: %cst_660) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4983 = stablehlo.add %4980, %4982 : tensor<f32>
    %4984 = stablehlo.multiply %3760, %3760 : tensor<768xf32>
    %cst_661 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4985 = stablehlo.reduce(%4984 init: %cst_661) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4986 = stablehlo.add %4983, %4985 : tensor<f32>
    %4987 = stablehlo.multiply %3771, %3771 : tensor<768xf32>
    %cst_662 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4988 = stablehlo.reduce(%4987 init: %cst_662) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4989 = stablehlo.add %4986, %4988 : tensor<f32>
    %4990 = stablehlo.multiply %3821, %3821 : tensor<3072xf32>
    %cst_663 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4991 = stablehlo.reduce(%4990 init: %cst_663) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4992 = stablehlo.add %4989, %4991 : tensor<f32>
    %4993 = stablehlo.multiply %3823, %3823 : tensor<768x3072xf32>
    %cst_664 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4994 = stablehlo.reduce(%4993 init: %cst_664) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4995 = stablehlo.add %4992, %4994 : tensor<f32>
    %4996 = stablehlo.multiply %3741, %3741 : tensor<768xf32>
    %cst_665 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4997 = stablehlo.reduce(%4996 init: %cst_665) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4998 = stablehlo.add %4995, %4997 : tensor<f32>
    %4999 = stablehlo.multiply %3746, %3746 : tensor<768x768xf32>
    %cst_666 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5000 = stablehlo.reduce(%4999 init: %cst_666) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5001 = stablehlo.add %4998, %5000 : tensor<f32>
    %5002 = stablehlo.multiply %3752, %3752 : tensor<768xf32>
    %cst_667 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5003 = stablehlo.reduce(%5002 init: %cst_667) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5004 = stablehlo.add %5001, %5003 : tensor<f32>
    %5005 = stablehlo.multiply %3757, %3757 : tensor<768x768xf32>
    %cst_668 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5006 = stablehlo.reduce(%5005 init: %cst_668) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5007 = stablehlo.add %5004, %5006 : tensor<f32>
    %5008 = stablehlo.multiply %3730, %3730 : tensor<768xf32>
    %cst_669 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5009 = stablehlo.reduce(%5008 init: %cst_669) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5010 = stablehlo.add %5007, %5009 : tensor<f32>
    %5011 = stablehlo.multiply %3735, %3735 : tensor<768x768xf32>
    %cst_670 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5012 = stablehlo.reduce(%5011 init: %cst_670) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5013 = stablehlo.add %5010, %5012 : tensor<f32>
    %5014 = stablehlo.multiply %3697, %3697 : tensor<768xf32>
    %cst_671 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5015 = stablehlo.reduce(%5014 init: %cst_671) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5016 = stablehlo.add %5013, %5015 : tensor<f32>
    %5017 = stablehlo.multiply %3701, %3701 : tensor<768x768xf32>
    %cst_672 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5018 = stablehlo.reduce(%5017 init: %cst_672) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5019 = stablehlo.add %5016, %5018 : tensor<f32>
    %5020 = stablehlo.multiply %3658, %3658 : tensor<768xf32>
    %cst_673 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5021 = stablehlo.reduce(%5020 init: %cst_673) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5022 = stablehlo.add %5019, %5021 : tensor<f32>
    %5023 = stablehlo.multiply %3669, %3669 : tensor<768xf32>
    %cst_674 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5024 = stablehlo.reduce(%5023 init: %cst_674) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5025 = stablehlo.add %5022, %5024 : tensor<f32>
    %5026 = stablehlo.multiply %3629, %3629 : tensor<768xf32>
    %cst_675 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5027 = stablehlo.reduce(%5026 init: %cst_675) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5028 = stablehlo.add %5025, %5027 : tensor<f32>
    %5029 = stablehlo.multiply %3631, %3631 : tensor<3072x768xf32>
    %cst_676 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5030 = stablehlo.reduce(%5029 init: %cst_676) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5031 = stablehlo.add %5028, %5030 : tensor<f32>
    %5032 = stablehlo.multiply %3590, %3590 : tensor<768xf32>
    %cst_677 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5033 = stablehlo.reduce(%5032 init: %cst_677) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5034 = stablehlo.add %5031, %5033 : tensor<f32>
    %5035 = stablehlo.multiply %3601, %3601 : tensor<768xf32>
    %cst_678 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5036 = stablehlo.reduce(%5035 init: %cst_678) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5037 = stablehlo.add %5034, %5036 : tensor<f32>
    %5038 = stablehlo.multiply %3651, %3651 : tensor<3072xf32>
    %cst_679 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5039 = stablehlo.reduce(%5038 init: %cst_679) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5040 = stablehlo.add %5037, %5039 : tensor<f32>
    %5041 = stablehlo.multiply %3653, %3653 : tensor<768x3072xf32>
    %cst_680 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5042 = stablehlo.reduce(%5041 init: %cst_680) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5043 = stablehlo.add %5040, %5042 : tensor<f32>
    %5044 = stablehlo.multiply %3571, %3571 : tensor<768xf32>
    %cst_681 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5045 = stablehlo.reduce(%5044 init: %cst_681) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5046 = stablehlo.add %5043, %5045 : tensor<f32>
    %5047 = stablehlo.multiply %3576, %3576 : tensor<768x768xf32>
    %cst_682 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5048 = stablehlo.reduce(%5047 init: %cst_682) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5049 = stablehlo.add %5046, %5048 : tensor<f32>
    %5050 = stablehlo.multiply %3582, %3582 : tensor<768xf32>
    %cst_683 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5051 = stablehlo.reduce(%5050 init: %cst_683) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5052 = stablehlo.add %5049, %5051 : tensor<f32>
    %5053 = stablehlo.multiply %3587, %3587 : tensor<768x768xf32>
    %cst_684 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5054 = stablehlo.reduce(%5053 init: %cst_684) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5055 = stablehlo.add %5052, %5054 : tensor<f32>
    %5056 = stablehlo.multiply %3560, %3560 : tensor<768xf32>
    %cst_685 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5057 = stablehlo.reduce(%5056 init: %cst_685) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5058 = stablehlo.add %5055, %5057 : tensor<f32>
    %5059 = stablehlo.multiply %3565, %3565 : tensor<768x768xf32>
    %cst_686 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5060 = stablehlo.reduce(%5059 init: %cst_686) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5061 = stablehlo.add %5058, %5060 : tensor<f32>
    %5062 = stablehlo.multiply %3527, %3527 : tensor<768xf32>
    %cst_687 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5063 = stablehlo.reduce(%5062 init: %cst_687) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5064 = stablehlo.add %5061, %5063 : tensor<f32>
    %5065 = stablehlo.multiply %3531, %3531 : tensor<768x768xf32>
    %cst_688 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5066 = stablehlo.reduce(%5065 init: %cst_688) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5067 = stablehlo.add %5064, %5066 : tensor<f32>
    %5068 = stablehlo.multiply %3488, %3488 : tensor<768xf32>
    %cst_689 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5069 = stablehlo.reduce(%5068 init: %cst_689) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5070 = stablehlo.add %5067, %5069 : tensor<f32>
    %5071 = stablehlo.multiply %3499, %3499 : tensor<768xf32>
    %cst_690 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5072 = stablehlo.reduce(%5071 init: %cst_690) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5073 = stablehlo.add %5070, %5072 : tensor<f32>
    %5074 = stablehlo.multiply %3459, %3459 : tensor<768xf32>
    %cst_691 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5075 = stablehlo.reduce(%5074 init: %cst_691) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5076 = stablehlo.add %5073, %5075 : tensor<f32>
    %5077 = stablehlo.multiply %3461, %3461 : tensor<3072x768xf32>
    %cst_692 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5078 = stablehlo.reduce(%5077 init: %cst_692) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5079 = stablehlo.add %5076, %5078 : tensor<f32>
    %5080 = stablehlo.multiply %3420, %3420 : tensor<768xf32>
    %cst_693 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5081 = stablehlo.reduce(%5080 init: %cst_693) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5082 = stablehlo.add %5079, %5081 : tensor<f32>
    %5083 = stablehlo.multiply %3431, %3431 : tensor<768xf32>
    %cst_694 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5084 = stablehlo.reduce(%5083 init: %cst_694) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5085 = stablehlo.add %5082, %5084 : tensor<f32>
    %5086 = stablehlo.multiply %3481, %3481 : tensor<3072xf32>
    %cst_695 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5087 = stablehlo.reduce(%5086 init: %cst_695) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5088 = stablehlo.add %5085, %5087 : tensor<f32>
    %5089 = stablehlo.multiply %3483, %3483 : tensor<768x3072xf32>
    %cst_696 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5090 = stablehlo.reduce(%5089 init: %cst_696) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5091 = stablehlo.add %5088, %5090 : tensor<f32>
    %5092 = stablehlo.multiply %3401, %3401 : tensor<768xf32>
    %cst_697 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5093 = stablehlo.reduce(%5092 init: %cst_697) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5094 = stablehlo.add %5091, %5093 : tensor<f32>
    %5095 = stablehlo.multiply %3406, %3406 : tensor<768x768xf32>
    %cst_698 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5096 = stablehlo.reduce(%5095 init: %cst_698) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5097 = stablehlo.add %5094, %5096 : tensor<f32>
    %5098 = stablehlo.multiply %3412, %3412 : tensor<768xf32>
    %cst_699 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5099 = stablehlo.reduce(%5098 init: %cst_699) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5100 = stablehlo.add %5097, %5099 : tensor<f32>
    %5101 = stablehlo.multiply %3417, %3417 : tensor<768x768xf32>
    %cst_700 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5102 = stablehlo.reduce(%5101 init: %cst_700) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5103 = stablehlo.add %5100, %5102 : tensor<f32>
    %5104 = stablehlo.multiply %3390, %3390 : tensor<768xf32>
    %cst_701 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5105 = stablehlo.reduce(%5104 init: %cst_701) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5106 = stablehlo.add %5103, %5105 : tensor<f32>
    %5107 = stablehlo.multiply %3395, %3395 : tensor<768x768xf32>
    %cst_702 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5108 = stablehlo.reduce(%5107 init: %cst_702) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5109 = stablehlo.add %5106, %5108 : tensor<f32>
    %5110 = stablehlo.multiply %3357, %3357 : tensor<768xf32>
    %cst_703 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5111 = stablehlo.reduce(%5110 init: %cst_703) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5112 = stablehlo.add %5109, %5111 : tensor<f32>
    %5113 = stablehlo.multiply %3361, %3361 : tensor<768x768xf32>
    %cst_704 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5114 = stablehlo.reduce(%5113 init: %cst_704) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5115 = stablehlo.add %5112, %5114 : tensor<f32>
    %5116 = stablehlo.multiply %3318, %3318 : tensor<768xf32>
    %cst_705 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5117 = stablehlo.reduce(%5116 init: %cst_705) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5118 = stablehlo.add %5115, %5117 : tensor<f32>
    %5119 = stablehlo.multiply %3329, %3329 : tensor<768xf32>
    %cst_706 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5120 = stablehlo.reduce(%5119 init: %cst_706) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5121 = stablehlo.add %5118, %5120 : tensor<f32>
    %5122 = stablehlo.multiply %3289, %3289 : tensor<768xf32>
    %cst_707 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5123 = stablehlo.reduce(%5122 init: %cst_707) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5124 = stablehlo.add %5121, %5123 : tensor<f32>
    %5125 = stablehlo.multiply %3291, %3291 : tensor<3072x768xf32>
    %cst_708 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5126 = stablehlo.reduce(%5125 init: %cst_708) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5127 = stablehlo.add %5124, %5126 : tensor<f32>
    %5128 = stablehlo.multiply %3250, %3250 : tensor<768xf32>
    %cst_709 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5129 = stablehlo.reduce(%5128 init: %cst_709) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5130 = stablehlo.add %5127, %5129 : tensor<f32>
    %5131 = stablehlo.multiply %3261, %3261 : tensor<768xf32>
    %cst_710 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5132 = stablehlo.reduce(%5131 init: %cst_710) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5133 = stablehlo.add %5130, %5132 : tensor<f32>
    %5134 = stablehlo.multiply %3311, %3311 : tensor<3072xf32>
    %cst_711 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5135 = stablehlo.reduce(%5134 init: %cst_711) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5136 = stablehlo.add %5133, %5135 : tensor<f32>
    %5137 = stablehlo.multiply %3313, %3313 : tensor<768x3072xf32>
    %cst_712 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5138 = stablehlo.reduce(%5137 init: %cst_712) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5139 = stablehlo.add %5136, %5138 : tensor<f32>
    %5140 = stablehlo.multiply %3231, %3231 : tensor<768xf32>
    %cst_713 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5141 = stablehlo.reduce(%5140 init: %cst_713) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5142 = stablehlo.add %5139, %5141 : tensor<f32>
    %5143 = stablehlo.multiply %3236, %3236 : tensor<768x768xf32>
    %cst_714 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5144 = stablehlo.reduce(%5143 init: %cst_714) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5145 = stablehlo.add %5142, %5144 : tensor<f32>
    %5146 = stablehlo.multiply %3242, %3242 : tensor<768xf32>
    %cst_715 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5147 = stablehlo.reduce(%5146 init: %cst_715) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5148 = stablehlo.add %5145, %5147 : tensor<f32>
    %5149 = stablehlo.multiply %3247, %3247 : tensor<768x768xf32>
    %cst_716 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5150 = stablehlo.reduce(%5149 init: %cst_716) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5151 = stablehlo.add %5148, %5150 : tensor<f32>
    %5152 = stablehlo.multiply %3220, %3220 : tensor<768xf32>
    %cst_717 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5153 = stablehlo.reduce(%5152 init: %cst_717) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5154 = stablehlo.add %5151, %5153 : tensor<f32>
    %5155 = stablehlo.multiply %3225, %3225 : tensor<768x768xf32>
    %cst_718 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5156 = stablehlo.reduce(%5155 init: %cst_718) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5157 = stablehlo.add %5154, %5156 : tensor<f32>
    %5158 = stablehlo.multiply %3187, %3187 : tensor<768xf32>
    %cst_719 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5159 = stablehlo.reduce(%5158 init: %cst_719) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5160 = stablehlo.add %5157, %5159 : tensor<f32>
    %5161 = stablehlo.multiply %3191, %3191 : tensor<768x768xf32>
    %cst_720 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5162 = stablehlo.reduce(%5161 init: %cst_720) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5163 = stablehlo.add %5160, %5162 : tensor<f32>
    %5164 = stablehlo.multiply %3148, %3148 : tensor<768xf32>
    %cst_721 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5165 = stablehlo.reduce(%5164 init: %cst_721) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5166 = stablehlo.add %5163, %5165 : tensor<f32>
    %5167 = stablehlo.multiply %3159, %3159 : tensor<768xf32>
    %cst_722 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5168 = stablehlo.reduce(%5167 init: %cst_722) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5169 = stablehlo.add %5166, %5168 : tensor<f32>
    %5170 = stablehlo.multiply %3119, %3119 : tensor<768xf32>
    %cst_723 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5171 = stablehlo.reduce(%5170 init: %cst_723) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5172 = stablehlo.add %5169, %5171 : tensor<f32>
    %5173 = stablehlo.multiply %3121, %3121 : tensor<3072x768xf32>
    %cst_724 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5174 = stablehlo.reduce(%5173 init: %cst_724) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5175 = stablehlo.add %5172, %5174 : tensor<f32>
    %5176 = stablehlo.multiply %3080, %3080 : tensor<768xf32>
    %cst_725 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5177 = stablehlo.reduce(%5176 init: %cst_725) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5178 = stablehlo.add %5175, %5177 : tensor<f32>
    %5179 = stablehlo.multiply %3091, %3091 : tensor<768xf32>
    %cst_726 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5180 = stablehlo.reduce(%5179 init: %cst_726) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5181 = stablehlo.add %5178, %5180 : tensor<f32>
    %5182 = stablehlo.multiply %3141, %3141 : tensor<3072xf32>
    %cst_727 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5183 = stablehlo.reduce(%5182 init: %cst_727) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5184 = stablehlo.add %5181, %5183 : tensor<f32>
    %5185 = stablehlo.multiply %3143, %3143 : tensor<768x3072xf32>
    %cst_728 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5186 = stablehlo.reduce(%5185 init: %cst_728) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5187 = stablehlo.add %5184, %5186 : tensor<f32>
    %5188 = stablehlo.multiply %3061, %3061 : tensor<768xf32>
    %cst_729 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5189 = stablehlo.reduce(%5188 init: %cst_729) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5190 = stablehlo.add %5187, %5189 : tensor<f32>
    %5191 = stablehlo.multiply %3066, %3066 : tensor<768x768xf32>
    %cst_730 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5192 = stablehlo.reduce(%5191 init: %cst_730) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5193 = stablehlo.add %5190, %5192 : tensor<f32>
    %5194 = stablehlo.multiply %3072, %3072 : tensor<768xf32>
    %cst_731 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5195 = stablehlo.reduce(%5194 init: %cst_731) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5196 = stablehlo.add %5193, %5195 : tensor<f32>
    %5197 = stablehlo.multiply %3077, %3077 : tensor<768x768xf32>
    %cst_732 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5198 = stablehlo.reduce(%5197 init: %cst_732) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5199 = stablehlo.add %5196, %5198 : tensor<f32>
    %5200 = stablehlo.multiply %3050, %3050 : tensor<768xf32>
    %cst_733 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5201 = stablehlo.reduce(%5200 init: %cst_733) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5202 = stablehlo.add %5199, %5201 : tensor<f32>
    %5203 = stablehlo.multiply %3055, %3055 : tensor<768x768xf32>
    %cst_734 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5204 = stablehlo.reduce(%5203 init: %cst_734) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5205 = stablehlo.add %5202, %5204 : tensor<f32>
    %5206 = stablehlo.multiply %3017, %3017 : tensor<768xf32>
    %cst_735 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5207 = stablehlo.reduce(%5206 init: %cst_735) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5208 = stablehlo.add %5205, %5207 : tensor<f32>
    %5209 = stablehlo.multiply %3021, %3021 : tensor<768x768xf32>
    %cst_736 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5210 = stablehlo.reduce(%5209 init: %cst_736) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5211 = stablehlo.add %5208, %5210 : tensor<f32>
    %5212 = stablehlo.multiply %2978, %2978 : tensor<768xf32>
    %cst_737 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5213 = stablehlo.reduce(%5212 init: %cst_737) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5214 = stablehlo.add %5211, %5213 : tensor<f32>
    %5215 = stablehlo.multiply %2989, %2989 : tensor<768xf32>
    %cst_738 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5216 = stablehlo.reduce(%5215 init: %cst_738) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5217 = stablehlo.add %5214, %5216 : tensor<f32>
    %5218 = stablehlo.multiply %2949, %2949 : tensor<768xf32>
    %cst_739 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5219 = stablehlo.reduce(%5218 init: %cst_739) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5220 = stablehlo.add %5217, %5219 : tensor<f32>
    %5221 = stablehlo.multiply %2951, %2951 : tensor<3072x768xf32>
    %cst_740 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5222 = stablehlo.reduce(%5221 init: %cst_740) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5223 = stablehlo.add %5220, %5222 : tensor<f32>
    %5224 = stablehlo.multiply %2910, %2910 : tensor<768xf32>
    %cst_741 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5225 = stablehlo.reduce(%5224 init: %cst_741) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5226 = stablehlo.add %5223, %5225 : tensor<f32>
    %5227 = stablehlo.multiply %2921, %2921 : tensor<768xf32>
    %cst_742 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5228 = stablehlo.reduce(%5227 init: %cst_742) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5229 = stablehlo.add %5226, %5228 : tensor<f32>
    %5230 = stablehlo.multiply %2971, %2971 : tensor<3072xf32>
    %cst_743 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5231 = stablehlo.reduce(%5230 init: %cst_743) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5232 = stablehlo.add %5229, %5231 : tensor<f32>
    %5233 = stablehlo.multiply %2973, %2973 : tensor<768x3072xf32>
    %cst_744 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5234 = stablehlo.reduce(%5233 init: %cst_744) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5235 = stablehlo.add %5232, %5234 : tensor<f32>
    %5236 = stablehlo.multiply %4614, %4614 : tensor<768xf32>
    %cst_745 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5237 = stablehlo.reduce(%5236 init: %cst_745) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5238 = stablehlo.add %5235, %5237 : tensor<f32>
    %5239 = stablehlo.multiply %4625, %4625 : tensor<768xf32>
    %cst_746 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5240 = stablehlo.reduce(%5239 init: %cst_746) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5241 = stablehlo.add %5238, %5240 : tensor<f32>
    %5242 = stablehlo.multiply %2508, %2508 : tensor<30522xf32>
    %cst_747 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5243 = stablehlo.reduce(%5242 init: %cst_747) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %5244 = stablehlo.add %5241, %5243 : tensor<f32>
    %5245 = stablehlo.multiply %2564, %2564 : tensor<768xf32>
    %cst_748 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5246 = stablehlo.reduce(%5245 init: %cst_748) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5247 = stablehlo.add %5244, %5246 : tensor<f32>
    %5248 = stablehlo.multiply %2566, %2566 : tensor<768x768xf32>
    %cst_749 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5249 = stablehlo.reduce(%5248 init: %cst_749) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5250 = stablehlo.add %5247, %5249 : tensor<f32>
    %5251 = stablehlo.multiply %2512, %2512 : tensor<30522x768xf32>
    %cst_750 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5252 = stablehlo.reduce(%5251 init: %cst_750) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %5253 = stablehlo.add %5250, %5252 : tensor<f32>
    %5254 = stablehlo.multiply %2515, %2515 : tensor<768xf32>
    %cst_751 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5255 = stablehlo.reduce(%5254 init: %cst_751) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5256 = stablehlo.add %5253, %5255 : tensor<f32>
    %5257 = stablehlo.multiply %2526, %2526 : tensor<768xf32>
    %cst_752 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5258 = stablehlo.reduce(%5257 init: %cst_752) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5259 = stablehlo.add %5256, %5258 : tensor<f32>
    %5260 = stablehlo.sqrt %5259 : tensor<f32>
    %5261 = stablehlo.compare  LT, %5260, %cst_7,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %5262 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5263 = stablehlo.divide %4648, %5262 : tensor<512x768xf32>
    %5264 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5265 = stablehlo.multiply %5263, %5264 : tensor<512x768xf32>
    %5266 = stablehlo.select %5261, %4648, %5265 : tensor<i1>, tensor<512x768xf32>
    %5267 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5268 = stablehlo.divide %4646, %5267 : tensor<2x768xf32>
    %5269 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5270 = stablehlo.multiply %5268, %5269 : tensor<2x768xf32>
    %5271 = stablehlo.select %5261, %4646, %5270 : tensor<i1>, tensor<2x768xf32>
    %5272 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5273 = stablehlo.divide %4650, %5272 : tensor<30522x768xf32>
    %5274 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5275 = stablehlo.multiply %5273, %5274 : tensor<30522x768xf32>
    %5276 = stablehlo.select %5261, %4650, %5275 : tensor<i1>, tensor<30522x768xf32>
    %5277 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5278 = stablehlo.divide %4591, %5277 : tensor<768xf32>
    %5279 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5280 = stablehlo.multiply %5278, %5279 : tensor<768xf32>
    %5281 = stablehlo.select %5261, %4591, %5280 : tensor<i1>, tensor<768xf32>
    %5282 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5283 = stablehlo.divide %4596, %5282 : tensor<768x768xf32>
    %5284 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5285 = stablehlo.multiply %5283, %5284 : tensor<768x768xf32>
    %5286 = stablehlo.select %5261, %4596, %5285 : tensor<i1>, tensor<768x768xf32>
    %5287 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5288 = stablehlo.divide %4602, %5287 : tensor<768xf32>
    %5289 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5290 = stablehlo.multiply %5288, %5289 : tensor<768xf32>
    %5291 = stablehlo.select %5261, %4602, %5290 : tensor<i1>, tensor<768xf32>
    %5292 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5293 = stablehlo.divide %4607, %5292 : tensor<768x768xf32>
    %5294 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5295 = stablehlo.multiply %5293, %5294 : tensor<768x768xf32>
    %5296 = stablehlo.select %5261, %4607, %5295 : tensor<i1>, tensor<768x768xf32>
    %5297 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5298 = stablehlo.divide %4580, %5297 : tensor<768xf32>
    %5299 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5300 = stablehlo.multiply %5298, %5299 : tensor<768xf32>
    %5301 = stablehlo.select %5261, %4580, %5300 : tensor<i1>, tensor<768xf32>
    %5302 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5303 = stablehlo.divide %4585, %5302 : tensor<768x768xf32>
    %5304 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5305 = stablehlo.multiply %5303, %5304 : tensor<768x768xf32>
    %5306 = stablehlo.select %5261, %4585, %5305 : tensor<i1>, tensor<768x768xf32>
    %5307 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5308 = stablehlo.divide %4547, %5307 : tensor<768xf32>
    %5309 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5310 = stablehlo.multiply %5308, %5309 : tensor<768xf32>
    %5311 = stablehlo.select %5261, %4547, %5310 : tensor<i1>, tensor<768xf32>
    %5312 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5313 = stablehlo.divide %4551, %5312 : tensor<768x768xf32>
    %5314 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5315 = stablehlo.multiply %5313, %5314 : tensor<768x768xf32>
    %5316 = stablehlo.select %5261, %4551, %5315 : tensor<i1>, tensor<768x768xf32>
    %5317 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5318 = stablehlo.divide %4508, %5317 : tensor<768xf32>
    %5319 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5320 = stablehlo.multiply %5318, %5319 : tensor<768xf32>
    %5321 = stablehlo.select %5261, %4508, %5320 : tensor<i1>, tensor<768xf32>
    %5322 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5323 = stablehlo.divide %4519, %5322 : tensor<768xf32>
    %5324 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5325 = stablehlo.multiply %5323, %5324 : tensor<768xf32>
    %5326 = stablehlo.select %5261, %4519, %5325 : tensor<i1>, tensor<768xf32>
    %5327 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5328 = stablehlo.divide %4479, %5327 : tensor<768xf32>
    %5329 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5330 = stablehlo.multiply %5328, %5329 : tensor<768xf32>
    %5331 = stablehlo.select %5261, %4479, %5330 : tensor<i1>, tensor<768xf32>
    %5332 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5333 = stablehlo.divide %4481, %5332 : tensor<3072x768xf32>
    %5334 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5335 = stablehlo.multiply %5333, %5334 : tensor<3072x768xf32>
    %5336 = stablehlo.select %5261, %4481, %5335 : tensor<i1>, tensor<3072x768xf32>
    %5337 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5338 = stablehlo.divide %4440, %5337 : tensor<768xf32>
    %5339 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5340 = stablehlo.multiply %5338, %5339 : tensor<768xf32>
    %5341 = stablehlo.select %5261, %4440, %5340 : tensor<i1>, tensor<768xf32>
    %5342 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5343 = stablehlo.divide %4451, %5342 : tensor<768xf32>
    %5344 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5345 = stablehlo.multiply %5343, %5344 : tensor<768xf32>
    %5346 = stablehlo.select %5261, %4451, %5345 : tensor<i1>, tensor<768xf32>
    %5347 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5348 = stablehlo.divide %4501, %5347 : tensor<3072xf32>
    %5349 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5350 = stablehlo.multiply %5348, %5349 : tensor<3072xf32>
    %5351 = stablehlo.select %5261, %4501, %5350 : tensor<i1>, tensor<3072xf32>
    %5352 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5353 = stablehlo.divide %4503, %5352 : tensor<768x3072xf32>
    %5354 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5355 = stablehlo.multiply %5353, %5354 : tensor<768x3072xf32>
    %5356 = stablehlo.select %5261, %4503, %5355 : tensor<i1>, tensor<768x3072xf32>
    %5357 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5358 = stablehlo.divide %4421, %5357 : tensor<768xf32>
    %5359 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5360 = stablehlo.multiply %5358, %5359 : tensor<768xf32>
    %5361 = stablehlo.select %5261, %4421, %5360 : tensor<i1>, tensor<768xf32>
    %5362 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5363 = stablehlo.divide %4426, %5362 : tensor<768x768xf32>
    %5364 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5365 = stablehlo.multiply %5363, %5364 : tensor<768x768xf32>
    %5366 = stablehlo.select %5261, %4426, %5365 : tensor<i1>, tensor<768x768xf32>
    %5367 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5368 = stablehlo.divide %4432, %5367 : tensor<768xf32>
    %5369 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5370 = stablehlo.multiply %5368, %5369 : tensor<768xf32>
    %5371 = stablehlo.select %5261, %4432, %5370 : tensor<i1>, tensor<768xf32>
    %5372 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5373 = stablehlo.divide %4437, %5372 : tensor<768x768xf32>
    %5374 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5375 = stablehlo.multiply %5373, %5374 : tensor<768x768xf32>
    %5376 = stablehlo.select %5261, %4437, %5375 : tensor<i1>, tensor<768x768xf32>
    %5377 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5378 = stablehlo.divide %4410, %5377 : tensor<768xf32>
    %5379 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5380 = stablehlo.multiply %5378, %5379 : tensor<768xf32>
    %5381 = stablehlo.select %5261, %4410, %5380 : tensor<i1>, tensor<768xf32>
    %5382 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5383 = stablehlo.divide %4415, %5382 : tensor<768x768xf32>
    %5384 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5385 = stablehlo.multiply %5383, %5384 : tensor<768x768xf32>
    %5386 = stablehlo.select %5261, %4415, %5385 : tensor<i1>, tensor<768x768xf32>
    %5387 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5388 = stablehlo.divide %4377, %5387 : tensor<768xf32>
    %5389 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5390 = stablehlo.multiply %5388, %5389 : tensor<768xf32>
    %5391 = stablehlo.select %5261, %4377, %5390 : tensor<i1>, tensor<768xf32>
    %5392 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5393 = stablehlo.divide %4381, %5392 : tensor<768x768xf32>
    %5394 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5395 = stablehlo.multiply %5393, %5394 : tensor<768x768xf32>
    %5396 = stablehlo.select %5261, %4381, %5395 : tensor<i1>, tensor<768x768xf32>
    %5397 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5398 = stablehlo.divide %4338, %5397 : tensor<768xf32>
    %5399 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5400 = stablehlo.multiply %5398, %5399 : tensor<768xf32>
    %5401 = stablehlo.select %5261, %4338, %5400 : tensor<i1>, tensor<768xf32>
    %5402 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5403 = stablehlo.divide %4349, %5402 : tensor<768xf32>
    %5404 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5405 = stablehlo.multiply %5403, %5404 : tensor<768xf32>
    %5406 = stablehlo.select %5261, %4349, %5405 : tensor<i1>, tensor<768xf32>
    %5407 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5408 = stablehlo.divide %4309, %5407 : tensor<768xf32>
    %5409 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5410 = stablehlo.multiply %5408, %5409 : tensor<768xf32>
    %5411 = stablehlo.select %5261, %4309, %5410 : tensor<i1>, tensor<768xf32>
    %5412 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5413 = stablehlo.divide %4311, %5412 : tensor<3072x768xf32>
    %5414 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5415 = stablehlo.multiply %5413, %5414 : tensor<3072x768xf32>
    %5416 = stablehlo.select %5261, %4311, %5415 : tensor<i1>, tensor<3072x768xf32>
    %5417 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5418 = stablehlo.divide %4270, %5417 : tensor<768xf32>
    %5419 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5420 = stablehlo.multiply %5418, %5419 : tensor<768xf32>
    %5421 = stablehlo.select %5261, %4270, %5420 : tensor<i1>, tensor<768xf32>
    %5422 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5423 = stablehlo.divide %4281, %5422 : tensor<768xf32>
    %5424 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5425 = stablehlo.multiply %5423, %5424 : tensor<768xf32>
    %5426 = stablehlo.select %5261, %4281, %5425 : tensor<i1>, tensor<768xf32>
    %5427 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5428 = stablehlo.divide %4331, %5427 : tensor<3072xf32>
    %5429 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5430 = stablehlo.multiply %5428, %5429 : tensor<3072xf32>
    %5431 = stablehlo.select %5261, %4331, %5430 : tensor<i1>, tensor<3072xf32>
    %5432 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5433 = stablehlo.divide %4333, %5432 : tensor<768x3072xf32>
    %5434 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5435 = stablehlo.multiply %5433, %5434 : tensor<768x3072xf32>
    %5436 = stablehlo.select %5261, %4333, %5435 : tensor<i1>, tensor<768x3072xf32>
    %5437 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5438 = stablehlo.divide %2891, %5437 : tensor<768xf32>
    %5439 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5440 = stablehlo.multiply %5438, %5439 : tensor<768xf32>
    %5441 = stablehlo.select %5261, %2891, %5440 : tensor<i1>, tensor<768xf32>
    %5442 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5443 = stablehlo.divide %2896, %5442 : tensor<768x768xf32>
    %5444 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5445 = stablehlo.multiply %5443, %5444 : tensor<768x768xf32>
    %5446 = stablehlo.select %5261, %2896, %5445 : tensor<i1>, tensor<768x768xf32>
    %5447 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5448 = stablehlo.divide %2902, %5447 : tensor<768xf32>
    %5449 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5450 = stablehlo.multiply %5448, %5449 : tensor<768xf32>
    %5451 = stablehlo.select %5261, %2902, %5450 : tensor<i1>, tensor<768xf32>
    %5452 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5453 = stablehlo.divide %2907, %5452 : tensor<768x768xf32>
    %5454 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5455 = stablehlo.multiply %5453, %5454 : tensor<768x768xf32>
    %5456 = stablehlo.select %5261, %2907, %5455 : tensor<i1>, tensor<768x768xf32>
    %5457 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5458 = stablehlo.divide %2880, %5457 : tensor<768xf32>
    %5459 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5460 = stablehlo.multiply %5458, %5459 : tensor<768xf32>
    %5461 = stablehlo.select %5261, %2880, %5460 : tensor<i1>, tensor<768xf32>
    %5462 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5463 = stablehlo.divide %2885, %5462 : tensor<768x768xf32>
    %5464 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5465 = stablehlo.multiply %5463, %5464 : tensor<768x768xf32>
    %5466 = stablehlo.select %5261, %2885, %5465 : tensor<i1>, tensor<768x768xf32>
    %5467 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5468 = stablehlo.divide %2847, %5467 : tensor<768xf32>
    %5469 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5470 = stablehlo.multiply %5468, %5469 : tensor<768xf32>
    %5471 = stablehlo.select %5261, %2847, %5470 : tensor<i1>, tensor<768xf32>
    %5472 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5473 = stablehlo.divide %2851, %5472 : tensor<768x768xf32>
    %5474 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5475 = stablehlo.multiply %5473, %5474 : tensor<768x768xf32>
    %5476 = stablehlo.select %5261, %2851, %5475 : tensor<i1>, tensor<768x768xf32>
    %5477 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5478 = stablehlo.divide %2808, %5477 : tensor<768xf32>
    %5479 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5480 = stablehlo.multiply %5478, %5479 : tensor<768xf32>
    %5481 = stablehlo.select %5261, %2808, %5480 : tensor<i1>, tensor<768xf32>
    %5482 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5483 = stablehlo.divide %2819, %5482 : tensor<768xf32>
    %5484 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5485 = stablehlo.multiply %5483, %5484 : tensor<768xf32>
    %5486 = stablehlo.select %5261, %2819, %5485 : tensor<i1>, tensor<768xf32>
    %5487 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5488 = stablehlo.divide %2779, %5487 : tensor<768xf32>
    %5489 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5490 = stablehlo.multiply %5488, %5489 : tensor<768xf32>
    %5491 = stablehlo.select %5261, %2779, %5490 : tensor<i1>, tensor<768xf32>
    %5492 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5493 = stablehlo.divide %2781, %5492 : tensor<3072x768xf32>
    %5494 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5495 = stablehlo.multiply %5493, %5494 : tensor<3072x768xf32>
    %5496 = stablehlo.select %5261, %2781, %5495 : tensor<i1>, tensor<3072x768xf32>
    %5497 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5498 = stablehlo.divide %2740, %5497 : tensor<768xf32>
    %5499 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5500 = stablehlo.multiply %5498, %5499 : tensor<768xf32>
    %5501 = stablehlo.select %5261, %2740, %5500 : tensor<i1>, tensor<768xf32>
    %5502 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5503 = stablehlo.divide %2751, %5502 : tensor<768xf32>
    %5504 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5505 = stablehlo.multiply %5503, %5504 : tensor<768xf32>
    %5506 = stablehlo.select %5261, %2751, %5505 : tensor<i1>, tensor<768xf32>
    %5507 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5508 = stablehlo.divide %2801, %5507 : tensor<3072xf32>
    %5509 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5510 = stablehlo.multiply %5508, %5509 : tensor<3072xf32>
    %5511 = stablehlo.select %5261, %2801, %5510 : tensor<i1>, tensor<3072xf32>
    %5512 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5513 = stablehlo.divide %2803, %5512 : tensor<768x3072xf32>
    %5514 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5515 = stablehlo.multiply %5513, %5514 : tensor<768x3072xf32>
    %5516 = stablehlo.select %5261, %2803, %5515 : tensor<i1>, tensor<768x3072xf32>
    %5517 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5518 = stablehlo.divide %2721, %5517 : tensor<768xf32>
    %5519 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5520 = stablehlo.multiply %5518, %5519 : tensor<768xf32>
    %5521 = stablehlo.select %5261, %2721, %5520 : tensor<i1>, tensor<768xf32>
    %5522 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5523 = stablehlo.divide %2726, %5522 : tensor<768x768xf32>
    %5524 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5525 = stablehlo.multiply %5523, %5524 : tensor<768x768xf32>
    %5526 = stablehlo.select %5261, %2726, %5525 : tensor<i1>, tensor<768x768xf32>
    %5527 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5528 = stablehlo.divide %2732, %5527 : tensor<768xf32>
    %5529 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5530 = stablehlo.multiply %5528, %5529 : tensor<768xf32>
    %5531 = stablehlo.select %5261, %2732, %5530 : tensor<i1>, tensor<768xf32>
    %5532 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5533 = stablehlo.divide %2737, %5532 : tensor<768x768xf32>
    %5534 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5535 = stablehlo.multiply %5533, %5534 : tensor<768x768xf32>
    %5536 = stablehlo.select %5261, %2737, %5535 : tensor<i1>, tensor<768x768xf32>
    %5537 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5538 = stablehlo.divide %2710, %5537 : tensor<768xf32>
    %5539 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5540 = stablehlo.multiply %5538, %5539 : tensor<768xf32>
    %5541 = stablehlo.select %5261, %2710, %5540 : tensor<i1>, tensor<768xf32>
    %5542 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5543 = stablehlo.divide %2715, %5542 : tensor<768x768xf32>
    %5544 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5545 = stablehlo.multiply %5543, %5544 : tensor<768x768xf32>
    %5546 = stablehlo.select %5261, %2715, %5545 : tensor<i1>, tensor<768x768xf32>
    %5547 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5548 = stablehlo.divide %2677, %5547 : tensor<768xf32>
    %5549 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5550 = stablehlo.multiply %5548, %5549 : tensor<768xf32>
    %5551 = stablehlo.select %5261, %2677, %5550 : tensor<i1>, tensor<768xf32>
    %5552 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5553 = stablehlo.divide %2681, %5552 : tensor<768x768xf32>
    %5554 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5555 = stablehlo.multiply %5553, %5554 : tensor<768x768xf32>
    %5556 = stablehlo.select %5261, %2681, %5555 : tensor<i1>, tensor<768x768xf32>
    %5557 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5558 = stablehlo.divide %2638, %5557 : tensor<768xf32>
    %5559 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5560 = stablehlo.multiply %5558, %5559 : tensor<768xf32>
    %5561 = stablehlo.select %5261, %2638, %5560 : tensor<i1>, tensor<768xf32>
    %5562 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5563 = stablehlo.divide %2649, %5562 : tensor<768xf32>
    %5564 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5565 = stablehlo.multiply %5563, %5564 : tensor<768xf32>
    %5566 = stablehlo.select %5261, %2649, %5565 : tensor<i1>, tensor<768xf32>
    %5567 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5568 = stablehlo.divide %2609, %5567 : tensor<768xf32>
    %5569 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5570 = stablehlo.multiply %5568, %5569 : tensor<768xf32>
    %5571 = stablehlo.select %5261, %2609, %5570 : tensor<i1>, tensor<768xf32>
    %5572 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5573 = stablehlo.divide %2611, %5572 : tensor<3072x768xf32>
    %5574 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5575 = stablehlo.multiply %5573, %5574 : tensor<3072x768xf32>
    %5576 = stablehlo.select %5261, %2611, %5575 : tensor<i1>, tensor<3072x768xf32>
    %5577 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5578 = stablehlo.divide %2570, %5577 : tensor<768xf32>
    %5579 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5580 = stablehlo.multiply %5578, %5579 : tensor<768xf32>
    %5581 = stablehlo.select %5261, %2570, %5580 : tensor<i1>, tensor<768xf32>
    %5582 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5583 = stablehlo.divide %2581, %5582 : tensor<768xf32>
    %5584 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5585 = stablehlo.multiply %5583, %5584 : tensor<768xf32>
    %5586 = stablehlo.select %5261, %2581, %5585 : tensor<i1>, tensor<768xf32>
    %5587 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5588 = stablehlo.divide %2631, %5587 : tensor<3072xf32>
    %5589 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5590 = stablehlo.multiply %5588, %5589 : tensor<3072xf32>
    %5591 = stablehlo.select %5261, %2631, %5590 : tensor<i1>, tensor<3072xf32>
    %5592 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5593 = stablehlo.divide %2633, %5592 : tensor<768x3072xf32>
    %5594 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5595 = stablehlo.multiply %5593, %5594 : tensor<768x3072xf32>
    %5596 = stablehlo.select %5261, %2633, %5595 : tensor<i1>, tensor<768x3072xf32>
    %5597 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5598 = stablehlo.divide %4251, %5597 : tensor<768xf32>
    %5599 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5600 = stablehlo.multiply %5598, %5599 : tensor<768xf32>
    %5601 = stablehlo.select %5261, %4251, %5600 : tensor<i1>, tensor<768xf32>
    %5602 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5603 = stablehlo.divide %4256, %5602 : tensor<768x768xf32>
    %5604 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5605 = stablehlo.multiply %5603, %5604 : tensor<768x768xf32>
    %5606 = stablehlo.select %5261, %4256, %5605 : tensor<i1>, tensor<768x768xf32>
    %5607 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5608 = stablehlo.divide %4262, %5607 : tensor<768xf32>
    %5609 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5610 = stablehlo.multiply %5608, %5609 : tensor<768xf32>
    %5611 = stablehlo.select %5261, %4262, %5610 : tensor<i1>, tensor<768xf32>
    %5612 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5613 = stablehlo.divide %4267, %5612 : tensor<768x768xf32>
    %5614 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5615 = stablehlo.multiply %5613, %5614 : tensor<768x768xf32>
    %5616 = stablehlo.select %5261, %4267, %5615 : tensor<i1>, tensor<768x768xf32>
    %5617 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5618 = stablehlo.divide %4240, %5617 : tensor<768xf32>
    %5619 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5620 = stablehlo.multiply %5618, %5619 : tensor<768xf32>
    %5621 = stablehlo.select %5261, %4240, %5620 : tensor<i1>, tensor<768xf32>
    %5622 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5623 = stablehlo.divide %4245, %5622 : tensor<768x768xf32>
    %5624 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5625 = stablehlo.multiply %5623, %5624 : tensor<768x768xf32>
    %5626 = stablehlo.select %5261, %4245, %5625 : tensor<i1>, tensor<768x768xf32>
    %5627 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5628 = stablehlo.divide %4207, %5627 : tensor<768xf32>
    %5629 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5630 = stablehlo.multiply %5628, %5629 : tensor<768xf32>
    %5631 = stablehlo.select %5261, %4207, %5630 : tensor<i1>, tensor<768xf32>
    %5632 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5633 = stablehlo.divide %4211, %5632 : tensor<768x768xf32>
    %5634 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5635 = stablehlo.multiply %5633, %5634 : tensor<768x768xf32>
    %5636 = stablehlo.select %5261, %4211, %5635 : tensor<i1>, tensor<768x768xf32>
    %5637 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5638 = stablehlo.divide %4168, %5637 : tensor<768xf32>
    %5639 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5640 = stablehlo.multiply %5638, %5639 : tensor<768xf32>
    %5641 = stablehlo.select %5261, %4168, %5640 : tensor<i1>, tensor<768xf32>
    %5642 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5643 = stablehlo.divide %4179, %5642 : tensor<768xf32>
    %5644 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5645 = stablehlo.multiply %5643, %5644 : tensor<768xf32>
    %5646 = stablehlo.select %5261, %4179, %5645 : tensor<i1>, tensor<768xf32>
    %5647 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5648 = stablehlo.divide %4139, %5647 : tensor<768xf32>
    %5649 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5650 = stablehlo.multiply %5648, %5649 : tensor<768xf32>
    %5651 = stablehlo.select %5261, %4139, %5650 : tensor<i1>, tensor<768xf32>
    %5652 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5653 = stablehlo.divide %4141, %5652 : tensor<3072x768xf32>
    %5654 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5655 = stablehlo.multiply %5653, %5654 : tensor<3072x768xf32>
    %5656 = stablehlo.select %5261, %4141, %5655 : tensor<i1>, tensor<3072x768xf32>
    %5657 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5658 = stablehlo.divide %4100, %5657 : tensor<768xf32>
    %5659 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5660 = stablehlo.multiply %5658, %5659 : tensor<768xf32>
    %5661 = stablehlo.select %5261, %4100, %5660 : tensor<i1>, tensor<768xf32>
    %5662 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5663 = stablehlo.divide %4111, %5662 : tensor<768xf32>
    %5664 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5665 = stablehlo.multiply %5663, %5664 : tensor<768xf32>
    %5666 = stablehlo.select %5261, %4111, %5665 : tensor<i1>, tensor<768xf32>
    %5667 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5668 = stablehlo.divide %4161, %5667 : tensor<3072xf32>
    %5669 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5670 = stablehlo.multiply %5668, %5669 : tensor<3072xf32>
    %5671 = stablehlo.select %5261, %4161, %5670 : tensor<i1>, tensor<3072xf32>
    %5672 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5673 = stablehlo.divide %4163, %5672 : tensor<768x3072xf32>
    %5674 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5675 = stablehlo.multiply %5673, %5674 : tensor<768x3072xf32>
    %5676 = stablehlo.select %5261, %4163, %5675 : tensor<i1>, tensor<768x3072xf32>
    %5677 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5678 = stablehlo.divide %4081, %5677 : tensor<768xf32>
    %5679 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5680 = stablehlo.multiply %5678, %5679 : tensor<768xf32>
    %5681 = stablehlo.select %5261, %4081, %5680 : tensor<i1>, tensor<768xf32>
    %5682 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5683 = stablehlo.divide %4086, %5682 : tensor<768x768xf32>
    %5684 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5685 = stablehlo.multiply %5683, %5684 : tensor<768x768xf32>
    %5686 = stablehlo.select %5261, %4086, %5685 : tensor<i1>, tensor<768x768xf32>
    %5687 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5688 = stablehlo.divide %4092, %5687 : tensor<768xf32>
    %5689 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5690 = stablehlo.multiply %5688, %5689 : tensor<768xf32>
    %5691 = stablehlo.select %5261, %4092, %5690 : tensor<i1>, tensor<768xf32>
    %5692 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5693 = stablehlo.divide %4097, %5692 : tensor<768x768xf32>
    %5694 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5695 = stablehlo.multiply %5693, %5694 : tensor<768x768xf32>
    %5696 = stablehlo.select %5261, %4097, %5695 : tensor<i1>, tensor<768x768xf32>
    %5697 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5698 = stablehlo.divide %4070, %5697 : tensor<768xf32>
    %5699 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5700 = stablehlo.multiply %5698, %5699 : tensor<768xf32>
    %5701 = stablehlo.select %5261, %4070, %5700 : tensor<i1>, tensor<768xf32>
    %5702 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5703 = stablehlo.divide %4075, %5702 : tensor<768x768xf32>
    %5704 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5705 = stablehlo.multiply %5703, %5704 : tensor<768x768xf32>
    %5706 = stablehlo.select %5261, %4075, %5705 : tensor<i1>, tensor<768x768xf32>
    %5707 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5708 = stablehlo.divide %4037, %5707 : tensor<768xf32>
    %5709 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5710 = stablehlo.multiply %5708, %5709 : tensor<768xf32>
    %5711 = stablehlo.select %5261, %4037, %5710 : tensor<i1>, tensor<768xf32>
    %5712 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5713 = stablehlo.divide %4041, %5712 : tensor<768x768xf32>
    %5714 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5715 = stablehlo.multiply %5713, %5714 : tensor<768x768xf32>
    %5716 = stablehlo.select %5261, %4041, %5715 : tensor<i1>, tensor<768x768xf32>
    %5717 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5718 = stablehlo.divide %3998, %5717 : tensor<768xf32>
    %5719 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5720 = stablehlo.multiply %5718, %5719 : tensor<768xf32>
    %5721 = stablehlo.select %5261, %3998, %5720 : tensor<i1>, tensor<768xf32>
    %5722 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5723 = stablehlo.divide %4009, %5722 : tensor<768xf32>
    %5724 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5725 = stablehlo.multiply %5723, %5724 : tensor<768xf32>
    %5726 = stablehlo.select %5261, %4009, %5725 : tensor<i1>, tensor<768xf32>
    %5727 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5728 = stablehlo.divide %3969, %5727 : tensor<768xf32>
    %5729 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5730 = stablehlo.multiply %5728, %5729 : tensor<768xf32>
    %5731 = stablehlo.select %5261, %3969, %5730 : tensor<i1>, tensor<768xf32>
    %5732 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5733 = stablehlo.divide %3971, %5732 : tensor<3072x768xf32>
    %5734 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5735 = stablehlo.multiply %5733, %5734 : tensor<3072x768xf32>
    %5736 = stablehlo.select %5261, %3971, %5735 : tensor<i1>, tensor<3072x768xf32>
    %5737 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5738 = stablehlo.divide %3930, %5737 : tensor<768xf32>
    %5739 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5740 = stablehlo.multiply %5738, %5739 : tensor<768xf32>
    %5741 = stablehlo.select %5261, %3930, %5740 : tensor<i1>, tensor<768xf32>
    %5742 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5743 = stablehlo.divide %3941, %5742 : tensor<768xf32>
    %5744 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5745 = stablehlo.multiply %5743, %5744 : tensor<768xf32>
    %5746 = stablehlo.select %5261, %3941, %5745 : tensor<i1>, tensor<768xf32>
    %5747 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5748 = stablehlo.divide %3991, %5747 : tensor<3072xf32>
    %5749 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5750 = stablehlo.multiply %5748, %5749 : tensor<3072xf32>
    %5751 = stablehlo.select %5261, %3991, %5750 : tensor<i1>, tensor<3072xf32>
    %5752 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5753 = stablehlo.divide %3993, %5752 : tensor<768x3072xf32>
    %5754 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5755 = stablehlo.multiply %5753, %5754 : tensor<768x3072xf32>
    %5756 = stablehlo.select %5261, %3993, %5755 : tensor<i1>, tensor<768x3072xf32>
    %5757 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5758 = stablehlo.divide %3911, %5757 : tensor<768xf32>
    %5759 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5760 = stablehlo.multiply %5758, %5759 : tensor<768xf32>
    %5761 = stablehlo.select %5261, %3911, %5760 : tensor<i1>, tensor<768xf32>
    %5762 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5763 = stablehlo.divide %3916, %5762 : tensor<768x768xf32>
    %5764 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5765 = stablehlo.multiply %5763, %5764 : tensor<768x768xf32>
    %5766 = stablehlo.select %5261, %3916, %5765 : tensor<i1>, tensor<768x768xf32>
    %5767 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5768 = stablehlo.divide %3922, %5767 : tensor<768xf32>
    %5769 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5770 = stablehlo.multiply %5768, %5769 : tensor<768xf32>
    %5771 = stablehlo.select %5261, %3922, %5770 : tensor<i1>, tensor<768xf32>
    %5772 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5773 = stablehlo.divide %3927, %5772 : tensor<768x768xf32>
    %5774 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5775 = stablehlo.multiply %5773, %5774 : tensor<768x768xf32>
    %5776 = stablehlo.select %5261, %3927, %5775 : tensor<i1>, tensor<768x768xf32>
    %5777 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5778 = stablehlo.divide %3900, %5777 : tensor<768xf32>
    %5779 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5780 = stablehlo.multiply %5778, %5779 : tensor<768xf32>
    %5781 = stablehlo.select %5261, %3900, %5780 : tensor<i1>, tensor<768xf32>
    %5782 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5783 = stablehlo.divide %3905, %5782 : tensor<768x768xf32>
    %5784 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5785 = stablehlo.multiply %5783, %5784 : tensor<768x768xf32>
    %5786 = stablehlo.select %5261, %3905, %5785 : tensor<i1>, tensor<768x768xf32>
    %5787 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5788 = stablehlo.divide %3867, %5787 : tensor<768xf32>
    %5789 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5790 = stablehlo.multiply %5788, %5789 : tensor<768xf32>
    %5791 = stablehlo.select %5261, %3867, %5790 : tensor<i1>, tensor<768xf32>
    %5792 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5793 = stablehlo.divide %3871, %5792 : tensor<768x768xf32>
    %5794 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5795 = stablehlo.multiply %5793, %5794 : tensor<768x768xf32>
    %5796 = stablehlo.select %5261, %3871, %5795 : tensor<i1>, tensor<768x768xf32>
    %5797 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5798 = stablehlo.divide %3828, %5797 : tensor<768xf32>
    %5799 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5800 = stablehlo.multiply %5798, %5799 : tensor<768xf32>
    %5801 = stablehlo.select %5261, %3828, %5800 : tensor<i1>, tensor<768xf32>
    %5802 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5803 = stablehlo.divide %3839, %5802 : tensor<768xf32>
    %5804 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5805 = stablehlo.multiply %5803, %5804 : tensor<768xf32>
    %5806 = stablehlo.select %5261, %3839, %5805 : tensor<i1>, tensor<768xf32>
    %5807 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5808 = stablehlo.divide %3799, %5807 : tensor<768xf32>
    %5809 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5810 = stablehlo.multiply %5808, %5809 : tensor<768xf32>
    %5811 = stablehlo.select %5261, %3799, %5810 : tensor<i1>, tensor<768xf32>
    %5812 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5813 = stablehlo.divide %3801, %5812 : tensor<3072x768xf32>
    %5814 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5815 = stablehlo.multiply %5813, %5814 : tensor<3072x768xf32>
    %5816 = stablehlo.select %5261, %3801, %5815 : tensor<i1>, tensor<3072x768xf32>
    %5817 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5818 = stablehlo.divide %3760, %5817 : tensor<768xf32>
    %5819 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5820 = stablehlo.multiply %5818, %5819 : tensor<768xf32>
    %5821 = stablehlo.select %5261, %3760, %5820 : tensor<i1>, tensor<768xf32>
    %5822 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5823 = stablehlo.divide %3771, %5822 : tensor<768xf32>
    %5824 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5825 = stablehlo.multiply %5823, %5824 : tensor<768xf32>
    %5826 = stablehlo.select %5261, %3771, %5825 : tensor<i1>, tensor<768xf32>
    %5827 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5828 = stablehlo.divide %3821, %5827 : tensor<3072xf32>
    %5829 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5830 = stablehlo.multiply %5828, %5829 : tensor<3072xf32>
    %5831 = stablehlo.select %5261, %3821, %5830 : tensor<i1>, tensor<3072xf32>
    %5832 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5833 = stablehlo.divide %3823, %5832 : tensor<768x3072xf32>
    %5834 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5835 = stablehlo.multiply %5833, %5834 : tensor<768x3072xf32>
    %5836 = stablehlo.select %5261, %3823, %5835 : tensor<i1>, tensor<768x3072xf32>
    %5837 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5838 = stablehlo.divide %3741, %5837 : tensor<768xf32>
    %5839 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5840 = stablehlo.multiply %5838, %5839 : tensor<768xf32>
    %5841 = stablehlo.select %5261, %3741, %5840 : tensor<i1>, tensor<768xf32>
    %5842 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5843 = stablehlo.divide %3746, %5842 : tensor<768x768xf32>
    %5844 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5845 = stablehlo.multiply %5843, %5844 : tensor<768x768xf32>
    %5846 = stablehlo.select %5261, %3746, %5845 : tensor<i1>, tensor<768x768xf32>
    %5847 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5848 = stablehlo.divide %3752, %5847 : tensor<768xf32>
    %5849 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5850 = stablehlo.multiply %5848, %5849 : tensor<768xf32>
    %5851 = stablehlo.select %5261, %3752, %5850 : tensor<i1>, tensor<768xf32>
    %5852 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5853 = stablehlo.divide %3757, %5852 : tensor<768x768xf32>
    %5854 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5855 = stablehlo.multiply %5853, %5854 : tensor<768x768xf32>
    %5856 = stablehlo.select %5261, %3757, %5855 : tensor<i1>, tensor<768x768xf32>
    %5857 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5858 = stablehlo.divide %3730, %5857 : tensor<768xf32>
    %5859 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5860 = stablehlo.multiply %5858, %5859 : tensor<768xf32>
    %5861 = stablehlo.select %5261, %3730, %5860 : tensor<i1>, tensor<768xf32>
    %5862 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5863 = stablehlo.divide %3735, %5862 : tensor<768x768xf32>
    %5864 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5865 = stablehlo.multiply %5863, %5864 : tensor<768x768xf32>
    %5866 = stablehlo.select %5261, %3735, %5865 : tensor<i1>, tensor<768x768xf32>
    %5867 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5868 = stablehlo.divide %3697, %5867 : tensor<768xf32>
    %5869 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5870 = stablehlo.multiply %5868, %5869 : tensor<768xf32>
    %5871 = stablehlo.select %5261, %3697, %5870 : tensor<i1>, tensor<768xf32>
    %5872 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5873 = stablehlo.divide %3701, %5872 : tensor<768x768xf32>
    %5874 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5875 = stablehlo.multiply %5873, %5874 : tensor<768x768xf32>
    %5876 = stablehlo.select %5261, %3701, %5875 : tensor<i1>, tensor<768x768xf32>
    %5877 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5878 = stablehlo.divide %3658, %5877 : tensor<768xf32>
    %5879 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5880 = stablehlo.multiply %5878, %5879 : tensor<768xf32>
    %5881 = stablehlo.select %5261, %3658, %5880 : tensor<i1>, tensor<768xf32>
    %5882 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5883 = stablehlo.divide %3669, %5882 : tensor<768xf32>
    %5884 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5885 = stablehlo.multiply %5883, %5884 : tensor<768xf32>
    %5886 = stablehlo.select %5261, %3669, %5885 : tensor<i1>, tensor<768xf32>
    %5887 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5888 = stablehlo.divide %3629, %5887 : tensor<768xf32>
    %5889 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5890 = stablehlo.multiply %5888, %5889 : tensor<768xf32>
    %5891 = stablehlo.select %5261, %3629, %5890 : tensor<i1>, tensor<768xf32>
    %5892 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5893 = stablehlo.divide %3631, %5892 : tensor<3072x768xf32>
    %5894 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5895 = stablehlo.multiply %5893, %5894 : tensor<3072x768xf32>
    %5896 = stablehlo.select %5261, %3631, %5895 : tensor<i1>, tensor<3072x768xf32>
    %5897 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5898 = stablehlo.divide %3590, %5897 : tensor<768xf32>
    %5899 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5900 = stablehlo.multiply %5898, %5899 : tensor<768xf32>
    %5901 = stablehlo.select %5261, %3590, %5900 : tensor<i1>, tensor<768xf32>
    %5902 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5903 = stablehlo.divide %3601, %5902 : tensor<768xf32>
    %5904 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5905 = stablehlo.multiply %5903, %5904 : tensor<768xf32>
    %5906 = stablehlo.select %5261, %3601, %5905 : tensor<i1>, tensor<768xf32>
    %5907 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5908 = stablehlo.divide %3651, %5907 : tensor<3072xf32>
    %5909 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5910 = stablehlo.multiply %5908, %5909 : tensor<3072xf32>
    %5911 = stablehlo.select %5261, %3651, %5910 : tensor<i1>, tensor<3072xf32>
    %5912 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5913 = stablehlo.divide %3653, %5912 : tensor<768x3072xf32>
    %5914 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5915 = stablehlo.multiply %5913, %5914 : tensor<768x3072xf32>
    %5916 = stablehlo.select %5261, %3653, %5915 : tensor<i1>, tensor<768x3072xf32>
    %5917 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5918 = stablehlo.divide %3571, %5917 : tensor<768xf32>
    %5919 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5920 = stablehlo.multiply %5918, %5919 : tensor<768xf32>
    %5921 = stablehlo.select %5261, %3571, %5920 : tensor<i1>, tensor<768xf32>
    %5922 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5923 = stablehlo.divide %3576, %5922 : tensor<768x768xf32>
    %5924 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5925 = stablehlo.multiply %5923, %5924 : tensor<768x768xf32>
    %5926 = stablehlo.select %5261, %3576, %5925 : tensor<i1>, tensor<768x768xf32>
    %5927 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5928 = stablehlo.divide %3582, %5927 : tensor<768xf32>
    %5929 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5930 = stablehlo.multiply %5928, %5929 : tensor<768xf32>
    %5931 = stablehlo.select %5261, %3582, %5930 : tensor<i1>, tensor<768xf32>
    %5932 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5933 = stablehlo.divide %3587, %5932 : tensor<768x768xf32>
    %5934 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5935 = stablehlo.multiply %5933, %5934 : tensor<768x768xf32>
    %5936 = stablehlo.select %5261, %3587, %5935 : tensor<i1>, tensor<768x768xf32>
    %5937 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5938 = stablehlo.divide %3560, %5937 : tensor<768xf32>
    %5939 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5940 = stablehlo.multiply %5938, %5939 : tensor<768xf32>
    %5941 = stablehlo.select %5261, %3560, %5940 : tensor<i1>, tensor<768xf32>
    %5942 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5943 = stablehlo.divide %3565, %5942 : tensor<768x768xf32>
    %5944 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5945 = stablehlo.multiply %5943, %5944 : tensor<768x768xf32>
    %5946 = stablehlo.select %5261, %3565, %5945 : tensor<i1>, tensor<768x768xf32>
    %5947 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5948 = stablehlo.divide %3527, %5947 : tensor<768xf32>
    %5949 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5950 = stablehlo.multiply %5948, %5949 : tensor<768xf32>
    %5951 = stablehlo.select %5261, %3527, %5950 : tensor<i1>, tensor<768xf32>
    %5952 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5953 = stablehlo.divide %3531, %5952 : tensor<768x768xf32>
    %5954 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5955 = stablehlo.multiply %5953, %5954 : tensor<768x768xf32>
    %5956 = stablehlo.select %5261, %3531, %5955 : tensor<i1>, tensor<768x768xf32>
    %5957 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5958 = stablehlo.divide %3488, %5957 : tensor<768xf32>
    %5959 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5960 = stablehlo.multiply %5958, %5959 : tensor<768xf32>
    %5961 = stablehlo.select %5261, %3488, %5960 : tensor<i1>, tensor<768xf32>
    %5962 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5963 = stablehlo.divide %3499, %5962 : tensor<768xf32>
    %5964 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5965 = stablehlo.multiply %5963, %5964 : tensor<768xf32>
    %5966 = stablehlo.select %5261, %3499, %5965 : tensor<i1>, tensor<768xf32>
    %5967 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5968 = stablehlo.divide %3459, %5967 : tensor<768xf32>
    %5969 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5970 = stablehlo.multiply %5968, %5969 : tensor<768xf32>
    %5971 = stablehlo.select %5261, %3459, %5970 : tensor<i1>, tensor<768xf32>
    %5972 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5973 = stablehlo.divide %3461, %5972 : tensor<3072x768xf32>
    %5974 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5975 = stablehlo.multiply %5973, %5974 : tensor<3072x768xf32>
    %5976 = stablehlo.select %5261, %3461, %5975 : tensor<i1>, tensor<3072x768xf32>
    %5977 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5978 = stablehlo.divide %3420, %5977 : tensor<768xf32>
    %5979 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5980 = stablehlo.multiply %5978, %5979 : tensor<768xf32>
    %5981 = stablehlo.select %5261, %3420, %5980 : tensor<i1>, tensor<768xf32>
    %5982 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5983 = stablehlo.divide %3431, %5982 : tensor<768xf32>
    %5984 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5985 = stablehlo.multiply %5983, %5984 : tensor<768xf32>
    %5986 = stablehlo.select %5261, %3431, %5985 : tensor<i1>, tensor<768xf32>
    %5987 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5988 = stablehlo.divide %3481, %5987 : tensor<3072xf32>
    %5989 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5990 = stablehlo.multiply %5988, %5989 : tensor<3072xf32>
    %5991 = stablehlo.select %5261, %3481, %5990 : tensor<i1>, tensor<3072xf32>
    %5992 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5993 = stablehlo.divide %3483, %5992 : tensor<768x3072xf32>
    %5994 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5995 = stablehlo.multiply %5993, %5994 : tensor<768x3072xf32>
    %5996 = stablehlo.select %5261, %3483, %5995 : tensor<i1>, tensor<768x3072xf32>
    %5997 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5998 = stablehlo.divide %3401, %5997 : tensor<768xf32>
    %5999 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6000 = stablehlo.multiply %5998, %5999 : tensor<768xf32>
    %6001 = stablehlo.select %5261, %3401, %6000 : tensor<i1>, tensor<768xf32>
    %6002 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6003 = stablehlo.divide %3406, %6002 : tensor<768x768xf32>
    %6004 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6005 = stablehlo.multiply %6003, %6004 : tensor<768x768xf32>
    %6006 = stablehlo.select %5261, %3406, %6005 : tensor<i1>, tensor<768x768xf32>
    %6007 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6008 = stablehlo.divide %3412, %6007 : tensor<768xf32>
    %6009 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6010 = stablehlo.multiply %6008, %6009 : tensor<768xf32>
    %6011 = stablehlo.select %5261, %3412, %6010 : tensor<i1>, tensor<768xf32>
    %6012 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6013 = stablehlo.divide %3417, %6012 : tensor<768x768xf32>
    %6014 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6015 = stablehlo.multiply %6013, %6014 : tensor<768x768xf32>
    %6016 = stablehlo.select %5261, %3417, %6015 : tensor<i1>, tensor<768x768xf32>
    %6017 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6018 = stablehlo.divide %3390, %6017 : tensor<768xf32>
    %6019 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6020 = stablehlo.multiply %6018, %6019 : tensor<768xf32>
    %6021 = stablehlo.select %5261, %3390, %6020 : tensor<i1>, tensor<768xf32>
    %6022 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6023 = stablehlo.divide %3395, %6022 : tensor<768x768xf32>
    %6024 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6025 = stablehlo.multiply %6023, %6024 : tensor<768x768xf32>
    %6026 = stablehlo.select %5261, %3395, %6025 : tensor<i1>, tensor<768x768xf32>
    %6027 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6028 = stablehlo.divide %3357, %6027 : tensor<768xf32>
    %6029 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6030 = stablehlo.multiply %6028, %6029 : tensor<768xf32>
    %6031 = stablehlo.select %5261, %3357, %6030 : tensor<i1>, tensor<768xf32>
    %6032 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6033 = stablehlo.divide %3361, %6032 : tensor<768x768xf32>
    %6034 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6035 = stablehlo.multiply %6033, %6034 : tensor<768x768xf32>
    %6036 = stablehlo.select %5261, %3361, %6035 : tensor<i1>, tensor<768x768xf32>
    %6037 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6038 = stablehlo.divide %3318, %6037 : tensor<768xf32>
    %6039 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6040 = stablehlo.multiply %6038, %6039 : tensor<768xf32>
    %6041 = stablehlo.select %5261, %3318, %6040 : tensor<i1>, tensor<768xf32>
    %6042 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6043 = stablehlo.divide %3329, %6042 : tensor<768xf32>
    %6044 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6045 = stablehlo.multiply %6043, %6044 : tensor<768xf32>
    %6046 = stablehlo.select %5261, %3329, %6045 : tensor<i1>, tensor<768xf32>
    %6047 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6048 = stablehlo.divide %3289, %6047 : tensor<768xf32>
    %6049 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6050 = stablehlo.multiply %6048, %6049 : tensor<768xf32>
    %6051 = stablehlo.select %5261, %3289, %6050 : tensor<i1>, tensor<768xf32>
    %6052 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6053 = stablehlo.divide %3291, %6052 : tensor<3072x768xf32>
    %6054 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6055 = stablehlo.multiply %6053, %6054 : tensor<3072x768xf32>
    %6056 = stablehlo.select %5261, %3291, %6055 : tensor<i1>, tensor<3072x768xf32>
    %6057 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6058 = stablehlo.divide %3250, %6057 : tensor<768xf32>
    %6059 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6060 = stablehlo.multiply %6058, %6059 : tensor<768xf32>
    %6061 = stablehlo.select %5261, %3250, %6060 : tensor<i1>, tensor<768xf32>
    %6062 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6063 = stablehlo.divide %3261, %6062 : tensor<768xf32>
    %6064 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6065 = stablehlo.multiply %6063, %6064 : tensor<768xf32>
    %6066 = stablehlo.select %5261, %3261, %6065 : tensor<i1>, tensor<768xf32>
    %6067 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6068 = stablehlo.divide %3311, %6067 : tensor<3072xf32>
    %6069 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6070 = stablehlo.multiply %6068, %6069 : tensor<3072xf32>
    %6071 = stablehlo.select %5261, %3311, %6070 : tensor<i1>, tensor<3072xf32>
    %6072 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6073 = stablehlo.divide %3313, %6072 : tensor<768x3072xf32>
    %6074 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6075 = stablehlo.multiply %6073, %6074 : tensor<768x3072xf32>
    %6076 = stablehlo.select %5261, %3313, %6075 : tensor<i1>, tensor<768x3072xf32>
    %6077 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6078 = stablehlo.divide %3231, %6077 : tensor<768xf32>
    %6079 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6080 = stablehlo.multiply %6078, %6079 : tensor<768xf32>
    %6081 = stablehlo.select %5261, %3231, %6080 : tensor<i1>, tensor<768xf32>
    %6082 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6083 = stablehlo.divide %3236, %6082 : tensor<768x768xf32>
    %6084 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6085 = stablehlo.multiply %6083, %6084 : tensor<768x768xf32>
    %6086 = stablehlo.select %5261, %3236, %6085 : tensor<i1>, tensor<768x768xf32>
    %6087 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6088 = stablehlo.divide %3242, %6087 : tensor<768xf32>
    %6089 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6090 = stablehlo.multiply %6088, %6089 : tensor<768xf32>
    %6091 = stablehlo.select %5261, %3242, %6090 : tensor<i1>, tensor<768xf32>
    %6092 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6093 = stablehlo.divide %3247, %6092 : tensor<768x768xf32>
    %6094 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6095 = stablehlo.multiply %6093, %6094 : tensor<768x768xf32>
    %6096 = stablehlo.select %5261, %3247, %6095 : tensor<i1>, tensor<768x768xf32>
    %6097 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6098 = stablehlo.divide %3220, %6097 : tensor<768xf32>
    %6099 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6100 = stablehlo.multiply %6098, %6099 : tensor<768xf32>
    %6101 = stablehlo.select %5261, %3220, %6100 : tensor<i1>, tensor<768xf32>
    %6102 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6103 = stablehlo.divide %3225, %6102 : tensor<768x768xf32>
    %6104 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6105 = stablehlo.multiply %6103, %6104 : tensor<768x768xf32>
    %6106 = stablehlo.select %5261, %3225, %6105 : tensor<i1>, tensor<768x768xf32>
    %6107 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6108 = stablehlo.divide %3187, %6107 : tensor<768xf32>
    %6109 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6110 = stablehlo.multiply %6108, %6109 : tensor<768xf32>
    %6111 = stablehlo.select %5261, %3187, %6110 : tensor<i1>, tensor<768xf32>
    %6112 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6113 = stablehlo.divide %3191, %6112 : tensor<768x768xf32>
    %6114 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6115 = stablehlo.multiply %6113, %6114 : tensor<768x768xf32>
    %6116 = stablehlo.select %5261, %3191, %6115 : tensor<i1>, tensor<768x768xf32>
    %6117 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6118 = stablehlo.divide %3148, %6117 : tensor<768xf32>
    %6119 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6120 = stablehlo.multiply %6118, %6119 : tensor<768xf32>
    %6121 = stablehlo.select %5261, %3148, %6120 : tensor<i1>, tensor<768xf32>
    %6122 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6123 = stablehlo.divide %3159, %6122 : tensor<768xf32>
    %6124 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6125 = stablehlo.multiply %6123, %6124 : tensor<768xf32>
    %6126 = stablehlo.select %5261, %3159, %6125 : tensor<i1>, tensor<768xf32>
    %6127 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6128 = stablehlo.divide %3119, %6127 : tensor<768xf32>
    %6129 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6130 = stablehlo.multiply %6128, %6129 : tensor<768xf32>
    %6131 = stablehlo.select %5261, %3119, %6130 : tensor<i1>, tensor<768xf32>
    %6132 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6133 = stablehlo.divide %3121, %6132 : tensor<3072x768xf32>
    %6134 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6135 = stablehlo.multiply %6133, %6134 : tensor<3072x768xf32>
    %6136 = stablehlo.select %5261, %3121, %6135 : tensor<i1>, tensor<3072x768xf32>
    %6137 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6138 = stablehlo.divide %3080, %6137 : tensor<768xf32>
    %6139 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6140 = stablehlo.multiply %6138, %6139 : tensor<768xf32>
    %6141 = stablehlo.select %5261, %3080, %6140 : tensor<i1>, tensor<768xf32>
    %6142 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6143 = stablehlo.divide %3091, %6142 : tensor<768xf32>
    %6144 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6145 = stablehlo.multiply %6143, %6144 : tensor<768xf32>
    %6146 = stablehlo.select %5261, %3091, %6145 : tensor<i1>, tensor<768xf32>
    %6147 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6148 = stablehlo.divide %3141, %6147 : tensor<3072xf32>
    %6149 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6150 = stablehlo.multiply %6148, %6149 : tensor<3072xf32>
    %6151 = stablehlo.select %5261, %3141, %6150 : tensor<i1>, tensor<3072xf32>
    %6152 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6153 = stablehlo.divide %3143, %6152 : tensor<768x3072xf32>
    %6154 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6155 = stablehlo.multiply %6153, %6154 : tensor<768x3072xf32>
    %6156 = stablehlo.select %5261, %3143, %6155 : tensor<i1>, tensor<768x3072xf32>
    %6157 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6158 = stablehlo.divide %3061, %6157 : tensor<768xf32>
    %6159 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6160 = stablehlo.multiply %6158, %6159 : tensor<768xf32>
    %6161 = stablehlo.select %5261, %3061, %6160 : tensor<i1>, tensor<768xf32>
    %6162 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6163 = stablehlo.divide %3066, %6162 : tensor<768x768xf32>
    %6164 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6165 = stablehlo.multiply %6163, %6164 : tensor<768x768xf32>
    %6166 = stablehlo.select %5261, %3066, %6165 : tensor<i1>, tensor<768x768xf32>
    %6167 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6168 = stablehlo.divide %3072, %6167 : tensor<768xf32>
    %6169 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6170 = stablehlo.multiply %6168, %6169 : tensor<768xf32>
    %6171 = stablehlo.select %5261, %3072, %6170 : tensor<i1>, tensor<768xf32>
    %6172 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6173 = stablehlo.divide %3077, %6172 : tensor<768x768xf32>
    %6174 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6175 = stablehlo.multiply %6173, %6174 : tensor<768x768xf32>
    %6176 = stablehlo.select %5261, %3077, %6175 : tensor<i1>, tensor<768x768xf32>
    %6177 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6178 = stablehlo.divide %3050, %6177 : tensor<768xf32>
    %6179 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6180 = stablehlo.multiply %6178, %6179 : tensor<768xf32>
    %6181 = stablehlo.select %5261, %3050, %6180 : tensor<i1>, tensor<768xf32>
    %6182 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6183 = stablehlo.divide %3055, %6182 : tensor<768x768xf32>
    %6184 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6185 = stablehlo.multiply %6183, %6184 : tensor<768x768xf32>
    %6186 = stablehlo.select %5261, %3055, %6185 : tensor<i1>, tensor<768x768xf32>
    %6187 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6188 = stablehlo.divide %3017, %6187 : tensor<768xf32>
    %6189 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6190 = stablehlo.multiply %6188, %6189 : tensor<768xf32>
    %6191 = stablehlo.select %5261, %3017, %6190 : tensor<i1>, tensor<768xf32>
    %6192 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6193 = stablehlo.divide %3021, %6192 : tensor<768x768xf32>
    %6194 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6195 = stablehlo.multiply %6193, %6194 : tensor<768x768xf32>
    %6196 = stablehlo.select %5261, %3021, %6195 : tensor<i1>, tensor<768x768xf32>
    %6197 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6198 = stablehlo.divide %2978, %6197 : tensor<768xf32>
    %6199 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6200 = stablehlo.multiply %6198, %6199 : tensor<768xf32>
    %6201 = stablehlo.select %5261, %2978, %6200 : tensor<i1>, tensor<768xf32>
    %6202 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6203 = stablehlo.divide %2989, %6202 : tensor<768xf32>
    %6204 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6205 = stablehlo.multiply %6203, %6204 : tensor<768xf32>
    %6206 = stablehlo.select %5261, %2989, %6205 : tensor<i1>, tensor<768xf32>
    %6207 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6208 = stablehlo.divide %2949, %6207 : tensor<768xf32>
    %6209 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6210 = stablehlo.multiply %6208, %6209 : tensor<768xf32>
    %6211 = stablehlo.select %5261, %2949, %6210 : tensor<i1>, tensor<768xf32>
    %6212 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6213 = stablehlo.divide %2951, %6212 : tensor<3072x768xf32>
    %6214 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6215 = stablehlo.multiply %6213, %6214 : tensor<3072x768xf32>
    %6216 = stablehlo.select %5261, %2951, %6215 : tensor<i1>, tensor<3072x768xf32>
    %6217 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6218 = stablehlo.divide %2910, %6217 : tensor<768xf32>
    %6219 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6220 = stablehlo.multiply %6218, %6219 : tensor<768xf32>
    %6221 = stablehlo.select %5261, %2910, %6220 : tensor<i1>, tensor<768xf32>
    %6222 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6223 = stablehlo.divide %2921, %6222 : tensor<768xf32>
    %6224 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6225 = stablehlo.multiply %6223, %6224 : tensor<768xf32>
    %6226 = stablehlo.select %5261, %2921, %6225 : tensor<i1>, tensor<768xf32>
    %6227 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6228 = stablehlo.divide %2971, %6227 : tensor<3072xf32>
    %6229 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6230 = stablehlo.multiply %6228, %6229 : tensor<3072xf32>
    %6231 = stablehlo.select %5261, %2971, %6230 : tensor<i1>, tensor<3072xf32>
    %6232 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6233 = stablehlo.divide %2973, %6232 : tensor<768x3072xf32>
    %6234 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6235 = stablehlo.multiply %6233, %6234 : tensor<768x3072xf32>
    %6236 = stablehlo.select %5261, %2973, %6235 : tensor<i1>, tensor<768x3072xf32>
    %6237 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6238 = stablehlo.divide %4614, %6237 : tensor<768xf32>
    %6239 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6240 = stablehlo.multiply %6238, %6239 : tensor<768xf32>
    %6241 = stablehlo.select %5261, %4614, %6240 : tensor<i1>, tensor<768xf32>
    %6242 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6243 = stablehlo.divide %4625, %6242 : tensor<768xf32>
    %6244 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6245 = stablehlo.multiply %6243, %6244 : tensor<768xf32>
    %6246 = stablehlo.select %5261, %4625, %6245 : tensor<i1>, tensor<768xf32>
    %6247 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6248 = stablehlo.divide %2508, %6247 : tensor<30522xf32>
    %6249 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6250 = stablehlo.multiply %6248, %6249 : tensor<30522xf32>
    %6251 = stablehlo.select %5261, %2508, %6250 : tensor<i1>, tensor<30522xf32>
    %6252 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6253 = stablehlo.divide %2564, %6252 : tensor<768xf32>
    %6254 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6255 = stablehlo.multiply %6253, %6254 : tensor<768xf32>
    %6256 = stablehlo.select %5261, %2564, %6255 : tensor<i1>, tensor<768xf32>
    %6257 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6258 = stablehlo.divide %2566, %6257 : tensor<768x768xf32>
    %6259 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6260 = stablehlo.multiply %6258, %6259 : tensor<768x768xf32>
    %6261 = stablehlo.select %5261, %2566, %6260 : tensor<i1>, tensor<768x768xf32>
    %6262 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6263 = stablehlo.divide %2512, %6262 : tensor<30522x768xf32>
    %6264 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6265 = stablehlo.multiply %6263, %6264 : tensor<30522x768xf32>
    %6266 = stablehlo.select %5261, %2512, %6265 : tensor<i1>, tensor<30522x768xf32>
    %6267 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6268 = stablehlo.divide %2515, %6267 : tensor<768xf32>
    %6269 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6270 = stablehlo.multiply %6268, %6269 : tensor<768xf32>
    %6271 = stablehlo.select %5261, %2515, %6270 : tensor<i1>, tensor<768xf32>
    %6272 = stablehlo.broadcast_in_dim %5260, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6273 = stablehlo.divide %2526, %6272 : tensor<768xf32>
    %6274 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6275 = stablehlo.multiply %6273, %6274 : tensor<768xf32>
    %6276 = stablehlo.select %5261, %2526, %6275 : tensor<i1>, tensor<768xf32>
    %cst_753 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %6277 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6278 = stablehlo.multiply %6277, %5266 : tensor<512x768xf32>
    %6279 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6280 = stablehlo.multiply %6279, %arg204 : tensor<512x768xf32>
    %6281 = stablehlo.add %6278, %6280 : tensor<512x768xf32>
    %6282 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6283 = stablehlo.multiply %6282, %5271 : tensor<2x768xf32>
    %6284 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6285 = stablehlo.multiply %6284, %arg205 : tensor<2x768xf32>
    %6286 = stablehlo.add %6283, %6285 : tensor<2x768xf32>
    %6287 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6288 = stablehlo.multiply %6287, %5276 : tensor<30522x768xf32>
    %6289 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6290 = stablehlo.multiply %6289, %arg206 : tensor<30522x768xf32>
    %6291 = stablehlo.add %6288, %6290 : tensor<30522x768xf32>
    %6292 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6293 = stablehlo.multiply %6292, %5281 : tensor<768xf32>
    %6294 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6295 = stablehlo.multiply %6294, %arg207 : tensor<768xf32>
    %6296 = stablehlo.add %6293, %6295 : tensor<768xf32>
    %6297 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6298 = stablehlo.multiply %6297, %5286 : tensor<768x768xf32>
    %6299 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6300 = stablehlo.multiply %6299, %arg208 : tensor<768x768xf32>
    %6301 = stablehlo.add %6298, %6300 : tensor<768x768xf32>
    %6302 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6303 = stablehlo.multiply %6302, %5291 : tensor<768xf32>
    %6304 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6305 = stablehlo.multiply %6304, %arg209 : tensor<768xf32>
    %6306 = stablehlo.add %6303, %6305 : tensor<768xf32>
    %6307 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6308 = stablehlo.multiply %6307, %5296 : tensor<768x768xf32>
    %6309 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6310 = stablehlo.multiply %6309, %arg210 : tensor<768x768xf32>
    %6311 = stablehlo.add %6308, %6310 : tensor<768x768xf32>
    %6312 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6313 = stablehlo.multiply %6312, %5301 : tensor<768xf32>
    %6314 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6315 = stablehlo.multiply %6314, %arg211 : tensor<768xf32>
    %6316 = stablehlo.add %6313, %6315 : tensor<768xf32>
    %6317 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6318 = stablehlo.multiply %6317, %5306 : tensor<768x768xf32>
    %6319 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6320 = stablehlo.multiply %6319, %arg212 : tensor<768x768xf32>
    %6321 = stablehlo.add %6318, %6320 : tensor<768x768xf32>
    %6322 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6323 = stablehlo.multiply %6322, %5311 : tensor<768xf32>
    %6324 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6325 = stablehlo.multiply %6324, %arg213 : tensor<768xf32>
    %6326 = stablehlo.add %6323, %6325 : tensor<768xf32>
    %6327 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6328 = stablehlo.multiply %6327, %5316 : tensor<768x768xf32>
    %6329 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6330 = stablehlo.multiply %6329, %arg214 : tensor<768x768xf32>
    %6331 = stablehlo.add %6328, %6330 : tensor<768x768xf32>
    %6332 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6333 = stablehlo.multiply %6332, %5321 : tensor<768xf32>
    %6334 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6335 = stablehlo.multiply %6334, %arg215 : tensor<768xf32>
    %6336 = stablehlo.add %6333, %6335 : tensor<768xf32>
    %6337 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6338 = stablehlo.multiply %6337, %5326 : tensor<768xf32>
    %6339 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6340 = stablehlo.multiply %6339, %arg216 : tensor<768xf32>
    %6341 = stablehlo.add %6338, %6340 : tensor<768xf32>
    %6342 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6343 = stablehlo.multiply %6342, %5331 : tensor<768xf32>
    %6344 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6345 = stablehlo.multiply %6344, %arg217 : tensor<768xf32>
    %6346 = stablehlo.add %6343, %6345 : tensor<768xf32>
    %6347 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6348 = stablehlo.multiply %6347, %5336 : tensor<3072x768xf32>
    %6349 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6350 = stablehlo.multiply %6349, %arg218 : tensor<3072x768xf32>
    %6351 = stablehlo.add %6348, %6350 : tensor<3072x768xf32>
    %6352 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6353 = stablehlo.multiply %6352, %5341 : tensor<768xf32>
    %6354 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6355 = stablehlo.multiply %6354, %arg219 : tensor<768xf32>
    %6356 = stablehlo.add %6353, %6355 : tensor<768xf32>
    %6357 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6358 = stablehlo.multiply %6357, %5346 : tensor<768xf32>
    %6359 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6360 = stablehlo.multiply %6359, %arg220 : tensor<768xf32>
    %6361 = stablehlo.add %6358, %6360 : tensor<768xf32>
    %6362 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6363 = stablehlo.multiply %6362, %5351 : tensor<3072xf32>
    %6364 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6365 = stablehlo.multiply %6364, %arg221 : tensor<3072xf32>
    %6366 = stablehlo.add %6363, %6365 : tensor<3072xf32>
    %6367 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6368 = stablehlo.multiply %6367, %5356 : tensor<768x3072xf32>
    %6369 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6370 = stablehlo.multiply %6369, %arg222 : tensor<768x3072xf32>
    %6371 = stablehlo.add %6368, %6370 : tensor<768x3072xf32>
    %6372 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6373 = stablehlo.multiply %6372, %5361 : tensor<768xf32>
    %6374 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6375 = stablehlo.multiply %6374, %arg223 : tensor<768xf32>
    %6376 = stablehlo.add %6373, %6375 : tensor<768xf32>
    %6377 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6378 = stablehlo.multiply %6377, %5366 : tensor<768x768xf32>
    %6379 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6380 = stablehlo.multiply %6379, %arg224 : tensor<768x768xf32>
    %6381 = stablehlo.add %6378, %6380 : tensor<768x768xf32>
    %6382 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6383 = stablehlo.multiply %6382, %5371 : tensor<768xf32>
    %6384 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6385 = stablehlo.multiply %6384, %arg225 : tensor<768xf32>
    %6386 = stablehlo.add %6383, %6385 : tensor<768xf32>
    %6387 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6388 = stablehlo.multiply %6387, %5376 : tensor<768x768xf32>
    %6389 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6390 = stablehlo.multiply %6389, %arg226 : tensor<768x768xf32>
    %6391 = stablehlo.add %6388, %6390 : tensor<768x768xf32>
    %6392 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6393 = stablehlo.multiply %6392, %5381 : tensor<768xf32>
    %6394 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6395 = stablehlo.multiply %6394, %arg227 : tensor<768xf32>
    %6396 = stablehlo.add %6393, %6395 : tensor<768xf32>
    %6397 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6398 = stablehlo.multiply %6397, %5386 : tensor<768x768xf32>
    %6399 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6400 = stablehlo.multiply %6399, %arg228 : tensor<768x768xf32>
    %6401 = stablehlo.add %6398, %6400 : tensor<768x768xf32>
    %6402 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6403 = stablehlo.multiply %6402, %5391 : tensor<768xf32>
    %6404 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6405 = stablehlo.multiply %6404, %arg229 : tensor<768xf32>
    %6406 = stablehlo.add %6403, %6405 : tensor<768xf32>
    %6407 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6408 = stablehlo.multiply %6407, %5396 : tensor<768x768xf32>
    %6409 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6410 = stablehlo.multiply %6409, %arg230 : tensor<768x768xf32>
    %6411 = stablehlo.add %6408, %6410 : tensor<768x768xf32>
    %6412 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6413 = stablehlo.multiply %6412, %5401 : tensor<768xf32>
    %6414 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6415 = stablehlo.multiply %6414, %arg231 : tensor<768xf32>
    %6416 = stablehlo.add %6413, %6415 : tensor<768xf32>
    %6417 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6418 = stablehlo.multiply %6417, %5406 : tensor<768xf32>
    %6419 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6420 = stablehlo.multiply %6419, %arg232 : tensor<768xf32>
    %6421 = stablehlo.add %6418, %6420 : tensor<768xf32>
    %6422 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6423 = stablehlo.multiply %6422, %5411 : tensor<768xf32>
    %6424 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6425 = stablehlo.multiply %6424, %arg233 : tensor<768xf32>
    %6426 = stablehlo.add %6423, %6425 : tensor<768xf32>
    %6427 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6428 = stablehlo.multiply %6427, %5416 : tensor<3072x768xf32>
    %6429 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6430 = stablehlo.multiply %6429, %arg234 : tensor<3072x768xf32>
    %6431 = stablehlo.add %6428, %6430 : tensor<3072x768xf32>
    %6432 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6433 = stablehlo.multiply %6432, %5421 : tensor<768xf32>
    %6434 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6435 = stablehlo.multiply %6434, %arg235 : tensor<768xf32>
    %6436 = stablehlo.add %6433, %6435 : tensor<768xf32>
    %6437 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6438 = stablehlo.multiply %6437, %5426 : tensor<768xf32>
    %6439 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6440 = stablehlo.multiply %6439, %arg236 : tensor<768xf32>
    %6441 = stablehlo.add %6438, %6440 : tensor<768xf32>
    %6442 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6443 = stablehlo.multiply %6442, %5431 : tensor<3072xf32>
    %6444 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6445 = stablehlo.multiply %6444, %arg237 : tensor<3072xf32>
    %6446 = stablehlo.add %6443, %6445 : tensor<3072xf32>
    %6447 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6448 = stablehlo.multiply %6447, %5436 : tensor<768x3072xf32>
    %6449 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6450 = stablehlo.multiply %6449, %arg238 : tensor<768x3072xf32>
    %6451 = stablehlo.add %6448, %6450 : tensor<768x3072xf32>
    %6452 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6453 = stablehlo.multiply %6452, %5441 : tensor<768xf32>
    %6454 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6455 = stablehlo.multiply %6454, %arg239 : tensor<768xf32>
    %6456 = stablehlo.add %6453, %6455 : tensor<768xf32>
    %6457 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6458 = stablehlo.multiply %6457, %5446 : tensor<768x768xf32>
    %6459 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6460 = stablehlo.multiply %6459, %arg240 : tensor<768x768xf32>
    %6461 = stablehlo.add %6458, %6460 : tensor<768x768xf32>
    %6462 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6463 = stablehlo.multiply %6462, %5451 : tensor<768xf32>
    %6464 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6465 = stablehlo.multiply %6464, %arg241 : tensor<768xf32>
    %6466 = stablehlo.add %6463, %6465 : tensor<768xf32>
    %6467 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6468 = stablehlo.multiply %6467, %5456 : tensor<768x768xf32>
    %6469 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6470 = stablehlo.multiply %6469, %arg242 : tensor<768x768xf32>
    %6471 = stablehlo.add %6468, %6470 : tensor<768x768xf32>
    %6472 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6473 = stablehlo.multiply %6472, %5461 : tensor<768xf32>
    %6474 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6475 = stablehlo.multiply %6474, %arg243 : tensor<768xf32>
    %6476 = stablehlo.add %6473, %6475 : tensor<768xf32>
    %6477 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6478 = stablehlo.multiply %6477, %5466 : tensor<768x768xf32>
    %6479 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6480 = stablehlo.multiply %6479, %arg244 : tensor<768x768xf32>
    %6481 = stablehlo.add %6478, %6480 : tensor<768x768xf32>
    %6482 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6483 = stablehlo.multiply %6482, %5471 : tensor<768xf32>
    %6484 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6485 = stablehlo.multiply %6484, %arg245 : tensor<768xf32>
    %6486 = stablehlo.add %6483, %6485 : tensor<768xf32>
    %6487 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6488 = stablehlo.multiply %6487, %5476 : tensor<768x768xf32>
    %6489 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6490 = stablehlo.multiply %6489, %arg246 : tensor<768x768xf32>
    %6491 = stablehlo.add %6488, %6490 : tensor<768x768xf32>
    %6492 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6493 = stablehlo.multiply %6492, %5481 : tensor<768xf32>
    %6494 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6495 = stablehlo.multiply %6494, %arg247 : tensor<768xf32>
    %6496 = stablehlo.add %6493, %6495 : tensor<768xf32>
    %6497 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6498 = stablehlo.multiply %6497, %5486 : tensor<768xf32>
    %6499 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6500 = stablehlo.multiply %6499, %arg248 : tensor<768xf32>
    %6501 = stablehlo.add %6498, %6500 : tensor<768xf32>
    %6502 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6503 = stablehlo.multiply %6502, %5491 : tensor<768xf32>
    %6504 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6505 = stablehlo.multiply %6504, %arg249 : tensor<768xf32>
    %6506 = stablehlo.add %6503, %6505 : tensor<768xf32>
    %6507 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6508 = stablehlo.multiply %6507, %5496 : tensor<3072x768xf32>
    %6509 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6510 = stablehlo.multiply %6509, %arg250 : tensor<3072x768xf32>
    %6511 = stablehlo.add %6508, %6510 : tensor<3072x768xf32>
    %6512 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6513 = stablehlo.multiply %6512, %5501 : tensor<768xf32>
    %6514 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6515 = stablehlo.multiply %6514, %arg251 : tensor<768xf32>
    %6516 = stablehlo.add %6513, %6515 : tensor<768xf32>
    %6517 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6518 = stablehlo.multiply %6517, %5506 : tensor<768xf32>
    %6519 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6520 = stablehlo.multiply %6519, %arg252 : tensor<768xf32>
    %6521 = stablehlo.add %6518, %6520 : tensor<768xf32>
    %6522 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6523 = stablehlo.multiply %6522, %5511 : tensor<3072xf32>
    %6524 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6525 = stablehlo.multiply %6524, %arg253 : tensor<3072xf32>
    %6526 = stablehlo.add %6523, %6525 : tensor<3072xf32>
    %6527 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6528 = stablehlo.multiply %6527, %5516 : tensor<768x3072xf32>
    %6529 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6530 = stablehlo.multiply %6529, %arg254 : tensor<768x3072xf32>
    %6531 = stablehlo.add %6528, %6530 : tensor<768x3072xf32>
    %6532 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6533 = stablehlo.multiply %6532, %5521 : tensor<768xf32>
    %6534 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6535 = stablehlo.multiply %6534, %arg255 : tensor<768xf32>
    %6536 = stablehlo.add %6533, %6535 : tensor<768xf32>
    %6537 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6538 = stablehlo.multiply %6537, %5526 : tensor<768x768xf32>
    %6539 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6540 = stablehlo.multiply %6539, %arg256 : tensor<768x768xf32>
    %6541 = stablehlo.add %6538, %6540 : tensor<768x768xf32>
    %6542 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6543 = stablehlo.multiply %6542, %5531 : tensor<768xf32>
    %6544 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6545 = stablehlo.multiply %6544, %arg257 : tensor<768xf32>
    %6546 = stablehlo.add %6543, %6545 : tensor<768xf32>
    %6547 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6548 = stablehlo.multiply %6547, %5536 : tensor<768x768xf32>
    %6549 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6550 = stablehlo.multiply %6549, %arg258 : tensor<768x768xf32>
    %6551 = stablehlo.add %6548, %6550 : tensor<768x768xf32>
    %6552 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6553 = stablehlo.multiply %6552, %5541 : tensor<768xf32>
    %6554 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6555 = stablehlo.multiply %6554, %arg259 : tensor<768xf32>
    %6556 = stablehlo.add %6553, %6555 : tensor<768xf32>
    %6557 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6558 = stablehlo.multiply %6557, %5546 : tensor<768x768xf32>
    %6559 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6560 = stablehlo.multiply %6559, %arg260 : tensor<768x768xf32>
    %6561 = stablehlo.add %6558, %6560 : tensor<768x768xf32>
    %6562 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6563 = stablehlo.multiply %6562, %5551 : tensor<768xf32>
    %6564 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6565 = stablehlo.multiply %6564, %arg261 : tensor<768xf32>
    %6566 = stablehlo.add %6563, %6565 : tensor<768xf32>
    %6567 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6568 = stablehlo.multiply %6567, %5556 : tensor<768x768xf32>
    %6569 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6570 = stablehlo.multiply %6569, %arg262 : tensor<768x768xf32>
    %6571 = stablehlo.add %6568, %6570 : tensor<768x768xf32>
    %6572 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6573 = stablehlo.multiply %6572, %5561 : tensor<768xf32>
    %6574 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6575 = stablehlo.multiply %6574, %arg263 : tensor<768xf32>
    %6576 = stablehlo.add %6573, %6575 : tensor<768xf32>
    %6577 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6578 = stablehlo.multiply %6577, %5566 : tensor<768xf32>
    %6579 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6580 = stablehlo.multiply %6579, %arg264 : tensor<768xf32>
    %6581 = stablehlo.add %6578, %6580 : tensor<768xf32>
    %6582 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6583 = stablehlo.multiply %6582, %5571 : tensor<768xf32>
    %6584 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6585 = stablehlo.multiply %6584, %arg265 : tensor<768xf32>
    %6586 = stablehlo.add %6583, %6585 : tensor<768xf32>
    %6587 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6588 = stablehlo.multiply %6587, %5576 : tensor<3072x768xf32>
    %6589 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6590 = stablehlo.multiply %6589, %arg266 : tensor<3072x768xf32>
    %6591 = stablehlo.add %6588, %6590 : tensor<3072x768xf32>
    %6592 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6593 = stablehlo.multiply %6592, %5581 : tensor<768xf32>
    %6594 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6595 = stablehlo.multiply %6594, %arg267 : tensor<768xf32>
    %6596 = stablehlo.add %6593, %6595 : tensor<768xf32>
    %6597 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6598 = stablehlo.multiply %6597, %5586 : tensor<768xf32>
    %6599 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6600 = stablehlo.multiply %6599, %arg268 : tensor<768xf32>
    %6601 = stablehlo.add %6598, %6600 : tensor<768xf32>
    %6602 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6603 = stablehlo.multiply %6602, %5591 : tensor<3072xf32>
    %6604 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6605 = stablehlo.multiply %6604, %arg269 : tensor<3072xf32>
    %6606 = stablehlo.add %6603, %6605 : tensor<3072xf32>
    %6607 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6608 = stablehlo.multiply %6607, %5596 : tensor<768x3072xf32>
    %6609 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6610 = stablehlo.multiply %6609, %arg270 : tensor<768x3072xf32>
    %6611 = stablehlo.add %6608, %6610 : tensor<768x3072xf32>
    %6612 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6613 = stablehlo.multiply %6612, %5601 : tensor<768xf32>
    %6614 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6615 = stablehlo.multiply %6614, %arg271 : tensor<768xf32>
    %6616 = stablehlo.add %6613, %6615 : tensor<768xf32>
    %6617 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6618 = stablehlo.multiply %6617, %5606 : tensor<768x768xf32>
    %6619 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6620 = stablehlo.multiply %6619, %arg272 : tensor<768x768xf32>
    %6621 = stablehlo.add %6618, %6620 : tensor<768x768xf32>
    %6622 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6623 = stablehlo.multiply %6622, %5611 : tensor<768xf32>
    %6624 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6625 = stablehlo.multiply %6624, %arg273 : tensor<768xf32>
    %6626 = stablehlo.add %6623, %6625 : tensor<768xf32>
    %6627 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6628 = stablehlo.multiply %6627, %5616 : tensor<768x768xf32>
    %6629 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6630 = stablehlo.multiply %6629, %arg274 : tensor<768x768xf32>
    %6631 = stablehlo.add %6628, %6630 : tensor<768x768xf32>
    %6632 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6633 = stablehlo.multiply %6632, %5621 : tensor<768xf32>
    %6634 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6635 = stablehlo.multiply %6634, %arg275 : tensor<768xf32>
    %6636 = stablehlo.add %6633, %6635 : tensor<768xf32>
    %6637 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6638 = stablehlo.multiply %6637, %5626 : tensor<768x768xf32>
    %6639 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6640 = stablehlo.multiply %6639, %arg276 : tensor<768x768xf32>
    %6641 = stablehlo.add %6638, %6640 : tensor<768x768xf32>
    %6642 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6643 = stablehlo.multiply %6642, %5631 : tensor<768xf32>
    %6644 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6645 = stablehlo.multiply %6644, %arg277 : tensor<768xf32>
    %6646 = stablehlo.add %6643, %6645 : tensor<768xf32>
    %6647 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6648 = stablehlo.multiply %6647, %5636 : tensor<768x768xf32>
    %6649 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6650 = stablehlo.multiply %6649, %arg278 : tensor<768x768xf32>
    %6651 = stablehlo.add %6648, %6650 : tensor<768x768xf32>
    %6652 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6653 = stablehlo.multiply %6652, %5641 : tensor<768xf32>
    %6654 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6655 = stablehlo.multiply %6654, %arg279 : tensor<768xf32>
    %6656 = stablehlo.add %6653, %6655 : tensor<768xf32>
    %6657 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6658 = stablehlo.multiply %6657, %5646 : tensor<768xf32>
    %6659 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6660 = stablehlo.multiply %6659, %arg280 : tensor<768xf32>
    %6661 = stablehlo.add %6658, %6660 : tensor<768xf32>
    %6662 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6663 = stablehlo.multiply %6662, %5651 : tensor<768xf32>
    %6664 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6665 = stablehlo.multiply %6664, %arg281 : tensor<768xf32>
    %6666 = stablehlo.add %6663, %6665 : tensor<768xf32>
    %6667 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6668 = stablehlo.multiply %6667, %5656 : tensor<3072x768xf32>
    %6669 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6670 = stablehlo.multiply %6669, %arg282 : tensor<3072x768xf32>
    %6671 = stablehlo.add %6668, %6670 : tensor<3072x768xf32>
    %6672 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6673 = stablehlo.multiply %6672, %5661 : tensor<768xf32>
    %6674 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6675 = stablehlo.multiply %6674, %arg283 : tensor<768xf32>
    %6676 = stablehlo.add %6673, %6675 : tensor<768xf32>
    %6677 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6678 = stablehlo.multiply %6677, %5666 : tensor<768xf32>
    %6679 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6680 = stablehlo.multiply %6679, %arg284 : tensor<768xf32>
    %6681 = stablehlo.add %6678, %6680 : tensor<768xf32>
    %6682 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6683 = stablehlo.multiply %6682, %5671 : tensor<3072xf32>
    %6684 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6685 = stablehlo.multiply %6684, %arg285 : tensor<3072xf32>
    %6686 = stablehlo.add %6683, %6685 : tensor<3072xf32>
    %6687 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6688 = stablehlo.multiply %6687, %5676 : tensor<768x3072xf32>
    %6689 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6690 = stablehlo.multiply %6689, %arg286 : tensor<768x3072xf32>
    %6691 = stablehlo.add %6688, %6690 : tensor<768x3072xf32>
    %6692 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6693 = stablehlo.multiply %6692, %5681 : tensor<768xf32>
    %6694 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6695 = stablehlo.multiply %6694, %arg287 : tensor<768xf32>
    %6696 = stablehlo.add %6693, %6695 : tensor<768xf32>
    %6697 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6698 = stablehlo.multiply %6697, %5686 : tensor<768x768xf32>
    %6699 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6700 = stablehlo.multiply %6699, %arg288 : tensor<768x768xf32>
    %6701 = stablehlo.add %6698, %6700 : tensor<768x768xf32>
    %6702 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6703 = stablehlo.multiply %6702, %5691 : tensor<768xf32>
    %6704 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6705 = stablehlo.multiply %6704, %arg289 : tensor<768xf32>
    %6706 = stablehlo.add %6703, %6705 : tensor<768xf32>
    %6707 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6708 = stablehlo.multiply %6707, %5696 : tensor<768x768xf32>
    %6709 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6710 = stablehlo.multiply %6709, %arg290 : tensor<768x768xf32>
    %6711 = stablehlo.add %6708, %6710 : tensor<768x768xf32>
    %6712 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6713 = stablehlo.multiply %6712, %5701 : tensor<768xf32>
    %6714 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6715 = stablehlo.multiply %6714, %arg291 : tensor<768xf32>
    %6716 = stablehlo.add %6713, %6715 : tensor<768xf32>
    %6717 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6718 = stablehlo.multiply %6717, %5706 : tensor<768x768xf32>
    %6719 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6720 = stablehlo.multiply %6719, %arg292 : tensor<768x768xf32>
    %6721 = stablehlo.add %6718, %6720 : tensor<768x768xf32>
    %6722 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6723 = stablehlo.multiply %6722, %5711 : tensor<768xf32>
    %6724 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6725 = stablehlo.multiply %6724, %arg293 : tensor<768xf32>
    %6726 = stablehlo.add %6723, %6725 : tensor<768xf32>
    %6727 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6728 = stablehlo.multiply %6727, %5716 : tensor<768x768xf32>
    %6729 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6730 = stablehlo.multiply %6729, %arg294 : tensor<768x768xf32>
    %6731 = stablehlo.add %6728, %6730 : tensor<768x768xf32>
    %6732 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6733 = stablehlo.multiply %6732, %5721 : tensor<768xf32>
    %6734 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6735 = stablehlo.multiply %6734, %arg295 : tensor<768xf32>
    %6736 = stablehlo.add %6733, %6735 : tensor<768xf32>
    %6737 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6738 = stablehlo.multiply %6737, %5726 : tensor<768xf32>
    %6739 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6740 = stablehlo.multiply %6739, %arg296 : tensor<768xf32>
    %6741 = stablehlo.add %6738, %6740 : tensor<768xf32>
    %6742 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6743 = stablehlo.multiply %6742, %5731 : tensor<768xf32>
    %6744 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6745 = stablehlo.multiply %6744, %arg297 : tensor<768xf32>
    %6746 = stablehlo.add %6743, %6745 : tensor<768xf32>
    %6747 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6748 = stablehlo.multiply %6747, %5736 : tensor<3072x768xf32>
    %6749 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6750 = stablehlo.multiply %6749, %arg298 : tensor<3072x768xf32>
    %6751 = stablehlo.add %6748, %6750 : tensor<3072x768xf32>
    %6752 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6753 = stablehlo.multiply %6752, %5741 : tensor<768xf32>
    %6754 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6755 = stablehlo.multiply %6754, %arg299 : tensor<768xf32>
    %6756 = stablehlo.add %6753, %6755 : tensor<768xf32>
    %6757 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6758 = stablehlo.multiply %6757, %5746 : tensor<768xf32>
    %6759 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6760 = stablehlo.multiply %6759, %arg300 : tensor<768xf32>
    %6761 = stablehlo.add %6758, %6760 : tensor<768xf32>
    %6762 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6763 = stablehlo.multiply %6762, %5751 : tensor<3072xf32>
    %6764 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6765 = stablehlo.multiply %6764, %arg301 : tensor<3072xf32>
    %6766 = stablehlo.add %6763, %6765 : tensor<3072xf32>
    %6767 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6768 = stablehlo.multiply %6767, %5756 : tensor<768x3072xf32>
    %6769 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6770 = stablehlo.multiply %6769, %arg302 : tensor<768x3072xf32>
    %6771 = stablehlo.add %6768, %6770 : tensor<768x3072xf32>
    %6772 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6773 = stablehlo.multiply %6772, %5761 : tensor<768xf32>
    %6774 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6775 = stablehlo.multiply %6774, %arg303 : tensor<768xf32>
    %6776 = stablehlo.add %6773, %6775 : tensor<768xf32>
    %6777 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6778 = stablehlo.multiply %6777, %5766 : tensor<768x768xf32>
    %6779 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6780 = stablehlo.multiply %6779, %arg304 : tensor<768x768xf32>
    %6781 = stablehlo.add %6778, %6780 : tensor<768x768xf32>
    %6782 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6783 = stablehlo.multiply %6782, %5771 : tensor<768xf32>
    %6784 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6785 = stablehlo.multiply %6784, %arg305 : tensor<768xf32>
    %6786 = stablehlo.add %6783, %6785 : tensor<768xf32>
    %6787 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6788 = stablehlo.multiply %6787, %5776 : tensor<768x768xf32>
    %6789 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6790 = stablehlo.multiply %6789, %arg306 : tensor<768x768xf32>
    %6791 = stablehlo.add %6788, %6790 : tensor<768x768xf32>
    %6792 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6793 = stablehlo.multiply %6792, %5781 : tensor<768xf32>
    %6794 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6795 = stablehlo.multiply %6794, %arg307 : tensor<768xf32>
    %6796 = stablehlo.add %6793, %6795 : tensor<768xf32>
    %6797 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6798 = stablehlo.multiply %6797, %5786 : tensor<768x768xf32>
    %6799 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6800 = stablehlo.multiply %6799, %arg308 : tensor<768x768xf32>
    %6801 = stablehlo.add %6798, %6800 : tensor<768x768xf32>
    %6802 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6803 = stablehlo.multiply %6802, %5791 : tensor<768xf32>
    %6804 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6805 = stablehlo.multiply %6804, %arg309 : tensor<768xf32>
    %6806 = stablehlo.add %6803, %6805 : tensor<768xf32>
    %6807 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6808 = stablehlo.multiply %6807, %5796 : tensor<768x768xf32>
    %6809 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6810 = stablehlo.multiply %6809, %arg310 : tensor<768x768xf32>
    %6811 = stablehlo.add %6808, %6810 : tensor<768x768xf32>
    %6812 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6813 = stablehlo.multiply %6812, %5801 : tensor<768xf32>
    %6814 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6815 = stablehlo.multiply %6814, %arg311 : tensor<768xf32>
    %6816 = stablehlo.add %6813, %6815 : tensor<768xf32>
    %6817 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6818 = stablehlo.multiply %6817, %5806 : tensor<768xf32>
    %6819 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6820 = stablehlo.multiply %6819, %arg312 : tensor<768xf32>
    %6821 = stablehlo.add %6818, %6820 : tensor<768xf32>
    %6822 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6823 = stablehlo.multiply %6822, %5811 : tensor<768xf32>
    %6824 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6825 = stablehlo.multiply %6824, %arg313 : tensor<768xf32>
    %6826 = stablehlo.add %6823, %6825 : tensor<768xf32>
    %6827 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6828 = stablehlo.multiply %6827, %5816 : tensor<3072x768xf32>
    %6829 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6830 = stablehlo.multiply %6829, %arg314 : tensor<3072x768xf32>
    %6831 = stablehlo.add %6828, %6830 : tensor<3072x768xf32>
    %6832 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6833 = stablehlo.multiply %6832, %5821 : tensor<768xf32>
    %6834 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6835 = stablehlo.multiply %6834, %arg315 : tensor<768xf32>
    %6836 = stablehlo.add %6833, %6835 : tensor<768xf32>
    %6837 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6838 = stablehlo.multiply %6837, %5826 : tensor<768xf32>
    %6839 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6840 = stablehlo.multiply %6839, %arg316 : tensor<768xf32>
    %6841 = stablehlo.add %6838, %6840 : tensor<768xf32>
    %6842 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6843 = stablehlo.multiply %6842, %5831 : tensor<3072xf32>
    %6844 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6845 = stablehlo.multiply %6844, %arg317 : tensor<3072xf32>
    %6846 = stablehlo.add %6843, %6845 : tensor<3072xf32>
    %6847 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6848 = stablehlo.multiply %6847, %5836 : tensor<768x3072xf32>
    %6849 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6850 = stablehlo.multiply %6849, %arg318 : tensor<768x3072xf32>
    %6851 = stablehlo.add %6848, %6850 : tensor<768x3072xf32>
    %6852 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6853 = stablehlo.multiply %6852, %5841 : tensor<768xf32>
    %6854 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6855 = stablehlo.multiply %6854, %arg319 : tensor<768xf32>
    %6856 = stablehlo.add %6853, %6855 : tensor<768xf32>
    %6857 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6858 = stablehlo.multiply %6857, %5846 : tensor<768x768xf32>
    %6859 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6860 = stablehlo.multiply %6859, %arg320 : tensor<768x768xf32>
    %6861 = stablehlo.add %6858, %6860 : tensor<768x768xf32>
    %6862 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6863 = stablehlo.multiply %6862, %5851 : tensor<768xf32>
    %6864 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6865 = stablehlo.multiply %6864, %arg321 : tensor<768xf32>
    %6866 = stablehlo.add %6863, %6865 : tensor<768xf32>
    %6867 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6868 = stablehlo.multiply %6867, %5856 : tensor<768x768xf32>
    %6869 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6870 = stablehlo.multiply %6869, %arg322 : tensor<768x768xf32>
    %6871 = stablehlo.add %6868, %6870 : tensor<768x768xf32>
    %6872 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6873 = stablehlo.multiply %6872, %5861 : tensor<768xf32>
    %6874 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6875 = stablehlo.multiply %6874, %arg323 : tensor<768xf32>
    %6876 = stablehlo.add %6873, %6875 : tensor<768xf32>
    %6877 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6878 = stablehlo.multiply %6877, %5866 : tensor<768x768xf32>
    %6879 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6880 = stablehlo.multiply %6879, %arg324 : tensor<768x768xf32>
    %6881 = stablehlo.add %6878, %6880 : tensor<768x768xf32>
    %6882 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6883 = stablehlo.multiply %6882, %5871 : tensor<768xf32>
    %6884 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6885 = stablehlo.multiply %6884, %arg325 : tensor<768xf32>
    %6886 = stablehlo.add %6883, %6885 : tensor<768xf32>
    %6887 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6888 = stablehlo.multiply %6887, %5876 : tensor<768x768xf32>
    %6889 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6890 = stablehlo.multiply %6889, %arg326 : tensor<768x768xf32>
    %6891 = stablehlo.add %6888, %6890 : tensor<768x768xf32>
    %6892 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6893 = stablehlo.multiply %6892, %5881 : tensor<768xf32>
    %6894 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6895 = stablehlo.multiply %6894, %arg327 : tensor<768xf32>
    %6896 = stablehlo.add %6893, %6895 : tensor<768xf32>
    %6897 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6898 = stablehlo.multiply %6897, %5886 : tensor<768xf32>
    %6899 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6900 = stablehlo.multiply %6899, %arg328 : tensor<768xf32>
    %6901 = stablehlo.add %6898, %6900 : tensor<768xf32>
    %6902 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6903 = stablehlo.multiply %6902, %5891 : tensor<768xf32>
    %6904 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6905 = stablehlo.multiply %6904, %arg329 : tensor<768xf32>
    %6906 = stablehlo.add %6903, %6905 : tensor<768xf32>
    %6907 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6908 = stablehlo.multiply %6907, %5896 : tensor<3072x768xf32>
    %6909 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6910 = stablehlo.multiply %6909, %arg330 : tensor<3072x768xf32>
    %6911 = stablehlo.add %6908, %6910 : tensor<3072x768xf32>
    %6912 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6913 = stablehlo.multiply %6912, %5901 : tensor<768xf32>
    %6914 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6915 = stablehlo.multiply %6914, %arg331 : tensor<768xf32>
    %6916 = stablehlo.add %6913, %6915 : tensor<768xf32>
    %6917 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6918 = stablehlo.multiply %6917, %5906 : tensor<768xf32>
    %6919 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6920 = stablehlo.multiply %6919, %arg332 : tensor<768xf32>
    %6921 = stablehlo.add %6918, %6920 : tensor<768xf32>
    %6922 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6923 = stablehlo.multiply %6922, %5911 : tensor<3072xf32>
    %6924 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6925 = stablehlo.multiply %6924, %arg333 : tensor<3072xf32>
    %6926 = stablehlo.add %6923, %6925 : tensor<3072xf32>
    %6927 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6928 = stablehlo.multiply %6927, %5916 : tensor<768x3072xf32>
    %6929 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6930 = stablehlo.multiply %6929, %arg334 : tensor<768x3072xf32>
    %6931 = stablehlo.add %6928, %6930 : tensor<768x3072xf32>
    %6932 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6933 = stablehlo.multiply %6932, %5921 : tensor<768xf32>
    %6934 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6935 = stablehlo.multiply %6934, %arg335 : tensor<768xf32>
    %6936 = stablehlo.add %6933, %6935 : tensor<768xf32>
    %6937 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6938 = stablehlo.multiply %6937, %5926 : tensor<768x768xf32>
    %6939 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6940 = stablehlo.multiply %6939, %arg336 : tensor<768x768xf32>
    %6941 = stablehlo.add %6938, %6940 : tensor<768x768xf32>
    %6942 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6943 = stablehlo.multiply %6942, %5931 : tensor<768xf32>
    %6944 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6945 = stablehlo.multiply %6944, %arg337 : tensor<768xf32>
    %6946 = stablehlo.add %6943, %6945 : tensor<768xf32>
    %6947 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6948 = stablehlo.multiply %6947, %5936 : tensor<768x768xf32>
    %6949 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6950 = stablehlo.multiply %6949, %arg338 : tensor<768x768xf32>
    %6951 = stablehlo.add %6948, %6950 : tensor<768x768xf32>
    %6952 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6953 = stablehlo.multiply %6952, %5941 : tensor<768xf32>
    %6954 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6955 = stablehlo.multiply %6954, %arg339 : tensor<768xf32>
    %6956 = stablehlo.add %6953, %6955 : tensor<768xf32>
    %6957 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6958 = stablehlo.multiply %6957, %5946 : tensor<768x768xf32>
    %6959 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6960 = stablehlo.multiply %6959, %arg340 : tensor<768x768xf32>
    %6961 = stablehlo.add %6958, %6960 : tensor<768x768xf32>
    %6962 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6963 = stablehlo.multiply %6962, %5951 : tensor<768xf32>
    %6964 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6965 = stablehlo.multiply %6964, %arg341 : tensor<768xf32>
    %6966 = stablehlo.add %6963, %6965 : tensor<768xf32>
    %6967 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6968 = stablehlo.multiply %6967, %5956 : tensor<768x768xf32>
    %6969 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6970 = stablehlo.multiply %6969, %arg342 : tensor<768x768xf32>
    %6971 = stablehlo.add %6968, %6970 : tensor<768x768xf32>
    %6972 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6973 = stablehlo.multiply %6972, %5961 : tensor<768xf32>
    %6974 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6975 = stablehlo.multiply %6974, %arg343 : tensor<768xf32>
    %6976 = stablehlo.add %6973, %6975 : tensor<768xf32>
    %6977 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6978 = stablehlo.multiply %6977, %5966 : tensor<768xf32>
    %6979 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6980 = stablehlo.multiply %6979, %arg344 : tensor<768xf32>
    %6981 = stablehlo.add %6978, %6980 : tensor<768xf32>
    %6982 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6983 = stablehlo.multiply %6982, %5971 : tensor<768xf32>
    %6984 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6985 = stablehlo.multiply %6984, %arg345 : tensor<768xf32>
    %6986 = stablehlo.add %6983, %6985 : tensor<768xf32>
    %6987 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6988 = stablehlo.multiply %6987, %5976 : tensor<3072x768xf32>
    %6989 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6990 = stablehlo.multiply %6989, %arg346 : tensor<3072x768xf32>
    %6991 = stablehlo.add %6988, %6990 : tensor<3072x768xf32>
    %6992 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6993 = stablehlo.multiply %6992, %5981 : tensor<768xf32>
    %6994 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6995 = stablehlo.multiply %6994, %arg347 : tensor<768xf32>
    %6996 = stablehlo.add %6993, %6995 : tensor<768xf32>
    %6997 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6998 = stablehlo.multiply %6997, %5986 : tensor<768xf32>
    %6999 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7000 = stablehlo.multiply %6999, %arg348 : tensor<768xf32>
    %7001 = stablehlo.add %6998, %7000 : tensor<768xf32>
    %7002 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7003 = stablehlo.multiply %7002, %5991 : tensor<3072xf32>
    %7004 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7005 = stablehlo.multiply %7004, %arg349 : tensor<3072xf32>
    %7006 = stablehlo.add %7003, %7005 : tensor<3072xf32>
    %7007 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7008 = stablehlo.multiply %7007, %5996 : tensor<768x3072xf32>
    %7009 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7010 = stablehlo.multiply %7009, %arg350 : tensor<768x3072xf32>
    %7011 = stablehlo.add %7008, %7010 : tensor<768x3072xf32>
    %7012 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7013 = stablehlo.multiply %7012, %6001 : tensor<768xf32>
    %7014 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7015 = stablehlo.multiply %7014, %arg351 : tensor<768xf32>
    %7016 = stablehlo.add %7013, %7015 : tensor<768xf32>
    %7017 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7018 = stablehlo.multiply %7017, %6006 : tensor<768x768xf32>
    %7019 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7020 = stablehlo.multiply %7019, %arg352 : tensor<768x768xf32>
    %7021 = stablehlo.add %7018, %7020 : tensor<768x768xf32>
    %7022 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7023 = stablehlo.multiply %7022, %6011 : tensor<768xf32>
    %7024 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7025 = stablehlo.multiply %7024, %arg353 : tensor<768xf32>
    %7026 = stablehlo.add %7023, %7025 : tensor<768xf32>
    %7027 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7028 = stablehlo.multiply %7027, %6016 : tensor<768x768xf32>
    %7029 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7030 = stablehlo.multiply %7029, %arg354 : tensor<768x768xf32>
    %7031 = stablehlo.add %7028, %7030 : tensor<768x768xf32>
    %7032 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7033 = stablehlo.multiply %7032, %6021 : tensor<768xf32>
    %7034 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7035 = stablehlo.multiply %7034, %arg355 : tensor<768xf32>
    %7036 = stablehlo.add %7033, %7035 : tensor<768xf32>
    %7037 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7038 = stablehlo.multiply %7037, %6026 : tensor<768x768xf32>
    %7039 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7040 = stablehlo.multiply %7039, %arg356 : tensor<768x768xf32>
    %7041 = stablehlo.add %7038, %7040 : tensor<768x768xf32>
    %7042 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7043 = stablehlo.multiply %7042, %6031 : tensor<768xf32>
    %7044 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7045 = stablehlo.multiply %7044, %arg357 : tensor<768xf32>
    %7046 = stablehlo.add %7043, %7045 : tensor<768xf32>
    %7047 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7048 = stablehlo.multiply %7047, %6036 : tensor<768x768xf32>
    %7049 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7050 = stablehlo.multiply %7049, %arg358 : tensor<768x768xf32>
    %7051 = stablehlo.add %7048, %7050 : tensor<768x768xf32>
    %7052 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7053 = stablehlo.multiply %7052, %6041 : tensor<768xf32>
    %7054 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7055 = stablehlo.multiply %7054, %arg359 : tensor<768xf32>
    %7056 = stablehlo.add %7053, %7055 : tensor<768xf32>
    %7057 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7058 = stablehlo.multiply %7057, %6046 : tensor<768xf32>
    %7059 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7060 = stablehlo.multiply %7059, %arg360 : tensor<768xf32>
    %7061 = stablehlo.add %7058, %7060 : tensor<768xf32>
    %7062 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7063 = stablehlo.multiply %7062, %6051 : tensor<768xf32>
    %7064 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7065 = stablehlo.multiply %7064, %arg361 : tensor<768xf32>
    %7066 = stablehlo.add %7063, %7065 : tensor<768xf32>
    %7067 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7068 = stablehlo.multiply %7067, %6056 : tensor<3072x768xf32>
    %7069 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7070 = stablehlo.multiply %7069, %arg362 : tensor<3072x768xf32>
    %7071 = stablehlo.add %7068, %7070 : tensor<3072x768xf32>
    %7072 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7073 = stablehlo.multiply %7072, %6061 : tensor<768xf32>
    %7074 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7075 = stablehlo.multiply %7074, %arg363 : tensor<768xf32>
    %7076 = stablehlo.add %7073, %7075 : tensor<768xf32>
    %7077 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7078 = stablehlo.multiply %7077, %6066 : tensor<768xf32>
    %7079 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7080 = stablehlo.multiply %7079, %arg364 : tensor<768xf32>
    %7081 = stablehlo.add %7078, %7080 : tensor<768xf32>
    %7082 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7083 = stablehlo.multiply %7082, %6071 : tensor<3072xf32>
    %7084 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7085 = stablehlo.multiply %7084, %arg365 : tensor<3072xf32>
    %7086 = stablehlo.add %7083, %7085 : tensor<3072xf32>
    %7087 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7088 = stablehlo.multiply %7087, %6076 : tensor<768x3072xf32>
    %7089 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7090 = stablehlo.multiply %7089, %arg366 : tensor<768x3072xf32>
    %7091 = stablehlo.add %7088, %7090 : tensor<768x3072xf32>
    %7092 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7093 = stablehlo.multiply %7092, %6081 : tensor<768xf32>
    %7094 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7095 = stablehlo.multiply %7094, %arg367 : tensor<768xf32>
    %7096 = stablehlo.add %7093, %7095 : tensor<768xf32>
    %7097 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7098 = stablehlo.multiply %7097, %6086 : tensor<768x768xf32>
    %7099 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7100 = stablehlo.multiply %7099, %arg368 : tensor<768x768xf32>
    %7101 = stablehlo.add %7098, %7100 : tensor<768x768xf32>
    %7102 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7103 = stablehlo.multiply %7102, %6091 : tensor<768xf32>
    %7104 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7105 = stablehlo.multiply %7104, %arg369 : tensor<768xf32>
    %7106 = stablehlo.add %7103, %7105 : tensor<768xf32>
    %7107 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7108 = stablehlo.multiply %7107, %6096 : tensor<768x768xf32>
    %7109 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7110 = stablehlo.multiply %7109, %arg370 : tensor<768x768xf32>
    %7111 = stablehlo.add %7108, %7110 : tensor<768x768xf32>
    %7112 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7113 = stablehlo.multiply %7112, %6101 : tensor<768xf32>
    %7114 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7115 = stablehlo.multiply %7114, %arg371 : tensor<768xf32>
    %7116 = stablehlo.add %7113, %7115 : tensor<768xf32>
    %7117 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7118 = stablehlo.multiply %7117, %6106 : tensor<768x768xf32>
    %7119 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7120 = stablehlo.multiply %7119, %arg372 : tensor<768x768xf32>
    %7121 = stablehlo.add %7118, %7120 : tensor<768x768xf32>
    %7122 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7123 = stablehlo.multiply %7122, %6111 : tensor<768xf32>
    %7124 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7125 = stablehlo.multiply %7124, %arg373 : tensor<768xf32>
    %7126 = stablehlo.add %7123, %7125 : tensor<768xf32>
    %7127 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7128 = stablehlo.multiply %7127, %6116 : tensor<768x768xf32>
    %7129 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7130 = stablehlo.multiply %7129, %arg374 : tensor<768x768xf32>
    %7131 = stablehlo.add %7128, %7130 : tensor<768x768xf32>
    %7132 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7133 = stablehlo.multiply %7132, %6121 : tensor<768xf32>
    %7134 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7135 = stablehlo.multiply %7134, %arg375 : tensor<768xf32>
    %7136 = stablehlo.add %7133, %7135 : tensor<768xf32>
    %7137 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7138 = stablehlo.multiply %7137, %6126 : tensor<768xf32>
    %7139 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7140 = stablehlo.multiply %7139, %arg376 : tensor<768xf32>
    %7141 = stablehlo.add %7138, %7140 : tensor<768xf32>
    %7142 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7143 = stablehlo.multiply %7142, %6131 : tensor<768xf32>
    %7144 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7145 = stablehlo.multiply %7144, %arg377 : tensor<768xf32>
    %7146 = stablehlo.add %7143, %7145 : tensor<768xf32>
    %7147 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7148 = stablehlo.multiply %7147, %6136 : tensor<3072x768xf32>
    %7149 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7150 = stablehlo.multiply %7149, %arg378 : tensor<3072x768xf32>
    %7151 = stablehlo.add %7148, %7150 : tensor<3072x768xf32>
    %7152 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7153 = stablehlo.multiply %7152, %6141 : tensor<768xf32>
    %7154 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7155 = stablehlo.multiply %7154, %arg379 : tensor<768xf32>
    %7156 = stablehlo.add %7153, %7155 : tensor<768xf32>
    %7157 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7158 = stablehlo.multiply %7157, %6146 : tensor<768xf32>
    %7159 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7160 = stablehlo.multiply %7159, %arg380 : tensor<768xf32>
    %7161 = stablehlo.add %7158, %7160 : tensor<768xf32>
    %7162 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7163 = stablehlo.multiply %7162, %6151 : tensor<3072xf32>
    %7164 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7165 = stablehlo.multiply %7164, %arg381 : tensor<3072xf32>
    %7166 = stablehlo.add %7163, %7165 : tensor<3072xf32>
    %7167 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7168 = stablehlo.multiply %7167, %6156 : tensor<768x3072xf32>
    %7169 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7170 = stablehlo.multiply %7169, %arg382 : tensor<768x3072xf32>
    %7171 = stablehlo.add %7168, %7170 : tensor<768x3072xf32>
    %7172 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7173 = stablehlo.multiply %7172, %6161 : tensor<768xf32>
    %7174 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7175 = stablehlo.multiply %7174, %arg383 : tensor<768xf32>
    %7176 = stablehlo.add %7173, %7175 : tensor<768xf32>
    %7177 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7178 = stablehlo.multiply %7177, %6166 : tensor<768x768xf32>
    %7179 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7180 = stablehlo.multiply %7179, %arg384 : tensor<768x768xf32>
    %7181 = stablehlo.add %7178, %7180 : tensor<768x768xf32>
    %7182 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7183 = stablehlo.multiply %7182, %6171 : tensor<768xf32>
    %7184 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7185 = stablehlo.multiply %7184, %arg385 : tensor<768xf32>
    %7186 = stablehlo.add %7183, %7185 : tensor<768xf32>
    %7187 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7188 = stablehlo.multiply %7187, %6176 : tensor<768x768xf32>
    %7189 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7190 = stablehlo.multiply %7189, %arg386 : tensor<768x768xf32>
    %7191 = stablehlo.add %7188, %7190 : tensor<768x768xf32>
    %7192 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7193 = stablehlo.multiply %7192, %6181 : tensor<768xf32>
    %7194 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7195 = stablehlo.multiply %7194, %arg387 : tensor<768xf32>
    %7196 = stablehlo.add %7193, %7195 : tensor<768xf32>
    %7197 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7198 = stablehlo.multiply %7197, %6186 : tensor<768x768xf32>
    %7199 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7200 = stablehlo.multiply %7199, %arg388 : tensor<768x768xf32>
    %7201 = stablehlo.add %7198, %7200 : tensor<768x768xf32>
    %7202 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7203 = stablehlo.multiply %7202, %6191 : tensor<768xf32>
    %7204 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7205 = stablehlo.multiply %7204, %arg389 : tensor<768xf32>
    %7206 = stablehlo.add %7203, %7205 : tensor<768xf32>
    %7207 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7208 = stablehlo.multiply %7207, %6196 : tensor<768x768xf32>
    %7209 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7210 = stablehlo.multiply %7209, %arg390 : tensor<768x768xf32>
    %7211 = stablehlo.add %7208, %7210 : tensor<768x768xf32>
    %7212 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7213 = stablehlo.multiply %7212, %6201 : tensor<768xf32>
    %7214 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7215 = stablehlo.multiply %7214, %arg391 : tensor<768xf32>
    %7216 = stablehlo.add %7213, %7215 : tensor<768xf32>
    %7217 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7218 = stablehlo.multiply %7217, %6206 : tensor<768xf32>
    %7219 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7220 = stablehlo.multiply %7219, %arg392 : tensor<768xf32>
    %7221 = stablehlo.add %7218, %7220 : tensor<768xf32>
    %7222 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7223 = stablehlo.multiply %7222, %6211 : tensor<768xf32>
    %7224 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7225 = stablehlo.multiply %7224, %arg393 : tensor<768xf32>
    %7226 = stablehlo.add %7223, %7225 : tensor<768xf32>
    %7227 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7228 = stablehlo.multiply %7227, %6216 : tensor<3072x768xf32>
    %7229 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7230 = stablehlo.multiply %7229, %arg394 : tensor<3072x768xf32>
    %7231 = stablehlo.add %7228, %7230 : tensor<3072x768xf32>
    %7232 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7233 = stablehlo.multiply %7232, %6221 : tensor<768xf32>
    %7234 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7235 = stablehlo.multiply %7234, %arg395 : tensor<768xf32>
    %7236 = stablehlo.add %7233, %7235 : tensor<768xf32>
    %7237 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7238 = stablehlo.multiply %7237, %6226 : tensor<768xf32>
    %7239 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7240 = stablehlo.multiply %7239, %arg396 : tensor<768xf32>
    %7241 = stablehlo.add %7238, %7240 : tensor<768xf32>
    %7242 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7243 = stablehlo.multiply %7242, %6231 : tensor<3072xf32>
    %7244 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7245 = stablehlo.multiply %7244, %arg397 : tensor<3072xf32>
    %7246 = stablehlo.add %7243, %7245 : tensor<3072xf32>
    %7247 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7248 = stablehlo.multiply %7247, %6236 : tensor<768x3072xf32>
    %7249 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7250 = stablehlo.multiply %7249, %arg398 : tensor<768x3072xf32>
    %7251 = stablehlo.add %7248, %7250 : tensor<768x3072xf32>
    %7252 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7253 = stablehlo.multiply %7252, %6241 : tensor<768xf32>
    %7254 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7255 = stablehlo.multiply %7254, %arg399 : tensor<768xf32>
    %7256 = stablehlo.add %7253, %7255 : tensor<768xf32>
    %7257 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7258 = stablehlo.multiply %7257, %6246 : tensor<768xf32>
    %7259 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7260 = stablehlo.multiply %7259, %arg400 : tensor<768xf32>
    %7261 = stablehlo.add %7258, %7260 : tensor<768xf32>
    %7262 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7263 = stablehlo.multiply %7262, %6251 : tensor<30522xf32>
    %7264 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7265 = stablehlo.multiply %7264, %arg401 : tensor<30522xf32>
    %7266 = stablehlo.add %7263, %7265 : tensor<30522xf32>
    %7267 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7268 = stablehlo.multiply %7267, %6256 : tensor<768xf32>
    %7269 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7270 = stablehlo.multiply %7269, %arg402 : tensor<768xf32>
    %7271 = stablehlo.add %7268, %7270 : tensor<768xf32>
    %7272 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7273 = stablehlo.multiply %7272, %6261 : tensor<768x768xf32>
    %7274 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7275 = stablehlo.multiply %7274, %arg403 : tensor<768x768xf32>
    %7276 = stablehlo.add %7273, %7275 : tensor<768x768xf32>
    %7277 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7278 = stablehlo.multiply %7277, %6266 : tensor<30522x768xf32>
    %7279 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7280 = stablehlo.multiply %7279, %arg404 : tensor<30522x768xf32>
    %7281 = stablehlo.add %7278, %7280 : tensor<30522x768xf32>
    %7282 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7283 = stablehlo.multiply %7282, %6271 : tensor<768xf32>
    %7284 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7285 = stablehlo.multiply %7284, %arg405 : tensor<768xf32>
    %7286 = stablehlo.add %7283, %7285 : tensor<768xf32>
    %7287 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7288 = stablehlo.multiply %7287, %6276 : tensor<768xf32>
    %7289 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7290 = stablehlo.multiply %7289, %arg406 : tensor<768xf32>
    %7291 = stablehlo.add %7288, %7290 : tensor<768xf32>
    %7292 = stablehlo.multiply %5266, %5266 : tensor<512x768xf32>
    %cst_754 = stablehlo.constant dense<1.000000e-03> : tensor<f32>
    %7293 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7294 = stablehlo.multiply %7293, %7292 : tensor<512x768xf32>
    %cst_755 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %7295 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7296 = stablehlo.multiply %7295, %arg407 : tensor<512x768xf32>
    %7297 = stablehlo.add %7294, %7296 : tensor<512x768xf32>
    %7298 = stablehlo.multiply %5271, %5271 : tensor<2x768xf32>
    %7299 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7300 = stablehlo.multiply %7299, %7298 : tensor<2x768xf32>
    %7301 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7302 = stablehlo.multiply %7301, %arg408 : tensor<2x768xf32>
    %7303 = stablehlo.add %7300, %7302 : tensor<2x768xf32>
    %7304 = stablehlo.multiply %5276, %5276 : tensor<30522x768xf32>
    %7305 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7306 = stablehlo.multiply %7305, %7304 : tensor<30522x768xf32>
    %7307 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7308 = stablehlo.multiply %7307, %arg409 : tensor<30522x768xf32>
    %7309 = stablehlo.add %7306, %7308 : tensor<30522x768xf32>
    %7310 = stablehlo.multiply %5281, %5281 : tensor<768xf32>
    %7311 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7312 = stablehlo.multiply %7311, %7310 : tensor<768xf32>
    %7313 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7314 = stablehlo.multiply %7313, %arg410 : tensor<768xf32>
    %7315 = stablehlo.add %7312, %7314 : tensor<768xf32>
    %7316 = stablehlo.multiply %5286, %5286 : tensor<768x768xf32>
    %7317 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7318 = stablehlo.multiply %7317, %7316 : tensor<768x768xf32>
    %7319 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7320 = stablehlo.multiply %7319, %arg411 : tensor<768x768xf32>
    %7321 = stablehlo.add %7318, %7320 : tensor<768x768xf32>
    %7322 = stablehlo.multiply %5291, %5291 : tensor<768xf32>
    %7323 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7324 = stablehlo.multiply %7323, %7322 : tensor<768xf32>
    %7325 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7326 = stablehlo.multiply %7325, %arg412 : tensor<768xf32>
    %7327 = stablehlo.add %7324, %7326 : tensor<768xf32>
    %7328 = stablehlo.multiply %5296, %5296 : tensor<768x768xf32>
    %7329 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7330 = stablehlo.multiply %7329, %7328 : tensor<768x768xf32>
    %7331 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7332 = stablehlo.multiply %7331, %arg413 : tensor<768x768xf32>
    %7333 = stablehlo.add %7330, %7332 : tensor<768x768xf32>
    %7334 = stablehlo.multiply %5301, %5301 : tensor<768xf32>
    %7335 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7336 = stablehlo.multiply %7335, %7334 : tensor<768xf32>
    %7337 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7338 = stablehlo.multiply %7337, %arg414 : tensor<768xf32>
    %7339 = stablehlo.add %7336, %7338 : tensor<768xf32>
    %7340 = stablehlo.multiply %5306, %5306 : tensor<768x768xf32>
    %7341 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7342 = stablehlo.multiply %7341, %7340 : tensor<768x768xf32>
    %7343 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7344 = stablehlo.multiply %7343, %arg415 : tensor<768x768xf32>
    %7345 = stablehlo.add %7342, %7344 : tensor<768x768xf32>
    %7346 = stablehlo.multiply %5311, %5311 : tensor<768xf32>
    %7347 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7348 = stablehlo.multiply %7347, %7346 : tensor<768xf32>
    %7349 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7350 = stablehlo.multiply %7349, %arg416 : tensor<768xf32>
    %7351 = stablehlo.add %7348, %7350 : tensor<768xf32>
    %7352 = stablehlo.multiply %5316, %5316 : tensor<768x768xf32>
    %7353 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7354 = stablehlo.multiply %7353, %7352 : tensor<768x768xf32>
    %7355 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7356 = stablehlo.multiply %7355, %arg417 : tensor<768x768xf32>
    %7357 = stablehlo.add %7354, %7356 : tensor<768x768xf32>
    %7358 = stablehlo.multiply %5321, %5321 : tensor<768xf32>
    %7359 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7360 = stablehlo.multiply %7359, %7358 : tensor<768xf32>
    %7361 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7362 = stablehlo.multiply %7361, %arg418 : tensor<768xf32>
    %7363 = stablehlo.add %7360, %7362 : tensor<768xf32>
    %7364 = stablehlo.multiply %5326, %5326 : tensor<768xf32>
    %7365 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7366 = stablehlo.multiply %7365, %7364 : tensor<768xf32>
    %7367 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7368 = stablehlo.multiply %7367, %arg419 : tensor<768xf32>
    %7369 = stablehlo.add %7366, %7368 : tensor<768xf32>
    %7370 = stablehlo.multiply %5331, %5331 : tensor<768xf32>
    %7371 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7372 = stablehlo.multiply %7371, %7370 : tensor<768xf32>
    %7373 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7374 = stablehlo.multiply %7373, %arg420 : tensor<768xf32>
    %7375 = stablehlo.add %7372, %7374 : tensor<768xf32>
    %7376 = stablehlo.multiply %5336, %5336 : tensor<3072x768xf32>
    %7377 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7378 = stablehlo.multiply %7377, %7376 : tensor<3072x768xf32>
    %7379 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7380 = stablehlo.multiply %7379, %arg421 : tensor<3072x768xf32>
    %7381 = stablehlo.add %7378, %7380 : tensor<3072x768xf32>
    %7382 = stablehlo.multiply %5341, %5341 : tensor<768xf32>
    %7383 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7384 = stablehlo.multiply %7383, %7382 : tensor<768xf32>
    %7385 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7386 = stablehlo.multiply %7385, %arg422 : tensor<768xf32>
    %7387 = stablehlo.add %7384, %7386 : tensor<768xf32>
    %7388 = stablehlo.multiply %5346, %5346 : tensor<768xf32>
    %7389 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7390 = stablehlo.multiply %7389, %7388 : tensor<768xf32>
    %7391 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7392 = stablehlo.multiply %7391, %arg423 : tensor<768xf32>
    %7393 = stablehlo.add %7390, %7392 : tensor<768xf32>
    %7394 = stablehlo.multiply %5351, %5351 : tensor<3072xf32>
    %7395 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7396 = stablehlo.multiply %7395, %7394 : tensor<3072xf32>
    %7397 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7398 = stablehlo.multiply %7397, %arg424 : tensor<3072xf32>
    %7399 = stablehlo.add %7396, %7398 : tensor<3072xf32>
    %7400 = stablehlo.multiply %5356, %5356 : tensor<768x3072xf32>
    %7401 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7402 = stablehlo.multiply %7401, %7400 : tensor<768x3072xf32>
    %7403 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7404 = stablehlo.multiply %7403, %arg425 : tensor<768x3072xf32>
    %7405 = stablehlo.add %7402, %7404 : tensor<768x3072xf32>
    %7406 = stablehlo.multiply %5361, %5361 : tensor<768xf32>
    %7407 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7408 = stablehlo.multiply %7407, %7406 : tensor<768xf32>
    %7409 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7410 = stablehlo.multiply %7409, %arg426 : tensor<768xf32>
    %7411 = stablehlo.add %7408, %7410 : tensor<768xf32>
    %7412 = stablehlo.multiply %5366, %5366 : tensor<768x768xf32>
    %7413 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7414 = stablehlo.multiply %7413, %7412 : tensor<768x768xf32>
    %7415 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7416 = stablehlo.multiply %7415, %arg427 : tensor<768x768xf32>
    %7417 = stablehlo.add %7414, %7416 : tensor<768x768xf32>
    %7418 = stablehlo.multiply %5371, %5371 : tensor<768xf32>
    %7419 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7420 = stablehlo.multiply %7419, %7418 : tensor<768xf32>
    %7421 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7422 = stablehlo.multiply %7421, %arg428 : tensor<768xf32>
    %7423 = stablehlo.add %7420, %7422 : tensor<768xf32>
    %7424 = stablehlo.multiply %5376, %5376 : tensor<768x768xf32>
    %7425 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7426 = stablehlo.multiply %7425, %7424 : tensor<768x768xf32>
    %7427 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7428 = stablehlo.multiply %7427, %arg429 : tensor<768x768xf32>
    %7429 = stablehlo.add %7426, %7428 : tensor<768x768xf32>
    %7430 = stablehlo.multiply %5381, %5381 : tensor<768xf32>
    %7431 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7432 = stablehlo.multiply %7431, %7430 : tensor<768xf32>
    %7433 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7434 = stablehlo.multiply %7433, %arg430 : tensor<768xf32>
    %7435 = stablehlo.add %7432, %7434 : tensor<768xf32>
    %7436 = stablehlo.multiply %5386, %5386 : tensor<768x768xf32>
    %7437 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7438 = stablehlo.multiply %7437, %7436 : tensor<768x768xf32>
    %7439 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7440 = stablehlo.multiply %7439, %arg431 : tensor<768x768xf32>
    %7441 = stablehlo.add %7438, %7440 : tensor<768x768xf32>
    %7442 = stablehlo.multiply %5391, %5391 : tensor<768xf32>
    %7443 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7444 = stablehlo.multiply %7443, %7442 : tensor<768xf32>
    %7445 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7446 = stablehlo.multiply %7445, %arg432 : tensor<768xf32>
    %7447 = stablehlo.add %7444, %7446 : tensor<768xf32>
    %7448 = stablehlo.multiply %5396, %5396 : tensor<768x768xf32>
    %7449 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7450 = stablehlo.multiply %7449, %7448 : tensor<768x768xf32>
    %7451 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7452 = stablehlo.multiply %7451, %arg433 : tensor<768x768xf32>
    %7453 = stablehlo.add %7450, %7452 : tensor<768x768xf32>
    %7454 = stablehlo.multiply %5401, %5401 : tensor<768xf32>
    %7455 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7456 = stablehlo.multiply %7455, %7454 : tensor<768xf32>
    %7457 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7458 = stablehlo.multiply %7457, %arg434 : tensor<768xf32>
    %7459 = stablehlo.add %7456, %7458 : tensor<768xf32>
    %7460 = stablehlo.multiply %5406, %5406 : tensor<768xf32>
    %7461 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7462 = stablehlo.multiply %7461, %7460 : tensor<768xf32>
    %7463 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7464 = stablehlo.multiply %7463, %arg435 : tensor<768xf32>
    %7465 = stablehlo.add %7462, %7464 : tensor<768xf32>
    %7466 = stablehlo.multiply %5411, %5411 : tensor<768xf32>
    %7467 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7468 = stablehlo.multiply %7467, %7466 : tensor<768xf32>
    %7469 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7470 = stablehlo.multiply %7469, %arg436 : tensor<768xf32>
    %7471 = stablehlo.add %7468, %7470 : tensor<768xf32>
    %7472 = stablehlo.multiply %5416, %5416 : tensor<3072x768xf32>
    %7473 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7474 = stablehlo.multiply %7473, %7472 : tensor<3072x768xf32>
    %7475 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7476 = stablehlo.multiply %7475, %arg437 : tensor<3072x768xf32>
    %7477 = stablehlo.add %7474, %7476 : tensor<3072x768xf32>
    %7478 = stablehlo.multiply %5421, %5421 : tensor<768xf32>
    %7479 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7480 = stablehlo.multiply %7479, %7478 : tensor<768xf32>
    %7481 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7482 = stablehlo.multiply %7481, %arg438 : tensor<768xf32>
    %7483 = stablehlo.add %7480, %7482 : tensor<768xf32>
    %7484 = stablehlo.multiply %5426, %5426 : tensor<768xf32>
    %7485 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7486 = stablehlo.multiply %7485, %7484 : tensor<768xf32>
    %7487 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7488 = stablehlo.multiply %7487, %arg439 : tensor<768xf32>
    %7489 = stablehlo.add %7486, %7488 : tensor<768xf32>
    %7490 = stablehlo.multiply %5431, %5431 : tensor<3072xf32>
    %7491 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7492 = stablehlo.multiply %7491, %7490 : tensor<3072xf32>
    %7493 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7494 = stablehlo.multiply %7493, %arg440 : tensor<3072xf32>
    %7495 = stablehlo.add %7492, %7494 : tensor<3072xf32>
    %7496 = stablehlo.multiply %5436, %5436 : tensor<768x3072xf32>
    %7497 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7498 = stablehlo.multiply %7497, %7496 : tensor<768x3072xf32>
    %7499 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7500 = stablehlo.multiply %7499, %arg441 : tensor<768x3072xf32>
    %7501 = stablehlo.add %7498, %7500 : tensor<768x3072xf32>
    %7502 = stablehlo.multiply %5441, %5441 : tensor<768xf32>
    %7503 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7504 = stablehlo.multiply %7503, %7502 : tensor<768xf32>
    %7505 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7506 = stablehlo.multiply %7505, %arg442 : tensor<768xf32>
    %7507 = stablehlo.add %7504, %7506 : tensor<768xf32>
    %7508 = stablehlo.multiply %5446, %5446 : tensor<768x768xf32>
    %7509 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7510 = stablehlo.multiply %7509, %7508 : tensor<768x768xf32>
    %7511 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7512 = stablehlo.multiply %7511, %arg443 : tensor<768x768xf32>
    %7513 = stablehlo.add %7510, %7512 : tensor<768x768xf32>
    %7514 = stablehlo.multiply %5451, %5451 : tensor<768xf32>
    %7515 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7516 = stablehlo.multiply %7515, %7514 : tensor<768xf32>
    %7517 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7518 = stablehlo.multiply %7517, %arg444 : tensor<768xf32>
    %7519 = stablehlo.add %7516, %7518 : tensor<768xf32>
    %7520 = stablehlo.multiply %5456, %5456 : tensor<768x768xf32>
    %7521 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7522 = stablehlo.multiply %7521, %7520 : tensor<768x768xf32>
    %7523 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7524 = stablehlo.multiply %7523, %arg445 : tensor<768x768xf32>
    %7525 = stablehlo.add %7522, %7524 : tensor<768x768xf32>
    %7526 = stablehlo.multiply %5461, %5461 : tensor<768xf32>
    %7527 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7528 = stablehlo.multiply %7527, %7526 : tensor<768xf32>
    %7529 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7530 = stablehlo.multiply %7529, %arg446 : tensor<768xf32>
    %7531 = stablehlo.add %7528, %7530 : tensor<768xf32>
    %7532 = stablehlo.multiply %5466, %5466 : tensor<768x768xf32>
    %7533 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7534 = stablehlo.multiply %7533, %7532 : tensor<768x768xf32>
    %7535 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7536 = stablehlo.multiply %7535, %arg447 : tensor<768x768xf32>
    %7537 = stablehlo.add %7534, %7536 : tensor<768x768xf32>
    %7538 = stablehlo.multiply %5471, %5471 : tensor<768xf32>
    %7539 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7540 = stablehlo.multiply %7539, %7538 : tensor<768xf32>
    %7541 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7542 = stablehlo.multiply %7541, %arg448 : tensor<768xf32>
    %7543 = stablehlo.add %7540, %7542 : tensor<768xf32>
    %7544 = stablehlo.multiply %5476, %5476 : tensor<768x768xf32>
    %7545 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7546 = stablehlo.multiply %7545, %7544 : tensor<768x768xf32>
    %7547 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7548 = stablehlo.multiply %7547, %arg449 : tensor<768x768xf32>
    %7549 = stablehlo.add %7546, %7548 : tensor<768x768xf32>
    %7550 = stablehlo.multiply %5481, %5481 : tensor<768xf32>
    %7551 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7552 = stablehlo.multiply %7551, %7550 : tensor<768xf32>
    %7553 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7554 = stablehlo.multiply %7553, %arg450 : tensor<768xf32>
    %7555 = stablehlo.add %7552, %7554 : tensor<768xf32>
    %7556 = stablehlo.multiply %5486, %5486 : tensor<768xf32>
    %7557 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7558 = stablehlo.multiply %7557, %7556 : tensor<768xf32>
    %7559 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7560 = stablehlo.multiply %7559, %arg451 : tensor<768xf32>
    %7561 = stablehlo.add %7558, %7560 : tensor<768xf32>
    %7562 = stablehlo.multiply %5491, %5491 : tensor<768xf32>
    %7563 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7564 = stablehlo.multiply %7563, %7562 : tensor<768xf32>
    %7565 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7566 = stablehlo.multiply %7565, %arg452 : tensor<768xf32>
    %7567 = stablehlo.add %7564, %7566 : tensor<768xf32>
    %7568 = stablehlo.multiply %5496, %5496 : tensor<3072x768xf32>
    %7569 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7570 = stablehlo.multiply %7569, %7568 : tensor<3072x768xf32>
    %7571 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7572 = stablehlo.multiply %7571, %arg453 : tensor<3072x768xf32>
    %7573 = stablehlo.add %7570, %7572 : tensor<3072x768xf32>
    %7574 = stablehlo.multiply %5501, %5501 : tensor<768xf32>
    %7575 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7576 = stablehlo.multiply %7575, %7574 : tensor<768xf32>
    %7577 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7578 = stablehlo.multiply %7577, %arg454 : tensor<768xf32>
    %7579 = stablehlo.add %7576, %7578 : tensor<768xf32>
    %7580 = stablehlo.multiply %5506, %5506 : tensor<768xf32>
    %7581 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7582 = stablehlo.multiply %7581, %7580 : tensor<768xf32>
    %7583 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7584 = stablehlo.multiply %7583, %arg455 : tensor<768xf32>
    %7585 = stablehlo.add %7582, %7584 : tensor<768xf32>
    %7586 = stablehlo.multiply %5511, %5511 : tensor<3072xf32>
    %7587 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7588 = stablehlo.multiply %7587, %7586 : tensor<3072xf32>
    %7589 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7590 = stablehlo.multiply %7589, %arg456 : tensor<3072xf32>
    %7591 = stablehlo.add %7588, %7590 : tensor<3072xf32>
    %7592 = stablehlo.multiply %5516, %5516 : tensor<768x3072xf32>
    %7593 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7594 = stablehlo.multiply %7593, %7592 : tensor<768x3072xf32>
    %7595 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7596 = stablehlo.multiply %7595, %arg457 : tensor<768x3072xf32>
    %7597 = stablehlo.add %7594, %7596 : tensor<768x3072xf32>
    %7598 = stablehlo.multiply %5521, %5521 : tensor<768xf32>
    %7599 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7600 = stablehlo.multiply %7599, %7598 : tensor<768xf32>
    %7601 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7602 = stablehlo.multiply %7601, %arg458 : tensor<768xf32>
    %7603 = stablehlo.add %7600, %7602 : tensor<768xf32>
    %7604 = stablehlo.multiply %5526, %5526 : tensor<768x768xf32>
    %7605 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7606 = stablehlo.multiply %7605, %7604 : tensor<768x768xf32>
    %7607 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7608 = stablehlo.multiply %7607, %arg459 : tensor<768x768xf32>
    %7609 = stablehlo.add %7606, %7608 : tensor<768x768xf32>
    %7610 = stablehlo.multiply %5531, %5531 : tensor<768xf32>
    %7611 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7612 = stablehlo.multiply %7611, %7610 : tensor<768xf32>
    %7613 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7614 = stablehlo.multiply %7613, %arg460 : tensor<768xf32>
    %7615 = stablehlo.add %7612, %7614 : tensor<768xf32>
    %7616 = stablehlo.multiply %5536, %5536 : tensor<768x768xf32>
    %7617 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7618 = stablehlo.multiply %7617, %7616 : tensor<768x768xf32>
    %7619 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7620 = stablehlo.multiply %7619, %arg461 : tensor<768x768xf32>
    %7621 = stablehlo.add %7618, %7620 : tensor<768x768xf32>
    %7622 = stablehlo.multiply %5541, %5541 : tensor<768xf32>
    %7623 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7624 = stablehlo.multiply %7623, %7622 : tensor<768xf32>
    %7625 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7626 = stablehlo.multiply %7625, %arg462 : tensor<768xf32>
    %7627 = stablehlo.add %7624, %7626 : tensor<768xf32>
    %7628 = stablehlo.multiply %5546, %5546 : tensor<768x768xf32>
    %7629 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7630 = stablehlo.multiply %7629, %7628 : tensor<768x768xf32>
    %7631 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7632 = stablehlo.multiply %7631, %arg463 : tensor<768x768xf32>
    %7633 = stablehlo.add %7630, %7632 : tensor<768x768xf32>
    %7634 = stablehlo.multiply %5551, %5551 : tensor<768xf32>
    %7635 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7636 = stablehlo.multiply %7635, %7634 : tensor<768xf32>
    %7637 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7638 = stablehlo.multiply %7637, %arg464 : tensor<768xf32>
    %7639 = stablehlo.add %7636, %7638 : tensor<768xf32>
    %7640 = stablehlo.multiply %5556, %5556 : tensor<768x768xf32>
    %7641 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7642 = stablehlo.multiply %7641, %7640 : tensor<768x768xf32>
    %7643 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7644 = stablehlo.multiply %7643, %arg465 : tensor<768x768xf32>
    %7645 = stablehlo.add %7642, %7644 : tensor<768x768xf32>
    %7646 = stablehlo.multiply %5561, %5561 : tensor<768xf32>
    %7647 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7648 = stablehlo.multiply %7647, %7646 : tensor<768xf32>
    %7649 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7650 = stablehlo.multiply %7649, %arg466 : tensor<768xf32>
    %7651 = stablehlo.add %7648, %7650 : tensor<768xf32>
    %7652 = stablehlo.multiply %5566, %5566 : tensor<768xf32>
    %7653 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7654 = stablehlo.multiply %7653, %7652 : tensor<768xf32>
    %7655 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7656 = stablehlo.multiply %7655, %arg467 : tensor<768xf32>
    %7657 = stablehlo.add %7654, %7656 : tensor<768xf32>
    %7658 = stablehlo.multiply %5571, %5571 : tensor<768xf32>
    %7659 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7660 = stablehlo.multiply %7659, %7658 : tensor<768xf32>
    %7661 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7662 = stablehlo.multiply %7661, %arg468 : tensor<768xf32>
    %7663 = stablehlo.add %7660, %7662 : tensor<768xf32>
    %7664 = stablehlo.multiply %5576, %5576 : tensor<3072x768xf32>
    %7665 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7666 = stablehlo.multiply %7665, %7664 : tensor<3072x768xf32>
    %7667 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7668 = stablehlo.multiply %7667, %arg469 : tensor<3072x768xf32>
    %7669 = stablehlo.add %7666, %7668 : tensor<3072x768xf32>
    %7670 = stablehlo.multiply %5581, %5581 : tensor<768xf32>
    %7671 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7672 = stablehlo.multiply %7671, %7670 : tensor<768xf32>
    %7673 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7674 = stablehlo.multiply %7673, %arg470 : tensor<768xf32>
    %7675 = stablehlo.add %7672, %7674 : tensor<768xf32>
    %7676 = stablehlo.multiply %5586, %5586 : tensor<768xf32>
    %7677 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7678 = stablehlo.multiply %7677, %7676 : tensor<768xf32>
    %7679 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7680 = stablehlo.multiply %7679, %arg471 : tensor<768xf32>
    %7681 = stablehlo.add %7678, %7680 : tensor<768xf32>
    %7682 = stablehlo.multiply %5591, %5591 : tensor<3072xf32>
    %7683 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7684 = stablehlo.multiply %7683, %7682 : tensor<3072xf32>
    %7685 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7686 = stablehlo.multiply %7685, %arg472 : tensor<3072xf32>
    %7687 = stablehlo.add %7684, %7686 : tensor<3072xf32>
    %7688 = stablehlo.multiply %5596, %5596 : tensor<768x3072xf32>
    %7689 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7690 = stablehlo.multiply %7689, %7688 : tensor<768x3072xf32>
    %7691 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7692 = stablehlo.multiply %7691, %arg473 : tensor<768x3072xf32>
    %7693 = stablehlo.add %7690, %7692 : tensor<768x3072xf32>
    %7694 = stablehlo.multiply %5601, %5601 : tensor<768xf32>
    %7695 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7696 = stablehlo.multiply %7695, %7694 : tensor<768xf32>
    %7697 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7698 = stablehlo.multiply %7697, %arg474 : tensor<768xf32>
    %7699 = stablehlo.add %7696, %7698 : tensor<768xf32>
    %7700 = stablehlo.multiply %5606, %5606 : tensor<768x768xf32>
    %7701 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7702 = stablehlo.multiply %7701, %7700 : tensor<768x768xf32>
    %7703 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7704 = stablehlo.multiply %7703, %arg475 : tensor<768x768xf32>
    %7705 = stablehlo.add %7702, %7704 : tensor<768x768xf32>
    %7706 = stablehlo.multiply %5611, %5611 : tensor<768xf32>
    %7707 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7708 = stablehlo.multiply %7707, %7706 : tensor<768xf32>
    %7709 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7710 = stablehlo.multiply %7709, %arg476 : tensor<768xf32>
    %7711 = stablehlo.add %7708, %7710 : tensor<768xf32>
    %7712 = stablehlo.multiply %5616, %5616 : tensor<768x768xf32>
    %7713 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7714 = stablehlo.multiply %7713, %7712 : tensor<768x768xf32>
    %7715 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7716 = stablehlo.multiply %7715, %arg477 : tensor<768x768xf32>
    %7717 = stablehlo.add %7714, %7716 : tensor<768x768xf32>
    %7718 = stablehlo.multiply %5621, %5621 : tensor<768xf32>
    %7719 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7720 = stablehlo.multiply %7719, %7718 : tensor<768xf32>
    %7721 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7722 = stablehlo.multiply %7721, %arg478 : tensor<768xf32>
    %7723 = stablehlo.add %7720, %7722 : tensor<768xf32>
    %7724 = stablehlo.multiply %5626, %5626 : tensor<768x768xf32>
    %7725 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7726 = stablehlo.multiply %7725, %7724 : tensor<768x768xf32>
    %7727 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7728 = stablehlo.multiply %7727, %arg479 : tensor<768x768xf32>
    %7729 = stablehlo.add %7726, %7728 : tensor<768x768xf32>
    %7730 = stablehlo.multiply %5631, %5631 : tensor<768xf32>
    %7731 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7732 = stablehlo.multiply %7731, %7730 : tensor<768xf32>
    %7733 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7734 = stablehlo.multiply %7733, %arg480 : tensor<768xf32>
    %7735 = stablehlo.add %7732, %7734 : tensor<768xf32>
    %7736 = stablehlo.multiply %5636, %5636 : tensor<768x768xf32>
    %7737 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7738 = stablehlo.multiply %7737, %7736 : tensor<768x768xf32>
    %7739 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7740 = stablehlo.multiply %7739, %arg481 : tensor<768x768xf32>
    %7741 = stablehlo.add %7738, %7740 : tensor<768x768xf32>
    %7742 = stablehlo.multiply %5641, %5641 : tensor<768xf32>
    %7743 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7744 = stablehlo.multiply %7743, %7742 : tensor<768xf32>
    %7745 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7746 = stablehlo.multiply %7745, %arg482 : tensor<768xf32>
    %7747 = stablehlo.add %7744, %7746 : tensor<768xf32>
    %7748 = stablehlo.multiply %5646, %5646 : tensor<768xf32>
    %7749 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7750 = stablehlo.multiply %7749, %7748 : tensor<768xf32>
    %7751 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7752 = stablehlo.multiply %7751, %arg483 : tensor<768xf32>
    %7753 = stablehlo.add %7750, %7752 : tensor<768xf32>
    %7754 = stablehlo.multiply %5651, %5651 : tensor<768xf32>
    %7755 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7756 = stablehlo.multiply %7755, %7754 : tensor<768xf32>
    %7757 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7758 = stablehlo.multiply %7757, %arg484 : tensor<768xf32>
    %7759 = stablehlo.add %7756, %7758 : tensor<768xf32>
    %7760 = stablehlo.multiply %5656, %5656 : tensor<3072x768xf32>
    %7761 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7762 = stablehlo.multiply %7761, %7760 : tensor<3072x768xf32>
    %7763 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7764 = stablehlo.multiply %7763, %arg485 : tensor<3072x768xf32>
    %7765 = stablehlo.add %7762, %7764 : tensor<3072x768xf32>
    %7766 = stablehlo.multiply %5661, %5661 : tensor<768xf32>
    %7767 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7768 = stablehlo.multiply %7767, %7766 : tensor<768xf32>
    %7769 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7770 = stablehlo.multiply %7769, %arg486 : tensor<768xf32>
    %7771 = stablehlo.add %7768, %7770 : tensor<768xf32>
    %7772 = stablehlo.multiply %5666, %5666 : tensor<768xf32>
    %7773 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7774 = stablehlo.multiply %7773, %7772 : tensor<768xf32>
    %7775 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7776 = stablehlo.multiply %7775, %arg487 : tensor<768xf32>
    %7777 = stablehlo.add %7774, %7776 : tensor<768xf32>
    %7778 = stablehlo.multiply %5671, %5671 : tensor<3072xf32>
    %7779 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7780 = stablehlo.multiply %7779, %7778 : tensor<3072xf32>
    %7781 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7782 = stablehlo.multiply %7781, %arg488 : tensor<3072xf32>
    %7783 = stablehlo.add %7780, %7782 : tensor<3072xf32>
    %7784 = stablehlo.multiply %5676, %5676 : tensor<768x3072xf32>
    %7785 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7786 = stablehlo.multiply %7785, %7784 : tensor<768x3072xf32>
    %7787 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7788 = stablehlo.multiply %7787, %arg489 : tensor<768x3072xf32>
    %7789 = stablehlo.add %7786, %7788 : tensor<768x3072xf32>
    %7790 = stablehlo.multiply %5681, %5681 : tensor<768xf32>
    %7791 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7792 = stablehlo.multiply %7791, %7790 : tensor<768xf32>
    %7793 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7794 = stablehlo.multiply %7793, %arg490 : tensor<768xf32>
    %7795 = stablehlo.add %7792, %7794 : tensor<768xf32>
    %7796 = stablehlo.multiply %5686, %5686 : tensor<768x768xf32>
    %7797 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7798 = stablehlo.multiply %7797, %7796 : tensor<768x768xf32>
    %7799 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7800 = stablehlo.multiply %7799, %arg491 : tensor<768x768xf32>
    %7801 = stablehlo.add %7798, %7800 : tensor<768x768xf32>
    %7802 = stablehlo.multiply %5691, %5691 : tensor<768xf32>
    %7803 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7804 = stablehlo.multiply %7803, %7802 : tensor<768xf32>
    %7805 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7806 = stablehlo.multiply %7805, %arg492 : tensor<768xf32>
    %7807 = stablehlo.add %7804, %7806 : tensor<768xf32>
    %7808 = stablehlo.multiply %5696, %5696 : tensor<768x768xf32>
    %7809 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7810 = stablehlo.multiply %7809, %7808 : tensor<768x768xf32>
    %7811 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7812 = stablehlo.multiply %7811, %arg493 : tensor<768x768xf32>
    %7813 = stablehlo.add %7810, %7812 : tensor<768x768xf32>
    %7814 = stablehlo.multiply %5701, %5701 : tensor<768xf32>
    %7815 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7816 = stablehlo.multiply %7815, %7814 : tensor<768xf32>
    %7817 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7818 = stablehlo.multiply %7817, %arg494 : tensor<768xf32>
    %7819 = stablehlo.add %7816, %7818 : tensor<768xf32>
    %7820 = stablehlo.multiply %5706, %5706 : tensor<768x768xf32>
    %7821 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7822 = stablehlo.multiply %7821, %7820 : tensor<768x768xf32>
    %7823 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7824 = stablehlo.multiply %7823, %arg495 : tensor<768x768xf32>
    %7825 = stablehlo.add %7822, %7824 : tensor<768x768xf32>
    %7826 = stablehlo.multiply %5711, %5711 : tensor<768xf32>
    %7827 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7828 = stablehlo.multiply %7827, %7826 : tensor<768xf32>
    %7829 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7830 = stablehlo.multiply %7829, %arg496 : tensor<768xf32>
    %7831 = stablehlo.add %7828, %7830 : tensor<768xf32>
    %7832 = stablehlo.multiply %5716, %5716 : tensor<768x768xf32>
    %7833 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7834 = stablehlo.multiply %7833, %7832 : tensor<768x768xf32>
    %7835 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7836 = stablehlo.multiply %7835, %arg497 : tensor<768x768xf32>
    %7837 = stablehlo.add %7834, %7836 : tensor<768x768xf32>
    %7838 = stablehlo.multiply %5721, %5721 : tensor<768xf32>
    %7839 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7840 = stablehlo.multiply %7839, %7838 : tensor<768xf32>
    %7841 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7842 = stablehlo.multiply %7841, %arg498 : tensor<768xf32>
    %7843 = stablehlo.add %7840, %7842 : tensor<768xf32>
    %7844 = stablehlo.multiply %5726, %5726 : tensor<768xf32>
    %7845 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7846 = stablehlo.multiply %7845, %7844 : tensor<768xf32>
    %7847 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7848 = stablehlo.multiply %7847, %arg499 : tensor<768xf32>
    %7849 = stablehlo.add %7846, %7848 : tensor<768xf32>
    %7850 = stablehlo.multiply %5731, %5731 : tensor<768xf32>
    %7851 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7852 = stablehlo.multiply %7851, %7850 : tensor<768xf32>
    %7853 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7854 = stablehlo.multiply %7853, %arg500 : tensor<768xf32>
    %7855 = stablehlo.add %7852, %7854 : tensor<768xf32>
    %7856 = stablehlo.multiply %5736, %5736 : tensor<3072x768xf32>
    %7857 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7858 = stablehlo.multiply %7857, %7856 : tensor<3072x768xf32>
    %7859 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7860 = stablehlo.multiply %7859, %arg501 : tensor<3072x768xf32>
    %7861 = stablehlo.add %7858, %7860 : tensor<3072x768xf32>
    %7862 = stablehlo.multiply %5741, %5741 : tensor<768xf32>
    %7863 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7864 = stablehlo.multiply %7863, %7862 : tensor<768xf32>
    %7865 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7866 = stablehlo.multiply %7865, %arg502 : tensor<768xf32>
    %7867 = stablehlo.add %7864, %7866 : tensor<768xf32>
    %7868 = stablehlo.multiply %5746, %5746 : tensor<768xf32>
    %7869 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7870 = stablehlo.multiply %7869, %7868 : tensor<768xf32>
    %7871 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7872 = stablehlo.multiply %7871, %arg503 : tensor<768xf32>
    %7873 = stablehlo.add %7870, %7872 : tensor<768xf32>
    %7874 = stablehlo.multiply %5751, %5751 : tensor<3072xf32>
    %7875 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7876 = stablehlo.multiply %7875, %7874 : tensor<3072xf32>
    %7877 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7878 = stablehlo.multiply %7877, %arg504 : tensor<3072xf32>
    %7879 = stablehlo.add %7876, %7878 : tensor<3072xf32>
    %7880 = stablehlo.multiply %5756, %5756 : tensor<768x3072xf32>
    %7881 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7882 = stablehlo.multiply %7881, %7880 : tensor<768x3072xf32>
    %7883 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7884 = stablehlo.multiply %7883, %arg505 : tensor<768x3072xf32>
    %7885 = stablehlo.add %7882, %7884 : tensor<768x3072xf32>
    %7886 = stablehlo.multiply %5761, %5761 : tensor<768xf32>
    %7887 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7888 = stablehlo.multiply %7887, %7886 : tensor<768xf32>
    %7889 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7890 = stablehlo.multiply %7889, %arg506 : tensor<768xf32>
    %7891 = stablehlo.add %7888, %7890 : tensor<768xf32>
    %7892 = stablehlo.multiply %5766, %5766 : tensor<768x768xf32>
    %7893 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7894 = stablehlo.multiply %7893, %7892 : tensor<768x768xf32>
    %7895 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7896 = stablehlo.multiply %7895, %arg507 : tensor<768x768xf32>
    %7897 = stablehlo.add %7894, %7896 : tensor<768x768xf32>
    %7898 = stablehlo.multiply %5771, %5771 : tensor<768xf32>
    %7899 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7900 = stablehlo.multiply %7899, %7898 : tensor<768xf32>
    %7901 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7902 = stablehlo.multiply %7901, %arg508 : tensor<768xf32>
    %7903 = stablehlo.add %7900, %7902 : tensor<768xf32>
    %7904 = stablehlo.multiply %5776, %5776 : tensor<768x768xf32>
    %7905 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7906 = stablehlo.multiply %7905, %7904 : tensor<768x768xf32>
    %7907 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7908 = stablehlo.multiply %7907, %arg509 : tensor<768x768xf32>
    %7909 = stablehlo.add %7906, %7908 : tensor<768x768xf32>
    %7910 = stablehlo.multiply %5781, %5781 : tensor<768xf32>
    %7911 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7912 = stablehlo.multiply %7911, %7910 : tensor<768xf32>
    %7913 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7914 = stablehlo.multiply %7913, %arg510 : tensor<768xf32>
    %7915 = stablehlo.add %7912, %7914 : tensor<768xf32>
    %7916 = stablehlo.multiply %5786, %5786 : tensor<768x768xf32>
    %7917 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7918 = stablehlo.multiply %7917, %7916 : tensor<768x768xf32>
    %7919 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7920 = stablehlo.multiply %7919, %arg511 : tensor<768x768xf32>
    %7921 = stablehlo.add %7918, %7920 : tensor<768x768xf32>
    %7922 = stablehlo.multiply %5791, %5791 : tensor<768xf32>
    %7923 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7924 = stablehlo.multiply %7923, %7922 : tensor<768xf32>
    %7925 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7926 = stablehlo.multiply %7925, %arg512 : tensor<768xf32>
    %7927 = stablehlo.add %7924, %7926 : tensor<768xf32>
    %7928 = stablehlo.multiply %5796, %5796 : tensor<768x768xf32>
    %7929 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7930 = stablehlo.multiply %7929, %7928 : tensor<768x768xf32>
    %7931 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7932 = stablehlo.multiply %7931, %arg513 : tensor<768x768xf32>
    %7933 = stablehlo.add %7930, %7932 : tensor<768x768xf32>
    %7934 = stablehlo.multiply %5801, %5801 : tensor<768xf32>
    %7935 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7936 = stablehlo.multiply %7935, %7934 : tensor<768xf32>
    %7937 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7938 = stablehlo.multiply %7937, %arg514 : tensor<768xf32>
    %7939 = stablehlo.add %7936, %7938 : tensor<768xf32>
    %7940 = stablehlo.multiply %5806, %5806 : tensor<768xf32>
    %7941 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7942 = stablehlo.multiply %7941, %7940 : tensor<768xf32>
    %7943 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7944 = stablehlo.multiply %7943, %arg515 : tensor<768xf32>
    %7945 = stablehlo.add %7942, %7944 : tensor<768xf32>
    %7946 = stablehlo.multiply %5811, %5811 : tensor<768xf32>
    %7947 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7948 = stablehlo.multiply %7947, %7946 : tensor<768xf32>
    %7949 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7950 = stablehlo.multiply %7949, %arg516 : tensor<768xf32>
    %7951 = stablehlo.add %7948, %7950 : tensor<768xf32>
    %7952 = stablehlo.multiply %5816, %5816 : tensor<3072x768xf32>
    %7953 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7954 = stablehlo.multiply %7953, %7952 : tensor<3072x768xf32>
    %7955 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7956 = stablehlo.multiply %7955, %arg517 : tensor<3072x768xf32>
    %7957 = stablehlo.add %7954, %7956 : tensor<3072x768xf32>
    %7958 = stablehlo.multiply %5821, %5821 : tensor<768xf32>
    %7959 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7960 = stablehlo.multiply %7959, %7958 : tensor<768xf32>
    %7961 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7962 = stablehlo.multiply %7961, %arg518 : tensor<768xf32>
    %7963 = stablehlo.add %7960, %7962 : tensor<768xf32>
    %7964 = stablehlo.multiply %5826, %5826 : tensor<768xf32>
    %7965 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7966 = stablehlo.multiply %7965, %7964 : tensor<768xf32>
    %7967 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7968 = stablehlo.multiply %7967, %arg519 : tensor<768xf32>
    %7969 = stablehlo.add %7966, %7968 : tensor<768xf32>
    %7970 = stablehlo.multiply %5831, %5831 : tensor<3072xf32>
    %7971 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7972 = stablehlo.multiply %7971, %7970 : tensor<3072xf32>
    %7973 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7974 = stablehlo.multiply %7973, %arg520 : tensor<3072xf32>
    %7975 = stablehlo.add %7972, %7974 : tensor<3072xf32>
    %7976 = stablehlo.multiply %5836, %5836 : tensor<768x3072xf32>
    %7977 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7978 = stablehlo.multiply %7977, %7976 : tensor<768x3072xf32>
    %7979 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7980 = stablehlo.multiply %7979, %arg521 : tensor<768x3072xf32>
    %7981 = stablehlo.add %7978, %7980 : tensor<768x3072xf32>
    %7982 = stablehlo.multiply %5841, %5841 : tensor<768xf32>
    %7983 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7984 = stablehlo.multiply %7983, %7982 : tensor<768xf32>
    %7985 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7986 = stablehlo.multiply %7985, %arg522 : tensor<768xf32>
    %7987 = stablehlo.add %7984, %7986 : tensor<768xf32>
    %7988 = stablehlo.multiply %5846, %5846 : tensor<768x768xf32>
    %7989 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7990 = stablehlo.multiply %7989, %7988 : tensor<768x768xf32>
    %7991 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7992 = stablehlo.multiply %7991, %arg523 : tensor<768x768xf32>
    %7993 = stablehlo.add %7990, %7992 : tensor<768x768xf32>
    %7994 = stablehlo.multiply %5851, %5851 : tensor<768xf32>
    %7995 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7996 = stablehlo.multiply %7995, %7994 : tensor<768xf32>
    %7997 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7998 = stablehlo.multiply %7997, %arg524 : tensor<768xf32>
    %7999 = stablehlo.add %7996, %7998 : tensor<768xf32>
    %8000 = stablehlo.multiply %5856, %5856 : tensor<768x768xf32>
    %8001 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8002 = stablehlo.multiply %8001, %8000 : tensor<768x768xf32>
    %8003 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8004 = stablehlo.multiply %8003, %arg525 : tensor<768x768xf32>
    %8005 = stablehlo.add %8002, %8004 : tensor<768x768xf32>
    %8006 = stablehlo.multiply %5861, %5861 : tensor<768xf32>
    %8007 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8008 = stablehlo.multiply %8007, %8006 : tensor<768xf32>
    %8009 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8010 = stablehlo.multiply %8009, %arg526 : tensor<768xf32>
    %8011 = stablehlo.add %8008, %8010 : tensor<768xf32>
    %8012 = stablehlo.multiply %5866, %5866 : tensor<768x768xf32>
    %8013 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8014 = stablehlo.multiply %8013, %8012 : tensor<768x768xf32>
    %8015 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8016 = stablehlo.multiply %8015, %arg527 : tensor<768x768xf32>
    %8017 = stablehlo.add %8014, %8016 : tensor<768x768xf32>
    %8018 = stablehlo.multiply %5871, %5871 : tensor<768xf32>
    %8019 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8020 = stablehlo.multiply %8019, %8018 : tensor<768xf32>
    %8021 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8022 = stablehlo.multiply %8021, %arg528 : tensor<768xf32>
    %8023 = stablehlo.add %8020, %8022 : tensor<768xf32>
    %8024 = stablehlo.multiply %5876, %5876 : tensor<768x768xf32>
    %8025 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8026 = stablehlo.multiply %8025, %8024 : tensor<768x768xf32>
    %8027 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8028 = stablehlo.multiply %8027, %arg529 : tensor<768x768xf32>
    %8029 = stablehlo.add %8026, %8028 : tensor<768x768xf32>
    %8030 = stablehlo.multiply %5881, %5881 : tensor<768xf32>
    %8031 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8032 = stablehlo.multiply %8031, %8030 : tensor<768xf32>
    %8033 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8034 = stablehlo.multiply %8033, %arg530 : tensor<768xf32>
    %8035 = stablehlo.add %8032, %8034 : tensor<768xf32>
    %8036 = stablehlo.multiply %5886, %5886 : tensor<768xf32>
    %8037 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8038 = stablehlo.multiply %8037, %8036 : tensor<768xf32>
    %8039 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8040 = stablehlo.multiply %8039, %arg531 : tensor<768xf32>
    %8041 = stablehlo.add %8038, %8040 : tensor<768xf32>
    %8042 = stablehlo.multiply %5891, %5891 : tensor<768xf32>
    %8043 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8044 = stablehlo.multiply %8043, %8042 : tensor<768xf32>
    %8045 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8046 = stablehlo.multiply %8045, %arg532 : tensor<768xf32>
    %8047 = stablehlo.add %8044, %8046 : tensor<768xf32>
    %8048 = stablehlo.multiply %5896, %5896 : tensor<3072x768xf32>
    %8049 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8050 = stablehlo.multiply %8049, %8048 : tensor<3072x768xf32>
    %8051 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8052 = stablehlo.multiply %8051, %arg533 : tensor<3072x768xf32>
    %8053 = stablehlo.add %8050, %8052 : tensor<3072x768xf32>
    %8054 = stablehlo.multiply %5901, %5901 : tensor<768xf32>
    %8055 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8056 = stablehlo.multiply %8055, %8054 : tensor<768xf32>
    %8057 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8058 = stablehlo.multiply %8057, %arg534 : tensor<768xf32>
    %8059 = stablehlo.add %8056, %8058 : tensor<768xf32>
    %8060 = stablehlo.multiply %5906, %5906 : tensor<768xf32>
    %8061 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8062 = stablehlo.multiply %8061, %8060 : tensor<768xf32>
    %8063 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8064 = stablehlo.multiply %8063, %arg535 : tensor<768xf32>
    %8065 = stablehlo.add %8062, %8064 : tensor<768xf32>
    %8066 = stablehlo.multiply %5911, %5911 : tensor<3072xf32>
    %8067 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8068 = stablehlo.multiply %8067, %8066 : tensor<3072xf32>
    %8069 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8070 = stablehlo.multiply %8069, %arg536 : tensor<3072xf32>
    %8071 = stablehlo.add %8068, %8070 : tensor<3072xf32>
    %8072 = stablehlo.multiply %5916, %5916 : tensor<768x3072xf32>
    %8073 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8074 = stablehlo.multiply %8073, %8072 : tensor<768x3072xf32>
    %8075 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8076 = stablehlo.multiply %8075, %arg537 : tensor<768x3072xf32>
    %8077 = stablehlo.add %8074, %8076 : tensor<768x3072xf32>
    %8078 = stablehlo.multiply %5921, %5921 : tensor<768xf32>
    %8079 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8080 = stablehlo.multiply %8079, %8078 : tensor<768xf32>
    %8081 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8082 = stablehlo.multiply %8081, %arg538 : tensor<768xf32>
    %8083 = stablehlo.add %8080, %8082 : tensor<768xf32>
    %8084 = stablehlo.multiply %5926, %5926 : tensor<768x768xf32>
    %8085 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8086 = stablehlo.multiply %8085, %8084 : tensor<768x768xf32>
    %8087 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8088 = stablehlo.multiply %8087, %arg539 : tensor<768x768xf32>
    %8089 = stablehlo.add %8086, %8088 : tensor<768x768xf32>
    %8090 = stablehlo.multiply %5931, %5931 : tensor<768xf32>
    %8091 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8092 = stablehlo.multiply %8091, %8090 : tensor<768xf32>
    %8093 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8094 = stablehlo.multiply %8093, %arg540 : tensor<768xf32>
    %8095 = stablehlo.add %8092, %8094 : tensor<768xf32>
    %8096 = stablehlo.multiply %5936, %5936 : tensor<768x768xf32>
    %8097 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8098 = stablehlo.multiply %8097, %8096 : tensor<768x768xf32>
    %8099 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8100 = stablehlo.multiply %8099, %arg541 : tensor<768x768xf32>
    %8101 = stablehlo.add %8098, %8100 : tensor<768x768xf32>
    %8102 = stablehlo.multiply %5941, %5941 : tensor<768xf32>
    %8103 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8104 = stablehlo.multiply %8103, %8102 : tensor<768xf32>
    %8105 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8106 = stablehlo.multiply %8105, %arg542 : tensor<768xf32>
    %8107 = stablehlo.add %8104, %8106 : tensor<768xf32>
    %8108 = stablehlo.multiply %5946, %5946 : tensor<768x768xf32>
    %8109 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8110 = stablehlo.multiply %8109, %8108 : tensor<768x768xf32>
    %8111 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8112 = stablehlo.multiply %8111, %arg543 : tensor<768x768xf32>
    %8113 = stablehlo.add %8110, %8112 : tensor<768x768xf32>
    %8114 = stablehlo.multiply %5951, %5951 : tensor<768xf32>
    %8115 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8116 = stablehlo.multiply %8115, %8114 : tensor<768xf32>
    %8117 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8118 = stablehlo.multiply %8117, %arg544 : tensor<768xf32>
    %8119 = stablehlo.add %8116, %8118 : tensor<768xf32>
    %8120 = stablehlo.multiply %5956, %5956 : tensor<768x768xf32>
    %8121 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8122 = stablehlo.multiply %8121, %8120 : tensor<768x768xf32>
    %8123 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8124 = stablehlo.multiply %8123, %arg545 : tensor<768x768xf32>
    %8125 = stablehlo.add %8122, %8124 : tensor<768x768xf32>
    %8126 = stablehlo.multiply %5961, %5961 : tensor<768xf32>
    %8127 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8128 = stablehlo.multiply %8127, %8126 : tensor<768xf32>
    %8129 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8130 = stablehlo.multiply %8129, %arg546 : tensor<768xf32>
    %8131 = stablehlo.add %8128, %8130 : tensor<768xf32>
    %8132 = stablehlo.multiply %5966, %5966 : tensor<768xf32>
    %8133 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8134 = stablehlo.multiply %8133, %8132 : tensor<768xf32>
    %8135 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8136 = stablehlo.multiply %8135, %arg547 : tensor<768xf32>
    %8137 = stablehlo.add %8134, %8136 : tensor<768xf32>
    %8138 = stablehlo.multiply %5971, %5971 : tensor<768xf32>
    %8139 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8140 = stablehlo.multiply %8139, %8138 : tensor<768xf32>
    %8141 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8142 = stablehlo.multiply %8141, %arg548 : tensor<768xf32>
    %8143 = stablehlo.add %8140, %8142 : tensor<768xf32>
    %8144 = stablehlo.multiply %5976, %5976 : tensor<3072x768xf32>
    %8145 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8146 = stablehlo.multiply %8145, %8144 : tensor<3072x768xf32>
    %8147 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8148 = stablehlo.multiply %8147, %arg549 : tensor<3072x768xf32>
    %8149 = stablehlo.add %8146, %8148 : tensor<3072x768xf32>
    %8150 = stablehlo.multiply %5981, %5981 : tensor<768xf32>
    %8151 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8152 = stablehlo.multiply %8151, %8150 : tensor<768xf32>
    %8153 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8154 = stablehlo.multiply %8153, %arg550 : tensor<768xf32>
    %8155 = stablehlo.add %8152, %8154 : tensor<768xf32>
    %8156 = stablehlo.multiply %5986, %5986 : tensor<768xf32>
    %8157 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8158 = stablehlo.multiply %8157, %8156 : tensor<768xf32>
    %8159 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8160 = stablehlo.multiply %8159, %arg551 : tensor<768xf32>
    %8161 = stablehlo.add %8158, %8160 : tensor<768xf32>
    %8162 = stablehlo.multiply %5991, %5991 : tensor<3072xf32>
    %8163 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8164 = stablehlo.multiply %8163, %8162 : tensor<3072xf32>
    %8165 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8166 = stablehlo.multiply %8165, %arg552 : tensor<3072xf32>
    %8167 = stablehlo.add %8164, %8166 : tensor<3072xf32>
    %8168 = stablehlo.multiply %5996, %5996 : tensor<768x3072xf32>
    %8169 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8170 = stablehlo.multiply %8169, %8168 : tensor<768x3072xf32>
    %8171 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8172 = stablehlo.multiply %8171, %arg553 : tensor<768x3072xf32>
    %8173 = stablehlo.add %8170, %8172 : tensor<768x3072xf32>
    %8174 = stablehlo.multiply %6001, %6001 : tensor<768xf32>
    %8175 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8176 = stablehlo.multiply %8175, %8174 : tensor<768xf32>
    %8177 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8178 = stablehlo.multiply %8177, %arg554 : tensor<768xf32>
    %8179 = stablehlo.add %8176, %8178 : tensor<768xf32>
    %8180 = stablehlo.multiply %6006, %6006 : tensor<768x768xf32>
    %8181 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8182 = stablehlo.multiply %8181, %8180 : tensor<768x768xf32>
    %8183 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8184 = stablehlo.multiply %8183, %arg555 : tensor<768x768xf32>
    %8185 = stablehlo.add %8182, %8184 : tensor<768x768xf32>
    %8186 = stablehlo.multiply %6011, %6011 : tensor<768xf32>
    %8187 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8188 = stablehlo.multiply %8187, %8186 : tensor<768xf32>
    %8189 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8190 = stablehlo.multiply %8189, %arg556 : tensor<768xf32>
    %8191 = stablehlo.add %8188, %8190 : tensor<768xf32>
    %8192 = stablehlo.multiply %6016, %6016 : tensor<768x768xf32>
    %8193 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8194 = stablehlo.multiply %8193, %8192 : tensor<768x768xf32>
    %8195 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8196 = stablehlo.multiply %8195, %arg557 : tensor<768x768xf32>
    %8197 = stablehlo.add %8194, %8196 : tensor<768x768xf32>
    %8198 = stablehlo.multiply %6021, %6021 : tensor<768xf32>
    %8199 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8200 = stablehlo.multiply %8199, %8198 : tensor<768xf32>
    %8201 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8202 = stablehlo.multiply %8201, %arg558 : tensor<768xf32>
    %8203 = stablehlo.add %8200, %8202 : tensor<768xf32>
    %8204 = stablehlo.multiply %6026, %6026 : tensor<768x768xf32>
    %8205 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8206 = stablehlo.multiply %8205, %8204 : tensor<768x768xf32>
    %8207 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8208 = stablehlo.multiply %8207, %arg559 : tensor<768x768xf32>
    %8209 = stablehlo.add %8206, %8208 : tensor<768x768xf32>
    %8210 = stablehlo.multiply %6031, %6031 : tensor<768xf32>
    %8211 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8212 = stablehlo.multiply %8211, %8210 : tensor<768xf32>
    %8213 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8214 = stablehlo.multiply %8213, %arg560 : tensor<768xf32>
    %8215 = stablehlo.add %8212, %8214 : tensor<768xf32>
    %8216 = stablehlo.multiply %6036, %6036 : tensor<768x768xf32>
    %8217 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8218 = stablehlo.multiply %8217, %8216 : tensor<768x768xf32>
    %8219 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8220 = stablehlo.multiply %8219, %arg561 : tensor<768x768xf32>
    %8221 = stablehlo.add %8218, %8220 : tensor<768x768xf32>
    %8222 = stablehlo.multiply %6041, %6041 : tensor<768xf32>
    %8223 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8224 = stablehlo.multiply %8223, %8222 : tensor<768xf32>
    %8225 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8226 = stablehlo.multiply %8225, %arg562 : tensor<768xf32>
    %8227 = stablehlo.add %8224, %8226 : tensor<768xf32>
    %8228 = stablehlo.multiply %6046, %6046 : tensor<768xf32>
    %8229 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8230 = stablehlo.multiply %8229, %8228 : tensor<768xf32>
    %8231 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8232 = stablehlo.multiply %8231, %arg563 : tensor<768xf32>
    %8233 = stablehlo.add %8230, %8232 : tensor<768xf32>
    %8234 = stablehlo.multiply %6051, %6051 : tensor<768xf32>
    %8235 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8236 = stablehlo.multiply %8235, %8234 : tensor<768xf32>
    %8237 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8238 = stablehlo.multiply %8237, %arg564 : tensor<768xf32>
    %8239 = stablehlo.add %8236, %8238 : tensor<768xf32>
    %8240 = stablehlo.multiply %6056, %6056 : tensor<3072x768xf32>
    %8241 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8242 = stablehlo.multiply %8241, %8240 : tensor<3072x768xf32>
    %8243 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8244 = stablehlo.multiply %8243, %arg565 : tensor<3072x768xf32>
    %8245 = stablehlo.add %8242, %8244 : tensor<3072x768xf32>
    %8246 = stablehlo.multiply %6061, %6061 : tensor<768xf32>
    %8247 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8248 = stablehlo.multiply %8247, %8246 : tensor<768xf32>
    %8249 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8250 = stablehlo.multiply %8249, %arg566 : tensor<768xf32>
    %8251 = stablehlo.add %8248, %8250 : tensor<768xf32>
    %8252 = stablehlo.multiply %6066, %6066 : tensor<768xf32>
    %8253 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8254 = stablehlo.multiply %8253, %8252 : tensor<768xf32>
    %8255 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8256 = stablehlo.multiply %8255, %arg567 : tensor<768xf32>
    %8257 = stablehlo.add %8254, %8256 : tensor<768xf32>
    %8258 = stablehlo.multiply %6071, %6071 : tensor<3072xf32>
    %8259 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8260 = stablehlo.multiply %8259, %8258 : tensor<3072xf32>
    %8261 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8262 = stablehlo.multiply %8261, %arg568 : tensor<3072xf32>
    %8263 = stablehlo.add %8260, %8262 : tensor<3072xf32>
    %8264 = stablehlo.multiply %6076, %6076 : tensor<768x3072xf32>
    %8265 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8266 = stablehlo.multiply %8265, %8264 : tensor<768x3072xf32>
    %8267 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8268 = stablehlo.multiply %8267, %arg569 : tensor<768x3072xf32>
    %8269 = stablehlo.add %8266, %8268 : tensor<768x3072xf32>
    %8270 = stablehlo.multiply %6081, %6081 : tensor<768xf32>
    %8271 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8272 = stablehlo.multiply %8271, %8270 : tensor<768xf32>
    %8273 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8274 = stablehlo.multiply %8273, %arg570 : tensor<768xf32>
    %8275 = stablehlo.add %8272, %8274 : tensor<768xf32>
    %8276 = stablehlo.multiply %6086, %6086 : tensor<768x768xf32>
    %8277 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8278 = stablehlo.multiply %8277, %8276 : tensor<768x768xf32>
    %8279 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8280 = stablehlo.multiply %8279, %arg571 : tensor<768x768xf32>
    %8281 = stablehlo.add %8278, %8280 : tensor<768x768xf32>
    %8282 = stablehlo.multiply %6091, %6091 : tensor<768xf32>
    %8283 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8284 = stablehlo.multiply %8283, %8282 : tensor<768xf32>
    %8285 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8286 = stablehlo.multiply %8285, %arg572 : tensor<768xf32>
    %8287 = stablehlo.add %8284, %8286 : tensor<768xf32>
    %8288 = stablehlo.multiply %6096, %6096 : tensor<768x768xf32>
    %8289 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8290 = stablehlo.multiply %8289, %8288 : tensor<768x768xf32>
    %8291 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8292 = stablehlo.multiply %8291, %arg573 : tensor<768x768xf32>
    %8293 = stablehlo.add %8290, %8292 : tensor<768x768xf32>
    %8294 = stablehlo.multiply %6101, %6101 : tensor<768xf32>
    %8295 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8296 = stablehlo.multiply %8295, %8294 : tensor<768xf32>
    %8297 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8298 = stablehlo.multiply %8297, %arg574 : tensor<768xf32>
    %8299 = stablehlo.add %8296, %8298 : tensor<768xf32>
    %8300 = stablehlo.multiply %6106, %6106 : tensor<768x768xf32>
    %8301 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8302 = stablehlo.multiply %8301, %8300 : tensor<768x768xf32>
    %8303 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8304 = stablehlo.multiply %8303, %arg575 : tensor<768x768xf32>
    %8305 = stablehlo.add %8302, %8304 : tensor<768x768xf32>
    %8306 = stablehlo.multiply %6111, %6111 : tensor<768xf32>
    %8307 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8308 = stablehlo.multiply %8307, %8306 : tensor<768xf32>
    %8309 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8310 = stablehlo.multiply %8309, %arg576 : tensor<768xf32>
    %8311 = stablehlo.add %8308, %8310 : tensor<768xf32>
    %8312 = stablehlo.multiply %6116, %6116 : tensor<768x768xf32>
    %8313 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8314 = stablehlo.multiply %8313, %8312 : tensor<768x768xf32>
    %8315 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8316 = stablehlo.multiply %8315, %arg577 : tensor<768x768xf32>
    %8317 = stablehlo.add %8314, %8316 : tensor<768x768xf32>
    %8318 = stablehlo.multiply %6121, %6121 : tensor<768xf32>
    %8319 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8320 = stablehlo.multiply %8319, %8318 : tensor<768xf32>
    %8321 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8322 = stablehlo.multiply %8321, %arg578 : tensor<768xf32>
    %8323 = stablehlo.add %8320, %8322 : tensor<768xf32>
    %8324 = stablehlo.multiply %6126, %6126 : tensor<768xf32>
    %8325 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8326 = stablehlo.multiply %8325, %8324 : tensor<768xf32>
    %8327 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8328 = stablehlo.multiply %8327, %arg579 : tensor<768xf32>
    %8329 = stablehlo.add %8326, %8328 : tensor<768xf32>
    %8330 = stablehlo.multiply %6131, %6131 : tensor<768xf32>
    %8331 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8332 = stablehlo.multiply %8331, %8330 : tensor<768xf32>
    %8333 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8334 = stablehlo.multiply %8333, %arg580 : tensor<768xf32>
    %8335 = stablehlo.add %8332, %8334 : tensor<768xf32>
    %8336 = stablehlo.multiply %6136, %6136 : tensor<3072x768xf32>
    %8337 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8338 = stablehlo.multiply %8337, %8336 : tensor<3072x768xf32>
    %8339 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8340 = stablehlo.multiply %8339, %arg581 : tensor<3072x768xf32>
    %8341 = stablehlo.add %8338, %8340 : tensor<3072x768xf32>
    %8342 = stablehlo.multiply %6141, %6141 : tensor<768xf32>
    %8343 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8344 = stablehlo.multiply %8343, %8342 : tensor<768xf32>
    %8345 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8346 = stablehlo.multiply %8345, %arg582 : tensor<768xf32>
    %8347 = stablehlo.add %8344, %8346 : tensor<768xf32>
    %8348 = stablehlo.multiply %6146, %6146 : tensor<768xf32>
    %8349 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8350 = stablehlo.multiply %8349, %8348 : tensor<768xf32>
    %8351 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8352 = stablehlo.multiply %8351, %arg583 : tensor<768xf32>
    %8353 = stablehlo.add %8350, %8352 : tensor<768xf32>
    %8354 = stablehlo.multiply %6151, %6151 : tensor<3072xf32>
    %8355 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8356 = stablehlo.multiply %8355, %8354 : tensor<3072xf32>
    %8357 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8358 = stablehlo.multiply %8357, %arg584 : tensor<3072xf32>
    %8359 = stablehlo.add %8356, %8358 : tensor<3072xf32>
    %8360 = stablehlo.multiply %6156, %6156 : tensor<768x3072xf32>
    %8361 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8362 = stablehlo.multiply %8361, %8360 : tensor<768x3072xf32>
    %8363 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8364 = stablehlo.multiply %8363, %arg585 : tensor<768x3072xf32>
    %8365 = stablehlo.add %8362, %8364 : tensor<768x3072xf32>
    %8366 = stablehlo.multiply %6161, %6161 : tensor<768xf32>
    %8367 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8368 = stablehlo.multiply %8367, %8366 : tensor<768xf32>
    %8369 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8370 = stablehlo.multiply %8369, %arg586 : tensor<768xf32>
    %8371 = stablehlo.add %8368, %8370 : tensor<768xf32>
    %8372 = stablehlo.multiply %6166, %6166 : tensor<768x768xf32>
    %8373 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8374 = stablehlo.multiply %8373, %8372 : tensor<768x768xf32>
    %8375 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8376 = stablehlo.multiply %8375, %arg587 : tensor<768x768xf32>
    %8377 = stablehlo.add %8374, %8376 : tensor<768x768xf32>
    %8378 = stablehlo.multiply %6171, %6171 : tensor<768xf32>
    %8379 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8380 = stablehlo.multiply %8379, %8378 : tensor<768xf32>
    %8381 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8382 = stablehlo.multiply %8381, %arg588 : tensor<768xf32>
    %8383 = stablehlo.add %8380, %8382 : tensor<768xf32>
    %8384 = stablehlo.multiply %6176, %6176 : tensor<768x768xf32>
    %8385 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8386 = stablehlo.multiply %8385, %8384 : tensor<768x768xf32>
    %8387 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8388 = stablehlo.multiply %8387, %arg589 : tensor<768x768xf32>
    %8389 = stablehlo.add %8386, %8388 : tensor<768x768xf32>
    %8390 = stablehlo.multiply %6181, %6181 : tensor<768xf32>
    %8391 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8392 = stablehlo.multiply %8391, %8390 : tensor<768xf32>
    %8393 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8394 = stablehlo.multiply %8393, %arg590 : tensor<768xf32>
    %8395 = stablehlo.add %8392, %8394 : tensor<768xf32>
    %8396 = stablehlo.multiply %6186, %6186 : tensor<768x768xf32>
    %8397 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8398 = stablehlo.multiply %8397, %8396 : tensor<768x768xf32>
    %8399 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8400 = stablehlo.multiply %8399, %arg591 : tensor<768x768xf32>
    %8401 = stablehlo.add %8398, %8400 : tensor<768x768xf32>
    %8402 = stablehlo.multiply %6191, %6191 : tensor<768xf32>
    %8403 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8404 = stablehlo.multiply %8403, %8402 : tensor<768xf32>
    %8405 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8406 = stablehlo.multiply %8405, %arg592 : tensor<768xf32>
    %8407 = stablehlo.add %8404, %8406 : tensor<768xf32>
    %8408 = stablehlo.multiply %6196, %6196 : tensor<768x768xf32>
    %8409 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8410 = stablehlo.multiply %8409, %8408 : tensor<768x768xf32>
    %8411 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8412 = stablehlo.multiply %8411, %arg593 : tensor<768x768xf32>
    %8413 = stablehlo.add %8410, %8412 : tensor<768x768xf32>
    %8414 = stablehlo.multiply %6201, %6201 : tensor<768xf32>
    %8415 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8416 = stablehlo.multiply %8415, %8414 : tensor<768xf32>
    %8417 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8418 = stablehlo.multiply %8417, %arg594 : tensor<768xf32>
    %8419 = stablehlo.add %8416, %8418 : tensor<768xf32>
    %8420 = stablehlo.multiply %6206, %6206 : tensor<768xf32>
    %8421 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8422 = stablehlo.multiply %8421, %8420 : tensor<768xf32>
    %8423 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8424 = stablehlo.multiply %8423, %arg595 : tensor<768xf32>
    %8425 = stablehlo.add %8422, %8424 : tensor<768xf32>
    %8426 = stablehlo.multiply %6211, %6211 : tensor<768xf32>
    %8427 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8428 = stablehlo.multiply %8427, %8426 : tensor<768xf32>
    %8429 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8430 = stablehlo.multiply %8429, %arg596 : tensor<768xf32>
    %8431 = stablehlo.add %8428, %8430 : tensor<768xf32>
    %8432 = stablehlo.multiply %6216, %6216 : tensor<3072x768xf32>
    %8433 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8434 = stablehlo.multiply %8433, %8432 : tensor<3072x768xf32>
    %8435 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8436 = stablehlo.multiply %8435, %arg597 : tensor<3072x768xf32>
    %8437 = stablehlo.add %8434, %8436 : tensor<3072x768xf32>
    %8438 = stablehlo.multiply %6221, %6221 : tensor<768xf32>
    %8439 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8440 = stablehlo.multiply %8439, %8438 : tensor<768xf32>
    %8441 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8442 = stablehlo.multiply %8441, %arg598 : tensor<768xf32>
    %8443 = stablehlo.add %8440, %8442 : tensor<768xf32>
    %8444 = stablehlo.multiply %6226, %6226 : tensor<768xf32>
    %8445 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8446 = stablehlo.multiply %8445, %8444 : tensor<768xf32>
    %8447 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8448 = stablehlo.multiply %8447, %arg599 : tensor<768xf32>
    %8449 = stablehlo.add %8446, %8448 : tensor<768xf32>
    %8450 = stablehlo.multiply %6231, %6231 : tensor<3072xf32>
    %8451 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8452 = stablehlo.multiply %8451, %8450 : tensor<3072xf32>
    %8453 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8454 = stablehlo.multiply %8453, %arg600 : tensor<3072xf32>
    %8455 = stablehlo.add %8452, %8454 : tensor<3072xf32>
    %8456 = stablehlo.multiply %6236, %6236 : tensor<768x3072xf32>
    %8457 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8458 = stablehlo.multiply %8457, %8456 : tensor<768x3072xf32>
    %8459 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8460 = stablehlo.multiply %8459, %arg601 : tensor<768x3072xf32>
    %8461 = stablehlo.add %8458, %8460 : tensor<768x3072xf32>
    %8462 = stablehlo.multiply %6241, %6241 : tensor<768xf32>
    %8463 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8464 = stablehlo.multiply %8463, %8462 : tensor<768xf32>
    %8465 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8466 = stablehlo.multiply %8465, %arg602 : tensor<768xf32>
    %8467 = stablehlo.add %8464, %8466 : tensor<768xf32>
    %8468 = stablehlo.multiply %6246, %6246 : tensor<768xf32>
    %8469 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8470 = stablehlo.multiply %8469, %8468 : tensor<768xf32>
    %8471 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8472 = stablehlo.multiply %8471, %arg603 : tensor<768xf32>
    %8473 = stablehlo.add %8470, %8472 : tensor<768xf32>
    %8474 = stablehlo.multiply %6251, %6251 : tensor<30522xf32>
    %8475 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8476 = stablehlo.multiply %8475, %8474 : tensor<30522xf32>
    %8477 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8478 = stablehlo.multiply %8477, %arg604 : tensor<30522xf32>
    %8479 = stablehlo.add %8476, %8478 : tensor<30522xf32>
    %8480 = stablehlo.multiply %6256, %6256 : tensor<768xf32>
    %8481 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8482 = stablehlo.multiply %8481, %8480 : tensor<768xf32>
    %8483 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8484 = stablehlo.multiply %8483, %arg605 : tensor<768xf32>
    %8485 = stablehlo.add %8482, %8484 : tensor<768xf32>
    %8486 = stablehlo.multiply %6261, %6261 : tensor<768x768xf32>
    %8487 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8488 = stablehlo.multiply %8487, %8486 : tensor<768x768xf32>
    %8489 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8490 = stablehlo.multiply %8489, %arg606 : tensor<768x768xf32>
    %8491 = stablehlo.add %8488, %8490 : tensor<768x768xf32>
    %8492 = stablehlo.multiply %6266, %6266 : tensor<30522x768xf32>
    %8493 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8494 = stablehlo.multiply %8493, %8492 : tensor<30522x768xf32>
    %8495 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8496 = stablehlo.multiply %8495, %arg607 : tensor<30522x768xf32>
    %8497 = stablehlo.add %8494, %8496 : tensor<30522x768xf32>
    %8498 = stablehlo.multiply %6271, %6271 : tensor<768xf32>
    %8499 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8500 = stablehlo.multiply %8499, %8498 : tensor<768xf32>
    %8501 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8502 = stablehlo.multiply %8501, %arg608 : tensor<768xf32>
    %8503 = stablehlo.add %8500, %8502 : tensor<768xf32>
    %8504 = stablehlo.multiply %6276, %6276 : tensor<768xf32>
    %8505 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8506 = stablehlo.multiply %8505, %8504 : tensor<768xf32>
    %8507 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8508 = stablehlo.multiply %8507, %arg609 : tensor<768xf32>
    %8509 = stablehlo.add %8506, %8508 : tensor<768xf32>
    %c_756 = stablehlo.constant dense<2147483647> : tensor<i32>
    %8510 = stablehlo.compare  LT, %arg203, %c_756,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %c_757 = stablehlo.constant dense<1> : tensor<i32>
    %8511 = stablehlo.add %arg203, %c_757 : tensor<i32>
    %8512 = call @_where_348(%8510, %8511, %c_756) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_758 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %8513 = stablehlo.convert %8512 : (tensor<i32>) -> tensor<f32>
    %8514 = stablehlo.power %cst_758, %8513 : tensor<f32>
    %8515 = stablehlo.subtract %cst_7, %8514 : tensor<f32>
    %8516 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8517 = stablehlo.divide %6281, %8516 : tensor<512x768xf32>
    %8518 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8519 = stablehlo.divide %6286, %8518 : tensor<2x768xf32>
    %8520 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8521 = stablehlo.divide %6291, %8520 : tensor<30522x768xf32>
    %8522 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8523 = stablehlo.divide %6296, %8522 : tensor<768xf32>
    %8524 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8525 = stablehlo.divide %6301, %8524 : tensor<768x768xf32>
    %8526 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8527 = stablehlo.divide %6306, %8526 : tensor<768xf32>
    %8528 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8529 = stablehlo.divide %6311, %8528 : tensor<768x768xf32>
    %8530 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8531 = stablehlo.divide %6316, %8530 : tensor<768xf32>
    %8532 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8533 = stablehlo.divide %6321, %8532 : tensor<768x768xf32>
    %8534 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8535 = stablehlo.divide %6326, %8534 : tensor<768xf32>
    %8536 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8537 = stablehlo.divide %6331, %8536 : tensor<768x768xf32>
    %8538 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8539 = stablehlo.divide %6336, %8538 : tensor<768xf32>
    %8540 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8541 = stablehlo.divide %6341, %8540 : tensor<768xf32>
    %8542 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8543 = stablehlo.divide %6346, %8542 : tensor<768xf32>
    %8544 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8545 = stablehlo.divide %6351, %8544 : tensor<3072x768xf32>
    %8546 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8547 = stablehlo.divide %6356, %8546 : tensor<768xf32>
    %8548 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8549 = stablehlo.divide %6361, %8548 : tensor<768xf32>
    %8550 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8551 = stablehlo.divide %6366, %8550 : tensor<3072xf32>
    %8552 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8553 = stablehlo.divide %6371, %8552 : tensor<768x3072xf32>
    %8554 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8555 = stablehlo.divide %6376, %8554 : tensor<768xf32>
    %8556 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8557 = stablehlo.divide %6381, %8556 : tensor<768x768xf32>
    %8558 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8559 = stablehlo.divide %6386, %8558 : tensor<768xf32>
    %8560 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8561 = stablehlo.divide %6391, %8560 : tensor<768x768xf32>
    %8562 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8563 = stablehlo.divide %6396, %8562 : tensor<768xf32>
    %8564 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8565 = stablehlo.divide %6401, %8564 : tensor<768x768xf32>
    %8566 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8567 = stablehlo.divide %6406, %8566 : tensor<768xf32>
    %8568 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8569 = stablehlo.divide %6411, %8568 : tensor<768x768xf32>
    %8570 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8571 = stablehlo.divide %6416, %8570 : tensor<768xf32>
    %8572 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8573 = stablehlo.divide %6421, %8572 : tensor<768xf32>
    %8574 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8575 = stablehlo.divide %6426, %8574 : tensor<768xf32>
    %8576 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8577 = stablehlo.divide %6431, %8576 : tensor<3072x768xf32>
    %8578 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8579 = stablehlo.divide %6436, %8578 : tensor<768xf32>
    %8580 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8581 = stablehlo.divide %6441, %8580 : tensor<768xf32>
    %8582 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8583 = stablehlo.divide %6446, %8582 : tensor<3072xf32>
    %8584 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8585 = stablehlo.divide %6451, %8584 : tensor<768x3072xf32>
    %8586 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8587 = stablehlo.divide %6456, %8586 : tensor<768xf32>
    %8588 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8589 = stablehlo.divide %6461, %8588 : tensor<768x768xf32>
    %8590 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8591 = stablehlo.divide %6466, %8590 : tensor<768xf32>
    %8592 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8593 = stablehlo.divide %6471, %8592 : tensor<768x768xf32>
    %8594 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8595 = stablehlo.divide %6476, %8594 : tensor<768xf32>
    %8596 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8597 = stablehlo.divide %6481, %8596 : tensor<768x768xf32>
    %8598 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8599 = stablehlo.divide %6486, %8598 : tensor<768xf32>
    %8600 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8601 = stablehlo.divide %6491, %8600 : tensor<768x768xf32>
    %8602 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8603 = stablehlo.divide %6496, %8602 : tensor<768xf32>
    %8604 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8605 = stablehlo.divide %6501, %8604 : tensor<768xf32>
    %8606 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8607 = stablehlo.divide %6506, %8606 : tensor<768xf32>
    %8608 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8609 = stablehlo.divide %6511, %8608 : tensor<3072x768xf32>
    %8610 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8611 = stablehlo.divide %6516, %8610 : tensor<768xf32>
    %8612 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8613 = stablehlo.divide %6521, %8612 : tensor<768xf32>
    %8614 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8615 = stablehlo.divide %6526, %8614 : tensor<3072xf32>
    %8616 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8617 = stablehlo.divide %6531, %8616 : tensor<768x3072xf32>
    %8618 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8619 = stablehlo.divide %6536, %8618 : tensor<768xf32>
    %8620 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8621 = stablehlo.divide %6541, %8620 : tensor<768x768xf32>
    %8622 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8623 = stablehlo.divide %6546, %8622 : tensor<768xf32>
    %8624 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8625 = stablehlo.divide %6551, %8624 : tensor<768x768xf32>
    %8626 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8627 = stablehlo.divide %6556, %8626 : tensor<768xf32>
    %8628 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8629 = stablehlo.divide %6561, %8628 : tensor<768x768xf32>
    %8630 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8631 = stablehlo.divide %6566, %8630 : tensor<768xf32>
    %8632 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8633 = stablehlo.divide %6571, %8632 : tensor<768x768xf32>
    %8634 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8635 = stablehlo.divide %6576, %8634 : tensor<768xf32>
    %8636 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8637 = stablehlo.divide %6581, %8636 : tensor<768xf32>
    %8638 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8639 = stablehlo.divide %6586, %8638 : tensor<768xf32>
    %8640 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8641 = stablehlo.divide %6591, %8640 : tensor<3072x768xf32>
    %8642 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8643 = stablehlo.divide %6596, %8642 : tensor<768xf32>
    %8644 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8645 = stablehlo.divide %6601, %8644 : tensor<768xf32>
    %8646 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8647 = stablehlo.divide %6606, %8646 : tensor<3072xf32>
    %8648 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8649 = stablehlo.divide %6611, %8648 : tensor<768x3072xf32>
    %8650 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8651 = stablehlo.divide %6616, %8650 : tensor<768xf32>
    %8652 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8653 = stablehlo.divide %6621, %8652 : tensor<768x768xf32>
    %8654 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8655 = stablehlo.divide %6626, %8654 : tensor<768xf32>
    %8656 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8657 = stablehlo.divide %6631, %8656 : tensor<768x768xf32>
    %8658 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8659 = stablehlo.divide %6636, %8658 : tensor<768xf32>
    %8660 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8661 = stablehlo.divide %6641, %8660 : tensor<768x768xf32>
    %8662 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8663 = stablehlo.divide %6646, %8662 : tensor<768xf32>
    %8664 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8665 = stablehlo.divide %6651, %8664 : tensor<768x768xf32>
    %8666 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8667 = stablehlo.divide %6656, %8666 : tensor<768xf32>
    %8668 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8669 = stablehlo.divide %6661, %8668 : tensor<768xf32>
    %8670 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8671 = stablehlo.divide %6666, %8670 : tensor<768xf32>
    %8672 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8673 = stablehlo.divide %6671, %8672 : tensor<3072x768xf32>
    %8674 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8675 = stablehlo.divide %6676, %8674 : tensor<768xf32>
    %8676 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8677 = stablehlo.divide %6681, %8676 : tensor<768xf32>
    %8678 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8679 = stablehlo.divide %6686, %8678 : tensor<3072xf32>
    %8680 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8681 = stablehlo.divide %6691, %8680 : tensor<768x3072xf32>
    %8682 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8683 = stablehlo.divide %6696, %8682 : tensor<768xf32>
    %8684 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8685 = stablehlo.divide %6701, %8684 : tensor<768x768xf32>
    %8686 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8687 = stablehlo.divide %6706, %8686 : tensor<768xf32>
    %8688 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8689 = stablehlo.divide %6711, %8688 : tensor<768x768xf32>
    %8690 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8691 = stablehlo.divide %6716, %8690 : tensor<768xf32>
    %8692 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8693 = stablehlo.divide %6721, %8692 : tensor<768x768xf32>
    %8694 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8695 = stablehlo.divide %6726, %8694 : tensor<768xf32>
    %8696 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8697 = stablehlo.divide %6731, %8696 : tensor<768x768xf32>
    %8698 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8699 = stablehlo.divide %6736, %8698 : tensor<768xf32>
    %8700 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8701 = stablehlo.divide %6741, %8700 : tensor<768xf32>
    %8702 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8703 = stablehlo.divide %6746, %8702 : tensor<768xf32>
    %8704 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8705 = stablehlo.divide %6751, %8704 : tensor<3072x768xf32>
    %8706 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8707 = stablehlo.divide %6756, %8706 : tensor<768xf32>
    %8708 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8709 = stablehlo.divide %6761, %8708 : tensor<768xf32>
    %8710 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8711 = stablehlo.divide %6766, %8710 : tensor<3072xf32>
    %8712 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8713 = stablehlo.divide %6771, %8712 : tensor<768x3072xf32>
    %8714 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8715 = stablehlo.divide %6776, %8714 : tensor<768xf32>
    %8716 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8717 = stablehlo.divide %6781, %8716 : tensor<768x768xf32>
    %8718 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8719 = stablehlo.divide %6786, %8718 : tensor<768xf32>
    %8720 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8721 = stablehlo.divide %6791, %8720 : tensor<768x768xf32>
    %8722 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8723 = stablehlo.divide %6796, %8722 : tensor<768xf32>
    %8724 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8725 = stablehlo.divide %6801, %8724 : tensor<768x768xf32>
    %8726 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8727 = stablehlo.divide %6806, %8726 : tensor<768xf32>
    %8728 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8729 = stablehlo.divide %6811, %8728 : tensor<768x768xf32>
    %8730 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8731 = stablehlo.divide %6816, %8730 : tensor<768xf32>
    %8732 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8733 = stablehlo.divide %6821, %8732 : tensor<768xf32>
    %8734 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8735 = stablehlo.divide %6826, %8734 : tensor<768xf32>
    %8736 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8737 = stablehlo.divide %6831, %8736 : tensor<3072x768xf32>
    %8738 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8739 = stablehlo.divide %6836, %8738 : tensor<768xf32>
    %8740 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8741 = stablehlo.divide %6841, %8740 : tensor<768xf32>
    %8742 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8743 = stablehlo.divide %6846, %8742 : tensor<3072xf32>
    %8744 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8745 = stablehlo.divide %6851, %8744 : tensor<768x3072xf32>
    %8746 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8747 = stablehlo.divide %6856, %8746 : tensor<768xf32>
    %8748 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8749 = stablehlo.divide %6861, %8748 : tensor<768x768xf32>
    %8750 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8751 = stablehlo.divide %6866, %8750 : tensor<768xf32>
    %8752 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8753 = stablehlo.divide %6871, %8752 : tensor<768x768xf32>
    %8754 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8755 = stablehlo.divide %6876, %8754 : tensor<768xf32>
    %8756 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8757 = stablehlo.divide %6881, %8756 : tensor<768x768xf32>
    %8758 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8759 = stablehlo.divide %6886, %8758 : tensor<768xf32>
    %8760 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8761 = stablehlo.divide %6891, %8760 : tensor<768x768xf32>
    %8762 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8763 = stablehlo.divide %6896, %8762 : tensor<768xf32>
    %8764 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8765 = stablehlo.divide %6901, %8764 : tensor<768xf32>
    %8766 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8767 = stablehlo.divide %6906, %8766 : tensor<768xf32>
    %8768 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8769 = stablehlo.divide %6911, %8768 : tensor<3072x768xf32>
    %8770 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8771 = stablehlo.divide %6916, %8770 : tensor<768xf32>
    %8772 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8773 = stablehlo.divide %6921, %8772 : tensor<768xf32>
    %8774 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8775 = stablehlo.divide %6926, %8774 : tensor<3072xf32>
    %8776 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8777 = stablehlo.divide %6931, %8776 : tensor<768x3072xf32>
    %8778 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8779 = stablehlo.divide %6936, %8778 : tensor<768xf32>
    %8780 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8781 = stablehlo.divide %6941, %8780 : tensor<768x768xf32>
    %8782 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8783 = stablehlo.divide %6946, %8782 : tensor<768xf32>
    %8784 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8785 = stablehlo.divide %6951, %8784 : tensor<768x768xf32>
    %8786 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8787 = stablehlo.divide %6956, %8786 : tensor<768xf32>
    %8788 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8789 = stablehlo.divide %6961, %8788 : tensor<768x768xf32>
    %8790 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8791 = stablehlo.divide %6966, %8790 : tensor<768xf32>
    %8792 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8793 = stablehlo.divide %6971, %8792 : tensor<768x768xf32>
    %8794 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8795 = stablehlo.divide %6976, %8794 : tensor<768xf32>
    %8796 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8797 = stablehlo.divide %6981, %8796 : tensor<768xf32>
    %8798 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8799 = stablehlo.divide %6986, %8798 : tensor<768xf32>
    %8800 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8801 = stablehlo.divide %6991, %8800 : tensor<3072x768xf32>
    %8802 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8803 = stablehlo.divide %6996, %8802 : tensor<768xf32>
    %8804 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8805 = stablehlo.divide %7001, %8804 : tensor<768xf32>
    %8806 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8807 = stablehlo.divide %7006, %8806 : tensor<3072xf32>
    %8808 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8809 = stablehlo.divide %7011, %8808 : tensor<768x3072xf32>
    %8810 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8811 = stablehlo.divide %7016, %8810 : tensor<768xf32>
    %8812 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8813 = stablehlo.divide %7021, %8812 : tensor<768x768xf32>
    %8814 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8815 = stablehlo.divide %7026, %8814 : tensor<768xf32>
    %8816 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8817 = stablehlo.divide %7031, %8816 : tensor<768x768xf32>
    %8818 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8819 = stablehlo.divide %7036, %8818 : tensor<768xf32>
    %8820 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8821 = stablehlo.divide %7041, %8820 : tensor<768x768xf32>
    %8822 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8823 = stablehlo.divide %7046, %8822 : tensor<768xf32>
    %8824 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8825 = stablehlo.divide %7051, %8824 : tensor<768x768xf32>
    %8826 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8827 = stablehlo.divide %7056, %8826 : tensor<768xf32>
    %8828 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8829 = stablehlo.divide %7061, %8828 : tensor<768xf32>
    %8830 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8831 = stablehlo.divide %7066, %8830 : tensor<768xf32>
    %8832 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8833 = stablehlo.divide %7071, %8832 : tensor<3072x768xf32>
    %8834 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8835 = stablehlo.divide %7076, %8834 : tensor<768xf32>
    %8836 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8837 = stablehlo.divide %7081, %8836 : tensor<768xf32>
    %8838 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8839 = stablehlo.divide %7086, %8838 : tensor<3072xf32>
    %8840 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8841 = stablehlo.divide %7091, %8840 : tensor<768x3072xf32>
    %8842 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8843 = stablehlo.divide %7096, %8842 : tensor<768xf32>
    %8844 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8845 = stablehlo.divide %7101, %8844 : tensor<768x768xf32>
    %8846 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8847 = stablehlo.divide %7106, %8846 : tensor<768xf32>
    %8848 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8849 = stablehlo.divide %7111, %8848 : tensor<768x768xf32>
    %8850 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8851 = stablehlo.divide %7116, %8850 : tensor<768xf32>
    %8852 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8853 = stablehlo.divide %7121, %8852 : tensor<768x768xf32>
    %8854 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8855 = stablehlo.divide %7126, %8854 : tensor<768xf32>
    %8856 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8857 = stablehlo.divide %7131, %8856 : tensor<768x768xf32>
    %8858 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8859 = stablehlo.divide %7136, %8858 : tensor<768xf32>
    %8860 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8861 = stablehlo.divide %7141, %8860 : tensor<768xf32>
    %8862 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8863 = stablehlo.divide %7146, %8862 : tensor<768xf32>
    %8864 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8865 = stablehlo.divide %7151, %8864 : tensor<3072x768xf32>
    %8866 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8867 = stablehlo.divide %7156, %8866 : tensor<768xf32>
    %8868 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8869 = stablehlo.divide %7161, %8868 : tensor<768xf32>
    %8870 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8871 = stablehlo.divide %7166, %8870 : tensor<3072xf32>
    %8872 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8873 = stablehlo.divide %7171, %8872 : tensor<768x3072xf32>
    %8874 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8875 = stablehlo.divide %7176, %8874 : tensor<768xf32>
    %8876 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8877 = stablehlo.divide %7181, %8876 : tensor<768x768xf32>
    %8878 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8879 = stablehlo.divide %7186, %8878 : tensor<768xf32>
    %8880 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8881 = stablehlo.divide %7191, %8880 : tensor<768x768xf32>
    %8882 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8883 = stablehlo.divide %7196, %8882 : tensor<768xf32>
    %8884 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8885 = stablehlo.divide %7201, %8884 : tensor<768x768xf32>
    %8886 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8887 = stablehlo.divide %7206, %8886 : tensor<768xf32>
    %8888 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8889 = stablehlo.divide %7211, %8888 : tensor<768x768xf32>
    %8890 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8891 = stablehlo.divide %7216, %8890 : tensor<768xf32>
    %8892 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8893 = stablehlo.divide %7221, %8892 : tensor<768xf32>
    %8894 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8895 = stablehlo.divide %7226, %8894 : tensor<768xf32>
    %8896 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8897 = stablehlo.divide %7231, %8896 : tensor<3072x768xf32>
    %8898 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8899 = stablehlo.divide %7236, %8898 : tensor<768xf32>
    %8900 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8901 = stablehlo.divide %7241, %8900 : tensor<768xf32>
    %8902 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8903 = stablehlo.divide %7246, %8902 : tensor<3072xf32>
    %8904 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8905 = stablehlo.divide %7251, %8904 : tensor<768x3072xf32>
    %8906 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8907 = stablehlo.divide %7256, %8906 : tensor<768xf32>
    %8908 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8909 = stablehlo.divide %7261, %8908 : tensor<768xf32>
    %8910 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8911 = stablehlo.divide %7266, %8910 : tensor<30522xf32>
    %8912 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8913 = stablehlo.divide %7271, %8912 : tensor<768xf32>
    %8914 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8915 = stablehlo.divide %7276, %8914 : tensor<768x768xf32>
    %8916 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8917 = stablehlo.divide %7281, %8916 : tensor<30522x768xf32>
    %8918 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8919 = stablehlo.divide %7286, %8918 : tensor<768xf32>
    %8920 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8921 = stablehlo.divide %7291, %8920 : tensor<768xf32>
    %cst_759 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %8922 = stablehlo.convert %8512 : (tensor<i32>) -> tensor<f32>
    %8923 = stablehlo.power %cst_759, %8922 : tensor<f32>
    %8924 = stablehlo.subtract %cst_7, %8923 : tensor<f32>
    %8925 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8926 = stablehlo.divide %7297, %8925 : tensor<512x768xf32>
    %8927 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8928 = stablehlo.divide %7303, %8927 : tensor<2x768xf32>
    %8929 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8930 = stablehlo.divide %7309, %8929 : tensor<30522x768xf32>
    %8931 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8932 = stablehlo.divide %7315, %8931 : tensor<768xf32>
    %8933 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8934 = stablehlo.divide %7321, %8933 : tensor<768x768xf32>
    %8935 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8936 = stablehlo.divide %7327, %8935 : tensor<768xf32>
    %8937 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8938 = stablehlo.divide %7333, %8937 : tensor<768x768xf32>
    %8939 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8940 = stablehlo.divide %7339, %8939 : tensor<768xf32>
    %8941 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8942 = stablehlo.divide %7345, %8941 : tensor<768x768xf32>
    %8943 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8944 = stablehlo.divide %7351, %8943 : tensor<768xf32>
    %8945 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8946 = stablehlo.divide %7357, %8945 : tensor<768x768xf32>
    %8947 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8948 = stablehlo.divide %7363, %8947 : tensor<768xf32>
    %8949 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8950 = stablehlo.divide %7369, %8949 : tensor<768xf32>
    %8951 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8952 = stablehlo.divide %7375, %8951 : tensor<768xf32>
    %8953 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8954 = stablehlo.divide %7381, %8953 : tensor<3072x768xf32>
    %8955 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8956 = stablehlo.divide %7387, %8955 : tensor<768xf32>
    %8957 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8958 = stablehlo.divide %7393, %8957 : tensor<768xf32>
    %8959 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8960 = stablehlo.divide %7399, %8959 : tensor<3072xf32>
    %8961 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8962 = stablehlo.divide %7405, %8961 : tensor<768x3072xf32>
    %8963 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8964 = stablehlo.divide %7411, %8963 : tensor<768xf32>
    %8965 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8966 = stablehlo.divide %7417, %8965 : tensor<768x768xf32>
    %8967 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8968 = stablehlo.divide %7423, %8967 : tensor<768xf32>
    %8969 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8970 = stablehlo.divide %7429, %8969 : tensor<768x768xf32>
    %8971 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8972 = stablehlo.divide %7435, %8971 : tensor<768xf32>
    %8973 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8974 = stablehlo.divide %7441, %8973 : tensor<768x768xf32>
    %8975 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8976 = stablehlo.divide %7447, %8975 : tensor<768xf32>
    %8977 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8978 = stablehlo.divide %7453, %8977 : tensor<768x768xf32>
    %8979 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8980 = stablehlo.divide %7459, %8979 : tensor<768xf32>
    %8981 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8982 = stablehlo.divide %7465, %8981 : tensor<768xf32>
    %8983 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8984 = stablehlo.divide %7471, %8983 : tensor<768xf32>
    %8985 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8986 = stablehlo.divide %7477, %8985 : tensor<3072x768xf32>
    %8987 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8988 = stablehlo.divide %7483, %8987 : tensor<768xf32>
    %8989 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8990 = stablehlo.divide %7489, %8989 : tensor<768xf32>
    %8991 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8992 = stablehlo.divide %7495, %8991 : tensor<3072xf32>
    %8993 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8994 = stablehlo.divide %7501, %8993 : tensor<768x3072xf32>
    %8995 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8996 = stablehlo.divide %7507, %8995 : tensor<768xf32>
    %8997 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8998 = stablehlo.divide %7513, %8997 : tensor<768x768xf32>
    %8999 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9000 = stablehlo.divide %7519, %8999 : tensor<768xf32>
    %9001 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9002 = stablehlo.divide %7525, %9001 : tensor<768x768xf32>
    %9003 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9004 = stablehlo.divide %7531, %9003 : tensor<768xf32>
    %9005 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9006 = stablehlo.divide %7537, %9005 : tensor<768x768xf32>
    %9007 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9008 = stablehlo.divide %7543, %9007 : tensor<768xf32>
    %9009 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9010 = stablehlo.divide %7549, %9009 : tensor<768x768xf32>
    %9011 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9012 = stablehlo.divide %7555, %9011 : tensor<768xf32>
    %9013 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9014 = stablehlo.divide %7561, %9013 : tensor<768xf32>
    %9015 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9016 = stablehlo.divide %7567, %9015 : tensor<768xf32>
    %9017 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9018 = stablehlo.divide %7573, %9017 : tensor<3072x768xf32>
    %9019 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9020 = stablehlo.divide %7579, %9019 : tensor<768xf32>
    %9021 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9022 = stablehlo.divide %7585, %9021 : tensor<768xf32>
    %9023 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9024 = stablehlo.divide %7591, %9023 : tensor<3072xf32>
    %9025 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9026 = stablehlo.divide %7597, %9025 : tensor<768x3072xf32>
    %9027 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9028 = stablehlo.divide %7603, %9027 : tensor<768xf32>
    %9029 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9030 = stablehlo.divide %7609, %9029 : tensor<768x768xf32>
    %9031 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9032 = stablehlo.divide %7615, %9031 : tensor<768xf32>
    %9033 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9034 = stablehlo.divide %7621, %9033 : tensor<768x768xf32>
    %9035 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9036 = stablehlo.divide %7627, %9035 : tensor<768xf32>
    %9037 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9038 = stablehlo.divide %7633, %9037 : tensor<768x768xf32>
    %9039 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9040 = stablehlo.divide %7639, %9039 : tensor<768xf32>
    %9041 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9042 = stablehlo.divide %7645, %9041 : tensor<768x768xf32>
    %9043 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9044 = stablehlo.divide %7651, %9043 : tensor<768xf32>
    %9045 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9046 = stablehlo.divide %7657, %9045 : tensor<768xf32>
    %9047 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9048 = stablehlo.divide %7663, %9047 : tensor<768xf32>
    %9049 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9050 = stablehlo.divide %7669, %9049 : tensor<3072x768xf32>
    %9051 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9052 = stablehlo.divide %7675, %9051 : tensor<768xf32>
    %9053 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9054 = stablehlo.divide %7681, %9053 : tensor<768xf32>
    %9055 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9056 = stablehlo.divide %7687, %9055 : tensor<3072xf32>
    %9057 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9058 = stablehlo.divide %7693, %9057 : tensor<768x3072xf32>
    %9059 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9060 = stablehlo.divide %7699, %9059 : tensor<768xf32>
    %9061 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9062 = stablehlo.divide %7705, %9061 : tensor<768x768xf32>
    %9063 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9064 = stablehlo.divide %7711, %9063 : tensor<768xf32>
    %9065 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9066 = stablehlo.divide %7717, %9065 : tensor<768x768xf32>
    %9067 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9068 = stablehlo.divide %7723, %9067 : tensor<768xf32>
    %9069 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9070 = stablehlo.divide %7729, %9069 : tensor<768x768xf32>
    %9071 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9072 = stablehlo.divide %7735, %9071 : tensor<768xf32>
    %9073 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9074 = stablehlo.divide %7741, %9073 : tensor<768x768xf32>
    %9075 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9076 = stablehlo.divide %7747, %9075 : tensor<768xf32>
    %9077 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9078 = stablehlo.divide %7753, %9077 : tensor<768xf32>
    %9079 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9080 = stablehlo.divide %7759, %9079 : tensor<768xf32>
    %9081 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9082 = stablehlo.divide %7765, %9081 : tensor<3072x768xf32>
    %9083 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9084 = stablehlo.divide %7771, %9083 : tensor<768xf32>
    %9085 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9086 = stablehlo.divide %7777, %9085 : tensor<768xf32>
    %9087 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9088 = stablehlo.divide %7783, %9087 : tensor<3072xf32>
    %9089 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9090 = stablehlo.divide %7789, %9089 : tensor<768x3072xf32>
    %9091 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9092 = stablehlo.divide %7795, %9091 : tensor<768xf32>
    %9093 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9094 = stablehlo.divide %7801, %9093 : tensor<768x768xf32>
    %9095 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9096 = stablehlo.divide %7807, %9095 : tensor<768xf32>
    %9097 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9098 = stablehlo.divide %7813, %9097 : tensor<768x768xf32>
    %9099 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9100 = stablehlo.divide %7819, %9099 : tensor<768xf32>
    %9101 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9102 = stablehlo.divide %7825, %9101 : tensor<768x768xf32>
    %9103 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9104 = stablehlo.divide %7831, %9103 : tensor<768xf32>
    %9105 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9106 = stablehlo.divide %7837, %9105 : tensor<768x768xf32>
    %9107 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9108 = stablehlo.divide %7843, %9107 : tensor<768xf32>
    %9109 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9110 = stablehlo.divide %7849, %9109 : tensor<768xf32>
    %9111 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9112 = stablehlo.divide %7855, %9111 : tensor<768xf32>
    %9113 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9114 = stablehlo.divide %7861, %9113 : tensor<3072x768xf32>
    %9115 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9116 = stablehlo.divide %7867, %9115 : tensor<768xf32>
    %9117 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9118 = stablehlo.divide %7873, %9117 : tensor<768xf32>
    %9119 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9120 = stablehlo.divide %7879, %9119 : tensor<3072xf32>
    %9121 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9122 = stablehlo.divide %7885, %9121 : tensor<768x3072xf32>
    %9123 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9124 = stablehlo.divide %7891, %9123 : tensor<768xf32>
    %9125 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9126 = stablehlo.divide %7897, %9125 : tensor<768x768xf32>
    %9127 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9128 = stablehlo.divide %7903, %9127 : tensor<768xf32>
    %9129 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9130 = stablehlo.divide %7909, %9129 : tensor<768x768xf32>
    %9131 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9132 = stablehlo.divide %7915, %9131 : tensor<768xf32>
    %9133 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9134 = stablehlo.divide %7921, %9133 : tensor<768x768xf32>
    %9135 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9136 = stablehlo.divide %7927, %9135 : tensor<768xf32>
    %9137 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9138 = stablehlo.divide %7933, %9137 : tensor<768x768xf32>
    %9139 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9140 = stablehlo.divide %7939, %9139 : tensor<768xf32>
    %9141 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9142 = stablehlo.divide %7945, %9141 : tensor<768xf32>
    %9143 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9144 = stablehlo.divide %7951, %9143 : tensor<768xf32>
    %9145 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9146 = stablehlo.divide %7957, %9145 : tensor<3072x768xf32>
    %9147 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9148 = stablehlo.divide %7963, %9147 : tensor<768xf32>
    %9149 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9150 = stablehlo.divide %7969, %9149 : tensor<768xf32>
    %9151 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9152 = stablehlo.divide %7975, %9151 : tensor<3072xf32>
    %9153 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9154 = stablehlo.divide %7981, %9153 : tensor<768x3072xf32>
    %9155 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9156 = stablehlo.divide %7987, %9155 : tensor<768xf32>
    %9157 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9158 = stablehlo.divide %7993, %9157 : tensor<768x768xf32>
    %9159 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9160 = stablehlo.divide %7999, %9159 : tensor<768xf32>
    %9161 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9162 = stablehlo.divide %8005, %9161 : tensor<768x768xf32>
    %9163 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9164 = stablehlo.divide %8011, %9163 : tensor<768xf32>
    %9165 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9166 = stablehlo.divide %8017, %9165 : tensor<768x768xf32>
    %9167 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9168 = stablehlo.divide %8023, %9167 : tensor<768xf32>
    %9169 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9170 = stablehlo.divide %8029, %9169 : tensor<768x768xf32>
    %9171 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9172 = stablehlo.divide %8035, %9171 : tensor<768xf32>
    %9173 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9174 = stablehlo.divide %8041, %9173 : tensor<768xf32>
    %9175 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9176 = stablehlo.divide %8047, %9175 : tensor<768xf32>
    %9177 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9178 = stablehlo.divide %8053, %9177 : tensor<3072x768xf32>
    %9179 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9180 = stablehlo.divide %8059, %9179 : tensor<768xf32>
    %9181 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9182 = stablehlo.divide %8065, %9181 : tensor<768xf32>
    %9183 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9184 = stablehlo.divide %8071, %9183 : tensor<3072xf32>
    %9185 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9186 = stablehlo.divide %8077, %9185 : tensor<768x3072xf32>
    %9187 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9188 = stablehlo.divide %8083, %9187 : tensor<768xf32>
    %9189 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9190 = stablehlo.divide %8089, %9189 : tensor<768x768xf32>
    %9191 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9192 = stablehlo.divide %8095, %9191 : tensor<768xf32>
    %9193 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9194 = stablehlo.divide %8101, %9193 : tensor<768x768xf32>
    %9195 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9196 = stablehlo.divide %8107, %9195 : tensor<768xf32>
    %9197 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9198 = stablehlo.divide %8113, %9197 : tensor<768x768xf32>
    %9199 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9200 = stablehlo.divide %8119, %9199 : tensor<768xf32>
    %9201 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9202 = stablehlo.divide %8125, %9201 : tensor<768x768xf32>
    %9203 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9204 = stablehlo.divide %8131, %9203 : tensor<768xf32>
    %9205 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9206 = stablehlo.divide %8137, %9205 : tensor<768xf32>
    %9207 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9208 = stablehlo.divide %8143, %9207 : tensor<768xf32>
    %9209 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9210 = stablehlo.divide %8149, %9209 : tensor<3072x768xf32>
    %9211 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9212 = stablehlo.divide %8155, %9211 : tensor<768xf32>
    %9213 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9214 = stablehlo.divide %8161, %9213 : tensor<768xf32>
    %9215 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9216 = stablehlo.divide %8167, %9215 : tensor<3072xf32>
    %9217 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9218 = stablehlo.divide %8173, %9217 : tensor<768x3072xf32>
    %9219 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9220 = stablehlo.divide %8179, %9219 : tensor<768xf32>
    %9221 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9222 = stablehlo.divide %8185, %9221 : tensor<768x768xf32>
    %9223 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9224 = stablehlo.divide %8191, %9223 : tensor<768xf32>
    %9225 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9226 = stablehlo.divide %8197, %9225 : tensor<768x768xf32>
    %9227 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9228 = stablehlo.divide %8203, %9227 : tensor<768xf32>
    %9229 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9230 = stablehlo.divide %8209, %9229 : tensor<768x768xf32>
    %9231 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9232 = stablehlo.divide %8215, %9231 : tensor<768xf32>
    %9233 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9234 = stablehlo.divide %8221, %9233 : tensor<768x768xf32>
    %9235 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9236 = stablehlo.divide %8227, %9235 : tensor<768xf32>
    %9237 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9238 = stablehlo.divide %8233, %9237 : tensor<768xf32>
    %9239 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9240 = stablehlo.divide %8239, %9239 : tensor<768xf32>
    %9241 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9242 = stablehlo.divide %8245, %9241 : tensor<3072x768xf32>
    %9243 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9244 = stablehlo.divide %8251, %9243 : tensor<768xf32>
    %9245 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9246 = stablehlo.divide %8257, %9245 : tensor<768xf32>
    %9247 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9248 = stablehlo.divide %8263, %9247 : tensor<3072xf32>
    %9249 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9250 = stablehlo.divide %8269, %9249 : tensor<768x3072xf32>
    %9251 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9252 = stablehlo.divide %8275, %9251 : tensor<768xf32>
    %9253 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9254 = stablehlo.divide %8281, %9253 : tensor<768x768xf32>
    %9255 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9256 = stablehlo.divide %8287, %9255 : tensor<768xf32>
    %9257 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9258 = stablehlo.divide %8293, %9257 : tensor<768x768xf32>
    %9259 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9260 = stablehlo.divide %8299, %9259 : tensor<768xf32>
    %9261 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9262 = stablehlo.divide %8305, %9261 : tensor<768x768xf32>
    %9263 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9264 = stablehlo.divide %8311, %9263 : tensor<768xf32>
    %9265 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9266 = stablehlo.divide %8317, %9265 : tensor<768x768xf32>
    %9267 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9268 = stablehlo.divide %8323, %9267 : tensor<768xf32>
    %9269 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9270 = stablehlo.divide %8329, %9269 : tensor<768xf32>
    %9271 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9272 = stablehlo.divide %8335, %9271 : tensor<768xf32>
    %9273 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9274 = stablehlo.divide %8341, %9273 : tensor<3072x768xf32>
    %9275 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9276 = stablehlo.divide %8347, %9275 : tensor<768xf32>
    %9277 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9278 = stablehlo.divide %8353, %9277 : tensor<768xf32>
    %9279 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9280 = stablehlo.divide %8359, %9279 : tensor<3072xf32>
    %9281 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9282 = stablehlo.divide %8365, %9281 : tensor<768x3072xf32>
    %9283 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9284 = stablehlo.divide %8371, %9283 : tensor<768xf32>
    %9285 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9286 = stablehlo.divide %8377, %9285 : tensor<768x768xf32>
    %9287 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9288 = stablehlo.divide %8383, %9287 : tensor<768xf32>
    %9289 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9290 = stablehlo.divide %8389, %9289 : tensor<768x768xf32>
    %9291 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9292 = stablehlo.divide %8395, %9291 : tensor<768xf32>
    %9293 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9294 = stablehlo.divide %8401, %9293 : tensor<768x768xf32>
    %9295 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9296 = stablehlo.divide %8407, %9295 : tensor<768xf32>
    %9297 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9298 = stablehlo.divide %8413, %9297 : tensor<768x768xf32>
    %9299 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9300 = stablehlo.divide %8419, %9299 : tensor<768xf32>
    %9301 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9302 = stablehlo.divide %8425, %9301 : tensor<768xf32>
    %9303 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9304 = stablehlo.divide %8431, %9303 : tensor<768xf32>
    %9305 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9306 = stablehlo.divide %8437, %9305 : tensor<3072x768xf32>
    %9307 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9308 = stablehlo.divide %8443, %9307 : tensor<768xf32>
    %9309 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9310 = stablehlo.divide %8449, %9309 : tensor<768xf32>
    %9311 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9312 = stablehlo.divide %8455, %9311 : tensor<3072xf32>
    %9313 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9314 = stablehlo.divide %8461, %9313 : tensor<768x3072xf32>
    %9315 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9316 = stablehlo.divide %8467, %9315 : tensor<768xf32>
    %9317 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9318 = stablehlo.divide %8473, %9317 : tensor<768xf32>
    %9319 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %9320 = stablehlo.divide %8479, %9319 : tensor<30522xf32>
    %9321 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9322 = stablehlo.divide %8485, %9321 : tensor<768xf32>
    %9323 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9324 = stablehlo.divide %8491, %9323 : tensor<768x768xf32>
    %9325 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9326 = stablehlo.divide %8497, %9325 : tensor<30522x768xf32>
    %9327 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9328 = stablehlo.divide %8503, %9327 : tensor<768xf32>
    %9329 = stablehlo.broadcast_in_dim %8924, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9330 = stablehlo.divide %8509, %9329 : tensor<768xf32>
    %9331 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %9332 = stablehlo.add %8926, %9331 : tensor<512x768xf32>
    %9333 = stablehlo.sqrt %9332 : tensor<512x768xf32>
    %cst_760 = stablehlo.constant dense<9.99999993E-9> : tensor<f32>
    %9334 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %9335 = stablehlo.add %9333, %9334 : tensor<512x768xf32>
    %9336 = stablehlo.divide %8517, %9335 : tensor<512x768xf32>
    %9337 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %9338 = stablehlo.add %8928, %9337 : tensor<2x768xf32>
    %9339 = stablehlo.sqrt %9338 : tensor<2x768xf32>
    %9340 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %9341 = stablehlo.add %9339, %9340 : tensor<2x768xf32>
    %9342 = stablehlo.divide %8519, %9341 : tensor<2x768xf32>
    %9343 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9344 = stablehlo.add %8930, %9343 : tensor<30522x768xf32>
    %9345 = stablehlo.sqrt %9344 : tensor<30522x768xf32>
    %9346 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9347 = stablehlo.add %9345, %9346 : tensor<30522x768xf32>
    %9348 = stablehlo.divide %8521, %9347 : tensor<30522x768xf32>
    %9349 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9350 = stablehlo.add %8932, %9349 : tensor<768xf32>
    %9351 = stablehlo.sqrt %9350 : tensor<768xf32>
    %9352 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9353 = stablehlo.add %9351, %9352 : tensor<768xf32>
    %9354 = stablehlo.divide %8523, %9353 : tensor<768xf32>
    %9355 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9356 = stablehlo.add %8934, %9355 : tensor<768x768xf32>
    %9357 = stablehlo.sqrt %9356 : tensor<768x768xf32>
    %9358 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9359 = stablehlo.add %9357, %9358 : tensor<768x768xf32>
    %9360 = stablehlo.divide %8525, %9359 : tensor<768x768xf32>
    %9361 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9362 = stablehlo.add %8936, %9361 : tensor<768xf32>
    %9363 = stablehlo.sqrt %9362 : tensor<768xf32>
    %9364 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9365 = stablehlo.add %9363, %9364 : tensor<768xf32>
    %9366 = stablehlo.divide %8527, %9365 : tensor<768xf32>
    %9367 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9368 = stablehlo.add %8938, %9367 : tensor<768x768xf32>
    %9369 = stablehlo.sqrt %9368 : tensor<768x768xf32>
    %9370 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9371 = stablehlo.add %9369, %9370 : tensor<768x768xf32>
    %9372 = stablehlo.divide %8529, %9371 : tensor<768x768xf32>
    %9373 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9374 = stablehlo.add %8940, %9373 : tensor<768xf32>
    %9375 = stablehlo.sqrt %9374 : tensor<768xf32>
    %9376 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9377 = stablehlo.add %9375, %9376 : tensor<768xf32>
    %9378 = stablehlo.divide %8531, %9377 : tensor<768xf32>
    %9379 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9380 = stablehlo.add %8942, %9379 : tensor<768x768xf32>
    %9381 = stablehlo.sqrt %9380 : tensor<768x768xf32>
    %9382 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9383 = stablehlo.add %9381, %9382 : tensor<768x768xf32>
    %9384 = stablehlo.divide %8533, %9383 : tensor<768x768xf32>
    %9385 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9386 = stablehlo.add %8944, %9385 : tensor<768xf32>
    %9387 = stablehlo.sqrt %9386 : tensor<768xf32>
    %9388 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9389 = stablehlo.add %9387, %9388 : tensor<768xf32>
    %9390 = stablehlo.divide %8535, %9389 : tensor<768xf32>
    %9391 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9392 = stablehlo.add %8946, %9391 : tensor<768x768xf32>
    %9393 = stablehlo.sqrt %9392 : tensor<768x768xf32>
    %9394 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9395 = stablehlo.add %9393, %9394 : tensor<768x768xf32>
    %9396 = stablehlo.divide %8537, %9395 : tensor<768x768xf32>
    %9397 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9398 = stablehlo.add %8948, %9397 : tensor<768xf32>
    %9399 = stablehlo.sqrt %9398 : tensor<768xf32>
    %9400 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9401 = stablehlo.add %9399, %9400 : tensor<768xf32>
    %9402 = stablehlo.divide %8539, %9401 : tensor<768xf32>
    %9403 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9404 = stablehlo.add %8950, %9403 : tensor<768xf32>
    %9405 = stablehlo.sqrt %9404 : tensor<768xf32>
    %9406 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9407 = stablehlo.add %9405, %9406 : tensor<768xf32>
    %9408 = stablehlo.divide %8541, %9407 : tensor<768xf32>
    %9409 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9410 = stablehlo.add %8952, %9409 : tensor<768xf32>
    %9411 = stablehlo.sqrt %9410 : tensor<768xf32>
    %9412 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9413 = stablehlo.add %9411, %9412 : tensor<768xf32>
    %9414 = stablehlo.divide %8543, %9413 : tensor<768xf32>
    %9415 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9416 = stablehlo.add %8954, %9415 : tensor<3072x768xf32>
    %9417 = stablehlo.sqrt %9416 : tensor<3072x768xf32>
    %9418 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9419 = stablehlo.add %9417, %9418 : tensor<3072x768xf32>
    %9420 = stablehlo.divide %8545, %9419 : tensor<3072x768xf32>
    %9421 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9422 = stablehlo.add %8956, %9421 : tensor<768xf32>
    %9423 = stablehlo.sqrt %9422 : tensor<768xf32>
    %9424 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9425 = stablehlo.add %9423, %9424 : tensor<768xf32>
    %9426 = stablehlo.divide %8547, %9425 : tensor<768xf32>
    %9427 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9428 = stablehlo.add %8958, %9427 : tensor<768xf32>
    %9429 = stablehlo.sqrt %9428 : tensor<768xf32>
    %9430 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9431 = stablehlo.add %9429, %9430 : tensor<768xf32>
    %9432 = stablehlo.divide %8549, %9431 : tensor<768xf32>
    %9433 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9434 = stablehlo.add %8960, %9433 : tensor<3072xf32>
    %9435 = stablehlo.sqrt %9434 : tensor<3072xf32>
    %9436 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9437 = stablehlo.add %9435, %9436 : tensor<3072xf32>
    %9438 = stablehlo.divide %8551, %9437 : tensor<3072xf32>
    %9439 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9440 = stablehlo.add %8962, %9439 : tensor<768x3072xf32>
    %9441 = stablehlo.sqrt %9440 : tensor<768x3072xf32>
    %9442 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9443 = stablehlo.add %9441, %9442 : tensor<768x3072xf32>
    %9444 = stablehlo.divide %8553, %9443 : tensor<768x3072xf32>
    %9445 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9446 = stablehlo.add %8964, %9445 : tensor<768xf32>
    %9447 = stablehlo.sqrt %9446 : tensor<768xf32>
    %9448 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9449 = stablehlo.add %9447, %9448 : tensor<768xf32>
    %9450 = stablehlo.divide %8555, %9449 : tensor<768xf32>
    %9451 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9452 = stablehlo.add %8966, %9451 : tensor<768x768xf32>
    %9453 = stablehlo.sqrt %9452 : tensor<768x768xf32>
    %9454 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9455 = stablehlo.add %9453, %9454 : tensor<768x768xf32>
    %9456 = stablehlo.divide %8557, %9455 : tensor<768x768xf32>
    %9457 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9458 = stablehlo.add %8968, %9457 : tensor<768xf32>
    %9459 = stablehlo.sqrt %9458 : tensor<768xf32>
    %9460 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9461 = stablehlo.add %9459, %9460 : tensor<768xf32>
    %9462 = stablehlo.divide %8559, %9461 : tensor<768xf32>
    %9463 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9464 = stablehlo.add %8970, %9463 : tensor<768x768xf32>
    %9465 = stablehlo.sqrt %9464 : tensor<768x768xf32>
    %9466 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9467 = stablehlo.add %9465, %9466 : tensor<768x768xf32>
    %9468 = stablehlo.divide %8561, %9467 : tensor<768x768xf32>
    %9469 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9470 = stablehlo.add %8972, %9469 : tensor<768xf32>
    %9471 = stablehlo.sqrt %9470 : tensor<768xf32>
    %9472 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9473 = stablehlo.add %9471, %9472 : tensor<768xf32>
    %9474 = stablehlo.divide %8563, %9473 : tensor<768xf32>
    %9475 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9476 = stablehlo.add %8974, %9475 : tensor<768x768xf32>
    %9477 = stablehlo.sqrt %9476 : tensor<768x768xf32>
    %9478 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9479 = stablehlo.add %9477, %9478 : tensor<768x768xf32>
    %9480 = stablehlo.divide %8565, %9479 : tensor<768x768xf32>
    %9481 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9482 = stablehlo.add %8976, %9481 : tensor<768xf32>
    %9483 = stablehlo.sqrt %9482 : tensor<768xf32>
    %9484 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9485 = stablehlo.add %9483, %9484 : tensor<768xf32>
    %9486 = stablehlo.divide %8567, %9485 : tensor<768xf32>
    %9487 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9488 = stablehlo.add %8978, %9487 : tensor<768x768xf32>
    %9489 = stablehlo.sqrt %9488 : tensor<768x768xf32>
    %9490 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9491 = stablehlo.add %9489, %9490 : tensor<768x768xf32>
    %9492 = stablehlo.divide %8569, %9491 : tensor<768x768xf32>
    %9493 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9494 = stablehlo.add %8980, %9493 : tensor<768xf32>
    %9495 = stablehlo.sqrt %9494 : tensor<768xf32>
    %9496 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9497 = stablehlo.add %9495, %9496 : tensor<768xf32>
    %9498 = stablehlo.divide %8571, %9497 : tensor<768xf32>
    %9499 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9500 = stablehlo.add %8982, %9499 : tensor<768xf32>
    %9501 = stablehlo.sqrt %9500 : tensor<768xf32>
    %9502 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9503 = stablehlo.add %9501, %9502 : tensor<768xf32>
    %9504 = stablehlo.divide %8573, %9503 : tensor<768xf32>
    %9505 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9506 = stablehlo.add %8984, %9505 : tensor<768xf32>
    %9507 = stablehlo.sqrt %9506 : tensor<768xf32>
    %9508 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9509 = stablehlo.add %9507, %9508 : tensor<768xf32>
    %9510 = stablehlo.divide %8575, %9509 : tensor<768xf32>
    %9511 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9512 = stablehlo.add %8986, %9511 : tensor<3072x768xf32>
    %9513 = stablehlo.sqrt %9512 : tensor<3072x768xf32>
    %9514 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9515 = stablehlo.add %9513, %9514 : tensor<3072x768xf32>
    %9516 = stablehlo.divide %8577, %9515 : tensor<3072x768xf32>
    %9517 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9518 = stablehlo.add %8988, %9517 : tensor<768xf32>
    %9519 = stablehlo.sqrt %9518 : tensor<768xf32>
    %9520 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9521 = stablehlo.add %9519, %9520 : tensor<768xf32>
    %9522 = stablehlo.divide %8579, %9521 : tensor<768xf32>
    %9523 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9524 = stablehlo.add %8990, %9523 : tensor<768xf32>
    %9525 = stablehlo.sqrt %9524 : tensor<768xf32>
    %9526 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9527 = stablehlo.add %9525, %9526 : tensor<768xf32>
    %9528 = stablehlo.divide %8581, %9527 : tensor<768xf32>
    %9529 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9530 = stablehlo.add %8992, %9529 : tensor<3072xf32>
    %9531 = stablehlo.sqrt %9530 : tensor<3072xf32>
    %9532 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9533 = stablehlo.add %9531, %9532 : tensor<3072xf32>
    %9534 = stablehlo.divide %8583, %9533 : tensor<3072xf32>
    %9535 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9536 = stablehlo.add %8994, %9535 : tensor<768x3072xf32>
    %9537 = stablehlo.sqrt %9536 : tensor<768x3072xf32>
    %9538 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9539 = stablehlo.add %9537, %9538 : tensor<768x3072xf32>
    %9540 = stablehlo.divide %8585, %9539 : tensor<768x3072xf32>
    %9541 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9542 = stablehlo.add %8996, %9541 : tensor<768xf32>
    %9543 = stablehlo.sqrt %9542 : tensor<768xf32>
    %9544 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9545 = stablehlo.add %9543, %9544 : tensor<768xf32>
    %9546 = stablehlo.divide %8587, %9545 : tensor<768xf32>
    %9547 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9548 = stablehlo.add %8998, %9547 : tensor<768x768xf32>
    %9549 = stablehlo.sqrt %9548 : tensor<768x768xf32>
    %9550 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9551 = stablehlo.add %9549, %9550 : tensor<768x768xf32>
    %9552 = stablehlo.divide %8589, %9551 : tensor<768x768xf32>
    %9553 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9554 = stablehlo.add %9000, %9553 : tensor<768xf32>
    %9555 = stablehlo.sqrt %9554 : tensor<768xf32>
    %9556 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9557 = stablehlo.add %9555, %9556 : tensor<768xf32>
    %9558 = stablehlo.divide %8591, %9557 : tensor<768xf32>
    %9559 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9560 = stablehlo.add %9002, %9559 : tensor<768x768xf32>
    %9561 = stablehlo.sqrt %9560 : tensor<768x768xf32>
    %9562 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9563 = stablehlo.add %9561, %9562 : tensor<768x768xf32>
    %9564 = stablehlo.divide %8593, %9563 : tensor<768x768xf32>
    %9565 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9566 = stablehlo.add %9004, %9565 : tensor<768xf32>
    %9567 = stablehlo.sqrt %9566 : tensor<768xf32>
    %9568 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9569 = stablehlo.add %9567, %9568 : tensor<768xf32>
    %9570 = stablehlo.divide %8595, %9569 : tensor<768xf32>
    %9571 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9572 = stablehlo.add %9006, %9571 : tensor<768x768xf32>
    %9573 = stablehlo.sqrt %9572 : tensor<768x768xf32>
    %9574 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9575 = stablehlo.add %9573, %9574 : tensor<768x768xf32>
    %9576 = stablehlo.divide %8597, %9575 : tensor<768x768xf32>
    %9577 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9578 = stablehlo.add %9008, %9577 : tensor<768xf32>
    %9579 = stablehlo.sqrt %9578 : tensor<768xf32>
    %9580 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9581 = stablehlo.add %9579, %9580 : tensor<768xf32>
    %9582 = stablehlo.divide %8599, %9581 : tensor<768xf32>
    %9583 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9584 = stablehlo.add %9010, %9583 : tensor<768x768xf32>
    %9585 = stablehlo.sqrt %9584 : tensor<768x768xf32>
    %9586 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9587 = stablehlo.add %9585, %9586 : tensor<768x768xf32>
    %9588 = stablehlo.divide %8601, %9587 : tensor<768x768xf32>
    %9589 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9590 = stablehlo.add %9012, %9589 : tensor<768xf32>
    %9591 = stablehlo.sqrt %9590 : tensor<768xf32>
    %9592 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9593 = stablehlo.add %9591, %9592 : tensor<768xf32>
    %9594 = stablehlo.divide %8603, %9593 : tensor<768xf32>
    %9595 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9596 = stablehlo.add %9014, %9595 : tensor<768xf32>
    %9597 = stablehlo.sqrt %9596 : tensor<768xf32>
    %9598 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9599 = stablehlo.add %9597, %9598 : tensor<768xf32>
    %9600 = stablehlo.divide %8605, %9599 : tensor<768xf32>
    %9601 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9602 = stablehlo.add %9016, %9601 : tensor<768xf32>
    %9603 = stablehlo.sqrt %9602 : tensor<768xf32>
    %9604 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9605 = stablehlo.add %9603, %9604 : tensor<768xf32>
    %9606 = stablehlo.divide %8607, %9605 : tensor<768xf32>
    %9607 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9608 = stablehlo.add %9018, %9607 : tensor<3072x768xf32>
    %9609 = stablehlo.sqrt %9608 : tensor<3072x768xf32>
    %9610 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9611 = stablehlo.add %9609, %9610 : tensor<3072x768xf32>
    %9612 = stablehlo.divide %8609, %9611 : tensor<3072x768xf32>
    %9613 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9614 = stablehlo.add %9020, %9613 : tensor<768xf32>
    %9615 = stablehlo.sqrt %9614 : tensor<768xf32>
    %9616 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9617 = stablehlo.add %9615, %9616 : tensor<768xf32>
    %9618 = stablehlo.divide %8611, %9617 : tensor<768xf32>
    %9619 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9620 = stablehlo.add %9022, %9619 : tensor<768xf32>
    %9621 = stablehlo.sqrt %9620 : tensor<768xf32>
    %9622 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9623 = stablehlo.add %9621, %9622 : tensor<768xf32>
    %9624 = stablehlo.divide %8613, %9623 : tensor<768xf32>
    %9625 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9626 = stablehlo.add %9024, %9625 : tensor<3072xf32>
    %9627 = stablehlo.sqrt %9626 : tensor<3072xf32>
    %9628 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9629 = stablehlo.add %9627, %9628 : tensor<3072xf32>
    %9630 = stablehlo.divide %8615, %9629 : tensor<3072xf32>
    %9631 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9632 = stablehlo.add %9026, %9631 : tensor<768x3072xf32>
    %9633 = stablehlo.sqrt %9632 : tensor<768x3072xf32>
    %9634 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9635 = stablehlo.add %9633, %9634 : tensor<768x3072xf32>
    %9636 = stablehlo.divide %8617, %9635 : tensor<768x3072xf32>
    %9637 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9638 = stablehlo.add %9028, %9637 : tensor<768xf32>
    %9639 = stablehlo.sqrt %9638 : tensor<768xf32>
    %9640 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9641 = stablehlo.add %9639, %9640 : tensor<768xf32>
    %9642 = stablehlo.divide %8619, %9641 : tensor<768xf32>
    %9643 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9644 = stablehlo.add %9030, %9643 : tensor<768x768xf32>
    %9645 = stablehlo.sqrt %9644 : tensor<768x768xf32>
    %9646 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9647 = stablehlo.add %9645, %9646 : tensor<768x768xf32>
    %9648 = stablehlo.divide %8621, %9647 : tensor<768x768xf32>
    %9649 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9650 = stablehlo.add %9032, %9649 : tensor<768xf32>
    %9651 = stablehlo.sqrt %9650 : tensor<768xf32>
    %9652 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9653 = stablehlo.add %9651, %9652 : tensor<768xf32>
    %9654 = stablehlo.divide %8623, %9653 : tensor<768xf32>
    %9655 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9656 = stablehlo.add %9034, %9655 : tensor<768x768xf32>
    %9657 = stablehlo.sqrt %9656 : tensor<768x768xf32>
    %9658 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9659 = stablehlo.add %9657, %9658 : tensor<768x768xf32>
    %9660 = stablehlo.divide %8625, %9659 : tensor<768x768xf32>
    %9661 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9662 = stablehlo.add %9036, %9661 : tensor<768xf32>
    %9663 = stablehlo.sqrt %9662 : tensor<768xf32>
    %9664 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9665 = stablehlo.add %9663, %9664 : tensor<768xf32>
    %9666 = stablehlo.divide %8627, %9665 : tensor<768xf32>
    %9667 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9668 = stablehlo.add %9038, %9667 : tensor<768x768xf32>
    %9669 = stablehlo.sqrt %9668 : tensor<768x768xf32>
    %9670 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9671 = stablehlo.add %9669, %9670 : tensor<768x768xf32>
    %9672 = stablehlo.divide %8629, %9671 : tensor<768x768xf32>
    %9673 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9674 = stablehlo.add %9040, %9673 : tensor<768xf32>
    %9675 = stablehlo.sqrt %9674 : tensor<768xf32>
    %9676 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9677 = stablehlo.add %9675, %9676 : tensor<768xf32>
    %9678 = stablehlo.divide %8631, %9677 : tensor<768xf32>
    %9679 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9680 = stablehlo.add %9042, %9679 : tensor<768x768xf32>
    %9681 = stablehlo.sqrt %9680 : tensor<768x768xf32>
    %9682 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9683 = stablehlo.add %9681, %9682 : tensor<768x768xf32>
    %9684 = stablehlo.divide %8633, %9683 : tensor<768x768xf32>
    %9685 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9686 = stablehlo.add %9044, %9685 : tensor<768xf32>
    %9687 = stablehlo.sqrt %9686 : tensor<768xf32>
    %9688 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9689 = stablehlo.add %9687, %9688 : tensor<768xf32>
    %9690 = stablehlo.divide %8635, %9689 : tensor<768xf32>
    %9691 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9692 = stablehlo.add %9046, %9691 : tensor<768xf32>
    %9693 = stablehlo.sqrt %9692 : tensor<768xf32>
    %9694 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9695 = stablehlo.add %9693, %9694 : tensor<768xf32>
    %9696 = stablehlo.divide %8637, %9695 : tensor<768xf32>
    %9697 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9698 = stablehlo.add %9048, %9697 : tensor<768xf32>
    %9699 = stablehlo.sqrt %9698 : tensor<768xf32>
    %9700 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9701 = stablehlo.add %9699, %9700 : tensor<768xf32>
    %9702 = stablehlo.divide %8639, %9701 : tensor<768xf32>
    %9703 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9704 = stablehlo.add %9050, %9703 : tensor<3072x768xf32>
    %9705 = stablehlo.sqrt %9704 : tensor<3072x768xf32>
    %9706 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9707 = stablehlo.add %9705, %9706 : tensor<3072x768xf32>
    %9708 = stablehlo.divide %8641, %9707 : tensor<3072x768xf32>
    %9709 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9710 = stablehlo.add %9052, %9709 : tensor<768xf32>
    %9711 = stablehlo.sqrt %9710 : tensor<768xf32>
    %9712 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9713 = stablehlo.add %9711, %9712 : tensor<768xf32>
    %9714 = stablehlo.divide %8643, %9713 : tensor<768xf32>
    %9715 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9716 = stablehlo.add %9054, %9715 : tensor<768xf32>
    %9717 = stablehlo.sqrt %9716 : tensor<768xf32>
    %9718 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9719 = stablehlo.add %9717, %9718 : tensor<768xf32>
    %9720 = stablehlo.divide %8645, %9719 : tensor<768xf32>
    %9721 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9722 = stablehlo.add %9056, %9721 : tensor<3072xf32>
    %9723 = stablehlo.sqrt %9722 : tensor<3072xf32>
    %9724 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9725 = stablehlo.add %9723, %9724 : tensor<3072xf32>
    %9726 = stablehlo.divide %8647, %9725 : tensor<3072xf32>
    %9727 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9728 = stablehlo.add %9058, %9727 : tensor<768x3072xf32>
    %9729 = stablehlo.sqrt %9728 : tensor<768x3072xf32>
    %9730 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9731 = stablehlo.add %9729, %9730 : tensor<768x3072xf32>
    %9732 = stablehlo.divide %8649, %9731 : tensor<768x3072xf32>
    %9733 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9734 = stablehlo.add %9060, %9733 : tensor<768xf32>
    %9735 = stablehlo.sqrt %9734 : tensor<768xf32>
    %9736 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9737 = stablehlo.add %9735, %9736 : tensor<768xf32>
    %9738 = stablehlo.divide %8651, %9737 : tensor<768xf32>
    %9739 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9740 = stablehlo.add %9062, %9739 : tensor<768x768xf32>
    %9741 = stablehlo.sqrt %9740 : tensor<768x768xf32>
    %9742 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9743 = stablehlo.add %9741, %9742 : tensor<768x768xf32>
    %9744 = stablehlo.divide %8653, %9743 : tensor<768x768xf32>
    %9745 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9746 = stablehlo.add %9064, %9745 : tensor<768xf32>
    %9747 = stablehlo.sqrt %9746 : tensor<768xf32>
    %9748 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9749 = stablehlo.add %9747, %9748 : tensor<768xf32>
    %9750 = stablehlo.divide %8655, %9749 : tensor<768xf32>
    %9751 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9752 = stablehlo.add %9066, %9751 : tensor<768x768xf32>
    %9753 = stablehlo.sqrt %9752 : tensor<768x768xf32>
    %9754 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9755 = stablehlo.add %9753, %9754 : tensor<768x768xf32>
    %9756 = stablehlo.divide %8657, %9755 : tensor<768x768xf32>
    %9757 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9758 = stablehlo.add %9068, %9757 : tensor<768xf32>
    %9759 = stablehlo.sqrt %9758 : tensor<768xf32>
    %9760 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9761 = stablehlo.add %9759, %9760 : tensor<768xf32>
    %9762 = stablehlo.divide %8659, %9761 : tensor<768xf32>
    %9763 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9764 = stablehlo.add %9070, %9763 : tensor<768x768xf32>
    %9765 = stablehlo.sqrt %9764 : tensor<768x768xf32>
    %9766 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9767 = stablehlo.add %9765, %9766 : tensor<768x768xf32>
    %9768 = stablehlo.divide %8661, %9767 : tensor<768x768xf32>
    %9769 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9770 = stablehlo.add %9072, %9769 : tensor<768xf32>
    %9771 = stablehlo.sqrt %9770 : tensor<768xf32>
    %9772 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9773 = stablehlo.add %9771, %9772 : tensor<768xf32>
    %9774 = stablehlo.divide %8663, %9773 : tensor<768xf32>
    %9775 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9776 = stablehlo.add %9074, %9775 : tensor<768x768xf32>
    %9777 = stablehlo.sqrt %9776 : tensor<768x768xf32>
    %9778 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9779 = stablehlo.add %9777, %9778 : tensor<768x768xf32>
    %9780 = stablehlo.divide %8665, %9779 : tensor<768x768xf32>
    %9781 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9782 = stablehlo.add %9076, %9781 : tensor<768xf32>
    %9783 = stablehlo.sqrt %9782 : tensor<768xf32>
    %9784 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9785 = stablehlo.add %9783, %9784 : tensor<768xf32>
    %9786 = stablehlo.divide %8667, %9785 : tensor<768xf32>
    %9787 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9788 = stablehlo.add %9078, %9787 : tensor<768xf32>
    %9789 = stablehlo.sqrt %9788 : tensor<768xf32>
    %9790 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9791 = stablehlo.add %9789, %9790 : tensor<768xf32>
    %9792 = stablehlo.divide %8669, %9791 : tensor<768xf32>
    %9793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9794 = stablehlo.add %9080, %9793 : tensor<768xf32>
    %9795 = stablehlo.sqrt %9794 : tensor<768xf32>
    %9796 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9797 = stablehlo.add %9795, %9796 : tensor<768xf32>
    %9798 = stablehlo.divide %8671, %9797 : tensor<768xf32>
    %9799 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9800 = stablehlo.add %9082, %9799 : tensor<3072x768xf32>
    %9801 = stablehlo.sqrt %9800 : tensor<3072x768xf32>
    %9802 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9803 = stablehlo.add %9801, %9802 : tensor<3072x768xf32>
    %9804 = stablehlo.divide %8673, %9803 : tensor<3072x768xf32>
    %9805 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9806 = stablehlo.add %9084, %9805 : tensor<768xf32>
    %9807 = stablehlo.sqrt %9806 : tensor<768xf32>
    %9808 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9809 = stablehlo.add %9807, %9808 : tensor<768xf32>
    %9810 = stablehlo.divide %8675, %9809 : tensor<768xf32>
    %9811 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9812 = stablehlo.add %9086, %9811 : tensor<768xf32>
    %9813 = stablehlo.sqrt %9812 : tensor<768xf32>
    %9814 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9815 = stablehlo.add %9813, %9814 : tensor<768xf32>
    %9816 = stablehlo.divide %8677, %9815 : tensor<768xf32>
    %9817 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9818 = stablehlo.add %9088, %9817 : tensor<3072xf32>
    %9819 = stablehlo.sqrt %9818 : tensor<3072xf32>
    %9820 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9821 = stablehlo.add %9819, %9820 : tensor<3072xf32>
    %9822 = stablehlo.divide %8679, %9821 : tensor<3072xf32>
    %9823 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9824 = stablehlo.add %9090, %9823 : tensor<768x3072xf32>
    %9825 = stablehlo.sqrt %9824 : tensor<768x3072xf32>
    %9826 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9827 = stablehlo.add %9825, %9826 : tensor<768x3072xf32>
    %9828 = stablehlo.divide %8681, %9827 : tensor<768x3072xf32>
    %9829 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9830 = stablehlo.add %9092, %9829 : tensor<768xf32>
    %9831 = stablehlo.sqrt %9830 : tensor<768xf32>
    %9832 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9833 = stablehlo.add %9831, %9832 : tensor<768xf32>
    %9834 = stablehlo.divide %8683, %9833 : tensor<768xf32>
    %9835 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9836 = stablehlo.add %9094, %9835 : tensor<768x768xf32>
    %9837 = stablehlo.sqrt %9836 : tensor<768x768xf32>
    %9838 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9839 = stablehlo.add %9837, %9838 : tensor<768x768xf32>
    %9840 = stablehlo.divide %8685, %9839 : tensor<768x768xf32>
    %9841 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9842 = stablehlo.add %9096, %9841 : tensor<768xf32>
    %9843 = stablehlo.sqrt %9842 : tensor<768xf32>
    %9844 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9845 = stablehlo.add %9843, %9844 : tensor<768xf32>
    %9846 = stablehlo.divide %8687, %9845 : tensor<768xf32>
    %9847 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9848 = stablehlo.add %9098, %9847 : tensor<768x768xf32>
    %9849 = stablehlo.sqrt %9848 : tensor<768x768xf32>
    %9850 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9851 = stablehlo.add %9849, %9850 : tensor<768x768xf32>
    %9852 = stablehlo.divide %8689, %9851 : tensor<768x768xf32>
    %9853 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9854 = stablehlo.add %9100, %9853 : tensor<768xf32>
    %9855 = stablehlo.sqrt %9854 : tensor<768xf32>
    %9856 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9857 = stablehlo.add %9855, %9856 : tensor<768xf32>
    %9858 = stablehlo.divide %8691, %9857 : tensor<768xf32>
    %9859 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9860 = stablehlo.add %9102, %9859 : tensor<768x768xf32>
    %9861 = stablehlo.sqrt %9860 : tensor<768x768xf32>
    %9862 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9863 = stablehlo.add %9861, %9862 : tensor<768x768xf32>
    %9864 = stablehlo.divide %8693, %9863 : tensor<768x768xf32>
    %9865 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9866 = stablehlo.add %9104, %9865 : tensor<768xf32>
    %9867 = stablehlo.sqrt %9866 : tensor<768xf32>
    %9868 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9869 = stablehlo.add %9867, %9868 : tensor<768xf32>
    %9870 = stablehlo.divide %8695, %9869 : tensor<768xf32>
    %9871 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9872 = stablehlo.add %9106, %9871 : tensor<768x768xf32>
    %9873 = stablehlo.sqrt %9872 : tensor<768x768xf32>
    %9874 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9875 = stablehlo.add %9873, %9874 : tensor<768x768xf32>
    %9876 = stablehlo.divide %8697, %9875 : tensor<768x768xf32>
    %9877 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9878 = stablehlo.add %9108, %9877 : tensor<768xf32>
    %9879 = stablehlo.sqrt %9878 : tensor<768xf32>
    %9880 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9881 = stablehlo.add %9879, %9880 : tensor<768xf32>
    %9882 = stablehlo.divide %8699, %9881 : tensor<768xf32>
    %9883 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9884 = stablehlo.add %9110, %9883 : tensor<768xf32>
    %9885 = stablehlo.sqrt %9884 : tensor<768xf32>
    %9886 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9887 = stablehlo.add %9885, %9886 : tensor<768xf32>
    %9888 = stablehlo.divide %8701, %9887 : tensor<768xf32>
    %9889 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9890 = stablehlo.add %9112, %9889 : tensor<768xf32>
    %9891 = stablehlo.sqrt %9890 : tensor<768xf32>
    %9892 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9893 = stablehlo.add %9891, %9892 : tensor<768xf32>
    %9894 = stablehlo.divide %8703, %9893 : tensor<768xf32>
    %9895 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9896 = stablehlo.add %9114, %9895 : tensor<3072x768xf32>
    %9897 = stablehlo.sqrt %9896 : tensor<3072x768xf32>
    %9898 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9899 = stablehlo.add %9897, %9898 : tensor<3072x768xf32>
    %9900 = stablehlo.divide %8705, %9899 : tensor<3072x768xf32>
    %9901 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9902 = stablehlo.add %9116, %9901 : tensor<768xf32>
    %9903 = stablehlo.sqrt %9902 : tensor<768xf32>
    %9904 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9905 = stablehlo.add %9903, %9904 : tensor<768xf32>
    %9906 = stablehlo.divide %8707, %9905 : tensor<768xf32>
    %9907 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9908 = stablehlo.add %9118, %9907 : tensor<768xf32>
    %9909 = stablehlo.sqrt %9908 : tensor<768xf32>
    %9910 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9911 = stablehlo.add %9909, %9910 : tensor<768xf32>
    %9912 = stablehlo.divide %8709, %9911 : tensor<768xf32>
    %9913 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9914 = stablehlo.add %9120, %9913 : tensor<3072xf32>
    %9915 = stablehlo.sqrt %9914 : tensor<3072xf32>
    %9916 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9917 = stablehlo.add %9915, %9916 : tensor<3072xf32>
    %9918 = stablehlo.divide %8711, %9917 : tensor<3072xf32>
    %9919 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9920 = stablehlo.add %9122, %9919 : tensor<768x3072xf32>
    %9921 = stablehlo.sqrt %9920 : tensor<768x3072xf32>
    %9922 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9923 = stablehlo.add %9921, %9922 : tensor<768x3072xf32>
    %9924 = stablehlo.divide %8713, %9923 : tensor<768x3072xf32>
    %9925 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9926 = stablehlo.add %9124, %9925 : tensor<768xf32>
    %9927 = stablehlo.sqrt %9926 : tensor<768xf32>
    %9928 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9929 = stablehlo.add %9927, %9928 : tensor<768xf32>
    %9930 = stablehlo.divide %8715, %9929 : tensor<768xf32>
    %9931 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9932 = stablehlo.add %9126, %9931 : tensor<768x768xf32>
    %9933 = stablehlo.sqrt %9932 : tensor<768x768xf32>
    %9934 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9935 = stablehlo.add %9933, %9934 : tensor<768x768xf32>
    %9936 = stablehlo.divide %8717, %9935 : tensor<768x768xf32>
    %9937 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9938 = stablehlo.add %9128, %9937 : tensor<768xf32>
    %9939 = stablehlo.sqrt %9938 : tensor<768xf32>
    %9940 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9941 = stablehlo.add %9939, %9940 : tensor<768xf32>
    %9942 = stablehlo.divide %8719, %9941 : tensor<768xf32>
    %9943 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9944 = stablehlo.add %9130, %9943 : tensor<768x768xf32>
    %9945 = stablehlo.sqrt %9944 : tensor<768x768xf32>
    %9946 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9947 = stablehlo.add %9945, %9946 : tensor<768x768xf32>
    %9948 = stablehlo.divide %8721, %9947 : tensor<768x768xf32>
    %9949 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9950 = stablehlo.add %9132, %9949 : tensor<768xf32>
    %9951 = stablehlo.sqrt %9950 : tensor<768xf32>
    %9952 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9953 = stablehlo.add %9951, %9952 : tensor<768xf32>
    %9954 = stablehlo.divide %8723, %9953 : tensor<768xf32>
    %9955 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9956 = stablehlo.add %9134, %9955 : tensor<768x768xf32>
    %9957 = stablehlo.sqrt %9956 : tensor<768x768xf32>
    %9958 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9959 = stablehlo.add %9957, %9958 : tensor<768x768xf32>
    %9960 = stablehlo.divide %8725, %9959 : tensor<768x768xf32>
    %9961 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9962 = stablehlo.add %9136, %9961 : tensor<768xf32>
    %9963 = stablehlo.sqrt %9962 : tensor<768xf32>
    %9964 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9965 = stablehlo.add %9963, %9964 : tensor<768xf32>
    %9966 = stablehlo.divide %8727, %9965 : tensor<768xf32>
    %9967 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9968 = stablehlo.add %9138, %9967 : tensor<768x768xf32>
    %9969 = stablehlo.sqrt %9968 : tensor<768x768xf32>
    %9970 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9971 = stablehlo.add %9969, %9970 : tensor<768x768xf32>
    %9972 = stablehlo.divide %8729, %9971 : tensor<768x768xf32>
    %9973 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9974 = stablehlo.add %9140, %9973 : tensor<768xf32>
    %9975 = stablehlo.sqrt %9974 : tensor<768xf32>
    %9976 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9977 = stablehlo.add %9975, %9976 : tensor<768xf32>
    %9978 = stablehlo.divide %8731, %9977 : tensor<768xf32>
    %9979 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9980 = stablehlo.add %9142, %9979 : tensor<768xf32>
    %9981 = stablehlo.sqrt %9980 : tensor<768xf32>
    %9982 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9983 = stablehlo.add %9981, %9982 : tensor<768xf32>
    %9984 = stablehlo.divide %8733, %9983 : tensor<768xf32>
    %9985 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9986 = stablehlo.add %9144, %9985 : tensor<768xf32>
    %9987 = stablehlo.sqrt %9986 : tensor<768xf32>
    %9988 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9989 = stablehlo.add %9987, %9988 : tensor<768xf32>
    %9990 = stablehlo.divide %8735, %9989 : tensor<768xf32>
    %9991 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9992 = stablehlo.add %9146, %9991 : tensor<3072x768xf32>
    %9993 = stablehlo.sqrt %9992 : tensor<3072x768xf32>
    %9994 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9995 = stablehlo.add %9993, %9994 : tensor<3072x768xf32>
    %9996 = stablehlo.divide %8737, %9995 : tensor<3072x768xf32>
    %9997 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9998 = stablehlo.add %9148, %9997 : tensor<768xf32>
    %9999 = stablehlo.sqrt %9998 : tensor<768xf32>
    %10000 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10001 = stablehlo.add %9999, %10000 : tensor<768xf32>
    %10002 = stablehlo.divide %8739, %10001 : tensor<768xf32>
    %10003 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10004 = stablehlo.add %9150, %10003 : tensor<768xf32>
    %10005 = stablehlo.sqrt %10004 : tensor<768xf32>
    %10006 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10007 = stablehlo.add %10005, %10006 : tensor<768xf32>
    %10008 = stablehlo.divide %8741, %10007 : tensor<768xf32>
    %10009 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10010 = stablehlo.add %9152, %10009 : tensor<3072xf32>
    %10011 = stablehlo.sqrt %10010 : tensor<3072xf32>
    %10012 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10013 = stablehlo.add %10011, %10012 : tensor<3072xf32>
    %10014 = stablehlo.divide %8743, %10013 : tensor<3072xf32>
    %10015 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10016 = stablehlo.add %9154, %10015 : tensor<768x3072xf32>
    %10017 = stablehlo.sqrt %10016 : tensor<768x3072xf32>
    %10018 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10019 = stablehlo.add %10017, %10018 : tensor<768x3072xf32>
    %10020 = stablehlo.divide %8745, %10019 : tensor<768x3072xf32>
    %10021 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10022 = stablehlo.add %9156, %10021 : tensor<768xf32>
    %10023 = stablehlo.sqrt %10022 : tensor<768xf32>
    %10024 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10025 = stablehlo.add %10023, %10024 : tensor<768xf32>
    %10026 = stablehlo.divide %8747, %10025 : tensor<768xf32>
    %10027 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10028 = stablehlo.add %9158, %10027 : tensor<768x768xf32>
    %10029 = stablehlo.sqrt %10028 : tensor<768x768xf32>
    %10030 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10031 = stablehlo.add %10029, %10030 : tensor<768x768xf32>
    %10032 = stablehlo.divide %8749, %10031 : tensor<768x768xf32>
    %10033 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10034 = stablehlo.add %9160, %10033 : tensor<768xf32>
    %10035 = stablehlo.sqrt %10034 : tensor<768xf32>
    %10036 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10037 = stablehlo.add %10035, %10036 : tensor<768xf32>
    %10038 = stablehlo.divide %8751, %10037 : tensor<768xf32>
    %10039 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10040 = stablehlo.add %9162, %10039 : tensor<768x768xf32>
    %10041 = stablehlo.sqrt %10040 : tensor<768x768xf32>
    %10042 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10043 = stablehlo.add %10041, %10042 : tensor<768x768xf32>
    %10044 = stablehlo.divide %8753, %10043 : tensor<768x768xf32>
    %10045 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10046 = stablehlo.add %9164, %10045 : tensor<768xf32>
    %10047 = stablehlo.sqrt %10046 : tensor<768xf32>
    %10048 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10049 = stablehlo.add %10047, %10048 : tensor<768xf32>
    %10050 = stablehlo.divide %8755, %10049 : tensor<768xf32>
    %10051 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10052 = stablehlo.add %9166, %10051 : tensor<768x768xf32>
    %10053 = stablehlo.sqrt %10052 : tensor<768x768xf32>
    %10054 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10055 = stablehlo.add %10053, %10054 : tensor<768x768xf32>
    %10056 = stablehlo.divide %8757, %10055 : tensor<768x768xf32>
    %10057 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10058 = stablehlo.add %9168, %10057 : tensor<768xf32>
    %10059 = stablehlo.sqrt %10058 : tensor<768xf32>
    %10060 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10061 = stablehlo.add %10059, %10060 : tensor<768xf32>
    %10062 = stablehlo.divide %8759, %10061 : tensor<768xf32>
    %10063 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10064 = stablehlo.add %9170, %10063 : tensor<768x768xf32>
    %10065 = stablehlo.sqrt %10064 : tensor<768x768xf32>
    %10066 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10067 = stablehlo.add %10065, %10066 : tensor<768x768xf32>
    %10068 = stablehlo.divide %8761, %10067 : tensor<768x768xf32>
    %10069 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10070 = stablehlo.add %9172, %10069 : tensor<768xf32>
    %10071 = stablehlo.sqrt %10070 : tensor<768xf32>
    %10072 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10073 = stablehlo.add %10071, %10072 : tensor<768xf32>
    %10074 = stablehlo.divide %8763, %10073 : tensor<768xf32>
    %10075 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10076 = stablehlo.add %9174, %10075 : tensor<768xf32>
    %10077 = stablehlo.sqrt %10076 : tensor<768xf32>
    %10078 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10079 = stablehlo.add %10077, %10078 : tensor<768xf32>
    %10080 = stablehlo.divide %8765, %10079 : tensor<768xf32>
    %10081 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10082 = stablehlo.add %9176, %10081 : tensor<768xf32>
    %10083 = stablehlo.sqrt %10082 : tensor<768xf32>
    %10084 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10085 = stablehlo.add %10083, %10084 : tensor<768xf32>
    %10086 = stablehlo.divide %8767, %10085 : tensor<768xf32>
    %10087 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10088 = stablehlo.add %9178, %10087 : tensor<3072x768xf32>
    %10089 = stablehlo.sqrt %10088 : tensor<3072x768xf32>
    %10090 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10091 = stablehlo.add %10089, %10090 : tensor<3072x768xf32>
    %10092 = stablehlo.divide %8769, %10091 : tensor<3072x768xf32>
    %10093 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10094 = stablehlo.add %9180, %10093 : tensor<768xf32>
    %10095 = stablehlo.sqrt %10094 : tensor<768xf32>
    %10096 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10097 = stablehlo.add %10095, %10096 : tensor<768xf32>
    %10098 = stablehlo.divide %8771, %10097 : tensor<768xf32>
    %10099 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10100 = stablehlo.add %9182, %10099 : tensor<768xf32>
    %10101 = stablehlo.sqrt %10100 : tensor<768xf32>
    %10102 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10103 = stablehlo.add %10101, %10102 : tensor<768xf32>
    %10104 = stablehlo.divide %8773, %10103 : tensor<768xf32>
    %10105 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10106 = stablehlo.add %9184, %10105 : tensor<3072xf32>
    %10107 = stablehlo.sqrt %10106 : tensor<3072xf32>
    %10108 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10109 = stablehlo.add %10107, %10108 : tensor<3072xf32>
    %10110 = stablehlo.divide %8775, %10109 : tensor<3072xf32>
    %10111 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10112 = stablehlo.add %9186, %10111 : tensor<768x3072xf32>
    %10113 = stablehlo.sqrt %10112 : tensor<768x3072xf32>
    %10114 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10115 = stablehlo.add %10113, %10114 : tensor<768x3072xf32>
    %10116 = stablehlo.divide %8777, %10115 : tensor<768x3072xf32>
    %10117 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10118 = stablehlo.add %9188, %10117 : tensor<768xf32>
    %10119 = stablehlo.sqrt %10118 : tensor<768xf32>
    %10120 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10121 = stablehlo.add %10119, %10120 : tensor<768xf32>
    %10122 = stablehlo.divide %8779, %10121 : tensor<768xf32>
    %10123 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10124 = stablehlo.add %9190, %10123 : tensor<768x768xf32>
    %10125 = stablehlo.sqrt %10124 : tensor<768x768xf32>
    %10126 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10127 = stablehlo.add %10125, %10126 : tensor<768x768xf32>
    %10128 = stablehlo.divide %8781, %10127 : tensor<768x768xf32>
    %10129 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10130 = stablehlo.add %9192, %10129 : tensor<768xf32>
    %10131 = stablehlo.sqrt %10130 : tensor<768xf32>
    %10132 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10133 = stablehlo.add %10131, %10132 : tensor<768xf32>
    %10134 = stablehlo.divide %8783, %10133 : tensor<768xf32>
    %10135 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10136 = stablehlo.add %9194, %10135 : tensor<768x768xf32>
    %10137 = stablehlo.sqrt %10136 : tensor<768x768xf32>
    %10138 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10139 = stablehlo.add %10137, %10138 : tensor<768x768xf32>
    %10140 = stablehlo.divide %8785, %10139 : tensor<768x768xf32>
    %10141 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10142 = stablehlo.add %9196, %10141 : tensor<768xf32>
    %10143 = stablehlo.sqrt %10142 : tensor<768xf32>
    %10144 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10145 = stablehlo.add %10143, %10144 : tensor<768xf32>
    %10146 = stablehlo.divide %8787, %10145 : tensor<768xf32>
    %10147 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10148 = stablehlo.add %9198, %10147 : tensor<768x768xf32>
    %10149 = stablehlo.sqrt %10148 : tensor<768x768xf32>
    %10150 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10151 = stablehlo.add %10149, %10150 : tensor<768x768xf32>
    %10152 = stablehlo.divide %8789, %10151 : tensor<768x768xf32>
    %10153 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10154 = stablehlo.add %9200, %10153 : tensor<768xf32>
    %10155 = stablehlo.sqrt %10154 : tensor<768xf32>
    %10156 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10157 = stablehlo.add %10155, %10156 : tensor<768xf32>
    %10158 = stablehlo.divide %8791, %10157 : tensor<768xf32>
    %10159 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10160 = stablehlo.add %9202, %10159 : tensor<768x768xf32>
    %10161 = stablehlo.sqrt %10160 : tensor<768x768xf32>
    %10162 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10163 = stablehlo.add %10161, %10162 : tensor<768x768xf32>
    %10164 = stablehlo.divide %8793, %10163 : tensor<768x768xf32>
    %10165 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10166 = stablehlo.add %9204, %10165 : tensor<768xf32>
    %10167 = stablehlo.sqrt %10166 : tensor<768xf32>
    %10168 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10169 = stablehlo.add %10167, %10168 : tensor<768xf32>
    %10170 = stablehlo.divide %8795, %10169 : tensor<768xf32>
    %10171 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10172 = stablehlo.add %9206, %10171 : tensor<768xf32>
    %10173 = stablehlo.sqrt %10172 : tensor<768xf32>
    %10174 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10175 = stablehlo.add %10173, %10174 : tensor<768xf32>
    %10176 = stablehlo.divide %8797, %10175 : tensor<768xf32>
    %10177 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10178 = stablehlo.add %9208, %10177 : tensor<768xf32>
    %10179 = stablehlo.sqrt %10178 : tensor<768xf32>
    %10180 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10181 = stablehlo.add %10179, %10180 : tensor<768xf32>
    %10182 = stablehlo.divide %8799, %10181 : tensor<768xf32>
    %10183 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10184 = stablehlo.add %9210, %10183 : tensor<3072x768xf32>
    %10185 = stablehlo.sqrt %10184 : tensor<3072x768xf32>
    %10186 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10187 = stablehlo.add %10185, %10186 : tensor<3072x768xf32>
    %10188 = stablehlo.divide %8801, %10187 : tensor<3072x768xf32>
    %10189 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10190 = stablehlo.add %9212, %10189 : tensor<768xf32>
    %10191 = stablehlo.sqrt %10190 : tensor<768xf32>
    %10192 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10193 = stablehlo.add %10191, %10192 : tensor<768xf32>
    %10194 = stablehlo.divide %8803, %10193 : tensor<768xf32>
    %10195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10196 = stablehlo.add %9214, %10195 : tensor<768xf32>
    %10197 = stablehlo.sqrt %10196 : tensor<768xf32>
    %10198 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10199 = stablehlo.add %10197, %10198 : tensor<768xf32>
    %10200 = stablehlo.divide %8805, %10199 : tensor<768xf32>
    %10201 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10202 = stablehlo.add %9216, %10201 : tensor<3072xf32>
    %10203 = stablehlo.sqrt %10202 : tensor<3072xf32>
    %10204 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10205 = stablehlo.add %10203, %10204 : tensor<3072xf32>
    %10206 = stablehlo.divide %8807, %10205 : tensor<3072xf32>
    %10207 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10208 = stablehlo.add %9218, %10207 : tensor<768x3072xf32>
    %10209 = stablehlo.sqrt %10208 : tensor<768x3072xf32>
    %10210 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10211 = stablehlo.add %10209, %10210 : tensor<768x3072xf32>
    %10212 = stablehlo.divide %8809, %10211 : tensor<768x3072xf32>
    %10213 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10214 = stablehlo.add %9220, %10213 : tensor<768xf32>
    %10215 = stablehlo.sqrt %10214 : tensor<768xf32>
    %10216 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10217 = stablehlo.add %10215, %10216 : tensor<768xf32>
    %10218 = stablehlo.divide %8811, %10217 : tensor<768xf32>
    %10219 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10220 = stablehlo.add %9222, %10219 : tensor<768x768xf32>
    %10221 = stablehlo.sqrt %10220 : tensor<768x768xf32>
    %10222 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10223 = stablehlo.add %10221, %10222 : tensor<768x768xf32>
    %10224 = stablehlo.divide %8813, %10223 : tensor<768x768xf32>
    %10225 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10226 = stablehlo.add %9224, %10225 : tensor<768xf32>
    %10227 = stablehlo.sqrt %10226 : tensor<768xf32>
    %10228 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10229 = stablehlo.add %10227, %10228 : tensor<768xf32>
    %10230 = stablehlo.divide %8815, %10229 : tensor<768xf32>
    %10231 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10232 = stablehlo.add %9226, %10231 : tensor<768x768xf32>
    %10233 = stablehlo.sqrt %10232 : tensor<768x768xf32>
    %10234 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10235 = stablehlo.add %10233, %10234 : tensor<768x768xf32>
    %10236 = stablehlo.divide %8817, %10235 : tensor<768x768xf32>
    %10237 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10238 = stablehlo.add %9228, %10237 : tensor<768xf32>
    %10239 = stablehlo.sqrt %10238 : tensor<768xf32>
    %10240 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10241 = stablehlo.add %10239, %10240 : tensor<768xf32>
    %10242 = stablehlo.divide %8819, %10241 : tensor<768xf32>
    %10243 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10244 = stablehlo.add %9230, %10243 : tensor<768x768xf32>
    %10245 = stablehlo.sqrt %10244 : tensor<768x768xf32>
    %10246 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10247 = stablehlo.add %10245, %10246 : tensor<768x768xf32>
    %10248 = stablehlo.divide %8821, %10247 : tensor<768x768xf32>
    %10249 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10250 = stablehlo.add %9232, %10249 : tensor<768xf32>
    %10251 = stablehlo.sqrt %10250 : tensor<768xf32>
    %10252 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10253 = stablehlo.add %10251, %10252 : tensor<768xf32>
    %10254 = stablehlo.divide %8823, %10253 : tensor<768xf32>
    %10255 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10256 = stablehlo.add %9234, %10255 : tensor<768x768xf32>
    %10257 = stablehlo.sqrt %10256 : tensor<768x768xf32>
    %10258 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10259 = stablehlo.add %10257, %10258 : tensor<768x768xf32>
    %10260 = stablehlo.divide %8825, %10259 : tensor<768x768xf32>
    %10261 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10262 = stablehlo.add %9236, %10261 : tensor<768xf32>
    %10263 = stablehlo.sqrt %10262 : tensor<768xf32>
    %10264 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10265 = stablehlo.add %10263, %10264 : tensor<768xf32>
    %10266 = stablehlo.divide %8827, %10265 : tensor<768xf32>
    %10267 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10268 = stablehlo.add %9238, %10267 : tensor<768xf32>
    %10269 = stablehlo.sqrt %10268 : tensor<768xf32>
    %10270 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10271 = stablehlo.add %10269, %10270 : tensor<768xf32>
    %10272 = stablehlo.divide %8829, %10271 : tensor<768xf32>
    %10273 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10274 = stablehlo.add %9240, %10273 : tensor<768xf32>
    %10275 = stablehlo.sqrt %10274 : tensor<768xf32>
    %10276 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10277 = stablehlo.add %10275, %10276 : tensor<768xf32>
    %10278 = stablehlo.divide %8831, %10277 : tensor<768xf32>
    %10279 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10280 = stablehlo.add %9242, %10279 : tensor<3072x768xf32>
    %10281 = stablehlo.sqrt %10280 : tensor<3072x768xf32>
    %10282 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10283 = stablehlo.add %10281, %10282 : tensor<3072x768xf32>
    %10284 = stablehlo.divide %8833, %10283 : tensor<3072x768xf32>
    %10285 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10286 = stablehlo.add %9244, %10285 : tensor<768xf32>
    %10287 = stablehlo.sqrt %10286 : tensor<768xf32>
    %10288 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10289 = stablehlo.add %10287, %10288 : tensor<768xf32>
    %10290 = stablehlo.divide %8835, %10289 : tensor<768xf32>
    %10291 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10292 = stablehlo.add %9246, %10291 : tensor<768xf32>
    %10293 = stablehlo.sqrt %10292 : tensor<768xf32>
    %10294 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10295 = stablehlo.add %10293, %10294 : tensor<768xf32>
    %10296 = stablehlo.divide %8837, %10295 : tensor<768xf32>
    %10297 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10298 = stablehlo.add %9248, %10297 : tensor<3072xf32>
    %10299 = stablehlo.sqrt %10298 : tensor<3072xf32>
    %10300 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10301 = stablehlo.add %10299, %10300 : tensor<3072xf32>
    %10302 = stablehlo.divide %8839, %10301 : tensor<3072xf32>
    %10303 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10304 = stablehlo.add %9250, %10303 : tensor<768x3072xf32>
    %10305 = stablehlo.sqrt %10304 : tensor<768x3072xf32>
    %10306 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10307 = stablehlo.add %10305, %10306 : tensor<768x3072xf32>
    %10308 = stablehlo.divide %8841, %10307 : tensor<768x3072xf32>
    %10309 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10310 = stablehlo.add %9252, %10309 : tensor<768xf32>
    %10311 = stablehlo.sqrt %10310 : tensor<768xf32>
    %10312 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10313 = stablehlo.add %10311, %10312 : tensor<768xf32>
    %10314 = stablehlo.divide %8843, %10313 : tensor<768xf32>
    %10315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10316 = stablehlo.add %9254, %10315 : tensor<768x768xf32>
    %10317 = stablehlo.sqrt %10316 : tensor<768x768xf32>
    %10318 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10319 = stablehlo.add %10317, %10318 : tensor<768x768xf32>
    %10320 = stablehlo.divide %8845, %10319 : tensor<768x768xf32>
    %10321 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10322 = stablehlo.add %9256, %10321 : tensor<768xf32>
    %10323 = stablehlo.sqrt %10322 : tensor<768xf32>
    %10324 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10325 = stablehlo.add %10323, %10324 : tensor<768xf32>
    %10326 = stablehlo.divide %8847, %10325 : tensor<768xf32>
    %10327 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10328 = stablehlo.add %9258, %10327 : tensor<768x768xf32>
    %10329 = stablehlo.sqrt %10328 : tensor<768x768xf32>
    %10330 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10331 = stablehlo.add %10329, %10330 : tensor<768x768xf32>
    %10332 = stablehlo.divide %8849, %10331 : tensor<768x768xf32>
    %10333 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10334 = stablehlo.add %9260, %10333 : tensor<768xf32>
    %10335 = stablehlo.sqrt %10334 : tensor<768xf32>
    %10336 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10337 = stablehlo.add %10335, %10336 : tensor<768xf32>
    %10338 = stablehlo.divide %8851, %10337 : tensor<768xf32>
    %10339 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10340 = stablehlo.add %9262, %10339 : tensor<768x768xf32>
    %10341 = stablehlo.sqrt %10340 : tensor<768x768xf32>
    %10342 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10343 = stablehlo.add %10341, %10342 : tensor<768x768xf32>
    %10344 = stablehlo.divide %8853, %10343 : tensor<768x768xf32>
    %10345 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10346 = stablehlo.add %9264, %10345 : tensor<768xf32>
    %10347 = stablehlo.sqrt %10346 : tensor<768xf32>
    %10348 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10349 = stablehlo.add %10347, %10348 : tensor<768xf32>
    %10350 = stablehlo.divide %8855, %10349 : tensor<768xf32>
    %10351 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10352 = stablehlo.add %9266, %10351 : tensor<768x768xf32>
    %10353 = stablehlo.sqrt %10352 : tensor<768x768xf32>
    %10354 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10355 = stablehlo.add %10353, %10354 : tensor<768x768xf32>
    %10356 = stablehlo.divide %8857, %10355 : tensor<768x768xf32>
    %10357 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10358 = stablehlo.add %9268, %10357 : tensor<768xf32>
    %10359 = stablehlo.sqrt %10358 : tensor<768xf32>
    %10360 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10361 = stablehlo.add %10359, %10360 : tensor<768xf32>
    %10362 = stablehlo.divide %8859, %10361 : tensor<768xf32>
    %10363 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10364 = stablehlo.add %9270, %10363 : tensor<768xf32>
    %10365 = stablehlo.sqrt %10364 : tensor<768xf32>
    %10366 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10367 = stablehlo.add %10365, %10366 : tensor<768xf32>
    %10368 = stablehlo.divide %8861, %10367 : tensor<768xf32>
    %10369 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10370 = stablehlo.add %9272, %10369 : tensor<768xf32>
    %10371 = stablehlo.sqrt %10370 : tensor<768xf32>
    %10372 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10373 = stablehlo.add %10371, %10372 : tensor<768xf32>
    %10374 = stablehlo.divide %8863, %10373 : tensor<768xf32>
    %10375 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10376 = stablehlo.add %9274, %10375 : tensor<3072x768xf32>
    %10377 = stablehlo.sqrt %10376 : tensor<3072x768xf32>
    %10378 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10379 = stablehlo.add %10377, %10378 : tensor<3072x768xf32>
    %10380 = stablehlo.divide %8865, %10379 : tensor<3072x768xf32>
    %10381 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10382 = stablehlo.add %9276, %10381 : tensor<768xf32>
    %10383 = stablehlo.sqrt %10382 : tensor<768xf32>
    %10384 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10385 = stablehlo.add %10383, %10384 : tensor<768xf32>
    %10386 = stablehlo.divide %8867, %10385 : tensor<768xf32>
    %10387 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10388 = stablehlo.add %9278, %10387 : tensor<768xf32>
    %10389 = stablehlo.sqrt %10388 : tensor<768xf32>
    %10390 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10391 = stablehlo.add %10389, %10390 : tensor<768xf32>
    %10392 = stablehlo.divide %8869, %10391 : tensor<768xf32>
    %10393 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10394 = stablehlo.add %9280, %10393 : tensor<3072xf32>
    %10395 = stablehlo.sqrt %10394 : tensor<3072xf32>
    %10396 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10397 = stablehlo.add %10395, %10396 : tensor<3072xf32>
    %10398 = stablehlo.divide %8871, %10397 : tensor<3072xf32>
    %10399 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10400 = stablehlo.add %9282, %10399 : tensor<768x3072xf32>
    %10401 = stablehlo.sqrt %10400 : tensor<768x3072xf32>
    %10402 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10403 = stablehlo.add %10401, %10402 : tensor<768x3072xf32>
    %10404 = stablehlo.divide %8873, %10403 : tensor<768x3072xf32>
    %10405 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10406 = stablehlo.add %9284, %10405 : tensor<768xf32>
    %10407 = stablehlo.sqrt %10406 : tensor<768xf32>
    %10408 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10409 = stablehlo.add %10407, %10408 : tensor<768xf32>
    %10410 = stablehlo.divide %8875, %10409 : tensor<768xf32>
    %10411 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10412 = stablehlo.add %9286, %10411 : tensor<768x768xf32>
    %10413 = stablehlo.sqrt %10412 : tensor<768x768xf32>
    %10414 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10415 = stablehlo.add %10413, %10414 : tensor<768x768xf32>
    %10416 = stablehlo.divide %8877, %10415 : tensor<768x768xf32>
    %10417 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10418 = stablehlo.add %9288, %10417 : tensor<768xf32>
    %10419 = stablehlo.sqrt %10418 : tensor<768xf32>
    %10420 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10421 = stablehlo.add %10419, %10420 : tensor<768xf32>
    %10422 = stablehlo.divide %8879, %10421 : tensor<768xf32>
    %10423 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10424 = stablehlo.add %9290, %10423 : tensor<768x768xf32>
    %10425 = stablehlo.sqrt %10424 : tensor<768x768xf32>
    %10426 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10427 = stablehlo.add %10425, %10426 : tensor<768x768xf32>
    %10428 = stablehlo.divide %8881, %10427 : tensor<768x768xf32>
    %10429 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10430 = stablehlo.add %9292, %10429 : tensor<768xf32>
    %10431 = stablehlo.sqrt %10430 : tensor<768xf32>
    %10432 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10433 = stablehlo.add %10431, %10432 : tensor<768xf32>
    %10434 = stablehlo.divide %8883, %10433 : tensor<768xf32>
    %10435 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10436 = stablehlo.add %9294, %10435 : tensor<768x768xf32>
    %10437 = stablehlo.sqrt %10436 : tensor<768x768xf32>
    %10438 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10439 = stablehlo.add %10437, %10438 : tensor<768x768xf32>
    %10440 = stablehlo.divide %8885, %10439 : tensor<768x768xf32>
    %10441 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10442 = stablehlo.add %9296, %10441 : tensor<768xf32>
    %10443 = stablehlo.sqrt %10442 : tensor<768xf32>
    %10444 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10445 = stablehlo.add %10443, %10444 : tensor<768xf32>
    %10446 = stablehlo.divide %8887, %10445 : tensor<768xf32>
    %10447 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10448 = stablehlo.add %9298, %10447 : tensor<768x768xf32>
    %10449 = stablehlo.sqrt %10448 : tensor<768x768xf32>
    %10450 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10451 = stablehlo.add %10449, %10450 : tensor<768x768xf32>
    %10452 = stablehlo.divide %8889, %10451 : tensor<768x768xf32>
    %10453 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10454 = stablehlo.add %9300, %10453 : tensor<768xf32>
    %10455 = stablehlo.sqrt %10454 : tensor<768xf32>
    %10456 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10457 = stablehlo.add %10455, %10456 : tensor<768xf32>
    %10458 = stablehlo.divide %8891, %10457 : tensor<768xf32>
    %10459 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10460 = stablehlo.add %9302, %10459 : tensor<768xf32>
    %10461 = stablehlo.sqrt %10460 : tensor<768xf32>
    %10462 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10463 = stablehlo.add %10461, %10462 : tensor<768xf32>
    %10464 = stablehlo.divide %8893, %10463 : tensor<768xf32>
    %10465 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10466 = stablehlo.add %9304, %10465 : tensor<768xf32>
    %10467 = stablehlo.sqrt %10466 : tensor<768xf32>
    %10468 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10469 = stablehlo.add %10467, %10468 : tensor<768xf32>
    %10470 = stablehlo.divide %8895, %10469 : tensor<768xf32>
    %10471 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10472 = stablehlo.add %9306, %10471 : tensor<3072x768xf32>
    %10473 = stablehlo.sqrt %10472 : tensor<3072x768xf32>
    %10474 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10475 = stablehlo.add %10473, %10474 : tensor<3072x768xf32>
    %10476 = stablehlo.divide %8897, %10475 : tensor<3072x768xf32>
    %10477 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10478 = stablehlo.add %9308, %10477 : tensor<768xf32>
    %10479 = stablehlo.sqrt %10478 : tensor<768xf32>
    %10480 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10481 = stablehlo.add %10479, %10480 : tensor<768xf32>
    %10482 = stablehlo.divide %8899, %10481 : tensor<768xf32>
    %10483 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10484 = stablehlo.add %9310, %10483 : tensor<768xf32>
    %10485 = stablehlo.sqrt %10484 : tensor<768xf32>
    %10486 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10487 = stablehlo.add %10485, %10486 : tensor<768xf32>
    %10488 = stablehlo.divide %8901, %10487 : tensor<768xf32>
    %10489 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10490 = stablehlo.add %9312, %10489 : tensor<3072xf32>
    %10491 = stablehlo.sqrt %10490 : tensor<3072xf32>
    %10492 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10493 = stablehlo.add %10491, %10492 : tensor<3072xf32>
    %10494 = stablehlo.divide %8903, %10493 : tensor<3072xf32>
    %10495 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10496 = stablehlo.add %9314, %10495 : tensor<768x3072xf32>
    %10497 = stablehlo.sqrt %10496 : tensor<768x3072xf32>
    %10498 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10499 = stablehlo.add %10497, %10498 : tensor<768x3072xf32>
    %10500 = stablehlo.divide %8905, %10499 : tensor<768x3072xf32>
    %10501 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10502 = stablehlo.add %9316, %10501 : tensor<768xf32>
    %10503 = stablehlo.sqrt %10502 : tensor<768xf32>
    %10504 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10505 = stablehlo.add %10503, %10504 : tensor<768xf32>
    %10506 = stablehlo.divide %8907, %10505 : tensor<768xf32>
    %10507 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10508 = stablehlo.add %9318, %10507 : tensor<768xf32>
    %10509 = stablehlo.sqrt %10508 : tensor<768xf32>
    %10510 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10511 = stablehlo.add %10509, %10510 : tensor<768xf32>
    %10512 = stablehlo.divide %8909, %10511 : tensor<768xf32>
    %10513 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10514 = stablehlo.add %9320, %10513 : tensor<30522xf32>
    %10515 = stablehlo.sqrt %10514 : tensor<30522xf32>
    %10516 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10517 = stablehlo.add %10515, %10516 : tensor<30522xf32>
    %10518 = stablehlo.divide %8911, %10517 : tensor<30522xf32>
    %10519 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10520 = stablehlo.add %9322, %10519 : tensor<768xf32>
    %10521 = stablehlo.sqrt %10520 : tensor<768xf32>
    %10522 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10523 = stablehlo.add %10521, %10522 : tensor<768xf32>
    %10524 = stablehlo.divide %8913, %10523 : tensor<768xf32>
    %10525 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10526 = stablehlo.add %9324, %10525 : tensor<768x768xf32>
    %10527 = stablehlo.sqrt %10526 : tensor<768x768xf32>
    %10528 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10529 = stablehlo.add %10527, %10528 : tensor<768x768xf32>
    %10530 = stablehlo.divide %8915, %10529 : tensor<768x768xf32>
    %10531 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10532 = stablehlo.add %9326, %10531 : tensor<30522x768xf32>
    %10533 = stablehlo.sqrt %10532 : tensor<30522x768xf32>
    %10534 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10535 = stablehlo.add %10533, %10534 : tensor<30522x768xf32>
    %10536 = stablehlo.divide %8917, %10535 : tensor<30522x768xf32>
    %10537 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10538 = stablehlo.add %9328, %10537 : tensor<768xf32>
    %10539 = stablehlo.sqrt %10538 : tensor<768xf32>
    %10540 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10541 = stablehlo.add %10539, %10540 : tensor<768xf32>
    %10542 = stablehlo.divide %8919, %10541 : tensor<768xf32>
    %10543 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10544 = stablehlo.add %9330, %10543 : tensor<768xf32>
    %10545 = stablehlo.sqrt %10544 : tensor<768xf32>
    %10546 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10547 = stablehlo.add %10545, %10546 : tensor<768xf32>
    %10548 = stablehlo.divide %8921, %10547 : tensor<768xf32>
    %cst_761 = stablehlo.constant dense<0.00999999977> : tensor<f32>
    %10549 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10550 = stablehlo.multiply %10549, %arg0 : tensor<512x768xf32>
    %10551 = stablehlo.add %9336, %10550 : tensor<512x768xf32>
    %10552 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10553 = stablehlo.multiply %10552, %arg1 : tensor<2x768xf32>
    %10554 = stablehlo.add %9342, %10553 : tensor<2x768xf32>
    %10555 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10556 = stablehlo.multiply %10555, %arg2 : tensor<30522x768xf32>
    %10557 = stablehlo.add %9348, %10556 : tensor<30522x768xf32>
    %10558 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10559 = stablehlo.multiply %10558, %arg3 : tensor<768xf32>
    %10560 = stablehlo.add %9354, %10559 : tensor<768xf32>
    %10561 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10562 = stablehlo.multiply %10561, %arg4 : tensor<768x768xf32>
    %10563 = stablehlo.add %9360, %10562 : tensor<768x768xf32>
    %10564 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10565 = stablehlo.multiply %10564, %arg5 : tensor<768xf32>
    %10566 = stablehlo.add %9366, %10565 : tensor<768xf32>
    %10567 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10568 = stablehlo.multiply %10567, %arg6 : tensor<768x768xf32>
    %10569 = stablehlo.add %9372, %10568 : tensor<768x768xf32>
    %10570 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10571 = stablehlo.multiply %10570, %arg7 : tensor<768xf32>
    %10572 = stablehlo.add %9378, %10571 : tensor<768xf32>
    %10573 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10574 = stablehlo.multiply %10573, %arg8 : tensor<768x768xf32>
    %10575 = stablehlo.add %9384, %10574 : tensor<768x768xf32>
    %10576 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10577 = stablehlo.multiply %10576, %arg9 : tensor<768xf32>
    %10578 = stablehlo.add %9390, %10577 : tensor<768xf32>
    %10579 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10580 = stablehlo.multiply %10579, %arg10 : tensor<768x768xf32>
    %10581 = stablehlo.add %9396, %10580 : tensor<768x768xf32>
    %10582 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10583 = stablehlo.multiply %10582, %arg11 : tensor<768xf32>
    %10584 = stablehlo.add %9402, %10583 : tensor<768xf32>
    %10585 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10586 = stablehlo.multiply %10585, %arg12 : tensor<768xf32>
    %10587 = stablehlo.add %9408, %10586 : tensor<768xf32>
    %10588 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10589 = stablehlo.multiply %10588, %arg13 : tensor<768xf32>
    %10590 = stablehlo.add %9414, %10589 : tensor<768xf32>
    %10591 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10592 = stablehlo.multiply %10591, %arg14 : tensor<3072x768xf32>
    %10593 = stablehlo.add %9420, %10592 : tensor<3072x768xf32>
    %10594 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10595 = stablehlo.multiply %10594, %arg15 : tensor<768xf32>
    %10596 = stablehlo.add %9426, %10595 : tensor<768xf32>
    %10597 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10598 = stablehlo.multiply %10597, %arg16 : tensor<768xf32>
    %10599 = stablehlo.add %9432, %10598 : tensor<768xf32>
    %10600 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10601 = stablehlo.multiply %10600, %arg17 : tensor<3072xf32>
    %10602 = stablehlo.add %9438, %10601 : tensor<3072xf32>
    %10603 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10604 = stablehlo.multiply %10603, %arg18 : tensor<768x3072xf32>
    %10605 = stablehlo.add %9444, %10604 : tensor<768x3072xf32>
    %10606 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10607 = stablehlo.multiply %10606, %arg19 : tensor<768xf32>
    %10608 = stablehlo.add %9450, %10607 : tensor<768xf32>
    %10609 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10610 = stablehlo.multiply %10609, %arg20 : tensor<768x768xf32>
    %10611 = stablehlo.add %9456, %10610 : tensor<768x768xf32>
    %10612 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10613 = stablehlo.multiply %10612, %arg21 : tensor<768xf32>
    %10614 = stablehlo.add %9462, %10613 : tensor<768xf32>
    %10615 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10616 = stablehlo.multiply %10615, %arg22 : tensor<768x768xf32>
    %10617 = stablehlo.add %9468, %10616 : tensor<768x768xf32>
    %10618 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10619 = stablehlo.multiply %10618, %arg23 : tensor<768xf32>
    %10620 = stablehlo.add %9474, %10619 : tensor<768xf32>
    %10621 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10622 = stablehlo.multiply %10621, %arg24 : tensor<768x768xf32>
    %10623 = stablehlo.add %9480, %10622 : tensor<768x768xf32>
    %10624 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10625 = stablehlo.multiply %10624, %arg25 : tensor<768xf32>
    %10626 = stablehlo.add %9486, %10625 : tensor<768xf32>
    %10627 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10628 = stablehlo.multiply %10627, %arg26 : tensor<768x768xf32>
    %10629 = stablehlo.add %9492, %10628 : tensor<768x768xf32>
    %10630 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10631 = stablehlo.multiply %10630, %arg27 : tensor<768xf32>
    %10632 = stablehlo.add %9498, %10631 : tensor<768xf32>
    %10633 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10634 = stablehlo.multiply %10633, %arg28 : tensor<768xf32>
    %10635 = stablehlo.add %9504, %10634 : tensor<768xf32>
    %10636 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10637 = stablehlo.multiply %10636, %arg29 : tensor<768xf32>
    %10638 = stablehlo.add %9510, %10637 : tensor<768xf32>
    %10639 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10640 = stablehlo.multiply %10639, %arg30 : tensor<3072x768xf32>
    %10641 = stablehlo.add %9516, %10640 : tensor<3072x768xf32>
    %10642 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10643 = stablehlo.multiply %10642, %arg31 : tensor<768xf32>
    %10644 = stablehlo.add %9522, %10643 : tensor<768xf32>
    %10645 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10646 = stablehlo.multiply %10645, %arg32 : tensor<768xf32>
    %10647 = stablehlo.add %9528, %10646 : tensor<768xf32>
    %10648 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10649 = stablehlo.multiply %10648, %arg33 : tensor<3072xf32>
    %10650 = stablehlo.add %9534, %10649 : tensor<3072xf32>
    %10651 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10652 = stablehlo.multiply %10651, %arg34 : tensor<768x3072xf32>
    %10653 = stablehlo.add %9540, %10652 : tensor<768x3072xf32>
    %10654 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10655 = stablehlo.multiply %10654, %arg35 : tensor<768xf32>
    %10656 = stablehlo.add %9546, %10655 : tensor<768xf32>
    %10657 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10658 = stablehlo.multiply %10657, %arg36 : tensor<768x768xf32>
    %10659 = stablehlo.add %9552, %10658 : tensor<768x768xf32>
    %10660 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10661 = stablehlo.multiply %10660, %arg37 : tensor<768xf32>
    %10662 = stablehlo.add %9558, %10661 : tensor<768xf32>
    %10663 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10664 = stablehlo.multiply %10663, %arg38 : tensor<768x768xf32>
    %10665 = stablehlo.add %9564, %10664 : tensor<768x768xf32>
    %10666 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10667 = stablehlo.multiply %10666, %arg39 : tensor<768xf32>
    %10668 = stablehlo.add %9570, %10667 : tensor<768xf32>
    %10669 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10670 = stablehlo.multiply %10669, %arg40 : tensor<768x768xf32>
    %10671 = stablehlo.add %9576, %10670 : tensor<768x768xf32>
    %10672 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10673 = stablehlo.multiply %10672, %arg41 : tensor<768xf32>
    %10674 = stablehlo.add %9582, %10673 : tensor<768xf32>
    %10675 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10676 = stablehlo.multiply %10675, %arg42 : tensor<768x768xf32>
    %10677 = stablehlo.add %9588, %10676 : tensor<768x768xf32>
    %10678 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10679 = stablehlo.multiply %10678, %arg43 : tensor<768xf32>
    %10680 = stablehlo.add %9594, %10679 : tensor<768xf32>
    %10681 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10682 = stablehlo.multiply %10681, %arg44 : tensor<768xf32>
    %10683 = stablehlo.add %9600, %10682 : tensor<768xf32>
    %10684 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10685 = stablehlo.multiply %10684, %arg45 : tensor<768xf32>
    %10686 = stablehlo.add %9606, %10685 : tensor<768xf32>
    %10687 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10688 = stablehlo.multiply %10687, %arg46 : tensor<3072x768xf32>
    %10689 = stablehlo.add %9612, %10688 : tensor<3072x768xf32>
    %10690 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10691 = stablehlo.multiply %10690, %arg47 : tensor<768xf32>
    %10692 = stablehlo.add %9618, %10691 : tensor<768xf32>
    %10693 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10694 = stablehlo.multiply %10693, %arg48 : tensor<768xf32>
    %10695 = stablehlo.add %9624, %10694 : tensor<768xf32>
    %10696 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10697 = stablehlo.multiply %10696, %arg49 : tensor<3072xf32>
    %10698 = stablehlo.add %9630, %10697 : tensor<3072xf32>
    %10699 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10700 = stablehlo.multiply %10699, %arg50 : tensor<768x3072xf32>
    %10701 = stablehlo.add %9636, %10700 : tensor<768x3072xf32>
    %10702 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10703 = stablehlo.multiply %10702, %arg51 : tensor<768xf32>
    %10704 = stablehlo.add %9642, %10703 : tensor<768xf32>
    %10705 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10706 = stablehlo.multiply %10705, %arg52 : tensor<768x768xf32>
    %10707 = stablehlo.add %9648, %10706 : tensor<768x768xf32>
    %10708 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10709 = stablehlo.multiply %10708, %arg53 : tensor<768xf32>
    %10710 = stablehlo.add %9654, %10709 : tensor<768xf32>
    %10711 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10712 = stablehlo.multiply %10711, %arg54 : tensor<768x768xf32>
    %10713 = stablehlo.add %9660, %10712 : tensor<768x768xf32>
    %10714 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10715 = stablehlo.multiply %10714, %arg55 : tensor<768xf32>
    %10716 = stablehlo.add %9666, %10715 : tensor<768xf32>
    %10717 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10718 = stablehlo.multiply %10717, %arg56 : tensor<768x768xf32>
    %10719 = stablehlo.add %9672, %10718 : tensor<768x768xf32>
    %10720 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10721 = stablehlo.multiply %10720, %arg57 : tensor<768xf32>
    %10722 = stablehlo.add %9678, %10721 : tensor<768xf32>
    %10723 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10724 = stablehlo.multiply %10723, %arg58 : tensor<768x768xf32>
    %10725 = stablehlo.add %9684, %10724 : tensor<768x768xf32>
    %10726 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10727 = stablehlo.multiply %10726, %arg59 : tensor<768xf32>
    %10728 = stablehlo.add %9690, %10727 : tensor<768xf32>
    %10729 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10730 = stablehlo.multiply %10729, %arg60 : tensor<768xf32>
    %10731 = stablehlo.add %9696, %10730 : tensor<768xf32>
    %10732 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10733 = stablehlo.multiply %10732, %arg61 : tensor<768xf32>
    %10734 = stablehlo.add %9702, %10733 : tensor<768xf32>
    %10735 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10736 = stablehlo.multiply %10735, %arg62 : tensor<3072x768xf32>
    %10737 = stablehlo.add %9708, %10736 : tensor<3072x768xf32>
    %10738 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10739 = stablehlo.multiply %10738, %arg63 : tensor<768xf32>
    %10740 = stablehlo.add %9714, %10739 : tensor<768xf32>
    %10741 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10742 = stablehlo.multiply %10741, %arg64 : tensor<768xf32>
    %10743 = stablehlo.add %9720, %10742 : tensor<768xf32>
    %10744 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10745 = stablehlo.multiply %10744, %arg65 : tensor<3072xf32>
    %10746 = stablehlo.add %9726, %10745 : tensor<3072xf32>
    %10747 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10748 = stablehlo.multiply %10747, %arg66 : tensor<768x3072xf32>
    %10749 = stablehlo.add %9732, %10748 : tensor<768x3072xf32>
    %10750 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10751 = stablehlo.multiply %10750, %arg67 : tensor<768xf32>
    %10752 = stablehlo.add %9738, %10751 : tensor<768xf32>
    %10753 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10754 = stablehlo.multiply %10753, %arg68 : tensor<768x768xf32>
    %10755 = stablehlo.add %9744, %10754 : tensor<768x768xf32>
    %10756 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10757 = stablehlo.multiply %10756, %arg69 : tensor<768xf32>
    %10758 = stablehlo.add %9750, %10757 : tensor<768xf32>
    %10759 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10760 = stablehlo.multiply %10759, %arg70 : tensor<768x768xf32>
    %10761 = stablehlo.add %9756, %10760 : tensor<768x768xf32>
    %10762 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10763 = stablehlo.multiply %10762, %arg71 : tensor<768xf32>
    %10764 = stablehlo.add %9762, %10763 : tensor<768xf32>
    %10765 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10766 = stablehlo.multiply %10765, %arg72 : tensor<768x768xf32>
    %10767 = stablehlo.add %9768, %10766 : tensor<768x768xf32>
    %10768 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10769 = stablehlo.multiply %10768, %arg73 : tensor<768xf32>
    %10770 = stablehlo.add %9774, %10769 : tensor<768xf32>
    %10771 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10772 = stablehlo.multiply %10771, %arg74 : tensor<768x768xf32>
    %10773 = stablehlo.add %9780, %10772 : tensor<768x768xf32>
    %10774 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10775 = stablehlo.multiply %10774, %arg75 : tensor<768xf32>
    %10776 = stablehlo.add %9786, %10775 : tensor<768xf32>
    %10777 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10778 = stablehlo.multiply %10777, %arg76 : tensor<768xf32>
    %10779 = stablehlo.add %9792, %10778 : tensor<768xf32>
    %10780 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10781 = stablehlo.multiply %10780, %arg77 : tensor<768xf32>
    %10782 = stablehlo.add %9798, %10781 : tensor<768xf32>
    %10783 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10784 = stablehlo.multiply %10783, %arg78 : tensor<3072x768xf32>
    %10785 = stablehlo.add %9804, %10784 : tensor<3072x768xf32>
    %10786 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10787 = stablehlo.multiply %10786, %arg79 : tensor<768xf32>
    %10788 = stablehlo.add %9810, %10787 : tensor<768xf32>
    %10789 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10790 = stablehlo.multiply %10789, %arg80 : tensor<768xf32>
    %10791 = stablehlo.add %9816, %10790 : tensor<768xf32>
    %10792 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10793 = stablehlo.multiply %10792, %arg81 : tensor<3072xf32>
    %10794 = stablehlo.add %9822, %10793 : tensor<3072xf32>
    %10795 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10796 = stablehlo.multiply %10795, %arg82 : tensor<768x3072xf32>
    %10797 = stablehlo.add %9828, %10796 : tensor<768x3072xf32>
    %10798 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10799 = stablehlo.multiply %10798, %arg83 : tensor<768xf32>
    %10800 = stablehlo.add %9834, %10799 : tensor<768xf32>
    %10801 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10802 = stablehlo.multiply %10801, %arg84 : tensor<768x768xf32>
    %10803 = stablehlo.add %9840, %10802 : tensor<768x768xf32>
    %10804 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10805 = stablehlo.multiply %10804, %arg85 : tensor<768xf32>
    %10806 = stablehlo.add %9846, %10805 : tensor<768xf32>
    %10807 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10808 = stablehlo.multiply %10807, %arg86 : tensor<768x768xf32>
    %10809 = stablehlo.add %9852, %10808 : tensor<768x768xf32>
    %10810 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10811 = stablehlo.multiply %10810, %arg87 : tensor<768xf32>
    %10812 = stablehlo.add %9858, %10811 : tensor<768xf32>
    %10813 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10814 = stablehlo.multiply %10813, %arg88 : tensor<768x768xf32>
    %10815 = stablehlo.add %9864, %10814 : tensor<768x768xf32>
    %10816 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10817 = stablehlo.multiply %10816, %arg89 : tensor<768xf32>
    %10818 = stablehlo.add %9870, %10817 : tensor<768xf32>
    %10819 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10820 = stablehlo.multiply %10819, %arg90 : tensor<768x768xf32>
    %10821 = stablehlo.add %9876, %10820 : tensor<768x768xf32>
    %10822 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10823 = stablehlo.multiply %10822, %arg91 : tensor<768xf32>
    %10824 = stablehlo.add %9882, %10823 : tensor<768xf32>
    %10825 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10826 = stablehlo.multiply %10825, %arg92 : tensor<768xf32>
    %10827 = stablehlo.add %9888, %10826 : tensor<768xf32>
    %10828 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10829 = stablehlo.multiply %10828, %arg93 : tensor<768xf32>
    %10830 = stablehlo.add %9894, %10829 : tensor<768xf32>
    %10831 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10832 = stablehlo.multiply %10831, %arg94 : tensor<3072x768xf32>
    %10833 = stablehlo.add %9900, %10832 : tensor<3072x768xf32>
    %10834 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10835 = stablehlo.multiply %10834, %arg95 : tensor<768xf32>
    %10836 = stablehlo.add %9906, %10835 : tensor<768xf32>
    %10837 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10838 = stablehlo.multiply %10837, %arg96 : tensor<768xf32>
    %10839 = stablehlo.add %9912, %10838 : tensor<768xf32>
    %10840 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10841 = stablehlo.multiply %10840, %arg97 : tensor<3072xf32>
    %10842 = stablehlo.add %9918, %10841 : tensor<3072xf32>
    %10843 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10844 = stablehlo.multiply %10843, %arg98 : tensor<768x3072xf32>
    %10845 = stablehlo.add %9924, %10844 : tensor<768x3072xf32>
    %10846 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10847 = stablehlo.multiply %10846, %arg99 : tensor<768xf32>
    %10848 = stablehlo.add %9930, %10847 : tensor<768xf32>
    %10849 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10850 = stablehlo.multiply %10849, %arg100 : tensor<768x768xf32>
    %10851 = stablehlo.add %9936, %10850 : tensor<768x768xf32>
    %10852 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10853 = stablehlo.multiply %10852, %arg101 : tensor<768xf32>
    %10854 = stablehlo.add %9942, %10853 : tensor<768xf32>
    %10855 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10856 = stablehlo.multiply %10855, %arg102 : tensor<768x768xf32>
    %10857 = stablehlo.add %9948, %10856 : tensor<768x768xf32>
    %10858 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10859 = stablehlo.multiply %10858, %arg103 : tensor<768xf32>
    %10860 = stablehlo.add %9954, %10859 : tensor<768xf32>
    %10861 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10862 = stablehlo.multiply %10861, %arg104 : tensor<768x768xf32>
    %10863 = stablehlo.add %9960, %10862 : tensor<768x768xf32>
    %10864 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10865 = stablehlo.multiply %10864, %arg105 : tensor<768xf32>
    %10866 = stablehlo.add %9966, %10865 : tensor<768xf32>
    %10867 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10868 = stablehlo.multiply %10867, %arg106 : tensor<768x768xf32>
    %10869 = stablehlo.add %9972, %10868 : tensor<768x768xf32>
    %10870 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10871 = stablehlo.multiply %10870, %arg107 : tensor<768xf32>
    %10872 = stablehlo.add %9978, %10871 : tensor<768xf32>
    %10873 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10874 = stablehlo.multiply %10873, %arg108 : tensor<768xf32>
    %10875 = stablehlo.add %9984, %10874 : tensor<768xf32>
    %10876 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10877 = stablehlo.multiply %10876, %arg109 : tensor<768xf32>
    %10878 = stablehlo.add %9990, %10877 : tensor<768xf32>
    %10879 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10880 = stablehlo.multiply %10879, %arg110 : tensor<3072x768xf32>
    %10881 = stablehlo.add %9996, %10880 : tensor<3072x768xf32>
    %10882 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10883 = stablehlo.multiply %10882, %arg111 : tensor<768xf32>
    %10884 = stablehlo.add %10002, %10883 : tensor<768xf32>
    %10885 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10886 = stablehlo.multiply %10885, %arg112 : tensor<768xf32>
    %10887 = stablehlo.add %10008, %10886 : tensor<768xf32>
    %10888 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10889 = stablehlo.multiply %10888, %arg113 : tensor<3072xf32>
    %10890 = stablehlo.add %10014, %10889 : tensor<3072xf32>
    %10891 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10892 = stablehlo.multiply %10891, %arg114 : tensor<768x3072xf32>
    %10893 = stablehlo.add %10020, %10892 : tensor<768x3072xf32>
    %10894 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10895 = stablehlo.multiply %10894, %arg115 : tensor<768xf32>
    %10896 = stablehlo.add %10026, %10895 : tensor<768xf32>
    %10897 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10898 = stablehlo.multiply %10897, %arg116 : tensor<768x768xf32>
    %10899 = stablehlo.add %10032, %10898 : tensor<768x768xf32>
    %10900 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10901 = stablehlo.multiply %10900, %arg117 : tensor<768xf32>
    %10902 = stablehlo.add %10038, %10901 : tensor<768xf32>
    %10903 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10904 = stablehlo.multiply %10903, %arg118 : tensor<768x768xf32>
    %10905 = stablehlo.add %10044, %10904 : tensor<768x768xf32>
    %10906 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10907 = stablehlo.multiply %10906, %arg119 : tensor<768xf32>
    %10908 = stablehlo.add %10050, %10907 : tensor<768xf32>
    %10909 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10910 = stablehlo.multiply %10909, %arg120 : tensor<768x768xf32>
    %10911 = stablehlo.add %10056, %10910 : tensor<768x768xf32>
    %10912 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10913 = stablehlo.multiply %10912, %arg121 : tensor<768xf32>
    %10914 = stablehlo.add %10062, %10913 : tensor<768xf32>
    %10915 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10916 = stablehlo.multiply %10915, %arg122 : tensor<768x768xf32>
    %10917 = stablehlo.add %10068, %10916 : tensor<768x768xf32>
    %10918 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10919 = stablehlo.multiply %10918, %arg123 : tensor<768xf32>
    %10920 = stablehlo.add %10074, %10919 : tensor<768xf32>
    %10921 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10922 = stablehlo.multiply %10921, %arg124 : tensor<768xf32>
    %10923 = stablehlo.add %10080, %10922 : tensor<768xf32>
    %10924 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10925 = stablehlo.multiply %10924, %arg125 : tensor<768xf32>
    %10926 = stablehlo.add %10086, %10925 : tensor<768xf32>
    %10927 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10928 = stablehlo.multiply %10927, %arg126 : tensor<3072x768xf32>
    %10929 = stablehlo.add %10092, %10928 : tensor<3072x768xf32>
    %10930 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10931 = stablehlo.multiply %10930, %arg127 : tensor<768xf32>
    %10932 = stablehlo.add %10098, %10931 : tensor<768xf32>
    %10933 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10934 = stablehlo.multiply %10933, %arg128 : tensor<768xf32>
    %10935 = stablehlo.add %10104, %10934 : tensor<768xf32>
    %10936 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10937 = stablehlo.multiply %10936, %arg129 : tensor<3072xf32>
    %10938 = stablehlo.add %10110, %10937 : tensor<3072xf32>
    %10939 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10940 = stablehlo.multiply %10939, %arg130 : tensor<768x3072xf32>
    %10941 = stablehlo.add %10116, %10940 : tensor<768x3072xf32>
    %10942 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10943 = stablehlo.multiply %10942, %arg131 : tensor<768xf32>
    %10944 = stablehlo.add %10122, %10943 : tensor<768xf32>
    %10945 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10946 = stablehlo.multiply %10945, %arg132 : tensor<768x768xf32>
    %10947 = stablehlo.add %10128, %10946 : tensor<768x768xf32>
    %10948 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10949 = stablehlo.multiply %10948, %arg133 : tensor<768xf32>
    %10950 = stablehlo.add %10134, %10949 : tensor<768xf32>
    %10951 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10952 = stablehlo.multiply %10951, %arg134 : tensor<768x768xf32>
    %10953 = stablehlo.add %10140, %10952 : tensor<768x768xf32>
    %10954 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10955 = stablehlo.multiply %10954, %arg135 : tensor<768xf32>
    %10956 = stablehlo.add %10146, %10955 : tensor<768xf32>
    %10957 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10958 = stablehlo.multiply %10957, %arg136 : tensor<768x768xf32>
    %10959 = stablehlo.add %10152, %10958 : tensor<768x768xf32>
    %10960 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10961 = stablehlo.multiply %10960, %arg137 : tensor<768xf32>
    %10962 = stablehlo.add %10158, %10961 : tensor<768xf32>
    %10963 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10964 = stablehlo.multiply %10963, %arg138 : tensor<768x768xf32>
    %10965 = stablehlo.add %10164, %10964 : tensor<768x768xf32>
    %10966 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10967 = stablehlo.multiply %10966, %arg139 : tensor<768xf32>
    %10968 = stablehlo.add %10170, %10967 : tensor<768xf32>
    %10969 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10970 = stablehlo.multiply %10969, %arg140 : tensor<768xf32>
    %10971 = stablehlo.add %10176, %10970 : tensor<768xf32>
    %10972 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10973 = stablehlo.multiply %10972, %arg141 : tensor<768xf32>
    %10974 = stablehlo.add %10182, %10973 : tensor<768xf32>
    %10975 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10976 = stablehlo.multiply %10975, %arg142 : tensor<3072x768xf32>
    %10977 = stablehlo.add %10188, %10976 : tensor<3072x768xf32>
    %10978 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10979 = stablehlo.multiply %10978, %arg143 : tensor<768xf32>
    %10980 = stablehlo.add %10194, %10979 : tensor<768xf32>
    %10981 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10982 = stablehlo.multiply %10981, %arg144 : tensor<768xf32>
    %10983 = stablehlo.add %10200, %10982 : tensor<768xf32>
    %10984 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10985 = stablehlo.multiply %10984, %arg145 : tensor<3072xf32>
    %10986 = stablehlo.add %10206, %10985 : tensor<3072xf32>
    %10987 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10988 = stablehlo.multiply %10987, %arg146 : tensor<768x3072xf32>
    %10989 = stablehlo.add %10212, %10988 : tensor<768x3072xf32>
    %10990 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10991 = stablehlo.multiply %10990, %arg147 : tensor<768xf32>
    %10992 = stablehlo.add %10218, %10991 : tensor<768xf32>
    %10993 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10994 = stablehlo.multiply %10993, %arg148 : tensor<768x768xf32>
    %10995 = stablehlo.add %10224, %10994 : tensor<768x768xf32>
    %10996 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10997 = stablehlo.multiply %10996, %arg149 : tensor<768xf32>
    %10998 = stablehlo.add %10230, %10997 : tensor<768xf32>
    %10999 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11000 = stablehlo.multiply %10999, %arg150 : tensor<768x768xf32>
    %11001 = stablehlo.add %10236, %11000 : tensor<768x768xf32>
    %11002 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11003 = stablehlo.multiply %11002, %arg151 : tensor<768xf32>
    %11004 = stablehlo.add %10242, %11003 : tensor<768xf32>
    %11005 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11006 = stablehlo.multiply %11005, %arg152 : tensor<768x768xf32>
    %11007 = stablehlo.add %10248, %11006 : tensor<768x768xf32>
    %11008 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11009 = stablehlo.multiply %11008, %arg153 : tensor<768xf32>
    %11010 = stablehlo.add %10254, %11009 : tensor<768xf32>
    %11011 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11012 = stablehlo.multiply %11011, %arg154 : tensor<768x768xf32>
    %11013 = stablehlo.add %10260, %11012 : tensor<768x768xf32>
    %11014 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11015 = stablehlo.multiply %11014, %arg155 : tensor<768xf32>
    %11016 = stablehlo.add %10266, %11015 : tensor<768xf32>
    %11017 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11018 = stablehlo.multiply %11017, %arg156 : tensor<768xf32>
    %11019 = stablehlo.add %10272, %11018 : tensor<768xf32>
    %11020 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11021 = stablehlo.multiply %11020, %arg157 : tensor<768xf32>
    %11022 = stablehlo.add %10278, %11021 : tensor<768xf32>
    %11023 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11024 = stablehlo.multiply %11023, %arg158 : tensor<3072x768xf32>
    %11025 = stablehlo.add %10284, %11024 : tensor<3072x768xf32>
    %11026 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11027 = stablehlo.multiply %11026, %arg159 : tensor<768xf32>
    %11028 = stablehlo.add %10290, %11027 : tensor<768xf32>
    %11029 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11030 = stablehlo.multiply %11029, %arg160 : tensor<768xf32>
    %11031 = stablehlo.add %10296, %11030 : tensor<768xf32>
    %11032 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11033 = stablehlo.multiply %11032, %arg161 : tensor<3072xf32>
    %11034 = stablehlo.add %10302, %11033 : tensor<3072xf32>
    %11035 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11036 = stablehlo.multiply %11035, %arg162 : tensor<768x3072xf32>
    %11037 = stablehlo.add %10308, %11036 : tensor<768x3072xf32>
    %11038 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11039 = stablehlo.multiply %11038, %arg163 : tensor<768xf32>
    %11040 = stablehlo.add %10314, %11039 : tensor<768xf32>
    %11041 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11042 = stablehlo.multiply %11041, %arg164 : tensor<768x768xf32>
    %11043 = stablehlo.add %10320, %11042 : tensor<768x768xf32>
    %11044 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11045 = stablehlo.multiply %11044, %arg165 : tensor<768xf32>
    %11046 = stablehlo.add %10326, %11045 : tensor<768xf32>
    %11047 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11048 = stablehlo.multiply %11047, %arg166 : tensor<768x768xf32>
    %11049 = stablehlo.add %10332, %11048 : tensor<768x768xf32>
    %11050 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11051 = stablehlo.multiply %11050, %arg167 : tensor<768xf32>
    %11052 = stablehlo.add %10338, %11051 : tensor<768xf32>
    %11053 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11054 = stablehlo.multiply %11053, %arg168 : tensor<768x768xf32>
    %11055 = stablehlo.add %10344, %11054 : tensor<768x768xf32>
    %11056 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11057 = stablehlo.multiply %11056, %arg169 : tensor<768xf32>
    %11058 = stablehlo.add %10350, %11057 : tensor<768xf32>
    %11059 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11060 = stablehlo.multiply %11059, %arg170 : tensor<768x768xf32>
    %11061 = stablehlo.add %10356, %11060 : tensor<768x768xf32>
    %11062 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11063 = stablehlo.multiply %11062, %arg171 : tensor<768xf32>
    %11064 = stablehlo.add %10362, %11063 : tensor<768xf32>
    %11065 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11066 = stablehlo.multiply %11065, %arg172 : tensor<768xf32>
    %11067 = stablehlo.add %10368, %11066 : tensor<768xf32>
    %11068 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11069 = stablehlo.multiply %11068, %arg173 : tensor<768xf32>
    %11070 = stablehlo.add %10374, %11069 : tensor<768xf32>
    %11071 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11072 = stablehlo.multiply %11071, %arg174 : tensor<3072x768xf32>
    %11073 = stablehlo.add %10380, %11072 : tensor<3072x768xf32>
    %11074 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11075 = stablehlo.multiply %11074, %arg175 : tensor<768xf32>
    %11076 = stablehlo.add %10386, %11075 : tensor<768xf32>
    %11077 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11078 = stablehlo.multiply %11077, %arg176 : tensor<768xf32>
    %11079 = stablehlo.add %10392, %11078 : tensor<768xf32>
    %11080 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11081 = stablehlo.multiply %11080, %arg177 : tensor<3072xf32>
    %11082 = stablehlo.add %10398, %11081 : tensor<3072xf32>
    %11083 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11084 = stablehlo.multiply %11083, %arg178 : tensor<768x3072xf32>
    %11085 = stablehlo.add %10404, %11084 : tensor<768x3072xf32>
    %11086 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11087 = stablehlo.multiply %11086, %arg179 : tensor<768xf32>
    %11088 = stablehlo.add %10410, %11087 : tensor<768xf32>
    %11089 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11090 = stablehlo.multiply %11089, %arg180 : tensor<768x768xf32>
    %11091 = stablehlo.add %10416, %11090 : tensor<768x768xf32>
    %11092 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11093 = stablehlo.multiply %11092, %arg181 : tensor<768xf32>
    %11094 = stablehlo.add %10422, %11093 : tensor<768xf32>
    %11095 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11096 = stablehlo.multiply %11095, %arg182 : tensor<768x768xf32>
    %11097 = stablehlo.add %10428, %11096 : tensor<768x768xf32>
    %11098 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11099 = stablehlo.multiply %11098, %arg183 : tensor<768xf32>
    %11100 = stablehlo.add %10434, %11099 : tensor<768xf32>
    %11101 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11102 = stablehlo.multiply %11101, %arg184 : tensor<768x768xf32>
    %11103 = stablehlo.add %10440, %11102 : tensor<768x768xf32>
    %11104 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11105 = stablehlo.multiply %11104, %arg185 : tensor<768xf32>
    %11106 = stablehlo.add %10446, %11105 : tensor<768xf32>
    %11107 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11108 = stablehlo.multiply %11107, %arg186 : tensor<768x768xf32>
    %11109 = stablehlo.add %10452, %11108 : tensor<768x768xf32>
    %11110 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11111 = stablehlo.multiply %11110, %arg187 : tensor<768xf32>
    %11112 = stablehlo.add %10458, %11111 : tensor<768xf32>
    %11113 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11114 = stablehlo.multiply %11113, %arg188 : tensor<768xf32>
    %11115 = stablehlo.add %10464, %11114 : tensor<768xf32>
    %11116 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11117 = stablehlo.multiply %11116, %arg189 : tensor<768xf32>
    %11118 = stablehlo.add %10470, %11117 : tensor<768xf32>
    %11119 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11120 = stablehlo.multiply %11119, %arg190 : tensor<3072x768xf32>
    %11121 = stablehlo.add %10476, %11120 : tensor<3072x768xf32>
    %11122 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11123 = stablehlo.multiply %11122, %arg191 : tensor<768xf32>
    %11124 = stablehlo.add %10482, %11123 : tensor<768xf32>
    %11125 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11126 = stablehlo.multiply %11125, %arg192 : tensor<768xf32>
    %11127 = stablehlo.add %10488, %11126 : tensor<768xf32>
    %11128 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11129 = stablehlo.multiply %11128, %arg193 : tensor<3072xf32>
    %11130 = stablehlo.add %10494, %11129 : tensor<3072xf32>
    %11131 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11132 = stablehlo.multiply %11131, %arg194 : tensor<768x3072xf32>
    %11133 = stablehlo.add %10500, %11132 : tensor<768x3072xf32>
    %11134 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11135 = stablehlo.multiply %11134, %arg195 : tensor<768xf32>
    %11136 = stablehlo.add %10506, %11135 : tensor<768xf32>
    %11137 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11138 = stablehlo.multiply %11137, %arg196 : tensor<768xf32>
    %11139 = stablehlo.add %10512, %11138 : tensor<768xf32>
    %11140 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11141 = stablehlo.multiply %11140, %arg197 : tensor<30522xf32>
    %11142 = stablehlo.add %10518, %11141 : tensor<30522xf32>
    %11143 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11144 = stablehlo.multiply %11143, %arg198 : tensor<768xf32>
    %11145 = stablehlo.add %10524, %11144 : tensor<768xf32>
    %11146 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11147 = stablehlo.multiply %11146, %arg199 : tensor<768x768xf32>
    %11148 = stablehlo.add %10530, %11147 : tensor<768x768xf32>
    %11149 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11150 = stablehlo.multiply %11149, %arg200 : tensor<30522x768xf32>
    %11151 = stablehlo.add %10536, %11150 : tensor<30522x768xf32>
    %11152 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11153 = stablehlo.multiply %11152, %arg201 : tensor<768xf32>
    %11154 = stablehlo.add %10542, %11153 : tensor<768xf32>
    %11155 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11156 = stablehlo.multiply %11155, %arg202 : tensor<768xf32>
    %11157 = stablehlo.add %10548, %11156 : tensor<768xf32>
    %11158 = stablehlo.subtract %arg610, %c : tensor<i32>
    %c_762 = stablehlo.constant dense<10> : tensor<i32>
    %11159 = call @clip(%11158, %c_143, %c_762) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11160 = stablehlo.convert %11159 : (tensor<i32>) -> tensor<f32>
    %cst_763 = stablehlo.constant dense<1.000000e+01> : tensor<f32>
    %11161 = stablehlo.divide %11160, %cst_763 : tensor<f32>
    %11162 = stablehlo.subtract %cst_7, %11161 : tensor<f32>
    %cst_764 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %11163 = stablehlo.multiply %cst_764, %11162 : tensor<f32>
    %cst_765 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %11164 = stablehlo.add %11163, %cst_765 : tensor<f32>
    %c_766 = stablehlo.constant dense<10> : tensor<i32>
    %11165 = stablehlo.compare  LT, %arg610, %c_766,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11166 = stablehlo.subtract %arg610, %c_766 : tensor<i32>
    %11167 = stablehlo.convert %11166 : (tensor<i32>) -> tensor<f32>
    %cst_767 = stablehlo.constant dense<9.000000e+01> : tensor<f32>
    %11168 = stablehlo.minimum %11167, %cst_767 : tensor<f32>
    %cst_768 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %11169 = stablehlo.multiply %cst_768, %11168 : tensor<f32>
    %11170 = stablehlo.divide %11169, %cst_767 : tensor<f32>
    %11171 = stablehlo.cosine %11170 : tensor<f32>
    %cst_769 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %11172 = stablehlo.add %cst_769, %11171 : tensor<f32>
    %cst_770 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %11173 = stablehlo.multiply %cst_770, %11172 : tensor<f32>
    %11174 = stablehlo.power %11173, %cst_769 : tensor<f32>
    %11175 = stablehlo.multiply %cst_769, %11174 : tensor<f32>
    %11176 = stablehlo.add %11175, %cst_12 : tensor<f32>
    %cst_771 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %11177 = stablehlo.multiply %cst_771, %11176 : tensor<f32>
    %11178 = call @_where_398(%11165, %11164, %11177) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_772 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %11179 = stablehlo.multiply %cst_772, %11178 : tensor<f32>
    %11180 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %11181 = stablehlo.multiply %11180, %10551 : tensor<512x768xf32>
    %11182 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %11183 = stablehlo.multiply %11182, %10554 : tensor<2x768xf32>
    %11184 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11185 = stablehlo.multiply %11184, %10557 : tensor<30522x768xf32>
    %11186 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11187 = stablehlo.multiply %11186, %10560 : tensor<768xf32>
    %11188 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11189 = stablehlo.multiply %11188, %10563 : tensor<768x768xf32>
    %11190 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11191 = stablehlo.multiply %11190, %10566 : tensor<768xf32>
    %11192 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11193 = stablehlo.multiply %11192, %10569 : tensor<768x768xf32>
    %11194 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11195 = stablehlo.multiply %11194, %10572 : tensor<768xf32>
    %11196 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11197 = stablehlo.multiply %11196, %10575 : tensor<768x768xf32>
    %11198 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11199 = stablehlo.multiply %11198, %10578 : tensor<768xf32>
    %11200 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11201 = stablehlo.multiply %11200, %10581 : tensor<768x768xf32>
    %11202 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11203 = stablehlo.multiply %11202, %10584 : tensor<768xf32>
    %11204 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11205 = stablehlo.multiply %11204, %10587 : tensor<768xf32>
    %11206 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11207 = stablehlo.multiply %11206, %10590 : tensor<768xf32>
    %11208 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11209 = stablehlo.multiply %11208, %10593 : tensor<3072x768xf32>
    %11210 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11211 = stablehlo.multiply %11210, %10596 : tensor<768xf32>
    %11212 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11213 = stablehlo.multiply %11212, %10599 : tensor<768xf32>
    %11214 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11215 = stablehlo.multiply %11214, %10602 : tensor<3072xf32>
    %11216 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11217 = stablehlo.multiply %11216, %10605 : tensor<768x3072xf32>
    %11218 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11219 = stablehlo.multiply %11218, %10608 : tensor<768xf32>
    %11220 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11221 = stablehlo.multiply %11220, %10611 : tensor<768x768xf32>
    %11222 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11223 = stablehlo.multiply %11222, %10614 : tensor<768xf32>
    %11224 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11225 = stablehlo.multiply %11224, %10617 : tensor<768x768xf32>
    %11226 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11227 = stablehlo.multiply %11226, %10620 : tensor<768xf32>
    %11228 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11229 = stablehlo.multiply %11228, %10623 : tensor<768x768xf32>
    %11230 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11231 = stablehlo.multiply %11230, %10626 : tensor<768xf32>
    %11232 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11233 = stablehlo.multiply %11232, %10629 : tensor<768x768xf32>
    %11234 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11235 = stablehlo.multiply %11234, %10632 : tensor<768xf32>
    %11236 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11237 = stablehlo.multiply %11236, %10635 : tensor<768xf32>
    %11238 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11239 = stablehlo.multiply %11238, %10638 : tensor<768xf32>
    %11240 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11241 = stablehlo.multiply %11240, %10641 : tensor<3072x768xf32>
    %11242 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11243 = stablehlo.multiply %11242, %10644 : tensor<768xf32>
    %11244 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11245 = stablehlo.multiply %11244, %10647 : tensor<768xf32>
    %11246 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11247 = stablehlo.multiply %11246, %10650 : tensor<3072xf32>
    %11248 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11249 = stablehlo.multiply %11248, %10653 : tensor<768x3072xf32>
    %11250 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11251 = stablehlo.multiply %11250, %10656 : tensor<768xf32>
    %11252 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11253 = stablehlo.multiply %11252, %10659 : tensor<768x768xf32>
    %11254 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11255 = stablehlo.multiply %11254, %10662 : tensor<768xf32>
    %11256 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11257 = stablehlo.multiply %11256, %10665 : tensor<768x768xf32>
    %11258 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11259 = stablehlo.multiply %11258, %10668 : tensor<768xf32>
    %11260 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11261 = stablehlo.multiply %11260, %10671 : tensor<768x768xf32>
    %11262 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11263 = stablehlo.multiply %11262, %10674 : tensor<768xf32>
    %11264 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11265 = stablehlo.multiply %11264, %10677 : tensor<768x768xf32>
    %11266 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11267 = stablehlo.multiply %11266, %10680 : tensor<768xf32>
    %11268 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11269 = stablehlo.multiply %11268, %10683 : tensor<768xf32>
    %11270 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11271 = stablehlo.multiply %11270, %10686 : tensor<768xf32>
    %11272 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11273 = stablehlo.multiply %11272, %10689 : tensor<3072x768xf32>
    %11274 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11275 = stablehlo.multiply %11274, %10692 : tensor<768xf32>
    %11276 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11277 = stablehlo.multiply %11276, %10695 : tensor<768xf32>
    %11278 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11279 = stablehlo.multiply %11278, %10698 : tensor<3072xf32>
    %11280 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11281 = stablehlo.multiply %11280, %10701 : tensor<768x3072xf32>
    %11282 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11283 = stablehlo.multiply %11282, %10704 : tensor<768xf32>
    %11284 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11285 = stablehlo.multiply %11284, %10707 : tensor<768x768xf32>
    %11286 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11287 = stablehlo.multiply %11286, %10710 : tensor<768xf32>
    %11288 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11289 = stablehlo.multiply %11288, %10713 : tensor<768x768xf32>
    %11290 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11291 = stablehlo.multiply %11290, %10716 : tensor<768xf32>
    %11292 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11293 = stablehlo.multiply %11292, %10719 : tensor<768x768xf32>
    %11294 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11295 = stablehlo.multiply %11294, %10722 : tensor<768xf32>
    %11296 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11297 = stablehlo.multiply %11296, %10725 : tensor<768x768xf32>
    %11298 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11299 = stablehlo.multiply %11298, %10728 : tensor<768xf32>
    %11300 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11301 = stablehlo.multiply %11300, %10731 : tensor<768xf32>
    %11302 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11303 = stablehlo.multiply %11302, %10734 : tensor<768xf32>
    %11304 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11305 = stablehlo.multiply %11304, %10737 : tensor<3072x768xf32>
    %11306 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11307 = stablehlo.multiply %11306, %10740 : tensor<768xf32>
    %11308 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11309 = stablehlo.multiply %11308, %10743 : tensor<768xf32>
    %11310 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11311 = stablehlo.multiply %11310, %10746 : tensor<3072xf32>
    %11312 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11313 = stablehlo.multiply %11312, %10749 : tensor<768x3072xf32>
    %11314 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11315 = stablehlo.multiply %11314, %10752 : tensor<768xf32>
    %11316 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11317 = stablehlo.multiply %11316, %10755 : tensor<768x768xf32>
    %11318 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11319 = stablehlo.multiply %11318, %10758 : tensor<768xf32>
    %11320 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11321 = stablehlo.multiply %11320, %10761 : tensor<768x768xf32>
    %11322 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11323 = stablehlo.multiply %11322, %10764 : tensor<768xf32>
    %11324 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11325 = stablehlo.multiply %11324, %10767 : tensor<768x768xf32>
    %11326 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11327 = stablehlo.multiply %11326, %10770 : tensor<768xf32>
    %11328 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11329 = stablehlo.multiply %11328, %10773 : tensor<768x768xf32>
    %11330 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11331 = stablehlo.multiply %11330, %10776 : tensor<768xf32>
    %11332 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11333 = stablehlo.multiply %11332, %10779 : tensor<768xf32>
    %11334 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11335 = stablehlo.multiply %11334, %10782 : tensor<768xf32>
    %11336 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11337 = stablehlo.multiply %11336, %10785 : tensor<3072x768xf32>
    %11338 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11339 = stablehlo.multiply %11338, %10788 : tensor<768xf32>
    %11340 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11341 = stablehlo.multiply %11340, %10791 : tensor<768xf32>
    %11342 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11343 = stablehlo.multiply %11342, %10794 : tensor<3072xf32>
    %11344 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11345 = stablehlo.multiply %11344, %10797 : tensor<768x3072xf32>
    %11346 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11347 = stablehlo.multiply %11346, %10800 : tensor<768xf32>
    %11348 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11349 = stablehlo.multiply %11348, %10803 : tensor<768x768xf32>
    %11350 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11351 = stablehlo.multiply %11350, %10806 : tensor<768xf32>
    %11352 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11353 = stablehlo.multiply %11352, %10809 : tensor<768x768xf32>
    %11354 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11355 = stablehlo.multiply %11354, %10812 : tensor<768xf32>
    %11356 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11357 = stablehlo.multiply %11356, %10815 : tensor<768x768xf32>
    %11358 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11359 = stablehlo.multiply %11358, %10818 : tensor<768xf32>
    %11360 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11361 = stablehlo.multiply %11360, %10821 : tensor<768x768xf32>
    %11362 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11363 = stablehlo.multiply %11362, %10824 : tensor<768xf32>
    %11364 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11365 = stablehlo.multiply %11364, %10827 : tensor<768xf32>
    %11366 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11367 = stablehlo.multiply %11366, %10830 : tensor<768xf32>
    %11368 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11369 = stablehlo.multiply %11368, %10833 : tensor<3072x768xf32>
    %11370 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11371 = stablehlo.multiply %11370, %10836 : tensor<768xf32>
    %11372 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11373 = stablehlo.multiply %11372, %10839 : tensor<768xf32>
    %11374 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11375 = stablehlo.multiply %11374, %10842 : tensor<3072xf32>
    %11376 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11377 = stablehlo.multiply %11376, %10845 : tensor<768x3072xf32>
    %11378 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11379 = stablehlo.multiply %11378, %10848 : tensor<768xf32>
    %11380 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11381 = stablehlo.multiply %11380, %10851 : tensor<768x768xf32>
    %11382 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11383 = stablehlo.multiply %11382, %10854 : tensor<768xf32>
    %11384 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11385 = stablehlo.multiply %11384, %10857 : tensor<768x768xf32>
    %11386 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11387 = stablehlo.multiply %11386, %10860 : tensor<768xf32>
    %11388 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11389 = stablehlo.multiply %11388, %10863 : tensor<768x768xf32>
    %11390 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11391 = stablehlo.multiply %11390, %10866 : tensor<768xf32>
    %11392 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11393 = stablehlo.multiply %11392, %10869 : tensor<768x768xf32>
    %11394 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11395 = stablehlo.multiply %11394, %10872 : tensor<768xf32>
    %11396 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11397 = stablehlo.multiply %11396, %10875 : tensor<768xf32>
    %11398 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11399 = stablehlo.multiply %11398, %10878 : tensor<768xf32>
    %11400 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11401 = stablehlo.multiply %11400, %10881 : tensor<3072x768xf32>
    %11402 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11403 = stablehlo.multiply %11402, %10884 : tensor<768xf32>
    %11404 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11405 = stablehlo.multiply %11404, %10887 : tensor<768xf32>
    %11406 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11407 = stablehlo.multiply %11406, %10890 : tensor<3072xf32>
    %11408 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11409 = stablehlo.multiply %11408, %10893 : tensor<768x3072xf32>
    %11410 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11411 = stablehlo.multiply %11410, %10896 : tensor<768xf32>
    %11412 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11413 = stablehlo.multiply %11412, %10899 : tensor<768x768xf32>
    %11414 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11415 = stablehlo.multiply %11414, %10902 : tensor<768xf32>
    %11416 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11417 = stablehlo.multiply %11416, %10905 : tensor<768x768xf32>
    %11418 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11419 = stablehlo.multiply %11418, %10908 : tensor<768xf32>
    %11420 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11421 = stablehlo.multiply %11420, %10911 : tensor<768x768xf32>
    %11422 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11423 = stablehlo.multiply %11422, %10914 : tensor<768xf32>
    %11424 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11425 = stablehlo.multiply %11424, %10917 : tensor<768x768xf32>
    %11426 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11427 = stablehlo.multiply %11426, %10920 : tensor<768xf32>
    %11428 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11429 = stablehlo.multiply %11428, %10923 : tensor<768xf32>
    %11430 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11431 = stablehlo.multiply %11430, %10926 : tensor<768xf32>
    %11432 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11433 = stablehlo.multiply %11432, %10929 : tensor<3072x768xf32>
    %11434 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11435 = stablehlo.multiply %11434, %10932 : tensor<768xf32>
    %11436 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11437 = stablehlo.multiply %11436, %10935 : tensor<768xf32>
    %11438 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11439 = stablehlo.multiply %11438, %10938 : tensor<3072xf32>
    %11440 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11441 = stablehlo.multiply %11440, %10941 : tensor<768x3072xf32>
    %11442 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11443 = stablehlo.multiply %11442, %10944 : tensor<768xf32>
    %11444 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11445 = stablehlo.multiply %11444, %10947 : tensor<768x768xf32>
    %11446 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11447 = stablehlo.multiply %11446, %10950 : tensor<768xf32>
    %11448 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11449 = stablehlo.multiply %11448, %10953 : tensor<768x768xf32>
    %11450 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11451 = stablehlo.multiply %11450, %10956 : tensor<768xf32>
    %11452 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11453 = stablehlo.multiply %11452, %10959 : tensor<768x768xf32>
    %11454 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11455 = stablehlo.multiply %11454, %10962 : tensor<768xf32>
    %11456 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11457 = stablehlo.multiply %11456, %10965 : tensor<768x768xf32>
    %11458 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11459 = stablehlo.multiply %11458, %10968 : tensor<768xf32>
    %11460 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11461 = stablehlo.multiply %11460, %10971 : tensor<768xf32>
    %11462 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11463 = stablehlo.multiply %11462, %10974 : tensor<768xf32>
    %11464 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11465 = stablehlo.multiply %11464, %10977 : tensor<3072x768xf32>
    %11466 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11467 = stablehlo.multiply %11466, %10980 : tensor<768xf32>
    %11468 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11469 = stablehlo.multiply %11468, %10983 : tensor<768xf32>
    %11470 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11471 = stablehlo.multiply %11470, %10986 : tensor<3072xf32>
    %11472 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11473 = stablehlo.multiply %11472, %10989 : tensor<768x3072xf32>
    %11474 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11475 = stablehlo.multiply %11474, %10992 : tensor<768xf32>
    %11476 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11477 = stablehlo.multiply %11476, %10995 : tensor<768x768xf32>
    %11478 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11479 = stablehlo.multiply %11478, %10998 : tensor<768xf32>
    %11480 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11481 = stablehlo.multiply %11480, %11001 : tensor<768x768xf32>
    %11482 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11483 = stablehlo.multiply %11482, %11004 : tensor<768xf32>
    %11484 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11485 = stablehlo.multiply %11484, %11007 : tensor<768x768xf32>
    %11486 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11487 = stablehlo.multiply %11486, %11010 : tensor<768xf32>
    %11488 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11489 = stablehlo.multiply %11488, %11013 : tensor<768x768xf32>
    %11490 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11491 = stablehlo.multiply %11490, %11016 : tensor<768xf32>
    %11492 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11493 = stablehlo.multiply %11492, %11019 : tensor<768xf32>
    %11494 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11495 = stablehlo.multiply %11494, %11022 : tensor<768xf32>
    %11496 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11497 = stablehlo.multiply %11496, %11025 : tensor<3072x768xf32>
    %11498 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11499 = stablehlo.multiply %11498, %11028 : tensor<768xf32>
    %11500 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11501 = stablehlo.multiply %11500, %11031 : tensor<768xf32>
    %11502 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11503 = stablehlo.multiply %11502, %11034 : tensor<3072xf32>
    %11504 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11505 = stablehlo.multiply %11504, %11037 : tensor<768x3072xf32>
    %11506 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11507 = stablehlo.multiply %11506, %11040 : tensor<768xf32>
    %11508 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11509 = stablehlo.multiply %11508, %11043 : tensor<768x768xf32>
    %11510 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11511 = stablehlo.multiply %11510, %11046 : tensor<768xf32>
    %11512 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11513 = stablehlo.multiply %11512, %11049 : tensor<768x768xf32>
    %11514 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11515 = stablehlo.multiply %11514, %11052 : tensor<768xf32>
    %11516 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11517 = stablehlo.multiply %11516, %11055 : tensor<768x768xf32>
    %11518 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11519 = stablehlo.multiply %11518, %11058 : tensor<768xf32>
    %11520 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11521 = stablehlo.multiply %11520, %11061 : tensor<768x768xf32>
    %11522 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11523 = stablehlo.multiply %11522, %11064 : tensor<768xf32>
    %11524 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11525 = stablehlo.multiply %11524, %11067 : tensor<768xf32>
    %11526 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11527 = stablehlo.multiply %11526, %11070 : tensor<768xf32>
    %11528 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11529 = stablehlo.multiply %11528, %11073 : tensor<3072x768xf32>
    %11530 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11531 = stablehlo.multiply %11530, %11076 : tensor<768xf32>
    %11532 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11533 = stablehlo.multiply %11532, %11079 : tensor<768xf32>
    %11534 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11535 = stablehlo.multiply %11534, %11082 : tensor<3072xf32>
    %11536 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11537 = stablehlo.multiply %11536, %11085 : tensor<768x3072xf32>
    %11538 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11539 = stablehlo.multiply %11538, %11088 : tensor<768xf32>
    %11540 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11541 = stablehlo.multiply %11540, %11091 : tensor<768x768xf32>
    %11542 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11543 = stablehlo.multiply %11542, %11094 : tensor<768xf32>
    %11544 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11545 = stablehlo.multiply %11544, %11097 : tensor<768x768xf32>
    %11546 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11547 = stablehlo.multiply %11546, %11100 : tensor<768xf32>
    %11548 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11549 = stablehlo.multiply %11548, %11103 : tensor<768x768xf32>
    %11550 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11551 = stablehlo.multiply %11550, %11106 : tensor<768xf32>
    %11552 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11553 = stablehlo.multiply %11552, %11109 : tensor<768x768xf32>
    %11554 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11555 = stablehlo.multiply %11554, %11112 : tensor<768xf32>
    %11556 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11557 = stablehlo.multiply %11556, %11115 : tensor<768xf32>
    %11558 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11559 = stablehlo.multiply %11558, %11118 : tensor<768xf32>
    %11560 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11561 = stablehlo.multiply %11560, %11121 : tensor<3072x768xf32>
    %11562 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11563 = stablehlo.multiply %11562, %11124 : tensor<768xf32>
    %11564 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11565 = stablehlo.multiply %11564, %11127 : tensor<768xf32>
    %11566 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11567 = stablehlo.multiply %11566, %11130 : tensor<3072xf32>
    %11568 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11569 = stablehlo.multiply %11568, %11133 : tensor<768x3072xf32>
    %11570 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11571 = stablehlo.multiply %11570, %11136 : tensor<768xf32>
    %11572 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11573 = stablehlo.multiply %11572, %11139 : tensor<768xf32>
    %11574 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11575 = stablehlo.multiply %11574, %11142 : tensor<30522xf32>
    %11576 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11577 = stablehlo.multiply %11576, %11145 : tensor<768xf32>
    %11578 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11579 = stablehlo.multiply %11578, %11148 : tensor<768x768xf32>
    %11580 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11581 = stablehlo.multiply %11580, %11151 : tensor<30522x768xf32>
    %11582 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11583 = stablehlo.multiply %11582, %11154 : tensor<768xf32>
    %11584 = stablehlo.broadcast_in_dim %11179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11585 = stablehlo.multiply %11584, %11157 : tensor<768xf32>
    %11586 = stablehlo.compare  LT, %arg610, %c_756,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11587 = stablehlo.add %arg610, %c_757 : tensor<i32>
    %11588 = call @_where_348(%11586, %11587, %c_756) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11589 = stablehlo.add %arg0, %11181 : tensor<512x768xf32>
    %11590 = stablehlo.add %arg1, %11183 : tensor<2x768xf32>
    %11591 = stablehlo.add %arg2, %11185 : tensor<30522x768xf32>
    %11592 = stablehlo.add %arg3, %11187 : tensor<768xf32>
    %11593 = stablehlo.add %arg4, %11189 : tensor<768x768xf32>
    %11594 = stablehlo.add %arg5, %11191 : tensor<768xf32>
    %11595 = stablehlo.add %arg6, %11193 : tensor<768x768xf32>
    %11596 = stablehlo.add %arg7, %11195 : tensor<768xf32>
    %11597 = stablehlo.add %arg8, %11197 : tensor<768x768xf32>
    %11598 = stablehlo.add %arg9, %11199 : tensor<768xf32>
    %11599 = stablehlo.add %arg10, %11201 : tensor<768x768xf32>
    %11600 = stablehlo.add %arg11, %11203 : tensor<768xf32>
    %11601 = stablehlo.add %arg12, %11205 : tensor<768xf32>
    %11602 = stablehlo.add %arg13, %11207 : tensor<768xf32>
    %11603 = stablehlo.add %arg14, %11209 : tensor<3072x768xf32>
    %11604 = stablehlo.add %arg15, %11211 : tensor<768xf32>
    %11605 = stablehlo.add %arg16, %11213 : tensor<768xf32>
    %11606 = stablehlo.add %arg17, %11215 : tensor<3072xf32>
    %11607 = stablehlo.add %arg18, %11217 : tensor<768x3072xf32>
    %11608 = stablehlo.add %arg19, %11219 : tensor<768xf32>
    %11609 = stablehlo.add %arg20, %11221 : tensor<768x768xf32>
    %11610 = stablehlo.add %arg21, %11223 : tensor<768xf32>
    %11611 = stablehlo.add %arg22, %11225 : tensor<768x768xf32>
    %11612 = stablehlo.add %arg23, %11227 : tensor<768xf32>
    %11613 = stablehlo.add %arg24, %11229 : tensor<768x768xf32>
    %11614 = stablehlo.add %arg25, %11231 : tensor<768xf32>
    %11615 = stablehlo.add %arg26, %11233 : tensor<768x768xf32>
    %11616 = stablehlo.add %arg27, %11235 : tensor<768xf32>
    %11617 = stablehlo.add %arg28, %11237 : tensor<768xf32>
    %11618 = stablehlo.add %arg29, %11239 : tensor<768xf32>
    %11619 = stablehlo.add %arg30, %11241 : tensor<3072x768xf32>
    %11620 = stablehlo.add %arg31, %11243 : tensor<768xf32>
    %11621 = stablehlo.add %arg32, %11245 : tensor<768xf32>
    %11622 = stablehlo.add %arg33, %11247 : tensor<3072xf32>
    %11623 = stablehlo.add %arg34, %11249 : tensor<768x3072xf32>
    %11624 = stablehlo.add %arg35, %11251 : tensor<768xf32>
    %11625 = stablehlo.add %arg36, %11253 : tensor<768x768xf32>
    %11626 = stablehlo.add %arg37, %11255 : tensor<768xf32>
    %11627 = stablehlo.add %arg38, %11257 : tensor<768x768xf32>
    %11628 = stablehlo.add %arg39, %11259 : tensor<768xf32>
    %11629 = stablehlo.add %arg40, %11261 : tensor<768x768xf32>
    %11630 = stablehlo.add %arg41, %11263 : tensor<768xf32>
    %11631 = stablehlo.add %arg42, %11265 : tensor<768x768xf32>
    %11632 = stablehlo.add %arg43, %11267 : tensor<768xf32>
    %11633 = stablehlo.add %arg44, %11269 : tensor<768xf32>
    %11634 = stablehlo.add %arg45, %11271 : tensor<768xf32>
    %11635 = stablehlo.add %arg46, %11273 : tensor<3072x768xf32>
    %11636 = stablehlo.add %arg47, %11275 : tensor<768xf32>
    %11637 = stablehlo.add %arg48, %11277 : tensor<768xf32>
    %11638 = stablehlo.add %arg49, %11279 : tensor<3072xf32>
    %11639 = stablehlo.add %arg50, %11281 : tensor<768x3072xf32>
    %11640 = stablehlo.add %arg51, %11283 : tensor<768xf32>
    %11641 = stablehlo.add %arg52, %11285 : tensor<768x768xf32>
    %11642 = stablehlo.add %arg53, %11287 : tensor<768xf32>
    %11643 = stablehlo.add %arg54, %11289 : tensor<768x768xf32>
    %11644 = stablehlo.add %arg55, %11291 : tensor<768xf32>
    %11645 = stablehlo.add %arg56, %11293 : tensor<768x768xf32>
    %11646 = stablehlo.add %arg57, %11295 : tensor<768xf32>
    %11647 = stablehlo.add %arg58, %11297 : tensor<768x768xf32>
    %11648 = stablehlo.add %arg59, %11299 : tensor<768xf32>
    %11649 = stablehlo.add %arg60, %11301 : tensor<768xf32>
    %11650 = stablehlo.add %arg61, %11303 : tensor<768xf32>
    %11651 = stablehlo.add %arg62, %11305 : tensor<3072x768xf32>
    %11652 = stablehlo.add %arg63, %11307 : tensor<768xf32>
    %11653 = stablehlo.add %arg64, %11309 : tensor<768xf32>
    %11654 = stablehlo.add %arg65, %11311 : tensor<3072xf32>
    %11655 = stablehlo.add %arg66, %11313 : tensor<768x3072xf32>
    %11656 = stablehlo.add %arg67, %11315 : tensor<768xf32>
    %11657 = stablehlo.add %arg68, %11317 : tensor<768x768xf32>
    %11658 = stablehlo.add %arg69, %11319 : tensor<768xf32>
    %11659 = stablehlo.add %arg70, %11321 : tensor<768x768xf32>
    %11660 = stablehlo.add %arg71, %11323 : tensor<768xf32>
    %11661 = stablehlo.add %arg72, %11325 : tensor<768x768xf32>
    %11662 = stablehlo.add %arg73, %11327 : tensor<768xf32>
    %11663 = stablehlo.add %arg74, %11329 : tensor<768x768xf32>
    %11664 = stablehlo.add %arg75, %11331 : tensor<768xf32>
    %11665 = stablehlo.add %arg76, %11333 : tensor<768xf32>
    %11666 = stablehlo.add %arg77, %11335 : tensor<768xf32>
    %11667 = stablehlo.add %arg78, %11337 : tensor<3072x768xf32>
    %11668 = stablehlo.add %arg79, %11339 : tensor<768xf32>
    %11669 = stablehlo.add %arg80, %11341 : tensor<768xf32>
    %11670 = stablehlo.add %arg81, %11343 : tensor<3072xf32>
    %11671 = stablehlo.add %arg82, %11345 : tensor<768x3072xf32>
    %11672 = stablehlo.add %arg83, %11347 : tensor<768xf32>
    %11673 = stablehlo.add %arg84, %11349 : tensor<768x768xf32>
    %11674 = stablehlo.add %arg85, %11351 : tensor<768xf32>
    %11675 = stablehlo.add %arg86, %11353 : tensor<768x768xf32>
    %11676 = stablehlo.add %arg87, %11355 : tensor<768xf32>
    %11677 = stablehlo.add %arg88, %11357 : tensor<768x768xf32>
    %11678 = stablehlo.add %arg89, %11359 : tensor<768xf32>
    %11679 = stablehlo.add %arg90, %11361 : tensor<768x768xf32>
    %11680 = stablehlo.add %arg91, %11363 : tensor<768xf32>
    %11681 = stablehlo.add %arg92, %11365 : tensor<768xf32>
    %11682 = stablehlo.add %arg93, %11367 : tensor<768xf32>
    %11683 = stablehlo.add %arg94, %11369 : tensor<3072x768xf32>
    %11684 = stablehlo.add %arg95, %11371 : tensor<768xf32>
    %11685 = stablehlo.add %arg96, %11373 : tensor<768xf32>
    %11686 = stablehlo.add %arg97, %11375 : tensor<3072xf32>
    %11687 = stablehlo.add %arg98, %11377 : tensor<768x3072xf32>
    %11688 = stablehlo.add %arg99, %11379 : tensor<768xf32>
    %11689 = stablehlo.add %arg100, %11381 : tensor<768x768xf32>
    %11690 = stablehlo.add %arg101, %11383 : tensor<768xf32>
    %11691 = stablehlo.add %arg102, %11385 : tensor<768x768xf32>
    %11692 = stablehlo.add %arg103, %11387 : tensor<768xf32>
    %11693 = stablehlo.add %arg104, %11389 : tensor<768x768xf32>
    %11694 = stablehlo.add %arg105, %11391 : tensor<768xf32>
    %11695 = stablehlo.add %arg106, %11393 : tensor<768x768xf32>
    %11696 = stablehlo.add %arg107, %11395 : tensor<768xf32>
    %11697 = stablehlo.add %arg108, %11397 : tensor<768xf32>
    %11698 = stablehlo.add %arg109, %11399 : tensor<768xf32>
    %11699 = stablehlo.add %arg110, %11401 : tensor<3072x768xf32>
    %11700 = stablehlo.add %arg111, %11403 : tensor<768xf32>
    %11701 = stablehlo.add %arg112, %11405 : tensor<768xf32>
    %11702 = stablehlo.add %arg113, %11407 : tensor<3072xf32>
    %11703 = stablehlo.add %arg114, %11409 : tensor<768x3072xf32>
    %11704 = stablehlo.add %arg115, %11411 : tensor<768xf32>
    %11705 = stablehlo.add %arg116, %11413 : tensor<768x768xf32>
    %11706 = stablehlo.add %arg117, %11415 : tensor<768xf32>
    %11707 = stablehlo.add %arg118, %11417 : tensor<768x768xf32>
    %11708 = stablehlo.add %arg119, %11419 : tensor<768xf32>
    %11709 = stablehlo.add %arg120, %11421 : tensor<768x768xf32>
    %11710 = stablehlo.add %arg121, %11423 : tensor<768xf32>
    %11711 = stablehlo.add %arg122, %11425 : tensor<768x768xf32>
    %11712 = stablehlo.add %arg123, %11427 : tensor<768xf32>
    %11713 = stablehlo.add %arg124, %11429 : tensor<768xf32>
    %11714 = stablehlo.add %arg125, %11431 : tensor<768xf32>
    %11715 = stablehlo.add %arg126, %11433 : tensor<3072x768xf32>
    %11716 = stablehlo.add %arg127, %11435 : tensor<768xf32>
    %11717 = stablehlo.add %arg128, %11437 : tensor<768xf32>
    %11718 = stablehlo.add %arg129, %11439 : tensor<3072xf32>
    %11719 = stablehlo.add %arg130, %11441 : tensor<768x3072xf32>
    %11720 = stablehlo.add %arg131, %11443 : tensor<768xf32>
    %11721 = stablehlo.add %arg132, %11445 : tensor<768x768xf32>
    %11722 = stablehlo.add %arg133, %11447 : tensor<768xf32>
    %11723 = stablehlo.add %arg134, %11449 : tensor<768x768xf32>
    %11724 = stablehlo.add %arg135, %11451 : tensor<768xf32>
    %11725 = stablehlo.add %arg136, %11453 : tensor<768x768xf32>
    %11726 = stablehlo.add %arg137, %11455 : tensor<768xf32>
    %11727 = stablehlo.add %arg138, %11457 : tensor<768x768xf32>
    %11728 = stablehlo.add %arg139, %11459 : tensor<768xf32>
    %11729 = stablehlo.add %arg140, %11461 : tensor<768xf32>
    %11730 = stablehlo.add %arg141, %11463 : tensor<768xf32>
    %11731 = stablehlo.add %arg142, %11465 : tensor<3072x768xf32>
    %11732 = stablehlo.add %arg143, %11467 : tensor<768xf32>
    %11733 = stablehlo.add %arg144, %11469 : tensor<768xf32>
    %11734 = stablehlo.add %arg145, %11471 : tensor<3072xf32>
    %11735 = stablehlo.add %arg146, %11473 : tensor<768x3072xf32>
    %11736 = stablehlo.add %arg147, %11475 : tensor<768xf32>
    %11737 = stablehlo.add %arg148, %11477 : tensor<768x768xf32>
    %11738 = stablehlo.add %arg149, %11479 : tensor<768xf32>
    %11739 = stablehlo.add %arg150, %11481 : tensor<768x768xf32>
    %11740 = stablehlo.add %arg151, %11483 : tensor<768xf32>
    %11741 = stablehlo.add %arg152, %11485 : tensor<768x768xf32>
    %11742 = stablehlo.add %arg153, %11487 : tensor<768xf32>
    %11743 = stablehlo.add %arg154, %11489 : tensor<768x768xf32>
    %11744 = stablehlo.add %arg155, %11491 : tensor<768xf32>
    %11745 = stablehlo.add %arg156, %11493 : tensor<768xf32>
    %11746 = stablehlo.add %arg157, %11495 : tensor<768xf32>
    %11747 = stablehlo.add %arg158, %11497 : tensor<3072x768xf32>
    %11748 = stablehlo.add %arg159, %11499 : tensor<768xf32>
    %11749 = stablehlo.add %arg160, %11501 : tensor<768xf32>
    %11750 = stablehlo.add %arg161, %11503 : tensor<3072xf32>
    %11751 = stablehlo.add %arg162, %11505 : tensor<768x3072xf32>
    %11752 = stablehlo.add %arg163, %11507 : tensor<768xf32>
    %11753 = stablehlo.add %arg164, %11509 : tensor<768x768xf32>
    %11754 = stablehlo.add %arg165, %11511 : tensor<768xf32>
    %11755 = stablehlo.add %arg166, %11513 : tensor<768x768xf32>
    %11756 = stablehlo.add %arg167, %11515 : tensor<768xf32>
    %11757 = stablehlo.add %arg168, %11517 : tensor<768x768xf32>
    %11758 = stablehlo.add %arg169, %11519 : tensor<768xf32>
    %11759 = stablehlo.add %arg170, %11521 : tensor<768x768xf32>
    %11760 = stablehlo.add %arg171, %11523 : tensor<768xf32>
    %11761 = stablehlo.add %arg172, %11525 : tensor<768xf32>
    %11762 = stablehlo.add %arg173, %11527 : tensor<768xf32>
    %11763 = stablehlo.add %arg174, %11529 : tensor<3072x768xf32>
    %11764 = stablehlo.add %arg175, %11531 : tensor<768xf32>
    %11765 = stablehlo.add %arg176, %11533 : tensor<768xf32>
    %11766 = stablehlo.add %arg177, %11535 : tensor<3072xf32>
    %11767 = stablehlo.add %arg178, %11537 : tensor<768x3072xf32>
    %11768 = stablehlo.add %arg179, %11539 : tensor<768xf32>
    %11769 = stablehlo.add %arg180, %11541 : tensor<768x768xf32>
    %11770 = stablehlo.add %arg181, %11543 : tensor<768xf32>
    %11771 = stablehlo.add %arg182, %11545 : tensor<768x768xf32>
    %11772 = stablehlo.add %arg183, %11547 : tensor<768xf32>
    %11773 = stablehlo.add %arg184, %11549 : tensor<768x768xf32>
    %11774 = stablehlo.add %arg185, %11551 : tensor<768xf32>
    %11775 = stablehlo.add %arg186, %11553 : tensor<768x768xf32>
    %11776 = stablehlo.add %arg187, %11555 : tensor<768xf32>
    %11777 = stablehlo.add %arg188, %11557 : tensor<768xf32>
    %11778 = stablehlo.add %arg189, %11559 : tensor<768xf32>
    %11779 = stablehlo.add %arg190, %11561 : tensor<3072x768xf32>
    %11780 = stablehlo.add %arg191, %11563 : tensor<768xf32>
    %11781 = stablehlo.add %arg192, %11565 : tensor<768xf32>
    %11782 = stablehlo.add %arg193, %11567 : tensor<3072xf32>
    %11783 = stablehlo.add %arg194, %11569 : tensor<768x3072xf32>
    %11784 = stablehlo.add %arg195, %11571 : tensor<768xf32>
    %11785 = stablehlo.add %arg196, %11573 : tensor<768xf32>
    %11786 = stablehlo.add %arg197, %11575 : tensor<30522xf32>
    %11787 = stablehlo.add %arg198, %11577 : tensor<768xf32>
    %11788 = stablehlo.add %arg199, %11579 : tensor<768x768xf32>
    %11789 = stablehlo.add %arg200, %11581 : tensor<30522x768xf32>
    %11790 = stablehlo.add %arg201, %11583 : tensor<768xf32>
    %11791 = stablehlo.add %arg202, %11585 : tensor<768xf32>
    return %11589, %11590, %11591, %11592, %11593, %11594, %11595, %11596, %11597, %11598, %11599, %11600, %11601, %11602, %11603, %11604, %11605, %11606, %11607, %11608, %11609, %11610, %11611, %11612, %11613, %11614, %11615, %11616, %11617, %11618, %11619, %11620, %11621, %11622, %11623, %11624, %11625, %11626, %11627, %11628, %11629, %11630, %11631, %11632, %11633, %11634, %11635, %11636, %11637, %11638, %11639, %11640, %11641, %11642, %11643, %11644, %11645, %11646, %11647, %11648, %11649, %11650, %11651, %11652, %11653, %11654, %11655, %11656, %11657, %11658, %11659, %11660, %11661, %11662, %11663, %11664, %11665, %11666, %11667, %11668, %11669, %11670, %11671, %11672, %11673, %11674, %11675, %11676, %11677, %11678, %11679, %11680, %11681, %11682, %11683, %11684, %11685, %11686, %11687, %11688, %11689, %11690, %11691, %11692, %11693, %11694, %11695, %11696, %11697, %11698, %11699, %11700, %11701, %11702, %11703, %11704, %11705, %11706, %11707, %11708, %11709, %11710, %11711, %11712, %11713, %11714, %11715, %11716, %11717, %11718, %11719, %11720, %11721, %11722, %11723, %11724, %11725, %11726, %11727, %11728, %11729, %11730, %11731, %11732, %11733, %11734, %11735, %11736, %11737, %11738, %11739, %11740, %11741, %11742, %11743, %11744, %11745, %11746, %11747, %11748, %11749, %11750, %11751, %11752, %11753, %11754, %11755, %11756, %11757, %11758, %11759, %11760, %11761, %11762, %11763, %11764, %11765, %11766, %11767, %11768, %11769, %11770, %11771, %11772, %11773, %11774, %11775, %11776, %11777, %11778, %11779, %11780, %11781, %11782, %11783, %11784, %11785, %11786, %11787, %11788, %11789, %11790, %11791, %8512, %6281, %6286, %6291, %6296, %6301, %6306, %6311, %6316, %6321, %6326, %6331, %6336, %6341, %6346, %6351, %6356, %6361, %6366, %6371, %6376, %6381, %6386, %6391, %6396, %6401, %6406, %6411, %6416, %6421, %6426, %6431, %6436, %6441, %6446, %6451, %6456, %6461, %6466, %6471, %6476, %6481, %6486, %6491, %6496, %6501, %6506, %6511, %6516, %6521, %6526, %6531, %6536, %6541, %6546, %6551, %6556, %6561, %6566, %6571, %6576, %6581, %6586, %6591, %6596, %6601, %6606, %6611, %6616, %6621, %6626, %6631, %6636, %6641, %6646, %6651, %6656, %6661, %6666, %6671, %6676, %6681, %6686, %6691, %6696, %6701, %6706, %6711, %6716, %6721, %6726, %6731, %6736, %6741, %6746, %6751, %6756, %6761, %6766, %6771, %6776, %6781, %6786, %6791, %6796, %6801, %6806, %6811, %6816, %6821, %6826, %6831, %6836, %6841, %6846, %6851, %6856, %6861, %6866, %6871, %6876, %6881, %6886, %6891, %6896, %6901, %6906, %6911, %6916, %6921, %6926, %6931, %6936, %6941, %6946, %6951, %6956, %6961, %6966, %6971, %6976, %6981, %6986, %6991, %6996, %7001, %7006, %7011, %7016, %7021, %7026, %7031, %7036, %7041, %7046, %7051, %7056, %7061, %7066, %7071, %7076, %7081, %7086, %7091, %7096, %7101, %7106, %7111, %7116, %7121, %7126, %7131, %7136, %7141, %7146, %7151, %7156, %7161, %7166, %7171, %7176, %7181, %7186, %7191, %7196, %7201, %7206, %7211, %7216, %7221, %7226, %7231, %7236, %7241, %7246, %7251, %7256, %7261, %7266, %7271, %7276, %7281, %7286, %7291, %7297, %7303, %7309, %7315, %7321, %7327, %7333, %7339, %7345, %7351, %7357, %7363, %7369, %7375, %7381, %7387, %7393, %7399, %7405, %7411, %7417, %7423, %7429, %7435, %7441, %7447, %7453, %7459, %7465, %7471, %7477, %7483, %7489, %7495, %7501, %7507, %7513, %7519, %7525, %7531, %7537, %7543, %7549, %7555, %7561, %7567, %7573, %7579, %7585, %7591, %7597, %7603, %7609, %7615, %7621, %7627, %7633, %7639, %7645, %7651, %7657, %7663, %7669, %7675, %7681, %7687, %7693, %7699, %7705, %7711, %7717, %7723, %7729, %7735, %7741, %7747, %7753, %7759, %7765, %7771, %7777, %7783, %7789, %7795, %7801, %7807, %7813, %7819, %7825, %7831, %7837, %7843, %7849, %7855, %7861, %7867, %7873, %7879, %7885, %7891, %7897, %7903, %7909, %7915, %7921, %7927, %7933, %7939, %7945, %7951, %7957, %7963, %7969, %7975, %7981, %7987, %7993, %7999, %8005, %8011, %8017, %8023, %8029, %8035, %8041, %8047, %8053, %8059, %8065, %8071, %8077, %8083, %8089, %8095, %8101, %8107, %8113, %8119, %8125, %8131, %8137, %8143, %8149, %8155, %8161, %8167, %8173, %8179, %8185, %8191, %8197, %8203, %8209, %8215, %8221, %8227, %8233, %8239, %8245, %8251, %8257, %8263, %8269, %8275, %8281, %8287, %8293, %8299, %8305, %8311, %8317, %8323, %8329, %8335, %8341, %8347, %8353, %8359, %8365, %8371, %8377, %8383, %8389, %8395, %8401, %8407, %8413, %8419, %8425, %8431, %8437, %8443, %8449, %8455, %8461, %8467, %8473, %8479, %8485, %8491, %8497, %8503, %8509, %11588, %2494, %2489, %2487, %2489, %2489 : tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_threefry_fold_in(%arg0: tensor<2xui32>, %arg1: tensor<ui32>) -> tensor<2xui32> {
    %c = stablehlo.constant dense<32> : tensor<ui32>
    %0 = stablehlo.shift_right_logical %arg1, %c : tensor<ui32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %c_0 = stablehlo.constant dense<4294967295> : tensor<ui32>
    %2 = stablehlo.and %arg1, %c_0 : tensor<ui32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %4 = stablehlo.concatenate %1, %3, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    %5 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %6 = stablehlo.reshape %5 : (tensor<1xui32>) -> tensor<ui32>
    %7 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %8 = stablehlo.reshape %7 : (tensor<1xui32>) -> tensor<ui32>
    %9 = stablehlo.slice %4 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %10 = stablehlo.slice %4 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %11:2 = call @threefry2x32(%6, %8, %9, %10) : (tensor<ui32>, tensor<ui32>, tensor<1xui32>, tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>)
    %12 = stablehlo.concatenate %11#0, %11#1, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    return %12 : tensor<2xui32>
  }
  func.func private @threefry2x32(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<1xui32>, %arg3: tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<1xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<1xui32>
    %6 = stablehlo.add %3, %5 : tensor<1xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<1xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<1xui32>
    %11 = stablehlo.or %8, %10 : tensor<1xui32>
    %12 = stablehlo.xor %6, %11 : tensor<1xui32>
    %13 = stablehlo.add %6, %12 : tensor<1xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<1xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<1xui32>
    %18 = stablehlo.or %15, %17 : tensor<1xui32>
    %19 = stablehlo.xor %13, %18 : tensor<1xui32>
    %20 = stablehlo.add %13, %19 : tensor<1xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<1xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<1xui32>
    %25 = stablehlo.or %22, %24 : tensor<1xui32>
    %26 = stablehlo.xor %20, %25 : tensor<1xui32>
    %27 = stablehlo.add %20, %26 : tensor<1xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<1xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<1xui32>
    %32 = stablehlo.or %29, %31 : tensor<1xui32>
    %33 = stablehlo.xor %27, %32 : tensor<1xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %35 = stablehlo.add %27, %34 : tensor<1xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %37 = stablehlo.add %33, %36 : tensor<1xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %39 = stablehlo.add %37, %38 : tensor<1xui32>
    %40 = stablehlo.add %35, %39 : tensor<1xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<1xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<1xui32>
    %45 = stablehlo.or %42, %44 : tensor<1xui32>
    %46 = stablehlo.xor %40, %45 : tensor<1xui32>
    %47 = stablehlo.add %40, %46 : tensor<1xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<1xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<1xui32>
    %52 = stablehlo.or %49, %51 : tensor<1xui32>
    %53 = stablehlo.xor %47, %52 : tensor<1xui32>
    %54 = stablehlo.add %47, %53 : tensor<1xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<1xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<1xui32>
    %59 = stablehlo.or %56, %58 : tensor<1xui32>
    %60 = stablehlo.xor %54, %59 : tensor<1xui32>
    %61 = stablehlo.add %54, %60 : tensor<1xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<1xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<1xui32>
    %66 = stablehlo.or %63, %65 : tensor<1xui32>
    %67 = stablehlo.xor %61, %66 : tensor<1xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %69 = stablehlo.add %61, %68 : tensor<1xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %71 = stablehlo.add %67, %70 : tensor<1xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %73 = stablehlo.add %71, %72 : tensor<1xui32>
    %74 = stablehlo.add %69, %73 : tensor<1xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<1xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<1xui32>
    %79 = stablehlo.or %76, %78 : tensor<1xui32>
    %80 = stablehlo.xor %74, %79 : tensor<1xui32>
    %81 = stablehlo.add %74, %80 : tensor<1xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<1xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<1xui32>
    %86 = stablehlo.or %83, %85 : tensor<1xui32>
    %87 = stablehlo.xor %81, %86 : tensor<1xui32>
    %88 = stablehlo.add %81, %87 : tensor<1xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<1xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<1xui32>
    %93 = stablehlo.or %90, %92 : tensor<1xui32>
    %94 = stablehlo.xor %88, %93 : tensor<1xui32>
    %95 = stablehlo.add %88, %94 : tensor<1xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<1xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<1xui32>
    %100 = stablehlo.or %97, %99 : tensor<1xui32>
    %101 = stablehlo.xor %95, %100 : tensor<1xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %103 = stablehlo.add %95, %102 : tensor<1xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %105 = stablehlo.add %101, %104 : tensor<1xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %107 = stablehlo.add %105, %106 : tensor<1xui32>
    %108 = stablehlo.add %103, %107 : tensor<1xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<1xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<1xui32>
    %113 = stablehlo.or %110, %112 : tensor<1xui32>
    %114 = stablehlo.xor %108, %113 : tensor<1xui32>
    %115 = stablehlo.add %108, %114 : tensor<1xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<1xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<1xui32>
    %120 = stablehlo.or %117, %119 : tensor<1xui32>
    %121 = stablehlo.xor %115, %120 : tensor<1xui32>
    %122 = stablehlo.add %115, %121 : tensor<1xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<1xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<1xui32>
    %127 = stablehlo.or %124, %126 : tensor<1xui32>
    %128 = stablehlo.xor %122, %127 : tensor<1xui32>
    %129 = stablehlo.add %122, %128 : tensor<1xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<1xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<1xui32>
    %134 = stablehlo.or %131, %133 : tensor<1xui32>
    %135 = stablehlo.xor %129, %134 : tensor<1xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %137 = stablehlo.add %129, %136 : tensor<1xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %139 = stablehlo.add %135, %138 : tensor<1xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %141 = stablehlo.add %139, %140 : tensor<1xui32>
    %142 = stablehlo.add %137, %141 : tensor<1xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<1xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<1xui32>
    %147 = stablehlo.or %144, %146 : tensor<1xui32>
    %148 = stablehlo.xor %142, %147 : tensor<1xui32>
    %149 = stablehlo.add %142, %148 : tensor<1xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<1xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<1xui32>
    %154 = stablehlo.or %151, %153 : tensor<1xui32>
    %155 = stablehlo.xor %149, %154 : tensor<1xui32>
    %156 = stablehlo.add %149, %155 : tensor<1xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<1xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<1xui32>
    %161 = stablehlo.or %158, %160 : tensor<1xui32>
    %162 = stablehlo.xor %156, %161 : tensor<1xui32>
    %163 = stablehlo.add %156, %162 : tensor<1xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<1xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<1xui32>
    %168 = stablehlo.or %165, %167 : tensor<1xui32>
    %169 = stablehlo.xor %163, %168 : tensor<1xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %171 = stablehlo.add %163, %170 : tensor<1xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %173 = stablehlo.add %169, %172 : tensor<1xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %175 = stablehlo.add %173, %174 : tensor<1xui32>
    return %171, %175 : tensor<1xui32>, tensor<1xui32>
  }
  func.func private @_bernoulli(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x512x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x512x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<64x512x768xi1>
    return %2 : tensor<64x512x768xi1>
  }
  func.func private @_uniform(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x512x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x512x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x512x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x512x768xui64>
    %c = stablehlo.constant dense<393216> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x512x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x512x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x512x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x512x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x512x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x512x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %23:2 = call @threefry2x32_31(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x512x768xui32>, tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x512x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x512x768xui32>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x512x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x512x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x512x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x512x768xf32>
    return %38 : tensor<64x512x768xf32>
  }
  func.func private @threefry2x32_31(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x512x768xui32>, %arg3: tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x512x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x512x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x512x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x512x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x512x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x512x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x512x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x512x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x512x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x512x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x512x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x512x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x512x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x512x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x512x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x512x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x512x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x512x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x512x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x512x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x512x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x512x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x512x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x512x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x512x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x512x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x512x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x512x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x512x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x512x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x512x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x512x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x512x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x512x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x512x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x512x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x512x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x512x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x512x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x512x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x512x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x512x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x512x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x512x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x512x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x512x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x512x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x512x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x512x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x512x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x512x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x512x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x512x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x512x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x512x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x512x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x512x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x512x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x512x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x512x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x512x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x512x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x512x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x512x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x512x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x512x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x512x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x512x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x512x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x512x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x512x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x512x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x512x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x512x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x512x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x512x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x512x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x512x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x512x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x512x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x512x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x512x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x512x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x512x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x512x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x512x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x512x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x512x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x512x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x512x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x512x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x512x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x512x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x512x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x512x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x512x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x512x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x512x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x512x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x512x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x512x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x512x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x512x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x512x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x512x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x512x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x512x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x512x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x512x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x512x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x512x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x512x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x512x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x512x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x512x768xui32>
    return %171, %175 : tensor<64x512x768xui32>, tensor<64x512x768xui32>
  }
  func.func private @_bernoulli_71(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x12x512x512xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_72(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x12x512x512xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x12x512x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x512x512xi1>
    return %2 : tensor<64x12x512x512xi1>
  }
  func.func private @_uniform_72(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x12x512x512xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x12x512x512xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x12x512x512xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x12x512x512xui64>
    %11 = stablehlo.iota dim = 3 : tensor<64x12x512x512xui64>
    %c = stablehlo.constant dense<3145728> : tensor<ui64>
    %12 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %13 = stablehlo.multiply %12, %8 : tensor<64x12x512x512xui64>
    %c_0 = stablehlo.constant dense<262144> : tensor<ui64>
    %14 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %15 = stablehlo.multiply %14, %9 : tensor<64x12x512x512xui64>
    %c_1 = stablehlo.constant dense<512> : tensor<ui64>
    %16 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %17 = stablehlo.multiply %16, %10 : tensor<64x12x512x512xui64>
    %c_2 = stablehlo.constant dense<1> : tensor<ui64>
    %18 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %19 = stablehlo.multiply %18, %11 : tensor<64x12x512x512xui64>
    %20 = stablehlo.add %13, %15 : tensor<64x12x512x512xui64>
    %21 = stablehlo.add %20, %17 : tensor<64x12x512x512xui64>
    %22 = stablehlo.add %21, %19 : tensor<64x12x512x512xui64>
    %c_3 = stablehlo.constant dense<32> : tensor<ui64>
    %23 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %24 = stablehlo.shift_right_logical %22, %23 : tensor<64x12x512x512xui64>
    %25 = stablehlo.convert %22 : (tensor<64x12x512x512xui64>) -> tensor<64x12x512x512xui32>
    %26 = stablehlo.convert %24 : (tensor<64x12x512x512xui64>) -> tensor<64x12x512x512xui32>
    %27:2 = call @threefry2x32_76(%5, %7, %26, %25) : (tensor<ui32>, tensor<ui32>, tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>) -> (tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>)
    %28 = stablehlo.xor %27#0, %27#1 : tensor<64x12x512x512xui32>
    %c_4 = stablehlo.constant dense<9> : tensor<ui32>
    %29 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %30 = stablehlo.shift_right_logical %28, %29 : tensor<64x12x512x512xui32>
    %c_5 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %31 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %32 = stablehlo.or %30, %31 : tensor<64x12x512x512xui32>
    %33 = stablehlo.bitcast_convert %32 : (tensor<64x12x512x512xui32>) -> tensor<64x12x512x512xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %35 = stablehlo.subtract %33, %34 : tensor<64x12x512x512xf32>
    %36 = stablehlo.subtract %3, %2 : tensor<1x1x1x1xf32>
    %37 = stablehlo.broadcast_in_dim %36, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %38 = stablehlo.multiply %35, %37 : tensor<64x12x512x512xf32>
    %39 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %40 = stablehlo.add %38, %39 : tensor<64x12x512x512xf32>
    %41 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %42 = stablehlo.maximum %41, %40 : tensor<64x12x512x512xf32>
    return %42 : tensor<64x12x512x512xf32>
  }
  func.func private @threefry2x32_76(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x12x512x512xui32>, %arg3: tensor<64x12x512x512xui32>) -> (tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x12x512x512xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x12x512x512xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x12x512x512xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x12x512x512xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x12x512x512xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x12x512x512xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x12x512x512xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x12x512x512xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x12x512x512xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x12x512x512xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x12x512x512xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x12x512x512xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x12x512x512xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x12x512x512xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x12x512x512xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x12x512x512xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x12x512x512xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x12x512x512xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x12x512x512xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x12x512x512xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x12x512x512xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x12x512x512xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x12x512x512xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x12x512x512xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x12x512x512xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x12x512x512xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x12x512x512xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x12x512x512xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x12x512x512xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x12x512x512xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x12x512x512xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x12x512x512xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x12x512x512xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x12x512x512xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x12x512x512xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x12x512x512xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x12x512x512xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x12x512x512xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x12x512x512xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x12x512x512xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x12x512x512xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x12x512x512xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x12x512x512xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x12x512x512xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x12x512x512xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x12x512x512xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x12x512x512xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x12x512x512xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x12x512x512xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x12x512x512xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x12x512x512xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x12x512x512xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x12x512x512xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x12x512x512xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x12x512x512xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x12x512x512xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x12x512x512xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x12x512x512xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x12x512x512xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x12x512x512xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x12x512x512xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x12x512x512xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x12x512x512xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x12x512x512xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x12x512x512xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x12x512x512xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x12x512x512xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x12x512x512xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x12x512x512xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x12x512x512xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x12x512x512xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x12x512x512xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x12x512x512xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x12x512x512xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x12x512x512xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x12x512x512xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x12x512x512xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x12x512x512xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x12x512x512xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x12x512x512xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x12x512x512xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x12x512x512xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x12x512x512xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x12x512x512xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x12x512x512xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x12x512x512xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x12x512x512xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x12x512x512xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x12x512x512xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x12x512x512xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x12x512x512xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x12x512x512xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x12x512x512xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x12x512x512xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x12x512x512xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x12x512x512xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x12x512x512xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x12x512x512xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x12x512x512xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x12x512x512xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x12x512x512xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x12x512x512xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x12x512x512xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x12x512x512xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x12x512x512xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x12x512x512xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x12x512x512xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x12x512x512xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x12x512x512xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x12x512x512xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x12x512x512xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x12x512x512xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x12x512x512xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x12x512x512xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x12x512x512xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x12x512x512xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x12x512x512xui32>
    return %171, %175 : tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>
  }
  func.func private @_bernoulli_112(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x1x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_113(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x1x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x1x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x1x768xf32>, tensor<64x1x768xf32>) -> tensor<64x1x768xi1>
    return %2 : tensor<64x1x768xi1>
  }
  func.func private @_uniform_113(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x1x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x1x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x1x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x1x768xui64>
    %c = stablehlo.constant dense<768> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x1x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x1x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x1x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x1x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x1x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x1x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x1x768xui64>) -> tensor<64x1x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x1x768xui64>) -> tensor<64x1x768xui32>
    %23:2 = call @threefry2x32_116(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x1x768xui32>, tensor<64x1x768xui32>) -> (tensor<64x1x768xui32>, tensor<64x1x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x1x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x1x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x1x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x1x768xui32>) -> tensor<64x1x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x1x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x1x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x1x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x1x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x1x768xf32>
    return %38 : tensor<64x1x768xf32>
  }
  func.func private @threefry2x32_116(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x1x768xui32>, %arg3: tensor<64x1x768xui32>) -> (tensor<64x1x768xui32>, tensor<64x1x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x1x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x1x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x1x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x1x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x1x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x1x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x1x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x1x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x1x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x1x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x1x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x1x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x1x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x1x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x1x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x1x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x1x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x1x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x1x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x1x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x1x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x1x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x1x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x1x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x1x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x1x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x1x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x1x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x1x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x1x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x1x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x1x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x1x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x1x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x1x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x1x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x1x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x1x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x1x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x1x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x1x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x1x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x1x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x1x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x1x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x1x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x1x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x1x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x1x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x1x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x1x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x1x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x1x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x1x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x1x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x1x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x1x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x1x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x1x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x1x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x1x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x1x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x1x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x1x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x1x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x1x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x1x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x1x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x1x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x1x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x1x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x1x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x1x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x1x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x1x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x1x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x1x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x1x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x1x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x1x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x1x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x1x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x1x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x1x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x1x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x1x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x1x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x1x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x1x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x1x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x1x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x1x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x1x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x1x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x1x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x1x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x1x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x1x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x1x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x1x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x1x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x1x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x1x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x1x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x1x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x1x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x1x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x1x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x1x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x1x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x1x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x1x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x1x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x1x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x1x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x1x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x1x768xui32>
    return %171, %175 : tensor<64x1x768xui32>, tensor<64x1x768xui32>
  }
  func.func private @_where(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_160(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_176(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_177(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_where_348(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_398(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
