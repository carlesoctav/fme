module @jit__step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  func.func public @main(%arg0: tensor<30522x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg1: tensor<512x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg2: tensor<2x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg3: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg4: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg5: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg6: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg7: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg8: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg9: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg10: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg11: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg12: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg13: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg14: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg15: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg16: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg17: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg18: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg19: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg20: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg21: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg22: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg23: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg24: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg25: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg26: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg27: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg28: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg29: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg30: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg31: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg32: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg33: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg34: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg35: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg36: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg37: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg38: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg39: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg40: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg41: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg42: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg43: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg44: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg45: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg46: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg47: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg48: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg49: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg50: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg51: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg52: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg53: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg54: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg55: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg56: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg57: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg58: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg59: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg60: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg61: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg62: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg63: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg64: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg65: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg66: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg67: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg68: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg69: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg70: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg71: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg72: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg73: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg74: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg75: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg76: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg77: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg78: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg79: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg80: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg81: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg82: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg83: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg84: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg85: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg86: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg87: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg88: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg89: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg90: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg91: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg92: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg93: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg94: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg95: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg96: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg97: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg98: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg99: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg100: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg101: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg102: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg103: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg104: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg105: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg106: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg107: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg108: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg109: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg110: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg111: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg112: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg113: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg114: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg115: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg116: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg117: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg118: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg119: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg120: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg121: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg122: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg123: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg124: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg125: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg126: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg127: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg128: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg129: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg130: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg131: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg132: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg133: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg134: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg135: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg136: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg137: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg138: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg139: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg140: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg141: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg142: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg143: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg144: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg145: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg146: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg147: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg148: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg149: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg150: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg151: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg152: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg153: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg154: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg155: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg156: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg157: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg158: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg159: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg160: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg161: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg162: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg163: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg164: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg165: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg166: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg167: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg168: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg169: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg170: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg171: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg172: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg173: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg174: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg175: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg176: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg177: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg178: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg179: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg180: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg181: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg182: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg183: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg184: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg185: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg186: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg187: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg188: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg189: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg190: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg191: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg192: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg193: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg194: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg195: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg196: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg197: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg198: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg199: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg200: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg201: tensor<30522xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg202: tensor<i32>, %arg203: tensor<30522x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg204: tensor<512x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg205: tensor<2x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg206: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg207: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg208: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg209: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg210: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg211: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg212: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg213: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg214: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg215: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg216: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg217: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg218: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg219: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg220: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg221: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg222: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg223: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg224: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg225: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg226: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg227: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg228: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg229: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg230: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg231: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg232: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg233: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg234: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg235: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg236: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg237: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg238: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg239: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg240: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg241: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg242: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg243: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg244: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg245: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg246: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg247: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg248: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg249: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg250: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg251: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg252: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg253: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg254: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg255: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg256: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg257: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg258: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg259: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg260: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg261: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg262: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg263: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg264: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg265: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg266: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg267: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg268: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg269: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg270: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg271: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg272: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg273: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg274: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg275: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg276: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg277: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg278: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg279: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg280: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg281: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg282: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg283: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg284: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg285: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg286: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg287: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg288: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg289: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg290: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg291: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg292: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg293: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg294: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg295: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg296: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg297: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg298: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg299: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg300: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg301: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg302: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg303: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg304: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg305: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg306: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg307: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg308: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg309: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg310: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg311: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg312: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg313: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg314: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg315: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg316: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg317: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg318: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg319: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg320: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg321: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg322: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg323: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg324: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg325: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg326: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg327: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg328: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg329: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg330: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg331: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg332: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg333: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg334: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg335: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg336: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg337: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg338: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg339: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg340: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg341: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg342: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg343: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg344: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg345: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg346: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg347: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg348: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg349: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg350: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg351: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg352: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg353: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg354: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg355: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg356: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg357: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg358: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg359: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg360: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg361: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg362: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg363: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg364: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg365: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg366: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg367: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg368: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg369: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg370: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg371: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg372: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg373: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg374: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg375: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg376: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg377: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg378: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg379: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg380: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg381: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg382: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg383: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg384: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg385: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg386: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg387: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg388: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg389: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg390: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg391: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg392: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg393: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg394: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg395: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg396: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg397: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg398: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg399: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg400: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg401: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg402: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg403: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg404: tensor<30522xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg405: tensor<30522x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg406: tensor<512x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg407: tensor<2x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg408: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg409: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg410: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg411: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg412: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg413: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg414: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg415: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg416: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg417: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg418: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg419: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg420: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg421: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg422: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg423: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg424: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg425: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg426: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg427: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg428: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg429: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg430: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg431: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg432: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg433: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg434: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg435: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg436: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg437: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg438: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg439: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg440: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg441: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg442: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg443: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg444: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg445: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg446: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg447: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg448: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg449: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg450: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg451: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg452: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg453: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg454: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg455: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg456: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg457: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg458: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg459: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg460: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg461: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg462: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg463: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg464: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg465: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg466: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg467: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg468: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg469: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg470: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg471: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg472: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg473: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg474: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg475: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg476: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg477: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg478: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg479: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg480: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg481: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg482: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg483: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg484: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg485: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg486: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg487: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg488: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg489: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg490: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg491: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg492: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg493: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg494: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg495: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg496: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg497: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg498: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg499: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg500: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg501: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg502: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg503: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg504: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg505: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg506: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg507: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg508: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg509: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg510: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg511: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg512: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg513: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg514: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg515: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg516: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg517: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg518: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg519: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg520: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg521: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg522: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg523: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg524: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg525: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg526: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg527: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg528: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg529: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg530: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg531: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg532: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg533: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg534: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg535: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg536: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg537: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg538: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg539: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg540: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg541: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg542: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg543: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg544: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg545: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg546: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg547: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg548: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg549: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg550: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg551: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg552: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg553: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg554: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg555: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg556: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg557: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg558: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg559: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg560: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg561: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg562: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg563: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg564: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg565: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg566: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg567: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg568: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg569: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg570: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg571: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg572: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg573: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg574: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg575: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg576: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg577: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg578: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg579: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg580: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg581: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg582: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg583: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg584: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg585: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg586: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg587: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg588: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg589: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg590: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg591: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg592: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg593: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg594: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg595: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg596: tensor<3072x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg597: tensor<3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg598: tensor<768x3072xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg599: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg600: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg601: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg602: tensor<768x768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg603: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg604: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg605: tensor<768xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg606: tensor<30522xbf16> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg607: tensor<i32>, %arg608: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg609: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg610: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg612: tensor<2xui32>, %arg613: tensor<i32>) -> (tensor<i32> {jax.result_info = "result[0]"}, tensor<30522x768xbf16> {jax.result_info = "result[1][0].bert.embeddings.word_embeddings.weight"}, tensor<512x768xbf16> {jax.result_info = "result[1][0].bert.embeddings.position_embeddings.weight"}, tensor<2x768xbf16> {jax.result_info = "result[1][0].bert.embeddings.token_type_embeddings.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][0].cls.predictions.transform.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].cls.predictions.transform.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.bias"}, tensor<30522xbf16> {jax.result_info = "result[1][0].cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][0].count"}, tensor<30522x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.word_embeddings.weight"}, tensor<512x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.position_embeddings.weight"}, tensor<2x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.token_type_embeddings.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.bias"}, tensor<30522xbf16> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.bias"}, tensor<30522x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.word_embeddings.weight"}, tensor<512x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.position_embeddings.weight"}, tensor<2x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.token_type_embeddings.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.bias"}, tensor<3072x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.weight"}, tensor<3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.bias"}, tensor<768x3072xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.bias"}, tensor<768x768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.bias"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.weight"}, tensor<768xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.bias"}, tensor<30522xbf16> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[1][2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[1][2]['total_token']"}) {
    %0 = stablehlo.iota dim = 0 : tensor<512xi32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %3 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %4 = stablehlo.compare  LT, %arg608, %3,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %5 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %6 = stablehlo.add %arg608, %5 : tensor<64x512xi32>
    %7 = stablehlo.select %4, %6, %arg608 : tensor<64x512xi1>, tensor<64x512xi32>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %9 = "stablehlo.gather"(%arg0, %8) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xbf16>, tensor<64x512x1xi32>) -> tensor<64x512x768xbf16>
    %10 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %11 = stablehlo.compare  LT, %2, %10,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %12 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %13 = stablehlo.add %2, %12 : tensor<64x512xi32>
    %14 = stablehlo.select %11, %13, %2 : tensor<64x512xi1>, tensor<64x512xi32>
    %15 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %16 = "stablehlo.gather"(%arg1, %15) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xbf16>, tensor<64x512x1xi32>) -> tensor<64x512x768xbf16>
    %17 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %18 = stablehlo.compare  LT, %arg610, %17,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %20 = stablehlo.add %arg610, %19 : tensor<64x512xi32>
    %21 = stablehlo.select %18, %20, %arg610 : tensor<64x512xi1>, tensor<64x512xi32>
    %22 = stablehlo.broadcast_in_dim %21, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %23 = "stablehlo.gather"(%arg2, %22) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xbf16>, tensor<64x512x1xi32>) -> tensor<64x512x768xbf16>
    %24 = stablehlo.add %9, %23 : tensor<64x512x768xbf16>
    %25 = stablehlo.add %24, %16 : tensor<64x512x768xbf16>
    %26 = stablehlo.convert %25 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %27 = stablehlo.reduce(%26 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %28 = stablehlo.broadcast_in_dim %27, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_3 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %29 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %30 = stablehlo.divide %28, %29 : tensor<64x512x1xf32>
    %31 = stablehlo.convert %30 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %c_4 = stablehlo.constant dense<0> : tensor<i32>
    %32:4 = call @_var(%25, %c_4) : (tensor<64x512x768xbf16>, tensor<i32>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %33 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %34 = stablehlo.maximum %32#0, %33 : tensor<64x512x1xbf16>
    %35 = stablehlo.compare  EQ, %32#0, %34,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %cst_6 = stablehlo.constant dense<1.000000e+00> : tensor<bf16>
    %36 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %37 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %38 = stablehlo.select %35, %36, %37 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %39 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %40 = stablehlo.compare  EQ, %39, %34,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %cst_7 = stablehlo.constant dense<2.000000e+00> : tensor<bf16>
    %41 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %42 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %43 = stablehlo.select %40, %41, %42 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %44 = stablehlo.divide %38, %43 : tensor<64x512x1xbf16>
    %cst_8 = stablehlo.constant dense<1.001870e-12> : tensor<bf16>
    %45 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %46 = stablehlo.add %34, %45 : tensor<64x512x1xbf16>
    %47 = stablehlo.rsqrt %46 : tensor<64x512x1xbf16>
    %48 = stablehlo.divide %47, %46 : tensor<64x512x1xbf16>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<bf16>
    %49 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %50 = stablehlo.multiply %49, %48 : tensor<64x512x1xbf16>
    %51 = stablehlo.broadcast_in_dim %31, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %52 = stablehlo.subtract %25, %51 : tensor<64x512x768xbf16>
    %53 = stablehlo.broadcast_in_dim %47, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %54 = stablehlo.multiply %52, %53 : tensor<64x512x768xbf16>
    %55 = stablehlo.broadcast_in_dim %arg3, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %56 = stablehlo.broadcast_in_dim %55, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %57 = stablehlo.multiply %56, %54 : tensor<64x512x768xbf16>
    %58 = stablehlo.broadcast_in_dim %arg4, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %59 = stablehlo.broadcast_in_dim %58, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %60 = stablehlo.add %57, %59 : tensor<64x512x768xbf16>
    %cst_10 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %cst_11 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %61 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %c_12 = stablehlo.constant dense<1> : tensor<i32>
    %62 = stablehlo.add %arg613, %c_12 : tensor<i32>
    %63 = stablehlo.convert %62 : (tensor<i32>) -> tensor<ui32>
    %64 = call @_threefry_fold_in(%arg612, %63) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %65 = stablehlo.convert %61 : tensor<f32>
    %66 = call @_bernoulli(%64, %65) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %67 = stablehlo.convert %61 : (tensor<f32>) -> tensor<bf16>
    %68 = stablehlo.broadcast_in_dim %67, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %69 = stablehlo.divide %60, %68 : tensor<64x512x768xbf16>
    %70 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %71 = stablehlo.select %66, %69, %70 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %c_13 = stablehlo.constant dense<true> : tensor<i1>
    %72 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<i1>) -> tensor<512xi1>
    %73 = stablehlo.broadcast_in_dim %72, dims = [1] : (tensor<512xi1>) -> tensor<512x512xi1>
    %74 = stablehlo.broadcast_in_dim %73, dims = [1, 2] : (tensor<512x512xi1>) -> tensor<64x512x512xi1>
    %75 = stablehlo.broadcast_in_dim %arg609, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %76 = stablehlo.convert %74 : (tensor<64x512x512xi1>) -> tensor<64x512x512xi32>
    %77 = stablehlo.broadcast_in_dim %75, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %78 = stablehlo.and %76, %77 : tensor<64x512x512xi32>
    %c_14 = stablehlo.constant dense<0> : tensor<i32>
    %79 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<i32>) -> tensor<64x512x512xi32>
    %80 = stablehlo.compare  NE, %78, %79,  SIGNED : (tensor<64x512x512xi32>, tensor<64x512x512xi32>) -> tensor<64x512x512xi1>
    %81 = stablehlo.convert %80 : tensor<64x512x512xi1>
    %82 = stablehlo.broadcast_in_dim %arg5, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %83 = stablehlo.broadcast_in_dim %arg21, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %84 = stablehlo.broadcast_in_dim %arg37, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %85 = stablehlo.broadcast_in_dim %arg53, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %86 = stablehlo.broadcast_in_dim %arg69, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %87 = stablehlo.broadcast_in_dim %arg85, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %88 = stablehlo.broadcast_in_dim %arg101, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %89 = stablehlo.broadcast_in_dim %arg117, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %90 = stablehlo.broadcast_in_dim %arg133, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %91 = stablehlo.broadcast_in_dim %arg149, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %92 = stablehlo.broadcast_in_dim %arg165, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %93 = stablehlo.broadcast_in_dim %arg181, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %94 = stablehlo.concatenate %82, %83, %84, %85, %86, %87, %88, %89, %90, %91, %92, %93, dim = 0 : (tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>) -> tensor<12x768x768xbf16>
    %95 = stablehlo.broadcast_in_dim %arg6, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %96 = stablehlo.broadcast_in_dim %arg22, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %97 = stablehlo.broadcast_in_dim %arg38, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %98 = stablehlo.broadcast_in_dim %arg54, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %99 = stablehlo.broadcast_in_dim %arg70, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %100 = stablehlo.broadcast_in_dim %arg86, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %101 = stablehlo.broadcast_in_dim %arg102, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %102 = stablehlo.broadcast_in_dim %arg118, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %103 = stablehlo.broadcast_in_dim %arg134, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %104 = stablehlo.broadcast_in_dim %arg150, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %105 = stablehlo.broadcast_in_dim %arg166, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %106 = stablehlo.broadcast_in_dim %arg182, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %107 = stablehlo.concatenate %95, %96, %97, %98, %99, %100, %101, %102, %103, %104, %105, %106, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %108 = stablehlo.broadcast_in_dim %arg7, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %109 = stablehlo.broadcast_in_dim %arg23, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %110 = stablehlo.broadcast_in_dim %arg39, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %111 = stablehlo.broadcast_in_dim %arg55, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %112 = stablehlo.broadcast_in_dim %arg71, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %113 = stablehlo.broadcast_in_dim %arg87, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %114 = stablehlo.broadcast_in_dim %arg103, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %115 = stablehlo.broadcast_in_dim %arg119, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %116 = stablehlo.broadcast_in_dim %arg135, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %117 = stablehlo.broadcast_in_dim %arg151, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %118 = stablehlo.broadcast_in_dim %arg167, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %119 = stablehlo.broadcast_in_dim %arg183, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %120 = stablehlo.concatenate %108, %109, %110, %111, %112, %113, %114, %115, %116, %117, %118, %119, dim = 0 : (tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>) -> tensor<12x768x768xbf16>
    %121 = stablehlo.broadcast_in_dim %arg8, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %122 = stablehlo.broadcast_in_dim %arg24, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %123 = stablehlo.broadcast_in_dim %arg40, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %124 = stablehlo.broadcast_in_dim %arg56, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %125 = stablehlo.broadcast_in_dim %arg72, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %126 = stablehlo.broadcast_in_dim %arg88, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %127 = stablehlo.broadcast_in_dim %arg104, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %128 = stablehlo.broadcast_in_dim %arg120, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %129 = stablehlo.broadcast_in_dim %arg136, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %130 = stablehlo.broadcast_in_dim %arg152, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %131 = stablehlo.broadcast_in_dim %arg168, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %132 = stablehlo.broadcast_in_dim %arg184, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %133 = stablehlo.concatenate %121, %122, %123, %124, %125, %126, %127, %128, %129, %130, %131, %132, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %134 = stablehlo.broadcast_in_dim %arg9, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %135 = stablehlo.broadcast_in_dim %arg25, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %136 = stablehlo.broadcast_in_dim %arg41, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %137 = stablehlo.broadcast_in_dim %arg57, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %138 = stablehlo.broadcast_in_dim %arg73, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %139 = stablehlo.broadcast_in_dim %arg89, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %140 = stablehlo.broadcast_in_dim %arg105, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %141 = stablehlo.broadcast_in_dim %arg121, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %142 = stablehlo.broadcast_in_dim %arg137, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %143 = stablehlo.broadcast_in_dim %arg153, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %144 = stablehlo.broadcast_in_dim %arg169, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %145 = stablehlo.broadcast_in_dim %arg185, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %146 = stablehlo.concatenate %134, %135, %136, %137, %138, %139, %140, %141, %142, %143, %144, %145, dim = 0 : (tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>) -> tensor<12x768x768xbf16>
    %147 = stablehlo.broadcast_in_dim %arg10, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %148 = stablehlo.broadcast_in_dim %arg26, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %149 = stablehlo.broadcast_in_dim %arg42, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %150 = stablehlo.broadcast_in_dim %arg58, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %151 = stablehlo.broadcast_in_dim %arg74, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %152 = stablehlo.broadcast_in_dim %arg90, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %153 = stablehlo.broadcast_in_dim %arg106, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %154 = stablehlo.broadcast_in_dim %arg122, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %155 = stablehlo.broadcast_in_dim %arg138, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %156 = stablehlo.broadcast_in_dim %arg154, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %157 = stablehlo.broadcast_in_dim %arg170, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %158 = stablehlo.broadcast_in_dim %arg186, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %159 = stablehlo.concatenate %147, %148, %149, %150, %151, %152, %153, %154, %155, %156, %157, %158, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %160 = stablehlo.broadcast_in_dim %arg11, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %161 = stablehlo.broadcast_in_dim %arg27, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %162 = stablehlo.broadcast_in_dim %arg43, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %163 = stablehlo.broadcast_in_dim %arg59, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %164 = stablehlo.broadcast_in_dim %arg75, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %165 = stablehlo.broadcast_in_dim %arg91, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %166 = stablehlo.broadcast_in_dim %arg107, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %167 = stablehlo.broadcast_in_dim %arg123, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %168 = stablehlo.broadcast_in_dim %arg139, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %169 = stablehlo.broadcast_in_dim %arg155, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %170 = stablehlo.broadcast_in_dim %arg171, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %171 = stablehlo.broadcast_in_dim %arg187, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
    %172 = stablehlo.concatenate %160, %161, %162, %163, %164, %165, %166, %167, %168, %169, %170, %171, dim = 0 : (tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>, tensor<1x768x768xbf16>) -> tensor<12x768x768xbf16>
    %173 = stablehlo.broadcast_in_dim %arg12, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %174 = stablehlo.broadcast_in_dim %arg28, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %175 = stablehlo.broadcast_in_dim %arg44, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %176 = stablehlo.broadcast_in_dim %arg60, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %177 = stablehlo.broadcast_in_dim %arg76, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %178 = stablehlo.broadcast_in_dim %arg92, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %179 = stablehlo.broadcast_in_dim %arg108, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %180 = stablehlo.broadcast_in_dim %arg124, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %181 = stablehlo.broadcast_in_dim %arg140, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %182 = stablehlo.broadcast_in_dim %arg156, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %183 = stablehlo.broadcast_in_dim %arg172, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %184 = stablehlo.broadcast_in_dim %arg188, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %185 = stablehlo.concatenate %173, %174, %175, %176, %177, %178, %179, %180, %181, %182, %183, %184, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %186 = stablehlo.broadcast_in_dim %arg13, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %187 = stablehlo.broadcast_in_dim %arg29, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %188 = stablehlo.broadcast_in_dim %arg45, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %189 = stablehlo.broadcast_in_dim %arg61, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %190 = stablehlo.broadcast_in_dim %arg77, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %191 = stablehlo.broadcast_in_dim %arg93, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %192 = stablehlo.broadcast_in_dim %arg109, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %193 = stablehlo.broadcast_in_dim %arg125, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %194 = stablehlo.broadcast_in_dim %arg141, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %195 = stablehlo.broadcast_in_dim %arg157, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %196 = stablehlo.broadcast_in_dim %arg173, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %197 = stablehlo.broadcast_in_dim %arg189, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %198 = stablehlo.concatenate %186, %187, %188, %189, %190, %191, %192, %193, %194, %195, %196, %197, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %199 = stablehlo.broadcast_in_dim %arg14, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %200 = stablehlo.broadcast_in_dim %arg30, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %201 = stablehlo.broadcast_in_dim %arg46, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %202 = stablehlo.broadcast_in_dim %arg62, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %203 = stablehlo.broadcast_in_dim %arg78, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %204 = stablehlo.broadcast_in_dim %arg94, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %205 = stablehlo.broadcast_in_dim %arg110, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %206 = stablehlo.broadcast_in_dim %arg126, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %207 = stablehlo.broadcast_in_dim %arg142, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %208 = stablehlo.broadcast_in_dim %arg158, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %209 = stablehlo.broadcast_in_dim %arg174, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %210 = stablehlo.broadcast_in_dim %arg190, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %211 = stablehlo.concatenate %199, %200, %201, %202, %203, %204, %205, %206, %207, %208, %209, %210, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %212 = stablehlo.broadcast_in_dim %arg15, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %213 = stablehlo.broadcast_in_dim %arg31, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %214 = stablehlo.broadcast_in_dim %arg47, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %215 = stablehlo.broadcast_in_dim %arg63, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %216 = stablehlo.broadcast_in_dim %arg79, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %217 = stablehlo.broadcast_in_dim %arg95, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %218 = stablehlo.broadcast_in_dim %arg111, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %219 = stablehlo.broadcast_in_dim %arg127, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %220 = stablehlo.broadcast_in_dim %arg143, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %221 = stablehlo.broadcast_in_dim %arg159, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %222 = stablehlo.broadcast_in_dim %arg175, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %223 = stablehlo.broadcast_in_dim %arg191, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %224 = stablehlo.concatenate %212, %213, %214, %215, %216, %217, %218, %219, %220, %221, %222, %223, dim = 0 : (tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<1x3072x768xbf16>) -> tensor<12x3072x768xbf16>
    %225 = stablehlo.broadcast_in_dim %arg16, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %226 = stablehlo.broadcast_in_dim %arg32, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %227 = stablehlo.broadcast_in_dim %arg48, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %228 = stablehlo.broadcast_in_dim %arg64, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %229 = stablehlo.broadcast_in_dim %arg80, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %230 = stablehlo.broadcast_in_dim %arg96, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %231 = stablehlo.broadcast_in_dim %arg112, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %232 = stablehlo.broadcast_in_dim %arg128, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %233 = stablehlo.broadcast_in_dim %arg144, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %234 = stablehlo.broadcast_in_dim %arg160, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %235 = stablehlo.broadcast_in_dim %arg176, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %236 = stablehlo.broadcast_in_dim %arg192, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
    %237 = stablehlo.concatenate %225, %226, %227, %228, %229, %230, %231, %232, %233, %234, %235, %236, dim = 0 : (tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>, tensor<1x3072xbf16>) -> tensor<12x3072xbf16>
    %238 = stablehlo.broadcast_in_dim %arg17, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %239 = stablehlo.broadcast_in_dim %arg33, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %240 = stablehlo.broadcast_in_dim %arg49, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %241 = stablehlo.broadcast_in_dim %arg65, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %242 = stablehlo.broadcast_in_dim %arg81, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %243 = stablehlo.broadcast_in_dim %arg97, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %244 = stablehlo.broadcast_in_dim %arg113, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %245 = stablehlo.broadcast_in_dim %arg129, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %246 = stablehlo.broadcast_in_dim %arg145, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %247 = stablehlo.broadcast_in_dim %arg161, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %248 = stablehlo.broadcast_in_dim %arg177, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %249 = stablehlo.broadcast_in_dim %arg193, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %250 = stablehlo.concatenate %238, %239, %240, %241, %242, %243, %244, %245, %246, %247, %248, %249, dim = 0 : (tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<1x768x3072xbf16>) -> tensor<12x768x3072xbf16>
    %251 = stablehlo.broadcast_in_dim %arg18, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %252 = stablehlo.broadcast_in_dim %arg34, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %253 = stablehlo.broadcast_in_dim %arg50, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %254 = stablehlo.broadcast_in_dim %arg66, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %255 = stablehlo.broadcast_in_dim %arg82, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %256 = stablehlo.broadcast_in_dim %arg98, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %257 = stablehlo.broadcast_in_dim %arg114, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %258 = stablehlo.broadcast_in_dim %arg130, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %259 = stablehlo.broadcast_in_dim %arg146, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %260 = stablehlo.broadcast_in_dim %arg162, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %261 = stablehlo.broadcast_in_dim %arg178, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %262 = stablehlo.broadcast_in_dim %arg194, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %263 = stablehlo.concatenate %251, %252, %253, %254, %255, %256, %257, %258, %259, %260, %261, %262, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %264 = stablehlo.broadcast_in_dim %arg19, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %265 = stablehlo.broadcast_in_dim %arg35, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %266 = stablehlo.broadcast_in_dim %arg51, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %267 = stablehlo.broadcast_in_dim %arg67, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %268 = stablehlo.broadcast_in_dim %arg83, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %269 = stablehlo.broadcast_in_dim %arg99, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %270 = stablehlo.broadcast_in_dim %arg115, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %271 = stablehlo.broadcast_in_dim %arg131, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %272 = stablehlo.broadcast_in_dim %arg147, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %273 = stablehlo.broadcast_in_dim %arg163, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %274 = stablehlo.broadcast_in_dim %arg179, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %275 = stablehlo.broadcast_in_dim %arg195, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %276 = stablehlo.concatenate %264, %265, %266, %267, %268, %269, %270, %271, %272, %273, %274, %275, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %277 = stablehlo.broadcast_in_dim %arg20, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %278 = stablehlo.broadcast_in_dim %arg36, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %279 = stablehlo.broadcast_in_dim %arg52, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %280 = stablehlo.broadcast_in_dim %arg68, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %281 = stablehlo.broadcast_in_dim %arg84, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %282 = stablehlo.broadcast_in_dim %arg100, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %283 = stablehlo.broadcast_in_dim %arg116, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %284 = stablehlo.broadcast_in_dim %arg132, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %285 = stablehlo.broadcast_in_dim %arg148, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %286 = stablehlo.broadcast_in_dim %arg164, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %287 = stablehlo.broadcast_in_dim %arg180, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %288 = stablehlo.broadcast_in_dim %arg196, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
    %289 = stablehlo.concatenate %277, %278, %279, %280, %281, %282, %283, %284, %285, %286, %287, %288, dim = 0 : (tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>, tensor<1x768xbf16>) -> tensor<12x768xbf16>
    %290 = stablehlo.broadcast_in_dim %81, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %291 = stablehlo.add %62, %c_12 : tensor<i32>
    %292 = stablehlo.convert %291 : (tensor<i32>) -> tensor<ui32>
    %293 = call @_threefry_fold_in(%arg612, %292) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_15 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %294 = stablehlo.sqrt %cst_15 : tensor<f32>
    %295 = stablehlo.convert %294 : (tensor<f32>) -> tensor<bf16>
    %cst_16 = stablehlo.constant dense<-3.389530e+38> : tensor<bf16>
    %296:2 = call @_where_72(%290, %cst_16) : (tensor<64x512x1x512xi1>, tensor<bf16>) -> (tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>)
    %cst_17 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %297 = call @_bernoulli_75(%293, %cst_17) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x12x512xi1>
    %298 = stablehlo.broadcast_in_dim %297, dims = [0, 1, 2, 3] : (tensor<64x1x12x512xi1>) -> tensor<64x512x12x512xi1>
    %299 = stablehlo.convert %298 : (tensor<64x512x12x512xi1>) -> tensor<64x512x12x512xbf16>
    %cst_18 = stablehlo.constant dense<8.984370e-01> : tensor<bf16>
    %300 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<64x512x12x512xbf16>
    %301 = stablehlo.divide %299, %300 : tensor<64x512x12x512xbf16>
    %302 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %303 = stablehlo.add %291, %c_12 : tensor<i32>
    %304 = stablehlo.convert %303 : (tensor<i32>) -> tensor<ui32>
    %305 = call @_threefry_fold_in(%arg612, %304) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %306 = stablehlo.convert %302 : tensor<f32>
    %307 = call @_bernoulli_98(%305, %306) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %308 = stablehlo.convert %302 : (tensor<f32>) -> tensor<bf16>
    %309 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %310:3 = call @_var_100(%c_4) : (tensor<i32>) -> (tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>)
    %311 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %312 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %313 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %314 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<bf16>
    %316 = stablehlo.subtract %cst_11, %cst_10 : tensor<f32>
    %317 = stablehlo.add %303, %c_12 : tensor<i32>
    %318 = stablehlo.convert %317 : (tensor<i32>) -> tensor<ui32>
    %319 = call @_threefry_fold_in(%arg612, %318) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %320 = stablehlo.convert %316 : tensor<f32>
    %321 = call @_bernoulli_98(%319, %320) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %322 = stablehlo.convert %316 : (tensor<f32>) -> tensor<bf16>
    %323 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %324:3 = call @_var_100(%c_4) : (tensor<i32>) -> (tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>)
    %325 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %326 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %327 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %328 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %cst_19 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %329 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_20 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %330 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_21 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %331 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_22 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %332 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_23 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %333 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<bf16>) -> tensor<12x64x512x12x64xbf16>
    %cst_24 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %334 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<bf16>) -> tensor<12x64x512x12x64xbf16>
    %cst_25 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %335 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<12x64x512x12x512xf32>
    %cst_26 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %336 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<12x64x512x12x1xf32>
    %cst_27 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %337 = stablehlo.broadcast_in_dim %cst_27, dims = [] : (tensor<f32>) -> tensor<12x64x512x12x1xf32>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %338 = stablehlo.broadcast_in_dim %cst_28, dims = [] : (tensor<bf16>) -> tensor<12x64x512x12x512xbf16>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %339 = stablehlo.broadcast_in_dim %cst_29, dims = [] : (tensor<bf16>) -> tensor<12x64x512x12x64xbf16>
    %cst_30 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %340 = stablehlo.broadcast_in_dim %cst_30, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_31 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %341 = stablehlo.broadcast_in_dim %cst_31, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_32 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %342 = stablehlo.broadcast_in_dim %cst_32, dims = [] : (tensor<f32>) -> tensor<12x64x512x768xf32>
    %cst_33 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %343 = stablehlo.broadcast_in_dim %cst_33, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_34 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %344 = stablehlo.broadcast_in_dim %cst_34, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_35 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %345 = stablehlo.broadcast_in_dim %cst_35, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_36 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %346 = stablehlo.broadcast_in_dim %cst_36, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_37 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %347 = stablehlo.broadcast_in_dim %cst_37, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_38 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %348 = stablehlo.broadcast_in_dim %cst_38, dims = [] : (tensor<bf16>) -> tensor<12x1x1x768xbf16>
    %cst_39 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %349 = stablehlo.broadcast_in_dim %cst_39, dims = [] : (tensor<bf16>) -> tensor<12x768x3072xbf16>
    %cst_40 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %350 = stablehlo.broadcast_in_dim %cst_40, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_41 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %351 = stablehlo.broadcast_in_dim %cst_41, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %352 = stablehlo.broadcast_in_dim %cst_42, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_43 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %353 = stablehlo.broadcast_in_dim %cst_43, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_44 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %354 = stablehlo.broadcast_in_dim %cst_44, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_45 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %355 = stablehlo.broadcast_in_dim %cst_45, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_46 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %356 = stablehlo.broadcast_in_dim %cst_46, dims = [] : (tensor<bf16>) -> tensor<12x3072x768xbf16>
    %cst_47 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %357 = stablehlo.broadcast_in_dim %cst_47, dims = [] : (tensor<bf16>) -> tensor<12x64x512x3072xbf16>
    %cst_48 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %358 = stablehlo.broadcast_in_dim %cst_48, dims = [] : (tensor<f32>) -> tensor<12x64x512x768xf32>
    %cst_49 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %359 = stablehlo.broadcast_in_dim %cst_49, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_50 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %360 = stablehlo.broadcast_in_dim %cst_50, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_51 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %361 = stablehlo.broadcast_in_dim %cst_51, dims = [] : (tensor<bf16>) -> tensor<12x64x512x1xbf16>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %362 = stablehlo.broadcast_in_dim %cst_52, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_53 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %363 = stablehlo.broadcast_in_dim %cst_53, dims = [] : (tensor<bf16>) -> tensor<12x64x512x768xbf16>
    %cst_54 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %364 = stablehlo.broadcast_in_dim %cst_54, dims = [] : (tensor<bf16>) -> tensor<12x1x1x768xbf16>
    %c_55 = stablehlo.constant dense<0> : tensor<i32>
    %365:79 = stablehlo.while(%iterArg = %94, %iterArg_516 = %107, %iterArg_517 = %120, %iterArg_518 = %133, %iterArg_519 = %146, %iterArg_520 = %159, %iterArg_521 = %172, %iterArg_522 = %185, %iterArg_523 = %198, %iterArg_524 = %211, %iterArg_525 = %224, %iterArg_526 = %237, %iterArg_527 = %250, %iterArg_528 = %263, %iterArg_529 = %276, %iterArg_530 = %289, %iterArg_531 = %321, %iterArg_532 = %323, %iterArg_533 = %307, %iterArg_534 = %309, %iterArg_535 = %295, %iterArg_536 = %296#0, %iterArg_537 = %296#1, %iterArg_538 = %301, %iterArg_539 = %308, %iterArg_540 = %310#0, %iterArg_541 = %310#1, %iterArg_542 = %310#2, %iterArg_543 = %322, %iterArg_544 = %324#0, %iterArg_545 = %324#1, %iterArg_546 = %324#2, %iterArg_547 = %312, %iterArg_548 = %311, %iterArg_549 = %314, %iterArg_550 = %313, %iterArg_551 = %315, %iterArg_552 = %326, %iterArg_553 = %325, %iterArg_554 = %328, %iterArg_555 = %327, %iterArg_556 = %c_55, %iterArg_557 = %71, %iterArg_558 = %329, %iterArg_559 = %330, %iterArg_560 = %331, %iterArg_561 = %332, %iterArg_562 = %333, %iterArg_563 = %334, %iterArg_564 = %335, %iterArg_565 = %336, %iterArg_566 = %337, %iterArg_567 = %338, %iterArg_568 = %339, %iterArg_569 = %340, %iterArg_570 = %341, %iterArg_571 = %342, %iterArg_572 = %343, %iterArg_573 = %344, %iterArg_574 = %345, %iterArg_575 = %346, %iterArg_576 = %347, %iterArg_577 = %348, %iterArg_578 = %349, %iterArg_579 = %350, %iterArg_580 = %351, %iterArg_581 = %352, %iterArg_582 = %353, %iterArg_583 = %354, %iterArg_584 = %355, %iterArg_585 = %356, %iterArg_586 = %357, %iterArg_587 = %358, %iterArg_588 = %359, %iterArg_589 = %360, %iterArg_590 = %361, %iterArg_591 = %362, %iterArg_592 = %363, %iterArg_593 = %364) : tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x3072x768xbf16>, tensor<12x3072xbf16>, tensor<12x768x3072xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<i32>, tensor<64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x512xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x512xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<12x768x3072xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x3072x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>
    cond {
      %c_594 = stablehlo.constant dense<12> : tensor<i32>
      %9077 = stablehlo.compare  LT, %iterArg_556, %c_594,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      stablehlo.return %9077 : tensor<i1>
    } do {
      %c_594 = stablehlo.constant dense<0> : tensor<i32>
      %9077 = stablehlo.dynamic_slice %iterArg, %iterArg_556, %c_594, %c_594, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9078 = stablehlo.reshape %9077 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9079 = stablehlo.dynamic_slice %iterArg_516, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9080 = stablehlo.reshape %9079 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9081 = stablehlo.dynamic_slice %iterArg_517, %iterArg_556, %c_594, %c_594, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9082 = stablehlo.reshape %9081 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9083 = stablehlo.dynamic_slice %iterArg_518, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9084 = stablehlo.reshape %9083 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9085 = stablehlo.dynamic_slice %iterArg_519, %iterArg_556, %c_594, %c_594, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9086 = stablehlo.reshape %9085 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9087 = stablehlo.dynamic_slice %iterArg_520, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9088 = stablehlo.reshape %9087 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9089 = stablehlo.dynamic_slice %iterArg_521, %iterArg_556, %c_594, %c_594, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9090 = stablehlo.reshape %9089 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9091 = stablehlo.dynamic_slice %iterArg_522, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9092 = stablehlo.reshape %9091 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9093 = stablehlo.dynamic_slice %iterArg_523, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9094 = stablehlo.reshape %9093 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9095 = stablehlo.dynamic_slice %iterArg_524, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9096 = stablehlo.reshape %9095 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9097 = stablehlo.dynamic_slice %iterArg_525, %iterArg_556, %c_594, %c_594, sizes = [1, 3072, 768] : (tensor<12x3072x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x3072x768xbf16>
      %9098 = stablehlo.reshape %9097 : (tensor<1x3072x768xbf16>) -> tensor<3072x768xbf16>
      %9099 = stablehlo.dynamic_slice %iterArg_526, %iterArg_556, %c_594, sizes = [1, 3072] : (tensor<12x3072xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x3072xbf16>
      %9100 = stablehlo.reshape %9099 : (tensor<1x3072xbf16>) -> tensor<3072xbf16>
      %9101 = stablehlo.dynamic_slice %iterArg_527, %iterArg_556, %c_594, %c_594, sizes = [1, 768, 3072] : (tensor<12x768x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x3072xbf16>
      %9102 = stablehlo.reshape %9101 : (tensor<1x768x3072xbf16>) -> tensor<768x3072xbf16>
      %9103 = stablehlo.dynamic_slice %iterArg_528, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9104 = stablehlo.reshape %9103 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9105 = stablehlo.dynamic_slice %iterArg_529, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9106 = stablehlo.reshape %9105 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9107 = stablehlo.dynamic_slice %iterArg_530, %iterArg_556, %c_594, sizes = [1, 768] : (tensor<12x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<1x768xbf16>
      %9108 = stablehlo.reshape %9107 : (tensor<1x768xbf16>) -> tensor<768xbf16>
      %9109:37 = func.call @closed_call(%iterArg_531, %iterArg_532, %iterArg_533, %iterArg_534, %iterArg_535, %iterArg_536, %iterArg_537, %iterArg_538, %iterArg_539, %iterArg_540, %iterArg_541, %iterArg_542, %iterArg_543, %iterArg_544, %iterArg_545, %iterArg_546, %iterArg_547, %iterArg_548, %iterArg_549, %iterArg_550, %iterArg_551, %iterArg_552, %iterArg_553, %iterArg_554, %iterArg_555, %iterArg_557, %9078, %9080, %9082, %9084, %9086, %9088, %9090, %9092, %9094, %9096, %9098, %9100, %9102, %9104, %9106, %9108) : (tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>) -> (tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768x768xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x512xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x512xbf16>, tensor<64x512x12x64xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>, tensor<768x3072xbf16>, tensor<64x512x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<3072x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>)
      %9110 = stablehlo.broadcast_in_dim %9109#1, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9111 = stablehlo.dynamic_update_slice %iterArg_558, %9110, %iterArg_556, %c_594, %c_594 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9112 = stablehlo.broadcast_in_dim %9109#2, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9113 = stablehlo.dynamic_update_slice %iterArg_559, %9112, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9114 = stablehlo.broadcast_in_dim %9109#3, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9115 = stablehlo.dynamic_update_slice %iterArg_560, %9114, %iterArg_556, %c_594, %c_594 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9116 = stablehlo.broadcast_in_dim %9109#4, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9117 = stablehlo.dynamic_update_slice %iterArg_561, %9116, %iterArg_556, %c_594, %c_594 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9118 = stablehlo.broadcast_in_dim %9109#5, dims = [1, 2, 3, 4] : (tensor<64x512x12x64xbf16>) -> tensor<1x64x512x12x64xbf16>
      %9119 = stablehlo.dynamic_update_slice %iterArg_562, %9118, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x64xbf16>, tensor<1x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x64xbf16>
      %9120 = stablehlo.broadcast_in_dim %9109#6, dims = [1, 2, 3, 4] : (tensor<64x512x12x64xbf16>) -> tensor<1x64x512x12x64xbf16>
      %9121 = stablehlo.dynamic_update_slice %iterArg_563, %9120, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x64xbf16>, tensor<1x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x64xbf16>
      %9122 = stablehlo.broadcast_in_dim %9109#7, dims = [1, 2, 3, 4] : (tensor<64x512x12x512xf32>) -> tensor<1x64x512x12x512xf32>
      %9123 = stablehlo.dynamic_update_slice %iterArg_564, %9122, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x512xf32>, tensor<1x64x512x12x512xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x512xf32>
      %9124 = stablehlo.broadcast_in_dim %9109#8, dims = [1, 2, 3, 4] : (tensor<64x512x12x1xf32>) -> tensor<1x64x512x12x1xf32>
      %9125 = stablehlo.dynamic_update_slice %iterArg_565, %9124, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x1xf32>, tensor<1x64x512x12x1xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x1xf32>
      %9126 = stablehlo.broadcast_in_dim %9109#9, dims = [1, 2, 3, 4] : (tensor<64x512x12x1xf32>) -> tensor<1x64x512x12x1xf32>
      %9127 = stablehlo.dynamic_update_slice %iterArg_566, %9126, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x1xf32>, tensor<1x64x512x12x1xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x1xf32>
      %9128 = stablehlo.broadcast_in_dim %9109#10, dims = [1, 2, 3, 4] : (tensor<64x512x12x512xbf16>) -> tensor<1x64x512x12x512xbf16>
      %9129 = stablehlo.dynamic_update_slice %iterArg_567, %9128, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x512xbf16>, tensor<1x64x512x12x512xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x512xbf16>
      %9130 = stablehlo.broadcast_in_dim %9109#11, dims = [1, 2, 3, 4] : (tensor<64x512x12x64xbf16>) -> tensor<1x64x512x12x64xbf16>
      %9131 = stablehlo.dynamic_update_slice %iterArg_568, %9130, %iterArg_556, %c_594, %c_594, %c_594, %c_594 : (tensor<12x64x512x12x64xbf16>, tensor<1x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x12x64xbf16>
      %9132 = stablehlo.broadcast_in_dim %9109#12, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9133 = stablehlo.dynamic_update_slice %iterArg_569, %9132, %iterArg_556, %c_594, %c_594 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9134 = stablehlo.broadcast_in_dim %9109#13, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9135 = stablehlo.dynamic_update_slice %iterArg_570, %9134, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9136 = stablehlo.broadcast_in_dim %9109#14, dims = [1, 2, 3] : (tensor<64x512x768xf32>) -> tensor<1x64x512x768xf32>
      %9137 = stablehlo.dynamic_update_slice %iterArg_571, %9136, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xf32>, tensor<1x64x512x768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xf32>
      %9138 = stablehlo.broadcast_in_dim %9109#15, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9139 = stablehlo.dynamic_update_slice %iterArg_572, %9138, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9140 = stablehlo.broadcast_in_dim %9109#16, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9141 = stablehlo.dynamic_update_slice %iterArg_573, %9140, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9142 = stablehlo.broadcast_in_dim %9109#17, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9143 = stablehlo.dynamic_update_slice %iterArg_574, %9142, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9144 = stablehlo.broadcast_in_dim %9109#18, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9145 = stablehlo.dynamic_update_slice %iterArg_575, %9144, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9146 = stablehlo.broadcast_in_dim %9109#19, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9147 = stablehlo.dynamic_update_slice %iterArg_576, %9146, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9148 = stablehlo.broadcast_in_dim %9109#20, dims = [1, 2, 3] : (tensor<1x1x768xbf16>) -> tensor<1x1x1x768xbf16>
      %9149 = stablehlo.dynamic_update_slice %iterArg_577, %9148, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x1x1x768xbf16>, tensor<1x1x1x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x1x1x768xbf16>
      %9150 = stablehlo.broadcast_in_dim %9109#21, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
      %9151 = stablehlo.dynamic_update_slice %iterArg_578, %9150, %iterArg_556, %c_594, %c_594 : (tensor<12x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x3072xbf16>
      %9152 = stablehlo.broadcast_in_dim %9109#22, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9153 = stablehlo.dynamic_update_slice %iterArg_579, %9152, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9154 = stablehlo.broadcast_in_dim %9109#23, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9155 = stablehlo.dynamic_update_slice %iterArg_580, %9154, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9156 = stablehlo.broadcast_in_dim %9109#24, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9157 = stablehlo.dynamic_update_slice %iterArg_581, %9156, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9158 = stablehlo.broadcast_in_dim %9109#25, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9159 = stablehlo.dynamic_update_slice %iterArg_582, %9158, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9160 = stablehlo.broadcast_in_dim %9109#26, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9161 = stablehlo.dynamic_update_slice %iterArg_583, %9160, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9162 = stablehlo.broadcast_in_dim %9109#27, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9163 = stablehlo.dynamic_update_slice %iterArg_584, %9162, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9164 = stablehlo.broadcast_in_dim %9109#28, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
      %9165 = stablehlo.dynamic_update_slice %iterArg_585, %9164, %iterArg_556, %c_594, %c_594 : (tensor<12x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x3072x768xbf16>
      %9166 = stablehlo.broadcast_in_dim %9109#29, dims = [1, 2, 3] : (tensor<64x512x3072xbf16>) -> tensor<1x64x512x3072xbf16>
      %9167 = stablehlo.dynamic_update_slice %iterArg_586, %9166, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x3072xbf16>, tensor<1x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x3072xbf16>
      %9168 = stablehlo.broadcast_in_dim %9109#30, dims = [1, 2, 3] : (tensor<64x512x768xf32>) -> tensor<1x64x512x768xf32>
      %9169 = stablehlo.dynamic_update_slice %iterArg_587, %9168, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xf32>, tensor<1x64x512x768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xf32>
      %9170 = stablehlo.broadcast_in_dim %9109#31, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9171 = stablehlo.dynamic_update_slice %iterArg_588, %9170, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9172 = stablehlo.broadcast_in_dim %9109#32, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9173 = stablehlo.dynamic_update_slice %iterArg_589, %9172, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9174 = stablehlo.broadcast_in_dim %9109#33, dims = [1, 2, 3] : (tensor<64x512x1xbf16>) -> tensor<1x64x512x1xbf16>
      %9175 = stablehlo.dynamic_update_slice %iterArg_590, %9174, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x1xbf16>, tensor<1x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x1xbf16>
      %9176 = stablehlo.broadcast_in_dim %9109#34, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9177 = stablehlo.dynamic_update_slice %iterArg_591, %9176, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9178 = stablehlo.broadcast_in_dim %9109#35, dims = [1, 2, 3] : (tensor<64x512x768xbf16>) -> tensor<1x64x512x768xbf16>
      %9179 = stablehlo.dynamic_update_slice %iterArg_592, %9178, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x64x512x768xbf16>, tensor<1x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x64x512x768xbf16>
      %9180 = stablehlo.broadcast_in_dim %9109#36, dims = [1, 2, 3] : (tensor<1x1x768xbf16>) -> tensor<1x1x1x768xbf16>
      %9181 = stablehlo.dynamic_update_slice %iterArg_593, %9180, %iterArg_556, %c_594, %c_594, %c_594 : (tensor<12x1x1x768xbf16>, tensor<1x1x1x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x1x1x768xbf16>
      %c_595 = stablehlo.constant dense<1> : tensor<i32>
      %9182 = stablehlo.add %iterArg_556, %c_595 : tensor<i32>
      stablehlo.return %iterArg, %iterArg_516, %iterArg_517, %iterArg_518, %iterArg_519, %iterArg_520, %iterArg_521, %iterArg_522, %iterArg_523, %iterArg_524, %iterArg_525, %iterArg_526, %iterArg_527, %iterArg_528, %iterArg_529, %iterArg_530, %iterArg_531, %iterArg_532, %iterArg_533, %iterArg_534, %iterArg_535, %iterArg_536, %iterArg_537, %iterArg_538, %iterArg_539, %iterArg_540, %iterArg_541, %iterArg_542, %iterArg_543, %iterArg_544, %iterArg_545, %iterArg_546, %iterArg_547, %iterArg_548, %iterArg_549, %iterArg_550, %iterArg_551, %iterArg_552, %iterArg_553, %iterArg_554, %iterArg_555, %9182, %9109#0, %9111, %9113, %9115, %9117, %9119, %9121, %9123, %9125, %9127, %9129, %9131, %9133, %9135, %9137, %9139, %9141, %9143, %9145, %9147, %9149, %9151, %9153, %9155, %9157, %9159, %9161, %9163, %9165, %9167, %9169, %9171, %9173, %9175, %9177, %9179, %9181 : tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x3072x768xbf16>, tensor<12x3072xbf16>, tensor<12x768x3072xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<64x512x768xi1>, tensor<64x512x768xbf16>, tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<bf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<i32>, tensor<64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x512xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x512xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<12x768x3072xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x3072x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>
    }
    %366 = stablehlo.transpose %arg197, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %367 = stablehlo.dot_general %365#42, %366, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %368 = stablehlo.broadcast_in_dim %arg198, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %369 = stablehlo.broadcast_in_dim %368, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %370 = stablehlo.add %367, %369 : tensor<64x512x768xbf16>
    %371 = stablehlo.multiply %370, %370 : tensor<64x512x768xbf16>
    %372 = stablehlo.multiply %371, %370 : tensor<64x512x768xbf16>
    %373 = stablehlo.multiply %370, %370 : tensor<64x512x768xbf16>
    %cst_56 = stablehlo.constant dense<3.000000e+00> : tensor<bf16>
    %374 = stablehlo.broadcast_in_dim %cst_56, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %375 = stablehlo.multiply %374, %373 : tensor<64x512x768xbf16>
    %cst_57 = stablehlo.constant dense<4.467770e-02> : tensor<bf16>
    %376 = stablehlo.broadcast_in_dim %cst_57, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %377 = stablehlo.multiply %376, %372 : tensor<64x512x768xbf16>
    %378 = stablehlo.add %370, %377 : tensor<64x512x768xbf16>
    %cst_58 = stablehlo.constant dense<7.968750e-01> : tensor<bf16>
    %379 = stablehlo.broadcast_in_dim %cst_58, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %380 = stablehlo.multiply %379, %378 : tensor<64x512x768xbf16>
    %381 = stablehlo.tanh %380 : tensor<64x512x768xbf16>
    %382 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<bf16>
    %383 = stablehlo.broadcast_in_dim %382, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %384 = stablehlo.subtract %383, %381 : tensor<64x512x768xbf16>
    %385 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %386 = stablehlo.add %385, %381 : tensor<64x512x768xbf16>
    %cst_59 = stablehlo.constant dense<5.000000e-01> : tensor<bf16>
    %387 = stablehlo.broadcast_in_dim %cst_59, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %388 = stablehlo.multiply %387, %386 : tensor<64x512x768xbf16>
    %389 = stablehlo.multiply %370, %388 : tensor<64x512x768xbf16>
    %390 = stablehlo.convert %389 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst_60 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %391 = stablehlo.reduce(%390 init: %cst_60) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %392 = stablehlo.broadcast_in_dim %391, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %393 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %394 = stablehlo.divide %392, %393 : tensor<64x512x1xf32>
    %395 = stablehlo.convert %394 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %396:4 = call @_var(%389, %c_4) : (tensor<64x512x768xbf16>, tensor<i32>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %397 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %398 = stablehlo.maximum %396#0, %397 : tensor<64x512x1xbf16>
    %399 = stablehlo.compare  EQ, %396#0, %398,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %400 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %401 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %402 = stablehlo.select %399, %400, %401 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %403 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %404 = stablehlo.compare  EQ, %403, %398,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %405 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %406 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %407 = stablehlo.select %404, %405, %406 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %408 = stablehlo.divide %402, %407 : tensor<64x512x1xbf16>
    %409 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %410 = stablehlo.add %398, %409 : tensor<64x512x1xbf16>
    %411 = stablehlo.rsqrt %410 : tensor<64x512x1xbf16>
    %412 = stablehlo.divide %411, %410 : tensor<64x512x1xbf16>
    %413 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %414 = stablehlo.multiply %413, %412 : tensor<64x512x1xbf16>
    %415 = stablehlo.broadcast_in_dim %395, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %416 = stablehlo.subtract %389, %415 : tensor<64x512x768xbf16>
    %417 = stablehlo.broadcast_in_dim %411, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %418 = stablehlo.multiply %416, %417 : tensor<64x512x768xbf16>
    %419 = stablehlo.broadcast_in_dim %arg199, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %420 = stablehlo.broadcast_in_dim %419, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %421 = stablehlo.multiply %420, %418 : tensor<64x512x768xbf16>
    %422 = stablehlo.broadcast_in_dim %arg200, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %423 = stablehlo.broadcast_in_dim %422, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %424 = stablehlo.add %421, %423 : tensor<64x512x768xbf16>
    %425 = stablehlo.dot_general %424, %arg0, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<30522x768xbf16>) -> tensor<64x512x30522xbf16>
    %426 = stablehlo.broadcast_in_dim %arg201, dims = [2] : (tensor<30522xbf16>) -> tensor<1x1x30522xbf16>
    %427 = stablehlo.broadcast_in_dim %426, dims = [0, 1, 2] : (tensor<1x1x30522xbf16>) -> tensor<64x512x30522xbf16>
    %428 = stablehlo.add %425, %427 : tensor<64x512x30522xbf16>
    %429 = stablehlo.convert %428 : (tensor<64x512x30522xbf16>) -> tensor<64x512x30522xf32>
    %c_61 = stablehlo.constant dense<-100> : tensor<i32>
    %430 = stablehlo.broadcast_in_dim %c_61, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %431 = stablehlo.compare  NE, %arg611, %430,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %432 = call @_where_193(%431, %arg611, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %433 = call @_where_193(%431, %432, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_62 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %434 = stablehlo.reduce(%429 init: %cst_62) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %435 = stablehlo.broadcast_in_dim %434, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %436 = stablehlo.broadcast_in_dim %435, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %437 = stablehlo.subtract %429, %436 : tensor<64x512x30522xf32>
    %438 = stablehlo.exponential %437 : tensor<64x512x30522xf32>
    %cst_63 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %439 = stablehlo.reduce(%438 init: %cst_63) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %440 = stablehlo.log %439 : tensor<64x512xf32>
    %441 = stablehlo.broadcast_in_dim %433, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %442:2 = call @take_along_axis(%437, %441) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %443 = stablehlo.slice %442#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %444 = stablehlo.reshape %443 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %445 = stablehlo.subtract %440, %444 : tensor<64x512xf32>
    %cst_64 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %446 = call @_where_214(%431, %445, %cst_64) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_65 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %447 = stablehlo.reduce(%446 init: %cst_65) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %448 = stablehlo.convert %431 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_66 = stablehlo.constant dense<0> : tensor<i32>
    %449 = stablehlo.reduce(%448 init: %c_66) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %450 = call @argmax(%429) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %451 = stablehlo.compare  EQ, %450, %arg611,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %452 = stablehlo.and %451, %431 : tensor<64x512xi1>
    %453 = stablehlo.convert %452 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_67 = stablehlo.constant dense<0> : tensor<i32>
    %454 = stablehlo.reduce(%453 init: %c_67) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %cst_68 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %455 = stablehlo.broadcast_in_dim %cst_68, dims = [] : (tensor<f32>) -> tensor<f32>
    %456 = stablehlo.broadcast_in_dim %455, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %457 = call @_where_232(%431, %456) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %458 = stablehlo.negate %457 : tensor<64x512xf32>
    %459 = stablehlo.broadcast_in_dim %458, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_69 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %460 = stablehlo.pad %459, %cst_69, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %461 = call @take_along_axis_233(%442#1, %460) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %462 = stablehlo.divide %457, %439 : tensor<64x512xf32>
    %463 = stablehlo.broadcast_in_dim %462, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %464 = stablehlo.multiply %463, %438 : tensor<64x512x30522xf32>
    %465 = stablehlo.add %461, %464 : tensor<64x512x30522xf32>
    %466 = stablehlo.convert %465 : (tensor<64x512x30522xf32>) -> tensor<64x512x30522xbf16>
    %cst_70 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %467 = stablehlo.reduce(%466 init: %cst_70) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xbf16>, tensor<bf16>) -> tensor<30522xbf16>
    %468 = stablehlo.reshape %467 : (tensor<30522xbf16>) -> tensor<1x1x30522xbf16>
    %cst_71 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %469 = stablehlo.reduce(%468 init: %cst_71) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xbf16>, tensor<bf16>) -> tensor<30522xbf16>
    %470 = stablehlo.dot_general %466, %424, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xbf16>, tensor<64x512x768xbf16>) -> tensor<30522x768xbf16>
    %471 = stablehlo.dot_general %466, %arg0, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xbf16>, tensor<30522x768xbf16>) -> tensor<64x512x768xbf16>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %472 = stablehlo.reduce(%471 init: %cst_72) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %473 = stablehlo.reshape %472 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_73 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %474 = stablehlo.reduce(%473 init: %cst_73) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %475 = stablehlo.broadcast_in_dim %419, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %476 = stablehlo.multiply %475, %471 : tensor<64x512x768xbf16>
    %477 = stablehlo.multiply %471, %418 : tensor<64x512x768xbf16>
    %cst_74 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %478 = stablehlo.reduce(%477 init: %cst_74) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %479 = stablehlo.reshape %478 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_75 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %480 = stablehlo.reduce(%479 init: %cst_75) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %481 = stablehlo.multiply %416, %476 : tensor<64x512x768xbf16>
    %cst_76 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %482 = stablehlo.reduce(%481 init: %cst_76) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %483 = stablehlo.reshape %482 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %484 = stablehlo.broadcast_in_dim %411, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %485 = stablehlo.multiply %476, %484 : tensor<64x512x768xbf16>
    %486 = stablehlo.negate %485 : tensor<64x512x768xbf16>
    %cst_77 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %487 = stablehlo.reduce(%486 init: %cst_77) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %488 = stablehlo.reshape %487 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %489 = stablehlo.multiply %483, %414 : tensor<64x512x1xbf16>
    %490 = stablehlo.multiply %489, %408 : tensor<64x512x1xbf16>
    %491 = call @_var_252(%396#1, %396#2, %396#3, %490) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %492 = stablehlo.add %485, %491 : tensor<64x512x768xbf16>
    %493 = stablehlo.convert %488 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %494 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %495 = stablehlo.divide %493, %494 : tensor<64x512x1xf32>
    %cst_78 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %496 = stablehlo.reduce(%495 init: %cst_78) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %497 = stablehlo.broadcast_in_dim %496, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %498 = stablehlo.convert %497 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    %499 = stablehlo.add %492, %498 : tensor<64x512x768xbf16>
    %500 = stablehlo.multiply %370, %499 : tensor<64x512x768xbf16>
    %501 = stablehlo.multiply %499, %388 : tensor<64x512x768xbf16>
    %502 = stablehlo.broadcast_in_dim %cst_59, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %503 = stablehlo.multiply %502, %500 : tensor<64x512x768xbf16>
    %504 = stablehlo.multiply %503, %384 : tensor<64x512x768xbf16>
    %505 = stablehlo.multiply %504, %381 : tensor<64x512x768xbf16>
    %506 = stablehlo.add %504, %505 : tensor<64x512x768xbf16>
    %507 = stablehlo.broadcast_in_dim %cst_58, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %508 = stablehlo.multiply %507, %506 : tensor<64x512x768xbf16>
    %509 = stablehlo.add %501, %508 : tensor<64x512x768xbf16>
    %510 = stablehlo.broadcast_in_dim %cst_57, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %511 = stablehlo.multiply %510, %508 : tensor<64x512x768xbf16>
    %512 = stablehlo.multiply %511, %375 : tensor<64x512x768xbf16>
    %513 = stablehlo.add %509, %512 : tensor<64x512x768xbf16>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %514 = stablehlo.reduce(%513 init: %cst_79) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %515 = stablehlo.reshape %514 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_80 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %516 = stablehlo.reduce(%515 init: %cst_80) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %517 = stablehlo.dot_general %513, %365#42, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x768xbf16>) -> tensor<768x768xbf16>
    %518 = stablehlo.transpose %517, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %519 = stablehlo.dot_general %513, %366, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %520 = stablehlo.transpose %518, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %cst_81 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %521 = stablehlo.broadcast_in_dim %cst_81, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %522 = stablehlo.broadcast_in_dim %cst_82, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_83 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %523 = stablehlo.broadcast_in_dim %cst_83, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_84 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %524 = stablehlo.broadcast_in_dim %cst_84, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_85 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %525 = stablehlo.broadcast_in_dim %cst_85, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_86 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %526 = stablehlo.broadcast_in_dim %cst_86, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_87 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %527 = stablehlo.broadcast_in_dim %cst_87, dims = [] : (tensor<bf16>) -> tensor<12x768x768xbf16>
    %cst_88 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %528 = stablehlo.broadcast_in_dim %cst_88, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_89 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %529 = stablehlo.broadcast_in_dim %cst_89, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_90 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %530 = stablehlo.broadcast_in_dim %cst_90, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_91 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %531 = stablehlo.broadcast_in_dim %cst_91, dims = [] : (tensor<bf16>) -> tensor<12x3072x768xbf16>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %532 = stablehlo.broadcast_in_dim %cst_92, dims = [] : (tensor<bf16>) -> tensor<12x3072xbf16>
    %cst_93 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %533 = stablehlo.broadcast_in_dim %cst_93, dims = [] : (tensor<bf16>) -> tensor<12x768x3072xbf16>
    %cst_94 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %534 = stablehlo.broadcast_in_dim %cst_94, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_95 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %535 = stablehlo.broadcast_in_dim %cst_95, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %536 = stablehlo.broadcast_in_dim %cst_96, dims = [] : (tensor<bf16>) -> tensor<12x768xbf16>
    %c_97 = stablehlo.constant dense<0> : tensor<i32>
    %537:65 = stablehlo.while(%iterArg = %365#43, %iterArg_516 = %365#44, %iterArg_517 = %365#45, %iterArg_518 = %365#46, %iterArg_519 = %365#47, %iterArg_520 = %365#48, %iterArg_521 = %365#49, %iterArg_522 = %365#50, %iterArg_523 = %365#51, %iterArg_524 = %365#52, %iterArg_525 = %365#53, %iterArg_526 = %365#54, %iterArg_527 = %365#55, %iterArg_528 = %365#56, %iterArg_529 = %365#57, %iterArg_530 = %365#58, %iterArg_531 = %365#59, %iterArg_532 = %365#60, %iterArg_533 = %365#61, %iterArg_534 = %365#62, %iterArg_535 = %365#63, %iterArg_536 = %365#64, %iterArg_537 = %365#65, %iterArg_538 = %365#66, %iterArg_539 = %365#67, %iterArg_540 = %365#68, %iterArg_541 = %365#69, %iterArg_542 = %365#70, %iterArg_543 = %365#71, %iterArg_544 = %365#72, %iterArg_545 = %365#73, %iterArg_546 = %365#74, %iterArg_547 = %365#75, %iterArg_548 = %365#76, %iterArg_549 = %365#77, %iterArg_550 = %365#78, %iterArg_551 = %295, %iterArg_552 = %296#0, %iterArg_553 = %301, %iterArg_554 = %308, %iterArg_555 = %307, %iterArg_556 = %310#0, %iterArg_557 = %310#1, %iterArg_558 = %322, %iterArg_559 = %321, %iterArg_560 = %324#0, %iterArg_561 = %324#1, %iterArg_562 = %c_97, %iterArg_563 = %519, %iterArg_564 = %521, %iterArg_565 = %522, %iterArg_566 = %523, %iterArg_567 = %524, %iterArg_568 = %525, %iterArg_569 = %526, %iterArg_570 = %527, %iterArg_571 = %528, %iterArg_572 = %529, %iterArg_573 = %530, %iterArg_574 = %531, %iterArg_575 = %532, %iterArg_576 = %533, %iterArg_577 = %534, %iterArg_578 = %535, %iterArg_579 = %536) : tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x512xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x512xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<12x768x3072xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x3072x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<i32>, tensor<64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x3072x768xbf16>, tensor<12x3072xbf16>, tensor<12x768x3072xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>
    cond {
      %c_580 = stablehlo.constant dense<12> : tensor<i32>
      %9077 = stablehlo.compare  LT, %iterArg_562, %c_580,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      stablehlo.return %9077 : tensor<i1>
    } do {
      %c_580 = stablehlo.constant dense<12> : tensor<i32>
      %9077 = stablehlo.subtract %c_580, %iterArg_562 : tensor<i32>
      %c_581 = stablehlo.constant dense<1> : tensor<i32>
      %9078 = stablehlo.subtract %9077, %c_581 : tensor<i32>
      %c_582 = stablehlo.constant dense<0> : tensor<i32>
      %9079 = stablehlo.dynamic_slice %iterArg, %9078, %c_582, %c_582, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9080 = stablehlo.reshape %9079 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9081 = stablehlo.dynamic_slice %iterArg_516, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9082 = stablehlo.reshape %9081 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9083 = stablehlo.dynamic_slice %iterArg_517, %9078, %c_582, %c_582, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9084 = stablehlo.reshape %9083 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9085 = stablehlo.dynamic_slice %iterArg_518, %9078, %c_582, %c_582, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9086 = stablehlo.reshape %9085 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9087 = stablehlo.dynamic_slice %iterArg_519, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 64] : (tensor<12x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x64xbf16>
      %9088 = stablehlo.reshape %9087 : (tensor<1x64x512x12x64xbf16>) -> tensor<64x512x12x64xbf16>
      %9089 = stablehlo.dynamic_slice %iterArg_520, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 64] : (tensor<12x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x64xbf16>
      %9090 = stablehlo.reshape %9089 : (tensor<1x64x512x12x64xbf16>) -> tensor<64x512x12x64xbf16>
      %9091 = stablehlo.dynamic_slice %iterArg_521, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 512] : (tensor<12x64x512x12x512xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x512xf32>
      %9092 = stablehlo.reshape %9091 : (tensor<1x64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
      %9093 = stablehlo.dynamic_slice %iterArg_522, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 1] : (tensor<12x64x512x12x1xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x1xf32>
      %9094 = stablehlo.reshape %9093 : (tensor<1x64x512x12x1xf32>) -> tensor<64x512x12x1xf32>
      %9095 = stablehlo.dynamic_slice %iterArg_523, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 1] : (tensor<12x64x512x12x1xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x1xf32>
      %9096 = stablehlo.reshape %9095 : (tensor<1x64x512x12x1xf32>) -> tensor<64x512x12x1xf32>
      %9097 = stablehlo.dynamic_slice %iterArg_524, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 512] : (tensor<12x64x512x12x512xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x512xbf16>
      %9098 = stablehlo.reshape %9097 : (tensor<1x64x512x12x512xbf16>) -> tensor<64x512x12x512xbf16>
      %9099 = stablehlo.dynamic_slice %iterArg_525, %9078, %c_582, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 12, 64] : (tensor<12x64x512x12x64xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x12x64xbf16>
      %9100 = stablehlo.reshape %9099 : (tensor<1x64x512x12x64xbf16>) -> tensor<64x512x12x64xbf16>
      %9101 = stablehlo.dynamic_slice %iterArg_526, %9078, %c_582, %c_582, sizes = [1, 768, 768] : (tensor<12x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x768xbf16>
      %9102 = stablehlo.reshape %9101 : (tensor<1x768x768xbf16>) -> tensor<768x768xbf16>
      %9103 = stablehlo.dynamic_slice %iterArg_527, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9104 = stablehlo.reshape %9103 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9105 = stablehlo.dynamic_slice %iterArg_528, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xf32>
      %9106 = stablehlo.reshape %9105 : (tensor<1x64x512x768xf32>) -> tensor<64x512x768xf32>
      %9107 = stablehlo.dynamic_slice %iterArg_529, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9108 = stablehlo.reshape %9107 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9109 = stablehlo.dynamic_slice %iterArg_530, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9110 = stablehlo.reshape %9109 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9111 = stablehlo.dynamic_slice %iterArg_531, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9112 = stablehlo.reshape %9111 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9113 = stablehlo.dynamic_slice %iterArg_532, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9114 = stablehlo.reshape %9113 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9115 = stablehlo.dynamic_slice %iterArg_533, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9116 = stablehlo.reshape %9115 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9117 = stablehlo.dynamic_slice %iterArg_534, %9078, %c_582, %c_582, %c_582, sizes = [1, 1, 1, 768] : (tensor<12x1x1x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x1x1x768xbf16>
      %9118 = stablehlo.reshape %9117 : (tensor<1x1x1x768xbf16>) -> tensor<1x1x768xbf16>
      %9119 = stablehlo.dynamic_slice %iterArg_535, %9078, %c_582, %c_582, sizes = [1, 768, 3072] : (tensor<12x768x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x768x3072xbf16>
      %9120 = stablehlo.reshape %9119 : (tensor<1x768x3072xbf16>) -> tensor<768x3072xbf16>
      %9121 = stablehlo.dynamic_slice %iterArg_536, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9122 = stablehlo.reshape %9121 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9123 = stablehlo.dynamic_slice %iterArg_537, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9124 = stablehlo.reshape %9123 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9125 = stablehlo.dynamic_slice %iterArg_538, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9126 = stablehlo.reshape %9125 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9127 = stablehlo.dynamic_slice %iterArg_539, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9128 = stablehlo.reshape %9127 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9129 = stablehlo.dynamic_slice %iterArg_540, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9130 = stablehlo.reshape %9129 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9131 = stablehlo.dynamic_slice %iterArg_541, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9132 = stablehlo.reshape %9131 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9133 = stablehlo.dynamic_slice %iterArg_542, %9078, %c_582, %c_582, sizes = [1, 3072, 768] : (tensor<12x3072x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x3072x768xbf16>
      %9134 = stablehlo.reshape %9133 : (tensor<1x3072x768xbf16>) -> tensor<3072x768xbf16>
      %9135 = stablehlo.dynamic_slice %iterArg_543, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 3072] : (tensor<12x64x512x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x3072xbf16>
      %9136 = stablehlo.reshape %9135 : (tensor<1x64x512x3072xbf16>) -> tensor<64x512x3072xbf16>
      %9137 = stablehlo.dynamic_slice %iterArg_544, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xf32>
      %9138 = stablehlo.reshape %9137 : (tensor<1x64x512x768xf32>) -> tensor<64x512x768xf32>
      %9139 = stablehlo.dynamic_slice %iterArg_545, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9140 = stablehlo.reshape %9139 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9141 = stablehlo.dynamic_slice %iterArg_546, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9142 = stablehlo.reshape %9141 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9143 = stablehlo.dynamic_slice %iterArg_547, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 1] : (tensor<12x64x512x1xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x1xbf16>
      %9144 = stablehlo.reshape %9143 : (tensor<1x64x512x1xbf16>) -> tensor<64x512x1xbf16>
      %9145 = stablehlo.dynamic_slice %iterArg_548, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9146 = stablehlo.reshape %9145 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9147 = stablehlo.dynamic_slice %iterArg_549, %9078, %c_582, %c_582, %c_582, sizes = [1, 64, 512, 768] : (tensor<12x64x512x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x64x512x768xbf16>
      %9148 = stablehlo.reshape %9147 : (tensor<1x64x512x768xbf16>) -> tensor<64x512x768xbf16>
      %9149 = stablehlo.dynamic_slice %iterArg_550, %9078, %c_582, %c_582, %c_582, sizes = [1, 1, 1, 768] : (tensor<12x1x1x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x1x1x768xbf16>
      %9150 = stablehlo.reshape %9149 : (tensor<1x1x1x768xbf16>) -> tensor<1x1x768xbf16>
      %9151:17 = func.call @closed_call_288(%iterArg_551, %iterArg_552, %iterArg_553, %iterArg_554, %iterArg_555, %iterArg_556, %iterArg_557, %iterArg_558, %iterArg_559, %iterArg_560, %iterArg_561, %iterArg_563, %9080, %9082, %9084, %9086, %9088, %9090, %9092, %9094, %9096, %9098, %9100, %9102, %9104, %9106, %9108, %9110, %9112, %9114, %9116, %9118, %9120, %9122, %9124, %9126, %9128, %9130, %9132, %9134, %9136, %9138, %9140, %9142, %9144, %9146, %9148, %9150) : (tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768x768xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x512xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x512xbf16>, tensor<64x512x12x64xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>, tensor<768x3072xbf16>, tensor<64x512x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<3072x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>) -> (tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>)
      %9152 = stablehlo.broadcast_in_dim %9151#1, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9153 = stablehlo.dynamic_update_slice %iterArg_564, %9152, %9078, %c_582, %c_582 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9154 = stablehlo.broadcast_in_dim %9151#2, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9155 = stablehlo.dynamic_update_slice %iterArg_565, %9154, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9156 = stablehlo.broadcast_in_dim %9151#3, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9157 = stablehlo.dynamic_update_slice %iterArg_566, %9156, %9078, %c_582, %c_582 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9158 = stablehlo.broadcast_in_dim %9151#4, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9159 = stablehlo.dynamic_update_slice %iterArg_567, %9158, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9160 = stablehlo.broadcast_in_dim %9151#5, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9161 = stablehlo.dynamic_update_slice %iterArg_568, %9160, %9078, %c_582, %c_582 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9162 = stablehlo.broadcast_in_dim %9151#6, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9163 = stablehlo.dynamic_update_slice %iterArg_569, %9162, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9164 = stablehlo.broadcast_in_dim %9151#7, dims = [1, 2] : (tensor<768x768xbf16>) -> tensor<1x768x768xbf16>
      %9165 = stablehlo.dynamic_update_slice %iterArg_570, %9164, %9078, %c_582, %c_582 : (tensor<12x768x768xbf16>, tensor<1x768x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x768xbf16>
      %9166 = stablehlo.broadcast_in_dim %9151#8, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9167 = stablehlo.dynamic_update_slice %iterArg_571, %9166, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9168 = stablehlo.broadcast_in_dim %9151#9, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9169 = stablehlo.dynamic_update_slice %iterArg_572, %9168, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9170 = stablehlo.broadcast_in_dim %9151#10, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9171 = stablehlo.dynamic_update_slice %iterArg_573, %9170, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9172 = stablehlo.broadcast_in_dim %9151#11, dims = [1, 2] : (tensor<3072x768xbf16>) -> tensor<1x3072x768xbf16>
      %9173 = stablehlo.dynamic_update_slice %iterArg_574, %9172, %9078, %c_582, %c_582 : (tensor<12x3072x768xbf16>, tensor<1x3072x768xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x3072x768xbf16>
      %9174 = stablehlo.broadcast_in_dim %9151#12, dims = [1] : (tensor<3072xbf16>) -> tensor<1x3072xbf16>
      %9175 = stablehlo.dynamic_update_slice %iterArg_575, %9174, %9078, %c_582 : (tensor<12x3072xbf16>, tensor<1x3072xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x3072xbf16>
      %9176 = stablehlo.broadcast_in_dim %9151#13, dims = [1, 2] : (tensor<768x3072xbf16>) -> tensor<1x768x3072xbf16>
      %9177 = stablehlo.dynamic_update_slice %iterArg_576, %9176, %9078, %c_582, %c_582 : (tensor<12x768x3072xbf16>, tensor<1x768x3072xbf16>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<12x768x3072xbf16>
      %9178 = stablehlo.broadcast_in_dim %9151#14, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9179 = stablehlo.dynamic_update_slice %iterArg_577, %9178, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9180 = stablehlo.broadcast_in_dim %9151#15, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9181 = stablehlo.dynamic_update_slice %iterArg_578, %9180, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9182 = stablehlo.broadcast_in_dim %9151#16, dims = [1] : (tensor<768xbf16>) -> tensor<1x768xbf16>
      %9183 = stablehlo.dynamic_update_slice %iterArg_579, %9182, %9078, %c_582 : (tensor<12x768xbf16>, tensor<1x768xbf16>, tensor<i32>, tensor<i32>) -> tensor<12x768xbf16>
      %9184 = stablehlo.add %iterArg_562, %c_581 : tensor<i32>
      stablehlo.return %iterArg, %iterArg_516, %iterArg_517, %iterArg_518, %iterArg_519, %iterArg_520, %iterArg_521, %iterArg_522, %iterArg_523, %iterArg_524, %iterArg_525, %iterArg_526, %iterArg_527, %iterArg_528, %iterArg_529, %iterArg_530, %iterArg_531, %iterArg_532, %iterArg_533, %iterArg_534, %iterArg_535, %iterArg_536, %iterArg_537, %iterArg_538, %iterArg_539, %iterArg_540, %iterArg_541, %iterArg_542, %iterArg_543, %iterArg_544, %iterArg_545, %iterArg_546, %iterArg_547, %iterArg_548, %iterArg_549, %iterArg_550, %iterArg_551, %iterArg_552, %iterArg_553, %iterArg_554, %iterArg_555, %iterArg_556, %iterArg_557, %iterArg_558, %iterArg_559, %iterArg_560, %iterArg_561, %9184, %9151#0, %9153, %9155, %9157, %9159, %9161, %9163, %9165, %9167, %9169, %9171, %9173, %9175, %9177, %9179, %9181, %9183 : tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x64x512x12x512xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x1xf32>, tensor<12x64x512x12x512xbf16>, tensor<12x64x512x12x64xbf16>, tensor<12x768x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<12x768x3072xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x3072x768xbf16>, tensor<12x64x512x3072xbf16>, tensor<12x64x512x768xf32>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x1xbf16>, tensor<12x64x512x768xbf16>, tensor<12x64x512x768xbf16>, tensor<12x1x1x768xbf16>, tensor<bf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<bf16>, tensor<64x512x768xi1>, tensor<f32>, tensor<i1>, tensor<i32>, tensor<64x512x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x3072x768xbf16>, tensor<12x3072xbf16>, tensor<12x768x3072xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>, tensor<12x768xbf16>
    }
    %538 = stablehlo.slice %537#64 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %539 = stablehlo.slice %537#64 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %540 = stablehlo.slice %537#64 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %541 = stablehlo.slice %537#64 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %542 = stablehlo.slice %537#64 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %543 = stablehlo.slice %537#64 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %544 = stablehlo.slice %537#64 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %545 = stablehlo.slice %537#64 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %546 = stablehlo.slice %537#64 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %547 = stablehlo.slice %537#64 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %548 = stablehlo.slice %537#64 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %549 = stablehlo.slice %537#64 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %550 = stablehlo.reduce(%549 init: %cst_98) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %551 = stablehlo.reduce(%548 init: %cst_99) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_100 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %552 = stablehlo.reduce(%547 init: %cst_100) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_101 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %553 = stablehlo.reduce(%546 init: %cst_101) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %554 = stablehlo.reduce(%545 init: %cst_102) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_103 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %555 = stablehlo.reduce(%544 init: %cst_103) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_104 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %556 = stablehlo.reduce(%543 init: %cst_104) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_105 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %557 = stablehlo.reduce(%542 init: %cst_105) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_106 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %558 = stablehlo.reduce(%541 init: %cst_106) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_107 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %559 = stablehlo.reduce(%540 init: %cst_107) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %560 = stablehlo.reduce(%539 init: %cst_108) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_109 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %561 = stablehlo.reduce(%538 init: %cst_109) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %562 = stablehlo.slice %537#63 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %563 = stablehlo.slice %537#63 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %564 = stablehlo.slice %537#63 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %565 = stablehlo.slice %537#63 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %566 = stablehlo.slice %537#63 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %567 = stablehlo.slice %537#63 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %568 = stablehlo.slice %537#63 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %569 = stablehlo.slice %537#63 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %570 = stablehlo.slice %537#63 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %571 = stablehlo.slice %537#63 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %572 = stablehlo.slice %537#63 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %573 = stablehlo.slice %537#63 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_110 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %574 = stablehlo.reduce(%573 init: %cst_110) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_111 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %575 = stablehlo.reduce(%572 init: %cst_111) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %576 = stablehlo.reduce(%571 init: %cst_112) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_113 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %577 = stablehlo.reduce(%570 init: %cst_113) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_114 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %578 = stablehlo.reduce(%569 init: %cst_114) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %579 = stablehlo.reduce(%568 init: %cst_115) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %580 = stablehlo.reduce(%567 init: %cst_116) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_117 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %581 = stablehlo.reduce(%566 init: %cst_117) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %582 = stablehlo.reduce(%565 init: %cst_118) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %583 = stablehlo.reduce(%564 init: %cst_119) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_120 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %584 = stablehlo.reduce(%563 init: %cst_120) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_121 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %585 = stablehlo.reduce(%562 init: %cst_121) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %586 = stablehlo.slice %537#62 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %587 = stablehlo.slice %537#62 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %588 = stablehlo.slice %537#62 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %589 = stablehlo.slice %537#62 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %590 = stablehlo.slice %537#62 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %591 = stablehlo.slice %537#62 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %592 = stablehlo.slice %537#62 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %593 = stablehlo.slice %537#62 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %594 = stablehlo.slice %537#62 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %595 = stablehlo.slice %537#62 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %596 = stablehlo.slice %537#62 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %597 = stablehlo.slice %537#62 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %598 = stablehlo.reduce(%597 init: %cst_122) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_123 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %599 = stablehlo.reduce(%596 init: %cst_123) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_124 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %600 = stablehlo.reduce(%595 init: %cst_124) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %601 = stablehlo.reduce(%594 init: %cst_125) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %602 = stablehlo.reduce(%593 init: %cst_126) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_127 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %603 = stablehlo.reduce(%592 init: %cst_127) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %604 = stablehlo.reduce(%591 init: %cst_128) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %605 = stablehlo.reduce(%590 init: %cst_129) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_130 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %606 = stablehlo.reduce(%589 init: %cst_130) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_131 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %607 = stablehlo.reduce(%588 init: %cst_131) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %608 = stablehlo.reduce(%587 init: %cst_132) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_133 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %609 = stablehlo.reduce(%586 init: %cst_133) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %610 = stablehlo.slice %537#61 [0:1, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %611 = stablehlo.slice %537#61 [1:2, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %612 = stablehlo.slice %537#61 [2:3, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %613 = stablehlo.slice %537#61 [3:4, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %614 = stablehlo.slice %537#61 [4:5, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %615 = stablehlo.slice %537#61 [5:6, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %616 = stablehlo.slice %537#61 [6:7, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %617 = stablehlo.slice %537#61 [7:8, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %618 = stablehlo.slice %537#61 [8:9, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %619 = stablehlo.slice %537#61 [9:10, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %620 = stablehlo.slice %537#61 [10:11, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %621 = stablehlo.slice %537#61 [11:12, 0:768, 0:3072] : (tensor<12x768x3072xbf16>) -> tensor<1x768x3072xbf16>
    %cst_134 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %622 = stablehlo.reduce(%621 init: %cst_134) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %623 = stablehlo.reduce(%620 init: %cst_135) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %624 = stablehlo.reduce(%619 init: %cst_136) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_137 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %625 = stablehlo.reduce(%618 init: %cst_137) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %626 = stablehlo.reduce(%617 init: %cst_138) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %627 = stablehlo.reduce(%616 init: %cst_139) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %628 = stablehlo.reduce(%615 init: %cst_140) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %629 = stablehlo.reduce(%614 init: %cst_141) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_142 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %630 = stablehlo.reduce(%613 init: %cst_142) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_143 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %631 = stablehlo.reduce(%612 init: %cst_143) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_144 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %632 = stablehlo.reduce(%611 init: %cst_144) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %633 = stablehlo.reduce(%610 init: %cst_145) applies stablehlo.add across dimensions = [0] : (tensor<1x768x3072xbf16>, tensor<bf16>) -> tensor<768x3072xbf16>
    %634 = stablehlo.slice %537#60 [0:1, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %635 = stablehlo.slice %537#60 [1:2, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %636 = stablehlo.slice %537#60 [2:3, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %637 = stablehlo.slice %537#60 [3:4, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %638 = stablehlo.slice %537#60 [4:5, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %639 = stablehlo.slice %537#60 [5:6, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %640 = stablehlo.slice %537#60 [6:7, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %641 = stablehlo.slice %537#60 [7:8, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %642 = stablehlo.slice %537#60 [8:9, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %643 = stablehlo.slice %537#60 [9:10, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %644 = stablehlo.slice %537#60 [10:11, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %645 = stablehlo.slice %537#60 [11:12, 0:3072] : (tensor<12x3072xbf16>) -> tensor<1x3072xbf16>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %646 = stablehlo.reduce(%645 init: %cst_146) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_147 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %647 = stablehlo.reduce(%644 init: %cst_147) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_148 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %648 = stablehlo.reduce(%643 init: %cst_148) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %649 = stablehlo.reduce(%642 init: %cst_149) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %650 = stablehlo.reduce(%641 init: %cst_150) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %651 = stablehlo.reduce(%640 init: %cst_151) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %652 = stablehlo.reduce(%639 init: %cst_152) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %653 = stablehlo.reduce(%638 init: %cst_153) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %654 = stablehlo.reduce(%637 init: %cst_154) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %655 = stablehlo.reduce(%636 init: %cst_155) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %656 = stablehlo.reduce(%635 init: %cst_156) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %657 = stablehlo.reduce(%634 init: %cst_157) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %658 = stablehlo.slice %537#59 [0:1, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %659 = stablehlo.slice %537#59 [1:2, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %660 = stablehlo.slice %537#59 [2:3, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %661 = stablehlo.slice %537#59 [3:4, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %662 = stablehlo.slice %537#59 [4:5, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %663 = stablehlo.slice %537#59 [5:6, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %664 = stablehlo.slice %537#59 [6:7, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %665 = stablehlo.slice %537#59 [7:8, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %666 = stablehlo.slice %537#59 [8:9, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %667 = stablehlo.slice %537#59 [9:10, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %668 = stablehlo.slice %537#59 [10:11, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %669 = stablehlo.slice %537#59 [11:12, 0:3072, 0:768] : (tensor<12x3072x768xbf16>) -> tensor<1x3072x768xbf16>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %670 = stablehlo.reduce(%669 init: %cst_158) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %671 = stablehlo.reduce(%668 init: %cst_159) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %672 = stablehlo.reduce(%667 init: %cst_160) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %673 = stablehlo.reduce(%666 init: %cst_161) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %674 = stablehlo.reduce(%665 init: %cst_162) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %675 = stablehlo.reduce(%664 init: %cst_163) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %676 = stablehlo.reduce(%663 init: %cst_164) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %677 = stablehlo.reduce(%662 init: %cst_165) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %678 = stablehlo.reduce(%661 init: %cst_166) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %679 = stablehlo.reduce(%660 init: %cst_167) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %680 = stablehlo.reduce(%659 init: %cst_168) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %681 = stablehlo.reduce(%658 init: %cst_169) applies stablehlo.add across dimensions = [0] : (tensor<1x3072x768xbf16>, tensor<bf16>) -> tensor<3072x768xbf16>
    %682 = stablehlo.slice %537#58 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %683 = stablehlo.slice %537#58 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %684 = stablehlo.slice %537#58 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %685 = stablehlo.slice %537#58 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %686 = stablehlo.slice %537#58 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %687 = stablehlo.slice %537#58 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %688 = stablehlo.slice %537#58 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %689 = stablehlo.slice %537#58 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %690 = stablehlo.slice %537#58 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %691 = stablehlo.slice %537#58 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %692 = stablehlo.slice %537#58 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %693 = stablehlo.slice %537#58 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %694 = stablehlo.reduce(%693 init: %cst_170) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %695 = stablehlo.reduce(%692 init: %cst_171) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %696 = stablehlo.reduce(%691 init: %cst_172) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %697 = stablehlo.reduce(%690 init: %cst_173) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %698 = stablehlo.reduce(%689 init: %cst_174) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %699 = stablehlo.reduce(%688 init: %cst_175) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %700 = stablehlo.reduce(%687 init: %cst_176) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %701 = stablehlo.reduce(%686 init: %cst_177) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %702 = stablehlo.reduce(%685 init: %cst_178) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %703 = stablehlo.reduce(%684 init: %cst_179) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %704 = stablehlo.reduce(%683 init: %cst_180) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %705 = stablehlo.reduce(%682 init: %cst_181) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %706 = stablehlo.slice %537#57 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %707 = stablehlo.slice %537#57 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %708 = stablehlo.slice %537#57 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %709 = stablehlo.slice %537#57 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %710 = stablehlo.slice %537#57 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %711 = stablehlo.slice %537#57 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %712 = stablehlo.slice %537#57 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %713 = stablehlo.slice %537#57 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %714 = stablehlo.slice %537#57 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %715 = stablehlo.slice %537#57 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %716 = stablehlo.slice %537#57 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %717 = stablehlo.slice %537#57 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %718 = stablehlo.reduce(%717 init: %cst_182) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %719 = stablehlo.reduce(%716 init: %cst_183) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %720 = stablehlo.reduce(%715 init: %cst_184) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %721 = stablehlo.reduce(%714 init: %cst_185) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %722 = stablehlo.reduce(%713 init: %cst_186) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %723 = stablehlo.reduce(%712 init: %cst_187) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %724 = stablehlo.reduce(%711 init: %cst_188) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %725 = stablehlo.reduce(%710 init: %cst_189) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %726 = stablehlo.reduce(%709 init: %cst_190) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %727 = stablehlo.reduce(%708 init: %cst_191) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %728 = stablehlo.reduce(%707 init: %cst_192) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %729 = stablehlo.reduce(%706 init: %cst_193) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %730 = stablehlo.slice %537#56 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %731 = stablehlo.slice %537#56 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %732 = stablehlo.slice %537#56 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %733 = stablehlo.slice %537#56 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %734 = stablehlo.slice %537#56 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %735 = stablehlo.slice %537#56 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %736 = stablehlo.slice %537#56 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %737 = stablehlo.slice %537#56 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %738 = stablehlo.slice %537#56 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %739 = stablehlo.slice %537#56 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %740 = stablehlo.slice %537#56 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %741 = stablehlo.slice %537#56 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %742 = stablehlo.reduce(%741 init: %cst_194) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %743 = stablehlo.reduce(%740 init: %cst_195) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %744 = stablehlo.reduce(%739 init: %cst_196) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %745 = stablehlo.reduce(%738 init: %cst_197) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %746 = stablehlo.reduce(%737 init: %cst_198) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %747 = stablehlo.reduce(%736 init: %cst_199) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %748 = stablehlo.reduce(%735 init: %cst_200) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %749 = stablehlo.reduce(%734 init: %cst_201) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %750 = stablehlo.reduce(%733 init: %cst_202) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %751 = stablehlo.reduce(%732 init: %cst_203) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %752 = stablehlo.reduce(%731 init: %cst_204) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %753 = stablehlo.reduce(%730 init: %cst_205) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %754 = stablehlo.slice %537#55 [0:1, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %755 = stablehlo.slice %537#55 [1:2, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %756 = stablehlo.slice %537#55 [2:3, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %757 = stablehlo.slice %537#55 [3:4, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %758 = stablehlo.slice %537#55 [4:5, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %759 = stablehlo.slice %537#55 [5:6, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %760 = stablehlo.slice %537#55 [6:7, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %761 = stablehlo.slice %537#55 [7:8, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %762 = stablehlo.slice %537#55 [8:9, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %763 = stablehlo.slice %537#55 [9:10, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %764 = stablehlo.slice %537#55 [10:11, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %765 = stablehlo.slice %537#55 [11:12, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %766 = stablehlo.reduce(%765 init: %cst_206) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %767 = stablehlo.reduce(%764 init: %cst_207) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %768 = stablehlo.reduce(%763 init: %cst_208) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %769 = stablehlo.reduce(%762 init: %cst_209) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %770 = stablehlo.reduce(%761 init: %cst_210) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %771 = stablehlo.reduce(%760 init: %cst_211) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %772 = stablehlo.reduce(%759 init: %cst_212) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %773 = stablehlo.reduce(%758 init: %cst_213) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %774 = stablehlo.reduce(%757 init: %cst_214) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %775 = stablehlo.reduce(%756 init: %cst_215) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %776 = stablehlo.reduce(%755 init: %cst_216) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %777 = stablehlo.reduce(%754 init: %cst_217) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %778 = stablehlo.slice %537#54 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %779 = stablehlo.slice %537#54 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %780 = stablehlo.slice %537#54 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %781 = stablehlo.slice %537#54 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %782 = stablehlo.slice %537#54 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %783 = stablehlo.slice %537#54 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %784 = stablehlo.slice %537#54 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %785 = stablehlo.slice %537#54 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %786 = stablehlo.slice %537#54 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %787 = stablehlo.slice %537#54 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %788 = stablehlo.slice %537#54 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %789 = stablehlo.slice %537#54 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %790 = stablehlo.reduce(%789 init: %cst_218) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %791 = stablehlo.reduce(%788 init: %cst_219) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %792 = stablehlo.reduce(%787 init: %cst_220) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %793 = stablehlo.reduce(%786 init: %cst_221) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %794 = stablehlo.reduce(%785 init: %cst_222) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %795 = stablehlo.reduce(%784 init: %cst_223) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %796 = stablehlo.reduce(%783 init: %cst_224) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %797 = stablehlo.reduce(%782 init: %cst_225) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %798 = stablehlo.reduce(%781 init: %cst_226) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %799 = stablehlo.reduce(%780 init: %cst_227) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %800 = stablehlo.reduce(%779 init: %cst_228) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %801 = stablehlo.reduce(%778 init: %cst_229) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %802 = stablehlo.slice %537#53 [0:1, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %803 = stablehlo.slice %537#53 [1:2, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %804 = stablehlo.slice %537#53 [2:3, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %805 = stablehlo.slice %537#53 [3:4, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %806 = stablehlo.slice %537#53 [4:5, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %807 = stablehlo.slice %537#53 [5:6, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %808 = stablehlo.slice %537#53 [6:7, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %809 = stablehlo.slice %537#53 [7:8, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %810 = stablehlo.slice %537#53 [8:9, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %811 = stablehlo.slice %537#53 [9:10, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %812 = stablehlo.slice %537#53 [10:11, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %813 = stablehlo.slice %537#53 [11:12, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %814 = stablehlo.reduce(%813 init: %cst_230) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %815 = stablehlo.reduce(%812 init: %cst_231) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %816 = stablehlo.reduce(%811 init: %cst_232) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %817 = stablehlo.reduce(%810 init: %cst_233) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %818 = stablehlo.reduce(%809 init: %cst_234) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %819 = stablehlo.reduce(%808 init: %cst_235) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %820 = stablehlo.reduce(%807 init: %cst_236) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %821 = stablehlo.reduce(%806 init: %cst_237) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %822 = stablehlo.reduce(%805 init: %cst_238) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %823 = stablehlo.reduce(%804 init: %cst_239) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %824 = stablehlo.reduce(%803 init: %cst_240) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %825 = stablehlo.reduce(%802 init: %cst_241) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %826 = stablehlo.slice %537#52 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %827 = stablehlo.slice %537#52 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %828 = stablehlo.slice %537#52 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %829 = stablehlo.slice %537#52 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %830 = stablehlo.slice %537#52 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %831 = stablehlo.slice %537#52 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %832 = stablehlo.slice %537#52 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %833 = stablehlo.slice %537#52 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %834 = stablehlo.slice %537#52 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %835 = stablehlo.slice %537#52 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %836 = stablehlo.slice %537#52 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %837 = stablehlo.slice %537#52 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %838 = stablehlo.reduce(%837 init: %cst_242) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %839 = stablehlo.reduce(%836 init: %cst_243) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %840 = stablehlo.reduce(%835 init: %cst_244) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %841 = stablehlo.reduce(%834 init: %cst_245) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %842 = stablehlo.reduce(%833 init: %cst_246) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %843 = stablehlo.reduce(%832 init: %cst_247) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %844 = stablehlo.reduce(%831 init: %cst_248) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %845 = stablehlo.reduce(%830 init: %cst_249) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %846 = stablehlo.reduce(%829 init: %cst_250) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %847 = stablehlo.reduce(%828 init: %cst_251) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %848 = stablehlo.reduce(%827 init: %cst_252) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %849 = stablehlo.reduce(%826 init: %cst_253) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %850 = stablehlo.slice %537#51 [0:1, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %851 = stablehlo.slice %537#51 [1:2, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %852 = stablehlo.slice %537#51 [2:3, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %853 = stablehlo.slice %537#51 [3:4, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %854 = stablehlo.slice %537#51 [4:5, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %855 = stablehlo.slice %537#51 [5:6, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %856 = stablehlo.slice %537#51 [6:7, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %857 = stablehlo.slice %537#51 [7:8, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %858 = stablehlo.slice %537#51 [8:9, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %859 = stablehlo.slice %537#51 [9:10, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %860 = stablehlo.slice %537#51 [10:11, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %861 = stablehlo.slice %537#51 [11:12, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %862 = stablehlo.reduce(%861 init: %cst_254) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %863 = stablehlo.reduce(%860 init: %cst_255) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %864 = stablehlo.reduce(%859 init: %cst_256) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %865 = stablehlo.reduce(%858 init: %cst_257) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %866 = stablehlo.reduce(%857 init: %cst_258) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %867 = stablehlo.reduce(%856 init: %cst_259) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %868 = stablehlo.reduce(%855 init: %cst_260) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %869 = stablehlo.reduce(%854 init: %cst_261) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %870 = stablehlo.reduce(%853 init: %cst_262) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %871 = stablehlo.reduce(%852 init: %cst_263) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %872 = stablehlo.reduce(%851 init: %cst_264) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %873 = stablehlo.reduce(%850 init: %cst_265) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %874 = stablehlo.slice %537#50 [0:1, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %875 = stablehlo.slice %537#50 [1:2, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %876 = stablehlo.slice %537#50 [2:3, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %877 = stablehlo.slice %537#50 [3:4, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %878 = stablehlo.slice %537#50 [4:5, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %879 = stablehlo.slice %537#50 [5:6, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %880 = stablehlo.slice %537#50 [6:7, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %881 = stablehlo.slice %537#50 [7:8, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %882 = stablehlo.slice %537#50 [8:9, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %883 = stablehlo.slice %537#50 [9:10, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %884 = stablehlo.slice %537#50 [10:11, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %885 = stablehlo.slice %537#50 [11:12, 0:768] : (tensor<12x768xbf16>) -> tensor<1x768xbf16>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %886 = stablehlo.reduce(%885 init: %cst_266) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %887 = stablehlo.reduce(%884 init: %cst_267) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %888 = stablehlo.reduce(%883 init: %cst_268) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %889 = stablehlo.reduce(%882 init: %cst_269) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %890 = stablehlo.reduce(%881 init: %cst_270) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %891 = stablehlo.reduce(%880 init: %cst_271) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %892 = stablehlo.reduce(%879 init: %cst_272) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %893 = stablehlo.reduce(%878 init: %cst_273) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %894 = stablehlo.reduce(%877 init: %cst_274) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %895 = stablehlo.reduce(%876 init: %cst_275) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %896 = stablehlo.reduce(%875 init: %cst_276) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %897 = stablehlo.reduce(%874 init: %cst_277) applies stablehlo.add across dimensions = [0] : (tensor<1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %898 = stablehlo.slice %537#49 [0:1, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %899 = stablehlo.slice %537#49 [1:2, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %900 = stablehlo.slice %537#49 [2:3, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %901 = stablehlo.slice %537#49 [3:4, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %902 = stablehlo.slice %537#49 [4:5, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %903 = stablehlo.slice %537#49 [5:6, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %904 = stablehlo.slice %537#49 [6:7, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %905 = stablehlo.slice %537#49 [7:8, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %906 = stablehlo.slice %537#49 [8:9, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %907 = stablehlo.slice %537#49 [9:10, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %908 = stablehlo.slice %537#49 [10:11, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %909 = stablehlo.slice %537#49 [11:12, 0:768, 0:768] : (tensor<12x768x768xbf16>) -> tensor<1x768x768xbf16>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %910 = stablehlo.reduce(%909 init: %cst_278) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %911 = stablehlo.reduce(%908 init: %cst_279) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %912 = stablehlo.reduce(%907 init: %cst_280) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %913 = stablehlo.reduce(%906 init: %cst_281) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %914 = stablehlo.reduce(%905 init: %cst_282) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %915 = stablehlo.reduce(%904 init: %cst_283) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %916 = stablehlo.reduce(%903 init: %cst_284) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %917 = stablehlo.reduce(%902 init: %cst_285) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %918 = stablehlo.reduce(%901 init: %cst_286) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %919 = stablehlo.reduce(%900 init: %cst_287) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %920 = stablehlo.reduce(%899 init: %cst_288) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %921 = stablehlo.reduce(%898 init: %cst_289) applies stablehlo.add across dimensions = [0] : (tensor<1x768x768xbf16>, tensor<bf16>) -> tensor<768x768xbf16>
    %922 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %923 = stablehlo.select %66, %537#48, %922 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %924 = stablehlo.broadcast_in_dim %67, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %925 = stablehlo.divide %923, %924 : tensor<64x512x768xbf16>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %926 = stablehlo.reduce(%925 init: %cst_290) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %927 = stablehlo.reshape %926 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %928 = stablehlo.reduce(%927 init: %cst_291) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %929 = stablehlo.broadcast_in_dim %55, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %930 = stablehlo.multiply %929, %925 : tensor<64x512x768xbf16>
    %931 = stablehlo.multiply %925, %54 : tensor<64x512x768xbf16>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %932 = stablehlo.reduce(%931 init: %cst_292) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %933 = stablehlo.reshape %932 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %934 = stablehlo.reduce(%933 init: %cst_293) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %935 = stablehlo.multiply %52, %930 : tensor<64x512x768xbf16>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %936 = stablehlo.reduce(%935 init: %cst_294) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %937 = stablehlo.reshape %936 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %938 = stablehlo.broadcast_in_dim %47, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %939 = stablehlo.multiply %930, %938 : tensor<64x512x768xbf16>
    %940 = stablehlo.negate %939 : tensor<64x512x768xbf16>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %941 = stablehlo.reduce(%940 init: %cst_295) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %942 = stablehlo.reshape %941 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %943 = stablehlo.multiply %937, %50 : tensor<64x512x1xbf16>
    %944 = stablehlo.multiply %943, %44 : tensor<64x512x1xbf16>
    %945 = call @_var_252(%32#1, %32#2, %32#3, %944) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %946 = stablehlo.add %939, %945 : tensor<64x512x768xbf16>
    %947 = stablehlo.convert %942 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %948 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %949 = stablehlo.divide %947, %948 : tensor<64x512x1xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %950 = stablehlo.reduce(%949 init: %cst_296) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %951 = stablehlo.broadcast_in_dim %950, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %952 = stablehlo.convert %951 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    %953 = stablehlo.add %946, %952 : tensor<64x512x768xbf16>
    %954 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %955 = "stablehlo.scatter"(%954, %22, %953) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<bf16>, %arg615: tensor<bf16>):
      %9077 = stablehlo.add %arg614, %arg615 : tensor<bf16>
      stablehlo.return %9077 : tensor<bf16>
    }) : (tensor<2x768xbf16>, tensor<64x512x1xi32>, tensor<64x512x768xbf16>) -> tensor<2x768xbf16>
    %956 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %957 = "stablehlo.scatter"(%956, %15, %953) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<bf16>, %arg615: tensor<bf16>):
      %9077 = stablehlo.add %arg614, %arg615 : tensor<bf16>
      stablehlo.return %9077 : tensor<bf16>
    }) : (tensor<512x768xbf16>, tensor<64x512x1xi32>, tensor<64x512x768xbf16>) -> tensor<512x768xbf16>
    %958 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %959 = "stablehlo.scatter"(%958, %8, %953) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg614: tensor<bf16>, %arg615: tensor<bf16>):
      %9077 = stablehlo.add %arg614, %arg615 : tensor<bf16>
      stablehlo.return %9077 : tensor<bf16>
    }) : (tensor<30522x768xbf16>, tensor<64x512x1xi32>, tensor<64x512x768xbf16>) -> tensor<30522x768xbf16>
    %960 = stablehlo.add %470, %959 : tensor<30522x768xbf16>
    %961 = stablehlo.multiply %960, %960 : tensor<30522x768xbf16>
    %962 = stablehlo.convert %961 : (tensor<30522x768xbf16>) -> tensor<30522x768xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %963 = stablehlo.reduce(%962 init: %cst_297) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %964 = stablehlo.convert %963 : (tensor<f32>) -> tensor<bf16>
    %965 = stablehlo.add %cst_5, %964 : tensor<bf16>
    %966 = stablehlo.multiply %957, %957 : tensor<512x768xbf16>
    %967 = stablehlo.convert %966 : (tensor<512x768xbf16>) -> tensor<512x768xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %968 = stablehlo.reduce(%967 init: %cst_298) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %969 = stablehlo.convert %968 : (tensor<f32>) -> tensor<bf16>
    %970 = stablehlo.add %965, %969 : tensor<bf16>
    %971 = stablehlo.multiply %955, %955 : tensor<2x768xbf16>
    %972 = stablehlo.convert %971 : (tensor<2x768xbf16>) -> tensor<2x768xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %973 = stablehlo.reduce(%972 init: %cst_299) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %974 = stablehlo.convert %973 : (tensor<f32>) -> tensor<bf16>
    %975 = stablehlo.add %970, %974 : tensor<bf16>
    %976 = stablehlo.multiply %934, %934 : tensor<768xbf16>
    %977 = stablehlo.convert %976 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %978 = stablehlo.reduce(%977 init: %cst_300) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %979 = stablehlo.convert %978 : (tensor<f32>) -> tensor<bf16>
    %980 = stablehlo.add %975, %979 : tensor<bf16>
    %981 = stablehlo.multiply %928, %928 : tensor<768xbf16>
    %982 = stablehlo.convert %981 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %983 = stablehlo.reduce(%982 init: %cst_301) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %984 = stablehlo.convert %983 : (tensor<f32>) -> tensor<bf16>
    %985 = stablehlo.add %980, %984 : tensor<bf16>
    %986 = stablehlo.multiply %921, %921 : tensor<768x768xbf16>
    %987 = stablehlo.convert %986 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %988 = stablehlo.reduce(%987 init: %cst_302) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %989 = stablehlo.convert %988 : (tensor<f32>) -> tensor<bf16>
    %990 = stablehlo.add %985, %989 : tensor<bf16>
    %991 = stablehlo.multiply %897, %897 : tensor<768xbf16>
    %992 = stablehlo.convert %991 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %993 = stablehlo.reduce(%992 init: %cst_303) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %994 = stablehlo.convert %993 : (tensor<f32>) -> tensor<bf16>
    %995 = stablehlo.add %990, %994 : tensor<bf16>
    %996 = stablehlo.multiply %873, %873 : tensor<768x768xbf16>
    %997 = stablehlo.convert %996 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %998 = stablehlo.reduce(%997 init: %cst_304) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %999 = stablehlo.convert %998 : (tensor<f32>) -> tensor<bf16>
    %1000 = stablehlo.add %995, %999 : tensor<bf16>
    %1001 = stablehlo.multiply %849, %849 : tensor<768xbf16>
    %1002 = stablehlo.convert %1001 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1003 = stablehlo.reduce(%1002 init: %cst_305) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1004 = stablehlo.convert %1003 : (tensor<f32>) -> tensor<bf16>
    %1005 = stablehlo.add %1000, %1004 : tensor<bf16>
    %1006 = stablehlo.multiply %825, %825 : tensor<768x768xbf16>
    %1007 = stablehlo.convert %1006 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1008 = stablehlo.reduce(%1007 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1009 = stablehlo.convert %1008 : (tensor<f32>) -> tensor<bf16>
    %1010 = stablehlo.add %1005, %1009 : tensor<bf16>
    %1011 = stablehlo.multiply %801, %801 : tensor<768xbf16>
    %1012 = stablehlo.convert %1011 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1013 = stablehlo.reduce(%1012 init: %cst_307) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1014 = stablehlo.convert %1013 : (tensor<f32>) -> tensor<bf16>
    %1015 = stablehlo.add %1010, %1014 : tensor<bf16>
    %1016 = stablehlo.multiply %777, %777 : tensor<768x768xbf16>
    %1017 = stablehlo.convert %1016 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1018 = stablehlo.reduce(%1017 init: %cst_308) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1019 = stablehlo.convert %1018 : (tensor<f32>) -> tensor<bf16>
    %1020 = stablehlo.add %1015, %1019 : tensor<bf16>
    %1021 = stablehlo.multiply %753, %753 : tensor<768xbf16>
    %1022 = stablehlo.convert %1021 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1023 = stablehlo.reduce(%1022 init: %cst_309) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1024 = stablehlo.convert %1023 : (tensor<f32>) -> tensor<bf16>
    %1025 = stablehlo.add %1020, %1024 : tensor<bf16>
    %1026 = stablehlo.multiply %729, %729 : tensor<768xbf16>
    %1027 = stablehlo.convert %1026 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1028 = stablehlo.reduce(%1027 init: %cst_310) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1029 = stablehlo.convert %1028 : (tensor<f32>) -> tensor<bf16>
    %1030 = stablehlo.add %1025, %1029 : tensor<bf16>
    %1031 = stablehlo.multiply %705, %705 : tensor<768xbf16>
    %1032 = stablehlo.convert %1031 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1033 = stablehlo.reduce(%1032 init: %cst_311) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1034 = stablehlo.convert %1033 : (tensor<f32>) -> tensor<bf16>
    %1035 = stablehlo.add %1030, %1034 : tensor<bf16>
    %1036 = stablehlo.multiply %681, %681 : tensor<3072x768xbf16>
    %1037 = stablehlo.convert %1036 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1038 = stablehlo.reduce(%1037 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1039 = stablehlo.convert %1038 : (tensor<f32>) -> tensor<bf16>
    %1040 = stablehlo.add %1035, %1039 : tensor<bf16>
    %1041 = stablehlo.multiply %657, %657 : tensor<3072xbf16>
    %1042 = stablehlo.convert %1041 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1043 = stablehlo.reduce(%1042 init: %cst_313) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1044 = stablehlo.convert %1043 : (tensor<f32>) -> tensor<bf16>
    %1045 = stablehlo.add %1040, %1044 : tensor<bf16>
    %1046 = stablehlo.multiply %633, %633 : tensor<768x3072xbf16>
    %1047 = stablehlo.convert %1046 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1048 = stablehlo.reduce(%1047 init: %cst_314) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1049 = stablehlo.convert %1048 : (tensor<f32>) -> tensor<bf16>
    %1050 = stablehlo.add %1045, %1049 : tensor<bf16>
    %1051 = stablehlo.multiply %609, %609 : tensor<768xbf16>
    %1052 = stablehlo.convert %1051 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1053 = stablehlo.reduce(%1052 init: %cst_315) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1054 = stablehlo.convert %1053 : (tensor<f32>) -> tensor<bf16>
    %1055 = stablehlo.add %1050, %1054 : tensor<bf16>
    %1056 = stablehlo.multiply %585, %585 : tensor<768xbf16>
    %1057 = stablehlo.convert %1056 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1058 = stablehlo.reduce(%1057 init: %cst_316) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1059 = stablehlo.convert %1058 : (tensor<f32>) -> tensor<bf16>
    %1060 = stablehlo.add %1055, %1059 : tensor<bf16>
    %1061 = stablehlo.multiply %561, %561 : tensor<768xbf16>
    %1062 = stablehlo.convert %1061 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1063 = stablehlo.reduce(%1062 init: %cst_317) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1064 = stablehlo.convert %1063 : (tensor<f32>) -> tensor<bf16>
    %1065 = stablehlo.add %1060, %1064 : tensor<bf16>
    %1066 = stablehlo.multiply %920, %920 : tensor<768x768xbf16>
    %1067 = stablehlo.convert %1066 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1068 = stablehlo.reduce(%1067 init: %cst_318) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1069 = stablehlo.convert %1068 : (tensor<f32>) -> tensor<bf16>
    %1070 = stablehlo.add %1065, %1069 : tensor<bf16>
    %1071 = stablehlo.multiply %896, %896 : tensor<768xbf16>
    %1072 = stablehlo.convert %1071 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1073 = stablehlo.reduce(%1072 init: %cst_319) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1074 = stablehlo.convert %1073 : (tensor<f32>) -> tensor<bf16>
    %1075 = stablehlo.add %1070, %1074 : tensor<bf16>
    %1076 = stablehlo.multiply %872, %872 : tensor<768x768xbf16>
    %1077 = stablehlo.convert %1076 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1078 = stablehlo.reduce(%1077 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1079 = stablehlo.convert %1078 : (tensor<f32>) -> tensor<bf16>
    %1080 = stablehlo.add %1075, %1079 : tensor<bf16>
    %1081 = stablehlo.multiply %848, %848 : tensor<768xbf16>
    %1082 = stablehlo.convert %1081 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1083 = stablehlo.reduce(%1082 init: %cst_321) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1084 = stablehlo.convert %1083 : (tensor<f32>) -> tensor<bf16>
    %1085 = stablehlo.add %1080, %1084 : tensor<bf16>
    %1086 = stablehlo.multiply %824, %824 : tensor<768x768xbf16>
    %1087 = stablehlo.convert %1086 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1088 = stablehlo.reduce(%1087 init: %cst_322) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1089 = stablehlo.convert %1088 : (tensor<f32>) -> tensor<bf16>
    %1090 = stablehlo.add %1085, %1089 : tensor<bf16>
    %1091 = stablehlo.multiply %800, %800 : tensor<768xbf16>
    %1092 = stablehlo.convert %1091 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1093 = stablehlo.reduce(%1092 init: %cst_323) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1094 = stablehlo.convert %1093 : (tensor<f32>) -> tensor<bf16>
    %1095 = stablehlo.add %1090, %1094 : tensor<bf16>
    %1096 = stablehlo.multiply %776, %776 : tensor<768x768xbf16>
    %1097 = stablehlo.convert %1096 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1098 = stablehlo.reduce(%1097 init: %cst_324) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1099 = stablehlo.convert %1098 : (tensor<f32>) -> tensor<bf16>
    %1100 = stablehlo.add %1095, %1099 : tensor<bf16>
    %1101 = stablehlo.multiply %752, %752 : tensor<768xbf16>
    %1102 = stablehlo.convert %1101 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1103 = stablehlo.reduce(%1102 init: %cst_325) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1104 = stablehlo.convert %1103 : (tensor<f32>) -> tensor<bf16>
    %1105 = stablehlo.add %1100, %1104 : tensor<bf16>
    %1106 = stablehlo.multiply %728, %728 : tensor<768xbf16>
    %1107 = stablehlo.convert %1106 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1108 = stablehlo.reduce(%1107 init: %cst_326) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1109 = stablehlo.convert %1108 : (tensor<f32>) -> tensor<bf16>
    %1110 = stablehlo.add %1105, %1109 : tensor<bf16>
    %1111 = stablehlo.multiply %704, %704 : tensor<768xbf16>
    %1112 = stablehlo.convert %1111 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1113 = stablehlo.reduce(%1112 init: %cst_327) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1114 = stablehlo.convert %1113 : (tensor<f32>) -> tensor<bf16>
    %1115 = stablehlo.add %1110, %1114 : tensor<bf16>
    %1116 = stablehlo.multiply %680, %680 : tensor<3072x768xbf16>
    %1117 = stablehlo.convert %1116 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1118 = stablehlo.reduce(%1117 init: %cst_328) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1119 = stablehlo.convert %1118 : (tensor<f32>) -> tensor<bf16>
    %1120 = stablehlo.add %1115, %1119 : tensor<bf16>
    %1121 = stablehlo.multiply %656, %656 : tensor<3072xbf16>
    %1122 = stablehlo.convert %1121 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1123 = stablehlo.reduce(%1122 init: %cst_329) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1124 = stablehlo.convert %1123 : (tensor<f32>) -> tensor<bf16>
    %1125 = stablehlo.add %1120, %1124 : tensor<bf16>
    %1126 = stablehlo.multiply %632, %632 : tensor<768x3072xbf16>
    %1127 = stablehlo.convert %1126 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1128 = stablehlo.reduce(%1127 init: %cst_330) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1129 = stablehlo.convert %1128 : (tensor<f32>) -> tensor<bf16>
    %1130 = stablehlo.add %1125, %1129 : tensor<bf16>
    %1131 = stablehlo.multiply %608, %608 : tensor<768xbf16>
    %1132 = stablehlo.convert %1131 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1133 = stablehlo.reduce(%1132 init: %cst_331) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1134 = stablehlo.convert %1133 : (tensor<f32>) -> tensor<bf16>
    %1135 = stablehlo.add %1130, %1134 : tensor<bf16>
    %1136 = stablehlo.multiply %584, %584 : tensor<768xbf16>
    %1137 = stablehlo.convert %1136 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1138 = stablehlo.reduce(%1137 init: %cst_332) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1139 = stablehlo.convert %1138 : (tensor<f32>) -> tensor<bf16>
    %1140 = stablehlo.add %1135, %1139 : tensor<bf16>
    %1141 = stablehlo.multiply %560, %560 : tensor<768xbf16>
    %1142 = stablehlo.convert %1141 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1143 = stablehlo.reduce(%1142 init: %cst_333) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1144 = stablehlo.convert %1143 : (tensor<f32>) -> tensor<bf16>
    %1145 = stablehlo.add %1140, %1144 : tensor<bf16>
    %1146 = stablehlo.multiply %919, %919 : tensor<768x768xbf16>
    %1147 = stablehlo.convert %1146 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1148 = stablehlo.reduce(%1147 init: %cst_334) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1149 = stablehlo.convert %1148 : (tensor<f32>) -> tensor<bf16>
    %1150 = stablehlo.add %1145, %1149 : tensor<bf16>
    %1151 = stablehlo.multiply %895, %895 : tensor<768xbf16>
    %1152 = stablehlo.convert %1151 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1153 = stablehlo.reduce(%1152 init: %cst_335) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1154 = stablehlo.convert %1153 : (tensor<f32>) -> tensor<bf16>
    %1155 = stablehlo.add %1150, %1154 : tensor<bf16>
    %1156 = stablehlo.multiply %871, %871 : tensor<768x768xbf16>
    %1157 = stablehlo.convert %1156 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1158 = stablehlo.reduce(%1157 init: %cst_336) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1159 = stablehlo.convert %1158 : (tensor<f32>) -> tensor<bf16>
    %1160 = stablehlo.add %1155, %1159 : tensor<bf16>
    %1161 = stablehlo.multiply %847, %847 : tensor<768xbf16>
    %1162 = stablehlo.convert %1161 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1163 = stablehlo.reduce(%1162 init: %cst_337) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1164 = stablehlo.convert %1163 : (tensor<f32>) -> tensor<bf16>
    %1165 = stablehlo.add %1160, %1164 : tensor<bf16>
    %1166 = stablehlo.multiply %823, %823 : tensor<768x768xbf16>
    %1167 = stablehlo.convert %1166 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1168 = stablehlo.reduce(%1167 init: %cst_338) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1169 = stablehlo.convert %1168 : (tensor<f32>) -> tensor<bf16>
    %1170 = stablehlo.add %1165, %1169 : tensor<bf16>
    %1171 = stablehlo.multiply %799, %799 : tensor<768xbf16>
    %1172 = stablehlo.convert %1171 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1173 = stablehlo.reduce(%1172 init: %cst_339) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1174 = stablehlo.convert %1173 : (tensor<f32>) -> tensor<bf16>
    %1175 = stablehlo.add %1170, %1174 : tensor<bf16>
    %1176 = stablehlo.multiply %775, %775 : tensor<768x768xbf16>
    %1177 = stablehlo.convert %1176 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1178 = stablehlo.reduce(%1177 init: %cst_340) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1179 = stablehlo.convert %1178 : (tensor<f32>) -> tensor<bf16>
    %1180 = stablehlo.add %1175, %1179 : tensor<bf16>
    %1181 = stablehlo.multiply %751, %751 : tensor<768xbf16>
    %1182 = stablehlo.convert %1181 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1183 = stablehlo.reduce(%1182 init: %cst_341) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1184 = stablehlo.convert %1183 : (tensor<f32>) -> tensor<bf16>
    %1185 = stablehlo.add %1180, %1184 : tensor<bf16>
    %1186 = stablehlo.multiply %727, %727 : tensor<768xbf16>
    %1187 = stablehlo.convert %1186 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1188 = stablehlo.reduce(%1187 init: %cst_342) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1189 = stablehlo.convert %1188 : (tensor<f32>) -> tensor<bf16>
    %1190 = stablehlo.add %1185, %1189 : tensor<bf16>
    %1191 = stablehlo.multiply %703, %703 : tensor<768xbf16>
    %1192 = stablehlo.convert %1191 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1193 = stablehlo.reduce(%1192 init: %cst_343) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1194 = stablehlo.convert %1193 : (tensor<f32>) -> tensor<bf16>
    %1195 = stablehlo.add %1190, %1194 : tensor<bf16>
    %1196 = stablehlo.multiply %679, %679 : tensor<3072x768xbf16>
    %1197 = stablehlo.convert %1196 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1198 = stablehlo.reduce(%1197 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1199 = stablehlo.convert %1198 : (tensor<f32>) -> tensor<bf16>
    %1200 = stablehlo.add %1195, %1199 : tensor<bf16>
    %1201 = stablehlo.multiply %655, %655 : tensor<3072xbf16>
    %1202 = stablehlo.convert %1201 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1203 = stablehlo.reduce(%1202 init: %cst_345) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1204 = stablehlo.convert %1203 : (tensor<f32>) -> tensor<bf16>
    %1205 = stablehlo.add %1200, %1204 : tensor<bf16>
    %1206 = stablehlo.multiply %631, %631 : tensor<768x3072xbf16>
    %1207 = stablehlo.convert %1206 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1208 = stablehlo.reduce(%1207 init: %cst_346) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1209 = stablehlo.convert %1208 : (tensor<f32>) -> tensor<bf16>
    %1210 = stablehlo.add %1205, %1209 : tensor<bf16>
    %1211 = stablehlo.multiply %607, %607 : tensor<768xbf16>
    %1212 = stablehlo.convert %1211 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1213 = stablehlo.reduce(%1212 init: %cst_347) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1214 = stablehlo.convert %1213 : (tensor<f32>) -> tensor<bf16>
    %1215 = stablehlo.add %1210, %1214 : tensor<bf16>
    %1216 = stablehlo.multiply %583, %583 : tensor<768xbf16>
    %1217 = stablehlo.convert %1216 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1218 = stablehlo.reduce(%1217 init: %cst_348) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1219 = stablehlo.convert %1218 : (tensor<f32>) -> tensor<bf16>
    %1220 = stablehlo.add %1215, %1219 : tensor<bf16>
    %1221 = stablehlo.multiply %559, %559 : tensor<768xbf16>
    %1222 = stablehlo.convert %1221 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1223 = stablehlo.reduce(%1222 init: %cst_349) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1224 = stablehlo.convert %1223 : (tensor<f32>) -> tensor<bf16>
    %1225 = stablehlo.add %1220, %1224 : tensor<bf16>
    %1226 = stablehlo.multiply %918, %918 : tensor<768x768xbf16>
    %1227 = stablehlo.convert %1226 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1228 = stablehlo.reduce(%1227 init: %cst_350) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1229 = stablehlo.convert %1228 : (tensor<f32>) -> tensor<bf16>
    %1230 = stablehlo.add %1225, %1229 : tensor<bf16>
    %1231 = stablehlo.multiply %894, %894 : tensor<768xbf16>
    %1232 = stablehlo.convert %1231 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1233 = stablehlo.reduce(%1232 init: %cst_351) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1234 = stablehlo.convert %1233 : (tensor<f32>) -> tensor<bf16>
    %1235 = stablehlo.add %1230, %1234 : tensor<bf16>
    %1236 = stablehlo.multiply %870, %870 : tensor<768x768xbf16>
    %1237 = stablehlo.convert %1236 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1238 = stablehlo.reduce(%1237 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1239 = stablehlo.convert %1238 : (tensor<f32>) -> tensor<bf16>
    %1240 = stablehlo.add %1235, %1239 : tensor<bf16>
    %1241 = stablehlo.multiply %846, %846 : tensor<768xbf16>
    %1242 = stablehlo.convert %1241 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1243 = stablehlo.reduce(%1242 init: %cst_353) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1244 = stablehlo.convert %1243 : (tensor<f32>) -> tensor<bf16>
    %1245 = stablehlo.add %1240, %1244 : tensor<bf16>
    %1246 = stablehlo.multiply %822, %822 : tensor<768x768xbf16>
    %1247 = stablehlo.convert %1246 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1248 = stablehlo.reduce(%1247 init: %cst_354) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1249 = stablehlo.convert %1248 : (tensor<f32>) -> tensor<bf16>
    %1250 = stablehlo.add %1245, %1249 : tensor<bf16>
    %1251 = stablehlo.multiply %798, %798 : tensor<768xbf16>
    %1252 = stablehlo.convert %1251 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1253 = stablehlo.reduce(%1252 init: %cst_355) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1254 = stablehlo.convert %1253 : (tensor<f32>) -> tensor<bf16>
    %1255 = stablehlo.add %1250, %1254 : tensor<bf16>
    %1256 = stablehlo.multiply %774, %774 : tensor<768x768xbf16>
    %1257 = stablehlo.convert %1256 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1258 = stablehlo.reduce(%1257 init: %cst_356) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1259 = stablehlo.convert %1258 : (tensor<f32>) -> tensor<bf16>
    %1260 = stablehlo.add %1255, %1259 : tensor<bf16>
    %1261 = stablehlo.multiply %750, %750 : tensor<768xbf16>
    %1262 = stablehlo.convert %1261 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1263 = stablehlo.reduce(%1262 init: %cst_357) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1264 = stablehlo.convert %1263 : (tensor<f32>) -> tensor<bf16>
    %1265 = stablehlo.add %1260, %1264 : tensor<bf16>
    %1266 = stablehlo.multiply %726, %726 : tensor<768xbf16>
    %1267 = stablehlo.convert %1266 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1268 = stablehlo.reduce(%1267 init: %cst_358) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1269 = stablehlo.convert %1268 : (tensor<f32>) -> tensor<bf16>
    %1270 = stablehlo.add %1265, %1269 : tensor<bf16>
    %1271 = stablehlo.multiply %702, %702 : tensor<768xbf16>
    %1272 = stablehlo.convert %1271 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1273 = stablehlo.reduce(%1272 init: %cst_359) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1274 = stablehlo.convert %1273 : (tensor<f32>) -> tensor<bf16>
    %1275 = stablehlo.add %1270, %1274 : tensor<bf16>
    %1276 = stablehlo.multiply %678, %678 : tensor<3072x768xbf16>
    %1277 = stablehlo.convert %1276 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1278 = stablehlo.reduce(%1277 init: %cst_360) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1279 = stablehlo.convert %1278 : (tensor<f32>) -> tensor<bf16>
    %1280 = stablehlo.add %1275, %1279 : tensor<bf16>
    %1281 = stablehlo.multiply %654, %654 : tensor<3072xbf16>
    %1282 = stablehlo.convert %1281 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1283 = stablehlo.reduce(%1282 init: %cst_361) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1284 = stablehlo.convert %1283 : (tensor<f32>) -> tensor<bf16>
    %1285 = stablehlo.add %1280, %1284 : tensor<bf16>
    %1286 = stablehlo.multiply %630, %630 : tensor<768x3072xbf16>
    %1287 = stablehlo.convert %1286 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1288 = stablehlo.reduce(%1287 init: %cst_362) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1289 = stablehlo.convert %1288 : (tensor<f32>) -> tensor<bf16>
    %1290 = stablehlo.add %1285, %1289 : tensor<bf16>
    %1291 = stablehlo.multiply %606, %606 : tensor<768xbf16>
    %1292 = stablehlo.convert %1291 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1293 = stablehlo.reduce(%1292 init: %cst_363) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1294 = stablehlo.convert %1293 : (tensor<f32>) -> tensor<bf16>
    %1295 = stablehlo.add %1290, %1294 : tensor<bf16>
    %1296 = stablehlo.multiply %582, %582 : tensor<768xbf16>
    %1297 = stablehlo.convert %1296 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1298 = stablehlo.reduce(%1297 init: %cst_364) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1299 = stablehlo.convert %1298 : (tensor<f32>) -> tensor<bf16>
    %1300 = stablehlo.add %1295, %1299 : tensor<bf16>
    %1301 = stablehlo.multiply %558, %558 : tensor<768xbf16>
    %1302 = stablehlo.convert %1301 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1303 = stablehlo.reduce(%1302 init: %cst_365) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1304 = stablehlo.convert %1303 : (tensor<f32>) -> tensor<bf16>
    %1305 = stablehlo.add %1300, %1304 : tensor<bf16>
    %1306 = stablehlo.multiply %917, %917 : tensor<768x768xbf16>
    %1307 = stablehlo.convert %1306 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1308 = stablehlo.reduce(%1307 init: %cst_366) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1309 = stablehlo.convert %1308 : (tensor<f32>) -> tensor<bf16>
    %1310 = stablehlo.add %1305, %1309 : tensor<bf16>
    %1311 = stablehlo.multiply %893, %893 : tensor<768xbf16>
    %1312 = stablehlo.convert %1311 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1313 = stablehlo.reduce(%1312 init: %cst_367) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1314 = stablehlo.convert %1313 : (tensor<f32>) -> tensor<bf16>
    %1315 = stablehlo.add %1310, %1314 : tensor<bf16>
    %1316 = stablehlo.multiply %869, %869 : tensor<768x768xbf16>
    %1317 = stablehlo.convert %1316 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1318 = stablehlo.reduce(%1317 init: %cst_368) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1319 = stablehlo.convert %1318 : (tensor<f32>) -> tensor<bf16>
    %1320 = stablehlo.add %1315, %1319 : tensor<bf16>
    %1321 = stablehlo.multiply %845, %845 : tensor<768xbf16>
    %1322 = stablehlo.convert %1321 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1323 = stablehlo.reduce(%1322 init: %cst_369) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1324 = stablehlo.convert %1323 : (tensor<f32>) -> tensor<bf16>
    %1325 = stablehlo.add %1320, %1324 : tensor<bf16>
    %1326 = stablehlo.multiply %821, %821 : tensor<768x768xbf16>
    %1327 = stablehlo.convert %1326 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1328 = stablehlo.reduce(%1327 init: %cst_370) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1329 = stablehlo.convert %1328 : (tensor<f32>) -> tensor<bf16>
    %1330 = stablehlo.add %1325, %1329 : tensor<bf16>
    %1331 = stablehlo.multiply %797, %797 : tensor<768xbf16>
    %1332 = stablehlo.convert %1331 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1333 = stablehlo.reduce(%1332 init: %cst_371) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1334 = stablehlo.convert %1333 : (tensor<f32>) -> tensor<bf16>
    %1335 = stablehlo.add %1330, %1334 : tensor<bf16>
    %1336 = stablehlo.multiply %773, %773 : tensor<768x768xbf16>
    %1337 = stablehlo.convert %1336 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1338 = stablehlo.reduce(%1337 init: %cst_372) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1339 = stablehlo.convert %1338 : (tensor<f32>) -> tensor<bf16>
    %1340 = stablehlo.add %1335, %1339 : tensor<bf16>
    %1341 = stablehlo.multiply %749, %749 : tensor<768xbf16>
    %1342 = stablehlo.convert %1341 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1343 = stablehlo.reduce(%1342 init: %cst_373) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1344 = stablehlo.convert %1343 : (tensor<f32>) -> tensor<bf16>
    %1345 = stablehlo.add %1340, %1344 : tensor<bf16>
    %1346 = stablehlo.multiply %725, %725 : tensor<768xbf16>
    %1347 = stablehlo.convert %1346 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1348 = stablehlo.reduce(%1347 init: %cst_374) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1349 = stablehlo.convert %1348 : (tensor<f32>) -> tensor<bf16>
    %1350 = stablehlo.add %1345, %1349 : tensor<bf16>
    %1351 = stablehlo.multiply %701, %701 : tensor<768xbf16>
    %1352 = stablehlo.convert %1351 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1353 = stablehlo.reduce(%1352 init: %cst_375) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1354 = stablehlo.convert %1353 : (tensor<f32>) -> tensor<bf16>
    %1355 = stablehlo.add %1350, %1354 : tensor<bf16>
    %1356 = stablehlo.multiply %677, %677 : tensor<3072x768xbf16>
    %1357 = stablehlo.convert %1356 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1358 = stablehlo.reduce(%1357 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1359 = stablehlo.convert %1358 : (tensor<f32>) -> tensor<bf16>
    %1360 = stablehlo.add %1355, %1359 : tensor<bf16>
    %1361 = stablehlo.multiply %653, %653 : tensor<3072xbf16>
    %1362 = stablehlo.convert %1361 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1363 = stablehlo.reduce(%1362 init: %cst_377) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1364 = stablehlo.convert %1363 : (tensor<f32>) -> tensor<bf16>
    %1365 = stablehlo.add %1360, %1364 : tensor<bf16>
    %1366 = stablehlo.multiply %629, %629 : tensor<768x3072xbf16>
    %1367 = stablehlo.convert %1366 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1368 = stablehlo.reduce(%1367 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1369 = stablehlo.convert %1368 : (tensor<f32>) -> tensor<bf16>
    %1370 = stablehlo.add %1365, %1369 : tensor<bf16>
    %1371 = stablehlo.multiply %605, %605 : tensor<768xbf16>
    %1372 = stablehlo.convert %1371 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1373 = stablehlo.reduce(%1372 init: %cst_379) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1374 = stablehlo.convert %1373 : (tensor<f32>) -> tensor<bf16>
    %1375 = stablehlo.add %1370, %1374 : tensor<bf16>
    %1376 = stablehlo.multiply %581, %581 : tensor<768xbf16>
    %1377 = stablehlo.convert %1376 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1378 = stablehlo.reduce(%1377 init: %cst_380) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1379 = stablehlo.convert %1378 : (tensor<f32>) -> tensor<bf16>
    %1380 = stablehlo.add %1375, %1379 : tensor<bf16>
    %1381 = stablehlo.multiply %557, %557 : tensor<768xbf16>
    %1382 = stablehlo.convert %1381 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1383 = stablehlo.reduce(%1382 init: %cst_381) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1384 = stablehlo.convert %1383 : (tensor<f32>) -> tensor<bf16>
    %1385 = stablehlo.add %1380, %1384 : tensor<bf16>
    %1386 = stablehlo.multiply %916, %916 : tensor<768x768xbf16>
    %1387 = stablehlo.convert %1386 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1388 = stablehlo.reduce(%1387 init: %cst_382) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1389 = stablehlo.convert %1388 : (tensor<f32>) -> tensor<bf16>
    %1390 = stablehlo.add %1385, %1389 : tensor<bf16>
    %1391 = stablehlo.multiply %892, %892 : tensor<768xbf16>
    %1392 = stablehlo.convert %1391 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1393 = stablehlo.reduce(%1392 init: %cst_383) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1394 = stablehlo.convert %1393 : (tensor<f32>) -> tensor<bf16>
    %1395 = stablehlo.add %1390, %1394 : tensor<bf16>
    %1396 = stablehlo.multiply %868, %868 : tensor<768x768xbf16>
    %1397 = stablehlo.convert %1396 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1398 = stablehlo.reduce(%1397 init: %cst_384) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1399 = stablehlo.convert %1398 : (tensor<f32>) -> tensor<bf16>
    %1400 = stablehlo.add %1395, %1399 : tensor<bf16>
    %1401 = stablehlo.multiply %844, %844 : tensor<768xbf16>
    %1402 = stablehlo.convert %1401 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1403 = stablehlo.reduce(%1402 init: %cst_385) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1404 = stablehlo.convert %1403 : (tensor<f32>) -> tensor<bf16>
    %1405 = stablehlo.add %1400, %1404 : tensor<bf16>
    %1406 = stablehlo.multiply %820, %820 : tensor<768x768xbf16>
    %1407 = stablehlo.convert %1406 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1408 = stablehlo.reduce(%1407 init: %cst_386) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1409 = stablehlo.convert %1408 : (tensor<f32>) -> tensor<bf16>
    %1410 = stablehlo.add %1405, %1409 : tensor<bf16>
    %1411 = stablehlo.multiply %796, %796 : tensor<768xbf16>
    %1412 = stablehlo.convert %1411 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1413 = stablehlo.reduce(%1412 init: %cst_387) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1414 = stablehlo.convert %1413 : (tensor<f32>) -> tensor<bf16>
    %1415 = stablehlo.add %1410, %1414 : tensor<bf16>
    %1416 = stablehlo.multiply %772, %772 : tensor<768x768xbf16>
    %1417 = stablehlo.convert %1416 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1418 = stablehlo.reduce(%1417 init: %cst_388) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1419 = stablehlo.convert %1418 : (tensor<f32>) -> tensor<bf16>
    %1420 = stablehlo.add %1415, %1419 : tensor<bf16>
    %1421 = stablehlo.multiply %748, %748 : tensor<768xbf16>
    %1422 = stablehlo.convert %1421 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1423 = stablehlo.reduce(%1422 init: %cst_389) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1424 = stablehlo.convert %1423 : (tensor<f32>) -> tensor<bf16>
    %1425 = stablehlo.add %1420, %1424 : tensor<bf16>
    %1426 = stablehlo.multiply %724, %724 : tensor<768xbf16>
    %1427 = stablehlo.convert %1426 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1428 = stablehlo.reduce(%1427 init: %cst_390) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1429 = stablehlo.convert %1428 : (tensor<f32>) -> tensor<bf16>
    %1430 = stablehlo.add %1425, %1429 : tensor<bf16>
    %1431 = stablehlo.multiply %700, %700 : tensor<768xbf16>
    %1432 = stablehlo.convert %1431 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1433 = stablehlo.reduce(%1432 init: %cst_391) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1434 = stablehlo.convert %1433 : (tensor<f32>) -> tensor<bf16>
    %1435 = stablehlo.add %1430, %1434 : tensor<bf16>
    %1436 = stablehlo.multiply %676, %676 : tensor<3072x768xbf16>
    %1437 = stablehlo.convert %1436 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1438 = stablehlo.reduce(%1437 init: %cst_392) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1439 = stablehlo.convert %1438 : (tensor<f32>) -> tensor<bf16>
    %1440 = stablehlo.add %1435, %1439 : tensor<bf16>
    %1441 = stablehlo.multiply %652, %652 : tensor<3072xbf16>
    %1442 = stablehlo.convert %1441 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1443 = stablehlo.reduce(%1442 init: %cst_393) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1444 = stablehlo.convert %1443 : (tensor<f32>) -> tensor<bf16>
    %1445 = stablehlo.add %1440, %1444 : tensor<bf16>
    %1446 = stablehlo.multiply %628, %628 : tensor<768x3072xbf16>
    %1447 = stablehlo.convert %1446 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1448 = stablehlo.reduce(%1447 init: %cst_394) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1449 = stablehlo.convert %1448 : (tensor<f32>) -> tensor<bf16>
    %1450 = stablehlo.add %1445, %1449 : tensor<bf16>
    %1451 = stablehlo.multiply %604, %604 : tensor<768xbf16>
    %1452 = stablehlo.convert %1451 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1453 = stablehlo.reduce(%1452 init: %cst_395) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1454 = stablehlo.convert %1453 : (tensor<f32>) -> tensor<bf16>
    %1455 = stablehlo.add %1450, %1454 : tensor<bf16>
    %1456 = stablehlo.multiply %580, %580 : tensor<768xbf16>
    %1457 = stablehlo.convert %1456 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1458 = stablehlo.reduce(%1457 init: %cst_396) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1459 = stablehlo.convert %1458 : (tensor<f32>) -> tensor<bf16>
    %1460 = stablehlo.add %1455, %1459 : tensor<bf16>
    %1461 = stablehlo.multiply %556, %556 : tensor<768xbf16>
    %1462 = stablehlo.convert %1461 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1463 = stablehlo.reduce(%1462 init: %cst_397) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1464 = stablehlo.convert %1463 : (tensor<f32>) -> tensor<bf16>
    %1465 = stablehlo.add %1460, %1464 : tensor<bf16>
    %1466 = stablehlo.multiply %915, %915 : tensor<768x768xbf16>
    %1467 = stablehlo.convert %1466 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1468 = stablehlo.reduce(%1467 init: %cst_398) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1469 = stablehlo.convert %1468 : (tensor<f32>) -> tensor<bf16>
    %1470 = stablehlo.add %1465, %1469 : tensor<bf16>
    %1471 = stablehlo.multiply %891, %891 : tensor<768xbf16>
    %1472 = stablehlo.convert %1471 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1473 = stablehlo.reduce(%1472 init: %cst_399) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1474 = stablehlo.convert %1473 : (tensor<f32>) -> tensor<bf16>
    %1475 = stablehlo.add %1470, %1474 : tensor<bf16>
    %1476 = stablehlo.multiply %867, %867 : tensor<768x768xbf16>
    %1477 = stablehlo.convert %1476 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1478 = stablehlo.reduce(%1477 init: %cst_400) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1479 = stablehlo.convert %1478 : (tensor<f32>) -> tensor<bf16>
    %1480 = stablehlo.add %1475, %1479 : tensor<bf16>
    %1481 = stablehlo.multiply %843, %843 : tensor<768xbf16>
    %1482 = stablehlo.convert %1481 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1483 = stablehlo.reduce(%1482 init: %cst_401) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1484 = stablehlo.convert %1483 : (tensor<f32>) -> tensor<bf16>
    %1485 = stablehlo.add %1480, %1484 : tensor<bf16>
    %1486 = stablehlo.multiply %819, %819 : tensor<768x768xbf16>
    %1487 = stablehlo.convert %1486 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1488 = stablehlo.reduce(%1487 init: %cst_402) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1489 = stablehlo.convert %1488 : (tensor<f32>) -> tensor<bf16>
    %1490 = stablehlo.add %1485, %1489 : tensor<bf16>
    %1491 = stablehlo.multiply %795, %795 : tensor<768xbf16>
    %1492 = stablehlo.convert %1491 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1493 = stablehlo.reduce(%1492 init: %cst_403) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1494 = stablehlo.convert %1493 : (tensor<f32>) -> tensor<bf16>
    %1495 = stablehlo.add %1490, %1494 : tensor<bf16>
    %1496 = stablehlo.multiply %771, %771 : tensor<768x768xbf16>
    %1497 = stablehlo.convert %1496 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1498 = stablehlo.reduce(%1497 init: %cst_404) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1499 = stablehlo.convert %1498 : (tensor<f32>) -> tensor<bf16>
    %1500 = stablehlo.add %1495, %1499 : tensor<bf16>
    %1501 = stablehlo.multiply %747, %747 : tensor<768xbf16>
    %1502 = stablehlo.convert %1501 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1503 = stablehlo.reduce(%1502 init: %cst_405) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1504 = stablehlo.convert %1503 : (tensor<f32>) -> tensor<bf16>
    %1505 = stablehlo.add %1500, %1504 : tensor<bf16>
    %1506 = stablehlo.multiply %723, %723 : tensor<768xbf16>
    %1507 = stablehlo.convert %1506 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1508 = stablehlo.reduce(%1507 init: %cst_406) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1509 = stablehlo.convert %1508 : (tensor<f32>) -> tensor<bf16>
    %1510 = stablehlo.add %1505, %1509 : tensor<bf16>
    %1511 = stablehlo.multiply %699, %699 : tensor<768xbf16>
    %1512 = stablehlo.convert %1511 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1513 = stablehlo.reduce(%1512 init: %cst_407) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1514 = stablehlo.convert %1513 : (tensor<f32>) -> tensor<bf16>
    %1515 = stablehlo.add %1510, %1514 : tensor<bf16>
    %1516 = stablehlo.multiply %675, %675 : tensor<3072x768xbf16>
    %1517 = stablehlo.convert %1516 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1518 = stablehlo.reduce(%1517 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1519 = stablehlo.convert %1518 : (tensor<f32>) -> tensor<bf16>
    %1520 = stablehlo.add %1515, %1519 : tensor<bf16>
    %1521 = stablehlo.multiply %651, %651 : tensor<3072xbf16>
    %1522 = stablehlo.convert %1521 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1523 = stablehlo.reduce(%1522 init: %cst_409) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1524 = stablehlo.convert %1523 : (tensor<f32>) -> tensor<bf16>
    %1525 = stablehlo.add %1520, %1524 : tensor<bf16>
    %1526 = stablehlo.multiply %627, %627 : tensor<768x3072xbf16>
    %1527 = stablehlo.convert %1526 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1528 = stablehlo.reduce(%1527 init: %cst_410) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1529 = stablehlo.convert %1528 : (tensor<f32>) -> tensor<bf16>
    %1530 = stablehlo.add %1525, %1529 : tensor<bf16>
    %1531 = stablehlo.multiply %603, %603 : tensor<768xbf16>
    %1532 = stablehlo.convert %1531 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1533 = stablehlo.reduce(%1532 init: %cst_411) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1534 = stablehlo.convert %1533 : (tensor<f32>) -> tensor<bf16>
    %1535 = stablehlo.add %1530, %1534 : tensor<bf16>
    %1536 = stablehlo.multiply %579, %579 : tensor<768xbf16>
    %1537 = stablehlo.convert %1536 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1538 = stablehlo.reduce(%1537 init: %cst_412) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1539 = stablehlo.convert %1538 : (tensor<f32>) -> tensor<bf16>
    %1540 = stablehlo.add %1535, %1539 : tensor<bf16>
    %1541 = stablehlo.multiply %555, %555 : tensor<768xbf16>
    %1542 = stablehlo.convert %1541 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1543 = stablehlo.reduce(%1542 init: %cst_413) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1544 = stablehlo.convert %1543 : (tensor<f32>) -> tensor<bf16>
    %1545 = stablehlo.add %1540, %1544 : tensor<bf16>
    %1546 = stablehlo.multiply %914, %914 : tensor<768x768xbf16>
    %1547 = stablehlo.convert %1546 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1548 = stablehlo.reduce(%1547 init: %cst_414) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1549 = stablehlo.convert %1548 : (tensor<f32>) -> tensor<bf16>
    %1550 = stablehlo.add %1545, %1549 : tensor<bf16>
    %1551 = stablehlo.multiply %890, %890 : tensor<768xbf16>
    %1552 = stablehlo.convert %1551 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1553 = stablehlo.reduce(%1552 init: %cst_415) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1554 = stablehlo.convert %1553 : (tensor<f32>) -> tensor<bf16>
    %1555 = stablehlo.add %1550, %1554 : tensor<bf16>
    %1556 = stablehlo.multiply %866, %866 : tensor<768x768xbf16>
    %1557 = stablehlo.convert %1556 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1558 = stablehlo.reduce(%1557 init: %cst_416) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1559 = stablehlo.convert %1558 : (tensor<f32>) -> tensor<bf16>
    %1560 = stablehlo.add %1555, %1559 : tensor<bf16>
    %1561 = stablehlo.multiply %842, %842 : tensor<768xbf16>
    %1562 = stablehlo.convert %1561 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1563 = stablehlo.reduce(%1562 init: %cst_417) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1564 = stablehlo.convert %1563 : (tensor<f32>) -> tensor<bf16>
    %1565 = stablehlo.add %1560, %1564 : tensor<bf16>
    %1566 = stablehlo.multiply %818, %818 : tensor<768x768xbf16>
    %1567 = stablehlo.convert %1566 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1568 = stablehlo.reduce(%1567 init: %cst_418) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1569 = stablehlo.convert %1568 : (tensor<f32>) -> tensor<bf16>
    %1570 = stablehlo.add %1565, %1569 : tensor<bf16>
    %1571 = stablehlo.multiply %794, %794 : tensor<768xbf16>
    %1572 = stablehlo.convert %1571 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1573 = stablehlo.reduce(%1572 init: %cst_419) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1574 = stablehlo.convert %1573 : (tensor<f32>) -> tensor<bf16>
    %1575 = stablehlo.add %1570, %1574 : tensor<bf16>
    %1576 = stablehlo.multiply %770, %770 : tensor<768x768xbf16>
    %1577 = stablehlo.convert %1576 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1578 = stablehlo.reduce(%1577 init: %cst_420) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1579 = stablehlo.convert %1578 : (tensor<f32>) -> tensor<bf16>
    %1580 = stablehlo.add %1575, %1579 : tensor<bf16>
    %1581 = stablehlo.multiply %746, %746 : tensor<768xbf16>
    %1582 = stablehlo.convert %1581 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1583 = stablehlo.reduce(%1582 init: %cst_421) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1584 = stablehlo.convert %1583 : (tensor<f32>) -> tensor<bf16>
    %1585 = stablehlo.add %1580, %1584 : tensor<bf16>
    %1586 = stablehlo.multiply %722, %722 : tensor<768xbf16>
    %1587 = stablehlo.convert %1586 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1588 = stablehlo.reduce(%1587 init: %cst_422) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1589 = stablehlo.convert %1588 : (tensor<f32>) -> tensor<bf16>
    %1590 = stablehlo.add %1585, %1589 : tensor<bf16>
    %1591 = stablehlo.multiply %698, %698 : tensor<768xbf16>
    %1592 = stablehlo.convert %1591 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1593 = stablehlo.reduce(%1592 init: %cst_423) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1594 = stablehlo.convert %1593 : (tensor<f32>) -> tensor<bf16>
    %1595 = stablehlo.add %1590, %1594 : tensor<bf16>
    %1596 = stablehlo.multiply %674, %674 : tensor<3072x768xbf16>
    %1597 = stablehlo.convert %1596 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1598 = stablehlo.reduce(%1597 init: %cst_424) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1599 = stablehlo.convert %1598 : (tensor<f32>) -> tensor<bf16>
    %1600 = stablehlo.add %1595, %1599 : tensor<bf16>
    %1601 = stablehlo.multiply %650, %650 : tensor<3072xbf16>
    %1602 = stablehlo.convert %1601 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1603 = stablehlo.reduce(%1602 init: %cst_425) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1604 = stablehlo.convert %1603 : (tensor<f32>) -> tensor<bf16>
    %1605 = stablehlo.add %1600, %1604 : tensor<bf16>
    %1606 = stablehlo.multiply %626, %626 : tensor<768x3072xbf16>
    %1607 = stablehlo.convert %1606 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1608 = stablehlo.reduce(%1607 init: %cst_426) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1609 = stablehlo.convert %1608 : (tensor<f32>) -> tensor<bf16>
    %1610 = stablehlo.add %1605, %1609 : tensor<bf16>
    %1611 = stablehlo.multiply %602, %602 : tensor<768xbf16>
    %1612 = stablehlo.convert %1611 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1613 = stablehlo.reduce(%1612 init: %cst_427) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1614 = stablehlo.convert %1613 : (tensor<f32>) -> tensor<bf16>
    %1615 = stablehlo.add %1610, %1614 : tensor<bf16>
    %1616 = stablehlo.multiply %578, %578 : tensor<768xbf16>
    %1617 = stablehlo.convert %1616 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1618 = stablehlo.reduce(%1617 init: %cst_428) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1619 = stablehlo.convert %1618 : (tensor<f32>) -> tensor<bf16>
    %1620 = stablehlo.add %1615, %1619 : tensor<bf16>
    %1621 = stablehlo.multiply %554, %554 : tensor<768xbf16>
    %1622 = stablehlo.convert %1621 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1623 = stablehlo.reduce(%1622 init: %cst_429) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1624 = stablehlo.convert %1623 : (tensor<f32>) -> tensor<bf16>
    %1625 = stablehlo.add %1620, %1624 : tensor<bf16>
    %1626 = stablehlo.multiply %913, %913 : tensor<768x768xbf16>
    %1627 = stablehlo.convert %1626 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1628 = stablehlo.reduce(%1627 init: %cst_430) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1629 = stablehlo.convert %1628 : (tensor<f32>) -> tensor<bf16>
    %1630 = stablehlo.add %1625, %1629 : tensor<bf16>
    %1631 = stablehlo.multiply %889, %889 : tensor<768xbf16>
    %1632 = stablehlo.convert %1631 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1633 = stablehlo.reduce(%1632 init: %cst_431) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1634 = stablehlo.convert %1633 : (tensor<f32>) -> tensor<bf16>
    %1635 = stablehlo.add %1630, %1634 : tensor<bf16>
    %1636 = stablehlo.multiply %865, %865 : tensor<768x768xbf16>
    %1637 = stablehlo.convert %1636 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1638 = stablehlo.reduce(%1637 init: %cst_432) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1639 = stablehlo.convert %1638 : (tensor<f32>) -> tensor<bf16>
    %1640 = stablehlo.add %1635, %1639 : tensor<bf16>
    %1641 = stablehlo.multiply %841, %841 : tensor<768xbf16>
    %1642 = stablehlo.convert %1641 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1643 = stablehlo.reduce(%1642 init: %cst_433) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1644 = stablehlo.convert %1643 : (tensor<f32>) -> tensor<bf16>
    %1645 = stablehlo.add %1640, %1644 : tensor<bf16>
    %1646 = stablehlo.multiply %817, %817 : tensor<768x768xbf16>
    %1647 = stablehlo.convert %1646 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1648 = stablehlo.reduce(%1647 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1649 = stablehlo.convert %1648 : (tensor<f32>) -> tensor<bf16>
    %1650 = stablehlo.add %1645, %1649 : tensor<bf16>
    %1651 = stablehlo.multiply %793, %793 : tensor<768xbf16>
    %1652 = stablehlo.convert %1651 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1653 = stablehlo.reduce(%1652 init: %cst_435) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1654 = stablehlo.convert %1653 : (tensor<f32>) -> tensor<bf16>
    %1655 = stablehlo.add %1650, %1654 : tensor<bf16>
    %1656 = stablehlo.multiply %769, %769 : tensor<768x768xbf16>
    %1657 = stablehlo.convert %1656 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1658 = stablehlo.reduce(%1657 init: %cst_436) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1659 = stablehlo.convert %1658 : (tensor<f32>) -> tensor<bf16>
    %1660 = stablehlo.add %1655, %1659 : tensor<bf16>
    %1661 = stablehlo.multiply %745, %745 : tensor<768xbf16>
    %1662 = stablehlo.convert %1661 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1663 = stablehlo.reduce(%1662 init: %cst_437) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1664 = stablehlo.convert %1663 : (tensor<f32>) -> tensor<bf16>
    %1665 = stablehlo.add %1660, %1664 : tensor<bf16>
    %1666 = stablehlo.multiply %721, %721 : tensor<768xbf16>
    %1667 = stablehlo.convert %1666 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1668 = stablehlo.reduce(%1667 init: %cst_438) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1669 = stablehlo.convert %1668 : (tensor<f32>) -> tensor<bf16>
    %1670 = stablehlo.add %1665, %1669 : tensor<bf16>
    %1671 = stablehlo.multiply %697, %697 : tensor<768xbf16>
    %1672 = stablehlo.convert %1671 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1673 = stablehlo.reduce(%1672 init: %cst_439) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1674 = stablehlo.convert %1673 : (tensor<f32>) -> tensor<bf16>
    %1675 = stablehlo.add %1670, %1674 : tensor<bf16>
    %1676 = stablehlo.multiply %673, %673 : tensor<3072x768xbf16>
    %1677 = stablehlo.convert %1676 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1678 = stablehlo.reduce(%1677 init: %cst_440) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1679 = stablehlo.convert %1678 : (tensor<f32>) -> tensor<bf16>
    %1680 = stablehlo.add %1675, %1679 : tensor<bf16>
    %1681 = stablehlo.multiply %649, %649 : tensor<3072xbf16>
    %1682 = stablehlo.convert %1681 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1683 = stablehlo.reduce(%1682 init: %cst_441) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1684 = stablehlo.convert %1683 : (tensor<f32>) -> tensor<bf16>
    %1685 = stablehlo.add %1680, %1684 : tensor<bf16>
    %1686 = stablehlo.multiply %625, %625 : tensor<768x3072xbf16>
    %1687 = stablehlo.convert %1686 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1688 = stablehlo.reduce(%1687 init: %cst_442) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1689 = stablehlo.convert %1688 : (tensor<f32>) -> tensor<bf16>
    %1690 = stablehlo.add %1685, %1689 : tensor<bf16>
    %1691 = stablehlo.multiply %601, %601 : tensor<768xbf16>
    %1692 = stablehlo.convert %1691 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1693 = stablehlo.reduce(%1692 init: %cst_443) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1694 = stablehlo.convert %1693 : (tensor<f32>) -> tensor<bf16>
    %1695 = stablehlo.add %1690, %1694 : tensor<bf16>
    %1696 = stablehlo.multiply %577, %577 : tensor<768xbf16>
    %1697 = stablehlo.convert %1696 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1698 = stablehlo.reduce(%1697 init: %cst_444) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1699 = stablehlo.convert %1698 : (tensor<f32>) -> tensor<bf16>
    %1700 = stablehlo.add %1695, %1699 : tensor<bf16>
    %1701 = stablehlo.multiply %553, %553 : tensor<768xbf16>
    %1702 = stablehlo.convert %1701 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1703 = stablehlo.reduce(%1702 init: %cst_445) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1704 = stablehlo.convert %1703 : (tensor<f32>) -> tensor<bf16>
    %1705 = stablehlo.add %1700, %1704 : tensor<bf16>
    %1706 = stablehlo.multiply %912, %912 : tensor<768x768xbf16>
    %1707 = stablehlo.convert %1706 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1708 = stablehlo.reduce(%1707 init: %cst_446) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1709 = stablehlo.convert %1708 : (tensor<f32>) -> tensor<bf16>
    %1710 = stablehlo.add %1705, %1709 : tensor<bf16>
    %1711 = stablehlo.multiply %888, %888 : tensor<768xbf16>
    %1712 = stablehlo.convert %1711 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1713 = stablehlo.reduce(%1712 init: %cst_447) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1714 = stablehlo.convert %1713 : (tensor<f32>) -> tensor<bf16>
    %1715 = stablehlo.add %1710, %1714 : tensor<bf16>
    %1716 = stablehlo.multiply %864, %864 : tensor<768x768xbf16>
    %1717 = stablehlo.convert %1716 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1718 = stablehlo.reduce(%1717 init: %cst_448) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1719 = stablehlo.convert %1718 : (tensor<f32>) -> tensor<bf16>
    %1720 = stablehlo.add %1715, %1719 : tensor<bf16>
    %1721 = stablehlo.multiply %840, %840 : tensor<768xbf16>
    %1722 = stablehlo.convert %1721 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1723 = stablehlo.reduce(%1722 init: %cst_449) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1724 = stablehlo.convert %1723 : (tensor<f32>) -> tensor<bf16>
    %1725 = stablehlo.add %1720, %1724 : tensor<bf16>
    %1726 = stablehlo.multiply %816, %816 : tensor<768x768xbf16>
    %1727 = stablehlo.convert %1726 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1728 = stablehlo.reduce(%1727 init: %cst_450) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1729 = stablehlo.convert %1728 : (tensor<f32>) -> tensor<bf16>
    %1730 = stablehlo.add %1725, %1729 : tensor<bf16>
    %1731 = stablehlo.multiply %792, %792 : tensor<768xbf16>
    %1732 = stablehlo.convert %1731 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1733 = stablehlo.reduce(%1732 init: %cst_451) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1734 = stablehlo.convert %1733 : (tensor<f32>) -> tensor<bf16>
    %1735 = stablehlo.add %1730, %1734 : tensor<bf16>
    %1736 = stablehlo.multiply %768, %768 : tensor<768x768xbf16>
    %1737 = stablehlo.convert %1736 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1738 = stablehlo.reduce(%1737 init: %cst_452) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1739 = stablehlo.convert %1738 : (tensor<f32>) -> tensor<bf16>
    %1740 = stablehlo.add %1735, %1739 : tensor<bf16>
    %1741 = stablehlo.multiply %744, %744 : tensor<768xbf16>
    %1742 = stablehlo.convert %1741 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1743 = stablehlo.reduce(%1742 init: %cst_453) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1744 = stablehlo.convert %1743 : (tensor<f32>) -> tensor<bf16>
    %1745 = stablehlo.add %1740, %1744 : tensor<bf16>
    %1746 = stablehlo.multiply %720, %720 : tensor<768xbf16>
    %1747 = stablehlo.convert %1746 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1748 = stablehlo.reduce(%1747 init: %cst_454) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1749 = stablehlo.convert %1748 : (tensor<f32>) -> tensor<bf16>
    %1750 = stablehlo.add %1745, %1749 : tensor<bf16>
    %1751 = stablehlo.multiply %696, %696 : tensor<768xbf16>
    %1752 = stablehlo.convert %1751 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1753 = stablehlo.reduce(%1752 init: %cst_455) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1754 = stablehlo.convert %1753 : (tensor<f32>) -> tensor<bf16>
    %1755 = stablehlo.add %1750, %1754 : tensor<bf16>
    %1756 = stablehlo.multiply %672, %672 : tensor<3072x768xbf16>
    %1757 = stablehlo.convert %1756 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1758 = stablehlo.reduce(%1757 init: %cst_456) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1759 = stablehlo.convert %1758 : (tensor<f32>) -> tensor<bf16>
    %1760 = stablehlo.add %1755, %1759 : tensor<bf16>
    %1761 = stablehlo.multiply %648, %648 : tensor<3072xbf16>
    %1762 = stablehlo.convert %1761 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1763 = stablehlo.reduce(%1762 init: %cst_457) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1764 = stablehlo.convert %1763 : (tensor<f32>) -> tensor<bf16>
    %1765 = stablehlo.add %1760, %1764 : tensor<bf16>
    %1766 = stablehlo.multiply %624, %624 : tensor<768x3072xbf16>
    %1767 = stablehlo.convert %1766 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1768 = stablehlo.reduce(%1767 init: %cst_458) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1769 = stablehlo.convert %1768 : (tensor<f32>) -> tensor<bf16>
    %1770 = stablehlo.add %1765, %1769 : tensor<bf16>
    %1771 = stablehlo.multiply %600, %600 : tensor<768xbf16>
    %1772 = stablehlo.convert %1771 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1773 = stablehlo.reduce(%1772 init: %cst_459) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1774 = stablehlo.convert %1773 : (tensor<f32>) -> tensor<bf16>
    %1775 = stablehlo.add %1770, %1774 : tensor<bf16>
    %1776 = stablehlo.multiply %576, %576 : tensor<768xbf16>
    %1777 = stablehlo.convert %1776 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1778 = stablehlo.reduce(%1777 init: %cst_460) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1779 = stablehlo.convert %1778 : (tensor<f32>) -> tensor<bf16>
    %1780 = stablehlo.add %1775, %1779 : tensor<bf16>
    %1781 = stablehlo.multiply %552, %552 : tensor<768xbf16>
    %1782 = stablehlo.convert %1781 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1783 = stablehlo.reduce(%1782 init: %cst_461) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1784 = stablehlo.convert %1783 : (tensor<f32>) -> tensor<bf16>
    %1785 = stablehlo.add %1780, %1784 : tensor<bf16>
    %1786 = stablehlo.multiply %911, %911 : tensor<768x768xbf16>
    %1787 = stablehlo.convert %1786 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1788 = stablehlo.reduce(%1787 init: %cst_462) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1789 = stablehlo.convert %1788 : (tensor<f32>) -> tensor<bf16>
    %1790 = stablehlo.add %1785, %1789 : tensor<bf16>
    %1791 = stablehlo.multiply %887, %887 : tensor<768xbf16>
    %1792 = stablehlo.convert %1791 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1793 = stablehlo.reduce(%1792 init: %cst_463) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1794 = stablehlo.convert %1793 : (tensor<f32>) -> tensor<bf16>
    %1795 = stablehlo.add %1790, %1794 : tensor<bf16>
    %1796 = stablehlo.multiply %863, %863 : tensor<768x768xbf16>
    %1797 = stablehlo.convert %1796 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1798 = stablehlo.reduce(%1797 init: %cst_464) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1799 = stablehlo.convert %1798 : (tensor<f32>) -> tensor<bf16>
    %1800 = stablehlo.add %1795, %1799 : tensor<bf16>
    %1801 = stablehlo.multiply %839, %839 : tensor<768xbf16>
    %1802 = stablehlo.convert %1801 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1803 = stablehlo.reduce(%1802 init: %cst_465) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1804 = stablehlo.convert %1803 : (tensor<f32>) -> tensor<bf16>
    %1805 = stablehlo.add %1800, %1804 : tensor<bf16>
    %1806 = stablehlo.multiply %815, %815 : tensor<768x768xbf16>
    %1807 = stablehlo.convert %1806 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1808 = stablehlo.reduce(%1807 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1809 = stablehlo.convert %1808 : (tensor<f32>) -> tensor<bf16>
    %1810 = stablehlo.add %1805, %1809 : tensor<bf16>
    %1811 = stablehlo.multiply %791, %791 : tensor<768xbf16>
    %1812 = stablehlo.convert %1811 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1813 = stablehlo.reduce(%1812 init: %cst_467) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1814 = stablehlo.convert %1813 : (tensor<f32>) -> tensor<bf16>
    %1815 = stablehlo.add %1810, %1814 : tensor<bf16>
    %1816 = stablehlo.multiply %767, %767 : tensor<768x768xbf16>
    %1817 = stablehlo.convert %1816 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1818 = stablehlo.reduce(%1817 init: %cst_468) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1819 = stablehlo.convert %1818 : (tensor<f32>) -> tensor<bf16>
    %1820 = stablehlo.add %1815, %1819 : tensor<bf16>
    %1821 = stablehlo.multiply %743, %743 : tensor<768xbf16>
    %1822 = stablehlo.convert %1821 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1823 = stablehlo.reduce(%1822 init: %cst_469) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1824 = stablehlo.convert %1823 : (tensor<f32>) -> tensor<bf16>
    %1825 = stablehlo.add %1820, %1824 : tensor<bf16>
    %1826 = stablehlo.multiply %719, %719 : tensor<768xbf16>
    %1827 = stablehlo.convert %1826 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1828 = stablehlo.reduce(%1827 init: %cst_470) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1829 = stablehlo.convert %1828 : (tensor<f32>) -> tensor<bf16>
    %1830 = stablehlo.add %1825, %1829 : tensor<bf16>
    %1831 = stablehlo.multiply %695, %695 : tensor<768xbf16>
    %1832 = stablehlo.convert %1831 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1833 = stablehlo.reduce(%1832 init: %cst_471) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1834 = stablehlo.convert %1833 : (tensor<f32>) -> tensor<bf16>
    %1835 = stablehlo.add %1830, %1834 : tensor<bf16>
    %1836 = stablehlo.multiply %671, %671 : tensor<3072x768xbf16>
    %1837 = stablehlo.convert %1836 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1838 = stablehlo.reduce(%1837 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1839 = stablehlo.convert %1838 : (tensor<f32>) -> tensor<bf16>
    %1840 = stablehlo.add %1835, %1839 : tensor<bf16>
    %1841 = stablehlo.multiply %647, %647 : tensor<3072xbf16>
    %1842 = stablehlo.convert %1841 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1843 = stablehlo.reduce(%1842 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1844 = stablehlo.convert %1843 : (tensor<f32>) -> tensor<bf16>
    %1845 = stablehlo.add %1840, %1844 : tensor<bf16>
    %1846 = stablehlo.multiply %623, %623 : tensor<768x3072xbf16>
    %1847 = stablehlo.convert %1846 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1848 = stablehlo.reduce(%1847 init: %cst_474) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1849 = stablehlo.convert %1848 : (tensor<f32>) -> tensor<bf16>
    %1850 = stablehlo.add %1845, %1849 : tensor<bf16>
    %1851 = stablehlo.multiply %599, %599 : tensor<768xbf16>
    %1852 = stablehlo.convert %1851 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1853 = stablehlo.reduce(%1852 init: %cst_475) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1854 = stablehlo.convert %1853 : (tensor<f32>) -> tensor<bf16>
    %1855 = stablehlo.add %1850, %1854 : tensor<bf16>
    %1856 = stablehlo.multiply %575, %575 : tensor<768xbf16>
    %1857 = stablehlo.convert %1856 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1858 = stablehlo.reduce(%1857 init: %cst_476) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1859 = stablehlo.convert %1858 : (tensor<f32>) -> tensor<bf16>
    %1860 = stablehlo.add %1855, %1859 : tensor<bf16>
    %1861 = stablehlo.multiply %551, %551 : tensor<768xbf16>
    %1862 = stablehlo.convert %1861 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1863 = stablehlo.reduce(%1862 init: %cst_477) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1864 = stablehlo.convert %1863 : (tensor<f32>) -> tensor<bf16>
    %1865 = stablehlo.add %1860, %1864 : tensor<bf16>
    %1866 = stablehlo.multiply %910, %910 : tensor<768x768xbf16>
    %1867 = stablehlo.convert %1866 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1868 = stablehlo.reduce(%1867 init: %cst_478) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1869 = stablehlo.convert %1868 : (tensor<f32>) -> tensor<bf16>
    %1870 = stablehlo.add %1865, %1869 : tensor<bf16>
    %1871 = stablehlo.multiply %886, %886 : tensor<768xbf16>
    %1872 = stablehlo.convert %1871 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1873 = stablehlo.reduce(%1872 init: %cst_479) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1874 = stablehlo.convert %1873 : (tensor<f32>) -> tensor<bf16>
    %1875 = stablehlo.add %1870, %1874 : tensor<bf16>
    %1876 = stablehlo.multiply %862, %862 : tensor<768x768xbf16>
    %1877 = stablehlo.convert %1876 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1878 = stablehlo.reduce(%1877 init: %cst_480) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1879 = stablehlo.convert %1878 : (tensor<f32>) -> tensor<bf16>
    %1880 = stablehlo.add %1875, %1879 : tensor<bf16>
    %1881 = stablehlo.multiply %838, %838 : tensor<768xbf16>
    %1882 = stablehlo.convert %1881 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1883 = stablehlo.reduce(%1882 init: %cst_481) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1884 = stablehlo.convert %1883 : (tensor<f32>) -> tensor<bf16>
    %1885 = stablehlo.add %1880, %1884 : tensor<bf16>
    %1886 = stablehlo.multiply %814, %814 : tensor<768x768xbf16>
    %1887 = stablehlo.convert %1886 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1888 = stablehlo.reduce(%1887 init: %cst_482) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1889 = stablehlo.convert %1888 : (tensor<f32>) -> tensor<bf16>
    %1890 = stablehlo.add %1885, %1889 : tensor<bf16>
    %1891 = stablehlo.multiply %790, %790 : tensor<768xbf16>
    %1892 = stablehlo.convert %1891 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1893 = stablehlo.reduce(%1892 init: %cst_483) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1894 = stablehlo.convert %1893 : (tensor<f32>) -> tensor<bf16>
    %1895 = stablehlo.add %1890, %1894 : tensor<bf16>
    %1896 = stablehlo.multiply %766, %766 : tensor<768x768xbf16>
    %1897 = stablehlo.convert %1896 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1898 = stablehlo.reduce(%1897 init: %cst_484) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1899 = stablehlo.convert %1898 : (tensor<f32>) -> tensor<bf16>
    %1900 = stablehlo.add %1895, %1899 : tensor<bf16>
    %1901 = stablehlo.multiply %742, %742 : tensor<768xbf16>
    %1902 = stablehlo.convert %1901 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1903 = stablehlo.reduce(%1902 init: %cst_485) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1904 = stablehlo.convert %1903 : (tensor<f32>) -> tensor<bf16>
    %1905 = stablehlo.add %1900, %1904 : tensor<bf16>
    %1906 = stablehlo.multiply %718, %718 : tensor<768xbf16>
    %1907 = stablehlo.convert %1906 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1908 = stablehlo.reduce(%1907 init: %cst_486) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1909 = stablehlo.convert %1908 : (tensor<f32>) -> tensor<bf16>
    %1910 = stablehlo.add %1905, %1909 : tensor<bf16>
    %1911 = stablehlo.multiply %694, %694 : tensor<768xbf16>
    %1912 = stablehlo.convert %1911 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1913 = stablehlo.reduce(%1912 init: %cst_487) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1914 = stablehlo.convert %1913 : (tensor<f32>) -> tensor<bf16>
    %1915 = stablehlo.add %1910, %1914 : tensor<bf16>
    %1916 = stablehlo.multiply %670, %670 : tensor<3072x768xbf16>
    %1917 = stablehlo.convert %1916 : (tensor<3072x768xbf16>) -> tensor<3072x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1918 = stablehlo.reduce(%1917 init: %cst_488) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %1919 = stablehlo.convert %1918 : (tensor<f32>) -> tensor<bf16>
    %1920 = stablehlo.add %1915, %1919 : tensor<bf16>
    %1921 = stablehlo.multiply %646, %646 : tensor<3072xbf16>
    %1922 = stablehlo.convert %1921 : (tensor<3072xbf16>) -> tensor<3072xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1923 = stablehlo.reduce(%1922 init: %cst_489) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %1924 = stablehlo.convert %1923 : (tensor<f32>) -> tensor<bf16>
    %1925 = stablehlo.add %1920, %1924 : tensor<bf16>
    %1926 = stablehlo.multiply %622, %622 : tensor<768x3072xbf16>
    %1927 = stablehlo.convert %1926 : (tensor<768x3072xbf16>) -> tensor<768x3072xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1928 = stablehlo.reduce(%1927 init: %cst_490) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %1929 = stablehlo.convert %1928 : (tensor<f32>) -> tensor<bf16>
    %1930 = stablehlo.add %1925, %1929 : tensor<bf16>
    %1931 = stablehlo.multiply %598, %598 : tensor<768xbf16>
    %1932 = stablehlo.convert %1931 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1933 = stablehlo.reduce(%1932 init: %cst_491) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1934 = stablehlo.convert %1933 : (tensor<f32>) -> tensor<bf16>
    %1935 = stablehlo.add %1930, %1934 : tensor<bf16>
    %1936 = stablehlo.multiply %574, %574 : tensor<768xbf16>
    %1937 = stablehlo.convert %1936 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1938 = stablehlo.reduce(%1937 init: %cst_492) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1939 = stablehlo.convert %1938 : (tensor<f32>) -> tensor<bf16>
    %1940 = stablehlo.add %1935, %1939 : tensor<bf16>
    %1941 = stablehlo.multiply %550, %550 : tensor<768xbf16>
    %1942 = stablehlo.convert %1941 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1943 = stablehlo.reduce(%1942 init: %cst_493) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1944 = stablehlo.convert %1943 : (tensor<f32>) -> tensor<bf16>
    %1945 = stablehlo.add %1940, %1944 : tensor<bf16>
    %1946 = stablehlo.multiply %520, %520 : tensor<768x768xbf16>
    %1947 = stablehlo.convert %1946 : (tensor<768x768xbf16>) -> tensor<768x768xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1948 = stablehlo.reduce(%1947 init: %cst_494) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %1949 = stablehlo.convert %1948 : (tensor<f32>) -> tensor<bf16>
    %1950 = stablehlo.add %1945, %1949 : tensor<bf16>
    %1951 = stablehlo.multiply %516, %516 : tensor<768xbf16>
    %1952 = stablehlo.convert %1951 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1953 = stablehlo.reduce(%1952 init: %cst_495) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1954 = stablehlo.convert %1953 : (tensor<f32>) -> tensor<bf16>
    %1955 = stablehlo.add %1950, %1954 : tensor<bf16>
    %1956 = stablehlo.multiply %480, %480 : tensor<768xbf16>
    %1957 = stablehlo.convert %1956 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1958 = stablehlo.reduce(%1957 init: %cst_496) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1959 = stablehlo.convert %1958 : (tensor<f32>) -> tensor<bf16>
    %1960 = stablehlo.add %1955, %1959 : tensor<bf16>
    %1961 = stablehlo.multiply %474, %474 : tensor<768xbf16>
    %1962 = stablehlo.convert %1961 : (tensor<768xbf16>) -> tensor<768xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1963 = stablehlo.reduce(%1962 init: %cst_497) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %1964 = stablehlo.convert %1963 : (tensor<f32>) -> tensor<bf16>
    %1965 = stablehlo.add %1960, %1964 : tensor<bf16>
    %1966 = stablehlo.multiply %469, %469 : tensor<30522xbf16>
    %1967 = stablehlo.convert %1966 : (tensor<30522xbf16>) -> tensor<30522xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1968 = stablehlo.reduce(%1967 init: %cst_498) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %1969 = stablehlo.convert %1968 : (tensor<f32>) -> tensor<bf16>
    %1970 = stablehlo.add %1965, %1969 : tensor<bf16>
    %1971 = stablehlo.sqrt %1970 : tensor<bf16>
    %1972 = stablehlo.compare  LT, %1971, %cst_6,  FLOAT : (tensor<bf16>, tensor<bf16>) -> tensor<i1>
    %1973 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %1974 = stablehlo.divide %960, %1973 : tensor<30522x768xbf16>
    %1975 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %1976 = stablehlo.multiply %1974, %1975 : tensor<30522x768xbf16>
    %1977 = stablehlo.select %1972, %960, %1976 : tensor<i1>, tensor<30522x768xbf16>
    %1978 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %1979 = stablehlo.divide %957, %1978 : tensor<512x768xbf16>
    %1980 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %1981 = stablehlo.multiply %1979, %1980 : tensor<512x768xbf16>
    %1982 = stablehlo.select %1972, %957, %1981 : tensor<i1>, tensor<512x768xbf16>
    %1983 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %1984 = stablehlo.divide %955, %1983 : tensor<2x768xbf16>
    %1985 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %1986 = stablehlo.multiply %1984, %1985 : tensor<2x768xbf16>
    %1987 = stablehlo.select %1972, %955, %1986 : tensor<i1>, tensor<2x768xbf16>
    %1988 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %1989 = stablehlo.divide %934, %1988 : tensor<768xbf16>
    %1990 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %1991 = stablehlo.multiply %1989, %1990 : tensor<768xbf16>
    %1992 = stablehlo.select %1972, %934, %1991 : tensor<i1>, tensor<768xbf16>
    %1993 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %1994 = stablehlo.divide %928, %1993 : tensor<768xbf16>
    %1995 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %1996 = stablehlo.multiply %1994, %1995 : tensor<768xbf16>
    %1997 = stablehlo.select %1972, %928, %1996 : tensor<i1>, tensor<768xbf16>
    %1998 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %1999 = stablehlo.divide %921, %1998 : tensor<768x768xbf16>
    %2000 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2001 = stablehlo.multiply %1999, %2000 : tensor<768x768xbf16>
    %2002 = stablehlo.select %1972, %921, %2001 : tensor<i1>, tensor<768x768xbf16>
    %2003 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2004 = stablehlo.divide %897, %2003 : tensor<768xbf16>
    %2005 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2006 = stablehlo.multiply %2004, %2005 : tensor<768xbf16>
    %2007 = stablehlo.select %1972, %897, %2006 : tensor<i1>, tensor<768xbf16>
    %2008 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2009 = stablehlo.divide %873, %2008 : tensor<768x768xbf16>
    %2010 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2011 = stablehlo.multiply %2009, %2010 : tensor<768x768xbf16>
    %2012 = stablehlo.select %1972, %873, %2011 : tensor<i1>, tensor<768x768xbf16>
    %2013 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2014 = stablehlo.divide %849, %2013 : tensor<768xbf16>
    %2015 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2016 = stablehlo.multiply %2014, %2015 : tensor<768xbf16>
    %2017 = stablehlo.select %1972, %849, %2016 : tensor<i1>, tensor<768xbf16>
    %2018 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2019 = stablehlo.divide %825, %2018 : tensor<768x768xbf16>
    %2020 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2021 = stablehlo.multiply %2019, %2020 : tensor<768x768xbf16>
    %2022 = stablehlo.select %1972, %825, %2021 : tensor<i1>, tensor<768x768xbf16>
    %2023 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2024 = stablehlo.divide %801, %2023 : tensor<768xbf16>
    %2025 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2026 = stablehlo.multiply %2024, %2025 : tensor<768xbf16>
    %2027 = stablehlo.select %1972, %801, %2026 : tensor<i1>, tensor<768xbf16>
    %2028 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2029 = stablehlo.divide %777, %2028 : tensor<768x768xbf16>
    %2030 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2031 = stablehlo.multiply %2029, %2030 : tensor<768x768xbf16>
    %2032 = stablehlo.select %1972, %777, %2031 : tensor<i1>, tensor<768x768xbf16>
    %2033 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2034 = stablehlo.divide %753, %2033 : tensor<768xbf16>
    %2035 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2036 = stablehlo.multiply %2034, %2035 : tensor<768xbf16>
    %2037 = stablehlo.select %1972, %753, %2036 : tensor<i1>, tensor<768xbf16>
    %2038 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2039 = stablehlo.divide %729, %2038 : tensor<768xbf16>
    %2040 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2041 = stablehlo.multiply %2039, %2040 : tensor<768xbf16>
    %2042 = stablehlo.select %1972, %729, %2041 : tensor<i1>, tensor<768xbf16>
    %2043 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2044 = stablehlo.divide %705, %2043 : tensor<768xbf16>
    %2045 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2046 = stablehlo.multiply %2044, %2045 : tensor<768xbf16>
    %2047 = stablehlo.select %1972, %705, %2046 : tensor<i1>, tensor<768xbf16>
    %2048 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2049 = stablehlo.divide %681, %2048 : tensor<3072x768xbf16>
    %2050 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2051 = stablehlo.multiply %2049, %2050 : tensor<3072x768xbf16>
    %2052 = stablehlo.select %1972, %681, %2051 : tensor<i1>, tensor<3072x768xbf16>
    %2053 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2054 = stablehlo.divide %657, %2053 : tensor<3072xbf16>
    %2055 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2056 = stablehlo.multiply %2054, %2055 : tensor<3072xbf16>
    %2057 = stablehlo.select %1972, %657, %2056 : tensor<i1>, tensor<3072xbf16>
    %2058 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2059 = stablehlo.divide %633, %2058 : tensor<768x3072xbf16>
    %2060 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2061 = stablehlo.multiply %2059, %2060 : tensor<768x3072xbf16>
    %2062 = stablehlo.select %1972, %633, %2061 : tensor<i1>, tensor<768x3072xbf16>
    %2063 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2064 = stablehlo.divide %609, %2063 : tensor<768xbf16>
    %2065 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2066 = stablehlo.multiply %2064, %2065 : tensor<768xbf16>
    %2067 = stablehlo.select %1972, %609, %2066 : tensor<i1>, tensor<768xbf16>
    %2068 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2069 = stablehlo.divide %585, %2068 : tensor<768xbf16>
    %2070 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2071 = stablehlo.multiply %2069, %2070 : tensor<768xbf16>
    %2072 = stablehlo.select %1972, %585, %2071 : tensor<i1>, tensor<768xbf16>
    %2073 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2074 = stablehlo.divide %561, %2073 : tensor<768xbf16>
    %2075 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2076 = stablehlo.multiply %2074, %2075 : tensor<768xbf16>
    %2077 = stablehlo.select %1972, %561, %2076 : tensor<i1>, tensor<768xbf16>
    %2078 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2079 = stablehlo.divide %920, %2078 : tensor<768x768xbf16>
    %2080 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2081 = stablehlo.multiply %2079, %2080 : tensor<768x768xbf16>
    %2082 = stablehlo.select %1972, %920, %2081 : tensor<i1>, tensor<768x768xbf16>
    %2083 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2084 = stablehlo.divide %896, %2083 : tensor<768xbf16>
    %2085 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2086 = stablehlo.multiply %2084, %2085 : tensor<768xbf16>
    %2087 = stablehlo.select %1972, %896, %2086 : tensor<i1>, tensor<768xbf16>
    %2088 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2089 = stablehlo.divide %872, %2088 : tensor<768x768xbf16>
    %2090 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2091 = stablehlo.multiply %2089, %2090 : tensor<768x768xbf16>
    %2092 = stablehlo.select %1972, %872, %2091 : tensor<i1>, tensor<768x768xbf16>
    %2093 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2094 = stablehlo.divide %848, %2093 : tensor<768xbf16>
    %2095 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2096 = stablehlo.multiply %2094, %2095 : tensor<768xbf16>
    %2097 = stablehlo.select %1972, %848, %2096 : tensor<i1>, tensor<768xbf16>
    %2098 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2099 = stablehlo.divide %824, %2098 : tensor<768x768xbf16>
    %2100 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2101 = stablehlo.multiply %2099, %2100 : tensor<768x768xbf16>
    %2102 = stablehlo.select %1972, %824, %2101 : tensor<i1>, tensor<768x768xbf16>
    %2103 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2104 = stablehlo.divide %800, %2103 : tensor<768xbf16>
    %2105 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2106 = stablehlo.multiply %2104, %2105 : tensor<768xbf16>
    %2107 = stablehlo.select %1972, %800, %2106 : tensor<i1>, tensor<768xbf16>
    %2108 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2109 = stablehlo.divide %776, %2108 : tensor<768x768xbf16>
    %2110 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2111 = stablehlo.multiply %2109, %2110 : tensor<768x768xbf16>
    %2112 = stablehlo.select %1972, %776, %2111 : tensor<i1>, tensor<768x768xbf16>
    %2113 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2114 = stablehlo.divide %752, %2113 : tensor<768xbf16>
    %2115 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2116 = stablehlo.multiply %2114, %2115 : tensor<768xbf16>
    %2117 = stablehlo.select %1972, %752, %2116 : tensor<i1>, tensor<768xbf16>
    %2118 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2119 = stablehlo.divide %728, %2118 : tensor<768xbf16>
    %2120 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2121 = stablehlo.multiply %2119, %2120 : tensor<768xbf16>
    %2122 = stablehlo.select %1972, %728, %2121 : tensor<i1>, tensor<768xbf16>
    %2123 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2124 = stablehlo.divide %704, %2123 : tensor<768xbf16>
    %2125 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2126 = stablehlo.multiply %2124, %2125 : tensor<768xbf16>
    %2127 = stablehlo.select %1972, %704, %2126 : tensor<i1>, tensor<768xbf16>
    %2128 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2129 = stablehlo.divide %680, %2128 : tensor<3072x768xbf16>
    %2130 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2131 = stablehlo.multiply %2129, %2130 : tensor<3072x768xbf16>
    %2132 = stablehlo.select %1972, %680, %2131 : tensor<i1>, tensor<3072x768xbf16>
    %2133 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2134 = stablehlo.divide %656, %2133 : tensor<3072xbf16>
    %2135 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2136 = stablehlo.multiply %2134, %2135 : tensor<3072xbf16>
    %2137 = stablehlo.select %1972, %656, %2136 : tensor<i1>, tensor<3072xbf16>
    %2138 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2139 = stablehlo.divide %632, %2138 : tensor<768x3072xbf16>
    %2140 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2141 = stablehlo.multiply %2139, %2140 : tensor<768x3072xbf16>
    %2142 = stablehlo.select %1972, %632, %2141 : tensor<i1>, tensor<768x3072xbf16>
    %2143 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2144 = stablehlo.divide %608, %2143 : tensor<768xbf16>
    %2145 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2146 = stablehlo.multiply %2144, %2145 : tensor<768xbf16>
    %2147 = stablehlo.select %1972, %608, %2146 : tensor<i1>, tensor<768xbf16>
    %2148 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2149 = stablehlo.divide %584, %2148 : tensor<768xbf16>
    %2150 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2151 = stablehlo.multiply %2149, %2150 : tensor<768xbf16>
    %2152 = stablehlo.select %1972, %584, %2151 : tensor<i1>, tensor<768xbf16>
    %2153 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2154 = stablehlo.divide %560, %2153 : tensor<768xbf16>
    %2155 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2156 = stablehlo.multiply %2154, %2155 : tensor<768xbf16>
    %2157 = stablehlo.select %1972, %560, %2156 : tensor<i1>, tensor<768xbf16>
    %2158 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2159 = stablehlo.divide %919, %2158 : tensor<768x768xbf16>
    %2160 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2161 = stablehlo.multiply %2159, %2160 : tensor<768x768xbf16>
    %2162 = stablehlo.select %1972, %919, %2161 : tensor<i1>, tensor<768x768xbf16>
    %2163 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2164 = stablehlo.divide %895, %2163 : tensor<768xbf16>
    %2165 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2166 = stablehlo.multiply %2164, %2165 : tensor<768xbf16>
    %2167 = stablehlo.select %1972, %895, %2166 : tensor<i1>, tensor<768xbf16>
    %2168 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2169 = stablehlo.divide %871, %2168 : tensor<768x768xbf16>
    %2170 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2171 = stablehlo.multiply %2169, %2170 : tensor<768x768xbf16>
    %2172 = stablehlo.select %1972, %871, %2171 : tensor<i1>, tensor<768x768xbf16>
    %2173 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2174 = stablehlo.divide %847, %2173 : tensor<768xbf16>
    %2175 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2176 = stablehlo.multiply %2174, %2175 : tensor<768xbf16>
    %2177 = stablehlo.select %1972, %847, %2176 : tensor<i1>, tensor<768xbf16>
    %2178 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2179 = stablehlo.divide %823, %2178 : tensor<768x768xbf16>
    %2180 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2181 = stablehlo.multiply %2179, %2180 : tensor<768x768xbf16>
    %2182 = stablehlo.select %1972, %823, %2181 : tensor<i1>, tensor<768x768xbf16>
    %2183 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2184 = stablehlo.divide %799, %2183 : tensor<768xbf16>
    %2185 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2186 = stablehlo.multiply %2184, %2185 : tensor<768xbf16>
    %2187 = stablehlo.select %1972, %799, %2186 : tensor<i1>, tensor<768xbf16>
    %2188 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2189 = stablehlo.divide %775, %2188 : tensor<768x768xbf16>
    %2190 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2191 = stablehlo.multiply %2189, %2190 : tensor<768x768xbf16>
    %2192 = stablehlo.select %1972, %775, %2191 : tensor<i1>, tensor<768x768xbf16>
    %2193 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2194 = stablehlo.divide %751, %2193 : tensor<768xbf16>
    %2195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2196 = stablehlo.multiply %2194, %2195 : tensor<768xbf16>
    %2197 = stablehlo.select %1972, %751, %2196 : tensor<i1>, tensor<768xbf16>
    %2198 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2199 = stablehlo.divide %727, %2198 : tensor<768xbf16>
    %2200 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2201 = stablehlo.multiply %2199, %2200 : tensor<768xbf16>
    %2202 = stablehlo.select %1972, %727, %2201 : tensor<i1>, tensor<768xbf16>
    %2203 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2204 = stablehlo.divide %703, %2203 : tensor<768xbf16>
    %2205 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2206 = stablehlo.multiply %2204, %2205 : tensor<768xbf16>
    %2207 = stablehlo.select %1972, %703, %2206 : tensor<i1>, tensor<768xbf16>
    %2208 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2209 = stablehlo.divide %679, %2208 : tensor<3072x768xbf16>
    %2210 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2211 = stablehlo.multiply %2209, %2210 : tensor<3072x768xbf16>
    %2212 = stablehlo.select %1972, %679, %2211 : tensor<i1>, tensor<3072x768xbf16>
    %2213 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2214 = stablehlo.divide %655, %2213 : tensor<3072xbf16>
    %2215 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2216 = stablehlo.multiply %2214, %2215 : tensor<3072xbf16>
    %2217 = stablehlo.select %1972, %655, %2216 : tensor<i1>, tensor<3072xbf16>
    %2218 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2219 = stablehlo.divide %631, %2218 : tensor<768x3072xbf16>
    %2220 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2221 = stablehlo.multiply %2219, %2220 : tensor<768x3072xbf16>
    %2222 = stablehlo.select %1972, %631, %2221 : tensor<i1>, tensor<768x3072xbf16>
    %2223 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2224 = stablehlo.divide %607, %2223 : tensor<768xbf16>
    %2225 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2226 = stablehlo.multiply %2224, %2225 : tensor<768xbf16>
    %2227 = stablehlo.select %1972, %607, %2226 : tensor<i1>, tensor<768xbf16>
    %2228 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2229 = stablehlo.divide %583, %2228 : tensor<768xbf16>
    %2230 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2231 = stablehlo.multiply %2229, %2230 : tensor<768xbf16>
    %2232 = stablehlo.select %1972, %583, %2231 : tensor<i1>, tensor<768xbf16>
    %2233 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2234 = stablehlo.divide %559, %2233 : tensor<768xbf16>
    %2235 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2236 = stablehlo.multiply %2234, %2235 : tensor<768xbf16>
    %2237 = stablehlo.select %1972, %559, %2236 : tensor<i1>, tensor<768xbf16>
    %2238 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2239 = stablehlo.divide %918, %2238 : tensor<768x768xbf16>
    %2240 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2241 = stablehlo.multiply %2239, %2240 : tensor<768x768xbf16>
    %2242 = stablehlo.select %1972, %918, %2241 : tensor<i1>, tensor<768x768xbf16>
    %2243 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2244 = stablehlo.divide %894, %2243 : tensor<768xbf16>
    %2245 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2246 = stablehlo.multiply %2244, %2245 : tensor<768xbf16>
    %2247 = stablehlo.select %1972, %894, %2246 : tensor<i1>, tensor<768xbf16>
    %2248 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2249 = stablehlo.divide %870, %2248 : tensor<768x768xbf16>
    %2250 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2251 = stablehlo.multiply %2249, %2250 : tensor<768x768xbf16>
    %2252 = stablehlo.select %1972, %870, %2251 : tensor<i1>, tensor<768x768xbf16>
    %2253 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2254 = stablehlo.divide %846, %2253 : tensor<768xbf16>
    %2255 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2256 = stablehlo.multiply %2254, %2255 : tensor<768xbf16>
    %2257 = stablehlo.select %1972, %846, %2256 : tensor<i1>, tensor<768xbf16>
    %2258 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2259 = stablehlo.divide %822, %2258 : tensor<768x768xbf16>
    %2260 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2261 = stablehlo.multiply %2259, %2260 : tensor<768x768xbf16>
    %2262 = stablehlo.select %1972, %822, %2261 : tensor<i1>, tensor<768x768xbf16>
    %2263 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2264 = stablehlo.divide %798, %2263 : tensor<768xbf16>
    %2265 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2266 = stablehlo.multiply %2264, %2265 : tensor<768xbf16>
    %2267 = stablehlo.select %1972, %798, %2266 : tensor<i1>, tensor<768xbf16>
    %2268 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2269 = stablehlo.divide %774, %2268 : tensor<768x768xbf16>
    %2270 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2271 = stablehlo.multiply %2269, %2270 : tensor<768x768xbf16>
    %2272 = stablehlo.select %1972, %774, %2271 : tensor<i1>, tensor<768x768xbf16>
    %2273 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2274 = stablehlo.divide %750, %2273 : tensor<768xbf16>
    %2275 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2276 = stablehlo.multiply %2274, %2275 : tensor<768xbf16>
    %2277 = stablehlo.select %1972, %750, %2276 : tensor<i1>, tensor<768xbf16>
    %2278 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2279 = stablehlo.divide %726, %2278 : tensor<768xbf16>
    %2280 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2281 = stablehlo.multiply %2279, %2280 : tensor<768xbf16>
    %2282 = stablehlo.select %1972, %726, %2281 : tensor<i1>, tensor<768xbf16>
    %2283 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2284 = stablehlo.divide %702, %2283 : tensor<768xbf16>
    %2285 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2286 = stablehlo.multiply %2284, %2285 : tensor<768xbf16>
    %2287 = stablehlo.select %1972, %702, %2286 : tensor<i1>, tensor<768xbf16>
    %2288 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2289 = stablehlo.divide %678, %2288 : tensor<3072x768xbf16>
    %2290 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2291 = stablehlo.multiply %2289, %2290 : tensor<3072x768xbf16>
    %2292 = stablehlo.select %1972, %678, %2291 : tensor<i1>, tensor<3072x768xbf16>
    %2293 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2294 = stablehlo.divide %654, %2293 : tensor<3072xbf16>
    %2295 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2296 = stablehlo.multiply %2294, %2295 : tensor<3072xbf16>
    %2297 = stablehlo.select %1972, %654, %2296 : tensor<i1>, tensor<3072xbf16>
    %2298 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2299 = stablehlo.divide %630, %2298 : tensor<768x3072xbf16>
    %2300 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2301 = stablehlo.multiply %2299, %2300 : tensor<768x3072xbf16>
    %2302 = stablehlo.select %1972, %630, %2301 : tensor<i1>, tensor<768x3072xbf16>
    %2303 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2304 = stablehlo.divide %606, %2303 : tensor<768xbf16>
    %2305 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2306 = stablehlo.multiply %2304, %2305 : tensor<768xbf16>
    %2307 = stablehlo.select %1972, %606, %2306 : tensor<i1>, tensor<768xbf16>
    %2308 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2309 = stablehlo.divide %582, %2308 : tensor<768xbf16>
    %2310 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2311 = stablehlo.multiply %2309, %2310 : tensor<768xbf16>
    %2312 = stablehlo.select %1972, %582, %2311 : tensor<i1>, tensor<768xbf16>
    %2313 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2314 = stablehlo.divide %558, %2313 : tensor<768xbf16>
    %2315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2316 = stablehlo.multiply %2314, %2315 : tensor<768xbf16>
    %2317 = stablehlo.select %1972, %558, %2316 : tensor<i1>, tensor<768xbf16>
    %2318 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2319 = stablehlo.divide %917, %2318 : tensor<768x768xbf16>
    %2320 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2321 = stablehlo.multiply %2319, %2320 : tensor<768x768xbf16>
    %2322 = stablehlo.select %1972, %917, %2321 : tensor<i1>, tensor<768x768xbf16>
    %2323 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2324 = stablehlo.divide %893, %2323 : tensor<768xbf16>
    %2325 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2326 = stablehlo.multiply %2324, %2325 : tensor<768xbf16>
    %2327 = stablehlo.select %1972, %893, %2326 : tensor<i1>, tensor<768xbf16>
    %2328 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2329 = stablehlo.divide %869, %2328 : tensor<768x768xbf16>
    %2330 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2331 = stablehlo.multiply %2329, %2330 : tensor<768x768xbf16>
    %2332 = stablehlo.select %1972, %869, %2331 : tensor<i1>, tensor<768x768xbf16>
    %2333 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2334 = stablehlo.divide %845, %2333 : tensor<768xbf16>
    %2335 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2336 = stablehlo.multiply %2334, %2335 : tensor<768xbf16>
    %2337 = stablehlo.select %1972, %845, %2336 : tensor<i1>, tensor<768xbf16>
    %2338 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2339 = stablehlo.divide %821, %2338 : tensor<768x768xbf16>
    %2340 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2341 = stablehlo.multiply %2339, %2340 : tensor<768x768xbf16>
    %2342 = stablehlo.select %1972, %821, %2341 : tensor<i1>, tensor<768x768xbf16>
    %2343 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2344 = stablehlo.divide %797, %2343 : tensor<768xbf16>
    %2345 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2346 = stablehlo.multiply %2344, %2345 : tensor<768xbf16>
    %2347 = stablehlo.select %1972, %797, %2346 : tensor<i1>, tensor<768xbf16>
    %2348 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2349 = stablehlo.divide %773, %2348 : tensor<768x768xbf16>
    %2350 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2351 = stablehlo.multiply %2349, %2350 : tensor<768x768xbf16>
    %2352 = stablehlo.select %1972, %773, %2351 : tensor<i1>, tensor<768x768xbf16>
    %2353 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2354 = stablehlo.divide %749, %2353 : tensor<768xbf16>
    %2355 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2356 = stablehlo.multiply %2354, %2355 : tensor<768xbf16>
    %2357 = stablehlo.select %1972, %749, %2356 : tensor<i1>, tensor<768xbf16>
    %2358 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2359 = stablehlo.divide %725, %2358 : tensor<768xbf16>
    %2360 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2361 = stablehlo.multiply %2359, %2360 : tensor<768xbf16>
    %2362 = stablehlo.select %1972, %725, %2361 : tensor<i1>, tensor<768xbf16>
    %2363 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2364 = stablehlo.divide %701, %2363 : tensor<768xbf16>
    %2365 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2366 = stablehlo.multiply %2364, %2365 : tensor<768xbf16>
    %2367 = stablehlo.select %1972, %701, %2366 : tensor<i1>, tensor<768xbf16>
    %2368 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2369 = stablehlo.divide %677, %2368 : tensor<3072x768xbf16>
    %2370 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2371 = stablehlo.multiply %2369, %2370 : tensor<3072x768xbf16>
    %2372 = stablehlo.select %1972, %677, %2371 : tensor<i1>, tensor<3072x768xbf16>
    %2373 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2374 = stablehlo.divide %653, %2373 : tensor<3072xbf16>
    %2375 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2376 = stablehlo.multiply %2374, %2375 : tensor<3072xbf16>
    %2377 = stablehlo.select %1972, %653, %2376 : tensor<i1>, tensor<3072xbf16>
    %2378 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2379 = stablehlo.divide %629, %2378 : tensor<768x3072xbf16>
    %2380 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2381 = stablehlo.multiply %2379, %2380 : tensor<768x3072xbf16>
    %2382 = stablehlo.select %1972, %629, %2381 : tensor<i1>, tensor<768x3072xbf16>
    %2383 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2384 = stablehlo.divide %605, %2383 : tensor<768xbf16>
    %2385 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2386 = stablehlo.multiply %2384, %2385 : tensor<768xbf16>
    %2387 = stablehlo.select %1972, %605, %2386 : tensor<i1>, tensor<768xbf16>
    %2388 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2389 = stablehlo.divide %581, %2388 : tensor<768xbf16>
    %2390 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2391 = stablehlo.multiply %2389, %2390 : tensor<768xbf16>
    %2392 = stablehlo.select %1972, %581, %2391 : tensor<i1>, tensor<768xbf16>
    %2393 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2394 = stablehlo.divide %557, %2393 : tensor<768xbf16>
    %2395 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2396 = stablehlo.multiply %2394, %2395 : tensor<768xbf16>
    %2397 = stablehlo.select %1972, %557, %2396 : tensor<i1>, tensor<768xbf16>
    %2398 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2399 = stablehlo.divide %916, %2398 : tensor<768x768xbf16>
    %2400 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2401 = stablehlo.multiply %2399, %2400 : tensor<768x768xbf16>
    %2402 = stablehlo.select %1972, %916, %2401 : tensor<i1>, tensor<768x768xbf16>
    %2403 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2404 = stablehlo.divide %892, %2403 : tensor<768xbf16>
    %2405 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2406 = stablehlo.multiply %2404, %2405 : tensor<768xbf16>
    %2407 = stablehlo.select %1972, %892, %2406 : tensor<i1>, tensor<768xbf16>
    %2408 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2409 = stablehlo.divide %868, %2408 : tensor<768x768xbf16>
    %2410 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2411 = stablehlo.multiply %2409, %2410 : tensor<768x768xbf16>
    %2412 = stablehlo.select %1972, %868, %2411 : tensor<i1>, tensor<768x768xbf16>
    %2413 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2414 = stablehlo.divide %844, %2413 : tensor<768xbf16>
    %2415 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2416 = stablehlo.multiply %2414, %2415 : tensor<768xbf16>
    %2417 = stablehlo.select %1972, %844, %2416 : tensor<i1>, tensor<768xbf16>
    %2418 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2419 = stablehlo.divide %820, %2418 : tensor<768x768xbf16>
    %2420 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2421 = stablehlo.multiply %2419, %2420 : tensor<768x768xbf16>
    %2422 = stablehlo.select %1972, %820, %2421 : tensor<i1>, tensor<768x768xbf16>
    %2423 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2424 = stablehlo.divide %796, %2423 : tensor<768xbf16>
    %2425 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2426 = stablehlo.multiply %2424, %2425 : tensor<768xbf16>
    %2427 = stablehlo.select %1972, %796, %2426 : tensor<i1>, tensor<768xbf16>
    %2428 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2429 = stablehlo.divide %772, %2428 : tensor<768x768xbf16>
    %2430 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2431 = stablehlo.multiply %2429, %2430 : tensor<768x768xbf16>
    %2432 = stablehlo.select %1972, %772, %2431 : tensor<i1>, tensor<768x768xbf16>
    %2433 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2434 = stablehlo.divide %748, %2433 : tensor<768xbf16>
    %2435 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2436 = stablehlo.multiply %2434, %2435 : tensor<768xbf16>
    %2437 = stablehlo.select %1972, %748, %2436 : tensor<i1>, tensor<768xbf16>
    %2438 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2439 = stablehlo.divide %724, %2438 : tensor<768xbf16>
    %2440 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2441 = stablehlo.multiply %2439, %2440 : tensor<768xbf16>
    %2442 = stablehlo.select %1972, %724, %2441 : tensor<i1>, tensor<768xbf16>
    %2443 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2444 = stablehlo.divide %700, %2443 : tensor<768xbf16>
    %2445 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2446 = stablehlo.multiply %2444, %2445 : tensor<768xbf16>
    %2447 = stablehlo.select %1972, %700, %2446 : tensor<i1>, tensor<768xbf16>
    %2448 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2449 = stablehlo.divide %676, %2448 : tensor<3072x768xbf16>
    %2450 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2451 = stablehlo.multiply %2449, %2450 : tensor<3072x768xbf16>
    %2452 = stablehlo.select %1972, %676, %2451 : tensor<i1>, tensor<3072x768xbf16>
    %2453 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2454 = stablehlo.divide %652, %2453 : tensor<3072xbf16>
    %2455 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2456 = stablehlo.multiply %2454, %2455 : tensor<3072xbf16>
    %2457 = stablehlo.select %1972, %652, %2456 : tensor<i1>, tensor<3072xbf16>
    %2458 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2459 = stablehlo.divide %628, %2458 : tensor<768x3072xbf16>
    %2460 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2461 = stablehlo.multiply %2459, %2460 : tensor<768x3072xbf16>
    %2462 = stablehlo.select %1972, %628, %2461 : tensor<i1>, tensor<768x3072xbf16>
    %2463 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2464 = stablehlo.divide %604, %2463 : tensor<768xbf16>
    %2465 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2466 = stablehlo.multiply %2464, %2465 : tensor<768xbf16>
    %2467 = stablehlo.select %1972, %604, %2466 : tensor<i1>, tensor<768xbf16>
    %2468 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2469 = stablehlo.divide %580, %2468 : tensor<768xbf16>
    %2470 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2471 = stablehlo.multiply %2469, %2470 : tensor<768xbf16>
    %2472 = stablehlo.select %1972, %580, %2471 : tensor<i1>, tensor<768xbf16>
    %2473 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2474 = stablehlo.divide %556, %2473 : tensor<768xbf16>
    %2475 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2476 = stablehlo.multiply %2474, %2475 : tensor<768xbf16>
    %2477 = stablehlo.select %1972, %556, %2476 : tensor<i1>, tensor<768xbf16>
    %2478 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2479 = stablehlo.divide %915, %2478 : tensor<768x768xbf16>
    %2480 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2481 = stablehlo.multiply %2479, %2480 : tensor<768x768xbf16>
    %2482 = stablehlo.select %1972, %915, %2481 : tensor<i1>, tensor<768x768xbf16>
    %2483 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2484 = stablehlo.divide %891, %2483 : tensor<768xbf16>
    %2485 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2486 = stablehlo.multiply %2484, %2485 : tensor<768xbf16>
    %2487 = stablehlo.select %1972, %891, %2486 : tensor<i1>, tensor<768xbf16>
    %2488 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2489 = stablehlo.divide %867, %2488 : tensor<768x768xbf16>
    %2490 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2491 = stablehlo.multiply %2489, %2490 : tensor<768x768xbf16>
    %2492 = stablehlo.select %1972, %867, %2491 : tensor<i1>, tensor<768x768xbf16>
    %2493 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2494 = stablehlo.divide %843, %2493 : tensor<768xbf16>
    %2495 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2496 = stablehlo.multiply %2494, %2495 : tensor<768xbf16>
    %2497 = stablehlo.select %1972, %843, %2496 : tensor<i1>, tensor<768xbf16>
    %2498 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2499 = stablehlo.divide %819, %2498 : tensor<768x768xbf16>
    %2500 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2501 = stablehlo.multiply %2499, %2500 : tensor<768x768xbf16>
    %2502 = stablehlo.select %1972, %819, %2501 : tensor<i1>, tensor<768x768xbf16>
    %2503 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2504 = stablehlo.divide %795, %2503 : tensor<768xbf16>
    %2505 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2506 = stablehlo.multiply %2504, %2505 : tensor<768xbf16>
    %2507 = stablehlo.select %1972, %795, %2506 : tensor<i1>, tensor<768xbf16>
    %2508 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2509 = stablehlo.divide %771, %2508 : tensor<768x768xbf16>
    %2510 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2511 = stablehlo.multiply %2509, %2510 : tensor<768x768xbf16>
    %2512 = stablehlo.select %1972, %771, %2511 : tensor<i1>, tensor<768x768xbf16>
    %2513 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2514 = stablehlo.divide %747, %2513 : tensor<768xbf16>
    %2515 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2516 = stablehlo.multiply %2514, %2515 : tensor<768xbf16>
    %2517 = stablehlo.select %1972, %747, %2516 : tensor<i1>, tensor<768xbf16>
    %2518 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2519 = stablehlo.divide %723, %2518 : tensor<768xbf16>
    %2520 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2521 = stablehlo.multiply %2519, %2520 : tensor<768xbf16>
    %2522 = stablehlo.select %1972, %723, %2521 : tensor<i1>, tensor<768xbf16>
    %2523 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2524 = stablehlo.divide %699, %2523 : tensor<768xbf16>
    %2525 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2526 = stablehlo.multiply %2524, %2525 : tensor<768xbf16>
    %2527 = stablehlo.select %1972, %699, %2526 : tensor<i1>, tensor<768xbf16>
    %2528 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2529 = stablehlo.divide %675, %2528 : tensor<3072x768xbf16>
    %2530 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2531 = stablehlo.multiply %2529, %2530 : tensor<3072x768xbf16>
    %2532 = stablehlo.select %1972, %675, %2531 : tensor<i1>, tensor<3072x768xbf16>
    %2533 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2534 = stablehlo.divide %651, %2533 : tensor<3072xbf16>
    %2535 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2536 = stablehlo.multiply %2534, %2535 : tensor<3072xbf16>
    %2537 = stablehlo.select %1972, %651, %2536 : tensor<i1>, tensor<3072xbf16>
    %2538 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2539 = stablehlo.divide %627, %2538 : tensor<768x3072xbf16>
    %2540 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2541 = stablehlo.multiply %2539, %2540 : tensor<768x3072xbf16>
    %2542 = stablehlo.select %1972, %627, %2541 : tensor<i1>, tensor<768x3072xbf16>
    %2543 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2544 = stablehlo.divide %603, %2543 : tensor<768xbf16>
    %2545 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2546 = stablehlo.multiply %2544, %2545 : tensor<768xbf16>
    %2547 = stablehlo.select %1972, %603, %2546 : tensor<i1>, tensor<768xbf16>
    %2548 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2549 = stablehlo.divide %579, %2548 : tensor<768xbf16>
    %2550 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2551 = stablehlo.multiply %2549, %2550 : tensor<768xbf16>
    %2552 = stablehlo.select %1972, %579, %2551 : tensor<i1>, tensor<768xbf16>
    %2553 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2554 = stablehlo.divide %555, %2553 : tensor<768xbf16>
    %2555 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2556 = stablehlo.multiply %2554, %2555 : tensor<768xbf16>
    %2557 = stablehlo.select %1972, %555, %2556 : tensor<i1>, tensor<768xbf16>
    %2558 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2559 = stablehlo.divide %914, %2558 : tensor<768x768xbf16>
    %2560 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2561 = stablehlo.multiply %2559, %2560 : tensor<768x768xbf16>
    %2562 = stablehlo.select %1972, %914, %2561 : tensor<i1>, tensor<768x768xbf16>
    %2563 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2564 = stablehlo.divide %890, %2563 : tensor<768xbf16>
    %2565 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2566 = stablehlo.multiply %2564, %2565 : tensor<768xbf16>
    %2567 = stablehlo.select %1972, %890, %2566 : tensor<i1>, tensor<768xbf16>
    %2568 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2569 = stablehlo.divide %866, %2568 : tensor<768x768xbf16>
    %2570 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2571 = stablehlo.multiply %2569, %2570 : tensor<768x768xbf16>
    %2572 = stablehlo.select %1972, %866, %2571 : tensor<i1>, tensor<768x768xbf16>
    %2573 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2574 = stablehlo.divide %842, %2573 : tensor<768xbf16>
    %2575 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2576 = stablehlo.multiply %2574, %2575 : tensor<768xbf16>
    %2577 = stablehlo.select %1972, %842, %2576 : tensor<i1>, tensor<768xbf16>
    %2578 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2579 = stablehlo.divide %818, %2578 : tensor<768x768xbf16>
    %2580 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2581 = stablehlo.multiply %2579, %2580 : tensor<768x768xbf16>
    %2582 = stablehlo.select %1972, %818, %2581 : tensor<i1>, tensor<768x768xbf16>
    %2583 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2584 = stablehlo.divide %794, %2583 : tensor<768xbf16>
    %2585 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2586 = stablehlo.multiply %2584, %2585 : tensor<768xbf16>
    %2587 = stablehlo.select %1972, %794, %2586 : tensor<i1>, tensor<768xbf16>
    %2588 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2589 = stablehlo.divide %770, %2588 : tensor<768x768xbf16>
    %2590 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2591 = stablehlo.multiply %2589, %2590 : tensor<768x768xbf16>
    %2592 = stablehlo.select %1972, %770, %2591 : tensor<i1>, tensor<768x768xbf16>
    %2593 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2594 = stablehlo.divide %746, %2593 : tensor<768xbf16>
    %2595 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2596 = stablehlo.multiply %2594, %2595 : tensor<768xbf16>
    %2597 = stablehlo.select %1972, %746, %2596 : tensor<i1>, tensor<768xbf16>
    %2598 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2599 = stablehlo.divide %722, %2598 : tensor<768xbf16>
    %2600 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2601 = stablehlo.multiply %2599, %2600 : tensor<768xbf16>
    %2602 = stablehlo.select %1972, %722, %2601 : tensor<i1>, tensor<768xbf16>
    %2603 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2604 = stablehlo.divide %698, %2603 : tensor<768xbf16>
    %2605 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2606 = stablehlo.multiply %2604, %2605 : tensor<768xbf16>
    %2607 = stablehlo.select %1972, %698, %2606 : tensor<i1>, tensor<768xbf16>
    %2608 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2609 = stablehlo.divide %674, %2608 : tensor<3072x768xbf16>
    %2610 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2611 = stablehlo.multiply %2609, %2610 : tensor<3072x768xbf16>
    %2612 = stablehlo.select %1972, %674, %2611 : tensor<i1>, tensor<3072x768xbf16>
    %2613 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2614 = stablehlo.divide %650, %2613 : tensor<3072xbf16>
    %2615 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2616 = stablehlo.multiply %2614, %2615 : tensor<3072xbf16>
    %2617 = stablehlo.select %1972, %650, %2616 : tensor<i1>, tensor<3072xbf16>
    %2618 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2619 = stablehlo.divide %626, %2618 : tensor<768x3072xbf16>
    %2620 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2621 = stablehlo.multiply %2619, %2620 : tensor<768x3072xbf16>
    %2622 = stablehlo.select %1972, %626, %2621 : tensor<i1>, tensor<768x3072xbf16>
    %2623 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2624 = stablehlo.divide %602, %2623 : tensor<768xbf16>
    %2625 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2626 = stablehlo.multiply %2624, %2625 : tensor<768xbf16>
    %2627 = stablehlo.select %1972, %602, %2626 : tensor<i1>, tensor<768xbf16>
    %2628 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2629 = stablehlo.divide %578, %2628 : tensor<768xbf16>
    %2630 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2631 = stablehlo.multiply %2629, %2630 : tensor<768xbf16>
    %2632 = stablehlo.select %1972, %578, %2631 : tensor<i1>, tensor<768xbf16>
    %2633 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2634 = stablehlo.divide %554, %2633 : tensor<768xbf16>
    %2635 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2636 = stablehlo.multiply %2634, %2635 : tensor<768xbf16>
    %2637 = stablehlo.select %1972, %554, %2636 : tensor<i1>, tensor<768xbf16>
    %2638 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2639 = stablehlo.divide %913, %2638 : tensor<768x768xbf16>
    %2640 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2641 = stablehlo.multiply %2639, %2640 : tensor<768x768xbf16>
    %2642 = stablehlo.select %1972, %913, %2641 : tensor<i1>, tensor<768x768xbf16>
    %2643 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2644 = stablehlo.divide %889, %2643 : tensor<768xbf16>
    %2645 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2646 = stablehlo.multiply %2644, %2645 : tensor<768xbf16>
    %2647 = stablehlo.select %1972, %889, %2646 : tensor<i1>, tensor<768xbf16>
    %2648 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2649 = stablehlo.divide %865, %2648 : tensor<768x768xbf16>
    %2650 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2651 = stablehlo.multiply %2649, %2650 : tensor<768x768xbf16>
    %2652 = stablehlo.select %1972, %865, %2651 : tensor<i1>, tensor<768x768xbf16>
    %2653 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2654 = stablehlo.divide %841, %2653 : tensor<768xbf16>
    %2655 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2656 = stablehlo.multiply %2654, %2655 : tensor<768xbf16>
    %2657 = stablehlo.select %1972, %841, %2656 : tensor<i1>, tensor<768xbf16>
    %2658 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2659 = stablehlo.divide %817, %2658 : tensor<768x768xbf16>
    %2660 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2661 = stablehlo.multiply %2659, %2660 : tensor<768x768xbf16>
    %2662 = stablehlo.select %1972, %817, %2661 : tensor<i1>, tensor<768x768xbf16>
    %2663 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2664 = stablehlo.divide %793, %2663 : tensor<768xbf16>
    %2665 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2666 = stablehlo.multiply %2664, %2665 : tensor<768xbf16>
    %2667 = stablehlo.select %1972, %793, %2666 : tensor<i1>, tensor<768xbf16>
    %2668 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2669 = stablehlo.divide %769, %2668 : tensor<768x768xbf16>
    %2670 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2671 = stablehlo.multiply %2669, %2670 : tensor<768x768xbf16>
    %2672 = stablehlo.select %1972, %769, %2671 : tensor<i1>, tensor<768x768xbf16>
    %2673 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2674 = stablehlo.divide %745, %2673 : tensor<768xbf16>
    %2675 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2676 = stablehlo.multiply %2674, %2675 : tensor<768xbf16>
    %2677 = stablehlo.select %1972, %745, %2676 : tensor<i1>, tensor<768xbf16>
    %2678 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2679 = stablehlo.divide %721, %2678 : tensor<768xbf16>
    %2680 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2681 = stablehlo.multiply %2679, %2680 : tensor<768xbf16>
    %2682 = stablehlo.select %1972, %721, %2681 : tensor<i1>, tensor<768xbf16>
    %2683 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2684 = stablehlo.divide %697, %2683 : tensor<768xbf16>
    %2685 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2686 = stablehlo.multiply %2684, %2685 : tensor<768xbf16>
    %2687 = stablehlo.select %1972, %697, %2686 : tensor<i1>, tensor<768xbf16>
    %2688 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2689 = stablehlo.divide %673, %2688 : tensor<3072x768xbf16>
    %2690 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2691 = stablehlo.multiply %2689, %2690 : tensor<3072x768xbf16>
    %2692 = stablehlo.select %1972, %673, %2691 : tensor<i1>, tensor<3072x768xbf16>
    %2693 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2694 = stablehlo.divide %649, %2693 : tensor<3072xbf16>
    %2695 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2696 = stablehlo.multiply %2694, %2695 : tensor<3072xbf16>
    %2697 = stablehlo.select %1972, %649, %2696 : tensor<i1>, tensor<3072xbf16>
    %2698 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2699 = stablehlo.divide %625, %2698 : tensor<768x3072xbf16>
    %2700 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2701 = stablehlo.multiply %2699, %2700 : tensor<768x3072xbf16>
    %2702 = stablehlo.select %1972, %625, %2701 : tensor<i1>, tensor<768x3072xbf16>
    %2703 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2704 = stablehlo.divide %601, %2703 : tensor<768xbf16>
    %2705 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2706 = stablehlo.multiply %2704, %2705 : tensor<768xbf16>
    %2707 = stablehlo.select %1972, %601, %2706 : tensor<i1>, tensor<768xbf16>
    %2708 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2709 = stablehlo.divide %577, %2708 : tensor<768xbf16>
    %2710 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2711 = stablehlo.multiply %2709, %2710 : tensor<768xbf16>
    %2712 = stablehlo.select %1972, %577, %2711 : tensor<i1>, tensor<768xbf16>
    %2713 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2714 = stablehlo.divide %553, %2713 : tensor<768xbf16>
    %2715 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2716 = stablehlo.multiply %2714, %2715 : tensor<768xbf16>
    %2717 = stablehlo.select %1972, %553, %2716 : tensor<i1>, tensor<768xbf16>
    %2718 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2719 = stablehlo.divide %912, %2718 : tensor<768x768xbf16>
    %2720 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2721 = stablehlo.multiply %2719, %2720 : tensor<768x768xbf16>
    %2722 = stablehlo.select %1972, %912, %2721 : tensor<i1>, tensor<768x768xbf16>
    %2723 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2724 = stablehlo.divide %888, %2723 : tensor<768xbf16>
    %2725 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2726 = stablehlo.multiply %2724, %2725 : tensor<768xbf16>
    %2727 = stablehlo.select %1972, %888, %2726 : tensor<i1>, tensor<768xbf16>
    %2728 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2729 = stablehlo.divide %864, %2728 : tensor<768x768xbf16>
    %2730 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2731 = stablehlo.multiply %2729, %2730 : tensor<768x768xbf16>
    %2732 = stablehlo.select %1972, %864, %2731 : tensor<i1>, tensor<768x768xbf16>
    %2733 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2734 = stablehlo.divide %840, %2733 : tensor<768xbf16>
    %2735 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2736 = stablehlo.multiply %2734, %2735 : tensor<768xbf16>
    %2737 = stablehlo.select %1972, %840, %2736 : tensor<i1>, tensor<768xbf16>
    %2738 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2739 = stablehlo.divide %816, %2738 : tensor<768x768xbf16>
    %2740 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2741 = stablehlo.multiply %2739, %2740 : tensor<768x768xbf16>
    %2742 = stablehlo.select %1972, %816, %2741 : tensor<i1>, tensor<768x768xbf16>
    %2743 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2744 = stablehlo.divide %792, %2743 : tensor<768xbf16>
    %2745 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2746 = stablehlo.multiply %2744, %2745 : tensor<768xbf16>
    %2747 = stablehlo.select %1972, %792, %2746 : tensor<i1>, tensor<768xbf16>
    %2748 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2749 = stablehlo.divide %768, %2748 : tensor<768x768xbf16>
    %2750 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2751 = stablehlo.multiply %2749, %2750 : tensor<768x768xbf16>
    %2752 = stablehlo.select %1972, %768, %2751 : tensor<i1>, tensor<768x768xbf16>
    %2753 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2754 = stablehlo.divide %744, %2753 : tensor<768xbf16>
    %2755 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2756 = stablehlo.multiply %2754, %2755 : tensor<768xbf16>
    %2757 = stablehlo.select %1972, %744, %2756 : tensor<i1>, tensor<768xbf16>
    %2758 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2759 = stablehlo.divide %720, %2758 : tensor<768xbf16>
    %2760 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2761 = stablehlo.multiply %2759, %2760 : tensor<768xbf16>
    %2762 = stablehlo.select %1972, %720, %2761 : tensor<i1>, tensor<768xbf16>
    %2763 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2764 = stablehlo.divide %696, %2763 : tensor<768xbf16>
    %2765 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2766 = stablehlo.multiply %2764, %2765 : tensor<768xbf16>
    %2767 = stablehlo.select %1972, %696, %2766 : tensor<i1>, tensor<768xbf16>
    %2768 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2769 = stablehlo.divide %672, %2768 : tensor<3072x768xbf16>
    %2770 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2771 = stablehlo.multiply %2769, %2770 : tensor<3072x768xbf16>
    %2772 = stablehlo.select %1972, %672, %2771 : tensor<i1>, tensor<3072x768xbf16>
    %2773 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2774 = stablehlo.divide %648, %2773 : tensor<3072xbf16>
    %2775 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2776 = stablehlo.multiply %2774, %2775 : tensor<3072xbf16>
    %2777 = stablehlo.select %1972, %648, %2776 : tensor<i1>, tensor<3072xbf16>
    %2778 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2779 = stablehlo.divide %624, %2778 : tensor<768x3072xbf16>
    %2780 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2781 = stablehlo.multiply %2779, %2780 : tensor<768x3072xbf16>
    %2782 = stablehlo.select %1972, %624, %2781 : tensor<i1>, tensor<768x3072xbf16>
    %2783 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2784 = stablehlo.divide %600, %2783 : tensor<768xbf16>
    %2785 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2786 = stablehlo.multiply %2784, %2785 : tensor<768xbf16>
    %2787 = stablehlo.select %1972, %600, %2786 : tensor<i1>, tensor<768xbf16>
    %2788 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2789 = stablehlo.divide %576, %2788 : tensor<768xbf16>
    %2790 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2791 = stablehlo.multiply %2789, %2790 : tensor<768xbf16>
    %2792 = stablehlo.select %1972, %576, %2791 : tensor<i1>, tensor<768xbf16>
    %2793 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2794 = stablehlo.divide %552, %2793 : tensor<768xbf16>
    %2795 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2796 = stablehlo.multiply %2794, %2795 : tensor<768xbf16>
    %2797 = stablehlo.select %1972, %552, %2796 : tensor<i1>, tensor<768xbf16>
    %2798 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2799 = stablehlo.divide %911, %2798 : tensor<768x768xbf16>
    %2800 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2801 = stablehlo.multiply %2799, %2800 : tensor<768x768xbf16>
    %2802 = stablehlo.select %1972, %911, %2801 : tensor<i1>, tensor<768x768xbf16>
    %2803 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2804 = stablehlo.divide %887, %2803 : tensor<768xbf16>
    %2805 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2806 = stablehlo.multiply %2804, %2805 : tensor<768xbf16>
    %2807 = stablehlo.select %1972, %887, %2806 : tensor<i1>, tensor<768xbf16>
    %2808 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2809 = stablehlo.divide %863, %2808 : tensor<768x768xbf16>
    %2810 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2811 = stablehlo.multiply %2809, %2810 : tensor<768x768xbf16>
    %2812 = stablehlo.select %1972, %863, %2811 : tensor<i1>, tensor<768x768xbf16>
    %2813 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2814 = stablehlo.divide %839, %2813 : tensor<768xbf16>
    %2815 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2816 = stablehlo.multiply %2814, %2815 : tensor<768xbf16>
    %2817 = stablehlo.select %1972, %839, %2816 : tensor<i1>, tensor<768xbf16>
    %2818 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2819 = stablehlo.divide %815, %2818 : tensor<768x768xbf16>
    %2820 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2821 = stablehlo.multiply %2819, %2820 : tensor<768x768xbf16>
    %2822 = stablehlo.select %1972, %815, %2821 : tensor<i1>, tensor<768x768xbf16>
    %2823 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2824 = stablehlo.divide %791, %2823 : tensor<768xbf16>
    %2825 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2826 = stablehlo.multiply %2824, %2825 : tensor<768xbf16>
    %2827 = stablehlo.select %1972, %791, %2826 : tensor<i1>, tensor<768xbf16>
    %2828 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2829 = stablehlo.divide %767, %2828 : tensor<768x768xbf16>
    %2830 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2831 = stablehlo.multiply %2829, %2830 : tensor<768x768xbf16>
    %2832 = stablehlo.select %1972, %767, %2831 : tensor<i1>, tensor<768x768xbf16>
    %2833 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2834 = stablehlo.divide %743, %2833 : tensor<768xbf16>
    %2835 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2836 = stablehlo.multiply %2834, %2835 : tensor<768xbf16>
    %2837 = stablehlo.select %1972, %743, %2836 : tensor<i1>, tensor<768xbf16>
    %2838 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2839 = stablehlo.divide %719, %2838 : tensor<768xbf16>
    %2840 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2841 = stablehlo.multiply %2839, %2840 : tensor<768xbf16>
    %2842 = stablehlo.select %1972, %719, %2841 : tensor<i1>, tensor<768xbf16>
    %2843 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2844 = stablehlo.divide %695, %2843 : tensor<768xbf16>
    %2845 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2846 = stablehlo.multiply %2844, %2845 : tensor<768xbf16>
    %2847 = stablehlo.select %1972, %695, %2846 : tensor<i1>, tensor<768xbf16>
    %2848 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2849 = stablehlo.divide %671, %2848 : tensor<3072x768xbf16>
    %2850 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2851 = stablehlo.multiply %2849, %2850 : tensor<3072x768xbf16>
    %2852 = stablehlo.select %1972, %671, %2851 : tensor<i1>, tensor<3072x768xbf16>
    %2853 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2854 = stablehlo.divide %647, %2853 : tensor<3072xbf16>
    %2855 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2856 = stablehlo.multiply %2854, %2855 : tensor<3072xbf16>
    %2857 = stablehlo.select %1972, %647, %2856 : tensor<i1>, tensor<3072xbf16>
    %2858 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2859 = stablehlo.divide %623, %2858 : tensor<768x3072xbf16>
    %2860 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2861 = stablehlo.multiply %2859, %2860 : tensor<768x3072xbf16>
    %2862 = stablehlo.select %1972, %623, %2861 : tensor<i1>, tensor<768x3072xbf16>
    %2863 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2864 = stablehlo.divide %599, %2863 : tensor<768xbf16>
    %2865 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2866 = stablehlo.multiply %2864, %2865 : tensor<768xbf16>
    %2867 = stablehlo.select %1972, %599, %2866 : tensor<i1>, tensor<768xbf16>
    %2868 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2869 = stablehlo.divide %575, %2868 : tensor<768xbf16>
    %2870 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2871 = stablehlo.multiply %2869, %2870 : tensor<768xbf16>
    %2872 = stablehlo.select %1972, %575, %2871 : tensor<i1>, tensor<768xbf16>
    %2873 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2874 = stablehlo.divide %551, %2873 : tensor<768xbf16>
    %2875 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2876 = stablehlo.multiply %2874, %2875 : tensor<768xbf16>
    %2877 = stablehlo.select %1972, %551, %2876 : tensor<i1>, tensor<768xbf16>
    %2878 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2879 = stablehlo.divide %910, %2878 : tensor<768x768xbf16>
    %2880 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2881 = stablehlo.multiply %2879, %2880 : tensor<768x768xbf16>
    %2882 = stablehlo.select %1972, %910, %2881 : tensor<i1>, tensor<768x768xbf16>
    %2883 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2884 = stablehlo.divide %886, %2883 : tensor<768xbf16>
    %2885 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2886 = stablehlo.multiply %2884, %2885 : tensor<768xbf16>
    %2887 = stablehlo.select %1972, %886, %2886 : tensor<i1>, tensor<768xbf16>
    %2888 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2889 = stablehlo.divide %862, %2888 : tensor<768x768xbf16>
    %2890 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2891 = stablehlo.multiply %2889, %2890 : tensor<768x768xbf16>
    %2892 = stablehlo.select %1972, %862, %2891 : tensor<i1>, tensor<768x768xbf16>
    %2893 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2894 = stablehlo.divide %838, %2893 : tensor<768xbf16>
    %2895 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2896 = stablehlo.multiply %2894, %2895 : tensor<768xbf16>
    %2897 = stablehlo.select %1972, %838, %2896 : tensor<i1>, tensor<768xbf16>
    %2898 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2899 = stablehlo.divide %814, %2898 : tensor<768x768xbf16>
    %2900 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2901 = stablehlo.multiply %2899, %2900 : tensor<768x768xbf16>
    %2902 = stablehlo.select %1972, %814, %2901 : tensor<i1>, tensor<768x768xbf16>
    %2903 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2904 = stablehlo.divide %790, %2903 : tensor<768xbf16>
    %2905 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2906 = stablehlo.multiply %2904, %2905 : tensor<768xbf16>
    %2907 = stablehlo.select %1972, %790, %2906 : tensor<i1>, tensor<768xbf16>
    %2908 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2909 = stablehlo.divide %766, %2908 : tensor<768x768xbf16>
    %2910 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2911 = stablehlo.multiply %2909, %2910 : tensor<768x768xbf16>
    %2912 = stablehlo.select %1972, %766, %2911 : tensor<i1>, tensor<768x768xbf16>
    %2913 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2914 = stablehlo.divide %742, %2913 : tensor<768xbf16>
    %2915 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2916 = stablehlo.multiply %2914, %2915 : tensor<768xbf16>
    %2917 = stablehlo.select %1972, %742, %2916 : tensor<i1>, tensor<768xbf16>
    %2918 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2919 = stablehlo.divide %718, %2918 : tensor<768xbf16>
    %2920 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2921 = stablehlo.multiply %2919, %2920 : tensor<768xbf16>
    %2922 = stablehlo.select %1972, %718, %2921 : tensor<i1>, tensor<768xbf16>
    %2923 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2924 = stablehlo.divide %694, %2923 : tensor<768xbf16>
    %2925 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2926 = stablehlo.multiply %2924, %2925 : tensor<768xbf16>
    %2927 = stablehlo.select %1972, %694, %2926 : tensor<i1>, tensor<768xbf16>
    %2928 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2929 = stablehlo.divide %670, %2928 : tensor<3072x768xbf16>
    %2930 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %2931 = stablehlo.multiply %2929, %2930 : tensor<3072x768xbf16>
    %2932 = stablehlo.select %1972, %670, %2931 : tensor<i1>, tensor<3072x768xbf16>
    %2933 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2934 = stablehlo.divide %646, %2933 : tensor<3072xbf16>
    %2935 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %2936 = stablehlo.multiply %2934, %2935 : tensor<3072xbf16>
    %2937 = stablehlo.select %1972, %646, %2936 : tensor<i1>, tensor<3072xbf16>
    %2938 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2939 = stablehlo.divide %622, %2938 : tensor<768x3072xbf16>
    %2940 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %2941 = stablehlo.multiply %2939, %2940 : tensor<768x3072xbf16>
    %2942 = stablehlo.select %1972, %622, %2941 : tensor<i1>, tensor<768x3072xbf16>
    %2943 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2944 = stablehlo.divide %598, %2943 : tensor<768xbf16>
    %2945 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2946 = stablehlo.multiply %2944, %2945 : tensor<768xbf16>
    %2947 = stablehlo.select %1972, %598, %2946 : tensor<i1>, tensor<768xbf16>
    %2948 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2949 = stablehlo.divide %574, %2948 : tensor<768xbf16>
    %2950 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2951 = stablehlo.multiply %2949, %2950 : tensor<768xbf16>
    %2952 = stablehlo.select %1972, %574, %2951 : tensor<i1>, tensor<768xbf16>
    %2953 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2954 = stablehlo.divide %550, %2953 : tensor<768xbf16>
    %2955 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2956 = stablehlo.multiply %2954, %2955 : tensor<768xbf16>
    %2957 = stablehlo.select %1972, %550, %2956 : tensor<i1>, tensor<768xbf16>
    %2958 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2959 = stablehlo.divide %520, %2958 : tensor<768x768xbf16>
    %2960 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %2961 = stablehlo.multiply %2959, %2960 : tensor<768x768xbf16>
    %2962 = stablehlo.select %1972, %520, %2961 : tensor<i1>, tensor<768x768xbf16>
    %2963 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2964 = stablehlo.divide %516, %2963 : tensor<768xbf16>
    %2965 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2966 = stablehlo.multiply %2964, %2965 : tensor<768xbf16>
    %2967 = stablehlo.select %1972, %516, %2966 : tensor<i1>, tensor<768xbf16>
    %2968 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2969 = stablehlo.divide %480, %2968 : tensor<768xbf16>
    %2970 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2971 = stablehlo.multiply %2969, %2970 : tensor<768xbf16>
    %2972 = stablehlo.select %1972, %480, %2971 : tensor<i1>, tensor<768xbf16>
    %2973 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2974 = stablehlo.divide %474, %2973 : tensor<768xbf16>
    %2975 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2976 = stablehlo.multiply %2974, %2975 : tensor<768xbf16>
    %2977 = stablehlo.select %1972, %474, %2976 : tensor<i1>, tensor<768xbf16>
    %2978 = stablehlo.broadcast_in_dim %1971, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %2979 = stablehlo.divide %469, %2978 : tensor<30522xbf16>
    %2980 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %2981 = stablehlo.multiply %2979, %2980 : tensor<30522xbf16>
    %2982 = stablehlo.select %1972, %469, %2981 : tensor<i1>, tensor<30522xbf16>
    %cst_499 = stablehlo.constant dense<1.000980e-01> : tensor<bf16>
    %2983 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %2984 = stablehlo.multiply %2983, %1977 : tensor<30522x768xbf16>
    %2985 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %2986 = stablehlo.multiply %2985, %arg203 : tensor<30522x768xbf16>
    %2987 = stablehlo.add %2984, %2986 : tensor<30522x768xbf16>
    %2988 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %2989 = stablehlo.multiply %2988, %1982 : tensor<512x768xbf16>
    %2990 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %2991 = stablehlo.multiply %2990, %arg204 : tensor<512x768xbf16>
    %2992 = stablehlo.add %2989, %2991 : tensor<512x768xbf16>
    %2993 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %2994 = stablehlo.multiply %2993, %1987 : tensor<2x768xbf16>
    %2995 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %2996 = stablehlo.multiply %2995, %arg205 : tensor<2x768xbf16>
    %2997 = stablehlo.add %2994, %2996 : tensor<2x768xbf16>
    %2998 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %2999 = stablehlo.multiply %2998, %1992 : tensor<768xbf16>
    %3000 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3001 = stablehlo.multiply %3000, %arg206 : tensor<768xbf16>
    %3002 = stablehlo.add %2999, %3001 : tensor<768xbf16>
    %3003 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3004 = stablehlo.multiply %3003, %1997 : tensor<768xbf16>
    %3005 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3006 = stablehlo.multiply %3005, %arg207 : tensor<768xbf16>
    %3007 = stablehlo.add %3004, %3006 : tensor<768xbf16>
    %3008 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3009 = stablehlo.multiply %3008, %2002 : tensor<768x768xbf16>
    %3010 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3011 = stablehlo.multiply %3010, %arg208 : tensor<768x768xbf16>
    %3012 = stablehlo.add %3009, %3011 : tensor<768x768xbf16>
    %3013 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3014 = stablehlo.multiply %3013, %2007 : tensor<768xbf16>
    %3015 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3016 = stablehlo.multiply %3015, %arg209 : tensor<768xbf16>
    %3017 = stablehlo.add %3014, %3016 : tensor<768xbf16>
    %3018 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3019 = stablehlo.multiply %3018, %2012 : tensor<768x768xbf16>
    %3020 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3021 = stablehlo.multiply %3020, %arg210 : tensor<768x768xbf16>
    %3022 = stablehlo.add %3019, %3021 : tensor<768x768xbf16>
    %3023 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3024 = stablehlo.multiply %3023, %2017 : tensor<768xbf16>
    %3025 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3026 = stablehlo.multiply %3025, %arg211 : tensor<768xbf16>
    %3027 = stablehlo.add %3024, %3026 : tensor<768xbf16>
    %3028 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3029 = stablehlo.multiply %3028, %2022 : tensor<768x768xbf16>
    %3030 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3031 = stablehlo.multiply %3030, %arg212 : tensor<768x768xbf16>
    %3032 = stablehlo.add %3029, %3031 : tensor<768x768xbf16>
    %3033 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3034 = stablehlo.multiply %3033, %2027 : tensor<768xbf16>
    %3035 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3036 = stablehlo.multiply %3035, %arg213 : tensor<768xbf16>
    %3037 = stablehlo.add %3034, %3036 : tensor<768xbf16>
    %3038 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3039 = stablehlo.multiply %3038, %2032 : tensor<768x768xbf16>
    %3040 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3041 = stablehlo.multiply %3040, %arg214 : tensor<768x768xbf16>
    %3042 = stablehlo.add %3039, %3041 : tensor<768x768xbf16>
    %3043 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3044 = stablehlo.multiply %3043, %2037 : tensor<768xbf16>
    %3045 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3046 = stablehlo.multiply %3045, %arg215 : tensor<768xbf16>
    %3047 = stablehlo.add %3044, %3046 : tensor<768xbf16>
    %3048 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3049 = stablehlo.multiply %3048, %2042 : tensor<768xbf16>
    %3050 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3051 = stablehlo.multiply %3050, %arg216 : tensor<768xbf16>
    %3052 = stablehlo.add %3049, %3051 : tensor<768xbf16>
    %3053 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3054 = stablehlo.multiply %3053, %2047 : tensor<768xbf16>
    %3055 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3056 = stablehlo.multiply %3055, %arg217 : tensor<768xbf16>
    %3057 = stablehlo.add %3054, %3056 : tensor<768xbf16>
    %3058 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3059 = stablehlo.multiply %3058, %2052 : tensor<3072x768xbf16>
    %3060 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3061 = stablehlo.multiply %3060, %arg218 : tensor<3072x768xbf16>
    %3062 = stablehlo.add %3059, %3061 : tensor<3072x768xbf16>
    %3063 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3064 = stablehlo.multiply %3063, %2057 : tensor<3072xbf16>
    %3065 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3066 = stablehlo.multiply %3065, %arg219 : tensor<3072xbf16>
    %3067 = stablehlo.add %3064, %3066 : tensor<3072xbf16>
    %3068 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3069 = stablehlo.multiply %3068, %2062 : tensor<768x3072xbf16>
    %3070 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3071 = stablehlo.multiply %3070, %arg220 : tensor<768x3072xbf16>
    %3072 = stablehlo.add %3069, %3071 : tensor<768x3072xbf16>
    %3073 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3074 = stablehlo.multiply %3073, %2067 : tensor<768xbf16>
    %3075 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3076 = stablehlo.multiply %3075, %arg221 : tensor<768xbf16>
    %3077 = stablehlo.add %3074, %3076 : tensor<768xbf16>
    %3078 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3079 = stablehlo.multiply %3078, %2072 : tensor<768xbf16>
    %3080 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3081 = stablehlo.multiply %3080, %arg222 : tensor<768xbf16>
    %3082 = stablehlo.add %3079, %3081 : tensor<768xbf16>
    %3083 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3084 = stablehlo.multiply %3083, %2077 : tensor<768xbf16>
    %3085 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3086 = stablehlo.multiply %3085, %arg223 : tensor<768xbf16>
    %3087 = stablehlo.add %3084, %3086 : tensor<768xbf16>
    %3088 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3089 = stablehlo.multiply %3088, %2082 : tensor<768x768xbf16>
    %3090 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3091 = stablehlo.multiply %3090, %arg224 : tensor<768x768xbf16>
    %3092 = stablehlo.add %3089, %3091 : tensor<768x768xbf16>
    %3093 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3094 = stablehlo.multiply %3093, %2087 : tensor<768xbf16>
    %3095 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3096 = stablehlo.multiply %3095, %arg225 : tensor<768xbf16>
    %3097 = stablehlo.add %3094, %3096 : tensor<768xbf16>
    %3098 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3099 = stablehlo.multiply %3098, %2092 : tensor<768x768xbf16>
    %3100 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3101 = stablehlo.multiply %3100, %arg226 : tensor<768x768xbf16>
    %3102 = stablehlo.add %3099, %3101 : tensor<768x768xbf16>
    %3103 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3104 = stablehlo.multiply %3103, %2097 : tensor<768xbf16>
    %3105 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3106 = stablehlo.multiply %3105, %arg227 : tensor<768xbf16>
    %3107 = stablehlo.add %3104, %3106 : tensor<768xbf16>
    %3108 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3109 = stablehlo.multiply %3108, %2102 : tensor<768x768xbf16>
    %3110 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3111 = stablehlo.multiply %3110, %arg228 : tensor<768x768xbf16>
    %3112 = stablehlo.add %3109, %3111 : tensor<768x768xbf16>
    %3113 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3114 = stablehlo.multiply %3113, %2107 : tensor<768xbf16>
    %3115 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3116 = stablehlo.multiply %3115, %arg229 : tensor<768xbf16>
    %3117 = stablehlo.add %3114, %3116 : tensor<768xbf16>
    %3118 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3119 = stablehlo.multiply %3118, %2112 : tensor<768x768xbf16>
    %3120 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3121 = stablehlo.multiply %3120, %arg230 : tensor<768x768xbf16>
    %3122 = stablehlo.add %3119, %3121 : tensor<768x768xbf16>
    %3123 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3124 = stablehlo.multiply %3123, %2117 : tensor<768xbf16>
    %3125 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3126 = stablehlo.multiply %3125, %arg231 : tensor<768xbf16>
    %3127 = stablehlo.add %3124, %3126 : tensor<768xbf16>
    %3128 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3129 = stablehlo.multiply %3128, %2122 : tensor<768xbf16>
    %3130 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3131 = stablehlo.multiply %3130, %arg232 : tensor<768xbf16>
    %3132 = stablehlo.add %3129, %3131 : tensor<768xbf16>
    %3133 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3134 = stablehlo.multiply %3133, %2127 : tensor<768xbf16>
    %3135 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3136 = stablehlo.multiply %3135, %arg233 : tensor<768xbf16>
    %3137 = stablehlo.add %3134, %3136 : tensor<768xbf16>
    %3138 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3139 = stablehlo.multiply %3138, %2132 : tensor<3072x768xbf16>
    %3140 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3141 = stablehlo.multiply %3140, %arg234 : tensor<3072x768xbf16>
    %3142 = stablehlo.add %3139, %3141 : tensor<3072x768xbf16>
    %3143 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3144 = stablehlo.multiply %3143, %2137 : tensor<3072xbf16>
    %3145 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3146 = stablehlo.multiply %3145, %arg235 : tensor<3072xbf16>
    %3147 = stablehlo.add %3144, %3146 : tensor<3072xbf16>
    %3148 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3149 = stablehlo.multiply %3148, %2142 : tensor<768x3072xbf16>
    %3150 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3151 = stablehlo.multiply %3150, %arg236 : tensor<768x3072xbf16>
    %3152 = stablehlo.add %3149, %3151 : tensor<768x3072xbf16>
    %3153 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3154 = stablehlo.multiply %3153, %2147 : tensor<768xbf16>
    %3155 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3156 = stablehlo.multiply %3155, %arg237 : tensor<768xbf16>
    %3157 = stablehlo.add %3154, %3156 : tensor<768xbf16>
    %3158 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3159 = stablehlo.multiply %3158, %2152 : tensor<768xbf16>
    %3160 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3161 = stablehlo.multiply %3160, %arg238 : tensor<768xbf16>
    %3162 = stablehlo.add %3159, %3161 : tensor<768xbf16>
    %3163 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3164 = stablehlo.multiply %3163, %2157 : tensor<768xbf16>
    %3165 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3166 = stablehlo.multiply %3165, %arg239 : tensor<768xbf16>
    %3167 = stablehlo.add %3164, %3166 : tensor<768xbf16>
    %3168 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3169 = stablehlo.multiply %3168, %2162 : tensor<768x768xbf16>
    %3170 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3171 = stablehlo.multiply %3170, %arg240 : tensor<768x768xbf16>
    %3172 = stablehlo.add %3169, %3171 : tensor<768x768xbf16>
    %3173 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3174 = stablehlo.multiply %3173, %2167 : tensor<768xbf16>
    %3175 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3176 = stablehlo.multiply %3175, %arg241 : tensor<768xbf16>
    %3177 = stablehlo.add %3174, %3176 : tensor<768xbf16>
    %3178 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3179 = stablehlo.multiply %3178, %2172 : tensor<768x768xbf16>
    %3180 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3181 = stablehlo.multiply %3180, %arg242 : tensor<768x768xbf16>
    %3182 = stablehlo.add %3179, %3181 : tensor<768x768xbf16>
    %3183 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3184 = stablehlo.multiply %3183, %2177 : tensor<768xbf16>
    %3185 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3186 = stablehlo.multiply %3185, %arg243 : tensor<768xbf16>
    %3187 = stablehlo.add %3184, %3186 : tensor<768xbf16>
    %3188 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3189 = stablehlo.multiply %3188, %2182 : tensor<768x768xbf16>
    %3190 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3191 = stablehlo.multiply %3190, %arg244 : tensor<768x768xbf16>
    %3192 = stablehlo.add %3189, %3191 : tensor<768x768xbf16>
    %3193 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3194 = stablehlo.multiply %3193, %2187 : tensor<768xbf16>
    %3195 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3196 = stablehlo.multiply %3195, %arg245 : tensor<768xbf16>
    %3197 = stablehlo.add %3194, %3196 : tensor<768xbf16>
    %3198 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3199 = stablehlo.multiply %3198, %2192 : tensor<768x768xbf16>
    %3200 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3201 = stablehlo.multiply %3200, %arg246 : tensor<768x768xbf16>
    %3202 = stablehlo.add %3199, %3201 : tensor<768x768xbf16>
    %3203 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3204 = stablehlo.multiply %3203, %2197 : tensor<768xbf16>
    %3205 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3206 = stablehlo.multiply %3205, %arg247 : tensor<768xbf16>
    %3207 = stablehlo.add %3204, %3206 : tensor<768xbf16>
    %3208 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3209 = stablehlo.multiply %3208, %2202 : tensor<768xbf16>
    %3210 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3211 = stablehlo.multiply %3210, %arg248 : tensor<768xbf16>
    %3212 = stablehlo.add %3209, %3211 : tensor<768xbf16>
    %3213 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3214 = stablehlo.multiply %3213, %2207 : tensor<768xbf16>
    %3215 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3216 = stablehlo.multiply %3215, %arg249 : tensor<768xbf16>
    %3217 = stablehlo.add %3214, %3216 : tensor<768xbf16>
    %3218 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3219 = stablehlo.multiply %3218, %2212 : tensor<3072x768xbf16>
    %3220 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3221 = stablehlo.multiply %3220, %arg250 : tensor<3072x768xbf16>
    %3222 = stablehlo.add %3219, %3221 : tensor<3072x768xbf16>
    %3223 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3224 = stablehlo.multiply %3223, %2217 : tensor<3072xbf16>
    %3225 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3226 = stablehlo.multiply %3225, %arg251 : tensor<3072xbf16>
    %3227 = stablehlo.add %3224, %3226 : tensor<3072xbf16>
    %3228 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3229 = stablehlo.multiply %3228, %2222 : tensor<768x3072xbf16>
    %3230 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3231 = stablehlo.multiply %3230, %arg252 : tensor<768x3072xbf16>
    %3232 = stablehlo.add %3229, %3231 : tensor<768x3072xbf16>
    %3233 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3234 = stablehlo.multiply %3233, %2227 : tensor<768xbf16>
    %3235 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3236 = stablehlo.multiply %3235, %arg253 : tensor<768xbf16>
    %3237 = stablehlo.add %3234, %3236 : tensor<768xbf16>
    %3238 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3239 = stablehlo.multiply %3238, %2232 : tensor<768xbf16>
    %3240 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3241 = stablehlo.multiply %3240, %arg254 : tensor<768xbf16>
    %3242 = stablehlo.add %3239, %3241 : tensor<768xbf16>
    %3243 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3244 = stablehlo.multiply %3243, %2237 : tensor<768xbf16>
    %3245 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3246 = stablehlo.multiply %3245, %arg255 : tensor<768xbf16>
    %3247 = stablehlo.add %3244, %3246 : tensor<768xbf16>
    %3248 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3249 = stablehlo.multiply %3248, %2242 : tensor<768x768xbf16>
    %3250 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3251 = stablehlo.multiply %3250, %arg256 : tensor<768x768xbf16>
    %3252 = stablehlo.add %3249, %3251 : tensor<768x768xbf16>
    %3253 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3254 = stablehlo.multiply %3253, %2247 : tensor<768xbf16>
    %3255 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3256 = stablehlo.multiply %3255, %arg257 : tensor<768xbf16>
    %3257 = stablehlo.add %3254, %3256 : tensor<768xbf16>
    %3258 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3259 = stablehlo.multiply %3258, %2252 : tensor<768x768xbf16>
    %3260 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3261 = stablehlo.multiply %3260, %arg258 : tensor<768x768xbf16>
    %3262 = stablehlo.add %3259, %3261 : tensor<768x768xbf16>
    %3263 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3264 = stablehlo.multiply %3263, %2257 : tensor<768xbf16>
    %3265 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3266 = stablehlo.multiply %3265, %arg259 : tensor<768xbf16>
    %3267 = stablehlo.add %3264, %3266 : tensor<768xbf16>
    %3268 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3269 = stablehlo.multiply %3268, %2262 : tensor<768x768xbf16>
    %3270 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3271 = stablehlo.multiply %3270, %arg260 : tensor<768x768xbf16>
    %3272 = stablehlo.add %3269, %3271 : tensor<768x768xbf16>
    %3273 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3274 = stablehlo.multiply %3273, %2267 : tensor<768xbf16>
    %3275 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3276 = stablehlo.multiply %3275, %arg261 : tensor<768xbf16>
    %3277 = stablehlo.add %3274, %3276 : tensor<768xbf16>
    %3278 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3279 = stablehlo.multiply %3278, %2272 : tensor<768x768xbf16>
    %3280 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3281 = stablehlo.multiply %3280, %arg262 : tensor<768x768xbf16>
    %3282 = stablehlo.add %3279, %3281 : tensor<768x768xbf16>
    %3283 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3284 = stablehlo.multiply %3283, %2277 : tensor<768xbf16>
    %3285 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3286 = stablehlo.multiply %3285, %arg263 : tensor<768xbf16>
    %3287 = stablehlo.add %3284, %3286 : tensor<768xbf16>
    %3288 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3289 = stablehlo.multiply %3288, %2282 : tensor<768xbf16>
    %3290 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3291 = stablehlo.multiply %3290, %arg264 : tensor<768xbf16>
    %3292 = stablehlo.add %3289, %3291 : tensor<768xbf16>
    %3293 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3294 = stablehlo.multiply %3293, %2287 : tensor<768xbf16>
    %3295 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3296 = stablehlo.multiply %3295, %arg265 : tensor<768xbf16>
    %3297 = stablehlo.add %3294, %3296 : tensor<768xbf16>
    %3298 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3299 = stablehlo.multiply %3298, %2292 : tensor<3072x768xbf16>
    %3300 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3301 = stablehlo.multiply %3300, %arg266 : tensor<3072x768xbf16>
    %3302 = stablehlo.add %3299, %3301 : tensor<3072x768xbf16>
    %3303 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3304 = stablehlo.multiply %3303, %2297 : tensor<3072xbf16>
    %3305 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3306 = stablehlo.multiply %3305, %arg267 : tensor<3072xbf16>
    %3307 = stablehlo.add %3304, %3306 : tensor<3072xbf16>
    %3308 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3309 = stablehlo.multiply %3308, %2302 : tensor<768x3072xbf16>
    %3310 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3311 = stablehlo.multiply %3310, %arg268 : tensor<768x3072xbf16>
    %3312 = stablehlo.add %3309, %3311 : tensor<768x3072xbf16>
    %3313 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3314 = stablehlo.multiply %3313, %2307 : tensor<768xbf16>
    %3315 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3316 = stablehlo.multiply %3315, %arg269 : tensor<768xbf16>
    %3317 = stablehlo.add %3314, %3316 : tensor<768xbf16>
    %3318 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3319 = stablehlo.multiply %3318, %2312 : tensor<768xbf16>
    %3320 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3321 = stablehlo.multiply %3320, %arg270 : tensor<768xbf16>
    %3322 = stablehlo.add %3319, %3321 : tensor<768xbf16>
    %3323 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3324 = stablehlo.multiply %3323, %2317 : tensor<768xbf16>
    %3325 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3326 = stablehlo.multiply %3325, %arg271 : tensor<768xbf16>
    %3327 = stablehlo.add %3324, %3326 : tensor<768xbf16>
    %3328 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3329 = stablehlo.multiply %3328, %2322 : tensor<768x768xbf16>
    %3330 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3331 = stablehlo.multiply %3330, %arg272 : tensor<768x768xbf16>
    %3332 = stablehlo.add %3329, %3331 : tensor<768x768xbf16>
    %3333 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3334 = stablehlo.multiply %3333, %2327 : tensor<768xbf16>
    %3335 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3336 = stablehlo.multiply %3335, %arg273 : tensor<768xbf16>
    %3337 = stablehlo.add %3334, %3336 : tensor<768xbf16>
    %3338 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3339 = stablehlo.multiply %3338, %2332 : tensor<768x768xbf16>
    %3340 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3341 = stablehlo.multiply %3340, %arg274 : tensor<768x768xbf16>
    %3342 = stablehlo.add %3339, %3341 : tensor<768x768xbf16>
    %3343 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3344 = stablehlo.multiply %3343, %2337 : tensor<768xbf16>
    %3345 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3346 = stablehlo.multiply %3345, %arg275 : tensor<768xbf16>
    %3347 = stablehlo.add %3344, %3346 : tensor<768xbf16>
    %3348 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3349 = stablehlo.multiply %3348, %2342 : tensor<768x768xbf16>
    %3350 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3351 = stablehlo.multiply %3350, %arg276 : tensor<768x768xbf16>
    %3352 = stablehlo.add %3349, %3351 : tensor<768x768xbf16>
    %3353 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3354 = stablehlo.multiply %3353, %2347 : tensor<768xbf16>
    %3355 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3356 = stablehlo.multiply %3355, %arg277 : tensor<768xbf16>
    %3357 = stablehlo.add %3354, %3356 : tensor<768xbf16>
    %3358 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3359 = stablehlo.multiply %3358, %2352 : tensor<768x768xbf16>
    %3360 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3361 = stablehlo.multiply %3360, %arg278 : tensor<768x768xbf16>
    %3362 = stablehlo.add %3359, %3361 : tensor<768x768xbf16>
    %3363 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3364 = stablehlo.multiply %3363, %2357 : tensor<768xbf16>
    %3365 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3366 = stablehlo.multiply %3365, %arg279 : tensor<768xbf16>
    %3367 = stablehlo.add %3364, %3366 : tensor<768xbf16>
    %3368 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3369 = stablehlo.multiply %3368, %2362 : tensor<768xbf16>
    %3370 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3371 = stablehlo.multiply %3370, %arg280 : tensor<768xbf16>
    %3372 = stablehlo.add %3369, %3371 : tensor<768xbf16>
    %3373 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3374 = stablehlo.multiply %3373, %2367 : tensor<768xbf16>
    %3375 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3376 = stablehlo.multiply %3375, %arg281 : tensor<768xbf16>
    %3377 = stablehlo.add %3374, %3376 : tensor<768xbf16>
    %3378 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3379 = stablehlo.multiply %3378, %2372 : tensor<3072x768xbf16>
    %3380 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3381 = stablehlo.multiply %3380, %arg282 : tensor<3072x768xbf16>
    %3382 = stablehlo.add %3379, %3381 : tensor<3072x768xbf16>
    %3383 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3384 = stablehlo.multiply %3383, %2377 : tensor<3072xbf16>
    %3385 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3386 = stablehlo.multiply %3385, %arg283 : tensor<3072xbf16>
    %3387 = stablehlo.add %3384, %3386 : tensor<3072xbf16>
    %3388 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3389 = stablehlo.multiply %3388, %2382 : tensor<768x3072xbf16>
    %3390 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3391 = stablehlo.multiply %3390, %arg284 : tensor<768x3072xbf16>
    %3392 = stablehlo.add %3389, %3391 : tensor<768x3072xbf16>
    %3393 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3394 = stablehlo.multiply %3393, %2387 : tensor<768xbf16>
    %3395 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3396 = stablehlo.multiply %3395, %arg285 : tensor<768xbf16>
    %3397 = stablehlo.add %3394, %3396 : tensor<768xbf16>
    %3398 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3399 = stablehlo.multiply %3398, %2392 : tensor<768xbf16>
    %3400 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3401 = stablehlo.multiply %3400, %arg286 : tensor<768xbf16>
    %3402 = stablehlo.add %3399, %3401 : tensor<768xbf16>
    %3403 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3404 = stablehlo.multiply %3403, %2397 : tensor<768xbf16>
    %3405 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3406 = stablehlo.multiply %3405, %arg287 : tensor<768xbf16>
    %3407 = stablehlo.add %3404, %3406 : tensor<768xbf16>
    %3408 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3409 = stablehlo.multiply %3408, %2402 : tensor<768x768xbf16>
    %3410 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3411 = stablehlo.multiply %3410, %arg288 : tensor<768x768xbf16>
    %3412 = stablehlo.add %3409, %3411 : tensor<768x768xbf16>
    %3413 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3414 = stablehlo.multiply %3413, %2407 : tensor<768xbf16>
    %3415 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3416 = stablehlo.multiply %3415, %arg289 : tensor<768xbf16>
    %3417 = stablehlo.add %3414, %3416 : tensor<768xbf16>
    %3418 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3419 = stablehlo.multiply %3418, %2412 : tensor<768x768xbf16>
    %3420 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3421 = stablehlo.multiply %3420, %arg290 : tensor<768x768xbf16>
    %3422 = stablehlo.add %3419, %3421 : tensor<768x768xbf16>
    %3423 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3424 = stablehlo.multiply %3423, %2417 : tensor<768xbf16>
    %3425 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3426 = stablehlo.multiply %3425, %arg291 : tensor<768xbf16>
    %3427 = stablehlo.add %3424, %3426 : tensor<768xbf16>
    %3428 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3429 = stablehlo.multiply %3428, %2422 : tensor<768x768xbf16>
    %3430 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3431 = stablehlo.multiply %3430, %arg292 : tensor<768x768xbf16>
    %3432 = stablehlo.add %3429, %3431 : tensor<768x768xbf16>
    %3433 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3434 = stablehlo.multiply %3433, %2427 : tensor<768xbf16>
    %3435 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3436 = stablehlo.multiply %3435, %arg293 : tensor<768xbf16>
    %3437 = stablehlo.add %3434, %3436 : tensor<768xbf16>
    %3438 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3439 = stablehlo.multiply %3438, %2432 : tensor<768x768xbf16>
    %3440 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3441 = stablehlo.multiply %3440, %arg294 : tensor<768x768xbf16>
    %3442 = stablehlo.add %3439, %3441 : tensor<768x768xbf16>
    %3443 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3444 = stablehlo.multiply %3443, %2437 : tensor<768xbf16>
    %3445 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3446 = stablehlo.multiply %3445, %arg295 : tensor<768xbf16>
    %3447 = stablehlo.add %3444, %3446 : tensor<768xbf16>
    %3448 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3449 = stablehlo.multiply %3448, %2442 : tensor<768xbf16>
    %3450 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3451 = stablehlo.multiply %3450, %arg296 : tensor<768xbf16>
    %3452 = stablehlo.add %3449, %3451 : tensor<768xbf16>
    %3453 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3454 = stablehlo.multiply %3453, %2447 : tensor<768xbf16>
    %3455 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3456 = stablehlo.multiply %3455, %arg297 : tensor<768xbf16>
    %3457 = stablehlo.add %3454, %3456 : tensor<768xbf16>
    %3458 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3459 = stablehlo.multiply %3458, %2452 : tensor<3072x768xbf16>
    %3460 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3461 = stablehlo.multiply %3460, %arg298 : tensor<3072x768xbf16>
    %3462 = stablehlo.add %3459, %3461 : tensor<3072x768xbf16>
    %3463 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3464 = stablehlo.multiply %3463, %2457 : tensor<3072xbf16>
    %3465 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3466 = stablehlo.multiply %3465, %arg299 : tensor<3072xbf16>
    %3467 = stablehlo.add %3464, %3466 : tensor<3072xbf16>
    %3468 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3469 = stablehlo.multiply %3468, %2462 : tensor<768x3072xbf16>
    %3470 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3471 = stablehlo.multiply %3470, %arg300 : tensor<768x3072xbf16>
    %3472 = stablehlo.add %3469, %3471 : tensor<768x3072xbf16>
    %3473 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3474 = stablehlo.multiply %3473, %2467 : tensor<768xbf16>
    %3475 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3476 = stablehlo.multiply %3475, %arg301 : tensor<768xbf16>
    %3477 = stablehlo.add %3474, %3476 : tensor<768xbf16>
    %3478 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3479 = stablehlo.multiply %3478, %2472 : tensor<768xbf16>
    %3480 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3481 = stablehlo.multiply %3480, %arg302 : tensor<768xbf16>
    %3482 = stablehlo.add %3479, %3481 : tensor<768xbf16>
    %3483 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3484 = stablehlo.multiply %3483, %2477 : tensor<768xbf16>
    %3485 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3486 = stablehlo.multiply %3485, %arg303 : tensor<768xbf16>
    %3487 = stablehlo.add %3484, %3486 : tensor<768xbf16>
    %3488 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3489 = stablehlo.multiply %3488, %2482 : tensor<768x768xbf16>
    %3490 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3491 = stablehlo.multiply %3490, %arg304 : tensor<768x768xbf16>
    %3492 = stablehlo.add %3489, %3491 : tensor<768x768xbf16>
    %3493 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3494 = stablehlo.multiply %3493, %2487 : tensor<768xbf16>
    %3495 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3496 = stablehlo.multiply %3495, %arg305 : tensor<768xbf16>
    %3497 = stablehlo.add %3494, %3496 : tensor<768xbf16>
    %3498 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3499 = stablehlo.multiply %3498, %2492 : tensor<768x768xbf16>
    %3500 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3501 = stablehlo.multiply %3500, %arg306 : tensor<768x768xbf16>
    %3502 = stablehlo.add %3499, %3501 : tensor<768x768xbf16>
    %3503 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3504 = stablehlo.multiply %3503, %2497 : tensor<768xbf16>
    %3505 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3506 = stablehlo.multiply %3505, %arg307 : tensor<768xbf16>
    %3507 = stablehlo.add %3504, %3506 : tensor<768xbf16>
    %3508 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3509 = stablehlo.multiply %3508, %2502 : tensor<768x768xbf16>
    %3510 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3511 = stablehlo.multiply %3510, %arg308 : tensor<768x768xbf16>
    %3512 = stablehlo.add %3509, %3511 : tensor<768x768xbf16>
    %3513 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3514 = stablehlo.multiply %3513, %2507 : tensor<768xbf16>
    %3515 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3516 = stablehlo.multiply %3515, %arg309 : tensor<768xbf16>
    %3517 = stablehlo.add %3514, %3516 : tensor<768xbf16>
    %3518 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3519 = stablehlo.multiply %3518, %2512 : tensor<768x768xbf16>
    %3520 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3521 = stablehlo.multiply %3520, %arg310 : tensor<768x768xbf16>
    %3522 = stablehlo.add %3519, %3521 : tensor<768x768xbf16>
    %3523 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3524 = stablehlo.multiply %3523, %2517 : tensor<768xbf16>
    %3525 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3526 = stablehlo.multiply %3525, %arg311 : tensor<768xbf16>
    %3527 = stablehlo.add %3524, %3526 : tensor<768xbf16>
    %3528 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3529 = stablehlo.multiply %3528, %2522 : tensor<768xbf16>
    %3530 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3531 = stablehlo.multiply %3530, %arg312 : tensor<768xbf16>
    %3532 = stablehlo.add %3529, %3531 : tensor<768xbf16>
    %3533 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3534 = stablehlo.multiply %3533, %2527 : tensor<768xbf16>
    %3535 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3536 = stablehlo.multiply %3535, %arg313 : tensor<768xbf16>
    %3537 = stablehlo.add %3534, %3536 : tensor<768xbf16>
    %3538 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3539 = stablehlo.multiply %3538, %2532 : tensor<3072x768xbf16>
    %3540 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3541 = stablehlo.multiply %3540, %arg314 : tensor<3072x768xbf16>
    %3542 = stablehlo.add %3539, %3541 : tensor<3072x768xbf16>
    %3543 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3544 = stablehlo.multiply %3543, %2537 : tensor<3072xbf16>
    %3545 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3546 = stablehlo.multiply %3545, %arg315 : tensor<3072xbf16>
    %3547 = stablehlo.add %3544, %3546 : tensor<3072xbf16>
    %3548 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3549 = stablehlo.multiply %3548, %2542 : tensor<768x3072xbf16>
    %3550 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3551 = stablehlo.multiply %3550, %arg316 : tensor<768x3072xbf16>
    %3552 = stablehlo.add %3549, %3551 : tensor<768x3072xbf16>
    %3553 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3554 = stablehlo.multiply %3553, %2547 : tensor<768xbf16>
    %3555 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3556 = stablehlo.multiply %3555, %arg317 : tensor<768xbf16>
    %3557 = stablehlo.add %3554, %3556 : tensor<768xbf16>
    %3558 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3559 = stablehlo.multiply %3558, %2552 : tensor<768xbf16>
    %3560 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3561 = stablehlo.multiply %3560, %arg318 : tensor<768xbf16>
    %3562 = stablehlo.add %3559, %3561 : tensor<768xbf16>
    %3563 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3564 = stablehlo.multiply %3563, %2557 : tensor<768xbf16>
    %3565 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3566 = stablehlo.multiply %3565, %arg319 : tensor<768xbf16>
    %3567 = stablehlo.add %3564, %3566 : tensor<768xbf16>
    %3568 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3569 = stablehlo.multiply %3568, %2562 : tensor<768x768xbf16>
    %3570 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3571 = stablehlo.multiply %3570, %arg320 : tensor<768x768xbf16>
    %3572 = stablehlo.add %3569, %3571 : tensor<768x768xbf16>
    %3573 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3574 = stablehlo.multiply %3573, %2567 : tensor<768xbf16>
    %3575 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3576 = stablehlo.multiply %3575, %arg321 : tensor<768xbf16>
    %3577 = stablehlo.add %3574, %3576 : tensor<768xbf16>
    %3578 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3579 = stablehlo.multiply %3578, %2572 : tensor<768x768xbf16>
    %3580 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3581 = stablehlo.multiply %3580, %arg322 : tensor<768x768xbf16>
    %3582 = stablehlo.add %3579, %3581 : tensor<768x768xbf16>
    %3583 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3584 = stablehlo.multiply %3583, %2577 : tensor<768xbf16>
    %3585 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3586 = stablehlo.multiply %3585, %arg323 : tensor<768xbf16>
    %3587 = stablehlo.add %3584, %3586 : tensor<768xbf16>
    %3588 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3589 = stablehlo.multiply %3588, %2582 : tensor<768x768xbf16>
    %3590 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3591 = stablehlo.multiply %3590, %arg324 : tensor<768x768xbf16>
    %3592 = stablehlo.add %3589, %3591 : tensor<768x768xbf16>
    %3593 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3594 = stablehlo.multiply %3593, %2587 : tensor<768xbf16>
    %3595 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3596 = stablehlo.multiply %3595, %arg325 : tensor<768xbf16>
    %3597 = stablehlo.add %3594, %3596 : tensor<768xbf16>
    %3598 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3599 = stablehlo.multiply %3598, %2592 : tensor<768x768xbf16>
    %3600 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3601 = stablehlo.multiply %3600, %arg326 : tensor<768x768xbf16>
    %3602 = stablehlo.add %3599, %3601 : tensor<768x768xbf16>
    %3603 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3604 = stablehlo.multiply %3603, %2597 : tensor<768xbf16>
    %3605 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3606 = stablehlo.multiply %3605, %arg327 : tensor<768xbf16>
    %3607 = stablehlo.add %3604, %3606 : tensor<768xbf16>
    %3608 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3609 = stablehlo.multiply %3608, %2602 : tensor<768xbf16>
    %3610 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3611 = stablehlo.multiply %3610, %arg328 : tensor<768xbf16>
    %3612 = stablehlo.add %3609, %3611 : tensor<768xbf16>
    %3613 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3614 = stablehlo.multiply %3613, %2607 : tensor<768xbf16>
    %3615 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3616 = stablehlo.multiply %3615, %arg329 : tensor<768xbf16>
    %3617 = stablehlo.add %3614, %3616 : tensor<768xbf16>
    %3618 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3619 = stablehlo.multiply %3618, %2612 : tensor<3072x768xbf16>
    %3620 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3621 = stablehlo.multiply %3620, %arg330 : tensor<3072x768xbf16>
    %3622 = stablehlo.add %3619, %3621 : tensor<3072x768xbf16>
    %3623 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3624 = stablehlo.multiply %3623, %2617 : tensor<3072xbf16>
    %3625 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3626 = stablehlo.multiply %3625, %arg331 : tensor<3072xbf16>
    %3627 = stablehlo.add %3624, %3626 : tensor<3072xbf16>
    %3628 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3629 = stablehlo.multiply %3628, %2622 : tensor<768x3072xbf16>
    %3630 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3631 = stablehlo.multiply %3630, %arg332 : tensor<768x3072xbf16>
    %3632 = stablehlo.add %3629, %3631 : tensor<768x3072xbf16>
    %3633 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3634 = stablehlo.multiply %3633, %2627 : tensor<768xbf16>
    %3635 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3636 = stablehlo.multiply %3635, %arg333 : tensor<768xbf16>
    %3637 = stablehlo.add %3634, %3636 : tensor<768xbf16>
    %3638 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3639 = stablehlo.multiply %3638, %2632 : tensor<768xbf16>
    %3640 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3641 = stablehlo.multiply %3640, %arg334 : tensor<768xbf16>
    %3642 = stablehlo.add %3639, %3641 : tensor<768xbf16>
    %3643 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3644 = stablehlo.multiply %3643, %2637 : tensor<768xbf16>
    %3645 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3646 = stablehlo.multiply %3645, %arg335 : tensor<768xbf16>
    %3647 = stablehlo.add %3644, %3646 : tensor<768xbf16>
    %3648 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3649 = stablehlo.multiply %3648, %2642 : tensor<768x768xbf16>
    %3650 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3651 = stablehlo.multiply %3650, %arg336 : tensor<768x768xbf16>
    %3652 = stablehlo.add %3649, %3651 : tensor<768x768xbf16>
    %3653 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3654 = stablehlo.multiply %3653, %2647 : tensor<768xbf16>
    %3655 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3656 = stablehlo.multiply %3655, %arg337 : tensor<768xbf16>
    %3657 = stablehlo.add %3654, %3656 : tensor<768xbf16>
    %3658 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3659 = stablehlo.multiply %3658, %2652 : tensor<768x768xbf16>
    %3660 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3661 = stablehlo.multiply %3660, %arg338 : tensor<768x768xbf16>
    %3662 = stablehlo.add %3659, %3661 : tensor<768x768xbf16>
    %3663 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3664 = stablehlo.multiply %3663, %2657 : tensor<768xbf16>
    %3665 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3666 = stablehlo.multiply %3665, %arg339 : tensor<768xbf16>
    %3667 = stablehlo.add %3664, %3666 : tensor<768xbf16>
    %3668 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3669 = stablehlo.multiply %3668, %2662 : tensor<768x768xbf16>
    %3670 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3671 = stablehlo.multiply %3670, %arg340 : tensor<768x768xbf16>
    %3672 = stablehlo.add %3669, %3671 : tensor<768x768xbf16>
    %3673 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3674 = stablehlo.multiply %3673, %2667 : tensor<768xbf16>
    %3675 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3676 = stablehlo.multiply %3675, %arg341 : tensor<768xbf16>
    %3677 = stablehlo.add %3674, %3676 : tensor<768xbf16>
    %3678 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3679 = stablehlo.multiply %3678, %2672 : tensor<768x768xbf16>
    %3680 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3681 = stablehlo.multiply %3680, %arg342 : tensor<768x768xbf16>
    %3682 = stablehlo.add %3679, %3681 : tensor<768x768xbf16>
    %3683 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3684 = stablehlo.multiply %3683, %2677 : tensor<768xbf16>
    %3685 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3686 = stablehlo.multiply %3685, %arg343 : tensor<768xbf16>
    %3687 = stablehlo.add %3684, %3686 : tensor<768xbf16>
    %3688 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3689 = stablehlo.multiply %3688, %2682 : tensor<768xbf16>
    %3690 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3691 = stablehlo.multiply %3690, %arg344 : tensor<768xbf16>
    %3692 = stablehlo.add %3689, %3691 : tensor<768xbf16>
    %3693 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3694 = stablehlo.multiply %3693, %2687 : tensor<768xbf16>
    %3695 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3696 = stablehlo.multiply %3695, %arg345 : tensor<768xbf16>
    %3697 = stablehlo.add %3694, %3696 : tensor<768xbf16>
    %3698 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3699 = stablehlo.multiply %3698, %2692 : tensor<3072x768xbf16>
    %3700 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3701 = stablehlo.multiply %3700, %arg346 : tensor<3072x768xbf16>
    %3702 = stablehlo.add %3699, %3701 : tensor<3072x768xbf16>
    %3703 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3704 = stablehlo.multiply %3703, %2697 : tensor<3072xbf16>
    %3705 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3706 = stablehlo.multiply %3705, %arg347 : tensor<3072xbf16>
    %3707 = stablehlo.add %3704, %3706 : tensor<3072xbf16>
    %3708 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3709 = stablehlo.multiply %3708, %2702 : tensor<768x3072xbf16>
    %3710 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3711 = stablehlo.multiply %3710, %arg348 : tensor<768x3072xbf16>
    %3712 = stablehlo.add %3709, %3711 : tensor<768x3072xbf16>
    %3713 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3714 = stablehlo.multiply %3713, %2707 : tensor<768xbf16>
    %3715 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3716 = stablehlo.multiply %3715, %arg349 : tensor<768xbf16>
    %3717 = stablehlo.add %3714, %3716 : tensor<768xbf16>
    %3718 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3719 = stablehlo.multiply %3718, %2712 : tensor<768xbf16>
    %3720 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3721 = stablehlo.multiply %3720, %arg350 : tensor<768xbf16>
    %3722 = stablehlo.add %3719, %3721 : tensor<768xbf16>
    %3723 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3724 = stablehlo.multiply %3723, %2717 : tensor<768xbf16>
    %3725 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3726 = stablehlo.multiply %3725, %arg351 : tensor<768xbf16>
    %3727 = stablehlo.add %3724, %3726 : tensor<768xbf16>
    %3728 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3729 = stablehlo.multiply %3728, %2722 : tensor<768x768xbf16>
    %3730 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3731 = stablehlo.multiply %3730, %arg352 : tensor<768x768xbf16>
    %3732 = stablehlo.add %3729, %3731 : tensor<768x768xbf16>
    %3733 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3734 = stablehlo.multiply %3733, %2727 : tensor<768xbf16>
    %3735 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3736 = stablehlo.multiply %3735, %arg353 : tensor<768xbf16>
    %3737 = stablehlo.add %3734, %3736 : tensor<768xbf16>
    %3738 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3739 = stablehlo.multiply %3738, %2732 : tensor<768x768xbf16>
    %3740 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3741 = stablehlo.multiply %3740, %arg354 : tensor<768x768xbf16>
    %3742 = stablehlo.add %3739, %3741 : tensor<768x768xbf16>
    %3743 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3744 = stablehlo.multiply %3743, %2737 : tensor<768xbf16>
    %3745 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3746 = stablehlo.multiply %3745, %arg355 : tensor<768xbf16>
    %3747 = stablehlo.add %3744, %3746 : tensor<768xbf16>
    %3748 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3749 = stablehlo.multiply %3748, %2742 : tensor<768x768xbf16>
    %3750 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3751 = stablehlo.multiply %3750, %arg356 : tensor<768x768xbf16>
    %3752 = stablehlo.add %3749, %3751 : tensor<768x768xbf16>
    %3753 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3754 = stablehlo.multiply %3753, %2747 : tensor<768xbf16>
    %3755 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3756 = stablehlo.multiply %3755, %arg357 : tensor<768xbf16>
    %3757 = stablehlo.add %3754, %3756 : tensor<768xbf16>
    %3758 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3759 = stablehlo.multiply %3758, %2752 : tensor<768x768xbf16>
    %3760 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3761 = stablehlo.multiply %3760, %arg358 : tensor<768x768xbf16>
    %3762 = stablehlo.add %3759, %3761 : tensor<768x768xbf16>
    %3763 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3764 = stablehlo.multiply %3763, %2757 : tensor<768xbf16>
    %3765 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3766 = stablehlo.multiply %3765, %arg359 : tensor<768xbf16>
    %3767 = stablehlo.add %3764, %3766 : tensor<768xbf16>
    %3768 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3769 = stablehlo.multiply %3768, %2762 : tensor<768xbf16>
    %3770 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3771 = stablehlo.multiply %3770, %arg360 : tensor<768xbf16>
    %3772 = stablehlo.add %3769, %3771 : tensor<768xbf16>
    %3773 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3774 = stablehlo.multiply %3773, %2767 : tensor<768xbf16>
    %3775 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3776 = stablehlo.multiply %3775, %arg361 : tensor<768xbf16>
    %3777 = stablehlo.add %3774, %3776 : tensor<768xbf16>
    %3778 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3779 = stablehlo.multiply %3778, %2772 : tensor<3072x768xbf16>
    %3780 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3781 = stablehlo.multiply %3780, %arg362 : tensor<3072x768xbf16>
    %3782 = stablehlo.add %3779, %3781 : tensor<3072x768xbf16>
    %3783 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3784 = stablehlo.multiply %3783, %2777 : tensor<3072xbf16>
    %3785 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3786 = stablehlo.multiply %3785, %arg363 : tensor<3072xbf16>
    %3787 = stablehlo.add %3784, %3786 : tensor<3072xbf16>
    %3788 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3789 = stablehlo.multiply %3788, %2782 : tensor<768x3072xbf16>
    %3790 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3791 = stablehlo.multiply %3790, %arg364 : tensor<768x3072xbf16>
    %3792 = stablehlo.add %3789, %3791 : tensor<768x3072xbf16>
    %3793 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3794 = stablehlo.multiply %3793, %2787 : tensor<768xbf16>
    %3795 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3796 = stablehlo.multiply %3795, %arg365 : tensor<768xbf16>
    %3797 = stablehlo.add %3794, %3796 : tensor<768xbf16>
    %3798 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3799 = stablehlo.multiply %3798, %2792 : tensor<768xbf16>
    %3800 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3801 = stablehlo.multiply %3800, %arg366 : tensor<768xbf16>
    %3802 = stablehlo.add %3799, %3801 : tensor<768xbf16>
    %3803 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3804 = stablehlo.multiply %3803, %2797 : tensor<768xbf16>
    %3805 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3806 = stablehlo.multiply %3805, %arg367 : tensor<768xbf16>
    %3807 = stablehlo.add %3804, %3806 : tensor<768xbf16>
    %3808 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3809 = stablehlo.multiply %3808, %2802 : tensor<768x768xbf16>
    %3810 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3811 = stablehlo.multiply %3810, %arg368 : tensor<768x768xbf16>
    %3812 = stablehlo.add %3809, %3811 : tensor<768x768xbf16>
    %3813 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3814 = stablehlo.multiply %3813, %2807 : tensor<768xbf16>
    %3815 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3816 = stablehlo.multiply %3815, %arg369 : tensor<768xbf16>
    %3817 = stablehlo.add %3814, %3816 : tensor<768xbf16>
    %3818 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3819 = stablehlo.multiply %3818, %2812 : tensor<768x768xbf16>
    %3820 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3821 = stablehlo.multiply %3820, %arg370 : tensor<768x768xbf16>
    %3822 = stablehlo.add %3819, %3821 : tensor<768x768xbf16>
    %3823 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3824 = stablehlo.multiply %3823, %2817 : tensor<768xbf16>
    %3825 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3826 = stablehlo.multiply %3825, %arg371 : tensor<768xbf16>
    %3827 = stablehlo.add %3824, %3826 : tensor<768xbf16>
    %3828 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3829 = stablehlo.multiply %3828, %2822 : tensor<768x768xbf16>
    %3830 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3831 = stablehlo.multiply %3830, %arg372 : tensor<768x768xbf16>
    %3832 = stablehlo.add %3829, %3831 : tensor<768x768xbf16>
    %3833 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3834 = stablehlo.multiply %3833, %2827 : tensor<768xbf16>
    %3835 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3836 = stablehlo.multiply %3835, %arg373 : tensor<768xbf16>
    %3837 = stablehlo.add %3834, %3836 : tensor<768xbf16>
    %3838 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3839 = stablehlo.multiply %3838, %2832 : tensor<768x768xbf16>
    %3840 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3841 = stablehlo.multiply %3840, %arg374 : tensor<768x768xbf16>
    %3842 = stablehlo.add %3839, %3841 : tensor<768x768xbf16>
    %3843 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3844 = stablehlo.multiply %3843, %2837 : tensor<768xbf16>
    %3845 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3846 = stablehlo.multiply %3845, %arg375 : tensor<768xbf16>
    %3847 = stablehlo.add %3844, %3846 : tensor<768xbf16>
    %3848 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3849 = stablehlo.multiply %3848, %2842 : tensor<768xbf16>
    %3850 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3851 = stablehlo.multiply %3850, %arg376 : tensor<768xbf16>
    %3852 = stablehlo.add %3849, %3851 : tensor<768xbf16>
    %3853 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3854 = stablehlo.multiply %3853, %2847 : tensor<768xbf16>
    %3855 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3856 = stablehlo.multiply %3855, %arg377 : tensor<768xbf16>
    %3857 = stablehlo.add %3854, %3856 : tensor<768xbf16>
    %3858 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3859 = stablehlo.multiply %3858, %2852 : tensor<3072x768xbf16>
    %3860 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3861 = stablehlo.multiply %3860, %arg378 : tensor<3072x768xbf16>
    %3862 = stablehlo.add %3859, %3861 : tensor<3072x768xbf16>
    %3863 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3864 = stablehlo.multiply %3863, %2857 : tensor<3072xbf16>
    %3865 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3866 = stablehlo.multiply %3865, %arg379 : tensor<3072xbf16>
    %3867 = stablehlo.add %3864, %3866 : tensor<3072xbf16>
    %3868 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3869 = stablehlo.multiply %3868, %2862 : tensor<768x3072xbf16>
    %3870 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3871 = stablehlo.multiply %3870, %arg380 : tensor<768x3072xbf16>
    %3872 = stablehlo.add %3869, %3871 : tensor<768x3072xbf16>
    %3873 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3874 = stablehlo.multiply %3873, %2867 : tensor<768xbf16>
    %3875 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3876 = stablehlo.multiply %3875, %arg381 : tensor<768xbf16>
    %3877 = stablehlo.add %3874, %3876 : tensor<768xbf16>
    %3878 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3879 = stablehlo.multiply %3878, %2872 : tensor<768xbf16>
    %3880 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3881 = stablehlo.multiply %3880, %arg382 : tensor<768xbf16>
    %3882 = stablehlo.add %3879, %3881 : tensor<768xbf16>
    %3883 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3884 = stablehlo.multiply %3883, %2877 : tensor<768xbf16>
    %3885 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3886 = stablehlo.multiply %3885, %arg383 : tensor<768xbf16>
    %3887 = stablehlo.add %3884, %3886 : tensor<768xbf16>
    %3888 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3889 = stablehlo.multiply %3888, %2882 : tensor<768x768xbf16>
    %3890 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3891 = stablehlo.multiply %3890, %arg384 : tensor<768x768xbf16>
    %3892 = stablehlo.add %3889, %3891 : tensor<768x768xbf16>
    %3893 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3894 = stablehlo.multiply %3893, %2887 : tensor<768xbf16>
    %3895 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3896 = stablehlo.multiply %3895, %arg385 : tensor<768xbf16>
    %3897 = stablehlo.add %3894, %3896 : tensor<768xbf16>
    %3898 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3899 = stablehlo.multiply %3898, %2892 : tensor<768x768xbf16>
    %3900 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3901 = stablehlo.multiply %3900, %arg386 : tensor<768x768xbf16>
    %3902 = stablehlo.add %3899, %3901 : tensor<768x768xbf16>
    %3903 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3904 = stablehlo.multiply %3903, %2897 : tensor<768xbf16>
    %3905 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3906 = stablehlo.multiply %3905, %arg387 : tensor<768xbf16>
    %3907 = stablehlo.add %3904, %3906 : tensor<768xbf16>
    %3908 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3909 = stablehlo.multiply %3908, %2902 : tensor<768x768xbf16>
    %3910 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3911 = stablehlo.multiply %3910, %arg388 : tensor<768x768xbf16>
    %3912 = stablehlo.add %3909, %3911 : tensor<768x768xbf16>
    %3913 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3914 = stablehlo.multiply %3913, %2907 : tensor<768xbf16>
    %3915 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3916 = stablehlo.multiply %3915, %arg389 : tensor<768xbf16>
    %3917 = stablehlo.add %3914, %3916 : tensor<768xbf16>
    %3918 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3919 = stablehlo.multiply %3918, %2912 : tensor<768x768xbf16>
    %3920 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3921 = stablehlo.multiply %3920, %arg390 : tensor<768x768xbf16>
    %3922 = stablehlo.add %3919, %3921 : tensor<768x768xbf16>
    %3923 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3924 = stablehlo.multiply %3923, %2917 : tensor<768xbf16>
    %3925 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3926 = stablehlo.multiply %3925, %arg391 : tensor<768xbf16>
    %3927 = stablehlo.add %3924, %3926 : tensor<768xbf16>
    %3928 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3929 = stablehlo.multiply %3928, %2922 : tensor<768xbf16>
    %3930 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3931 = stablehlo.multiply %3930, %arg392 : tensor<768xbf16>
    %3932 = stablehlo.add %3929, %3931 : tensor<768xbf16>
    %3933 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3934 = stablehlo.multiply %3933, %2927 : tensor<768xbf16>
    %3935 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3936 = stablehlo.multiply %3935, %arg393 : tensor<768xbf16>
    %3937 = stablehlo.add %3934, %3936 : tensor<768xbf16>
    %3938 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3939 = stablehlo.multiply %3938, %2932 : tensor<3072x768xbf16>
    %3940 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %3941 = stablehlo.multiply %3940, %arg394 : tensor<3072x768xbf16>
    %3942 = stablehlo.add %3939, %3941 : tensor<3072x768xbf16>
    %3943 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3944 = stablehlo.multiply %3943, %2937 : tensor<3072xbf16>
    %3945 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %3946 = stablehlo.multiply %3945, %arg395 : tensor<3072xbf16>
    %3947 = stablehlo.add %3944, %3946 : tensor<3072xbf16>
    %3948 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3949 = stablehlo.multiply %3948, %2942 : tensor<768x3072xbf16>
    %3950 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %3951 = stablehlo.multiply %3950, %arg396 : tensor<768x3072xbf16>
    %3952 = stablehlo.add %3949, %3951 : tensor<768x3072xbf16>
    %3953 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3954 = stablehlo.multiply %3953, %2947 : tensor<768xbf16>
    %3955 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3956 = stablehlo.multiply %3955, %arg397 : tensor<768xbf16>
    %3957 = stablehlo.add %3954, %3956 : tensor<768xbf16>
    %3958 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3959 = stablehlo.multiply %3958, %2952 : tensor<768xbf16>
    %3960 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3961 = stablehlo.multiply %3960, %arg398 : tensor<768xbf16>
    %3962 = stablehlo.add %3959, %3961 : tensor<768xbf16>
    %3963 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3964 = stablehlo.multiply %3963, %2957 : tensor<768xbf16>
    %3965 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3966 = stablehlo.multiply %3965, %arg399 : tensor<768xbf16>
    %3967 = stablehlo.add %3964, %3966 : tensor<768xbf16>
    %3968 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3969 = stablehlo.multiply %3968, %2962 : tensor<768x768xbf16>
    %3970 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %3971 = stablehlo.multiply %3970, %arg400 : tensor<768x768xbf16>
    %3972 = stablehlo.add %3969, %3971 : tensor<768x768xbf16>
    %3973 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3974 = stablehlo.multiply %3973, %2967 : tensor<768xbf16>
    %3975 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3976 = stablehlo.multiply %3975, %arg401 : tensor<768xbf16>
    %3977 = stablehlo.add %3974, %3976 : tensor<768xbf16>
    %3978 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3979 = stablehlo.multiply %3978, %2972 : tensor<768xbf16>
    %3980 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3981 = stablehlo.multiply %3980, %arg402 : tensor<768xbf16>
    %3982 = stablehlo.add %3979, %3981 : tensor<768xbf16>
    %3983 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3984 = stablehlo.multiply %3983, %2977 : tensor<768xbf16>
    %3985 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %3986 = stablehlo.multiply %3985, %arg403 : tensor<768xbf16>
    %3987 = stablehlo.add %3984, %3986 : tensor<768xbf16>
    %3988 = stablehlo.broadcast_in_dim %cst_499, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %3989 = stablehlo.multiply %3988, %2982 : tensor<30522xbf16>
    %3990 = stablehlo.broadcast_in_dim %cst_18, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %3991 = stablehlo.multiply %3990, %arg404 : tensor<30522xbf16>
    %3992 = stablehlo.add %3989, %3991 : tensor<30522xbf16>
    %3993 = stablehlo.multiply %1977, %1977 : tensor<30522x768xbf16>
    %cst_500 = stablehlo.constant dense<9.994500e-04> : tensor<bf16>
    %3994 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %3995 = stablehlo.multiply %3994, %3993 : tensor<30522x768xbf16>
    %3996 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %3997 = stablehlo.multiply %3996, %arg405 : tensor<30522x768xbf16>
    %3998 = stablehlo.add %3995, %3997 : tensor<30522x768xbf16>
    %3999 = stablehlo.multiply %1982, %1982 : tensor<512x768xbf16>
    %4000 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %4001 = stablehlo.multiply %4000, %3999 : tensor<512x768xbf16>
    %4002 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %4003 = stablehlo.multiply %4002, %arg406 : tensor<512x768xbf16>
    %4004 = stablehlo.add %4001, %4003 : tensor<512x768xbf16>
    %4005 = stablehlo.multiply %1987, %1987 : tensor<2x768xbf16>
    %4006 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %4007 = stablehlo.multiply %4006, %4005 : tensor<2x768xbf16>
    %4008 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %4009 = stablehlo.multiply %4008, %arg407 : tensor<2x768xbf16>
    %4010 = stablehlo.add %4007, %4009 : tensor<2x768xbf16>
    %4011 = stablehlo.multiply %1992, %1992 : tensor<768xbf16>
    %4012 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4013 = stablehlo.multiply %4012, %4011 : tensor<768xbf16>
    %4014 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4015 = stablehlo.multiply %4014, %arg408 : tensor<768xbf16>
    %4016 = stablehlo.add %4013, %4015 : tensor<768xbf16>
    %4017 = stablehlo.multiply %1997, %1997 : tensor<768xbf16>
    %4018 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4019 = stablehlo.multiply %4018, %4017 : tensor<768xbf16>
    %4020 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4021 = stablehlo.multiply %4020, %arg409 : tensor<768xbf16>
    %4022 = stablehlo.add %4019, %4021 : tensor<768xbf16>
    %4023 = stablehlo.multiply %2002, %2002 : tensor<768x768xbf16>
    %4024 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4025 = stablehlo.multiply %4024, %4023 : tensor<768x768xbf16>
    %4026 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4027 = stablehlo.multiply %4026, %arg410 : tensor<768x768xbf16>
    %4028 = stablehlo.add %4025, %4027 : tensor<768x768xbf16>
    %4029 = stablehlo.multiply %2007, %2007 : tensor<768xbf16>
    %4030 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4031 = stablehlo.multiply %4030, %4029 : tensor<768xbf16>
    %4032 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4033 = stablehlo.multiply %4032, %arg411 : tensor<768xbf16>
    %4034 = stablehlo.add %4031, %4033 : tensor<768xbf16>
    %4035 = stablehlo.multiply %2012, %2012 : tensor<768x768xbf16>
    %4036 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4037 = stablehlo.multiply %4036, %4035 : tensor<768x768xbf16>
    %4038 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4039 = stablehlo.multiply %4038, %arg412 : tensor<768x768xbf16>
    %4040 = stablehlo.add %4037, %4039 : tensor<768x768xbf16>
    %4041 = stablehlo.multiply %2017, %2017 : tensor<768xbf16>
    %4042 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4043 = stablehlo.multiply %4042, %4041 : tensor<768xbf16>
    %4044 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4045 = stablehlo.multiply %4044, %arg413 : tensor<768xbf16>
    %4046 = stablehlo.add %4043, %4045 : tensor<768xbf16>
    %4047 = stablehlo.multiply %2022, %2022 : tensor<768x768xbf16>
    %4048 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4049 = stablehlo.multiply %4048, %4047 : tensor<768x768xbf16>
    %4050 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4051 = stablehlo.multiply %4050, %arg414 : tensor<768x768xbf16>
    %4052 = stablehlo.add %4049, %4051 : tensor<768x768xbf16>
    %4053 = stablehlo.multiply %2027, %2027 : tensor<768xbf16>
    %4054 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4055 = stablehlo.multiply %4054, %4053 : tensor<768xbf16>
    %4056 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4057 = stablehlo.multiply %4056, %arg415 : tensor<768xbf16>
    %4058 = stablehlo.add %4055, %4057 : tensor<768xbf16>
    %4059 = stablehlo.multiply %2032, %2032 : tensor<768x768xbf16>
    %4060 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4061 = stablehlo.multiply %4060, %4059 : tensor<768x768xbf16>
    %4062 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4063 = stablehlo.multiply %4062, %arg416 : tensor<768x768xbf16>
    %4064 = stablehlo.add %4061, %4063 : tensor<768x768xbf16>
    %4065 = stablehlo.multiply %2037, %2037 : tensor<768xbf16>
    %4066 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4067 = stablehlo.multiply %4066, %4065 : tensor<768xbf16>
    %4068 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4069 = stablehlo.multiply %4068, %arg417 : tensor<768xbf16>
    %4070 = stablehlo.add %4067, %4069 : tensor<768xbf16>
    %4071 = stablehlo.multiply %2042, %2042 : tensor<768xbf16>
    %4072 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4073 = stablehlo.multiply %4072, %4071 : tensor<768xbf16>
    %4074 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4075 = stablehlo.multiply %4074, %arg418 : tensor<768xbf16>
    %4076 = stablehlo.add %4073, %4075 : tensor<768xbf16>
    %4077 = stablehlo.multiply %2047, %2047 : tensor<768xbf16>
    %4078 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4079 = stablehlo.multiply %4078, %4077 : tensor<768xbf16>
    %4080 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4081 = stablehlo.multiply %4080, %arg419 : tensor<768xbf16>
    %4082 = stablehlo.add %4079, %4081 : tensor<768xbf16>
    %4083 = stablehlo.multiply %2052, %2052 : tensor<3072x768xbf16>
    %4084 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4085 = stablehlo.multiply %4084, %4083 : tensor<3072x768xbf16>
    %4086 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4087 = stablehlo.multiply %4086, %arg420 : tensor<3072x768xbf16>
    %4088 = stablehlo.add %4085, %4087 : tensor<3072x768xbf16>
    %4089 = stablehlo.multiply %2057, %2057 : tensor<3072xbf16>
    %4090 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4091 = stablehlo.multiply %4090, %4089 : tensor<3072xbf16>
    %4092 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4093 = stablehlo.multiply %4092, %arg421 : tensor<3072xbf16>
    %4094 = stablehlo.add %4091, %4093 : tensor<3072xbf16>
    %4095 = stablehlo.multiply %2062, %2062 : tensor<768x3072xbf16>
    %4096 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4097 = stablehlo.multiply %4096, %4095 : tensor<768x3072xbf16>
    %4098 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4099 = stablehlo.multiply %4098, %arg422 : tensor<768x3072xbf16>
    %4100 = stablehlo.add %4097, %4099 : tensor<768x3072xbf16>
    %4101 = stablehlo.multiply %2067, %2067 : tensor<768xbf16>
    %4102 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4103 = stablehlo.multiply %4102, %4101 : tensor<768xbf16>
    %4104 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4105 = stablehlo.multiply %4104, %arg423 : tensor<768xbf16>
    %4106 = stablehlo.add %4103, %4105 : tensor<768xbf16>
    %4107 = stablehlo.multiply %2072, %2072 : tensor<768xbf16>
    %4108 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4109 = stablehlo.multiply %4108, %4107 : tensor<768xbf16>
    %4110 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4111 = stablehlo.multiply %4110, %arg424 : tensor<768xbf16>
    %4112 = stablehlo.add %4109, %4111 : tensor<768xbf16>
    %4113 = stablehlo.multiply %2077, %2077 : tensor<768xbf16>
    %4114 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4115 = stablehlo.multiply %4114, %4113 : tensor<768xbf16>
    %4116 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4117 = stablehlo.multiply %4116, %arg425 : tensor<768xbf16>
    %4118 = stablehlo.add %4115, %4117 : tensor<768xbf16>
    %4119 = stablehlo.multiply %2082, %2082 : tensor<768x768xbf16>
    %4120 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4121 = stablehlo.multiply %4120, %4119 : tensor<768x768xbf16>
    %4122 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4123 = stablehlo.multiply %4122, %arg426 : tensor<768x768xbf16>
    %4124 = stablehlo.add %4121, %4123 : tensor<768x768xbf16>
    %4125 = stablehlo.multiply %2087, %2087 : tensor<768xbf16>
    %4126 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4127 = stablehlo.multiply %4126, %4125 : tensor<768xbf16>
    %4128 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4129 = stablehlo.multiply %4128, %arg427 : tensor<768xbf16>
    %4130 = stablehlo.add %4127, %4129 : tensor<768xbf16>
    %4131 = stablehlo.multiply %2092, %2092 : tensor<768x768xbf16>
    %4132 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4133 = stablehlo.multiply %4132, %4131 : tensor<768x768xbf16>
    %4134 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4135 = stablehlo.multiply %4134, %arg428 : tensor<768x768xbf16>
    %4136 = stablehlo.add %4133, %4135 : tensor<768x768xbf16>
    %4137 = stablehlo.multiply %2097, %2097 : tensor<768xbf16>
    %4138 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4139 = stablehlo.multiply %4138, %4137 : tensor<768xbf16>
    %4140 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4141 = stablehlo.multiply %4140, %arg429 : tensor<768xbf16>
    %4142 = stablehlo.add %4139, %4141 : tensor<768xbf16>
    %4143 = stablehlo.multiply %2102, %2102 : tensor<768x768xbf16>
    %4144 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4145 = stablehlo.multiply %4144, %4143 : tensor<768x768xbf16>
    %4146 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4147 = stablehlo.multiply %4146, %arg430 : tensor<768x768xbf16>
    %4148 = stablehlo.add %4145, %4147 : tensor<768x768xbf16>
    %4149 = stablehlo.multiply %2107, %2107 : tensor<768xbf16>
    %4150 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4151 = stablehlo.multiply %4150, %4149 : tensor<768xbf16>
    %4152 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4153 = stablehlo.multiply %4152, %arg431 : tensor<768xbf16>
    %4154 = stablehlo.add %4151, %4153 : tensor<768xbf16>
    %4155 = stablehlo.multiply %2112, %2112 : tensor<768x768xbf16>
    %4156 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4157 = stablehlo.multiply %4156, %4155 : tensor<768x768xbf16>
    %4158 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4159 = stablehlo.multiply %4158, %arg432 : tensor<768x768xbf16>
    %4160 = stablehlo.add %4157, %4159 : tensor<768x768xbf16>
    %4161 = stablehlo.multiply %2117, %2117 : tensor<768xbf16>
    %4162 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4163 = stablehlo.multiply %4162, %4161 : tensor<768xbf16>
    %4164 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4165 = stablehlo.multiply %4164, %arg433 : tensor<768xbf16>
    %4166 = stablehlo.add %4163, %4165 : tensor<768xbf16>
    %4167 = stablehlo.multiply %2122, %2122 : tensor<768xbf16>
    %4168 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4169 = stablehlo.multiply %4168, %4167 : tensor<768xbf16>
    %4170 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4171 = stablehlo.multiply %4170, %arg434 : tensor<768xbf16>
    %4172 = stablehlo.add %4169, %4171 : tensor<768xbf16>
    %4173 = stablehlo.multiply %2127, %2127 : tensor<768xbf16>
    %4174 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4175 = stablehlo.multiply %4174, %4173 : tensor<768xbf16>
    %4176 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4177 = stablehlo.multiply %4176, %arg435 : tensor<768xbf16>
    %4178 = stablehlo.add %4175, %4177 : tensor<768xbf16>
    %4179 = stablehlo.multiply %2132, %2132 : tensor<3072x768xbf16>
    %4180 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4181 = stablehlo.multiply %4180, %4179 : tensor<3072x768xbf16>
    %4182 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4183 = stablehlo.multiply %4182, %arg436 : tensor<3072x768xbf16>
    %4184 = stablehlo.add %4181, %4183 : tensor<3072x768xbf16>
    %4185 = stablehlo.multiply %2137, %2137 : tensor<3072xbf16>
    %4186 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4187 = stablehlo.multiply %4186, %4185 : tensor<3072xbf16>
    %4188 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4189 = stablehlo.multiply %4188, %arg437 : tensor<3072xbf16>
    %4190 = stablehlo.add %4187, %4189 : tensor<3072xbf16>
    %4191 = stablehlo.multiply %2142, %2142 : tensor<768x3072xbf16>
    %4192 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4193 = stablehlo.multiply %4192, %4191 : tensor<768x3072xbf16>
    %4194 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4195 = stablehlo.multiply %4194, %arg438 : tensor<768x3072xbf16>
    %4196 = stablehlo.add %4193, %4195 : tensor<768x3072xbf16>
    %4197 = stablehlo.multiply %2147, %2147 : tensor<768xbf16>
    %4198 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4199 = stablehlo.multiply %4198, %4197 : tensor<768xbf16>
    %4200 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4201 = stablehlo.multiply %4200, %arg439 : tensor<768xbf16>
    %4202 = stablehlo.add %4199, %4201 : tensor<768xbf16>
    %4203 = stablehlo.multiply %2152, %2152 : tensor<768xbf16>
    %4204 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4205 = stablehlo.multiply %4204, %4203 : tensor<768xbf16>
    %4206 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4207 = stablehlo.multiply %4206, %arg440 : tensor<768xbf16>
    %4208 = stablehlo.add %4205, %4207 : tensor<768xbf16>
    %4209 = stablehlo.multiply %2157, %2157 : tensor<768xbf16>
    %4210 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4211 = stablehlo.multiply %4210, %4209 : tensor<768xbf16>
    %4212 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4213 = stablehlo.multiply %4212, %arg441 : tensor<768xbf16>
    %4214 = stablehlo.add %4211, %4213 : tensor<768xbf16>
    %4215 = stablehlo.multiply %2162, %2162 : tensor<768x768xbf16>
    %4216 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4217 = stablehlo.multiply %4216, %4215 : tensor<768x768xbf16>
    %4218 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4219 = stablehlo.multiply %4218, %arg442 : tensor<768x768xbf16>
    %4220 = stablehlo.add %4217, %4219 : tensor<768x768xbf16>
    %4221 = stablehlo.multiply %2167, %2167 : tensor<768xbf16>
    %4222 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4223 = stablehlo.multiply %4222, %4221 : tensor<768xbf16>
    %4224 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4225 = stablehlo.multiply %4224, %arg443 : tensor<768xbf16>
    %4226 = stablehlo.add %4223, %4225 : tensor<768xbf16>
    %4227 = stablehlo.multiply %2172, %2172 : tensor<768x768xbf16>
    %4228 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4229 = stablehlo.multiply %4228, %4227 : tensor<768x768xbf16>
    %4230 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4231 = stablehlo.multiply %4230, %arg444 : tensor<768x768xbf16>
    %4232 = stablehlo.add %4229, %4231 : tensor<768x768xbf16>
    %4233 = stablehlo.multiply %2177, %2177 : tensor<768xbf16>
    %4234 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4235 = stablehlo.multiply %4234, %4233 : tensor<768xbf16>
    %4236 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4237 = stablehlo.multiply %4236, %arg445 : tensor<768xbf16>
    %4238 = stablehlo.add %4235, %4237 : tensor<768xbf16>
    %4239 = stablehlo.multiply %2182, %2182 : tensor<768x768xbf16>
    %4240 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4241 = stablehlo.multiply %4240, %4239 : tensor<768x768xbf16>
    %4242 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4243 = stablehlo.multiply %4242, %arg446 : tensor<768x768xbf16>
    %4244 = stablehlo.add %4241, %4243 : tensor<768x768xbf16>
    %4245 = stablehlo.multiply %2187, %2187 : tensor<768xbf16>
    %4246 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4247 = stablehlo.multiply %4246, %4245 : tensor<768xbf16>
    %4248 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4249 = stablehlo.multiply %4248, %arg447 : tensor<768xbf16>
    %4250 = stablehlo.add %4247, %4249 : tensor<768xbf16>
    %4251 = stablehlo.multiply %2192, %2192 : tensor<768x768xbf16>
    %4252 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4253 = stablehlo.multiply %4252, %4251 : tensor<768x768xbf16>
    %4254 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4255 = stablehlo.multiply %4254, %arg448 : tensor<768x768xbf16>
    %4256 = stablehlo.add %4253, %4255 : tensor<768x768xbf16>
    %4257 = stablehlo.multiply %2197, %2197 : tensor<768xbf16>
    %4258 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4259 = stablehlo.multiply %4258, %4257 : tensor<768xbf16>
    %4260 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4261 = stablehlo.multiply %4260, %arg449 : tensor<768xbf16>
    %4262 = stablehlo.add %4259, %4261 : tensor<768xbf16>
    %4263 = stablehlo.multiply %2202, %2202 : tensor<768xbf16>
    %4264 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4265 = stablehlo.multiply %4264, %4263 : tensor<768xbf16>
    %4266 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4267 = stablehlo.multiply %4266, %arg450 : tensor<768xbf16>
    %4268 = stablehlo.add %4265, %4267 : tensor<768xbf16>
    %4269 = stablehlo.multiply %2207, %2207 : tensor<768xbf16>
    %4270 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4271 = stablehlo.multiply %4270, %4269 : tensor<768xbf16>
    %4272 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4273 = stablehlo.multiply %4272, %arg451 : tensor<768xbf16>
    %4274 = stablehlo.add %4271, %4273 : tensor<768xbf16>
    %4275 = stablehlo.multiply %2212, %2212 : tensor<3072x768xbf16>
    %4276 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4277 = stablehlo.multiply %4276, %4275 : tensor<3072x768xbf16>
    %4278 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4279 = stablehlo.multiply %4278, %arg452 : tensor<3072x768xbf16>
    %4280 = stablehlo.add %4277, %4279 : tensor<3072x768xbf16>
    %4281 = stablehlo.multiply %2217, %2217 : tensor<3072xbf16>
    %4282 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4283 = stablehlo.multiply %4282, %4281 : tensor<3072xbf16>
    %4284 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4285 = stablehlo.multiply %4284, %arg453 : tensor<3072xbf16>
    %4286 = stablehlo.add %4283, %4285 : tensor<3072xbf16>
    %4287 = stablehlo.multiply %2222, %2222 : tensor<768x3072xbf16>
    %4288 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4289 = stablehlo.multiply %4288, %4287 : tensor<768x3072xbf16>
    %4290 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4291 = stablehlo.multiply %4290, %arg454 : tensor<768x3072xbf16>
    %4292 = stablehlo.add %4289, %4291 : tensor<768x3072xbf16>
    %4293 = stablehlo.multiply %2227, %2227 : tensor<768xbf16>
    %4294 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4295 = stablehlo.multiply %4294, %4293 : tensor<768xbf16>
    %4296 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4297 = stablehlo.multiply %4296, %arg455 : tensor<768xbf16>
    %4298 = stablehlo.add %4295, %4297 : tensor<768xbf16>
    %4299 = stablehlo.multiply %2232, %2232 : tensor<768xbf16>
    %4300 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4301 = stablehlo.multiply %4300, %4299 : tensor<768xbf16>
    %4302 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4303 = stablehlo.multiply %4302, %arg456 : tensor<768xbf16>
    %4304 = stablehlo.add %4301, %4303 : tensor<768xbf16>
    %4305 = stablehlo.multiply %2237, %2237 : tensor<768xbf16>
    %4306 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4307 = stablehlo.multiply %4306, %4305 : tensor<768xbf16>
    %4308 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4309 = stablehlo.multiply %4308, %arg457 : tensor<768xbf16>
    %4310 = stablehlo.add %4307, %4309 : tensor<768xbf16>
    %4311 = stablehlo.multiply %2242, %2242 : tensor<768x768xbf16>
    %4312 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4313 = stablehlo.multiply %4312, %4311 : tensor<768x768xbf16>
    %4314 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4315 = stablehlo.multiply %4314, %arg458 : tensor<768x768xbf16>
    %4316 = stablehlo.add %4313, %4315 : tensor<768x768xbf16>
    %4317 = stablehlo.multiply %2247, %2247 : tensor<768xbf16>
    %4318 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4319 = stablehlo.multiply %4318, %4317 : tensor<768xbf16>
    %4320 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4321 = stablehlo.multiply %4320, %arg459 : tensor<768xbf16>
    %4322 = stablehlo.add %4319, %4321 : tensor<768xbf16>
    %4323 = stablehlo.multiply %2252, %2252 : tensor<768x768xbf16>
    %4324 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4325 = stablehlo.multiply %4324, %4323 : tensor<768x768xbf16>
    %4326 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4327 = stablehlo.multiply %4326, %arg460 : tensor<768x768xbf16>
    %4328 = stablehlo.add %4325, %4327 : tensor<768x768xbf16>
    %4329 = stablehlo.multiply %2257, %2257 : tensor<768xbf16>
    %4330 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4331 = stablehlo.multiply %4330, %4329 : tensor<768xbf16>
    %4332 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4333 = stablehlo.multiply %4332, %arg461 : tensor<768xbf16>
    %4334 = stablehlo.add %4331, %4333 : tensor<768xbf16>
    %4335 = stablehlo.multiply %2262, %2262 : tensor<768x768xbf16>
    %4336 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4337 = stablehlo.multiply %4336, %4335 : tensor<768x768xbf16>
    %4338 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4339 = stablehlo.multiply %4338, %arg462 : tensor<768x768xbf16>
    %4340 = stablehlo.add %4337, %4339 : tensor<768x768xbf16>
    %4341 = stablehlo.multiply %2267, %2267 : tensor<768xbf16>
    %4342 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4343 = stablehlo.multiply %4342, %4341 : tensor<768xbf16>
    %4344 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4345 = stablehlo.multiply %4344, %arg463 : tensor<768xbf16>
    %4346 = stablehlo.add %4343, %4345 : tensor<768xbf16>
    %4347 = stablehlo.multiply %2272, %2272 : tensor<768x768xbf16>
    %4348 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4349 = stablehlo.multiply %4348, %4347 : tensor<768x768xbf16>
    %4350 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4351 = stablehlo.multiply %4350, %arg464 : tensor<768x768xbf16>
    %4352 = stablehlo.add %4349, %4351 : tensor<768x768xbf16>
    %4353 = stablehlo.multiply %2277, %2277 : tensor<768xbf16>
    %4354 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4355 = stablehlo.multiply %4354, %4353 : tensor<768xbf16>
    %4356 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4357 = stablehlo.multiply %4356, %arg465 : tensor<768xbf16>
    %4358 = stablehlo.add %4355, %4357 : tensor<768xbf16>
    %4359 = stablehlo.multiply %2282, %2282 : tensor<768xbf16>
    %4360 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4361 = stablehlo.multiply %4360, %4359 : tensor<768xbf16>
    %4362 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4363 = stablehlo.multiply %4362, %arg466 : tensor<768xbf16>
    %4364 = stablehlo.add %4361, %4363 : tensor<768xbf16>
    %4365 = stablehlo.multiply %2287, %2287 : tensor<768xbf16>
    %4366 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4367 = stablehlo.multiply %4366, %4365 : tensor<768xbf16>
    %4368 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4369 = stablehlo.multiply %4368, %arg467 : tensor<768xbf16>
    %4370 = stablehlo.add %4367, %4369 : tensor<768xbf16>
    %4371 = stablehlo.multiply %2292, %2292 : tensor<3072x768xbf16>
    %4372 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4373 = stablehlo.multiply %4372, %4371 : tensor<3072x768xbf16>
    %4374 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4375 = stablehlo.multiply %4374, %arg468 : tensor<3072x768xbf16>
    %4376 = stablehlo.add %4373, %4375 : tensor<3072x768xbf16>
    %4377 = stablehlo.multiply %2297, %2297 : tensor<3072xbf16>
    %4378 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4379 = stablehlo.multiply %4378, %4377 : tensor<3072xbf16>
    %4380 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4381 = stablehlo.multiply %4380, %arg469 : tensor<3072xbf16>
    %4382 = stablehlo.add %4379, %4381 : tensor<3072xbf16>
    %4383 = stablehlo.multiply %2302, %2302 : tensor<768x3072xbf16>
    %4384 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4385 = stablehlo.multiply %4384, %4383 : tensor<768x3072xbf16>
    %4386 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4387 = stablehlo.multiply %4386, %arg470 : tensor<768x3072xbf16>
    %4388 = stablehlo.add %4385, %4387 : tensor<768x3072xbf16>
    %4389 = stablehlo.multiply %2307, %2307 : tensor<768xbf16>
    %4390 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4391 = stablehlo.multiply %4390, %4389 : tensor<768xbf16>
    %4392 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4393 = stablehlo.multiply %4392, %arg471 : tensor<768xbf16>
    %4394 = stablehlo.add %4391, %4393 : tensor<768xbf16>
    %4395 = stablehlo.multiply %2312, %2312 : tensor<768xbf16>
    %4396 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4397 = stablehlo.multiply %4396, %4395 : tensor<768xbf16>
    %4398 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4399 = stablehlo.multiply %4398, %arg472 : tensor<768xbf16>
    %4400 = stablehlo.add %4397, %4399 : tensor<768xbf16>
    %4401 = stablehlo.multiply %2317, %2317 : tensor<768xbf16>
    %4402 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4403 = stablehlo.multiply %4402, %4401 : tensor<768xbf16>
    %4404 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4405 = stablehlo.multiply %4404, %arg473 : tensor<768xbf16>
    %4406 = stablehlo.add %4403, %4405 : tensor<768xbf16>
    %4407 = stablehlo.multiply %2322, %2322 : tensor<768x768xbf16>
    %4408 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4409 = stablehlo.multiply %4408, %4407 : tensor<768x768xbf16>
    %4410 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4411 = stablehlo.multiply %4410, %arg474 : tensor<768x768xbf16>
    %4412 = stablehlo.add %4409, %4411 : tensor<768x768xbf16>
    %4413 = stablehlo.multiply %2327, %2327 : tensor<768xbf16>
    %4414 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4415 = stablehlo.multiply %4414, %4413 : tensor<768xbf16>
    %4416 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4417 = stablehlo.multiply %4416, %arg475 : tensor<768xbf16>
    %4418 = stablehlo.add %4415, %4417 : tensor<768xbf16>
    %4419 = stablehlo.multiply %2332, %2332 : tensor<768x768xbf16>
    %4420 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4421 = stablehlo.multiply %4420, %4419 : tensor<768x768xbf16>
    %4422 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4423 = stablehlo.multiply %4422, %arg476 : tensor<768x768xbf16>
    %4424 = stablehlo.add %4421, %4423 : tensor<768x768xbf16>
    %4425 = stablehlo.multiply %2337, %2337 : tensor<768xbf16>
    %4426 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4427 = stablehlo.multiply %4426, %4425 : tensor<768xbf16>
    %4428 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4429 = stablehlo.multiply %4428, %arg477 : tensor<768xbf16>
    %4430 = stablehlo.add %4427, %4429 : tensor<768xbf16>
    %4431 = stablehlo.multiply %2342, %2342 : tensor<768x768xbf16>
    %4432 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4433 = stablehlo.multiply %4432, %4431 : tensor<768x768xbf16>
    %4434 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4435 = stablehlo.multiply %4434, %arg478 : tensor<768x768xbf16>
    %4436 = stablehlo.add %4433, %4435 : tensor<768x768xbf16>
    %4437 = stablehlo.multiply %2347, %2347 : tensor<768xbf16>
    %4438 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4439 = stablehlo.multiply %4438, %4437 : tensor<768xbf16>
    %4440 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4441 = stablehlo.multiply %4440, %arg479 : tensor<768xbf16>
    %4442 = stablehlo.add %4439, %4441 : tensor<768xbf16>
    %4443 = stablehlo.multiply %2352, %2352 : tensor<768x768xbf16>
    %4444 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4445 = stablehlo.multiply %4444, %4443 : tensor<768x768xbf16>
    %4446 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4447 = stablehlo.multiply %4446, %arg480 : tensor<768x768xbf16>
    %4448 = stablehlo.add %4445, %4447 : tensor<768x768xbf16>
    %4449 = stablehlo.multiply %2357, %2357 : tensor<768xbf16>
    %4450 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4451 = stablehlo.multiply %4450, %4449 : tensor<768xbf16>
    %4452 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4453 = stablehlo.multiply %4452, %arg481 : tensor<768xbf16>
    %4454 = stablehlo.add %4451, %4453 : tensor<768xbf16>
    %4455 = stablehlo.multiply %2362, %2362 : tensor<768xbf16>
    %4456 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4457 = stablehlo.multiply %4456, %4455 : tensor<768xbf16>
    %4458 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4459 = stablehlo.multiply %4458, %arg482 : tensor<768xbf16>
    %4460 = stablehlo.add %4457, %4459 : tensor<768xbf16>
    %4461 = stablehlo.multiply %2367, %2367 : tensor<768xbf16>
    %4462 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4463 = stablehlo.multiply %4462, %4461 : tensor<768xbf16>
    %4464 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4465 = stablehlo.multiply %4464, %arg483 : tensor<768xbf16>
    %4466 = stablehlo.add %4463, %4465 : tensor<768xbf16>
    %4467 = stablehlo.multiply %2372, %2372 : tensor<3072x768xbf16>
    %4468 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4469 = stablehlo.multiply %4468, %4467 : tensor<3072x768xbf16>
    %4470 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4471 = stablehlo.multiply %4470, %arg484 : tensor<3072x768xbf16>
    %4472 = stablehlo.add %4469, %4471 : tensor<3072x768xbf16>
    %4473 = stablehlo.multiply %2377, %2377 : tensor<3072xbf16>
    %4474 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4475 = stablehlo.multiply %4474, %4473 : tensor<3072xbf16>
    %4476 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4477 = stablehlo.multiply %4476, %arg485 : tensor<3072xbf16>
    %4478 = stablehlo.add %4475, %4477 : tensor<3072xbf16>
    %4479 = stablehlo.multiply %2382, %2382 : tensor<768x3072xbf16>
    %4480 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4481 = stablehlo.multiply %4480, %4479 : tensor<768x3072xbf16>
    %4482 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4483 = stablehlo.multiply %4482, %arg486 : tensor<768x3072xbf16>
    %4484 = stablehlo.add %4481, %4483 : tensor<768x3072xbf16>
    %4485 = stablehlo.multiply %2387, %2387 : tensor<768xbf16>
    %4486 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4487 = stablehlo.multiply %4486, %4485 : tensor<768xbf16>
    %4488 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4489 = stablehlo.multiply %4488, %arg487 : tensor<768xbf16>
    %4490 = stablehlo.add %4487, %4489 : tensor<768xbf16>
    %4491 = stablehlo.multiply %2392, %2392 : tensor<768xbf16>
    %4492 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4493 = stablehlo.multiply %4492, %4491 : tensor<768xbf16>
    %4494 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4495 = stablehlo.multiply %4494, %arg488 : tensor<768xbf16>
    %4496 = stablehlo.add %4493, %4495 : tensor<768xbf16>
    %4497 = stablehlo.multiply %2397, %2397 : tensor<768xbf16>
    %4498 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4499 = stablehlo.multiply %4498, %4497 : tensor<768xbf16>
    %4500 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4501 = stablehlo.multiply %4500, %arg489 : tensor<768xbf16>
    %4502 = stablehlo.add %4499, %4501 : tensor<768xbf16>
    %4503 = stablehlo.multiply %2402, %2402 : tensor<768x768xbf16>
    %4504 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4505 = stablehlo.multiply %4504, %4503 : tensor<768x768xbf16>
    %4506 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4507 = stablehlo.multiply %4506, %arg490 : tensor<768x768xbf16>
    %4508 = stablehlo.add %4505, %4507 : tensor<768x768xbf16>
    %4509 = stablehlo.multiply %2407, %2407 : tensor<768xbf16>
    %4510 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4511 = stablehlo.multiply %4510, %4509 : tensor<768xbf16>
    %4512 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4513 = stablehlo.multiply %4512, %arg491 : tensor<768xbf16>
    %4514 = stablehlo.add %4511, %4513 : tensor<768xbf16>
    %4515 = stablehlo.multiply %2412, %2412 : tensor<768x768xbf16>
    %4516 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4517 = stablehlo.multiply %4516, %4515 : tensor<768x768xbf16>
    %4518 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4519 = stablehlo.multiply %4518, %arg492 : tensor<768x768xbf16>
    %4520 = stablehlo.add %4517, %4519 : tensor<768x768xbf16>
    %4521 = stablehlo.multiply %2417, %2417 : tensor<768xbf16>
    %4522 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4523 = stablehlo.multiply %4522, %4521 : tensor<768xbf16>
    %4524 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4525 = stablehlo.multiply %4524, %arg493 : tensor<768xbf16>
    %4526 = stablehlo.add %4523, %4525 : tensor<768xbf16>
    %4527 = stablehlo.multiply %2422, %2422 : tensor<768x768xbf16>
    %4528 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4529 = stablehlo.multiply %4528, %4527 : tensor<768x768xbf16>
    %4530 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4531 = stablehlo.multiply %4530, %arg494 : tensor<768x768xbf16>
    %4532 = stablehlo.add %4529, %4531 : tensor<768x768xbf16>
    %4533 = stablehlo.multiply %2427, %2427 : tensor<768xbf16>
    %4534 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4535 = stablehlo.multiply %4534, %4533 : tensor<768xbf16>
    %4536 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4537 = stablehlo.multiply %4536, %arg495 : tensor<768xbf16>
    %4538 = stablehlo.add %4535, %4537 : tensor<768xbf16>
    %4539 = stablehlo.multiply %2432, %2432 : tensor<768x768xbf16>
    %4540 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4541 = stablehlo.multiply %4540, %4539 : tensor<768x768xbf16>
    %4542 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4543 = stablehlo.multiply %4542, %arg496 : tensor<768x768xbf16>
    %4544 = stablehlo.add %4541, %4543 : tensor<768x768xbf16>
    %4545 = stablehlo.multiply %2437, %2437 : tensor<768xbf16>
    %4546 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4547 = stablehlo.multiply %4546, %4545 : tensor<768xbf16>
    %4548 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4549 = stablehlo.multiply %4548, %arg497 : tensor<768xbf16>
    %4550 = stablehlo.add %4547, %4549 : tensor<768xbf16>
    %4551 = stablehlo.multiply %2442, %2442 : tensor<768xbf16>
    %4552 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4553 = stablehlo.multiply %4552, %4551 : tensor<768xbf16>
    %4554 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4555 = stablehlo.multiply %4554, %arg498 : tensor<768xbf16>
    %4556 = stablehlo.add %4553, %4555 : tensor<768xbf16>
    %4557 = stablehlo.multiply %2447, %2447 : tensor<768xbf16>
    %4558 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4559 = stablehlo.multiply %4558, %4557 : tensor<768xbf16>
    %4560 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4561 = stablehlo.multiply %4560, %arg499 : tensor<768xbf16>
    %4562 = stablehlo.add %4559, %4561 : tensor<768xbf16>
    %4563 = stablehlo.multiply %2452, %2452 : tensor<3072x768xbf16>
    %4564 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4565 = stablehlo.multiply %4564, %4563 : tensor<3072x768xbf16>
    %4566 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4567 = stablehlo.multiply %4566, %arg500 : tensor<3072x768xbf16>
    %4568 = stablehlo.add %4565, %4567 : tensor<3072x768xbf16>
    %4569 = stablehlo.multiply %2457, %2457 : tensor<3072xbf16>
    %4570 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4571 = stablehlo.multiply %4570, %4569 : tensor<3072xbf16>
    %4572 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4573 = stablehlo.multiply %4572, %arg501 : tensor<3072xbf16>
    %4574 = stablehlo.add %4571, %4573 : tensor<3072xbf16>
    %4575 = stablehlo.multiply %2462, %2462 : tensor<768x3072xbf16>
    %4576 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4577 = stablehlo.multiply %4576, %4575 : tensor<768x3072xbf16>
    %4578 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4579 = stablehlo.multiply %4578, %arg502 : tensor<768x3072xbf16>
    %4580 = stablehlo.add %4577, %4579 : tensor<768x3072xbf16>
    %4581 = stablehlo.multiply %2467, %2467 : tensor<768xbf16>
    %4582 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4583 = stablehlo.multiply %4582, %4581 : tensor<768xbf16>
    %4584 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4585 = stablehlo.multiply %4584, %arg503 : tensor<768xbf16>
    %4586 = stablehlo.add %4583, %4585 : tensor<768xbf16>
    %4587 = stablehlo.multiply %2472, %2472 : tensor<768xbf16>
    %4588 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4589 = stablehlo.multiply %4588, %4587 : tensor<768xbf16>
    %4590 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4591 = stablehlo.multiply %4590, %arg504 : tensor<768xbf16>
    %4592 = stablehlo.add %4589, %4591 : tensor<768xbf16>
    %4593 = stablehlo.multiply %2477, %2477 : tensor<768xbf16>
    %4594 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4595 = stablehlo.multiply %4594, %4593 : tensor<768xbf16>
    %4596 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4597 = stablehlo.multiply %4596, %arg505 : tensor<768xbf16>
    %4598 = stablehlo.add %4595, %4597 : tensor<768xbf16>
    %4599 = stablehlo.multiply %2482, %2482 : tensor<768x768xbf16>
    %4600 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4601 = stablehlo.multiply %4600, %4599 : tensor<768x768xbf16>
    %4602 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4603 = stablehlo.multiply %4602, %arg506 : tensor<768x768xbf16>
    %4604 = stablehlo.add %4601, %4603 : tensor<768x768xbf16>
    %4605 = stablehlo.multiply %2487, %2487 : tensor<768xbf16>
    %4606 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4607 = stablehlo.multiply %4606, %4605 : tensor<768xbf16>
    %4608 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4609 = stablehlo.multiply %4608, %arg507 : tensor<768xbf16>
    %4610 = stablehlo.add %4607, %4609 : tensor<768xbf16>
    %4611 = stablehlo.multiply %2492, %2492 : tensor<768x768xbf16>
    %4612 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4613 = stablehlo.multiply %4612, %4611 : tensor<768x768xbf16>
    %4614 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4615 = stablehlo.multiply %4614, %arg508 : tensor<768x768xbf16>
    %4616 = stablehlo.add %4613, %4615 : tensor<768x768xbf16>
    %4617 = stablehlo.multiply %2497, %2497 : tensor<768xbf16>
    %4618 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4619 = stablehlo.multiply %4618, %4617 : tensor<768xbf16>
    %4620 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4621 = stablehlo.multiply %4620, %arg509 : tensor<768xbf16>
    %4622 = stablehlo.add %4619, %4621 : tensor<768xbf16>
    %4623 = stablehlo.multiply %2502, %2502 : tensor<768x768xbf16>
    %4624 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4625 = stablehlo.multiply %4624, %4623 : tensor<768x768xbf16>
    %4626 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4627 = stablehlo.multiply %4626, %arg510 : tensor<768x768xbf16>
    %4628 = stablehlo.add %4625, %4627 : tensor<768x768xbf16>
    %4629 = stablehlo.multiply %2507, %2507 : tensor<768xbf16>
    %4630 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4631 = stablehlo.multiply %4630, %4629 : tensor<768xbf16>
    %4632 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4633 = stablehlo.multiply %4632, %arg511 : tensor<768xbf16>
    %4634 = stablehlo.add %4631, %4633 : tensor<768xbf16>
    %4635 = stablehlo.multiply %2512, %2512 : tensor<768x768xbf16>
    %4636 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4637 = stablehlo.multiply %4636, %4635 : tensor<768x768xbf16>
    %4638 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4639 = stablehlo.multiply %4638, %arg512 : tensor<768x768xbf16>
    %4640 = stablehlo.add %4637, %4639 : tensor<768x768xbf16>
    %4641 = stablehlo.multiply %2517, %2517 : tensor<768xbf16>
    %4642 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4643 = stablehlo.multiply %4642, %4641 : tensor<768xbf16>
    %4644 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4645 = stablehlo.multiply %4644, %arg513 : tensor<768xbf16>
    %4646 = stablehlo.add %4643, %4645 : tensor<768xbf16>
    %4647 = stablehlo.multiply %2522, %2522 : tensor<768xbf16>
    %4648 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4649 = stablehlo.multiply %4648, %4647 : tensor<768xbf16>
    %4650 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4651 = stablehlo.multiply %4650, %arg514 : tensor<768xbf16>
    %4652 = stablehlo.add %4649, %4651 : tensor<768xbf16>
    %4653 = stablehlo.multiply %2527, %2527 : tensor<768xbf16>
    %4654 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4655 = stablehlo.multiply %4654, %4653 : tensor<768xbf16>
    %4656 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4657 = stablehlo.multiply %4656, %arg515 : tensor<768xbf16>
    %4658 = stablehlo.add %4655, %4657 : tensor<768xbf16>
    %4659 = stablehlo.multiply %2532, %2532 : tensor<3072x768xbf16>
    %4660 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4661 = stablehlo.multiply %4660, %4659 : tensor<3072x768xbf16>
    %4662 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4663 = stablehlo.multiply %4662, %arg516 : tensor<3072x768xbf16>
    %4664 = stablehlo.add %4661, %4663 : tensor<3072x768xbf16>
    %4665 = stablehlo.multiply %2537, %2537 : tensor<3072xbf16>
    %4666 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4667 = stablehlo.multiply %4666, %4665 : tensor<3072xbf16>
    %4668 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4669 = stablehlo.multiply %4668, %arg517 : tensor<3072xbf16>
    %4670 = stablehlo.add %4667, %4669 : tensor<3072xbf16>
    %4671 = stablehlo.multiply %2542, %2542 : tensor<768x3072xbf16>
    %4672 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4673 = stablehlo.multiply %4672, %4671 : tensor<768x3072xbf16>
    %4674 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4675 = stablehlo.multiply %4674, %arg518 : tensor<768x3072xbf16>
    %4676 = stablehlo.add %4673, %4675 : tensor<768x3072xbf16>
    %4677 = stablehlo.multiply %2547, %2547 : tensor<768xbf16>
    %4678 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4679 = stablehlo.multiply %4678, %4677 : tensor<768xbf16>
    %4680 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4681 = stablehlo.multiply %4680, %arg519 : tensor<768xbf16>
    %4682 = stablehlo.add %4679, %4681 : tensor<768xbf16>
    %4683 = stablehlo.multiply %2552, %2552 : tensor<768xbf16>
    %4684 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4685 = stablehlo.multiply %4684, %4683 : tensor<768xbf16>
    %4686 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4687 = stablehlo.multiply %4686, %arg520 : tensor<768xbf16>
    %4688 = stablehlo.add %4685, %4687 : tensor<768xbf16>
    %4689 = stablehlo.multiply %2557, %2557 : tensor<768xbf16>
    %4690 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4691 = stablehlo.multiply %4690, %4689 : tensor<768xbf16>
    %4692 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4693 = stablehlo.multiply %4692, %arg521 : tensor<768xbf16>
    %4694 = stablehlo.add %4691, %4693 : tensor<768xbf16>
    %4695 = stablehlo.multiply %2562, %2562 : tensor<768x768xbf16>
    %4696 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4697 = stablehlo.multiply %4696, %4695 : tensor<768x768xbf16>
    %4698 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4699 = stablehlo.multiply %4698, %arg522 : tensor<768x768xbf16>
    %4700 = stablehlo.add %4697, %4699 : tensor<768x768xbf16>
    %4701 = stablehlo.multiply %2567, %2567 : tensor<768xbf16>
    %4702 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4703 = stablehlo.multiply %4702, %4701 : tensor<768xbf16>
    %4704 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4705 = stablehlo.multiply %4704, %arg523 : tensor<768xbf16>
    %4706 = stablehlo.add %4703, %4705 : tensor<768xbf16>
    %4707 = stablehlo.multiply %2572, %2572 : tensor<768x768xbf16>
    %4708 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4709 = stablehlo.multiply %4708, %4707 : tensor<768x768xbf16>
    %4710 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4711 = stablehlo.multiply %4710, %arg524 : tensor<768x768xbf16>
    %4712 = stablehlo.add %4709, %4711 : tensor<768x768xbf16>
    %4713 = stablehlo.multiply %2577, %2577 : tensor<768xbf16>
    %4714 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4715 = stablehlo.multiply %4714, %4713 : tensor<768xbf16>
    %4716 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4717 = stablehlo.multiply %4716, %arg525 : tensor<768xbf16>
    %4718 = stablehlo.add %4715, %4717 : tensor<768xbf16>
    %4719 = stablehlo.multiply %2582, %2582 : tensor<768x768xbf16>
    %4720 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4721 = stablehlo.multiply %4720, %4719 : tensor<768x768xbf16>
    %4722 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4723 = stablehlo.multiply %4722, %arg526 : tensor<768x768xbf16>
    %4724 = stablehlo.add %4721, %4723 : tensor<768x768xbf16>
    %4725 = stablehlo.multiply %2587, %2587 : tensor<768xbf16>
    %4726 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4727 = stablehlo.multiply %4726, %4725 : tensor<768xbf16>
    %4728 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4729 = stablehlo.multiply %4728, %arg527 : tensor<768xbf16>
    %4730 = stablehlo.add %4727, %4729 : tensor<768xbf16>
    %4731 = stablehlo.multiply %2592, %2592 : tensor<768x768xbf16>
    %4732 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4733 = stablehlo.multiply %4732, %4731 : tensor<768x768xbf16>
    %4734 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4735 = stablehlo.multiply %4734, %arg528 : tensor<768x768xbf16>
    %4736 = stablehlo.add %4733, %4735 : tensor<768x768xbf16>
    %4737 = stablehlo.multiply %2597, %2597 : tensor<768xbf16>
    %4738 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4739 = stablehlo.multiply %4738, %4737 : tensor<768xbf16>
    %4740 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4741 = stablehlo.multiply %4740, %arg529 : tensor<768xbf16>
    %4742 = stablehlo.add %4739, %4741 : tensor<768xbf16>
    %4743 = stablehlo.multiply %2602, %2602 : tensor<768xbf16>
    %4744 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4745 = stablehlo.multiply %4744, %4743 : tensor<768xbf16>
    %4746 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4747 = stablehlo.multiply %4746, %arg530 : tensor<768xbf16>
    %4748 = stablehlo.add %4745, %4747 : tensor<768xbf16>
    %4749 = stablehlo.multiply %2607, %2607 : tensor<768xbf16>
    %4750 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4751 = stablehlo.multiply %4750, %4749 : tensor<768xbf16>
    %4752 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4753 = stablehlo.multiply %4752, %arg531 : tensor<768xbf16>
    %4754 = stablehlo.add %4751, %4753 : tensor<768xbf16>
    %4755 = stablehlo.multiply %2612, %2612 : tensor<3072x768xbf16>
    %4756 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4757 = stablehlo.multiply %4756, %4755 : tensor<3072x768xbf16>
    %4758 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4759 = stablehlo.multiply %4758, %arg532 : tensor<3072x768xbf16>
    %4760 = stablehlo.add %4757, %4759 : tensor<3072x768xbf16>
    %4761 = stablehlo.multiply %2617, %2617 : tensor<3072xbf16>
    %4762 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4763 = stablehlo.multiply %4762, %4761 : tensor<3072xbf16>
    %4764 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4765 = stablehlo.multiply %4764, %arg533 : tensor<3072xbf16>
    %4766 = stablehlo.add %4763, %4765 : tensor<3072xbf16>
    %4767 = stablehlo.multiply %2622, %2622 : tensor<768x3072xbf16>
    %4768 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4769 = stablehlo.multiply %4768, %4767 : tensor<768x3072xbf16>
    %4770 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4771 = stablehlo.multiply %4770, %arg534 : tensor<768x3072xbf16>
    %4772 = stablehlo.add %4769, %4771 : tensor<768x3072xbf16>
    %4773 = stablehlo.multiply %2627, %2627 : tensor<768xbf16>
    %4774 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4775 = stablehlo.multiply %4774, %4773 : tensor<768xbf16>
    %4776 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4777 = stablehlo.multiply %4776, %arg535 : tensor<768xbf16>
    %4778 = stablehlo.add %4775, %4777 : tensor<768xbf16>
    %4779 = stablehlo.multiply %2632, %2632 : tensor<768xbf16>
    %4780 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4781 = stablehlo.multiply %4780, %4779 : tensor<768xbf16>
    %4782 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4783 = stablehlo.multiply %4782, %arg536 : tensor<768xbf16>
    %4784 = stablehlo.add %4781, %4783 : tensor<768xbf16>
    %4785 = stablehlo.multiply %2637, %2637 : tensor<768xbf16>
    %4786 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4787 = stablehlo.multiply %4786, %4785 : tensor<768xbf16>
    %4788 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4789 = stablehlo.multiply %4788, %arg537 : tensor<768xbf16>
    %4790 = stablehlo.add %4787, %4789 : tensor<768xbf16>
    %4791 = stablehlo.multiply %2642, %2642 : tensor<768x768xbf16>
    %4792 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4793 = stablehlo.multiply %4792, %4791 : tensor<768x768xbf16>
    %4794 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4795 = stablehlo.multiply %4794, %arg538 : tensor<768x768xbf16>
    %4796 = stablehlo.add %4793, %4795 : tensor<768x768xbf16>
    %4797 = stablehlo.multiply %2647, %2647 : tensor<768xbf16>
    %4798 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4799 = stablehlo.multiply %4798, %4797 : tensor<768xbf16>
    %4800 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4801 = stablehlo.multiply %4800, %arg539 : tensor<768xbf16>
    %4802 = stablehlo.add %4799, %4801 : tensor<768xbf16>
    %4803 = stablehlo.multiply %2652, %2652 : tensor<768x768xbf16>
    %4804 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4805 = stablehlo.multiply %4804, %4803 : tensor<768x768xbf16>
    %4806 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4807 = stablehlo.multiply %4806, %arg540 : tensor<768x768xbf16>
    %4808 = stablehlo.add %4805, %4807 : tensor<768x768xbf16>
    %4809 = stablehlo.multiply %2657, %2657 : tensor<768xbf16>
    %4810 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4811 = stablehlo.multiply %4810, %4809 : tensor<768xbf16>
    %4812 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4813 = stablehlo.multiply %4812, %arg541 : tensor<768xbf16>
    %4814 = stablehlo.add %4811, %4813 : tensor<768xbf16>
    %4815 = stablehlo.multiply %2662, %2662 : tensor<768x768xbf16>
    %4816 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4817 = stablehlo.multiply %4816, %4815 : tensor<768x768xbf16>
    %4818 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4819 = stablehlo.multiply %4818, %arg542 : tensor<768x768xbf16>
    %4820 = stablehlo.add %4817, %4819 : tensor<768x768xbf16>
    %4821 = stablehlo.multiply %2667, %2667 : tensor<768xbf16>
    %4822 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4823 = stablehlo.multiply %4822, %4821 : tensor<768xbf16>
    %4824 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4825 = stablehlo.multiply %4824, %arg543 : tensor<768xbf16>
    %4826 = stablehlo.add %4823, %4825 : tensor<768xbf16>
    %4827 = stablehlo.multiply %2672, %2672 : tensor<768x768xbf16>
    %4828 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4829 = stablehlo.multiply %4828, %4827 : tensor<768x768xbf16>
    %4830 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4831 = stablehlo.multiply %4830, %arg544 : tensor<768x768xbf16>
    %4832 = stablehlo.add %4829, %4831 : tensor<768x768xbf16>
    %4833 = stablehlo.multiply %2677, %2677 : tensor<768xbf16>
    %4834 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4835 = stablehlo.multiply %4834, %4833 : tensor<768xbf16>
    %4836 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4837 = stablehlo.multiply %4836, %arg545 : tensor<768xbf16>
    %4838 = stablehlo.add %4835, %4837 : tensor<768xbf16>
    %4839 = stablehlo.multiply %2682, %2682 : tensor<768xbf16>
    %4840 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4841 = stablehlo.multiply %4840, %4839 : tensor<768xbf16>
    %4842 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4843 = stablehlo.multiply %4842, %arg546 : tensor<768xbf16>
    %4844 = stablehlo.add %4841, %4843 : tensor<768xbf16>
    %4845 = stablehlo.multiply %2687, %2687 : tensor<768xbf16>
    %4846 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4847 = stablehlo.multiply %4846, %4845 : tensor<768xbf16>
    %4848 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4849 = stablehlo.multiply %4848, %arg547 : tensor<768xbf16>
    %4850 = stablehlo.add %4847, %4849 : tensor<768xbf16>
    %4851 = stablehlo.multiply %2692, %2692 : tensor<3072x768xbf16>
    %4852 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4853 = stablehlo.multiply %4852, %4851 : tensor<3072x768xbf16>
    %4854 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4855 = stablehlo.multiply %4854, %arg548 : tensor<3072x768xbf16>
    %4856 = stablehlo.add %4853, %4855 : tensor<3072x768xbf16>
    %4857 = stablehlo.multiply %2697, %2697 : tensor<3072xbf16>
    %4858 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4859 = stablehlo.multiply %4858, %4857 : tensor<3072xbf16>
    %4860 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4861 = stablehlo.multiply %4860, %arg549 : tensor<3072xbf16>
    %4862 = stablehlo.add %4859, %4861 : tensor<3072xbf16>
    %4863 = stablehlo.multiply %2702, %2702 : tensor<768x3072xbf16>
    %4864 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4865 = stablehlo.multiply %4864, %4863 : tensor<768x3072xbf16>
    %4866 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4867 = stablehlo.multiply %4866, %arg550 : tensor<768x3072xbf16>
    %4868 = stablehlo.add %4865, %4867 : tensor<768x3072xbf16>
    %4869 = stablehlo.multiply %2707, %2707 : tensor<768xbf16>
    %4870 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4871 = stablehlo.multiply %4870, %4869 : tensor<768xbf16>
    %4872 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4873 = stablehlo.multiply %4872, %arg551 : tensor<768xbf16>
    %4874 = stablehlo.add %4871, %4873 : tensor<768xbf16>
    %4875 = stablehlo.multiply %2712, %2712 : tensor<768xbf16>
    %4876 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4877 = stablehlo.multiply %4876, %4875 : tensor<768xbf16>
    %4878 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4879 = stablehlo.multiply %4878, %arg552 : tensor<768xbf16>
    %4880 = stablehlo.add %4877, %4879 : tensor<768xbf16>
    %4881 = stablehlo.multiply %2717, %2717 : tensor<768xbf16>
    %4882 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4883 = stablehlo.multiply %4882, %4881 : tensor<768xbf16>
    %4884 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4885 = stablehlo.multiply %4884, %arg553 : tensor<768xbf16>
    %4886 = stablehlo.add %4883, %4885 : tensor<768xbf16>
    %4887 = stablehlo.multiply %2722, %2722 : tensor<768x768xbf16>
    %4888 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4889 = stablehlo.multiply %4888, %4887 : tensor<768x768xbf16>
    %4890 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4891 = stablehlo.multiply %4890, %arg554 : tensor<768x768xbf16>
    %4892 = stablehlo.add %4889, %4891 : tensor<768x768xbf16>
    %4893 = stablehlo.multiply %2727, %2727 : tensor<768xbf16>
    %4894 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4895 = stablehlo.multiply %4894, %4893 : tensor<768xbf16>
    %4896 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4897 = stablehlo.multiply %4896, %arg555 : tensor<768xbf16>
    %4898 = stablehlo.add %4895, %4897 : tensor<768xbf16>
    %4899 = stablehlo.multiply %2732, %2732 : tensor<768x768xbf16>
    %4900 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4901 = stablehlo.multiply %4900, %4899 : tensor<768x768xbf16>
    %4902 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4903 = stablehlo.multiply %4902, %arg556 : tensor<768x768xbf16>
    %4904 = stablehlo.add %4901, %4903 : tensor<768x768xbf16>
    %4905 = stablehlo.multiply %2737, %2737 : tensor<768xbf16>
    %4906 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4907 = stablehlo.multiply %4906, %4905 : tensor<768xbf16>
    %4908 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4909 = stablehlo.multiply %4908, %arg557 : tensor<768xbf16>
    %4910 = stablehlo.add %4907, %4909 : tensor<768xbf16>
    %4911 = stablehlo.multiply %2742, %2742 : tensor<768x768xbf16>
    %4912 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4913 = stablehlo.multiply %4912, %4911 : tensor<768x768xbf16>
    %4914 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4915 = stablehlo.multiply %4914, %arg558 : tensor<768x768xbf16>
    %4916 = stablehlo.add %4913, %4915 : tensor<768x768xbf16>
    %4917 = stablehlo.multiply %2747, %2747 : tensor<768xbf16>
    %4918 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4919 = stablehlo.multiply %4918, %4917 : tensor<768xbf16>
    %4920 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4921 = stablehlo.multiply %4920, %arg559 : tensor<768xbf16>
    %4922 = stablehlo.add %4919, %4921 : tensor<768xbf16>
    %4923 = stablehlo.multiply %2752, %2752 : tensor<768x768xbf16>
    %4924 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4925 = stablehlo.multiply %4924, %4923 : tensor<768x768xbf16>
    %4926 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4927 = stablehlo.multiply %4926, %arg560 : tensor<768x768xbf16>
    %4928 = stablehlo.add %4925, %4927 : tensor<768x768xbf16>
    %4929 = stablehlo.multiply %2757, %2757 : tensor<768xbf16>
    %4930 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4931 = stablehlo.multiply %4930, %4929 : tensor<768xbf16>
    %4932 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4933 = stablehlo.multiply %4932, %arg561 : tensor<768xbf16>
    %4934 = stablehlo.add %4931, %4933 : tensor<768xbf16>
    %4935 = stablehlo.multiply %2762, %2762 : tensor<768xbf16>
    %4936 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4937 = stablehlo.multiply %4936, %4935 : tensor<768xbf16>
    %4938 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4939 = stablehlo.multiply %4938, %arg562 : tensor<768xbf16>
    %4940 = stablehlo.add %4937, %4939 : tensor<768xbf16>
    %4941 = stablehlo.multiply %2767, %2767 : tensor<768xbf16>
    %4942 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4943 = stablehlo.multiply %4942, %4941 : tensor<768xbf16>
    %4944 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4945 = stablehlo.multiply %4944, %arg563 : tensor<768xbf16>
    %4946 = stablehlo.add %4943, %4945 : tensor<768xbf16>
    %4947 = stablehlo.multiply %2772, %2772 : tensor<3072x768xbf16>
    %4948 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4949 = stablehlo.multiply %4948, %4947 : tensor<3072x768xbf16>
    %4950 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %4951 = stablehlo.multiply %4950, %arg564 : tensor<3072x768xbf16>
    %4952 = stablehlo.add %4949, %4951 : tensor<3072x768xbf16>
    %4953 = stablehlo.multiply %2777, %2777 : tensor<3072xbf16>
    %4954 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4955 = stablehlo.multiply %4954, %4953 : tensor<3072xbf16>
    %4956 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %4957 = stablehlo.multiply %4956, %arg565 : tensor<3072xbf16>
    %4958 = stablehlo.add %4955, %4957 : tensor<3072xbf16>
    %4959 = stablehlo.multiply %2782, %2782 : tensor<768x3072xbf16>
    %4960 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4961 = stablehlo.multiply %4960, %4959 : tensor<768x3072xbf16>
    %4962 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %4963 = stablehlo.multiply %4962, %arg566 : tensor<768x3072xbf16>
    %4964 = stablehlo.add %4961, %4963 : tensor<768x3072xbf16>
    %4965 = stablehlo.multiply %2787, %2787 : tensor<768xbf16>
    %4966 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4967 = stablehlo.multiply %4966, %4965 : tensor<768xbf16>
    %4968 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4969 = stablehlo.multiply %4968, %arg567 : tensor<768xbf16>
    %4970 = stablehlo.add %4967, %4969 : tensor<768xbf16>
    %4971 = stablehlo.multiply %2792, %2792 : tensor<768xbf16>
    %4972 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4973 = stablehlo.multiply %4972, %4971 : tensor<768xbf16>
    %4974 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4975 = stablehlo.multiply %4974, %arg568 : tensor<768xbf16>
    %4976 = stablehlo.add %4973, %4975 : tensor<768xbf16>
    %4977 = stablehlo.multiply %2797, %2797 : tensor<768xbf16>
    %4978 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4979 = stablehlo.multiply %4978, %4977 : tensor<768xbf16>
    %4980 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4981 = stablehlo.multiply %4980, %arg569 : tensor<768xbf16>
    %4982 = stablehlo.add %4979, %4981 : tensor<768xbf16>
    %4983 = stablehlo.multiply %2802, %2802 : tensor<768x768xbf16>
    %4984 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4985 = stablehlo.multiply %4984, %4983 : tensor<768x768xbf16>
    %4986 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4987 = stablehlo.multiply %4986, %arg570 : tensor<768x768xbf16>
    %4988 = stablehlo.add %4985, %4987 : tensor<768x768xbf16>
    %4989 = stablehlo.multiply %2807, %2807 : tensor<768xbf16>
    %4990 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4991 = stablehlo.multiply %4990, %4989 : tensor<768xbf16>
    %4992 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %4993 = stablehlo.multiply %4992, %arg571 : tensor<768xbf16>
    %4994 = stablehlo.add %4991, %4993 : tensor<768xbf16>
    %4995 = stablehlo.multiply %2812, %2812 : tensor<768x768xbf16>
    %4996 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4997 = stablehlo.multiply %4996, %4995 : tensor<768x768xbf16>
    %4998 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %4999 = stablehlo.multiply %4998, %arg572 : tensor<768x768xbf16>
    %5000 = stablehlo.add %4997, %4999 : tensor<768x768xbf16>
    %5001 = stablehlo.multiply %2817, %2817 : tensor<768xbf16>
    %5002 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5003 = stablehlo.multiply %5002, %5001 : tensor<768xbf16>
    %5004 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5005 = stablehlo.multiply %5004, %arg573 : tensor<768xbf16>
    %5006 = stablehlo.add %5003, %5005 : tensor<768xbf16>
    %5007 = stablehlo.multiply %2822, %2822 : tensor<768x768xbf16>
    %5008 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5009 = stablehlo.multiply %5008, %5007 : tensor<768x768xbf16>
    %5010 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5011 = stablehlo.multiply %5010, %arg574 : tensor<768x768xbf16>
    %5012 = stablehlo.add %5009, %5011 : tensor<768x768xbf16>
    %5013 = stablehlo.multiply %2827, %2827 : tensor<768xbf16>
    %5014 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5015 = stablehlo.multiply %5014, %5013 : tensor<768xbf16>
    %5016 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5017 = stablehlo.multiply %5016, %arg575 : tensor<768xbf16>
    %5018 = stablehlo.add %5015, %5017 : tensor<768xbf16>
    %5019 = stablehlo.multiply %2832, %2832 : tensor<768x768xbf16>
    %5020 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5021 = stablehlo.multiply %5020, %5019 : tensor<768x768xbf16>
    %5022 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5023 = stablehlo.multiply %5022, %arg576 : tensor<768x768xbf16>
    %5024 = stablehlo.add %5021, %5023 : tensor<768x768xbf16>
    %5025 = stablehlo.multiply %2837, %2837 : tensor<768xbf16>
    %5026 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5027 = stablehlo.multiply %5026, %5025 : tensor<768xbf16>
    %5028 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5029 = stablehlo.multiply %5028, %arg577 : tensor<768xbf16>
    %5030 = stablehlo.add %5027, %5029 : tensor<768xbf16>
    %5031 = stablehlo.multiply %2842, %2842 : tensor<768xbf16>
    %5032 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5033 = stablehlo.multiply %5032, %5031 : tensor<768xbf16>
    %5034 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5035 = stablehlo.multiply %5034, %arg578 : tensor<768xbf16>
    %5036 = stablehlo.add %5033, %5035 : tensor<768xbf16>
    %5037 = stablehlo.multiply %2847, %2847 : tensor<768xbf16>
    %5038 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5039 = stablehlo.multiply %5038, %5037 : tensor<768xbf16>
    %5040 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5041 = stablehlo.multiply %5040, %arg579 : tensor<768xbf16>
    %5042 = stablehlo.add %5039, %5041 : tensor<768xbf16>
    %5043 = stablehlo.multiply %2852, %2852 : tensor<3072x768xbf16>
    %5044 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5045 = stablehlo.multiply %5044, %5043 : tensor<3072x768xbf16>
    %5046 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5047 = stablehlo.multiply %5046, %arg580 : tensor<3072x768xbf16>
    %5048 = stablehlo.add %5045, %5047 : tensor<3072x768xbf16>
    %5049 = stablehlo.multiply %2857, %2857 : tensor<3072xbf16>
    %5050 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5051 = stablehlo.multiply %5050, %5049 : tensor<3072xbf16>
    %5052 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5053 = stablehlo.multiply %5052, %arg581 : tensor<3072xbf16>
    %5054 = stablehlo.add %5051, %5053 : tensor<3072xbf16>
    %5055 = stablehlo.multiply %2862, %2862 : tensor<768x3072xbf16>
    %5056 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5057 = stablehlo.multiply %5056, %5055 : tensor<768x3072xbf16>
    %5058 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5059 = stablehlo.multiply %5058, %arg582 : tensor<768x3072xbf16>
    %5060 = stablehlo.add %5057, %5059 : tensor<768x3072xbf16>
    %5061 = stablehlo.multiply %2867, %2867 : tensor<768xbf16>
    %5062 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5063 = stablehlo.multiply %5062, %5061 : tensor<768xbf16>
    %5064 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5065 = stablehlo.multiply %5064, %arg583 : tensor<768xbf16>
    %5066 = stablehlo.add %5063, %5065 : tensor<768xbf16>
    %5067 = stablehlo.multiply %2872, %2872 : tensor<768xbf16>
    %5068 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5069 = stablehlo.multiply %5068, %5067 : tensor<768xbf16>
    %5070 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5071 = stablehlo.multiply %5070, %arg584 : tensor<768xbf16>
    %5072 = stablehlo.add %5069, %5071 : tensor<768xbf16>
    %5073 = stablehlo.multiply %2877, %2877 : tensor<768xbf16>
    %5074 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5075 = stablehlo.multiply %5074, %5073 : tensor<768xbf16>
    %5076 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5077 = stablehlo.multiply %5076, %arg585 : tensor<768xbf16>
    %5078 = stablehlo.add %5075, %5077 : tensor<768xbf16>
    %5079 = stablehlo.multiply %2882, %2882 : tensor<768x768xbf16>
    %5080 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5081 = stablehlo.multiply %5080, %5079 : tensor<768x768xbf16>
    %5082 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5083 = stablehlo.multiply %5082, %arg586 : tensor<768x768xbf16>
    %5084 = stablehlo.add %5081, %5083 : tensor<768x768xbf16>
    %5085 = stablehlo.multiply %2887, %2887 : tensor<768xbf16>
    %5086 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5087 = stablehlo.multiply %5086, %5085 : tensor<768xbf16>
    %5088 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5089 = stablehlo.multiply %5088, %arg587 : tensor<768xbf16>
    %5090 = stablehlo.add %5087, %5089 : tensor<768xbf16>
    %5091 = stablehlo.multiply %2892, %2892 : tensor<768x768xbf16>
    %5092 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5093 = stablehlo.multiply %5092, %5091 : tensor<768x768xbf16>
    %5094 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5095 = stablehlo.multiply %5094, %arg588 : tensor<768x768xbf16>
    %5096 = stablehlo.add %5093, %5095 : tensor<768x768xbf16>
    %5097 = stablehlo.multiply %2897, %2897 : tensor<768xbf16>
    %5098 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5099 = stablehlo.multiply %5098, %5097 : tensor<768xbf16>
    %5100 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5101 = stablehlo.multiply %5100, %arg589 : tensor<768xbf16>
    %5102 = stablehlo.add %5099, %5101 : tensor<768xbf16>
    %5103 = stablehlo.multiply %2902, %2902 : tensor<768x768xbf16>
    %5104 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5105 = stablehlo.multiply %5104, %5103 : tensor<768x768xbf16>
    %5106 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5107 = stablehlo.multiply %5106, %arg590 : tensor<768x768xbf16>
    %5108 = stablehlo.add %5105, %5107 : tensor<768x768xbf16>
    %5109 = stablehlo.multiply %2907, %2907 : tensor<768xbf16>
    %5110 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5111 = stablehlo.multiply %5110, %5109 : tensor<768xbf16>
    %5112 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5113 = stablehlo.multiply %5112, %arg591 : tensor<768xbf16>
    %5114 = stablehlo.add %5111, %5113 : tensor<768xbf16>
    %5115 = stablehlo.multiply %2912, %2912 : tensor<768x768xbf16>
    %5116 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5117 = stablehlo.multiply %5116, %5115 : tensor<768x768xbf16>
    %5118 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5119 = stablehlo.multiply %5118, %arg592 : tensor<768x768xbf16>
    %5120 = stablehlo.add %5117, %5119 : tensor<768x768xbf16>
    %5121 = stablehlo.multiply %2917, %2917 : tensor<768xbf16>
    %5122 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5123 = stablehlo.multiply %5122, %5121 : tensor<768xbf16>
    %5124 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5125 = stablehlo.multiply %5124, %arg593 : tensor<768xbf16>
    %5126 = stablehlo.add %5123, %5125 : tensor<768xbf16>
    %5127 = stablehlo.multiply %2922, %2922 : tensor<768xbf16>
    %5128 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5129 = stablehlo.multiply %5128, %5127 : tensor<768xbf16>
    %5130 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5131 = stablehlo.multiply %5130, %arg594 : tensor<768xbf16>
    %5132 = stablehlo.add %5129, %5131 : tensor<768xbf16>
    %5133 = stablehlo.multiply %2927, %2927 : tensor<768xbf16>
    %5134 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5135 = stablehlo.multiply %5134, %5133 : tensor<768xbf16>
    %5136 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5137 = stablehlo.multiply %5136, %arg595 : tensor<768xbf16>
    %5138 = stablehlo.add %5135, %5137 : tensor<768xbf16>
    %5139 = stablehlo.multiply %2932, %2932 : tensor<3072x768xbf16>
    %5140 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5141 = stablehlo.multiply %5140, %5139 : tensor<3072x768xbf16>
    %5142 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5143 = stablehlo.multiply %5142, %arg596 : tensor<3072x768xbf16>
    %5144 = stablehlo.add %5141, %5143 : tensor<3072x768xbf16>
    %5145 = stablehlo.multiply %2937, %2937 : tensor<3072xbf16>
    %5146 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5147 = stablehlo.multiply %5146, %5145 : tensor<3072xbf16>
    %5148 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5149 = stablehlo.multiply %5148, %arg597 : tensor<3072xbf16>
    %5150 = stablehlo.add %5147, %5149 : tensor<3072xbf16>
    %5151 = stablehlo.multiply %2942, %2942 : tensor<768x3072xbf16>
    %5152 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5153 = stablehlo.multiply %5152, %5151 : tensor<768x3072xbf16>
    %5154 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5155 = stablehlo.multiply %5154, %arg598 : tensor<768x3072xbf16>
    %5156 = stablehlo.add %5153, %5155 : tensor<768x3072xbf16>
    %5157 = stablehlo.multiply %2947, %2947 : tensor<768xbf16>
    %5158 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5159 = stablehlo.multiply %5158, %5157 : tensor<768xbf16>
    %5160 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5161 = stablehlo.multiply %5160, %arg599 : tensor<768xbf16>
    %5162 = stablehlo.add %5159, %5161 : tensor<768xbf16>
    %5163 = stablehlo.multiply %2952, %2952 : tensor<768xbf16>
    %5164 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5165 = stablehlo.multiply %5164, %5163 : tensor<768xbf16>
    %5166 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5167 = stablehlo.multiply %5166, %arg600 : tensor<768xbf16>
    %5168 = stablehlo.add %5165, %5167 : tensor<768xbf16>
    %5169 = stablehlo.multiply %2957, %2957 : tensor<768xbf16>
    %5170 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5171 = stablehlo.multiply %5170, %5169 : tensor<768xbf16>
    %5172 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5173 = stablehlo.multiply %5172, %arg601 : tensor<768xbf16>
    %5174 = stablehlo.add %5171, %5173 : tensor<768xbf16>
    %5175 = stablehlo.multiply %2962, %2962 : tensor<768x768xbf16>
    %5176 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5177 = stablehlo.multiply %5176, %5175 : tensor<768x768xbf16>
    %5178 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5179 = stablehlo.multiply %5178, %arg602 : tensor<768x768xbf16>
    %5180 = stablehlo.add %5177, %5179 : tensor<768x768xbf16>
    %5181 = stablehlo.multiply %2967, %2967 : tensor<768xbf16>
    %5182 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5183 = stablehlo.multiply %5182, %5181 : tensor<768xbf16>
    %5184 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5185 = stablehlo.multiply %5184, %arg603 : tensor<768xbf16>
    %5186 = stablehlo.add %5183, %5185 : tensor<768xbf16>
    %5187 = stablehlo.multiply %2972, %2972 : tensor<768xbf16>
    %5188 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5189 = stablehlo.multiply %5188, %5187 : tensor<768xbf16>
    %5190 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5191 = stablehlo.multiply %5190, %arg604 : tensor<768xbf16>
    %5192 = stablehlo.add %5189, %5191 : tensor<768xbf16>
    %5193 = stablehlo.multiply %2977, %2977 : tensor<768xbf16>
    %5194 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5195 = stablehlo.multiply %5194, %5193 : tensor<768xbf16>
    %5196 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5197 = stablehlo.multiply %5196, %arg605 : tensor<768xbf16>
    %5198 = stablehlo.add %5195, %5197 : tensor<768xbf16>
    %5199 = stablehlo.multiply %2982, %2982 : tensor<30522xbf16>
    %5200 = stablehlo.broadcast_in_dim %cst_500, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %5201 = stablehlo.multiply %5200, %5199 : tensor<30522xbf16>
    %5202 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %5203 = stablehlo.multiply %5202, %arg606 : tensor<30522xbf16>
    %5204 = stablehlo.add %5201, %5203 : tensor<30522xbf16>
    %c_501 = stablehlo.constant dense<2147483647> : tensor<i32>
    %5205 = stablehlo.compare  LT, %arg202, %c_501,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %5206 = stablehlo.add %arg202, %c_12 : tensor<i32>
    %5207 = call @_where_434(%5205, %5206, %c_501) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_502 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %5208 = stablehlo.convert %5207 : (tensor<i32>) -> tensor<f32>
    %5209 = stablehlo.power %cst_502, %5208 : tensor<f32>
    %5210 = stablehlo.subtract %cst_68, %5209 : tensor<f32>
    %5211 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5212 = stablehlo.broadcast_in_dim %5211, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %5213 = stablehlo.divide %2987, %5212 : tensor<30522x768xbf16>
    %5214 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5215 = stablehlo.broadcast_in_dim %5214, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %5216 = stablehlo.divide %2992, %5215 : tensor<512x768xbf16>
    %5217 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5218 = stablehlo.broadcast_in_dim %5217, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %5219 = stablehlo.divide %2997, %5218 : tensor<2x768xbf16>
    %5220 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5221 = stablehlo.broadcast_in_dim %5220, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5222 = stablehlo.divide %3002, %5221 : tensor<768xbf16>
    %5223 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5224 = stablehlo.broadcast_in_dim %5223, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5225 = stablehlo.divide %3007, %5224 : tensor<768xbf16>
    %5226 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5227 = stablehlo.broadcast_in_dim %5226, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5228 = stablehlo.divide %3012, %5227 : tensor<768x768xbf16>
    %5229 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5230 = stablehlo.broadcast_in_dim %5229, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5231 = stablehlo.divide %3017, %5230 : tensor<768xbf16>
    %5232 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5233 = stablehlo.broadcast_in_dim %5232, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5234 = stablehlo.divide %3022, %5233 : tensor<768x768xbf16>
    %5235 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5236 = stablehlo.broadcast_in_dim %5235, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5237 = stablehlo.divide %3027, %5236 : tensor<768xbf16>
    %5238 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5239 = stablehlo.broadcast_in_dim %5238, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5240 = stablehlo.divide %3032, %5239 : tensor<768x768xbf16>
    %5241 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5242 = stablehlo.broadcast_in_dim %5241, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5243 = stablehlo.divide %3037, %5242 : tensor<768xbf16>
    %5244 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5245 = stablehlo.broadcast_in_dim %5244, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5246 = stablehlo.divide %3042, %5245 : tensor<768x768xbf16>
    %5247 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5248 = stablehlo.broadcast_in_dim %5247, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5249 = stablehlo.divide %3047, %5248 : tensor<768xbf16>
    %5250 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5251 = stablehlo.broadcast_in_dim %5250, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5252 = stablehlo.divide %3052, %5251 : tensor<768xbf16>
    %5253 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5254 = stablehlo.broadcast_in_dim %5253, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5255 = stablehlo.divide %3057, %5254 : tensor<768xbf16>
    %5256 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5257 = stablehlo.broadcast_in_dim %5256, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5258 = stablehlo.divide %3062, %5257 : tensor<3072x768xbf16>
    %5259 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5260 = stablehlo.broadcast_in_dim %5259, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5261 = stablehlo.divide %3067, %5260 : tensor<3072xbf16>
    %5262 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5263 = stablehlo.broadcast_in_dim %5262, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5264 = stablehlo.divide %3072, %5263 : tensor<768x3072xbf16>
    %5265 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5266 = stablehlo.broadcast_in_dim %5265, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5267 = stablehlo.divide %3077, %5266 : tensor<768xbf16>
    %5268 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5269 = stablehlo.broadcast_in_dim %5268, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5270 = stablehlo.divide %3082, %5269 : tensor<768xbf16>
    %5271 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5272 = stablehlo.broadcast_in_dim %5271, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5273 = stablehlo.divide %3087, %5272 : tensor<768xbf16>
    %5274 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5275 = stablehlo.broadcast_in_dim %5274, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5276 = stablehlo.divide %3092, %5275 : tensor<768x768xbf16>
    %5277 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5278 = stablehlo.broadcast_in_dim %5277, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5279 = stablehlo.divide %3097, %5278 : tensor<768xbf16>
    %5280 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5281 = stablehlo.broadcast_in_dim %5280, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5282 = stablehlo.divide %3102, %5281 : tensor<768x768xbf16>
    %5283 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5284 = stablehlo.broadcast_in_dim %5283, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5285 = stablehlo.divide %3107, %5284 : tensor<768xbf16>
    %5286 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5287 = stablehlo.broadcast_in_dim %5286, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5288 = stablehlo.divide %3112, %5287 : tensor<768x768xbf16>
    %5289 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5290 = stablehlo.broadcast_in_dim %5289, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5291 = stablehlo.divide %3117, %5290 : tensor<768xbf16>
    %5292 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5293 = stablehlo.broadcast_in_dim %5292, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5294 = stablehlo.divide %3122, %5293 : tensor<768x768xbf16>
    %5295 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5296 = stablehlo.broadcast_in_dim %5295, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5297 = stablehlo.divide %3127, %5296 : tensor<768xbf16>
    %5298 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5299 = stablehlo.broadcast_in_dim %5298, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5300 = stablehlo.divide %3132, %5299 : tensor<768xbf16>
    %5301 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5302 = stablehlo.broadcast_in_dim %5301, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5303 = stablehlo.divide %3137, %5302 : tensor<768xbf16>
    %5304 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5305 = stablehlo.broadcast_in_dim %5304, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5306 = stablehlo.divide %3142, %5305 : tensor<3072x768xbf16>
    %5307 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5308 = stablehlo.broadcast_in_dim %5307, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5309 = stablehlo.divide %3147, %5308 : tensor<3072xbf16>
    %5310 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5311 = stablehlo.broadcast_in_dim %5310, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5312 = stablehlo.divide %3152, %5311 : tensor<768x3072xbf16>
    %5313 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5314 = stablehlo.broadcast_in_dim %5313, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5315 = stablehlo.divide %3157, %5314 : tensor<768xbf16>
    %5316 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5317 = stablehlo.broadcast_in_dim %5316, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5318 = stablehlo.divide %3162, %5317 : tensor<768xbf16>
    %5319 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5320 = stablehlo.broadcast_in_dim %5319, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5321 = stablehlo.divide %3167, %5320 : tensor<768xbf16>
    %5322 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5323 = stablehlo.broadcast_in_dim %5322, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5324 = stablehlo.divide %3172, %5323 : tensor<768x768xbf16>
    %5325 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5326 = stablehlo.broadcast_in_dim %5325, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5327 = stablehlo.divide %3177, %5326 : tensor<768xbf16>
    %5328 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5329 = stablehlo.broadcast_in_dim %5328, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5330 = stablehlo.divide %3182, %5329 : tensor<768x768xbf16>
    %5331 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5332 = stablehlo.broadcast_in_dim %5331, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5333 = stablehlo.divide %3187, %5332 : tensor<768xbf16>
    %5334 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5335 = stablehlo.broadcast_in_dim %5334, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5336 = stablehlo.divide %3192, %5335 : tensor<768x768xbf16>
    %5337 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5338 = stablehlo.broadcast_in_dim %5337, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5339 = stablehlo.divide %3197, %5338 : tensor<768xbf16>
    %5340 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5341 = stablehlo.broadcast_in_dim %5340, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5342 = stablehlo.divide %3202, %5341 : tensor<768x768xbf16>
    %5343 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5344 = stablehlo.broadcast_in_dim %5343, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5345 = stablehlo.divide %3207, %5344 : tensor<768xbf16>
    %5346 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5347 = stablehlo.broadcast_in_dim %5346, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5348 = stablehlo.divide %3212, %5347 : tensor<768xbf16>
    %5349 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5350 = stablehlo.broadcast_in_dim %5349, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5351 = stablehlo.divide %3217, %5350 : tensor<768xbf16>
    %5352 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5353 = stablehlo.broadcast_in_dim %5352, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5354 = stablehlo.divide %3222, %5353 : tensor<3072x768xbf16>
    %5355 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5356 = stablehlo.broadcast_in_dim %5355, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5357 = stablehlo.divide %3227, %5356 : tensor<3072xbf16>
    %5358 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5359 = stablehlo.broadcast_in_dim %5358, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5360 = stablehlo.divide %3232, %5359 : tensor<768x3072xbf16>
    %5361 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5362 = stablehlo.broadcast_in_dim %5361, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5363 = stablehlo.divide %3237, %5362 : tensor<768xbf16>
    %5364 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5365 = stablehlo.broadcast_in_dim %5364, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5366 = stablehlo.divide %3242, %5365 : tensor<768xbf16>
    %5367 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5368 = stablehlo.broadcast_in_dim %5367, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5369 = stablehlo.divide %3247, %5368 : tensor<768xbf16>
    %5370 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5371 = stablehlo.broadcast_in_dim %5370, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5372 = stablehlo.divide %3252, %5371 : tensor<768x768xbf16>
    %5373 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5374 = stablehlo.broadcast_in_dim %5373, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5375 = stablehlo.divide %3257, %5374 : tensor<768xbf16>
    %5376 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5377 = stablehlo.broadcast_in_dim %5376, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5378 = stablehlo.divide %3262, %5377 : tensor<768x768xbf16>
    %5379 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5380 = stablehlo.broadcast_in_dim %5379, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5381 = stablehlo.divide %3267, %5380 : tensor<768xbf16>
    %5382 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5383 = stablehlo.broadcast_in_dim %5382, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5384 = stablehlo.divide %3272, %5383 : tensor<768x768xbf16>
    %5385 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5386 = stablehlo.broadcast_in_dim %5385, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5387 = stablehlo.divide %3277, %5386 : tensor<768xbf16>
    %5388 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5389 = stablehlo.broadcast_in_dim %5388, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5390 = stablehlo.divide %3282, %5389 : tensor<768x768xbf16>
    %5391 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5392 = stablehlo.broadcast_in_dim %5391, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5393 = stablehlo.divide %3287, %5392 : tensor<768xbf16>
    %5394 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5395 = stablehlo.broadcast_in_dim %5394, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5396 = stablehlo.divide %3292, %5395 : tensor<768xbf16>
    %5397 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5398 = stablehlo.broadcast_in_dim %5397, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5399 = stablehlo.divide %3297, %5398 : tensor<768xbf16>
    %5400 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5401 = stablehlo.broadcast_in_dim %5400, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5402 = stablehlo.divide %3302, %5401 : tensor<3072x768xbf16>
    %5403 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5404 = stablehlo.broadcast_in_dim %5403, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5405 = stablehlo.divide %3307, %5404 : tensor<3072xbf16>
    %5406 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5407 = stablehlo.broadcast_in_dim %5406, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5408 = stablehlo.divide %3312, %5407 : tensor<768x3072xbf16>
    %5409 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5410 = stablehlo.broadcast_in_dim %5409, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5411 = stablehlo.divide %3317, %5410 : tensor<768xbf16>
    %5412 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5413 = stablehlo.broadcast_in_dim %5412, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5414 = stablehlo.divide %3322, %5413 : tensor<768xbf16>
    %5415 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5416 = stablehlo.broadcast_in_dim %5415, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5417 = stablehlo.divide %3327, %5416 : tensor<768xbf16>
    %5418 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5419 = stablehlo.broadcast_in_dim %5418, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5420 = stablehlo.divide %3332, %5419 : tensor<768x768xbf16>
    %5421 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5422 = stablehlo.broadcast_in_dim %5421, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5423 = stablehlo.divide %3337, %5422 : tensor<768xbf16>
    %5424 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5425 = stablehlo.broadcast_in_dim %5424, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5426 = stablehlo.divide %3342, %5425 : tensor<768x768xbf16>
    %5427 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5428 = stablehlo.broadcast_in_dim %5427, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5429 = stablehlo.divide %3347, %5428 : tensor<768xbf16>
    %5430 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5431 = stablehlo.broadcast_in_dim %5430, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5432 = stablehlo.divide %3352, %5431 : tensor<768x768xbf16>
    %5433 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5434 = stablehlo.broadcast_in_dim %5433, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5435 = stablehlo.divide %3357, %5434 : tensor<768xbf16>
    %5436 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5437 = stablehlo.broadcast_in_dim %5436, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5438 = stablehlo.divide %3362, %5437 : tensor<768x768xbf16>
    %5439 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5440 = stablehlo.broadcast_in_dim %5439, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5441 = stablehlo.divide %3367, %5440 : tensor<768xbf16>
    %5442 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5443 = stablehlo.broadcast_in_dim %5442, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5444 = stablehlo.divide %3372, %5443 : tensor<768xbf16>
    %5445 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5446 = stablehlo.broadcast_in_dim %5445, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5447 = stablehlo.divide %3377, %5446 : tensor<768xbf16>
    %5448 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5449 = stablehlo.broadcast_in_dim %5448, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5450 = stablehlo.divide %3382, %5449 : tensor<3072x768xbf16>
    %5451 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5452 = stablehlo.broadcast_in_dim %5451, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5453 = stablehlo.divide %3387, %5452 : tensor<3072xbf16>
    %5454 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5455 = stablehlo.broadcast_in_dim %5454, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5456 = stablehlo.divide %3392, %5455 : tensor<768x3072xbf16>
    %5457 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5458 = stablehlo.broadcast_in_dim %5457, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5459 = stablehlo.divide %3397, %5458 : tensor<768xbf16>
    %5460 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5461 = stablehlo.broadcast_in_dim %5460, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5462 = stablehlo.divide %3402, %5461 : tensor<768xbf16>
    %5463 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5464 = stablehlo.broadcast_in_dim %5463, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5465 = stablehlo.divide %3407, %5464 : tensor<768xbf16>
    %5466 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5467 = stablehlo.broadcast_in_dim %5466, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5468 = stablehlo.divide %3412, %5467 : tensor<768x768xbf16>
    %5469 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5470 = stablehlo.broadcast_in_dim %5469, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5471 = stablehlo.divide %3417, %5470 : tensor<768xbf16>
    %5472 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5473 = stablehlo.broadcast_in_dim %5472, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5474 = stablehlo.divide %3422, %5473 : tensor<768x768xbf16>
    %5475 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5476 = stablehlo.broadcast_in_dim %5475, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5477 = stablehlo.divide %3427, %5476 : tensor<768xbf16>
    %5478 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5479 = stablehlo.broadcast_in_dim %5478, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5480 = stablehlo.divide %3432, %5479 : tensor<768x768xbf16>
    %5481 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5482 = stablehlo.broadcast_in_dim %5481, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5483 = stablehlo.divide %3437, %5482 : tensor<768xbf16>
    %5484 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5485 = stablehlo.broadcast_in_dim %5484, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5486 = stablehlo.divide %3442, %5485 : tensor<768x768xbf16>
    %5487 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5488 = stablehlo.broadcast_in_dim %5487, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5489 = stablehlo.divide %3447, %5488 : tensor<768xbf16>
    %5490 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5491 = stablehlo.broadcast_in_dim %5490, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5492 = stablehlo.divide %3452, %5491 : tensor<768xbf16>
    %5493 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5494 = stablehlo.broadcast_in_dim %5493, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5495 = stablehlo.divide %3457, %5494 : tensor<768xbf16>
    %5496 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5497 = stablehlo.broadcast_in_dim %5496, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5498 = stablehlo.divide %3462, %5497 : tensor<3072x768xbf16>
    %5499 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5500 = stablehlo.broadcast_in_dim %5499, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5501 = stablehlo.divide %3467, %5500 : tensor<3072xbf16>
    %5502 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5503 = stablehlo.broadcast_in_dim %5502, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5504 = stablehlo.divide %3472, %5503 : tensor<768x3072xbf16>
    %5505 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5506 = stablehlo.broadcast_in_dim %5505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5507 = stablehlo.divide %3477, %5506 : tensor<768xbf16>
    %5508 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5509 = stablehlo.broadcast_in_dim %5508, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5510 = stablehlo.divide %3482, %5509 : tensor<768xbf16>
    %5511 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5512 = stablehlo.broadcast_in_dim %5511, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5513 = stablehlo.divide %3487, %5512 : tensor<768xbf16>
    %5514 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5515 = stablehlo.broadcast_in_dim %5514, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5516 = stablehlo.divide %3492, %5515 : tensor<768x768xbf16>
    %5517 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5518 = stablehlo.broadcast_in_dim %5517, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5519 = stablehlo.divide %3497, %5518 : tensor<768xbf16>
    %5520 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5521 = stablehlo.broadcast_in_dim %5520, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5522 = stablehlo.divide %3502, %5521 : tensor<768x768xbf16>
    %5523 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5524 = stablehlo.broadcast_in_dim %5523, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5525 = stablehlo.divide %3507, %5524 : tensor<768xbf16>
    %5526 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5527 = stablehlo.broadcast_in_dim %5526, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5528 = stablehlo.divide %3512, %5527 : tensor<768x768xbf16>
    %5529 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5530 = stablehlo.broadcast_in_dim %5529, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5531 = stablehlo.divide %3517, %5530 : tensor<768xbf16>
    %5532 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5533 = stablehlo.broadcast_in_dim %5532, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5534 = stablehlo.divide %3522, %5533 : tensor<768x768xbf16>
    %5535 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5536 = stablehlo.broadcast_in_dim %5535, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5537 = stablehlo.divide %3527, %5536 : tensor<768xbf16>
    %5538 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5539 = stablehlo.broadcast_in_dim %5538, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5540 = stablehlo.divide %3532, %5539 : tensor<768xbf16>
    %5541 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5542 = stablehlo.broadcast_in_dim %5541, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5543 = stablehlo.divide %3537, %5542 : tensor<768xbf16>
    %5544 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5545 = stablehlo.broadcast_in_dim %5544, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5546 = stablehlo.divide %3542, %5545 : tensor<3072x768xbf16>
    %5547 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5548 = stablehlo.broadcast_in_dim %5547, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5549 = stablehlo.divide %3547, %5548 : tensor<3072xbf16>
    %5550 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5551 = stablehlo.broadcast_in_dim %5550, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5552 = stablehlo.divide %3552, %5551 : tensor<768x3072xbf16>
    %5553 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5554 = stablehlo.broadcast_in_dim %5553, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5555 = stablehlo.divide %3557, %5554 : tensor<768xbf16>
    %5556 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5557 = stablehlo.broadcast_in_dim %5556, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5558 = stablehlo.divide %3562, %5557 : tensor<768xbf16>
    %5559 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5560 = stablehlo.broadcast_in_dim %5559, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5561 = stablehlo.divide %3567, %5560 : tensor<768xbf16>
    %5562 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5563 = stablehlo.broadcast_in_dim %5562, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5564 = stablehlo.divide %3572, %5563 : tensor<768x768xbf16>
    %5565 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5566 = stablehlo.broadcast_in_dim %5565, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5567 = stablehlo.divide %3577, %5566 : tensor<768xbf16>
    %5568 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5569 = stablehlo.broadcast_in_dim %5568, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5570 = stablehlo.divide %3582, %5569 : tensor<768x768xbf16>
    %5571 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5572 = stablehlo.broadcast_in_dim %5571, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5573 = stablehlo.divide %3587, %5572 : tensor<768xbf16>
    %5574 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5575 = stablehlo.broadcast_in_dim %5574, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5576 = stablehlo.divide %3592, %5575 : tensor<768x768xbf16>
    %5577 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5578 = stablehlo.broadcast_in_dim %5577, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5579 = stablehlo.divide %3597, %5578 : tensor<768xbf16>
    %5580 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5581 = stablehlo.broadcast_in_dim %5580, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5582 = stablehlo.divide %3602, %5581 : tensor<768x768xbf16>
    %5583 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5584 = stablehlo.broadcast_in_dim %5583, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5585 = stablehlo.divide %3607, %5584 : tensor<768xbf16>
    %5586 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5587 = stablehlo.broadcast_in_dim %5586, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5588 = stablehlo.divide %3612, %5587 : tensor<768xbf16>
    %5589 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5590 = stablehlo.broadcast_in_dim %5589, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5591 = stablehlo.divide %3617, %5590 : tensor<768xbf16>
    %5592 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5593 = stablehlo.broadcast_in_dim %5592, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5594 = stablehlo.divide %3622, %5593 : tensor<3072x768xbf16>
    %5595 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5596 = stablehlo.broadcast_in_dim %5595, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5597 = stablehlo.divide %3627, %5596 : tensor<3072xbf16>
    %5598 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5599 = stablehlo.broadcast_in_dim %5598, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5600 = stablehlo.divide %3632, %5599 : tensor<768x3072xbf16>
    %5601 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5602 = stablehlo.broadcast_in_dim %5601, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5603 = stablehlo.divide %3637, %5602 : tensor<768xbf16>
    %5604 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5605 = stablehlo.broadcast_in_dim %5604, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5606 = stablehlo.divide %3642, %5605 : tensor<768xbf16>
    %5607 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5608 = stablehlo.broadcast_in_dim %5607, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5609 = stablehlo.divide %3647, %5608 : tensor<768xbf16>
    %5610 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5611 = stablehlo.broadcast_in_dim %5610, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5612 = stablehlo.divide %3652, %5611 : tensor<768x768xbf16>
    %5613 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5614 = stablehlo.broadcast_in_dim %5613, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5615 = stablehlo.divide %3657, %5614 : tensor<768xbf16>
    %5616 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5617 = stablehlo.broadcast_in_dim %5616, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5618 = stablehlo.divide %3662, %5617 : tensor<768x768xbf16>
    %5619 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5620 = stablehlo.broadcast_in_dim %5619, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5621 = stablehlo.divide %3667, %5620 : tensor<768xbf16>
    %5622 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5623 = stablehlo.broadcast_in_dim %5622, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5624 = stablehlo.divide %3672, %5623 : tensor<768x768xbf16>
    %5625 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5626 = stablehlo.broadcast_in_dim %5625, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5627 = stablehlo.divide %3677, %5626 : tensor<768xbf16>
    %5628 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5629 = stablehlo.broadcast_in_dim %5628, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5630 = stablehlo.divide %3682, %5629 : tensor<768x768xbf16>
    %5631 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5632 = stablehlo.broadcast_in_dim %5631, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5633 = stablehlo.divide %3687, %5632 : tensor<768xbf16>
    %5634 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5635 = stablehlo.broadcast_in_dim %5634, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5636 = stablehlo.divide %3692, %5635 : tensor<768xbf16>
    %5637 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5638 = stablehlo.broadcast_in_dim %5637, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5639 = stablehlo.divide %3697, %5638 : tensor<768xbf16>
    %5640 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5641 = stablehlo.broadcast_in_dim %5640, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5642 = stablehlo.divide %3702, %5641 : tensor<3072x768xbf16>
    %5643 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5644 = stablehlo.broadcast_in_dim %5643, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5645 = stablehlo.divide %3707, %5644 : tensor<3072xbf16>
    %5646 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5647 = stablehlo.broadcast_in_dim %5646, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5648 = stablehlo.divide %3712, %5647 : tensor<768x3072xbf16>
    %5649 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5650 = stablehlo.broadcast_in_dim %5649, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5651 = stablehlo.divide %3717, %5650 : tensor<768xbf16>
    %5652 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5653 = stablehlo.broadcast_in_dim %5652, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5654 = stablehlo.divide %3722, %5653 : tensor<768xbf16>
    %5655 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5656 = stablehlo.broadcast_in_dim %5655, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5657 = stablehlo.divide %3727, %5656 : tensor<768xbf16>
    %5658 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5659 = stablehlo.broadcast_in_dim %5658, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5660 = stablehlo.divide %3732, %5659 : tensor<768x768xbf16>
    %5661 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5662 = stablehlo.broadcast_in_dim %5661, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5663 = stablehlo.divide %3737, %5662 : tensor<768xbf16>
    %5664 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5665 = stablehlo.broadcast_in_dim %5664, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5666 = stablehlo.divide %3742, %5665 : tensor<768x768xbf16>
    %5667 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5668 = stablehlo.broadcast_in_dim %5667, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5669 = stablehlo.divide %3747, %5668 : tensor<768xbf16>
    %5670 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5671 = stablehlo.broadcast_in_dim %5670, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5672 = stablehlo.divide %3752, %5671 : tensor<768x768xbf16>
    %5673 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5674 = stablehlo.broadcast_in_dim %5673, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5675 = stablehlo.divide %3757, %5674 : tensor<768xbf16>
    %5676 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5677 = stablehlo.broadcast_in_dim %5676, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5678 = stablehlo.divide %3762, %5677 : tensor<768x768xbf16>
    %5679 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5680 = stablehlo.broadcast_in_dim %5679, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5681 = stablehlo.divide %3767, %5680 : tensor<768xbf16>
    %5682 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5683 = stablehlo.broadcast_in_dim %5682, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5684 = stablehlo.divide %3772, %5683 : tensor<768xbf16>
    %5685 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5686 = stablehlo.broadcast_in_dim %5685, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5687 = stablehlo.divide %3777, %5686 : tensor<768xbf16>
    %5688 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5689 = stablehlo.broadcast_in_dim %5688, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5690 = stablehlo.divide %3782, %5689 : tensor<3072x768xbf16>
    %5691 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5692 = stablehlo.broadcast_in_dim %5691, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5693 = stablehlo.divide %3787, %5692 : tensor<3072xbf16>
    %5694 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5695 = stablehlo.broadcast_in_dim %5694, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5696 = stablehlo.divide %3792, %5695 : tensor<768x3072xbf16>
    %5697 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5698 = stablehlo.broadcast_in_dim %5697, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5699 = stablehlo.divide %3797, %5698 : tensor<768xbf16>
    %5700 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5701 = stablehlo.broadcast_in_dim %5700, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5702 = stablehlo.divide %3802, %5701 : tensor<768xbf16>
    %5703 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5704 = stablehlo.broadcast_in_dim %5703, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5705 = stablehlo.divide %3807, %5704 : tensor<768xbf16>
    %5706 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5707 = stablehlo.broadcast_in_dim %5706, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5708 = stablehlo.divide %3812, %5707 : tensor<768x768xbf16>
    %5709 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5710 = stablehlo.broadcast_in_dim %5709, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5711 = stablehlo.divide %3817, %5710 : tensor<768xbf16>
    %5712 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5713 = stablehlo.broadcast_in_dim %5712, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5714 = stablehlo.divide %3822, %5713 : tensor<768x768xbf16>
    %5715 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5716 = stablehlo.broadcast_in_dim %5715, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5717 = stablehlo.divide %3827, %5716 : tensor<768xbf16>
    %5718 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5719 = stablehlo.broadcast_in_dim %5718, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5720 = stablehlo.divide %3832, %5719 : tensor<768x768xbf16>
    %5721 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5722 = stablehlo.broadcast_in_dim %5721, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5723 = stablehlo.divide %3837, %5722 : tensor<768xbf16>
    %5724 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5725 = stablehlo.broadcast_in_dim %5724, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5726 = stablehlo.divide %3842, %5725 : tensor<768x768xbf16>
    %5727 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5728 = stablehlo.broadcast_in_dim %5727, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5729 = stablehlo.divide %3847, %5728 : tensor<768xbf16>
    %5730 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5731 = stablehlo.broadcast_in_dim %5730, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5732 = stablehlo.divide %3852, %5731 : tensor<768xbf16>
    %5733 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5734 = stablehlo.broadcast_in_dim %5733, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5735 = stablehlo.divide %3857, %5734 : tensor<768xbf16>
    %5736 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5737 = stablehlo.broadcast_in_dim %5736, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5738 = stablehlo.divide %3862, %5737 : tensor<3072x768xbf16>
    %5739 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5740 = stablehlo.broadcast_in_dim %5739, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5741 = stablehlo.divide %3867, %5740 : tensor<3072xbf16>
    %5742 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5743 = stablehlo.broadcast_in_dim %5742, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5744 = stablehlo.divide %3872, %5743 : tensor<768x3072xbf16>
    %5745 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5746 = stablehlo.broadcast_in_dim %5745, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5747 = stablehlo.divide %3877, %5746 : tensor<768xbf16>
    %5748 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5749 = stablehlo.broadcast_in_dim %5748, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5750 = stablehlo.divide %3882, %5749 : tensor<768xbf16>
    %5751 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5752 = stablehlo.broadcast_in_dim %5751, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5753 = stablehlo.divide %3887, %5752 : tensor<768xbf16>
    %5754 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5755 = stablehlo.broadcast_in_dim %5754, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5756 = stablehlo.divide %3892, %5755 : tensor<768x768xbf16>
    %5757 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5758 = stablehlo.broadcast_in_dim %5757, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5759 = stablehlo.divide %3897, %5758 : tensor<768xbf16>
    %5760 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5761 = stablehlo.broadcast_in_dim %5760, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5762 = stablehlo.divide %3902, %5761 : tensor<768x768xbf16>
    %5763 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5764 = stablehlo.broadcast_in_dim %5763, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5765 = stablehlo.divide %3907, %5764 : tensor<768xbf16>
    %5766 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5767 = stablehlo.broadcast_in_dim %5766, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5768 = stablehlo.divide %3912, %5767 : tensor<768x768xbf16>
    %5769 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5770 = stablehlo.broadcast_in_dim %5769, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5771 = stablehlo.divide %3917, %5770 : tensor<768xbf16>
    %5772 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5773 = stablehlo.broadcast_in_dim %5772, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5774 = stablehlo.divide %3922, %5773 : tensor<768x768xbf16>
    %5775 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5776 = stablehlo.broadcast_in_dim %5775, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5777 = stablehlo.divide %3927, %5776 : tensor<768xbf16>
    %5778 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5779 = stablehlo.broadcast_in_dim %5778, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5780 = stablehlo.divide %3932, %5779 : tensor<768xbf16>
    %5781 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5782 = stablehlo.broadcast_in_dim %5781, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5783 = stablehlo.divide %3937, %5782 : tensor<768xbf16>
    %5784 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5785 = stablehlo.broadcast_in_dim %5784, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5786 = stablehlo.divide %3942, %5785 : tensor<3072x768xbf16>
    %5787 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5788 = stablehlo.broadcast_in_dim %5787, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5789 = stablehlo.divide %3947, %5788 : tensor<3072xbf16>
    %5790 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5791 = stablehlo.broadcast_in_dim %5790, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5792 = stablehlo.divide %3952, %5791 : tensor<768x3072xbf16>
    %5793 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5794 = stablehlo.broadcast_in_dim %5793, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5795 = stablehlo.divide %3957, %5794 : tensor<768xbf16>
    %5796 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5797 = stablehlo.broadcast_in_dim %5796, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5798 = stablehlo.divide %3962, %5797 : tensor<768xbf16>
    %5799 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5800 = stablehlo.broadcast_in_dim %5799, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5801 = stablehlo.divide %3967, %5800 : tensor<768xbf16>
    %5802 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5803 = stablehlo.broadcast_in_dim %5802, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5804 = stablehlo.divide %3972, %5803 : tensor<768x768xbf16>
    %5805 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5806 = stablehlo.broadcast_in_dim %5805, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5807 = stablehlo.divide %3977, %5806 : tensor<768xbf16>
    %5808 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5809 = stablehlo.broadcast_in_dim %5808, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5810 = stablehlo.divide %3982, %5809 : tensor<768xbf16>
    %5811 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5812 = stablehlo.broadcast_in_dim %5811, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5813 = stablehlo.divide %3987, %5812 : tensor<768xbf16>
    %5814 = stablehlo.convert %5210 : (tensor<f32>) -> tensor<bf16>
    %5815 = stablehlo.broadcast_in_dim %5814, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %5816 = stablehlo.divide %3992, %5815 : tensor<30522xbf16>
    %cst_503 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %5817 = stablehlo.convert %5207 : (tensor<i32>) -> tensor<f32>
    %5818 = stablehlo.power %cst_503, %5817 : tensor<f32>
    %5819 = stablehlo.subtract %cst_68, %5818 : tensor<f32>
    %5820 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5821 = stablehlo.broadcast_in_dim %5820, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %5822 = stablehlo.divide %3998, %5821 : tensor<30522x768xbf16>
    %5823 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5824 = stablehlo.broadcast_in_dim %5823, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %5825 = stablehlo.divide %4004, %5824 : tensor<512x768xbf16>
    %5826 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5827 = stablehlo.broadcast_in_dim %5826, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %5828 = stablehlo.divide %4010, %5827 : tensor<2x768xbf16>
    %5829 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5830 = stablehlo.broadcast_in_dim %5829, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5831 = stablehlo.divide %4016, %5830 : tensor<768xbf16>
    %5832 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5833 = stablehlo.broadcast_in_dim %5832, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5834 = stablehlo.divide %4022, %5833 : tensor<768xbf16>
    %5835 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5836 = stablehlo.broadcast_in_dim %5835, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5837 = stablehlo.divide %4028, %5836 : tensor<768x768xbf16>
    %5838 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5839 = stablehlo.broadcast_in_dim %5838, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5840 = stablehlo.divide %4034, %5839 : tensor<768xbf16>
    %5841 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5842 = stablehlo.broadcast_in_dim %5841, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5843 = stablehlo.divide %4040, %5842 : tensor<768x768xbf16>
    %5844 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5845 = stablehlo.broadcast_in_dim %5844, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5846 = stablehlo.divide %4046, %5845 : tensor<768xbf16>
    %5847 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5848 = stablehlo.broadcast_in_dim %5847, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5849 = stablehlo.divide %4052, %5848 : tensor<768x768xbf16>
    %5850 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5851 = stablehlo.broadcast_in_dim %5850, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5852 = stablehlo.divide %4058, %5851 : tensor<768xbf16>
    %5853 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5854 = stablehlo.broadcast_in_dim %5853, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5855 = stablehlo.divide %4064, %5854 : tensor<768x768xbf16>
    %5856 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5857 = stablehlo.broadcast_in_dim %5856, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5858 = stablehlo.divide %4070, %5857 : tensor<768xbf16>
    %5859 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5860 = stablehlo.broadcast_in_dim %5859, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5861 = stablehlo.divide %4076, %5860 : tensor<768xbf16>
    %5862 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5863 = stablehlo.broadcast_in_dim %5862, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5864 = stablehlo.divide %4082, %5863 : tensor<768xbf16>
    %5865 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5866 = stablehlo.broadcast_in_dim %5865, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5867 = stablehlo.divide %4088, %5866 : tensor<3072x768xbf16>
    %5868 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5869 = stablehlo.broadcast_in_dim %5868, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5870 = stablehlo.divide %4094, %5869 : tensor<3072xbf16>
    %5871 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5872 = stablehlo.broadcast_in_dim %5871, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5873 = stablehlo.divide %4100, %5872 : tensor<768x3072xbf16>
    %5874 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5875 = stablehlo.broadcast_in_dim %5874, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5876 = stablehlo.divide %4106, %5875 : tensor<768xbf16>
    %5877 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5878 = stablehlo.broadcast_in_dim %5877, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5879 = stablehlo.divide %4112, %5878 : tensor<768xbf16>
    %5880 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5881 = stablehlo.broadcast_in_dim %5880, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5882 = stablehlo.divide %4118, %5881 : tensor<768xbf16>
    %5883 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5884 = stablehlo.broadcast_in_dim %5883, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5885 = stablehlo.divide %4124, %5884 : tensor<768x768xbf16>
    %5886 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5887 = stablehlo.broadcast_in_dim %5886, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5888 = stablehlo.divide %4130, %5887 : tensor<768xbf16>
    %5889 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5890 = stablehlo.broadcast_in_dim %5889, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5891 = stablehlo.divide %4136, %5890 : tensor<768x768xbf16>
    %5892 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5893 = stablehlo.broadcast_in_dim %5892, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5894 = stablehlo.divide %4142, %5893 : tensor<768xbf16>
    %5895 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5896 = stablehlo.broadcast_in_dim %5895, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5897 = stablehlo.divide %4148, %5896 : tensor<768x768xbf16>
    %5898 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5899 = stablehlo.broadcast_in_dim %5898, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5900 = stablehlo.divide %4154, %5899 : tensor<768xbf16>
    %5901 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5902 = stablehlo.broadcast_in_dim %5901, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5903 = stablehlo.divide %4160, %5902 : tensor<768x768xbf16>
    %5904 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5905 = stablehlo.broadcast_in_dim %5904, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5906 = stablehlo.divide %4166, %5905 : tensor<768xbf16>
    %5907 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5908 = stablehlo.broadcast_in_dim %5907, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5909 = stablehlo.divide %4172, %5908 : tensor<768xbf16>
    %5910 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5911 = stablehlo.broadcast_in_dim %5910, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5912 = stablehlo.divide %4178, %5911 : tensor<768xbf16>
    %5913 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5914 = stablehlo.broadcast_in_dim %5913, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5915 = stablehlo.divide %4184, %5914 : tensor<3072x768xbf16>
    %5916 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5917 = stablehlo.broadcast_in_dim %5916, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5918 = stablehlo.divide %4190, %5917 : tensor<3072xbf16>
    %5919 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5920 = stablehlo.broadcast_in_dim %5919, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5921 = stablehlo.divide %4196, %5920 : tensor<768x3072xbf16>
    %5922 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5923 = stablehlo.broadcast_in_dim %5922, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5924 = stablehlo.divide %4202, %5923 : tensor<768xbf16>
    %5925 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5926 = stablehlo.broadcast_in_dim %5925, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5927 = stablehlo.divide %4208, %5926 : tensor<768xbf16>
    %5928 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5929 = stablehlo.broadcast_in_dim %5928, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5930 = stablehlo.divide %4214, %5929 : tensor<768xbf16>
    %5931 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5932 = stablehlo.broadcast_in_dim %5931, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5933 = stablehlo.divide %4220, %5932 : tensor<768x768xbf16>
    %5934 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5935 = stablehlo.broadcast_in_dim %5934, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5936 = stablehlo.divide %4226, %5935 : tensor<768xbf16>
    %5937 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5938 = stablehlo.broadcast_in_dim %5937, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5939 = stablehlo.divide %4232, %5938 : tensor<768x768xbf16>
    %5940 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5941 = stablehlo.broadcast_in_dim %5940, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5942 = stablehlo.divide %4238, %5941 : tensor<768xbf16>
    %5943 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5944 = stablehlo.broadcast_in_dim %5943, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5945 = stablehlo.divide %4244, %5944 : tensor<768x768xbf16>
    %5946 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5947 = stablehlo.broadcast_in_dim %5946, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5948 = stablehlo.divide %4250, %5947 : tensor<768xbf16>
    %5949 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5950 = stablehlo.broadcast_in_dim %5949, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5951 = stablehlo.divide %4256, %5950 : tensor<768x768xbf16>
    %5952 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5953 = stablehlo.broadcast_in_dim %5952, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5954 = stablehlo.divide %4262, %5953 : tensor<768xbf16>
    %5955 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5956 = stablehlo.broadcast_in_dim %5955, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5957 = stablehlo.divide %4268, %5956 : tensor<768xbf16>
    %5958 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5959 = stablehlo.broadcast_in_dim %5958, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5960 = stablehlo.divide %4274, %5959 : tensor<768xbf16>
    %5961 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5962 = stablehlo.broadcast_in_dim %5961, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %5963 = stablehlo.divide %4280, %5962 : tensor<3072x768xbf16>
    %5964 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5965 = stablehlo.broadcast_in_dim %5964, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %5966 = stablehlo.divide %4286, %5965 : tensor<3072xbf16>
    %5967 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5968 = stablehlo.broadcast_in_dim %5967, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %5969 = stablehlo.divide %4292, %5968 : tensor<768x3072xbf16>
    %5970 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5971 = stablehlo.broadcast_in_dim %5970, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5972 = stablehlo.divide %4298, %5971 : tensor<768xbf16>
    %5973 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5974 = stablehlo.broadcast_in_dim %5973, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5975 = stablehlo.divide %4304, %5974 : tensor<768xbf16>
    %5976 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5977 = stablehlo.broadcast_in_dim %5976, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5978 = stablehlo.divide %4310, %5977 : tensor<768xbf16>
    %5979 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5980 = stablehlo.broadcast_in_dim %5979, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5981 = stablehlo.divide %4316, %5980 : tensor<768x768xbf16>
    %5982 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5983 = stablehlo.broadcast_in_dim %5982, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5984 = stablehlo.divide %4322, %5983 : tensor<768xbf16>
    %5985 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5986 = stablehlo.broadcast_in_dim %5985, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5987 = stablehlo.divide %4328, %5986 : tensor<768x768xbf16>
    %5988 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5989 = stablehlo.broadcast_in_dim %5988, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5990 = stablehlo.divide %4334, %5989 : tensor<768xbf16>
    %5991 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5992 = stablehlo.broadcast_in_dim %5991, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5993 = stablehlo.divide %4340, %5992 : tensor<768x768xbf16>
    %5994 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5995 = stablehlo.broadcast_in_dim %5994, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %5996 = stablehlo.divide %4346, %5995 : tensor<768xbf16>
    %5997 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %5998 = stablehlo.broadcast_in_dim %5997, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %5999 = stablehlo.divide %4352, %5998 : tensor<768x768xbf16>
    %6000 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6001 = stablehlo.broadcast_in_dim %6000, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6002 = stablehlo.divide %4358, %6001 : tensor<768xbf16>
    %6003 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6004 = stablehlo.broadcast_in_dim %6003, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6005 = stablehlo.divide %4364, %6004 : tensor<768xbf16>
    %6006 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6007 = stablehlo.broadcast_in_dim %6006, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6008 = stablehlo.divide %4370, %6007 : tensor<768xbf16>
    %6009 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6010 = stablehlo.broadcast_in_dim %6009, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6011 = stablehlo.divide %4376, %6010 : tensor<3072x768xbf16>
    %6012 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6013 = stablehlo.broadcast_in_dim %6012, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6014 = stablehlo.divide %4382, %6013 : tensor<3072xbf16>
    %6015 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6016 = stablehlo.broadcast_in_dim %6015, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6017 = stablehlo.divide %4388, %6016 : tensor<768x3072xbf16>
    %6018 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6019 = stablehlo.broadcast_in_dim %6018, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6020 = stablehlo.divide %4394, %6019 : tensor<768xbf16>
    %6021 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6022 = stablehlo.broadcast_in_dim %6021, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6023 = stablehlo.divide %4400, %6022 : tensor<768xbf16>
    %6024 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6025 = stablehlo.broadcast_in_dim %6024, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6026 = stablehlo.divide %4406, %6025 : tensor<768xbf16>
    %6027 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6028 = stablehlo.broadcast_in_dim %6027, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6029 = stablehlo.divide %4412, %6028 : tensor<768x768xbf16>
    %6030 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6031 = stablehlo.broadcast_in_dim %6030, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6032 = stablehlo.divide %4418, %6031 : tensor<768xbf16>
    %6033 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6034 = stablehlo.broadcast_in_dim %6033, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6035 = stablehlo.divide %4424, %6034 : tensor<768x768xbf16>
    %6036 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6037 = stablehlo.broadcast_in_dim %6036, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6038 = stablehlo.divide %4430, %6037 : tensor<768xbf16>
    %6039 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6040 = stablehlo.broadcast_in_dim %6039, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6041 = stablehlo.divide %4436, %6040 : tensor<768x768xbf16>
    %6042 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6043 = stablehlo.broadcast_in_dim %6042, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6044 = stablehlo.divide %4442, %6043 : tensor<768xbf16>
    %6045 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6046 = stablehlo.broadcast_in_dim %6045, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6047 = stablehlo.divide %4448, %6046 : tensor<768x768xbf16>
    %6048 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6049 = stablehlo.broadcast_in_dim %6048, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6050 = stablehlo.divide %4454, %6049 : tensor<768xbf16>
    %6051 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6052 = stablehlo.broadcast_in_dim %6051, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6053 = stablehlo.divide %4460, %6052 : tensor<768xbf16>
    %6054 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6055 = stablehlo.broadcast_in_dim %6054, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6056 = stablehlo.divide %4466, %6055 : tensor<768xbf16>
    %6057 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6058 = stablehlo.broadcast_in_dim %6057, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6059 = stablehlo.divide %4472, %6058 : tensor<3072x768xbf16>
    %6060 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6061 = stablehlo.broadcast_in_dim %6060, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6062 = stablehlo.divide %4478, %6061 : tensor<3072xbf16>
    %6063 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6064 = stablehlo.broadcast_in_dim %6063, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6065 = stablehlo.divide %4484, %6064 : tensor<768x3072xbf16>
    %6066 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6067 = stablehlo.broadcast_in_dim %6066, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6068 = stablehlo.divide %4490, %6067 : tensor<768xbf16>
    %6069 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6070 = stablehlo.broadcast_in_dim %6069, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6071 = stablehlo.divide %4496, %6070 : tensor<768xbf16>
    %6072 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6073 = stablehlo.broadcast_in_dim %6072, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6074 = stablehlo.divide %4502, %6073 : tensor<768xbf16>
    %6075 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6076 = stablehlo.broadcast_in_dim %6075, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6077 = stablehlo.divide %4508, %6076 : tensor<768x768xbf16>
    %6078 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6079 = stablehlo.broadcast_in_dim %6078, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6080 = stablehlo.divide %4514, %6079 : tensor<768xbf16>
    %6081 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6082 = stablehlo.broadcast_in_dim %6081, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6083 = stablehlo.divide %4520, %6082 : tensor<768x768xbf16>
    %6084 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6085 = stablehlo.broadcast_in_dim %6084, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6086 = stablehlo.divide %4526, %6085 : tensor<768xbf16>
    %6087 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6088 = stablehlo.broadcast_in_dim %6087, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6089 = stablehlo.divide %4532, %6088 : tensor<768x768xbf16>
    %6090 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6091 = stablehlo.broadcast_in_dim %6090, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6092 = stablehlo.divide %4538, %6091 : tensor<768xbf16>
    %6093 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6094 = stablehlo.broadcast_in_dim %6093, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6095 = stablehlo.divide %4544, %6094 : tensor<768x768xbf16>
    %6096 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6097 = stablehlo.broadcast_in_dim %6096, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6098 = stablehlo.divide %4550, %6097 : tensor<768xbf16>
    %6099 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6100 = stablehlo.broadcast_in_dim %6099, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6101 = stablehlo.divide %4556, %6100 : tensor<768xbf16>
    %6102 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6103 = stablehlo.broadcast_in_dim %6102, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6104 = stablehlo.divide %4562, %6103 : tensor<768xbf16>
    %6105 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6106 = stablehlo.broadcast_in_dim %6105, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6107 = stablehlo.divide %4568, %6106 : tensor<3072x768xbf16>
    %6108 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6109 = stablehlo.broadcast_in_dim %6108, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6110 = stablehlo.divide %4574, %6109 : tensor<3072xbf16>
    %6111 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6112 = stablehlo.broadcast_in_dim %6111, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6113 = stablehlo.divide %4580, %6112 : tensor<768x3072xbf16>
    %6114 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6115 = stablehlo.broadcast_in_dim %6114, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6116 = stablehlo.divide %4586, %6115 : tensor<768xbf16>
    %6117 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6118 = stablehlo.broadcast_in_dim %6117, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6119 = stablehlo.divide %4592, %6118 : tensor<768xbf16>
    %6120 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6121 = stablehlo.broadcast_in_dim %6120, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6122 = stablehlo.divide %4598, %6121 : tensor<768xbf16>
    %6123 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6124 = stablehlo.broadcast_in_dim %6123, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6125 = stablehlo.divide %4604, %6124 : tensor<768x768xbf16>
    %6126 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6127 = stablehlo.broadcast_in_dim %6126, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6128 = stablehlo.divide %4610, %6127 : tensor<768xbf16>
    %6129 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6130 = stablehlo.broadcast_in_dim %6129, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6131 = stablehlo.divide %4616, %6130 : tensor<768x768xbf16>
    %6132 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6133 = stablehlo.broadcast_in_dim %6132, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6134 = stablehlo.divide %4622, %6133 : tensor<768xbf16>
    %6135 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6136 = stablehlo.broadcast_in_dim %6135, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6137 = stablehlo.divide %4628, %6136 : tensor<768x768xbf16>
    %6138 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6139 = stablehlo.broadcast_in_dim %6138, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6140 = stablehlo.divide %4634, %6139 : tensor<768xbf16>
    %6141 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6142 = stablehlo.broadcast_in_dim %6141, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6143 = stablehlo.divide %4640, %6142 : tensor<768x768xbf16>
    %6144 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6145 = stablehlo.broadcast_in_dim %6144, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6146 = stablehlo.divide %4646, %6145 : tensor<768xbf16>
    %6147 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6148 = stablehlo.broadcast_in_dim %6147, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6149 = stablehlo.divide %4652, %6148 : tensor<768xbf16>
    %6150 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6151 = stablehlo.broadcast_in_dim %6150, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6152 = stablehlo.divide %4658, %6151 : tensor<768xbf16>
    %6153 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6154 = stablehlo.broadcast_in_dim %6153, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6155 = stablehlo.divide %4664, %6154 : tensor<3072x768xbf16>
    %6156 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6157 = stablehlo.broadcast_in_dim %6156, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6158 = stablehlo.divide %4670, %6157 : tensor<3072xbf16>
    %6159 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6160 = stablehlo.broadcast_in_dim %6159, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6161 = stablehlo.divide %4676, %6160 : tensor<768x3072xbf16>
    %6162 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6163 = stablehlo.broadcast_in_dim %6162, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6164 = stablehlo.divide %4682, %6163 : tensor<768xbf16>
    %6165 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6166 = stablehlo.broadcast_in_dim %6165, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6167 = stablehlo.divide %4688, %6166 : tensor<768xbf16>
    %6168 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6169 = stablehlo.broadcast_in_dim %6168, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6170 = stablehlo.divide %4694, %6169 : tensor<768xbf16>
    %6171 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6172 = stablehlo.broadcast_in_dim %6171, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6173 = stablehlo.divide %4700, %6172 : tensor<768x768xbf16>
    %6174 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6175 = stablehlo.broadcast_in_dim %6174, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6176 = stablehlo.divide %4706, %6175 : tensor<768xbf16>
    %6177 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6178 = stablehlo.broadcast_in_dim %6177, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6179 = stablehlo.divide %4712, %6178 : tensor<768x768xbf16>
    %6180 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6181 = stablehlo.broadcast_in_dim %6180, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6182 = stablehlo.divide %4718, %6181 : tensor<768xbf16>
    %6183 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6184 = stablehlo.broadcast_in_dim %6183, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6185 = stablehlo.divide %4724, %6184 : tensor<768x768xbf16>
    %6186 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6187 = stablehlo.broadcast_in_dim %6186, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6188 = stablehlo.divide %4730, %6187 : tensor<768xbf16>
    %6189 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6190 = stablehlo.broadcast_in_dim %6189, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6191 = stablehlo.divide %4736, %6190 : tensor<768x768xbf16>
    %6192 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6193 = stablehlo.broadcast_in_dim %6192, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6194 = stablehlo.divide %4742, %6193 : tensor<768xbf16>
    %6195 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6196 = stablehlo.broadcast_in_dim %6195, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6197 = stablehlo.divide %4748, %6196 : tensor<768xbf16>
    %6198 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6199 = stablehlo.broadcast_in_dim %6198, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6200 = stablehlo.divide %4754, %6199 : tensor<768xbf16>
    %6201 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6202 = stablehlo.broadcast_in_dim %6201, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6203 = stablehlo.divide %4760, %6202 : tensor<3072x768xbf16>
    %6204 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6205 = stablehlo.broadcast_in_dim %6204, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6206 = stablehlo.divide %4766, %6205 : tensor<3072xbf16>
    %6207 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6208 = stablehlo.broadcast_in_dim %6207, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6209 = stablehlo.divide %4772, %6208 : tensor<768x3072xbf16>
    %6210 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6211 = stablehlo.broadcast_in_dim %6210, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6212 = stablehlo.divide %4778, %6211 : tensor<768xbf16>
    %6213 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6214 = stablehlo.broadcast_in_dim %6213, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6215 = stablehlo.divide %4784, %6214 : tensor<768xbf16>
    %6216 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6217 = stablehlo.broadcast_in_dim %6216, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6218 = stablehlo.divide %4790, %6217 : tensor<768xbf16>
    %6219 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6220 = stablehlo.broadcast_in_dim %6219, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6221 = stablehlo.divide %4796, %6220 : tensor<768x768xbf16>
    %6222 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6223 = stablehlo.broadcast_in_dim %6222, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6224 = stablehlo.divide %4802, %6223 : tensor<768xbf16>
    %6225 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6226 = stablehlo.broadcast_in_dim %6225, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6227 = stablehlo.divide %4808, %6226 : tensor<768x768xbf16>
    %6228 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6229 = stablehlo.broadcast_in_dim %6228, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6230 = stablehlo.divide %4814, %6229 : tensor<768xbf16>
    %6231 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6232 = stablehlo.broadcast_in_dim %6231, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6233 = stablehlo.divide %4820, %6232 : tensor<768x768xbf16>
    %6234 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6235 = stablehlo.broadcast_in_dim %6234, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6236 = stablehlo.divide %4826, %6235 : tensor<768xbf16>
    %6237 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6238 = stablehlo.broadcast_in_dim %6237, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6239 = stablehlo.divide %4832, %6238 : tensor<768x768xbf16>
    %6240 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6241 = stablehlo.broadcast_in_dim %6240, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6242 = stablehlo.divide %4838, %6241 : tensor<768xbf16>
    %6243 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6244 = stablehlo.broadcast_in_dim %6243, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6245 = stablehlo.divide %4844, %6244 : tensor<768xbf16>
    %6246 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6247 = stablehlo.broadcast_in_dim %6246, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6248 = stablehlo.divide %4850, %6247 : tensor<768xbf16>
    %6249 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6250 = stablehlo.broadcast_in_dim %6249, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6251 = stablehlo.divide %4856, %6250 : tensor<3072x768xbf16>
    %6252 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6253 = stablehlo.broadcast_in_dim %6252, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6254 = stablehlo.divide %4862, %6253 : tensor<3072xbf16>
    %6255 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6256 = stablehlo.broadcast_in_dim %6255, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6257 = stablehlo.divide %4868, %6256 : tensor<768x3072xbf16>
    %6258 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6259 = stablehlo.broadcast_in_dim %6258, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6260 = stablehlo.divide %4874, %6259 : tensor<768xbf16>
    %6261 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6262 = stablehlo.broadcast_in_dim %6261, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6263 = stablehlo.divide %4880, %6262 : tensor<768xbf16>
    %6264 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6265 = stablehlo.broadcast_in_dim %6264, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6266 = stablehlo.divide %4886, %6265 : tensor<768xbf16>
    %6267 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6268 = stablehlo.broadcast_in_dim %6267, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6269 = stablehlo.divide %4892, %6268 : tensor<768x768xbf16>
    %6270 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6271 = stablehlo.broadcast_in_dim %6270, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6272 = stablehlo.divide %4898, %6271 : tensor<768xbf16>
    %6273 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6274 = stablehlo.broadcast_in_dim %6273, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6275 = stablehlo.divide %4904, %6274 : tensor<768x768xbf16>
    %6276 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6277 = stablehlo.broadcast_in_dim %6276, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6278 = stablehlo.divide %4910, %6277 : tensor<768xbf16>
    %6279 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6280 = stablehlo.broadcast_in_dim %6279, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6281 = stablehlo.divide %4916, %6280 : tensor<768x768xbf16>
    %6282 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6283 = stablehlo.broadcast_in_dim %6282, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6284 = stablehlo.divide %4922, %6283 : tensor<768xbf16>
    %6285 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6286 = stablehlo.broadcast_in_dim %6285, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6287 = stablehlo.divide %4928, %6286 : tensor<768x768xbf16>
    %6288 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6289 = stablehlo.broadcast_in_dim %6288, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6290 = stablehlo.divide %4934, %6289 : tensor<768xbf16>
    %6291 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6292 = stablehlo.broadcast_in_dim %6291, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6293 = stablehlo.divide %4940, %6292 : tensor<768xbf16>
    %6294 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6295 = stablehlo.broadcast_in_dim %6294, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6296 = stablehlo.divide %4946, %6295 : tensor<768xbf16>
    %6297 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6298 = stablehlo.broadcast_in_dim %6297, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6299 = stablehlo.divide %4952, %6298 : tensor<3072x768xbf16>
    %6300 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6301 = stablehlo.broadcast_in_dim %6300, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6302 = stablehlo.divide %4958, %6301 : tensor<3072xbf16>
    %6303 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6304 = stablehlo.broadcast_in_dim %6303, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6305 = stablehlo.divide %4964, %6304 : tensor<768x3072xbf16>
    %6306 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6307 = stablehlo.broadcast_in_dim %6306, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6308 = stablehlo.divide %4970, %6307 : tensor<768xbf16>
    %6309 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6310 = stablehlo.broadcast_in_dim %6309, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6311 = stablehlo.divide %4976, %6310 : tensor<768xbf16>
    %6312 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6313 = stablehlo.broadcast_in_dim %6312, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6314 = stablehlo.divide %4982, %6313 : tensor<768xbf16>
    %6315 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6316 = stablehlo.broadcast_in_dim %6315, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6317 = stablehlo.divide %4988, %6316 : tensor<768x768xbf16>
    %6318 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6319 = stablehlo.broadcast_in_dim %6318, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6320 = stablehlo.divide %4994, %6319 : tensor<768xbf16>
    %6321 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6322 = stablehlo.broadcast_in_dim %6321, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6323 = stablehlo.divide %5000, %6322 : tensor<768x768xbf16>
    %6324 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6325 = stablehlo.broadcast_in_dim %6324, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6326 = stablehlo.divide %5006, %6325 : tensor<768xbf16>
    %6327 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6328 = stablehlo.broadcast_in_dim %6327, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6329 = stablehlo.divide %5012, %6328 : tensor<768x768xbf16>
    %6330 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6331 = stablehlo.broadcast_in_dim %6330, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6332 = stablehlo.divide %5018, %6331 : tensor<768xbf16>
    %6333 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6334 = stablehlo.broadcast_in_dim %6333, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6335 = stablehlo.divide %5024, %6334 : tensor<768x768xbf16>
    %6336 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6337 = stablehlo.broadcast_in_dim %6336, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6338 = stablehlo.divide %5030, %6337 : tensor<768xbf16>
    %6339 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6340 = stablehlo.broadcast_in_dim %6339, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6341 = stablehlo.divide %5036, %6340 : tensor<768xbf16>
    %6342 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6343 = stablehlo.broadcast_in_dim %6342, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6344 = stablehlo.divide %5042, %6343 : tensor<768xbf16>
    %6345 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6346 = stablehlo.broadcast_in_dim %6345, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6347 = stablehlo.divide %5048, %6346 : tensor<3072x768xbf16>
    %6348 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6349 = stablehlo.broadcast_in_dim %6348, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6350 = stablehlo.divide %5054, %6349 : tensor<3072xbf16>
    %6351 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6352 = stablehlo.broadcast_in_dim %6351, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6353 = stablehlo.divide %5060, %6352 : tensor<768x3072xbf16>
    %6354 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6355 = stablehlo.broadcast_in_dim %6354, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6356 = stablehlo.divide %5066, %6355 : tensor<768xbf16>
    %6357 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6358 = stablehlo.broadcast_in_dim %6357, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6359 = stablehlo.divide %5072, %6358 : tensor<768xbf16>
    %6360 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6361 = stablehlo.broadcast_in_dim %6360, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6362 = stablehlo.divide %5078, %6361 : tensor<768xbf16>
    %6363 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6364 = stablehlo.broadcast_in_dim %6363, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6365 = stablehlo.divide %5084, %6364 : tensor<768x768xbf16>
    %6366 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6367 = stablehlo.broadcast_in_dim %6366, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6368 = stablehlo.divide %5090, %6367 : tensor<768xbf16>
    %6369 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6370 = stablehlo.broadcast_in_dim %6369, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6371 = stablehlo.divide %5096, %6370 : tensor<768x768xbf16>
    %6372 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6373 = stablehlo.broadcast_in_dim %6372, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6374 = stablehlo.divide %5102, %6373 : tensor<768xbf16>
    %6375 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6376 = stablehlo.broadcast_in_dim %6375, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6377 = stablehlo.divide %5108, %6376 : tensor<768x768xbf16>
    %6378 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6379 = stablehlo.broadcast_in_dim %6378, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6380 = stablehlo.divide %5114, %6379 : tensor<768xbf16>
    %6381 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6382 = stablehlo.broadcast_in_dim %6381, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6383 = stablehlo.divide %5120, %6382 : tensor<768x768xbf16>
    %6384 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6385 = stablehlo.broadcast_in_dim %6384, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6386 = stablehlo.divide %5126, %6385 : tensor<768xbf16>
    %6387 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6388 = stablehlo.broadcast_in_dim %6387, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6389 = stablehlo.divide %5132, %6388 : tensor<768xbf16>
    %6390 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6391 = stablehlo.broadcast_in_dim %6390, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6392 = stablehlo.divide %5138, %6391 : tensor<768xbf16>
    %6393 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6394 = stablehlo.broadcast_in_dim %6393, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6395 = stablehlo.divide %5144, %6394 : tensor<3072x768xbf16>
    %6396 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6397 = stablehlo.broadcast_in_dim %6396, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6398 = stablehlo.divide %5150, %6397 : tensor<3072xbf16>
    %6399 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6400 = stablehlo.broadcast_in_dim %6399, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6401 = stablehlo.divide %5156, %6400 : tensor<768x3072xbf16>
    %6402 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6403 = stablehlo.broadcast_in_dim %6402, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6404 = stablehlo.divide %5162, %6403 : tensor<768xbf16>
    %6405 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6406 = stablehlo.broadcast_in_dim %6405, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6407 = stablehlo.divide %5168, %6406 : tensor<768xbf16>
    %6408 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6409 = stablehlo.broadcast_in_dim %6408, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6410 = stablehlo.divide %5174, %6409 : tensor<768xbf16>
    %6411 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6412 = stablehlo.broadcast_in_dim %6411, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6413 = stablehlo.divide %5180, %6412 : tensor<768x768xbf16>
    %6414 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6415 = stablehlo.broadcast_in_dim %6414, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6416 = stablehlo.divide %5186, %6415 : tensor<768xbf16>
    %6417 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6418 = stablehlo.broadcast_in_dim %6417, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6419 = stablehlo.divide %5192, %6418 : tensor<768xbf16>
    %6420 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6421 = stablehlo.broadcast_in_dim %6420, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6422 = stablehlo.divide %5198, %6421 : tensor<768xbf16>
    %6423 = stablehlo.convert %5819 : (tensor<f32>) -> tensor<bf16>
    %6424 = stablehlo.broadcast_in_dim %6423, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %6425 = stablehlo.divide %5204, %6424 : tensor<30522xbf16>
    %6426 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %6427 = stablehlo.add %5822, %6426 : tensor<30522x768xbf16>
    %6428 = stablehlo.sqrt %6427 : tensor<30522x768xbf16>
    %cst_504 = stablehlo.constant dense<1.001170e-08> : tensor<bf16>
    %6429 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %6430 = stablehlo.add %6428, %6429 : tensor<30522x768xbf16>
    %6431 = stablehlo.divide %5213, %6430 : tensor<30522x768xbf16>
    %6432 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %6433 = stablehlo.add %5825, %6432 : tensor<512x768xbf16>
    %6434 = stablehlo.sqrt %6433 : tensor<512x768xbf16>
    %6435 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %6436 = stablehlo.add %6434, %6435 : tensor<512x768xbf16>
    %6437 = stablehlo.divide %5216, %6436 : tensor<512x768xbf16>
    %6438 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %6439 = stablehlo.add %5828, %6438 : tensor<2x768xbf16>
    %6440 = stablehlo.sqrt %6439 : tensor<2x768xbf16>
    %6441 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %6442 = stablehlo.add %6440, %6441 : tensor<2x768xbf16>
    %6443 = stablehlo.divide %5219, %6442 : tensor<2x768xbf16>
    %6444 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6445 = stablehlo.add %5831, %6444 : tensor<768xbf16>
    %6446 = stablehlo.sqrt %6445 : tensor<768xbf16>
    %6447 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6448 = stablehlo.add %6446, %6447 : tensor<768xbf16>
    %6449 = stablehlo.divide %5222, %6448 : tensor<768xbf16>
    %6450 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6451 = stablehlo.add %5834, %6450 : tensor<768xbf16>
    %6452 = stablehlo.sqrt %6451 : tensor<768xbf16>
    %6453 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6454 = stablehlo.add %6452, %6453 : tensor<768xbf16>
    %6455 = stablehlo.divide %5225, %6454 : tensor<768xbf16>
    %6456 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6457 = stablehlo.add %5837, %6456 : tensor<768x768xbf16>
    %6458 = stablehlo.sqrt %6457 : tensor<768x768xbf16>
    %6459 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6460 = stablehlo.add %6458, %6459 : tensor<768x768xbf16>
    %6461 = stablehlo.divide %5228, %6460 : tensor<768x768xbf16>
    %6462 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6463 = stablehlo.add %5840, %6462 : tensor<768xbf16>
    %6464 = stablehlo.sqrt %6463 : tensor<768xbf16>
    %6465 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6466 = stablehlo.add %6464, %6465 : tensor<768xbf16>
    %6467 = stablehlo.divide %5231, %6466 : tensor<768xbf16>
    %6468 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6469 = stablehlo.add %5843, %6468 : tensor<768x768xbf16>
    %6470 = stablehlo.sqrt %6469 : tensor<768x768xbf16>
    %6471 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6472 = stablehlo.add %6470, %6471 : tensor<768x768xbf16>
    %6473 = stablehlo.divide %5234, %6472 : tensor<768x768xbf16>
    %6474 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6475 = stablehlo.add %5846, %6474 : tensor<768xbf16>
    %6476 = stablehlo.sqrt %6475 : tensor<768xbf16>
    %6477 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6478 = stablehlo.add %6476, %6477 : tensor<768xbf16>
    %6479 = stablehlo.divide %5237, %6478 : tensor<768xbf16>
    %6480 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6481 = stablehlo.add %5849, %6480 : tensor<768x768xbf16>
    %6482 = stablehlo.sqrt %6481 : tensor<768x768xbf16>
    %6483 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6484 = stablehlo.add %6482, %6483 : tensor<768x768xbf16>
    %6485 = stablehlo.divide %5240, %6484 : tensor<768x768xbf16>
    %6486 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6487 = stablehlo.add %5852, %6486 : tensor<768xbf16>
    %6488 = stablehlo.sqrt %6487 : tensor<768xbf16>
    %6489 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6490 = stablehlo.add %6488, %6489 : tensor<768xbf16>
    %6491 = stablehlo.divide %5243, %6490 : tensor<768xbf16>
    %6492 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6493 = stablehlo.add %5855, %6492 : tensor<768x768xbf16>
    %6494 = stablehlo.sqrt %6493 : tensor<768x768xbf16>
    %6495 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6496 = stablehlo.add %6494, %6495 : tensor<768x768xbf16>
    %6497 = stablehlo.divide %5246, %6496 : tensor<768x768xbf16>
    %6498 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6499 = stablehlo.add %5858, %6498 : tensor<768xbf16>
    %6500 = stablehlo.sqrt %6499 : tensor<768xbf16>
    %6501 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6502 = stablehlo.add %6500, %6501 : tensor<768xbf16>
    %6503 = stablehlo.divide %5249, %6502 : tensor<768xbf16>
    %6504 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6505 = stablehlo.add %5861, %6504 : tensor<768xbf16>
    %6506 = stablehlo.sqrt %6505 : tensor<768xbf16>
    %6507 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6508 = stablehlo.add %6506, %6507 : tensor<768xbf16>
    %6509 = stablehlo.divide %5252, %6508 : tensor<768xbf16>
    %6510 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6511 = stablehlo.add %5864, %6510 : tensor<768xbf16>
    %6512 = stablehlo.sqrt %6511 : tensor<768xbf16>
    %6513 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6514 = stablehlo.add %6512, %6513 : tensor<768xbf16>
    %6515 = stablehlo.divide %5255, %6514 : tensor<768xbf16>
    %6516 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6517 = stablehlo.add %5867, %6516 : tensor<3072x768xbf16>
    %6518 = stablehlo.sqrt %6517 : tensor<3072x768xbf16>
    %6519 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6520 = stablehlo.add %6518, %6519 : tensor<3072x768xbf16>
    %6521 = stablehlo.divide %5258, %6520 : tensor<3072x768xbf16>
    %6522 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6523 = stablehlo.add %5870, %6522 : tensor<3072xbf16>
    %6524 = stablehlo.sqrt %6523 : tensor<3072xbf16>
    %6525 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6526 = stablehlo.add %6524, %6525 : tensor<3072xbf16>
    %6527 = stablehlo.divide %5261, %6526 : tensor<3072xbf16>
    %6528 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6529 = stablehlo.add %5873, %6528 : tensor<768x3072xbf16>
    %6530 = stablehlo.sqrt %6529 : tensor<768x3072xbf16>
    %6531 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6532 = stablehlo.add %6530, %6531 : tensor<768x3072xbf16>
    %6533 = stablehlo.divide %5264, %6532 : tensor<768x3072xbf16>
    %6534 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6535 = stablehlo.add %5876, %6534 : tensor<768xbf16>
    %6536 = stablehlo.sqrt %6535 : tensor<768xbf16>
    %6537 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6538 = stablehlo.add %6536, %6537 : tensor<768xbf16>
    %6539 = stablehlo.divide %5267, %6538 : tensor<768xbf16>
    %6540 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6541 = stablehlo.add %5879, %6540 : tensor<768xbf16>
    %6542 = stablehlo.sqrt %6541 : tensor<768xbf16>
    %6543 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6544 = stablehlo.add %6542, %6543 : tensor<768xbf16>
    %6545 = stablehlo.divide %5270, %6544 : tensor<768xbf16>
    %6546 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6547 = stablehlo.add %5882, %6546 : tensor<768xbf16>
    %6548 = stablehlo.sqrt %6547 : tensor<768xbf16>
    %6549 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6550 = stablehlo.add %6548, %6549 : tensor<768xbf16>
    %6551 = stablehlo.divide %5273, %6550 : tensor<768xbf16>
    %6552 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6553 = stablehlo.add %5885, %6552 : tensor<768x768xbf16>
    %6554 = stablehlo.sqrt %6553 : tensor<768x768xbf16>
    %6555 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6556 = stablehlo.add %6554, %6555 : tensor<768x768xbf16>
    %6557 = stablehlo.divide %5276, %6556 : tensor<768x768xbf16>
    %6558 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6559 = stablehlo.add %5888, %6558 : tensor<768xbf16>
    %6560 = stablehlo.sqrt %6559 : tensor<768xbf16>
    %6561 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6562 = stablehlo.add %6560, %6561 : tensor<768xbf16>
    %6563 = stablehlo.divide %5279, %6562 : tensor<768xbf16>
    %6564 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6565 = stablehlo.add %5891, %6564 : tensor<768x768xbf16>
    %6566 = stablehlo.sqrt %6565 : tensor<768x768xbf16>
    %6567 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6568 = stablehlo.add %6566, %6567 : tensor<768x768xbf16>
    %6569 = stablehlo.divide %5282, %6568 : tensor<768x768xbf16>
    %6570 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6571 = stablehlo.add %5894, %6570 : tensor<768xbf16>
    %6572 = stablehlo.sqrt %6571 : tensor<768xbf16>
    %6573 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6574 = stablehlo.add %6572, %6573 : tensor<768xbf16>
    %6575 = stablehlo.divide %5285, %6574 : tensor<768xbf16>
    %6576 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6577 = stablehlo.add %5897, %6576 : tensor<768x768xbf16>
    %6578 = stablehlo.sqrt %6577 : tensor<768x768xbf16>
    %6579 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6580 = stablehlo.add %6578, %6579 : tensor<768x768xbf16>
    %6581 = stablehlo.divide %5288, %6580 : tensor<768x768xbf16>
    %6582 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6583 = stablehlo.add %5900, %6582 : tensor<768xbf16>
    %6584 = stablehlo.sqrt %6583 : tensor<768xbf16>
    %6585 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6586 = stablehlo.add %6584, %6585 : tensor<768xbf16>
    %6587 = stablehlo.divide %5291, %6586 : tensor<768xbf16>
    %6588 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6589 = stablehlo.add %5903, %6588 : tensor<768x768xbf16>
    %6590 = stablehlo.sqrt %6589 : tensor<768x768xbf16>
    %6591 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6592 = stablehlo.add %6590, %6591 : tensor<768x768xbf16>
    %6593 = stablehlo.divide %5294, %6592 : tensor<768x768xbf16>
    %6594 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6595 = stablehlo.add %5906, %6594 : tensor<768xbf16>
    %6596 = stablehlo.sqrt %6595 : tensor<768xbf16>
    %6597 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6598 = stablehlo.add %6596, %6597 : tensor<768xbf16>
    %6599 = stablehlo.divide %5297, %6598 : tensor<768xbf16>
    %6600 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6601 = stablehlo.add %5909, %6600 : tensor<768xbf16>
    %6602 = stablehlo.sqrt %6601 : tensor<768xbf16>
    %6603 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6604 = stablehlo.add %6602, %6603 : tensor<768xbf16>
    %6605 = stablehlo.divide %5300, %6604 : tensor<768xbf16>
    %6606 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6607 = stablehlo.add %5912, %6606 : tensor<768xbf16>
    %6608 = stablehlo.sqrt %6607 : tensor<768xbf16>
    %6609 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6610 = stablehlo.add %6608, %6609 : tensor<768xbf16>
    %6611 = stablehlo.divide %5303, %6610 : tensor<768xbf16>
    %6612 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6613 = stablehlo.add %5915, %6612 : tensor<3072x768xbf16>
    %6614 = stablehlo.sqrt %6613 : tensor<3072x768xbf16>
    %6615 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6616 = stablehlo.add %6614, %6615 : tensor<3072x768xbf16>
    %6617 = stablehlo.divide %5306, %6616 : tensor<3072x768xbf16>
    %6618 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6619 = stablehlo.add %5918, %6618 : tensor<3072xbf16>
    %6620 = stablehlo.sqrt %6619 : tensor<3072xbf16>
    %6621 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6622 = stablehlo.add %6620, %6621 : tensor<3072xbf16>
    %6623 = stablehlo.divide %5309, %6622 : tensor<3072xbf16>
    %6624 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6625 = stablehlo.add %5921, %6624 : tensor<768x3072xbf16>
    %6626 = stablehlo.sqrt %6625 : tensor<768x3072xbf16>
    %6627 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6628 = stablehlo.add %6626, %6627 : tensor<768x3072xbf16>
    %6629 = stablehlo.divide %5312, %6628 : tensor<768x3072xbf16>
    %6630 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6631 = stablehlo.add %5924, %6630 : tensor<768xbf16>
    %6632 = stablehlo.sqrt %6631 : tensor<768xbf16>
    %6633 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6634 = stablehlo.add %6632, %6633 : tensor<768xbf16>
    %6635 = stablehlo.divide %5315, %6634 : tensor<768xbf16>
    %6636 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6637 = stablehlo.add %5927, %6636 : tensor<768xbf16>
    %6638 = stablehlo.sqrt %6637 : tensor<768xbf16>
    %6639 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6640 = stablehlo.add %6638, %6639 : tensor<768xbf16>
    %6641 = stablehlo.divide %5318, %6640 : tensor<768xbf16>
    %6642 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6643 = stablehlo.add %5930, %6642 : tensor<768xbf16>
    %6644 = stablehlo.sqrt %6643 : tensor<768xbf16>
    %6645 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6646 = stablehlo.add %6644, %6645 : tensor<768xbf16>
    %6647 = stablehlo.divide %5321, %6646 : tensor<768xbf16>
    %6648 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6649 = stablehlo.add %5933, %6648 : tensor<768x768xbf16>
    %6650 = stablehlo.sqrt %6649 : tensor<768x768xbf16>
    %6651 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6652 = stablehlo.add %6650, %6651 : tensor<768x768xbf16>
    %6653 = stablehlo.divide %5324, %6652 : tensor<768x768xbf16>
    %6654 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6655 = stablehlo.add %5936, %6654 : tensor<768xbf16>
    %6656 = stablehlo.sqrt %6655 : tensor<768xbf16>
    %6657 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6658 = stablehlo.add %6656, %6657 : tensor<768xbf16>
    %6659 = stablehlo.divide %5327, %6658 : tensor<768xbf16>
    %6660 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6661 = stablehlo.add %5939, %6660 : tensor<768x768xbf16>
    %6662 = stablehlo.sqrt %6661 : tensor<768x768xbf16>
    %6663 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6664 = stablehlo.add %6662, %6663 : tensor<768x768xbf16>
    %6665 = stablehlo.divide %5330, %6664 : tensor<768x768xbf16>
    %6666 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6667 = stablehlo.add %5942, %6666 : tensor<768xbf16>
    %6668 = stablehlo.sqrt %6667 : tensor<768xbf16>
    %6669 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6670 = stablehlo.add %6668, %6669 : tensor<768xbf16>
    %6671 = stablehlo.divide %5333, %6670 : tensor<768xbf16>
    %6672 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6673 = stablehlo.add %5945, %6672 : tensor<768x768xbf16>
    %6674 = stablehlo.sqrt %6673 : tensor<768x768xbf16>
    %6675 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6676 = stablehlo.add %6674, %6675 : tensor<768x768xbf16>
    %6677 = stablehlo.divide %5336, %6676 : tensor<768x768xbf16>
    %6678 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6679 = stablehlo.add %5948, %6678 : tensor<768xbf16>
    %6680 = stablehlo.sqrt %6679 : tensor<768xbf16>
    %6681 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6682 = stablehlo.add %6680, %6681 : tensor<768xbf16>
    %6683 = stablehlo.divide %5339, %6682 : tensor<768xbf16>
    %6684 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6685 = stablehlo.add %5951, %6684 : tensor<768x768xbf16>
    %6686 = stablehlo.sqrt %6685 : tensor<768x768xbf16>
    %6687 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6688 = stablehlo.add %6686, %6687 : tensor<768x768xbf16>
    %6689 = stablehlo.divide %5342, %6688 : tensor<768x768xbf16>
    %6690 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6691 = stablehlo.add %5954, %6690 : tensor<768xbf16>
    %6692 = stablehlo.sqrt %6691 : tensor<768xbf16>
    %6693 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6694 = stablehlo.add %6692, %6693 : tensor<768xbf16>
    %6695 = stablehlo.divide %5345, %6694 : tensor<768xbf16>
    %6696 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6697 = stablehlo.add %5957, %6696 : tensor<768xbf16>
    %6698 = stablehlo.sqrt %6697 : tensor<768xbf16>
    %6699 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6700 = stablehlo.add %6698, %6699 : tensor<768xbf16>
    %6701 = stablehlo.divide %5348, %6700 : tensor<768xbf16>
    %6702 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6703 = stablehlo.add %5960, %6702 : tensor<768xbf16>
    %6704 = stablehlo.sqrt %6703 : tensor<768xbf16>
    %6705 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6706 = stablehlo.add %6704, %6705 : tensor<768xbf16>
    %6707 = stablehlo.divide %5351, %6706 : tensor<768xbf16>
    %6708 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6709 = stablehlo.add %5963, %6708 : tensor<3072x768xbf16>
    %6710 = stablehlo.sqrt %6709 : tensor<3072x768xbf16>
    %6711 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6712 = stablehlo.add %6710, %6711 : tensor<3072x768xbf16>
    %6713 = stablehlo.divide %5354, %6712 : tensor<3072x768xbf16>
    %6714 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6715 = stablehlo.add %5966, %6714 : tensor<3072xbf16>
    %6716 = stablehlo.sqrt %6715 : tensor<3072xbf16>
    %6717 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6718 = stablehlo.add %6716, %6717 : tensor<3072xbf16>
    %6719 = stablehlo.divide %5357, %6718 : tensor<3072xbf16>
    %6720 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6721 = stablehlo.add %5969, %6720 : tensor<768x3072xbf16>
    %6722 = stablehlo.sqrt %6721 : tensor<768x3072xbf16>
    %6723 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6724 = stablehlo.add %6722, %6723 : tensor<768x3072xbf16>
    %6725 = stablehlo.divide %5360, %6724 : tensor<768x3072xbf16>
    %6726 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6727 = stablehlo.add %5972, %6726 : tensor<768xbf16>
    %6728 = stablehlo.sqrt %6727 : tensor<768xbf16>
    %6729 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6730 = stablehlo.add %6728, %6729 : tensor<768xbf16>
    %6731 = stablehlo.divide %5363, %6730 : tensor<768xbf16>
    %6732 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6733 = stablehlo.add %5975, %6732 : tensor<768xbf16>
    %6734 = stablehlo.sqrt %6733 : tensor<768xbf16>
    %6735 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6736 = stablehlo.add %6734, %6735 : tensor<768xbf16>
    %6737 = stablehlo.divide %5366, %6736 : tensor<768xbf16>
    %6738 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6739 = stablehlo.add %5978, %6738 : tensor<768xbf16>
    %6740 = stablehlo.sqrt %6739 : tensor<768xbf16>
    %6741 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6742 = stablehlo.add %6740, %6741 : tensor<768xbf16>
    %6743 = stablehlo.divide %5369, %6742 : tensor<768xbf16>
    %6744 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6745 = stablehlo.add %5981, %6744 : tensor<768x768xbf16>
    %6746 = stablehlo.sqrt %6745 : tensor<768x768xbf16>
    %6747 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6748 = stablehlo.add %6746, %6747 : tensor<768x768xbf16>
    %6749 = stablehlo.divide %5372, %6748 : tensor<768x768xbf16>
    %6750 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6751 = stablehlo.add %5984, %6750 : tensor<768xbf16>
    %6752 = stablehlo.sqrt %6751 : tensor<768xbf16>
    %6753 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6754 = stablehlo.add %6752, %6753 : tensor<768xbf16>
    %6755 = stablehlo.divide %5375, %6754 : tensor<768xbf16>
    %6756 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6757 = stablehlo.add %5987, %6756 : tensor<768x768xbf16>
    %6758 = stablehlo.sqrt %6757 : tensor<768x768xbf16>
    %6759 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6760 = stablehlo.add %6758, %6759 : tensor<768x768xbf16>
    %6761 = stablehlo.divide %5378, %6760 : tensor<768x768xbf16>
    %6762 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6763 = stablehlo.add %5990, %6762 : tensor<768xbf16>
    %6764 = stablehlo.sqrt %6763 : tensor<768xbf16>
    %6765 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6766 = stablehlo.add %6764, %6765 : tensor<768xbf16>
    %6767 = stablehlo.divide %5381, %6766 : tensor<768xbf16>
    %6768 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6769 = stablehlo.add %5993, %6768 : tensor<768x768xbf16>
    %6770 = stablehlo.sqrt %6769 : tensor<768x768xbf16>
    %6771 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6772 = stablehlo.add %6770, %6771 : tensor<768x768xbf16>
    %6773 = stablehlo.divide %5384, %6772 : tensor<768x768xbf16>
    %6774 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6775 = stablehlo.add %5996, %6774 : tensor<768xbf16>
    %6776 = stablehlo.sqrt %6775 : tensor<768xbf16>
    %6777 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6778 = stablehlo.add %6776, %6777 : tensor<768xbf16>
    %6779 = stablehlo.divide %5387, %6778 : tensor<768xbf16>
    %6780 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6781 = stablehlo.add %5999, %6780 : tensor<768x768xbf16>
    %6782 = stablehlo.sqrt %6781 : tensor<768x768xbf16>
    %6783 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6784 = stablehlo.add %6782, %6783 : tensor<768x768xbf16>
    %6785 = stablehlo.divide %5390, %6784 : tensor<768x768xbf16>
    %6786 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6787 = stablehlo.add %6002, %6786 : tensor<768xbf16>
    %6788 = stablehlo.sqrt %6787 : tensor<768xbf16>
    %6789 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6790 = stablehlo.add %6788, %6789 : tensor<768xbf16>
    %6791 = stablehlo.divide %5393, %6790 : tensor<768xbf16>
    %6792 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6793 = stablehlo.add %6005, %6792 : tensor<768xbf16>
    %6794 = stablehlo.sqrt %6793 : tensor<768xbf16>
    %6795 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6796 = stablehlo.add %6794, %6795 : tensor<768xbf16>
    %6797 = stablehlo.divide %5396, %6796 : tensor<768xbf16>
    %6798 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6799 = stablehlo.add %6008, %6798 : tensor<768xbf16>
    %6800 = stablehlo.sqrt %6799 : tensor<768xbf16>
    %6801 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6802 = stablehlo.add %6800, %6801 : tensor<768xbf16>
    %6803 = stablehlo.divide %5399, %6802 : tensor<768xbf16>
    %6804 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6805 = stablehlo.add %6011, %6804 : tensor<3072x768xbf16>
    %6806 = stablehlo.sqrt %6805 : tensor<3072x768xbf16>
    %6807 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6808 = stablehlo.add %6806, %6807 : tensor<3072x768xbf16>
    %6809 = stablehlo.divide %5402, %6808 : tensor<3072x768xbf16>
    %6810 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6811 = stablehlo.add %6014, %6810 : tensor<3072xbf16>
    %6812 = stablehlo.sqrt %6811 : tensor<3072xbf16>
    %6813 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6814 = stablehlo.add %6812, %6813 : tensor<3072xbf16>
    %6815 = stablehlo.divide %5405, %6814 : tensor<3072xbf16>
    %6816 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6817 = stablehlo.add %6017, %6816 : tensor<768x3072xbf16>
    %6818 = stablehlo.sqrt %6817 : tensor<768x3072xbf16>
    %6819 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6820 = stablehlo.add %6818, %6819 : tensor<768x3072xbf16>
    %6821 = stablehlo.divide %5408, %6820 : tensor<768x3072xbf16>
    %6822 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6823 = stablehlo.add %6020, %6822 : tensor<768xbf16>
    %6824 = stablehlo.sqrt %6823 : tensor<768xbf16>
    %6825 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6826 = stablehlo.add %6824, %6825 : tensor<768xbf16>
    %6827 = stablehlo.divide %5411, %6826 : tensor<768xbf16>
    %6828 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6829 = stablehlo.add %6023, %6828 : tensor<768xbf16>
    %6830 = stablehlo.sqrt %6829 : tensor<768xbf16>
    %6831 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6832 = stablehlo.add %6830, %6831 : tensor<768xbf16>
    %6833 = stablehlo.divide %5414, %6832 : tensor<768xbf16>
    %6834 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6835 = stablehlo.add %6026, %6834 : tensor<768xbf16>
    %6836 = stablehlo.sqrt %6835 : tensor<768xbf16>
    %6837 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6838 = stablehlo.add %6836, %6837 : tensor<768xbf16>
    %6839 = stablehlo.divide %5417, %6838 : tensor<768xbf16>
    %6840 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6841 = stablehlo.add %6029, %6840 : tensor<768x768xbf16>
    %6842 = stablehlo.sqrt %6841 : tensor<768x768xbf16>
    %6843 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6844 = stablehlo.add %6842, %6843 : tensor<768x768xbf16>
    %6845 = stablehlo.divide %5420, %6844 : tensor<768x768xbf16>
    %6846 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6847 = stablehlo.add %6032, %6846 : tensor<768xbf16>
    %6848 = stablehlo.sqrt %6847 : tensor<768xbf16>
    %6849 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6850 = stablehlo.add %6848, %6849 : tensor<768xbf16>
    %6851 = stablehlo.divide %5423, %6850 : tensor<768xbf16>
    %6852 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6853 = stablehlo.add %6035, %6852 : tensor<768x768xbf16>
    %6854 = stablehlo.sqrt %6853 : tensor<768x768xbf16>
    %6855 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6856 = stablehlo.add %6854, %6855 : tensor<768x768xbf16>
    %6857 = stablehlo.divide %5426, %6856 : tensor<768x768xbf16>
    %6858 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6859 = stablehlo.add %6038, %6858 : tensor<768xbf16>
    %6860 = stablehlo.sqrt %6859 : tensor<768xbf16>
    %6861 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6862 = stablehlo.add %6860, %6861 : tensor<768xbf16>
    %6863 = stablehlo.divide %5429, %6862 : tensor<768xbf16>
    %6864 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6865 = stablehlo.add %6041, %6864 : tensor<768x768xbf16>
    %6866 = stablehlo.sqrt %6865 : tensor<768x768xbf16>
    %6867 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6868 = stablehlo.add %6866, %6867 : tensor<768x768xbf16>
    %6869 = stablehlo.divide %5432, %6868 : tensor<768x768xbf16>
    %6870 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6871 = stablehlo.add %6044, %6870 : tensor<768xbf16>
    %6872 = stablehlo.sqrt %6871 : tensor<768xbf16>
    %6873 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6874 = stablehlo.add %6872, %6873 : tensor<768xbf16>
    %6875 = stablehlo.divide %5435, %6874 : tensor<768xbf16>
    %6876 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6877 = stablehlo.add %6047, %6876 : tensor<768x768xbf16>
    %6878 = stablehlo.sqrt %6877 : tensor<768x768xbf16>
    %6879 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6880 = stablehlo.add %6878, %6879 : tensor<768x768xbf16>
    %6881 = stablehlo.divide %5438, %6880 : tensor<768x768xbf16>
    %6882 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6883 = stablehlo.add %6050, %6882 : tensor<768xbf16>
    %6884 = stablehlo.sqrt %6883 : tensor<768xbf16>
    %6885 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6886 = stablehlo.add %6884, %6885 : tensor<768xbf16>
    %6887 = stablehlo.divide %5441, %6886 : tensor<768xbf16>
    %6888 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6889 = stablehlo.add %6053, %6888 : tensor<768xbf16>
    %6890 = stablehlo.sqrt %6889 : tensor<768xbf16>
    %6891 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6892 = stablehlo.add %6890, %6891 : tensor<768xbf16>
    %6893 = stablehlo.divide %5444, %6892 : tensor<768xbf16>
    %6894 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6895 = stablehlo.add %6056, %6894 : tensor<768xbf16>
    %6896 = stablehlo.sqrt %6895 : tensor<768xbf16>
    %6897 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6898 = stablehlo.add %6896, %6897 : tensor<768xbf16>
    %6899 = stablehlo.divide %5447, %6898 : tensor<768xbf16>
    %6900 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6901 = stablehlo.add %6059, %6900 : tensor<3072x768xbf16>
    %6902 = stablehlo.sqrt %6901 : tensor<3072x768xbf16>
    %6903 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6904 = stablehlo.add %6902, %6903 : tensor<3072x768xbf16>
    %6905 = stablehlo.divide %5450, %6904 : tensor<3072x768xbf16>
    %6906 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6907 = stablehlo.add %6062, %6906 : tensor<3072xbf16>
    %6908 = stablehlo.sqrt %6907 : tensor<3072xbf16>
    %6909 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %6910 = stablehlo.add %6908, %6909 : tensor<3072xbf16>
    %6911 = stablehlo.divide %5453, %6910 : tensor<3072xbf16>
    %6912 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6913 = stablehlo.add %6065, %6912 : tensor<768x3072xbf16>
    %6914 = stablehlo.sqrt %6913 : tensor<768x3072xbf16>
    %6915 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %6916 = stablehlo.add %6914, %6915 : tensor<768x3072xbf16>
    %6917 = stablehlo.divide %5456, %6916 : tensor<768x3072xbf16>
    %6918 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6919 = stablehlo.add %6068, %6918 : tensor<768xbf16>
    %6920 = stablehlo.sqrt %6919 : tensor<768xbf16>
    %6921 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6922 = stablehlo.add %6920, %6921 : tensor<768xbf16>
    %6923 = stablehlo.divide %5459, %6922 : tensor<768xbf16>
    %6924 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6925 = stablehlo.add %6071, %6924 : tensor<768xbf16>
    %6926 = stablehlo.sqrt %6925 : tensor<768xbf16>
    %6927 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6928 = stablehlo.add %6926, %6927 : tensor<768xbf16>
    %6929 = stablehlo.divide %5462, %6928 : tensor<768xbf16>
    %6930 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6931 = stablehlo.add %6074, %6930 : tensor<768xbf16>
    %6932 = stablehlo.sqrt %6931 : tensor<768xbf16>
    %6933 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6934 = stablehlo.add %6932, %6933 : tensor<768xbf16>
    %6935 = stablehlo.divide %5465, %6934 : tensor<768xbf16>
    %6936 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6937 = stablehlo.add %6077, %6936 : tensor<768x768xbf16>
    %6938 = stablehlo.sqrt %6937 : tensor<768x768xbf16>
    %6939 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6940 = stablehlo.add %6938, %6939 : tensor<768x768xbf16>
    %6941 = stablehlo.divide %5468, %6940 : tensor<768x768xbf16>
    %6942 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6943 = stablehlo.add %6080, %6942 : tensor<768xbf16>
    %6944 = stablehlo.sqrt %6943 : tensor<768xbf16>
    %6945 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6946 = stablehlo.add %6944, %6945 : tensor<768xbf16>
    %6947 = stablehlo.divide %5471, %6946 : tensor<768xbf16>
    %6948 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6949 = stablehlo.add %6083, %6948 : tensor<768x768xbf16>
    %6950 = stablehlo.sqrt %6949 : tensor<768x768xbf16>
    %6951 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6952 = stablehlo.add %6950, %6951 : tensor<768x768xbf16>
    %6953 = stablehlo.divide %5474, %6952 : tensor<768x768xbf16>
    %6954 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6955 = stablehlo.add %6086, %6954 : tensor<768xbf16>
    %6956 = stablehlo.sqrt %6955 : tensor<768xbf16>
    %6957 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6958 = stablehlo.add %6956, %6957 : tensor<768xbf16>
    %6959 = stablehlo.divide %5477, %6958 : tensor<768xbf16>
    %6960 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6961 = stablehlo.add %6089, %6960 : tensor<768x768xbf16>
    %6962 = stablehlo.sqrt %6961 : tensor<768x768xbf16>
    %6963 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6964 = stablehlo.add %6962, %6963 : tensor<768x768xbf16>
    %6965 = stablehlo.divide %5480, %6964 : tensor<768x768xbf16>
    %6966 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6967 = stablehlo.add %6092, %6966 : tensor<768xbf16>
    %6968 = stablehlo.sqrt %6967 : tensor<768xbf16>
    %6969 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6970 = stablehlo.add %6968, %6969 : tensor<768xbf16>
    %6971 = stablehlo.divide %5483, %6970 : tensor<768xbf16>
    %6972 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6973 = stablehlo.add %6095, %6972 : tensor<768x768xbf16>
    %6974 = stablehlo.sqrt %6973 : tensor<768x768xbf16>
    %6975 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %6976 = stablehlo.add %6974, %6975 : tensor<768x768xbf16>
    %6977 = stablehlo.divide %5486, %6976 : tensor<768x768xbf16>
    %6978 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6979 = stablehlo.add %6098, %6978 : tensor<768xbf16>
    %6980 = stablehlo.sqrt %6979 : tensor<768xbf16>
    %6981 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6982 = stablehlo.add %6980, %6981 : tensor<768xbf16>
    %6983 = stablehlo.divide %5489, %6982 : tensor<768xbf16>
    %6984 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6985 = stablehlo.add %6101, %6984 : tensor<768xbf16>
    %6986 = stablehlo.sqrt %6985 : tensor<768xbf16>
    %6987 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6988 = stablehlo.add %6986, %6987 : tensor<768xbf16>
    %6989 = stablehlo.divide %5492, %6988 : tensor<768xbf16>
    %6990 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6991 = stablehlo.add %6104, %6990 : tensor<768xbf16>
    %6992 = stablehlo.sqrt %6991 : tensor<768xbf16>
    %6993 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %6994 = stablehlo.add %6992, %6993 : tensor<768xbf16>
    %6995 = stablehlo.divide %5495, %6994 : tensor<768xbf16>
    %6996 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %6997 = stablehlo.add %6107, %6996 : tensor<3072x768xbf16>
    %6998 = stablehlo.sqrt %6997 : tensor<3072x768xbf16>
    %6999 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7000 = stablehlo.add %6998, %6999 : tensor<3072x768xbf16>
    %7001 = stablehlo.divide %5498, %7000 : tensor<3072x768xbf16>
    %7002 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7003 = stablehlo.add %6110, %7002 : tensor<3072xbf16>
    %7004 = stablehlo.sqrt %7003 : tensor<3072xbf16>
    %7005 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7006 = stablehlo.add %7004, %7005 : tensor<3072xbf16>
    %7007 = stablehlo.divide %5501, %7006 : tensor<3072xbf16>
    %7008 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7009 = stablehlo.add %6113, %7008 : tensor<768x3072xbf16>
    %7010 = stablehlo.sqrt %7009 : tensor<768x3072xbf16>
    %7011 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7012 = stablehlo.add %7010, %7011 : tensor<768x3072xbf16>
    %7013 = stablehlo.divide %5504, %7012 : tensor<768x3072xbf16>
    %7014 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7015 = stablehlo.add %6116, %7014 : tensor<768xbf16>
    %7016 = stablehlo.sqrt %7015 : tensor<768xbf16>
    %7017 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7018 = stablehlo.add %7016, %7017 : tensor<768xbf16>
    %7019 = stablehlo.divide %5507, %7018 : tensor<768xbf16>
    %7020 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7021 = stablehlo.add %6119, %7020 : tensor<768xbf16>
    %7022 = stablehlo.sqrt %7021 : tensor<768xbf16>
    %7023 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7024 = stablehlo.add %7022, %7023 : tensor<768xbf16>
    %7025 = stablehlo.divide %5510, %7024 : tensor<768xbf16>
    %7026 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7027 = stablehlo.add %6122, %7026 : tensor<768xbf16>
    %7028 = stablehlo.sqrt %7027 : tensor<768xbf16>
    %7029 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7030 = stablehlo.add %7028, %7029 : tensor<768xbf16>
    %7031 = stablehlo.divide %5513, %7030 : tensor<768xbf16>
    %7032 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7033 = stablehlo.add %6125, %7032 : tensor<768x768xbf16>
    %7034 = stablehlo.sqrt %7033 : tensor<768x768xbf16>
    %7035 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7036 = stablehlo.add %7034, %7035 : tensor<768x768xbf16>
    %7037 = stablehlo.divide %5516, %7036 : tensor<768x768xbf16>
    %7038 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7039 = stablehlo.add %6128, %7038 : tensor<768xbf16>
    %7040 = stablehlo.sqrt %7039 : tensor<768xbf16>
    %7041 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7042 = stablehlo.add %7040, %7041 : tensor<768xbf16>
    %7043 = stablehlo.divide %5519, %7042 : tensor<768xbf16>
    %7044 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7045 = stablehlo.add %6131, %7044 : tensor<768x768xbf16>
    %7046 = stablehlo.sqrt %7045 : tensor<768x768xbf16>
    %7047 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7048 = stablehlo.add %7046, %7047 : tensor<768x768xbf16>
    %7049 = stablehlo.divide %5522, %7048 : tensor<768x768xbf16>
    %7050 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7051 = stablehlo.add %6134, %7050 : tensor<768xbf16>
    %7052 = stablehlo.sqrt %7051 : tensor<768xbf16>
    %7053 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7054 = stablehlo.add %7052, %7053 : tensor<768xbf16>
    %7055 = stablehlo.divide %5525, %7054 : tensor<768xbf16>
    %7056 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7057 = stablehlo.add %6137, %7056 : tensor<768x768xbf16>
    %7058 = stablehlo.sqrt %7057 : tensor<768x768xbf16>
    %7059 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7060 = stablehlo.add %7058, %7059 : tensor<768x768xbf16>
    %7061 = stablehlo.divide %5528, %7060 : tensor<768x768xbf16>
    %7062 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7063 = stablehlo.add %6140, %7062 : tensor<768xbf16>
    %7064 = stablehlo.sqrt %7063 : tensor<768xbf16>
    %7065 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7066 = stablehlo.add %7064, %7065 : tensor<768xbf16>
    %7067 = stablehlo.divide %5531, %7066 : tensor<768xbf16>
    %7068 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7069 = stablehlo.add %6143, %7068 : tensor<768x768xbf16>
    %7070 = stablehlo.sqrt %7069 : tensor<768x768xbf16>
    %7071 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7072 = stablehlo.add %7070, %7071 : tensor<768x768xbf16>
    %7073 = stablehlo.divide %5534, %7072 : tensor<768x768xbf16>
    %7074 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7075 = stablehlo.add %6146, %7074 : tensor<768xbf16>
    %7076 = stablehlo.sqrt %7075 : tensor<768xbf16>
    %7077 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7078 = stablehlo.add %7076, %7077 : tensor<768xbf16>
    %7079 = stablehlo.divide %5537, %7078 : tensor<768xbf16>
    %7080 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7081 = stablehlo.add %6149, %7080 : tensor<768xbf16>
    %7082 = stablehlo.sqrt %7081 : tensor<768xbf16>
    %7083 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7084 = stablehlo.add %7082, %7083 : tensor<768xbf16>
    %7085 = stablehlo.divide %5540, %7084 : tensor<768xbf16>
    %7086 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7087 = stablehlo.add %6152, %7086 : tensor<768xbf16>
    %7088 = stablehlo.sqrt %7087 : tensor<768xbf16>
    %7089 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7090 = stablehlo.add %7088, %7089 : tensor<768xbf16>
    %7091 = stablehlo.divide %5543, %7090 : tensor<768xbf16>
    %7092 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7093 = stablehlo.add %6155, %7092 : tensor<3072x768xbf16>
    %7094 = stablehlo.sqrt %7093 : tensor<3072x768xbf16>
    %7095 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7096 = stablehlo.add %7094, %7095 : tensor<3072x768xbf16>
    %7097 = stablehlo.divide %5546, %7096 : tensor<3072x768xbf16>
    %7098 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7099 = stablehlo.add %6158, %7098 : tensor<3072xbf16>
    %7100 = stablehlo.sqrt %7099 : tensor<3072xbf16>
    %7101 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7102 = stablehlo.add %7100, %7101 : tensor<3072xbf16>
    %7103 = stablehlo.divide %5549, %7102 : tensor<3072xbf16>
    %7104 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7105 = stablehlo.add %6161, %7104 : tensor<768x3072xbf16>
    %7106 = stablehlo.sqrt %7105 : tensor<768x3072xbf16>
    %7107 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7108 = stablehlo.add %7106, %7107 : tensor<768x3072xbf16>
    %7109 = stablehlo.divide %5552, %7108 : tensor<768x3072xbf16>
    %7110 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7111 = stablehlo.add %6164, %7110 : tensor<768xbf16>
    %7112 = stablehlo.sqrt %7111 : tensor<768xbf16>
    %7113 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7114 = stablehlo.add %7112, %7113 : tensor<768xbf16>
    %7115 = stablehlo.divide %5555, %7114 : tensor<768xbf16>
    %7116 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7117 = stablehlo.add %6167, %7116 : tensor<768xbf16>
    %7118 = stablehlo.sqrt %7117 : tensor<768xbf16>
    %7119 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7120 = stablehlo.add %7118, %7119 : tensor<768xbf16>
    %7121 = stablehlo.divide %5558, %7120 : tensor<768xbf16>
    %7122 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7123 = stablehlo.add %6170, %7122 : tensor<768xbf16>
    %7124 = stablehlo.sqrt %7123 : tensor<768xbf16>
    %7125 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7126 = stablehlo.add %7124, %7125 : tensor<768xbf16>
    %7127 = stablehlo.divide %5561, %7126 : tensor<768xbf16>
    %7128 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7129 = stablehlo.add %6173, %7128 : tensor<768x768xbf16>
    %7130 = stablehlo.sqrt %7129 : tensor<768x768xbf16>
    %7131 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7132 = stablehlo.add %7130, %7131 : tensor<768x768xbf16>
    %7133 = stablehlo.divide %5564, %7132 : tensor<768x768xbf16>
    %7134 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7135 = stablehlo.add %6176, %7134 : tensor<768xbf16>
    %7136 = stablehlo.sqrt %7135 : tensor<768xbf16>
    %7137 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7138 = stablehlo.add %7136, %7137 : tensor<768xbf16>
    %7139 = stablehlo.divide %5567, %7138 : tensor<768xbf16>
    %7140 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7141 = stablehlo.add %6179, %7140 : tensor<768x768xbf16>
    %7142 = stablehlo.sqrt %7141 : tensor<768x768xbf16>
    %7143 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7144 = stablehlo.add %7142, %7143 : tensor<768x768xbf16>
    %7145 = stablehlo.divide %5570, %7144 : tensor<768x768xbf16>
    %7146 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7147 = stablehlo.add %6182, %7146 : tensor<768xbf16>
    %7148 = stablehlo.sqrt %7147 : tensor<768xbf16>
    %7149 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7150 = stablehlo.add %7148, %7149 : tensor<768xbf16>
    %7151 = stablehlo.divide %5573, %7150 : tensor<768xbf16>
    %7152 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7153 = stablehlo.add %6185, %7152 : tensor<768x768xbf16>
    %7154 = stablehlo.sqrt %7153 : tensor<768x768xbf16>
    %7155 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7156 = stablehlo.add %7154, %7155 : tensor<768x768xbf16>
    %7157 = stablehlo.divide %5576, %7156 : tensor<768x768xbf16>
    %7158 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7159 = stablehlo.add %6188, %7158 : tensor<768xbf16>
    %7160 = stablehlo.sqrt %7159 : tensor<768xbf16>
    %7161 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7162 = stablehlo.add %7160, %7161 : tensor<768xbf16>
    %7163 = stablehlo.divide %5579, %7162 : tensor<768xbf16>
    %7164 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7165 = stablehlo.add %6191, %7164 : tensor<768x768xbf16>
    %7166 = stablehlo.sqrt %7165 : tensor<768x768xbf16>
    %7167 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7168 = stablehlo.add %7166, %7167 : tensor<768x768xbf16>
    %7169 = stablehlo.divide %5582, %7168 : tensor<768x768xbf16>
    %7170 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7171 = stablehlo.add %6194, %7170 : tensor<768xbf16>
    %7172 = stablehlo.sqrt %7171 : tensor<768xbf16>
    %7173 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7174 = stablehlo.add %7172, %7173 : tensor<768xbf16>
    %7175 = stablehlo.divide %5585, %7174 : tensor<768xbf16>
    %7176 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7177 = stablehlo.add %6197, %7176 : tensor<768xbf16>
    %7178 = stablehlo.sqrt %7177 : tensor<768xbf16>
    %7179 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7180 = stablehlo.add %7178, %7179 : tensor<768xbf16>
    %7181 = stablehlo.divide %5588, %7180 : tensor<768xbf16>
    %7182 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7183 = stablehlo.add %6200, %7182 : tensor<768xbf16>
    %7184 = stablehlo.sqrt %7183 : tensor<768xbf16>
    %7185 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7186 = stablehlo.add %7184, %7185 : tensor<768xbf16>
    %7187 = stablehlo.divide %5591, %7186 : tensor<768xbf16>
    %7188 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7189 = stablehlo.add %6203, %7188 : tensor<3072x768xbf16>
    %7190 = stablehlo.sqrt %7189 : tensor<3072x768xbf16>
    %7191 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7192 = stablehlo.add %7190, %7191 : tensor<3072x768xbf16>
    %7193 = stablehlo.divide %5594, %7192 : tensor<3072x768xbf16>
    %7194 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7195 = stablehlo.add %6206, %7194 : tensor<3072xbf16>
    %7196 = stablehlo.sqrt %7195 : tensor<3072xbf16>
    %7197 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7198 = stablehlo.add %7196, %7197 : tensor<3072xbf16>
    %7199 = stablehlo.divide %5597, %7198 : tensor<3072xbf16>
    %7200 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7201 = stablehlo.add %6209, %7200 : tensor<768x3072xbf16>
    %7202 = stablehlo.sqrt %7201 : tensor<768x3072xbf16>
    %7203 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7204 = stablehlo.add %7202, %7203 : tensor<768x3072xbf16>
    %7205 = stablehlo.divide %5600, %7204 : tensor<768x3072xbf16>
    %7206 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7207 = stablehlo.add %6212, %7206 : tensor<768xbf16>
    %7208 = stablehlo.sqrt %7207 : tensor<768xbf16>
    %7209 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7210 = stablehlo.add %7208, %7209 : tensor<768xbf16>
    %7211 = stablehlo.divide %5603, %7210 : tensor<768xbf16>
    %7212 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7213 = stablehlo.add %6215, %7212 : tensor<768xbf16>
    %7214 = stablehlo.sqrt %7213 : tensor<768xbf16>
    %7215 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7216 = stablehlo.add %7214, %7215 : tensor<768xbf16>
    %7217 = stablehlo.divide %5606, %7216 : tensor<768xbf16>
    %7218 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7219 = stablehlo.add %6218, %7218 : tensor<768xbf16>
    %7220 = stablehlo.sqrt %7219 : tensor<768xbf16>
    %7221 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7222 = stablehlo.add %7220, %7221 : tensor<768xbf16>
    %7223 = stablehlo.divide %5609, %7222 : tensor<768xbf16>
    %7224 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7225 = stablehlo.add %6221, %7224 : tensor<768x768xbf16>
    %7226 = stablehlo.sqrt %7225 : tensor<768x768xbf16>
    %7227 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7228 = stablehlo.add %7226, %7227 : tensor<768x768xbf16>
    %7229 = stablehlo.divide %5612, %7228 : tensor<768x768xbf16>
    %7230 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7231 = stablehlo.add %6224, %7230 : tensor<768xbf16>
    %7232 = stablehlo.sqrt %7231 : tensor<768xbf16>
    %7233 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7234 = stablehlo.add %7232, %7233 : tensor<768xbf16>
    %7235 = stablehlo.divide %5615, %7234 : tensor<768xbf16>
    %7236 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7237 = stablehlo.add %6227, %7236 : tensor<768x768xbf16>
    %7238 = stablehlo.sqrt %7237 : tensor<768x768xbf16>
    %7239 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7240 = stablehlo.add %7238, %7239 : tensor<768x768xbf16>
    %7241 = stablehlo.divide %5618, %7240 : tensor<768x768xbf16>
    %7242 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7243 = stablehlo.add %6230, %7242 : tensor<768xbf16>
    %7244 = stablehlo.sqrt %7243 : tensor<768xbf16>
    %7245 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7246 = stablehlo.add %7244, %7245 : tensor<768xbf16>
    %7247 = stablehlo.divide %5621, %7246 : tensor<768xbf16>
    %7248 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7249 = stablehlo.add %6233, %7248 : tensor<768x768xbf16>
    %7250 = stablehlo.sqrt %7249 : tensor<768x768xbf16>
    %7251 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7252 = stablehlo.add %7250, %7251 : tensor<768x768xbf16>
    %7253 = stablehlo.divide %5624, %7252 : tensor<768x768xbf16>
    %7254 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7255 = stablehlo.add %6236, %7254 : tensor<768xbf16>
    %7256 = stablehlo.sqrt %7255 : tensor<768xbf16>
    %7257 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7258 = stablehlo.add %7256, %7257 : tensor<768xbf16>
    %7259 = stablehlo.divide %5627, %7258 : tensor<768xbf16>
    %7260 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7261 = stablehlo.add %6239, %7260 : tensor<768x768xbf16>
    %7262 = stablehlo.sqrt %7261 : tensor<768x768xbf16>
    %7263 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7264 = stablehlo.add %7262, %7263 : tensor<768x768xbf16>
    %7265 = stablehlo.divide %5630, %7264 : tensor<768x768xbf16>
    %7266 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7267 = stablehlo.add %6242, %7266 : tensor<768xbf16>
    %7268 = stablehlo.sqrt %7267 : tensor<768xbf16>
    %7269 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7270 = stablehlo.add %7268, %7269 : tensor<768xbf16>
    %7271 = stablehlo.divide %5633, %7270 : tensor<768xbf16>
    %7272 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7273 = stablehlo.add %6245, %7272 : tensor<768xbf16>
    %7274 = stablehlo.sqrt %7273 : tensor<768xbf16>
    %7275 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7276 = stablehlo.add %7274, %7275 : tensor<768xbf16>
    %7277 = stablehlo.divide %5636, %7276 : tensor<768xbf16>
    %7278 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7279 = stablehlo.add %6248, %7278 : tensor<768xbf16>
    %7280 = stablehlo.sqrt %7279 : tensor<768xbf16>
    %7281 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7282 = stablehlo.add %7280, %7281 : tensor<768xbf16>
    %7283 = stablehlo.divide %5639, %7282 : tensor<768xbf16>
    %7284 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7285 = stablehlo.add %6251, %7284 : tensor<3072x768xbf16>
    %7286 = stablehlo.sqrt %7285 : tensor<3072x768xbf16>
    %7287 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7288 = stablehlo.add %7286, %7287 : tensor<3072x768xbf16>
    %7289 = stablehlo.divide %5642, %7288 : tensor<3072x768xbf16>
    %7290 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7291 = stablehlo.add %6254, %7290 : tensor<3072xbf16>
    %7292 = stablehlo.sqrt %7291 : tensor<3072xbf16>
    %7293 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7294 = stablehlo.add %7292, %7293 : tensor<3072xbf16>
    %7295 = stablehlo.divide %5645, %7294 : tensor<3072xbf16>
    %7296 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7297 = stablehlo.add %6257, %7296 : tensor<768x3072xbf16>
    %7298 = stablehlo.sqrt %7297 : tensor<768x3072xbf16>
    %7299 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7300 = stablehlo.add %7298, %7299 : tensor<768x3072xbf16>
    %7301 = stablehlo.divide %5648, %7300 : tensor<768x3072xbf16>
    %7302 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7303 = stablehlo.add %6260, %7302 : tensor<768xbf16>
    %7304 = stablehlo.sqrt %7303 : tensor<768xbf16>
    %7305 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7306 = stablehlo.add %7304, %7305 : tensor<768xbf16>
    %7307 = stablehlo.divide %5651, %7306 : tensor<768xbf16>
    %7308 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7309 = stablehlo.add %6263, %7308 : tensor<768xbf16>
    %7310 = stablehlo.sqrt %7309 : tensor<768xbf16>
    %7311 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7312 = stablehlo.add %7310, %7311 : tensor<768xbf16>
    %7313 = stablehlo.divide %5654, %7312 : tensor<768xbf16>
    %7314 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7315 = stablehlo.add %6266, %7314 : tensor<768xbf16>
    %7316 = stablehlo.sqrt %7315 : tensor<768xbf16>
    %7317 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7318 = stablehlo.add %7316, %7317 : tensor<768xbf16>
    %7319 = stablehlo.divide %5657, %7318 : tensor<768xbf16>
    %7320 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7321 = stablehlo.add %6269, %7320 : tensor<768x768xbf16>
    %7322 = stablehlo.sqrt %7321 : tensor<768x768xbf16>
    %7323 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7324 = stablehlo.add %7322, %7323 : tensor<768x768xbf16>
    %7325 = stablehlo.divide %5660, %7324 : tensor<768x768xbf16>
    %7326 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7327 = stablehlo.add %6272, %7326 : tensor<768xbf16>
    %7328 = stablehlo.sqrt %7327 : tensor<768xbf16>
    %7329 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7330 = stablehlo.add %7328, %7329 : tensor<768xbf16>
    %7331 = stablehlo.divide %5663, %7330 : tensor<768xbf16>
    %7332 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7333 = stablehlo.add %6275, %7332 : tensor<768x768xbf16>
    %7334 = stablehlo.sqrt %7333 : tensor<768x768xbf16>
    %7335 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7336 = stablehlo.add %7334, %7335 : tensor<768x768xbf16>
    %7337 = stablehlo.divide %5666, %7336 : tensor<768x768xbf16>
    %7338 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7339 = stablehlo.add %6278, %7338 : tensor<768xbf16>
    %7340 = stablehlo.sqrt %7339 : tensor<768xbf16>
    %7341 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7342 = stablehlo.add %7340, %7341 : tensor<768xbf16>
    %7343 = stablehlo.divide %5669, %7342 : tensor<768xbf16>
    %7344 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7345 = stablehlo.add %6281, %7344 : tensor<768x768xbf16>
    %7346 = stablehlo.sqrt %7345 : tensor<768x768xbf16>
    %7347 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7348 = stablehlo.add %7346, %7347 : tensor<768x768xbf16>
    %7349 = stablehlo.divide %5672, %7348 : tensor<768x768xbf16>
    %7350 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7351 = stablehlo.add %6284, %7350 : tensor<768xbf16>
    %7352 = stablehlo.sqrt %7351 : tensor<768xbf16>
    %7353 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7354 = stablehlo.add %7352, %7353 : tensor<768xbf16>
    %7355 = stablehlo.divide %5675, %7354 : tensor<768xbf16>
    %7356 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7357 = stablehlo.add %6287, %7356 : tensor<768x768xbf16>
    %7358 = stablehlo.sqrt %7357 : tensor<768x768xbf16>
    %7359 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7360 = stablehlo.add %7358, %7359 : tensor<768x768xbf16>
    %7361 = stablehlo.divide %5678, %7360 : tensor<768x768xbf16>
    %7362 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7363 = stablehlo.add %6290, %7362 : tensor<768xbf16>
    %7364 = stablehlo.sqrt %7363 : tensor<768xbf16>
    %7365 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7366 = stablehlo.add %7364, %7365 : tensor<768xbf16>
    %7367 = stablehlo.divide %5681, %7366 : tensor<768xbf16>
    %7368 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7369 = stablehlo.add %6293, %7368 : tensor<768xbf16>
    %7370 = stablehlo.sqrt %7369 : tensor<768xbf16>
    %7371 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7372 = stablehlo.add %7370, %7371 : tensor<768xbf16>
    %7373 = stablehlo.divide %5684, %7372 : tensor<768xbf16>
    %7374 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7375 = stablehlo.add %6296, %7374 : tensor<768xbf16>
    %7376 = stablehlo.sqrt %7375 : tensor<768xbf16>
    %7377 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7378 = stablehlo.add %7376, %7377 : tensor<768xbf16>
    %7379 = stablehlo.divide %5687, %7378 : tensor<768xbf16>
    %7380 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7381 = stablehlo.add %6299, %7380 : tensor<3072x768xbf16>
    %7382 = stablehlo.sqrt %7381 : tensor<3072x768xbf16>
    %7383 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7384 = stablehlo.add %7382, %7383 : tensor<3072x768xbf16>
    %7385 = stablehlo.divide %5690, %7384 : tensor<3072x768xbf16>
    %7386 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7387 = stablehlo.add %6302, %7386 : tensor<3072xbf16>
    %7388 = stablehlo.sqrt %7387 : tensor<3072xbf16>
    %7389 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7390 = stablehlo.add %7388, %7389 : tensor<3072xbf16>
    %7391 = stablehlo.divide %5693, %7390 : tensor<3072xbf16>
    %7392 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7393 = stablehlo.add %6305, %7392 : tensor<768x3072xbf16>
    %7394 = stablehlo.sqrt %7393 : tensor<768x3072xbf16>
    %7395 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7396 = stablehlo.add %7394, %7395 : tensor<768x3072xbf16>
    %7397 = stablehlo.divide %5696, %7396 : tensor<768x3072xbf16>
    %7398 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7399 = stablehlo.add %6308, %7398 : tensor<768xbf16>
    %7400 = stablehlo.sqrt %7399 : tensor<768xbf16>
    %7401 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7402 = stablehlo.add %7400, %7401 : tensor<768xbf16>
    %7403 = stablehlo.divide %5699, %7402 : tensor<768xbf16>
    %7404 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7405 = stablehlo.add %6311, %7404 : tensor<768xbf16>
    %7406 = stablehlo.sqrt %7405 : tensor<768xbf16>
    %7407 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7408 = stablehlo.add %7406, %7407 : tensor<768xbf16>
    %7409 = stablehlo.divide %5702, %7408 : tensor<768xbf16>
    %7410 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7411 = stablehlo.add %6314, %7410 : tensor<768xbf16>
    %7412 = stablehlo.sqrt %7411 : tensor<768xbf16>
    %7413 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7414 = stablehlo.add %7412, %7413 : tensor<768xbf16>
    %7415 = stablehlo.divide %5705, %7414 : tensor<768xbf16>
    %7416 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7417 = stablehlo.add %6317, %7416 : tensor<768x768xbf16>
    %7418 = stablehlo.sqrt %7417 : tensor<768x768xbf16>
    %7419 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7420 = stablehlo.add %7418, %7419 : tensor<768x768xbf16>
    %7421 = stablehlo.divide %5708, %7420 : tensor<768x768xbf16>
    %7422 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7423 = stablehlo.add %6320, %7422 : tensor<768xbf16>
    %7424 = stablehlo.sqrt %7423 : tensor<768xbf16>
    %7425 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7426 = stablehlo.add %7424, %7425 : tensor<768xbf16>
    %7427 = stablehlo.divide %5711, %7426 : tensor<768xbf16>
    %7428 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7429 = stablehlo.add %6323, %7428 : tensor<768x768xbf16>
    %7430 = stablehlo.sqrt %7429 : tensor<768x768xbf16>
    %7431 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7432 = stablehlo.add %7430, %7431 : tensor<768x768xbf16>
    %7433 = stablehlo.divide %5714, %7432 : tensor<768x768xbf16>
    %7434 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7435 = stablehlo.add %6326, %7434 : tensor<768xbf16>
    %7436 = stablehlo.sqrt %7435 : tensor<768xbf16>
    %7437 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7438 = stablehlo.add %7436, %7437 : tensor<768xbf16>
    %7439 = stablehlo.divide %5717, %7438 : tensor<768xbf16>
    %7440 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7441 = stablehlo.add %6329, %7440 : tensor<768x768xbf16>
    %7442 = stablehlo.sqrt %7441 : tensor<768x768xbf16>
    %7443 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7444 = stablehlo.add %7442, %7443 : tensor<768x768xbf16>
    %7445 = stablehlo.divide %5720, %7444 : tensor<768x768xbf16>
    %7446 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7447 = stablehlo.add %6332, %7446 : tensor<768xbf16>
    %7448 = stablehlo.sqrt %7447 : tensor<768xbf16>
    %7449 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7450 = stablehlo.add %7448, %7449 : tensor<768xbf16>
    %7451 = stablehlo.divide %5723, %7450 : tensor<768xbf16>
    %7452 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7453 = stablehlo.add %6335, %7452 : tensor<768x768xbf16>
    %7454 = stablehlo.sqrt %7453 : tensor<768x768xbf16>
    %7455 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7456 = stablehlo.add %7454, %7455 : tensor<768x768xbf16>
    %7457 = stablehlo.divide %5726, %7456 : tensor<768x768xbf16>
    %7458 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7459 = stablehlo.add %6338, %7458 : tensor<768xbf16>
    %7460 = stablehlo.sqrt %7459 : tensor<768xbf16>
    %7461 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7462 = stablehlo.add %7460, %7461 : tensor<768xbf16>
    %7463 = stablehlo.divide %5729, %7462 : tensor<768xbf16>
    %7464 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7465 = stablehlo.add %6341, %7464 : tensor<768xbf16>
    %7466 = stablehlo.sqrt %7465 : tensor<768xbf16>
    %7467 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7468 = stablehlo.add %7466, %7467 : tensor<768xbf16>
    %7469 = stablehlo.divide %5732, %7468 : tensor<768xbf16>
    %7470 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7471 = stablehlo.add %6344, %7470 : tensor<768xbf16>
    %7472 = stablehlo.sqrt %7471 : tensor<768xbf16>
    %7473 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7474 = stablehlo.add %7472, %7473 : tensor<768xbf16>
    %7475 = stablehlo.divide %5735, %7474 : tensor<768xbf16>
    %7476 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7477 = stablehlo.add %6347, %7476 : tensor<3072x768xbf16>
    %7478 = stablehlo.sqrt %7477 : tensor<3072x768xbf16>
    %7479 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7480 = stablehlo.add %7478, %7479 : tensor<3072x768xbf16>
    %7481 = stablehlo.divide %5738, %7480 : tensor<3072x768xbf16>
    %7482 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7483 = stablehlo.add %6350, %7482 : tensor<3072xbf16>
    %7484 = stablehlo.sqrt %7483 : tensor<3072xbf16>
    %7485 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7486 = stablehlo.add %7484, %7485 : tensor<3072xbf16>
    %7487 = stablehlo.divide %5741, %7486 : tensor<3072xbf16>
    %7488 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7489 = stablehlo.add %6353, %7488 : tensor<768x3072xbf16>
    %7490 = stablehlo.sqrt %7489 : tensor<768x3072xbf16>
    %7491 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7492 = stablehlo.add %7490, %7491 : tensor<768x3072xbf16>
    %7493 = stablehlo.divide %5744, %7492 : tensor<768x3072xbf16>
    %7494 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7495 = stablehlo.add %6356, %7494 : tensor<768xbf16>
    %7496 = stablehlo.sqrt %7495 : tensor<768xbf16>
    %7497 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7498 = stablehlo.add %7496, %7497 : tensor<768xbf16>
    %7499 = stablehlo.divide %5747, %7498 : tensor<768xbf16>
    %7500 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7501 = stablehlo.add %6359, %7500 : tensor<768xbf16>
    %7502 = stablehlo.sqrt %7501 : tensor<768xbf16>
    %7503 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7504 = stablehlo.add %7502, %7503 : tensor<768xbf16>
    %7505 = stablehlo.divide %5750, %7504 : tensor<768xbf16>
    %7506 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7507 = stablehlo.add %6362, %7506 : tensor<768xbf16>
    %7508 = stablehlo.sqrt %7507 : tensor<768xbf16>
    %7509 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7510 = stablehlo.add %7508, %7509 : tensor<768xbf16>
    %7511 = stablehlo.divide %5753, %7510 : tensor<768xbf16>
    %7512 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7513 = stablehlo.add %6365, %7512 : tensor<768x768xbf16>
    %7514 = stablehlo.sqrt %7513 : tensor<768x768xbf16>
    %7515 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7516 = stablehlo.add %7514, %7515 : tensor<768x768xbf16>
    %7517 = stablehlo.divide %5756, %7516 : tensor<768x768xbf16>
    %7518 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7519 = stablehlo.add %6368, %7518 : tensor<768xbf16>
    %7520 = stablehlo.sqrt %7519 : tensor<768xbf16>
    %7521 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7522 = stablehlo.add %7520, %7521 : tensor<768xbf16>
    %7523 = stablehlo.divide %5759, %7522 : tensor<768xbf16>
    %7524 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7525 = stablehlo.add %6371, %7524 : tensor<768x768xbf16>
    %7526 = stablehlo.sqrt %7525 : tensor<768x768xbf16>
    %7527 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7528 = stablehlo.add %7526, %7527 : tensor<768x768xbf16>
    %7529 = stablehlo.divide %5762, %7528 : tensor<768x768xbf16>
    %7530 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7531 = stablehlo.add %6374, %7530 : tensor<768xbf16>
    %7532 = stablehlo.sqrt %7531 : tensor<768xbf16>
    %7533 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7534 = stablehlo.add %7532, %7533 : tensor<768xbf16>
    %7535 = stablehlo.divide %5765, %7534 : tensor<768xbf16>
    %7536 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7537 = stablehlo.add %6377, %7536 : tensor<768x768xbf16>
    %7538 = stablehlo.sqrt %7537 : tensor<768x768xbf16>
    %7539 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7540 = stablehlo.add %7538, %7539 : tensor<768x768xbf16>
    %7541 = stablehlo.divide %5768, %7540 : tensor<768x768xbf16>
    %7542 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7543 = stablehlo.add %6380, %7542 : tensor<768xbf16>
    %7544 = stablehlo.sqrt %7543 : tensor<768xbf16>
    %7545 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7546 = stablehlo.add %7544, %7545 : tensor<768xbf16>
    %7547 = stablehlo.divide %5771, %7546 : tensor<768xbf16>
    %7548 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7549 = stablehlo.add %6383, %7548 : tensor<768x768xbf16>
    %7550 = stablehlo.sqrt %7549 : tensor<768x768xbf16>
    %7551 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7552 = stablehlo.add %7550, %7551 : tensor<768x768xbf16>
    %7553 = stablehlo.divide %5774, %7552 : tensor<768x768xbf16>
    %7554 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7555 = stablehlo.add %6386, %7554 : tensor<768xbf16>
    %7556 = stablehlo.sqrt %7555 : tensor<768xbf16>
    %7557 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7558 = stablehlo.add %7556, %7557 : tensor<768xbf16>
    %7559 = stablehlo.divide %5777, %7558 : tensor<768xbf16>
    %7560 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7561 = stablehlo.add %6389, %7560 : tensor<768xbf16>
    %7562 = stablehlo.sqrt %7561 : tensor<768xbf16>
    %7563 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7564 = stablehlo.add %7562, %7563 : tensor<768xbf16>
    %7565 = stablehlo.divide %5780, %7564 : tensor<768xbf16>
    %7566 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7567 = stablehlo.add %6392, %7566 : tensor<768xbf16>
    %7568 = stablehlo.sqrt %7567 : tensor<768xbf16>
    %7569 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7570 = stablehlo.add %7568, %7569 : tensor<768xbf16>
    %7571 = stablehlo.divide %5783, %7570 : tensor<768xbf16>
    %7572 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7573 = stablehlo.add %6395, %7572 : tensor<3072x768xbf16>
    %7574 = stablehlo.sqrt %7573 : tensor<3072x768xbf16>
    %7575 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7576 = stablehlo.add %7574, %7575 : tensor<3072x768xbf16>
    %7577 = stablehlo.divide %5786, %7576 : tensor<3072x768xbf16>
    %7578 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7579 = stablehlo.add %6398, %7578 : tensor<3072xbf16>
    %7580 = stablehlo.sqrt %7579 : tensor<3072xbf16>
    %7581 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7582 = stablehlo.add %7580, %7581 : tensor<3072xbf16>
    %7583 = stablehlo.divide %5789, %7582 : tensor<3072xbf16>
    %7584 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7585 = stablehlo.add %6401, %7584 : tensor<768x3072xbf16>
    %7586 = stablehlo.sqrt %7585 : tensor<768x3072xbf16>
    %7587 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7588 = stablehlo.add %7586, %7587 : tensor<768x3072xbf16>
    %7589 = stablehlo.divide %5792, %7588 : tensor<768x3072xbf16>
    %7590 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7591 = stablehlo.add %6404, %7590 : tensor<768xbf16>
    %7592 = stablehlo.sqrt %7591 : tensor<768xbf16>
    %7593 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7594 = stablehlo.add %7592, %7593 : tensor<768xbf16>
    %7595 = stablehlo.divide %5795, %7594 : tensor<768xbf16>
    %7596 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7597 = stablehlo.add %6407, %7596 : tensor<768xbf16>
    %7598 = stablehlo.sqrt %7597 : tensor<768xbf16>
    %7599 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7600 = stablehlo.add %7598, %7599 : tensor<768xbf16>
    %7601 = stablehlo.divide %5798, %7600 : tensor<768xbf16>
    %7602 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7603 = stablehlo.add %6410, %7602 : tensor<768xbf16>
    %7604 = stablehlo.sqrt %7603 : tensor<768xbf16>
    %7605 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7606 = stablehlo.add %7604, %7605 : tensor<768xbf16>
    %7607 = stablehlo.divide %5801, %7606 : tensor<768xbf16>
    %7608 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7609 = stablehlo.add %6413, %7608 : tensor<768x768xbf16>
    %7610 = stablehlo.sqrt %7609 : tensor<768x768xbf16>
    %7611 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7612 = stablehlo.add %7610, %7611 : tensor<768x768xbf16>
    %7613 = stablehlo.divide %5804, %7612 : tensor<768x768xbf16>
    %7614 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7615 = stablehlo.add %6416, %7614 : tensor<768xbf16>
    %7616 = stablehlo.sqrt %7615 : tensor<768xbf16>
    %7617 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7618 = stablehlo.add %7616, %7617 : tensor<768xbf16>
    %7619 = stablehlo.divide %5807, %7618 : tensor<768xbf16>
    %7620 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7621 = stablehlo.add %6419, %7620 : tensor<768xbf16>
    %7622 = stablehlo.sqrt %7621 : tensor<768xbf16>
    %7623 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7624 = stablehlo.add %7622, %7623 : tensor<768xbf16>
    %7625 = stablehlo.divide %5810, %7624 : tensor<768xbf16>
    %7626 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7627 = stablehlo.add %6422, %7626 : tensor<768xbf16>
    %7628 = stablehlo.sqrt %7627 : tensor<768xbf16>
    %7629 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7630 = stablehlo.add %7628, %7629 : tensor<768xbf16>
    %7631 = stablehlo.divide %5813, %7630 : tensor<768xbf16>
    %7632 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %7633 = stablehlo.add %6425, %7632 : tensor<30522xbf16>
    %7634 = stablehlo.sqrt %7633 : tensor<30522xbf16>
    %7635 = stablehlo.broadcast_in_dim %cst_504, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %7636 = stablehlo.add %7634, %7635 : tensor<30522xbf16>
    %7637 = stablehlo.divide %5816, %7636 : tensor<30522xbf16>
    %cst_505 = stablehlo.constant dense<1.000980e-02> : tensor<bf16>
    %7638 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %7639 = stablehlo.multiply %7638, %arg0 : tensor<30522x768xbf16>
    %7640 = stablehlo.add %6431, %7639 : tensor<30522x768xbf16>
    %7641 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %7642 = stablehlo.multiply %7641, %arg1 : tensor<512x768xbf16>
    %7643 = stablehlo.add %6437, %7642 : tensor<512x768xbf16>
    %7644 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %7645 = stablehlo.multiply %7644, %arg2 : tensor<2x768xbf16>
    %7646 = stablehlo.add %6443, %7645 : tensor<2x768xbf16>
    %7647 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7648 = stablehlo.multiply %7647, %arg3 : tensor<768xbf16>
    %7649 = stablehlo.add %6449, %7648 : tensor<768xbf16>
    %7650 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7651 = stablehlo.multiply %7650, %arg4 : tensor<768xbf16>
    %7652 = stablehlo.add %6455, %7651 : tensor<768xbf16>
    %7653 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7654 = stablehlo.multiply %7653, %arg5 : tensor<768x768xbf16>
    %7655 = stablehlo.add %6461, %7654 : tensor<768x768xbf16>
    %7656 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7657 = stablehlo.multiply %7656, %arg6 : tensor<768xbf16>
    %7658 = stablehlo.add %6467, %7657 : tensor<768xbf16>
    %7659 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7660 = stablehlo.multiply %7659, %arg7 : tensor<768x768xbf16>
    %7661 = stablehlo.add %6473, %7660 : tensor<768x768xbf16>
    %7662 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7663 = stablehlo.multiply %7662, %arg8 : tensor<768xbf16>
    %7664 = stablehlo.add %6479, %7663 : tensor<768xbf16>
    %7665 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7666 = stablehlo.multiply %7665, %arg9 : tensor<768x768xbf16>
    %7667 = stablehlo.add %6485, %7666 : tensor<768x768xbf16>
    %7668 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7669 = stablehlo.multiply %7668, %arg10 : tensor<768xbf16>
    %7670 = stablehlo.add %6491, %7669 : tensor<768xbf16>
    %7671 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7672 = stablehlo.multiply %7671, %arg11 : tensor<768x768xbf16>
    %7673 = stablehlo.add %6497, %7672 : tensor<768x768xbf16>
    %7674 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7675 = stablehlo.multiply %7674, %arg12 : tensor<768xbf16>
    %7676 = stablehlo.add %6503, %7675 : tensor<768xbf16>
    %7677 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7678 = stablehlo.multiply %7677, %arg13 : tensor<768xbf16>
    %7679 = stablehlo.add %6509, %7678 : tensor<768xbf16>
    %7680 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7681 = stablehlo.multiply %7680, %arg14 : tensor<768xbf16>
    %7682 = stablehlo.add %6515, %7681 : tensor<768xbf16>
    %7683 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7684 = stablehlo.multiply %7683, %arg15 : tensor<3072x768xbf16>
    %7685 = stablehlo.add %6521, %7684 : tensor<3072x768xbf16>
    %7686 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7687 = stablehlo.multiply %7686, %arg16 : tensor<3072xbf16>
    %7688 = stablehlo.add %6527, %7687 : tensor<3072xbf16>
    %7689 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7690 = stablehlo.multiply %7689, %arg17 : tensor<768x3072xbf16>
    %7691 = stablehlo.add %6533, %7690 : tensor<768x3072xbf16>
    %7692 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7693 = stablehlo.multiply %7692, %arg18 : tensor<768xbf16>
    %7694 = stablehlo.add %6539, %7693 : tensor<768xbf16>
    %7695 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7696 = stablehlo.multiply %7695, %arg19 : tensor<768xbf16>
    %7697 = stablehlo.add %6545, %7696 : tensor<768xbf16>
    %7698 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7699 = stablehlo.multiply %7698, %arg20 : tensor<768xbf16>
    %7700 = stablehlo.add %6551, %7699 : tensor<768xbf16>
    %7701 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7702 = stablehlo.multiply %7701, %arg21 : tensor<768x768xbf16>
    %7703 = stablehlo.add %6557, %7702 : tensor<768x768xbf16>
    %7704 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7705 = stablehlo.multiply %7704, %arg22 : tensor<768xbf16>
    %7706 = stablehlo.add %6563, %7705 : tensor<768xbf16>
    %7707 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7708 = stablehlo.multiply %7707, %arg23 : tensor<768x768xbf16>
    %7709 = stablehlo.add %6569, %7708 : tensor<768x768xbf16>
    %7710 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7711 = stablehlo.multiply %7710, %arg24 : tensor<768xbf16>
    %7712 = stablehlo.add %6575, %7711 : tensor<768xbf16>
    %7713 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7714 = stablehlo.multiply %7713, %arg25 : tensor<768x768xbf16>
    %7715 = stablehlo.add %6581, %7714 : tensor<768x768xbf16>
    %7716 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7717 = stablehlo.multiply %7716, %arg26 : tensor<768xbf16>
    %7718 = stablehlo.add %6587, %7717 : tensor<768xbf16>
    %7719 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7720 = stablehlo.multiply %7719, %arg27 : tensor<768x768xbf16>
    %7721 = stablehlo.add %6593, %7720 : tensor<768x768xbf16>
    %7722 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7723 = stablehlo.multiply %7722, %arg28 : tensor<768xbf16>
    %7724 = stablehlo.add %6599, %7723 : tensor<768xbf16>
    %7725 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7726 = stablehlo.multiply %7725, %arg29 : tensor<768xbf16>
    %7727 = stablehlo.add %6605, %7726 : tensor<768xbf16>
    %7728 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7729 = stablehlo.multiply %7728, %arg30 : tensor<768xbf16>
    %7730 = stablehlo.add %6611, %7729 : tensor<768xbf16>
    %7731 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7732 = stablehlo.multiply %7731, %arg31 : tensor<3072x768xbf16>
    %7733 = stablehlo.add %6617, %7732 : tensor<3072x768xbf16>
    %7734 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7735 = stablehlo.multiply %7734, %arg32 : tensor<3072xbf16>
    %7736 = stablehlo.add %6623, %7735 : tensor<3072xbf16>
    %7737 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7738 = stablehlo.multiply %7737, %arg33 : tensor<768x3072xbf16>
    %7739 = stablehlo.add %6629, %7738 : tensor<768x3072xbf16>
    %7740 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7741 = stablehlo.multiply %7740, %arg34 : tensor<768xbf16>
    %7742 = stablehlo.add %6635, %7741 : tensor<768xbf16>
    %7743 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7744 = stablehlo.multiply %7743, %arg35 : tensor<768xbf16>
    %7745 = stablehlo.add %6641, %7744 : tensor<768xbf16>
    %7746 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7747 = stablehlo.multiply %7746, %arg36 : tensor<768xbf16>
    %7748 = stablehlo.add %6647, %7747 : tensor<768xbf16>
    %7749 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7750 = stablehlo.multiply %7749, %arg37 : tensor<768x768xbf16>
    %7751 = stablehlo.add %6653, %7750 : tensor<768x768xbf16>
    %7752 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7753 = stablehlo.multiply %7752, %arg38 : tensor<768xbf16>
    %7754 = stablehlo.add %6659, %7753 : tensor<768xbf16>
    %7755 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7756 = stablehlo.multiply %7755, %arg39 : tensor<768x768xbf16>
    %7757 = stablehlo.add %6665, %7756 : tensor<768x768xbf16>
    %7758 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7759 = stablehlo.multiply %7758, %arg40 : tensor<768xbf16>
    %7760 = stablehlo.add %6671, %7759 : tensor<768xbf16>
    %7761 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7762 = stablehlo.multiply %7761, %arg41 : tensor<768x768xbf16>
    %7763 = stablehlo.add %6677, %7762 : tensor<768x768xbf16>
    %7764 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7765 = stablehlo.multiply %7764, %arg42 : tensor<768xbf16>
    %7766 = stablehlo.add %6683, %7765 : tensor<768xbf16>
    %7767 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7768 = stablehlo.multiply %7767, %arg43 : tensor<768x768xbf16>
    %7769 = stablehlo.add %6689, %7768 : tensor<768x768xbf16>
    %7770 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7771 = stablehlo.multiply %7770, %arg44 : tensor<768xbf16>
    %7772 = stablehlo.add %6695, %7771 : tensor<768xbf16>
    %7773 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7774 = stablehlo.multiply %7773, %arg45 : tensor<768xbf16>
    %7775 = stablehlo.add %6701, %7774 : tensor<768xbf16>
    %7776 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7777 = stablehlo.multiply %7776, %arg46 : tensor<768xbf16>
    %7778 = stablehlo.add %6707, %7777 : tensor<768xbf16>
    %7779 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7780 = stablehlo.multiply %7779, %arg47 : tensor<3072x768xbf16>
    %7781 = stablehlo.add %6713, %7780 : tensor<3072x768xbf16>
    %7782 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7783 = stablehlo.multiply %7782, %arg48 : tensor<3072xbf16>
    %7784 = stablehlo.add %6719, %7783 : tensor<3072xbf16>
    %7785 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7786 = stablehlo.multiply %7785, %arg49 : tensor<768x3072xbf16>
    %7787 = stablehlo.add %6725, %7786 : tensor<768x3072xbf16>
    %7788 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7789 = stablehlo.multiply %7788, %arg50 : tensor<768xbf16>
    %7790 = stablehlo.add %6731, %7789 : tensor<768xbf16>
    %7791 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7792 = stablehlo.multiply %7791, %arg51 : tensor<768xbf16>
    %7793 = stablehlo.add %6737, %7792 : tensor<768xbf16>
    %7794 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7795 = stablehlo.multiply %7794, %arg52 : tensor<768xbf16>
    %7796 = stablehlo.add %6743, %7795 : tensor<768xbf16>
    %7797 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7798 = stablehlo.multiply %7797, %arg53 : tensor<768x768xbf16>
    %7799 = stablehlo.add %6749, %7798 : tensor<768x768xbf16>
    %7800 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7801 = stablehlo.multiply %7800, %arg54 : tensor<768xbf16>
    %7802 = stablehlo.add %6755, %7801 : tensor<768xbf16>
    %7803 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7804 = stablehlo.multiply %7803, %arg55 : tensor<768x768xbf16>
    %7805 = stablehlo.add %6761, %7804 : tensor<768x768xbf16>
    %7806 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7807 = stablehlo.multiply %7806, %arg56 : tensor<768xbf16>
    %7808 = stablehlo.add %6767, %7807 : tensor<768xbf16>
    %7809 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7810 = stablehlo.multiply %7809, %arg57 : tensor<768x768xbf16>
    %7811 = stablehlo.add %6773, %7810 : tensor<768x768xbf16>
    %7812 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7813 = stablehlo.multiply %7812, %arg58 : tensor<768xbf16>
    %7814 = stablehlo.add %6779, %7813 : tensor<768xbf16>
    %7815 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7816 = stablehlo.multiply %7815, %arg59 : tensor<768x768xbf16>
    %7817 = stablehlo.add %6785, %7816 : tensor<768x768xbf16>
    %7818 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7819 = stablehlo.multiply %7818, %arg60 : tensor<768xbf16>
    %7820 = stablehlo.add %6791, %7819 : tensor<768xbf16>
    %7821 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7822 = stablehlo.multiply %7821, %arg61 : tensor<768xbf16>
    %7823 = stablehlo.add %6797, %7822 : tensor<768xbf16>
    %7824 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7825 = stablehlo.multiply %7824, %arg62 : tensor<768xbf16>
    %7826 = stablehlo.add %6803, %7825 : tensor<768xbf16>
    %7827 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7828 = stablehlo.multiply %7827, %arg63 : tensor<3072x768xbf16>
    %7829 = stablehlo.add %6809, %7828 : tensor<3072x768xbf16>
    %7830 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7831 = stablehlo.multiply %7830, %arg64 : tensor<3072xbf16>
    %7832 = stablehlo.add %6815, %7831 : tensor<3072xbf16>
    %7833 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7834 = stablehlo.multiply %7833, %arg65 : tensor<768x3072xbf16>
    %7835 = stablehlo.add %6821, %7834 : tensor<768x3072xbf16>
    %7836 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7837 = stablehlo.multiply %7836, %arg66 : tensor<768xbf16>
    %7838 = stablehlo.add %6827, %7837 : tensor<768xbf16>
    %7839 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7840 = stablehlo.multiply %7839, %arg67 : tensor<768xbf16>
    %7841 = stablehlo.add %6833, %7840 : tensor<768xbf16>
    %7842 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7843 = stablehlo.multiply %7842, %arg68 : tensor<768xbf16>
    %7844 = stablehlo.add %6839, %7843 : tensor<768xbf16>
    %7845 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7846 = stablehlo.multiply %7845, %arg69 : tensor<768x768xbf16>
    %7847 = stablehlo.add %6845, %7846 : tensor<768x768xbf16>
    %7848 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7849 = stablehlo.multiply %7848, %arg70 : tensor<768xbf16>
    %7850 = stablehlo.add %6851, %7849 : tensor<768xbf16>
    %7851 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7852 = stablehlo.multiply %7851, %arg71 : tensor<768x768xbf16>
    %7853 = stablehlo.add %6857, %7852 : tensor<768x768xbf16>
    %7854 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7855 = stablehlo.multiply %7854, %arg72 : tensor<768xbf16>
    %7856 = stablehlo.add %6863, %7855 : tensor<768xbf16>
    %7857 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7858 = stablehlo.multiply %7857, %arg73 : tensor<768x768xbf16>
    %7859 = stablehlo.add %6869, %7858 : tensor<768x768xbf16>
    %7860 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7861 = stablehlo.multiply %7860, %arg74 : tensor<768xbf16>
    %7862 = stablehlo.add %6875, %7861 : tensor<768xbf16>
    %7863 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7864 = stablehlo.multiply %7863, %arg75 : tensor<768x768xbf16>
    %7865 = stablehlo.add %6881, %7864 : tensor<768x768xbf16>
    %7866 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7867 = stablehlo.multiply %7866, %arg76 : tensor<768xbf16>
    %7868 = stablehlo.add %6887, %7867 : tensor<768xbf16>
    %7869 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7870 = stablehlo.multiply %7869, %arg77 : tensor<768xbf16>
    %7871 = stablehlo.add %6893, %7870 : tensor<768xbf16>
    %7872 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7873 = stablehlo.multiply %7872, %arg78 : tensor<768xbf16>
    %7874 = stablehlo.add %6899, %7873 : tensor<768xbf16>
    %7875 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7876 = stablehlo.multiply %7875, %arg79 : tensor<3072x768xbf16>
    %7877 = stablehlo.add %6905, %7876 : tensor<3072x768xbf16>
    %7878 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7879 = stablehlo.multiply %7878, %arg80 : tensor<3072xbf16>
    %7880 = stablehlo.add %6911, %7879 : tensor<3072xbf16>
    %7881 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7882 = stablehlo.multiply %7881, %arg81 : tensor<768x3072xbf16>
    %7883 = stablehlo.add %6917, %7882 : tensor<768x3072xbf16>
    %7884 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7885 = stablehlo.multiply %7884, %arg82 : tensor<768xbf16>
    %7886 = stablehlo.add %6923, %7885 : tensor<768xbf16>
    %7887 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7888 = stablehlo.multiply %7887, %arg83 : tensor<768xbf16>
    %7889 = stablehlo.add %6929, %7888 : tensor<768xbf16>
    %7890 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7891 = stablehlo.multiply %7890, %arg84 : tensor<768xbf16>
    %7892 = stablehlo.add %6935, %7891 : tensor<768xbf16>
    %7893 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7894 = stablehlo.multiply %7893, %arg85 : tensor<768x768xbf16>
    %7895 = stablehlo.add %6941, %7894 : tensor<768x768xbf16>
    %7896 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7897 = stablehlo.multiply %7896, %arg86 : tensor<768xbf16>
    %7898 = stablehlo.add %6947, %7897 : tensor<768xbf16>
    %7899 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7900 = stablehlo.multiply %7899, %arg87 : tensor<768x768xbf16>
    %7901 = stablehlo.add %6953, %7900 : tensor<768x768xbf16>
    %7902 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7903 = stablehlo.multiply %7902, %arg88 : tensor<768xbf16>
    %7904 = stablehlo.add %6959, %7903 : tensor<768xbf16>
    %7905 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7906 = stablehlo.multiply %7905, %arg89 : tensor<768x768xbf16>
    %7907 = stablehlo.add %6965, %7906 : tensor<768x768xbf16>
    %7908 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7909 = stablehlo.multiply %7908, %arg90 : tensor<768xbf16>
    %7910 = stablehlo.add %6971, %7909 : tensor<768xbf16>
    %7911 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7912 = stablehlo.multiply %7911, %arg91 : tensor<768x768xbf16>
    %7913 = stablehlo.add %6977, %7912 : tensor<768x768xbf16>
    %7914 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7915 = stablehlo.multiply %7914, %arg92 : tensor<768xbf16>
    %7916 = stablehlo.add %6983, %7915 : tensor<768xbf16>
    %7917 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7918 = stablehlo.multiply %7917, %arg93 : tensor<768xbf16>
    %7919 = stablehlo.add %6989, %7918 : tensor<768xbf16>
    %7920 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7921 = stablehlo.multiply %7920, %arg94 : tensor<768xbf16>
    %7922 = stablehlo.add %6995, %7921 : tensor<768xbf16>
    %7923 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7924 = stablehlo.multiply %7923, %arg95 : tensor<3072x768xbf16>
    %7925 = stablehlo.add %7001, %7924 : tensor<3072x768xbf16>
    %7926 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7927 = stablehlo.multiply %7926, %arg96 : tensor<3072xbf16>
    %7928 = stablehlo.add %7007, %7927 : tensor<3072xbf16>
    %7929 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7930 = stablehlo.multiply %7929, %arg97 : tensor<768x3072xbf16>
    %7931 = stablehlo.add %7013, %7930 : tensor<768x3072xbf16>
    %7932 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7933 = stablehlo.multiply %7932, %arg98 : tensor<768xbf16>
    %7934 = stablehlo.add %7019, %7933 : tensor<768xbf16>
    %7935 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7936 = stablehlo.multiply %7935, %arg99 : tensor<768xbf16>
    %7937 = stablehlo.add %7025, %7936 : tensor<768xbf16>
    %7938 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7939 = stablehlo.multiply %7938, %arg100 : tensor<768xbf16>
    %7940 = stablehlo.add %7031, %7939 : tensor<768xbf16>
    %7941 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7942 = stablehlo.multiply %7941, %arg101 : tensor<768x768xbf16>
    %7943 = stablehlo.add %7037, %7942 : tensor<768x768xbf16>
    %7944 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7945 = stablehlo.multiply %7944, %arg102 : tensor<768xbf16>
    %7946 = stablehlo.add %7043, %7945 : tensor<768xbf16>
    %7947 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7948 = stablehlo.multiply %7947, %arg103 : tensor<768x768xbf16>
    %7949 = stablehlo.add %7049, %7948 : tensor<768x768xbf16>
    %7950 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7951 = stablehlo.multiply %7950, %arg104 : tensor<768xbf16>
    %7952 = stablehlo.add %7055, %7951 : tensor<768xbf16>
    %7953 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7954 = stablehlo.multiply %7953, %arg105 : tensor<768x768xbf16>
    %7955 = stablehlo.add %7061, %7954 : tensor<768x768xbf16>
    %7956 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7957 = stablehlo.multiply %7956, %arg106 : tensor<768xbf16>
    %7958 = stablehlo.add %7067, %7957 : tensor<768xbf16>
    %7959 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7960 = stablehlo.multiply %7959, %arg107 : tensor<768x768xbf16>
    %7961 = stablehlo.add %7073, %7960 : tensor<768x768xbf16>
    %7962 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7963 = stablehlo.multiply %7962, %arg108 : tensor<768xbf16>
    %7964 = stablehlo.add %7079, %7963 : tensor<768xbf16>
    %7965 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7966 = stablehlo.multiply %7965, %arg109 : tensor<768xbf16>
    %7967 = stablehlo.add %7085, %7966 : tensor<768xbf16>
    %7968 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7969 = stablehlo.multiply %7968, %arg110 : tensor<768xbf16>
    %7970 = stablehlo.add %7091, %7969 : tensor<768xbf16>
    %7971 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %7972 = stablehlo.multiply %7971, %arg111 : tensor<3072x768xbf16>
    %7973 = stablehlo.add %7097, %7972 : tensor<3072x768xbf16>
    %7974 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %7975 = stablehlo.multiply %7974, %arg112 : tensor<3072xbf16>
    %7976 = stablehlo.add %7103, %7975 : tensor<3072xbf16>
    %7977 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %7978 = stablehlo.multiply %7977, %arg113 : tensor<768x3072xbf16>
    %7979 = stablehlo.add %7109, %7978 : tensor<768x3072xbf16>
    %7980 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7981 = stablehlo.multiply %7980, %arg114 : tensor<768xbf16>
    %7982 = stablehlo.add %7115, %7981 : tensor<768xbf16>
    %7983 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7984 = stablehlo.multiply %7983, %arg115 : tensor<768xbf16>
    %7985 = stablehlo.add %7121, %7984 : tensor<768xbf16>
    %7986 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7987 = stablehlo.multiply %7986, %arg116 : tensor<768xbf16>
    %7988 = stablehlo.add %7127, %7987 : tensor<768xbf16>
    %7989 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7990 = stablehlo.multiply %7989, %arg117 : tensor<768x768xbf16>
    %7991 = stablehlo.add %7133, %7990 : tensor<768x768xbf16>
    %7992 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7993 = stablehlo.multiply %7992, %arg118 : tensor<768xbf16>
    %7994 = stablehlo.add %7139, %7993 : tensor<768xbf16>
    %7995 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %7996 = stablehlo.multiply %7995, %arg119 : tensor<768x768xbf16>
    %7997 = stablehlo.add %7145, %7996 : tensor<768x768xbf16>
    %7998 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %7999 = stablehlo.multiply %7998, %arg120 : tensor<768xbf16>
    %8000 = stablehlo.add %7151, %7999 : tensor<768xbf16>
    %8001 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8002 = stablehlo.multiply %8001, %arg121 : tensor<768x768xbf16>
    %8003 = stablehlo.add %7157, %8002 : tensor<768x768xbf16>
    %8004 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8005 = stablehlo.multiply %8004, %arg122 : tensor<768xbf16>
    %8006 = stablehlo.add %7163, %8005 : tensor<768xbf16>
    %8007 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8008 = stablehlo.multiply %8007, %arg123 : tensor<768x768xbf16>
    %8009 = stablehlo.add %7169, %8008 : tensor<768x768xbf16>
    %8010 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8011 = stablehlo.multiply %8010, %arg124 : tensor<768xbf16>
    %8012 = stablehlo.add %7175, %8011 : tensor<768xbf16>
    %8013 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8014 = stablehlo.multiply %8013, %arg125 : tensor<768xbf16>
    %8015 = stablehlo.add %7181, %8014 : tensor<768xbf16>
    %8016 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8017 = stablehlo.multiply %8016, %arg126 : tensor<768xbf16>
    %8018 = stablehlo.add %7187, %8017 : tensor<768xbf16>
    %8019 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8020 = stablehlo.multiply %8019, %arg127 : tensor<3072x768xbf16>
    %8021 = stablehlo.add %7193, %8020 : tensor<3072x768xbf16>
    %8022 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8023 = stablehlo.multiply %8022, %arg128 : tensor<3072xbf16>
    %8024 = stablehlo.add %7199, %8023 : tensor<3072xbf16>
    %8025 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8026 = stablehlo.multiply %8025, %arg129 : tensor<768x3072xbf16>
    %8027 = stablehlo.add %7205, %8026 : tensor<768x3072xbf16>
    %8028 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8029 = stablehlo.multiply %8028, %arg130 : tensor<768xbf16>
    %8030 = stablehlo.add %7211, %8029 : tensor<768xbf16>
    %8031 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8032 = stablehlo.multiply %8031, %arg131 : tensor<768xbf16>
    %8033 = stablehlo.add %7217, %8032 : tensor<768xbf16>
    %8034 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8035 = stablehlo.multiply %8034, %arg132 : tensor<768xbf16>
    %8036 = stablehlo.add %7223, %8035 : tensor<768xbf16>
    %8037 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8038 = stablehlo.multiply %8037, %arg133 : tensor<768x768xbf16>
    %8039 = stablehlo.add %7229, %8038 : tensor<768x768xbf16>
    %8040 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8041 = stablehlo.multiply %8040, %arg134 : tensor<768xbf16>
    %8042 = stablehlo.add %7235, %8041 : tensor<768xbf16>
    %8043 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8044 = stablehlo.multiply %8043, %arg135 : tensor<768x768xbf16>
    %8045 = stablehlo.add %7241, %8044 : tensor<768x768xbf16>
    %8046 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8047 = stablehlo.multiply %8046, %arg136 : tensor<768xbf16>
    %8048 = stablehlo.add %7247, %8047 : tensor<768xbf16>
    %8049 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8050 = stablehlo.multiply %8049, %arg137 : tensor<768x768xbf16>
    %8051 = stablehlo.add %7253, %8050 : tensor<768x768xbf16>
    %8052 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8053 = stablehlo.multiply %8052, %arg138 : tensor<768xbf16>
    %8054 = stablehlo.add %7259, %8053 : tensor<768xbf16>
    %8055 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8056 = stablehlo.multiply %8055, %arg139 : tensor<768x768xbf16>
    %8057 = stablehlo.add %7265, %8056 : tensor<768x768xbf16>
    %8058 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8059 = stablehlo.multiply %8058, %arg140 : tensor<768xbf16>
    %8060 = stablehlo.add %7271, %8059 : tensor<768xbf16>
    %8061 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8062 = stablehlo.multiply %8061, %arg141 : tensor<768xbf16>
    %8063 = stablehlo.add %7277, %8062 : tensor<768xbf16>
    %8064 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8065 = stablehlo.multiply %8064, %arg142 : tensor<768xbf16>
    %8066 = stablehlo.add %7283, %8065 : tensor<768xbf16>
    %8067 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8068 = stablehlo.multiply %8067, %arg143 : tensor<3072x768xbf16>
    %8069 = stablehlo.add %7289, %8068 : tensor<3072x768xbf16>
    %8070 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8071 = stablehlo.multiply %8070, %arg144 : tensor<3072xbf16>
    %8072 = stablehlo.add %7295, %8071 : tensor<3072xbf16>
    %8073 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8074 = stablehlo.multiply %8073, %arg145 : tensor<768x3072xbf16>
    %8075 = stablehlo.add %7301, %8074 : tensor<768x3072xbf16>
    %8076 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8077 = stablehlo.multiply %8076, %arg146 : tensor<768xbf16>
    %8078 = stablehlo.add %7307, %8077 : tensor<768xbf16>
    %8079 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8080 = stablehlo.multiply %8079, %arg147 : tensor<768xbf16>
    %8081 = stablehlo.add %7313, %8080 : tensor<768xbf16>
    %8082 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8083 = stablehlo.multiply %8082, %arg148 : tensor<768xbf16>
    %8084 = stablehlo.add %7319, %8083 : tensor<768xbf16>
    %8085 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8086 = stablehlo.multiply %8085, %arg149 : tensor<768x768xbf16>
    %8087 = stablehlo.add %7325, %8086 : tensor<768x768xbf16>
    %8088 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8089 = stablehlo.multiply %8088, %arg150 : tensor<768xbf16>
    %8090 = stablehlo.add %7331, %8089 : tensor<768xbf16>
    %8091 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8092 = stablehlo.multiply %8091, %arg151 : tensor<768x768xbf16>
    %8093 = stablehlo.add %7337, %8092 : tensor<768x768xbf16>
    %8094 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8095 = stablehlo.multiply %8094, %arg152 : tensor<768xbf16>
    %8096 = stablehlo.add %7343, %8095 : tensor<768xbf16>
    %8097 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8098 = stablehlo.multiply %8097, %arg153 : tensor<768x768xbf16>
    %8099 = stablehlo.add %7349, %8098 : tensor<768x768xbf16>
    %8100 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8101 = stablehlo.multiply %8100, %arg154 : tensor<768xbf16>
    %8102 = stablehlo.add %7355, %8101 : tensor<768xbf16>
    %8103 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8104 = stablehlo.multiply %8103, %arg155 : tensor<768x768xbf16>
    %8105 = stablehlo.add %7361, %8104 : tensor<768x768xbf16>
    %8106 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8107 = stablehlo.multiply %8106, %arg156 : tensor<768xbf16>
    %8108 = stablehlo.add %7367, %8107 : tensor<768xbf16>
    %8109 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8110 = stablehlo.multiply %8109, %arg157 : tensor<768xbf16>
    %8111 = stablehlo.add %7373, %8110 : tensor<768xbf16>
    %8112 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8113 = stablehlo.multiply %8112, %arg158 : tensor<768xbf16>
    %8114 = stablehlo.add %7379, %8113 : tensor<768xbf16>
    %8115 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8116 = stablehlo.multiply %8115, %arg159 : tensor<3072x768xbf16>
    %8117 = stablehlo.add %7385, %8116 : tensor<3072x768xbf16>
    %8118 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8119 = stablehlo.multiply %8118, %arg160 : tensor<3072xbf16>
    %8120 = stablehlo.add %7391, %8119 : tensor<3072xbf16>
    %8121 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8122 = stablehlo.multiply %8121, %arg161 : tensor<768x3072xbf16>
    %8123 = stablehlo.add %7397, %8122 : tensor<768x3072xbf16>
    %8124 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8125 = stablehlo.multiply %8124, %arg162 : tensor<768xbf16>
    %8126 = stablehlo.add %7403, %8125 : tensor<768xbf16>
    %8127 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8128 = stablehlo.multiply %8127, %arg163 : tensor<768xbf16>
    %8129 = stablehlo.add %7409, %8128 : tensor<768xbf16>
    %8130 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8131 = stablehlo.multiply %8130, %arg164 : tensor<768xbf16>
    %8132 = stablehlo.add %7415, %8131 : tensor<768xbf16>
    %8133 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8134 = stablehlo.multiply %8133, %arg165 : tensor<768x768xbf16>
    %8135 = stablehlo.add %7421, %8134 : tensor<768x768xbf16>
    %8136 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8137 = stablehlo.multiply %8136, %arg166 : tensor<768xbf16>
    %8138 = stablehlo.add %7427, %8137 : tensor<768xbf16>
    %8139 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8140 = stablehlo.multiply %8139, %arg167 : tensor<768x768xbf16>
    %8141 = stablehlo.add %7433, %8140 : tensor<768x768xbf16>
    %8142 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8143 = stablehlo.multiply %8142, %arg168 : tensor<768xbf16>
    %8144 = stablehlo.add %7439, %8143 : tensor<768xbf16>
    %8145 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8146 = stablehlo.multiply %8145, %arg169 : tensor<768x768xbf16>
    %8147 = stablehlo.add %7445, %8146 : tensor<768x768xbf16>
    %8148 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8149 = stablehlo.multiply %8148, %arg170 : tensor<768xbf16>
    %8150 = stablehlo.add %7451, %8149 : tensor<768xbf16>
    %8151 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8152 = stablehlo.multiply %8151, %arg171 : tensor<768x768xbf16>
    %8153 = stablehlo.add %7457, %8152 : tensor<768x768xbf16>
    %8154 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8155 = stablehlo.multiply %8154, %arg172 : tensor<768xbf16>
    %8156 = stablehlo.add %7463, %8155 : tensor<768xbf16>
    %8157 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8158 = stablehlo.multiply %8157, %arg173 : tensor<768xbf16>
    %8159 = stablehlo.add %7469, %8158 : tensor<768xbf16>
    %8160 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8161 = stablehlo.multiply %8160, %arg174 : tensor<768xbf16>
    %8162 = stablehlo.add %7475, %8161 : tensor<768xbf16>
    %8163 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8164 = stablehlo.multiply %8163, %arg175 : tensor<3072x768xbf16>
    %8165 = stablehlo.add %7481, %8164 : tensor<3072x768xbf16>
    %8166 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8167 = stablehlo.multiply %8166, %arg176 : tensor<3072xbf16>
    %8168 = stablehlo.add %7487, %8167 : tensor<3072xbf16>
    %8169 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8170 = stablehlo.multiply %8169, %arg177 : tensor<768x3072xbf16>
    %8171 = stablehlo.add %7493, %8170 : tensor<768x3072xbf16>
    %8172 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8173 = stablehlo.multiply %8172, %arg178 : tensor<768xbf16>
    %8174 = stablehlo.add %7499, %8173 : tensor<768xbf16>
    %8175 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8176 = stablehlo.multiply %8175, %arg179 : tensor<768xbf16>
    %8177 = stablehlo.add %7505, %8176 : tensor<768xbf16>
    %8178 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8179 = stablehlo.multiply %8178, %arg180 : tensor<768xbf16>
    %8180 = stablehlo.add %7511, %8179 : tensor<768xbf16>
    %8181 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8182 = stablehlo.multiply %8181, %arg181 : tensor<768x768xbf16>
    %8183 = stablehlo.add %7517, %8182 : tensor<768x768xbf16>
    %8184 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8185 = stablehlo.multiply %8184, %arg182 : tensor<768xbf16>
    %8186 = stablehlo.add %7523, %8185 : tensor<768xbf16>
    %8187 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8188 = stablehlo.multiply %8187, %arg183 : tensor<768x768xbf16>
    %8189 = stablehlo.add %7529, %8188 : tensor<768x768xbf16>
    %8190 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8191 = stablehlo.multiply %8190, %arg184 : tensor<768xbf16>
    %8192 = stablehlo.add %7535, %8191 : tensor<768xbf16>
    %8193 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8194 = stablehlo.multiply %8193, %arg185 : tensor<768x768xbf16>
    %8195 = stablehlo.add %7541, %8194 : tensor<768x768xbf16>
    %8196 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8197 = stablehlo.multiply %8196, %arg186 : tensor<768xbf16>
    %8198 = stablehlo.add %7547, %8197 : tensor<768xbf16>
    %8199 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8200 = stablehlo.multiply %8199, %arg187 : tensor<768x768xbf16>
    %8201 = stablehlo.add %7553, %8200 : tensor<768x768xbf16>
    %8202 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8203 = stablehlo.multiply %8202, %arg188 : tensor<768xbf16>
    %8204 = stablehlo.add %7559, %8203 : tensor<768xbf16>
    %8205 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8206 = stablehlo.multiply %8205, %arg189 : tensor<768xbf16>
    %8207 = stablehlo.add %7565, %8206 : tensor<768xbf16>
    %8208 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8209 = stablehlo.multiply %8208, %arg190 : tensor<768xbf16>
    %8210 = stablehlo.add %7571, %8209 : tensor<768xbf16>
    %8211 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8212 = stablehlo.multiply %8211, %arg191 : tensor<3072x768xbf16>
    %8213 = stablehlo.add %7577, %8212 : tensor<3072x768xbf16>
    %8214 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8215 = stablehlo.multiply %8214, %arg192 : tensor<3072xbf16>
    %8216 = stablehlo.add %7583, %8215 : tensor<3072xbf16>
    %8217 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8218 = stablehlo.multiply %8217, %arg193 : tensor<768x3072xbf16>
    %8219 = stablehlo.add %7589, %8218 : tensor<768x3072xbf16>
    %8220 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8221 = stablehlo.multiply %8220, %arg194 : tensor<768xbf16>
    %8222 = stablehlo.add %7595, %8221 : tensor<768xbf16>
    %8223 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8224 = stablehlo.multiply %8223, %arg195 : tensor<768xbf16>
    %8225 = stablehlo.add %7601, %8224 : tensor<768xbf16>
    %8226 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8227 = stablehlo.multiply %8226, %arg196 : tensor<768xbf16>
    %8228 = stablehlo.add %7607, %8227 : tensor<768xbf16>
    %8229 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8230 = stablehlo.multiply %8229, %arg197 : tensor<768x768xbf16>
    %8231 = stablehlo.add %7613, %8230 : tensor<768x768xbf16>
    %8232 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8233 = stablehlo.multiply %8232, %arg198 : tensor<768xbf16>
    %8234 = stablehlo.add %7619, %8233 : tensor<768xbf16>
    %8235 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8236 = stablehlo.multiply %8235, %arg199 : tensor<768xbf16>
    %8237 = stablehlo.add %7625, %8236 : tensor<768xbf16>
    %8238 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8239 = stablehlo.multiply %8238, %arg200 : tensor<768xbf16>
    %8240 = stablehlo.add %7631, %8239 : tensor<768xbf16>
    %8241 = stablehlo.broadcast_in_dim %cst_505, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %8242 = stablehlo.multiply %8241, %arg201 : tensor<30522xbf16>
    %8243 = stablehlo.add %7637, %8242 : tensor<30522xbf16>
    %8244 = stablehlo.subtract %arg607, %c : tensor<i32>
    %c_506 = stablehlo.constant dense<1000> : tensor<i32>
    %8245 = call @clip(%8244, %c_4, %c_506) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %8246 = stablehlo.convert %8245 : (tensor<i32>) -> tensor<f32>
    %cst_507 = stablehlo.constant dense<1.000000e+03> : tensor<f32>
    %8247 = stablehlo.divide %8246, %cst_507 : tensor<f32>
    %8248 = stablehlo.subtract %cst_68, %8247 : tensor<f32>
    %cst_508 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %8249 = stablehlo.multiply %cst_508, %8248 : tensor<f32>
    %cst_509 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %8250 = stablehlo.add %8249, %cst_509 : tensor<f32>
    %c_510 = stablehlo.constant dense<1000> : tensor<i32>
    %8251 = stablehlo.compare  LT, %arg607, %c_510,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %8252 = stablehlo.subtract %arg607, %c_510 : tensor<i32>
    %8253 = stablehlo.convert %8252 : (tensor<i32>) -> tensor<f32>
    %cst_511 = stablehlo.constant dense<9.000000e+03> : tensor<f32>
    %8254 = stablehlo.minimum %8253, %cst_511 : tensor<f32>
    %cst_512 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %8255 = stablehlo.multiply %cst_512, %8254 : tensor<f32>
    %8256 = stablehlo.divide %8255, %cst_511 : tensor<f32>
    %8257 = stablehlo.cosine %8256 : tensor<f32>
    %8258 = stablehlo.add %cst_11, %8257 : tensor<f32>
    %cst_513 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %8259 = stablehlo.multiply %cst_513, %8258 : tensor<f32>
    %8260 = stablehlo.power %8259, %cst_11 : tensor<f32>
    %8261 = stablehlo.multiply %cst_11, %8260 : tensor<f32>
    %8262 = stablehlo.add %8261, %cst_64 : tensor<f32>
    %cst_514 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %8263 = stablehlo.multiply %cst_514, %8262 : tensor<f32>
    %8264 = call @_where_484(%8251, %8250, %8263) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_515 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %8265 = stablehlo.multiply %cst_515, %8264 : tensor<f32>
    %8266 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8267 = stablehlo.broadcast_in_dim %8266, dims = [] : (tensor<bf16>) -> tensor<30522x768xbf16>
    %8268 = stablehlo.multiply %8267, %7640 : tensor<30522x768xbf16>
    %8269 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8270 = stablehlo.broadcast_in_dim %8269, dims = [] : (tensor<bf16>) -> tensor<512x768xbf16>
    %8271 = stablehlo.multiply %8270, %7643 : tensor<512x768xbf16>
    %8272 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8273 = stablehlo.broadcast_in_dim %8272, dims = [] : (tensor<bf16>) -> tensor<2x768xbf16>
    %8274 = stablehlo.multiply %8273, %7646 : tensor<2x768xbf16>
    %8275 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8276 = stablehlo.broadcast_in_dim %8275, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8277 = stablehlo.multiply %8276, %7649 : tensor<768xbf16>
    %8278 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8279 = stablehlo.broadcast_in_dim %8278, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8280 = stablehlo.multiply %8279, %7652 : tensor<768xbf16>
    %8281 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8282 = stablehlo.broadcast_in_dim %8281, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8283 = stablehlo.multiply %8282, %7655 : tensor<768x768xbf16>
    %8284 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8285 = stablehlo.broadcast_in_dim %8284, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8286 = stablehlo.multiply %8285, %7658 : tensor<768xbf16>
    %8287 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8288 = stablehlo.broadcast_in_dim %8287, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8289 = stablehlo.multiply %8288, %7661 : tensor<768x768xbf16>
    %8290 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8291 = stablehlo.broadcast_in_dim %8290, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8292 = stablehlo.multiply %8291, %7664 : tensor<768xbf16>
    %8293 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8294 = stablehlo.broadcast_in_dim %8293, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8295 = stablehlo.multiply %8294, %7667 : tensor<768x768xbf16>
    %8296 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8297 = stablehlo.broadcast_in_dim %8296, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8298 = stablehlo.multiply %8297, %7670 : tensor<768xbf16>
    %8299 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8300 = stablehlo.broadcast_in_dim %8299, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8301 = stablehlo.multiply %8300, %7673 : tensor<768x768xbf16>
    %8302 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8303 = stablehlo.broadcast_in_dim %8302, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8304 = stablehlo.multiply %8303, %7676 : tensor<768xbf16>
    %8305 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8306 = stablehlo.broadcast_in_dim %8305, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8307 = stablehlo.multiply %8306, %7679 : tensor<768xbf16>
    %8308 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8309 = stablehlo.broadcast_in_dim %8308, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8310 = stablehlo.multiply %8309, %7682 : tensor<768xbf16>
    %8311 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8312 = stablehlo.broadcast_in_dim %8311, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8313 = stablehlo.multiply %8312, %7685 : tensor<3072x768xbf16>
    %8314 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8315 = stablehlo.broadcast_in_dim %8314, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8316 = stablehlo.multiply %8315, %7688 : tensor<3072xbf16>
    %8317 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8318 = stablehlo.broadcast_in_dim %8317, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8319 = stablehlo.multiply %8318, %7691 : tensor<768x3072xbf16>
    %8320 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8321 = stablehlo.broadcast_in_dim %8320, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8322 = stablehlo.multiply %8321, %7694 : tensor<768xbf16>
    %8323 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8324 = stablehlo.broadcast_in_dim %8323, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8325 = stablehlo.multiply %8324, %7697 : tensor<768xbf16>
    %8326 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8327 = stablehlo.broadcast_in_dim %8326, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8328 = stablehlo.multiply %8327, %7700 : tensor<768xbf16>
    %8329 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8330 = stablehlo.broadcast_in_dim %8329, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8331 = stablehlo.multiply %8330, %7703 : tensor<768x768xbf16>
    %8332 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8333 = stablehlo.broadcast_in_dim %8332, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8334 = stablehlo.multiply %8333, %7706 : tensor<768xbf16>
    %8335 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8336 = stablehlo.broadcast_in_dim %8335, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8337 = stablehlo.multiply %8336, %7709 : tensor<768x768xbf16>
    %8338 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8339 = stablehlo.broadcast_in_dim %8338, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8340 = stablehlo.multiply %8339, %7712 : tensor<768xbf16>
    %8341 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8342 = stablehlo.broadcast_in_dim %8341, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8343 = stablehlo.multiply %8342, %7715 : tensor<768x768xbf16>
    %8344 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8345 = stablehlo.broadcast_in_dim %8344, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8346 = stablehlo.multiply %8345, %7718 : tensor<768xbf16>
    %8347 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8348 = stablehlo.broadcast_in_dim %8347, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8349 = stablehlo.multiply %8348, %7721 : tensor<768x768xbf16>
    %8350 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8351 = stablehlo.broadcast_in_dim %8350, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8352 = stablehlo.multiply %8351, %7724 : tensor<768xbf16>
    %8353 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8354 = stablehlo.broadcast_in_dim %8353, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8355 = stablehlo.multiply %8354, %7727 : tensor<768xbf16>
    %8356 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8357 = stablehlo.broadcast_in_dim %8356, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8358 = stablehlo.multiply %8357, %7730 : tensor<768xbf16>
    %8359 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8360 = stablehlo.broadcast_in_dim %8359, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8361 = stablehlo.multiply %8360, %7733 : tensor<3072x768xbf16>
    %8362 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8363 = stablehlo.broadcast_in_dim %8362, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8364 = stablehlo.multiply %8363, %7736 : tensor<3072xbf16>
    %8365 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8366 = stablehlo.broadcast_in_dim %8365, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8367 = stablehlo.multiply %8366, %7739 : tensor<768x3072xbf16>
    %8368 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8369 = stablehlo.broadcast_in_dim %8368, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8370 = stablehlo.multiply %8369, %7742 : tensor<768xbf16>
    %8371 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8372 = stablehlo.broadcast_in_dim %8371, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8373 = stablehlo.multiply %8372, %7745 : tensor<768xbf16>
    %8374 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8375 = stablehlo.broadcast_in_dim %8374, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8376 = stablehlo.multiply %8375, %7748 : tensor<768xbf16>
    %8377 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8378 = stablehlo.broadcast_in_dim %8377, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8379 = stablehlo.multiply %8378, %7751 : tensor<768x768xbf16>
    %8380 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8381 = stablehlo.broadcast_in_dim %8380, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8382 = stablehlo.multiply %8381, %7754 : tensor<768xbf16>
    %8383 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8384 = stablehlo.broadcast_in_dim %8383, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8385 = stablehlo.multiply %8384, %7757 : tensor<768x768xbf16>
    %8386 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8387 = stablehlo.broadcast_in_dim %8386, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8388 = stablehlo.multiply %8387, %7760 : tensor<768xbf16>
    %8389 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8390 = stablehlo.broadcast_in_dim %8389, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8391 = stablehlo.multiply %8390, %7763 : tensor<768x768xbf16>
    %8392 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8393 = stablehlo.broadcast_in_dim %8392, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8394 = stablehlo.multiply %8393, %7766 : tensor<768xbf16>
    %8395 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8396 = stablehlo.broadcast_in_dim %8395, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8397 = stablehlo.multiply %8396, %7769 : tensor<768x768xbf16>
    %8398 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8399 = stablehlo.broadcast_in_dim %8398, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8400 = stablehlo.multiply %8399, %7772 : tensor<768xbf16>
    %8401 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8402 = stablehlo.broadcast_in_dim %8401, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8403 = stablehlo.multiply %8402, %7775 : tensor<768xbf16>
    %8404 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8405 = stablehlo.broadcast_in_dim %8404, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8406 = stablehlo.multiply %8405, %7778 : tensor<768xbf16>
    %8407 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8408 = stablehlo.broadcast_in_dim %8407, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8409 = stablehlo.multiply %8408, %7781 : tensor<3072x768xbf16>
    %8410 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8411 = stablehlo.broadcast_in_dim %8410, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8412 = stablehlo.multiply %8411, %7784 : tensor<3072xbf16>
    %8413 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8414 = stablehlo.broadcast_in_dim %8413, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8415 = stablehlo.multiply %8414, %7787 : tensor<768x3072xbf16>
    %8416 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8417 = stablehlo.broadcast_in_dim %8416, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8418 = stablehlo.multiply %8417, %7790 : tensor<768xbf16>
    %8419 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8420 = stablehlo.broadcast_in_dim %8419, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8421 = stablehlo.multiply %8420, %7793 : tensor<768xbf16>
    %8422 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8423 = stablehlo.broadcast_in_dim %8422, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8424 = stablehlo.multiply %8423, %7796 : tensor<768xbf16>
    %8425 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8426 = stablehlo.broadcast_in_dim %8425, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8427 = stablehlo.multiply %8426, %7799 : tensor<768x768xbf16>
    %8428 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8429 = stablehlo.broadcast_in_dim %8428, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8430 = stablehlo.multiply %8429, %7802 : tensor<768xbf16>
    %8431 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8432 = stablehlo.broadcast_in_dim %8431, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8433 = stablehlo.multiply %8432, %7805 : tensor<768x768xbf16>
    %8434 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8435 = stablehlo.broadcast_in_dim %8434, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8436 = stablehlo.multiply %8435, %7808 : tensor<768xbf16>
    %8437 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8438 = stablehlo.broadcast_in_dim %8437, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8439 = stablehlo.multiply %8438, %7811 : tensor<768x768xbf16>
    %8440 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8441 = stablehlo.broadcast_in_dim %8440, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8442 = stablehlo.multiply %8441, %7814 : tensor<768xbf16>
    %8443 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8444 = stablehlo.broadcast_in_dim %8443, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8445 = stablehlo.multiply %8444, %7817 : tensor<768x768xbf16>
    %8446 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8447 = stablehlo.broadcast_in_dim %8446, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8448 = stablehlo.multiply %8447, %7820 : tensor<768xbf16>
    %8449 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8450 = stablehlo.broadcast_in_dim %8449, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8451 = stablehlo.multiply %8450, %7823 : tensor<768xbf16>
    %8452 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8453 = stablehlo.broadcast_in_dim %8452, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8454 = stablehlo.multiply %8453, %7826 : tensor<768xbf16>
    %8455 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8456 = stablehlo.broadcast_in_dim %8455, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8457 = stablehlo.multiply %8456, %7829 : tensor<3072x768xbf16>
    %8458 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8459 = stablehlo.broadcast_in_dim %8458, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8460 = stablehlo.multiply %8459, %7832 : tensor<3072xbf16>
    %8461 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8462 = stablehlo.broadcast_in_dim %8461, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8463 = stablehlo.multiply %8462, %7835 : tensor<768x3072xbf16>
    %8464 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8465 = stablehlo.broadcast_in_dim %8464, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8466 = stablehlo.multiply %8465, %7838 : tensor<768xbf16>
    %8467 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8468 = stablehlo.broadcast_in_dim %8467, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8469 = stablehlo.multiply %8468, %7841 : tensor<768xbf16>
    %8470 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8471 = stablehlo.broadcast_in_dim %8470, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8472 = stablehlo.multiply %8471, %7844 : tensor<768xbf16>
    %8473 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8474 = stablehlo.broadcast_in_dim %8473, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8475 = stablehlo.multiply %8474, %7847 : tensor<768x768xbf16>
    %8476 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8477 = stablehlo.broadcast_in_dim %8476, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8478 = stablehlo.multiply %8477, %7850 : tensor<768xbf16>
    %8479 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8480 = stablehlo.broadcast_in_dim %8479, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8481 = stablehlo.multiply %8480, %7853 : tensor<768x768xbf16>
    %8482 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8483 = stablehlo.broadcast_in_dim %8482, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8484 = stablehlo.multiply %8483, %7856 : tensor<768xbf16>
    %8485 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8486 = stablehlo.broadcast_in_dim %8485, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8487 = stablehlo.multiply %8486, %7859 : tensor<768x768xbf16>
    %8488 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8489 = stablehlo.broadcast_in_dim %8488, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8490 = stablehlo.multiply %8489, %7862 : tensor<768xbf16>
    %8491 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8492 = stablehlo.broadcast_in_dim %8491, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8493 = stablehlo.multiply %8492, %7865 : tensor<768x768xbf16>
    %8494 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8495 = stablehlo.broadcast_in_dim %8494, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8496 = stablehlo.multiply %8495, %7868 : tensor<768xbf16>
    %8497 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8498 = stablehlo.broadcast_in_dim %8497, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8499 = stablehlo.multiply %8498, %7871 : tensor<768xbf16>
    %8500 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8501 = stablehlo.broadcast_in_dim %8500, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8502 = stablehlo.multiply %8501, %7874 : tensor<768xbf16>
    %8503 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8504 = stablehlo.broadcast_in_dim %8503, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8505 = stablehlo.multiply %8504, %7877 : tensor<3072x768xbf16>
    %8506 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8507 = stablehlo.broadcast_in_dim %8506, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8508 = stablehlo.multiply %8507, %7880 : tensor<3072xbf16>
    %8509 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8510 = stablehlo.broadcast_in_dim %8509, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8511 = stablehlo.multiply %8510, %7883 : tensor<768x3072xbf16>
    %8512 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8513 = stablehlo.broadcast_in_dim %8512, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8514 = stablehlo.multiply %8513, %7886 : tensor<768xbf16>
    %8515 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8516 = stablehlo.broadcast_in_dim %8515, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8517 = stablehlo.multiply %8516, %7889 : tensor<768xbf16>
    %8518 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8519 = stablehlo.broadcast_in_dim %8518, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8520 = stablehlo.multiply %8519, %7892 : tensor<768xbf16>
    %8521 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8522 = stablehlo.broadcast_in_dim %8521, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8523 = stablehlo.multiply %8522, %7895 : tensor<768x768xbf16>
    %8524 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8525 = stablehlo.broadcast_in_dim %8524, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8526 = stablehlo.multiply %8525, %7898 : tensor<768xbf16>
    %8527 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8528 = stablehlo.broadcast_in_dim %8527, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8529 = stablehlo.multiply %8528, %7901 : tensor<768x768xbf16>
    %8530 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8531 = stablehlo.broadcast_in_dim %8530, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8532 = stablehlo.multiply %8531, %7904 : tensor<768xbf16>
    %8533 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8534 = stablehlo.broadcast_in_dim %8533, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8535 = stablehlo.multiply %8534, %7907 : tensor<768x768xbf16>
    %8536 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8537 = stablehlo.broadcast_in_dim %8536, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8538 = stablehlo.multiply %8537, %7910 : tensor<768xbf16>
    %8539 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8540 = stablehlo.broadcast_in_dim %8539, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8541 = stablehlo.multiply %8540, %7913 : tensor<768x768xbf16>
    %8542 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8543 = stablehlo.broadcast_in_dim %8542, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8544 = stablehlo.multiply %8543, %7916 : tensor<768xbf16>
    %8545 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8546 = stablehlo.broadcast_in_dim %8545, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8547 = stablehlo.multiply %8546, %7919 : tensor<768xbf16>
    %8548 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8549 = stablehlo.broadcast_in_dim %8548, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8550 = stablehlo.multiply %8549, %7922 : tensor<768xbf16>
    %8551 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8552 = stablehlo.broadcast_in_dim %8551, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8553 = stablehlo.multiply %8552, %7925 : tensor<3072x768xbf16>
    %8554 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8555 = stablehlo.broadcast_in_dim %8554, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8556 = stablehlo.multiply %8555, %7928 : tensor<3072xbf16>
    %8557 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8558 = stablehlo.broadcast_in_dim %8557, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8559 = stablehlo.multiply %8558, %7931 : tensor<768x3072xbf16>
    %8560 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8561 = stablehlo.broadcast_in_dim %8560, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8562 = stablehlo.multiply %8561, %7934 : tensor<768xbf16>
    %8563 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8564 = stablehlo.broadcast_in_dim %8563, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8565 = stablehlo.multiply %8564, %7937 : tensor<768xbf16>
    %8566 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8567 = stablehlo.broadcast_in_dim %8566, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8568 = stablehlo.multiply %8567, %7940 : tensor<768xbf16>
    %8569 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8570 = stablehlo.broadcast_in_dim %8569, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8571 = stablehlo.multiply %8570, %7943 : tensor<768x768xbf16>
    %8572 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8573 = stablehlo.broadcast_in_dim %8572, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8574 = stablehlo.multiply %8573, %7946 : tensor<768xbf16>
    %8575 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8576 = stablehlo.broadcast_in_dim %8575, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8577 = stablehlo.multiply %8576, %7949 : tensor<768x768xbf16>
    %8578 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8579 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8580 = stablehlo.multiply %8579, %7952 : tensor<768xbf16>
    %8581 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8582 = stablehlo.broadcast_in_dim %8581, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8583 = stablehlo.multiply %8582, %7955 : tensor<768x768xbf16>
    %8584 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8585 = stablehlo.broadcast_in_dim %8584, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8586 = stablehlo.multiply %8585, %7958 : tensor<768xbf16>
    %8587 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8588 = stablehlo.broadcast_in_dim %8587, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8589 = stablehlo.multiply %8588, %7961 : tensor<768x768xbf16>
    %8590 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8591 = stablehlo.broadcast_in_dim %8590, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8592 = stablehlo.multiply %8591, %7964 : tensor<768xbf16>
    %8593 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8594 = stablehlo.broadcast_in_dim %8593, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8595 = stablehlo.multiply %8594, %7967 : tensor<768xbf16>
    %8596 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8597 = stablehlo.broadcast_in_dim %8596, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8598 = stablehlo.multiply %8597, %7970 : tensor<768xbf16>
    %8599 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8600 = stablehlo.broadcast_in_dim %8599, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8601 = stablehlo.multiply %8600, %7973 : tensor<3072x768xbf16>
    %8602 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8603 = stablehlo.broadcast_in_dim %8602, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8604 = stablehlo.multiply %8603, %7976 : tensor<3072xbf16>
    %8605 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8606 = stablehlo.broadcast_in_dim %8605, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8607 = stablehlo.multiply %8606, %7979 : tensor<768x3072xbf16>
    %8608 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8609 = stablehlo.broadcast_in_dim %8608, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8610 = stablehlo.multiply %8609, %7982 : tensor<768xbf16>
    %8611 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8612 = stablehlo.broadcast_in_dim %8611, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8613 = stablehlo.multiply %8612, %7985 : tensor<768xbf16>
    %8614 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8615 = stablehlo.broadcast_in_dim %8614, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8616 = stablehlo.multiply %8615, %7988 : tensor<768xbf16>
    %8617 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8618 = stablehlo.broadcast_in_dim %8617, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8619 = stablehlo.multiply %8618, %7991 : tensor<768x768xbf16>
    %8620 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8621 = stablehlo.broadcast_in_dim %8620, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8622 = stablehlo.multiply %8621, %7994 : tensor<768xbf16>
    %8623 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8624 = stablehlo.broadcast_in_dim %8623, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8625 = stablehlo.multiply %8624, %7997 : tensor<768x768xbf16>
    %8626 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8627 = stablehlo.broadcast_in_dim %8626, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8628 = stablehlo.multiply %8627, %8000 : tensor<768xbf16>
    %8629 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8630 = stablehlo.broadcast_in_dim %8629, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8631 = stablehlo.multiply %8630, %8003 : tensor<768x768xbf16>
    %8632 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8633 = stablehlo.broadcast_in_dim %8632, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8634 = stablehlo.multiply %8633, %8006 : tensor<768xbf16>
    %8635 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8636 = stablehlo.broadcast_in_dim %8635, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8637 = stablehlo.multiply %8636, %8009 : tensor<768x768xbf16>
    %8638 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8639 = stablehlo.broadcast_in_dim %8638, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8640 = stablehlo.multiply %8639, %8012 : tensor<768xbf16>
    %8641 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8642 = stablehlo.broadcast_in_dim %8641, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8643 = stablehlo.multiply %8642, %8015 : tensor<768xbf16>
    %8644 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8645 = stablehlo.broadcast_in_dim %8644, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8646 = stablehlo.multiply %8645, %8018 : tensor<768xbf16>
    %8647 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8648 = stablehlo.broadcast_in_dim %8647, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8649 = stablehlo.multiply %8648, %8021 : tensor<3072x768xbf16>
    %8650 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8651 = stablehlo.broadcast_in_dim %8650, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8652 = stablehlo.multiply %8651, %8024 : tensor<3072xbf16>
    %8653 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8654 = stablehlo.broadcast_in_dim %8653, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8655 = stablehlo.multiply %8654, %8027 : tensor<768x3072xbf16>
    %8656 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8657 = stablehlo.broadcast_in_dim %8656, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8658 = stablehlo.multiply %8657, %8030 : tensor<768xbf16>
    %8659 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8660 = stablehlo.broadcast_in_dim %8659, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8661 = stablehlo.multiply %8660, %8033 : tensor<768xbf16>
    %8662 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8663 = stablehlo.broadcast_in_dim %8662, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8664 = stablehlo.multiply %8663, %8036 : tensor<768xbf16>
    %8665 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8666 = stablehlo.broadcast_in_dim %8665, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8667 = stablehlo.multiply %8666, %8039 : tensor<768x768xbf16>
    %8668 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8669 = stablehlo.broadcast_in_dim %8668, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8670 = stablehlo.multiply %8669, %8042 : tensor<768xbf16>
    %8671 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8672 = stablehlo.broadcast_in_dim %8671, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8673 = stablehlo.multiply %8672, %8045 : tensor<768x768xbf16>
    %8674 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8675 = stablehlo.broadcast_in_dim %8674, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8676 = stablehlo.multiply %8675, %8048 : tensor<768xbf16>
    %8677 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8678 = stablehlo.broadcast_in_dim %8677, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8679 = stablehlo.multiply %8678, %8051 : tensor<768x768xbf16>
    %8680 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8681 = stablehlo.broadcast_in_dim %8680, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8682 = stablehlo.multiply %8681, %8054 : tensor<768xbf16>
    %8683 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8684 = stablehlo.broadcast_in_dim %8683, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8685 = stablehlo.multiply %8684, %8057 : tensor<768x768xbf16>
    %8686 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8687 = stablehlo.broadcast_in_dim %8686, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8688 = stablehlo.multiply %8687, %8060 : tensor<768xbf16>
    %8689 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8690 = stablehlo.broadcast_in_dim %8689, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8691 = stablehlo.multiply %8690, %8063 : tensor<768xbf16>
    %8692 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8693 = stablehlo.broadcast_in_dim %8692, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8694 = stablehlo.multiply %8693, %8066 : tensor<768xbf16>
    %8695 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8696 = stablehlo.broadcast_in_dim %8695, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8697 = stablehlo.multiply %8696, %8069 : tensor<3072x768xbf16>
    %8698 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8699 = stablehlo.broadcast_in_dim %8698, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8700 = stablehlo.multiply %8699, %8072 : tensor<3072xbf16>
    %8701 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8702 = stablehlo.broadcast_in_dim %8701, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8703 = stablehlo.multiply %8702, %8075 : tensor<768x3072xbf16>
    %8704 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8705 = stablehlo.broadcast_in_dim %8704, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8706 = stablehlo.multiply %8705, %8078 : tensor<768xbf16>
    %8707 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8708 = stablehlo.broadcast_in_dim %8707, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8709 = stablehlo.multiply %8708, %8081 : tensor<768xbf16>
    %8710 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8711 = stablehlo.broadcast_in_dim %8710, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8712 = stablehlo.multiply %8711, %8084 : tensor<768xbf16>
    %8713 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8714 = stablehlo.broadcast_in_dim %8713, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8715 = stablehlo.multiply %8714, %8087 : tensor<768x768xbf16>
    %8716 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8717 = stablehlo.broadcast_in_dim %8716, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8718 = stablehlo.multiply %8717, %8090 : tensor<768xbf16>
    %8719 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8720 = stablehlo.broadcast_in_dim %8719, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8721 = stablehlo.multiply %8720, %8093 : tensor<768x768xbf16>
    %8722 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8723 = stablehlo.broadcast_in_dim %8722, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8724 = stablehlo.multiply %8723, %8096 : tensor<768xbf16>
    %8725 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8726 = stablehlo.broadcast_in_dim %8725, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8727 = stablehlo.multiply %8726, %8099 : tensor<768x768xbf16>
    %8728 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8729 = stablehlo.broadcast_in_dim %8728, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8730 = stablehlo.multiply %8729, %8102 : tensor<768xbf16>
    %8731 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8732 = stablehlo.broadcast_in_dim %8731, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8733 = stablehlo.multiply %8732, %8105 : tensor<768x768xbf16>
    %8734 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8735 = stablehlo.broadcast_in_dim %8734, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8736 = stablehlo.multiply %8735, %8108 : tensor<768xbf16>
    %8737 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8738 = stablehlo.broadcast_in_dim %8737, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8739 = stablehlo.multiply %8738, %8111 : tensor<768xbf16>
    %8740 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8741 = stablehlo.broadcast_in_dim %8740, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8742 = stablehlo.multiply %8741, %8114 : tensor<768xbf16>
    %8743 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8744 = stablehlo.broadcast_in_dim %8743, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8745 = stablehlo.multiply %8744, %8117 : tensor<3072x768xbf16>
    %8746 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8747 = stablehlo.broadcast_in_dim %8746, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8748 = stablehlo.multiply %8747, %8120 : tensor<3072xbf16>
    %8749 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8750 = stablehlo.broadcast_in_dim %8749, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8751 = stablehlo.multiply %8750, %8123 : tensor<768x3072xbf16>
    %8752 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8753 = stablehlo.broadcast_in_dim %8752, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8754 = stablehlo.multiply %8753, %8126 : tensor<768xbf16>
    %8755 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8756 = stablehlo.broadcast_in_dim %8755, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8757 = stablehlo.multiply %8756, %8129 : tensor<768xbf16>
    %8758 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8759 = stablehlo.broadcast_in_dim %8758, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8760 = stablehlo.multiply %8759, %8132 : tensor<768xbf16>
    %8761 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8762 = stablehlo.broadcast_in_dim %8761, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8763 = stablehlo.multiply %8762, %8135 : tensor<768x768xbf16>
    %8764 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8765 = stablehlo.broadcast_in_dim %8764, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8766 = stablehlo.multiply %8765, %8138 : tensor<768xbf16>
    %8767 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8768 = stablehlo.broadcast_in_dim %8767, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8769 = stablehlo.multiply %8768, %8141 : tensor<768x768xbf16>
    %8770 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8771 = stablehlo.broadcast_in_dim %8770, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8772 = stablehlo.multiply %8771, %8144 : tensor<768xbf16>
    %8773 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8774 = stablehlo.broadcast_in_dim %8773, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8775 = stablehlo.multiply %8774, %8147 : tensor<768x768xbf16>
    %8776 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8777 = stablehlo.broadcast_in_dim %8776, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8778 = stablehlo.multiply %8777, %8150 : tensor<768xbf16>
    %8779 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8780 = stablehlo.broadcast_in_dim %8779, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8781 = stablehlo.multiply %8780, %8153 : tensor<768x768xbf16>
    %8782 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8783 = stablehlo.broadcast_in_dim %8782, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8784 = stablehlo.multiply %8783, %8156 : tensor<768xbf16>
    %8785 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8786 = stablehlo.broadcast_in_dim %8785, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8787 = stablehlo.multiply %8786, %8159 : tensor<768xbf16>
    %8788 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8789 = stablehlo.broadcast_in_dim %8788, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8790 = stablehlo.multiply %8789, %8162 : tensor<768xbf16>
    %8791 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8792 = stablehlo.broadcast_in_dim %8791, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8793 = stablehlo.multiply %8792, %8165 : tensor<3072x768xbf16>
    %8794 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8795 = stablehlo.broadcast_in_dim %8794, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8796 = stablehlo.multiply %8795, %8168 : tensor<3072xbf16>
    %8797 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8798 = stablehlo.broadcast_in_dim %8797, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8799 = stablehlo.multiply %8798, %8171 : tensor<768x3072xbf16>
    %8800 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8801 = stablehlo.broadcast_in_dim %8800, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8802 = stablehlo.multiply %8801, %8174 : tensor<768xbf16>
    %8803 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8804 = stablehlo.broadcast_in_dim %8803, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8805 = stablehlo.multiply %8804, %8177 : tensor<768xbf16>
    %8806 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8807 = stablehlo.broadcast_in_dim %8806, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8808 = stablehlo.multiply %8807, %8180 : tensor<768xbf16>
    %8809 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8810 = stablehlo.broadcast_in_dim %8809, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8811 = stablehlo.multiply %8810, %8183 : tensor<768x768xbf16>
    %8812 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8813 = stablehlo.broadcast_in_dim %8812, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8814 = stablehlo.multiply %8813, %8186 : tensor<768xbf16>
    %8815 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8816 = stablehlo.broadcast_in_dim %8815, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8817 = stablehlo.multiply %8816, %8189 : tensor<768x768xbf16>
    %8818 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8819 = stablehlo.broadcast_in_dim %8818, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8820 = stablehlo.multiply %8819, %8192 : tensor<768xbf16>
    %8821 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8822 = stablehlo.broadcast_in_dim %8821, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8823 = stablehlo.multiply %8822, %8195 : tensor<768x768xbf16>
    %8824 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8825 = stablehlo.broadcast_in_dim %8824, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8826 = stablehlo.multiply %8825, %8198 : tensor<768xbf16>
    %8827 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8828 = stablehlo.broadcast_in_dim %8827, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8829 = stablehlo.multiply %8828, %8201 : tensor<768x768xbf16>
    %8830 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8831 = stablehlo.broadcast_in_dim %8830, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8832 = stablehlo.multiply %8831, %8204 : tensor<768xbf16>
    %8833 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8834 = stablehlo.broadcast_in_dim %8833, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8835 = stablehlo.multiply %8834, %8207 : tensor<768xbf16>
    %8836 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8837 = stablehlo.broadcast_in_dim %8836, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8838 = stablehlo.multiply %8837, %8210 : tensor<768xbf16>
    %8839 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8840 = stablehlo.broadcast_in_dim %8839, dims = [] : (tensor<bf16>) -> tensor<3072x768xbf16>
    %8841 = stablehlo.multiply %8840, %8213 : tensor<3072x768xbf16>
    %8842 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8843 = stablehlo.broadcast_in_dim %8842, dims = [] : (tensor<bf16>) -> tensor<3072xbf16>
    %8844 = stablehlo.multiply %8843, %8216 : tensor<3072xbf16>
    %8845 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8846 = stablehlo.broadcast_in_dim %8845, dims = [] : (tensor<bf16>) -> tensor<768x3072xbf16>
    %8847 = stablehlo.multiply %8846, %8219 : tensor<768x3072xbf16>
    %8848 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8849 = stablehlo.broadcast_in_dim %8848, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8850 = stablehlo.multiply %8849, %8222 : tensor<768xbf16>
    %8851 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8852 = stablehlo.broadcast_in_dim %8851, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8853 = stablehlo.multiply %8852, %8225 : tensor<768xbf16>
    %8854 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8855 = stablehlo.broadcast_in_dim %8854, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8856 = stablehlo.multiply %8855, %8228 : tensor<768xbf16>
    %8857 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8858 = stablehlo.broadcast_in_dim %8857, dims = [] : (tensor<bf16>) -> tensor<768x768xbf16>
    %8859 = stablehlo.multiply %8858, %8231 : tensor<768x768xbf16>
    %8860 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8861 = stablehlo.broadcast_in_dim %8860, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8862 = stablehlo.multiply %8861, %8234 : tensor<768xbf16>
    %8863 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8864 = stablehlo.broadcast_in_dim %8863, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8865 = stablehlo.multiply %8864, %8237 : tensor<768xbf16>
    %8866 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8867 = stablehlo.broadcast_in_dim %8866, dims = [] : (tensor<bf16>) -> tensor<768xbf16>
    %8868 = stablehlo.multiply %8867, %8240 : tensor<768xbf16>
    %8869 = stablehlo.convert %8265 : (tensor<f32>) -> tensor<bf16>
    %8870 = stablehlo.broadcast_in_dim %8869, dims = [] : (tensor<bf16>) -> tensor<30522xbf16>
    %8871 = stablehlo.multiply %8870, %8243 : tensor<30522xbf16>
    %8872 = stablehlo.compare  LT, %arg607, %c_501,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %8873 = stablehlo.add %arg607, %c_12 : tensor<i32>
    %8874 = call @_where_434(%8872, %8873, %c_501) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %8875 = stablehlo.add %arg0, %8268 : tensor<30522x768xbf16>
    %8876 = stablehlo.add %arg1, %8271 : tensor<512x768xbf16>
    %8877 = stablehlo.add %arg2, %8274 : tensor<2x768xbf16>
    %8878 = stablehlo.add %arg3, %8277 : tensor<768xbf16>
    %8879 = stablehlo.add %arg4, %8280 : tensor<768xbf16>
    %8880 = stablehlo.add %arg5, %8283 : tensor<768x768xbf16>
    %8881 = stablehlo.add %arg6, %8286 : tensor<768xbf16>
    %8882 = stablehlo.add %arg7, %8289 : tensor<768x768xbf16>
    %8883 = stablehlo.add %arg8, %8292 : tensor<768xbf16>
    %8884 = stablehlo.add %arg9, %8295 : tensor<768x768xbf16>
    %8885 = stablehlo.add %arg10, %8298 : tensor<768xbf16>
    %8886 = stablehlo.add %arg11, %8301 : tensor<768x768xbf16>
    %8887 = stablehlo.add %arg12, %8304 : tensor<768xbf16>
    %8888 = stablehlo.add %arg13, %8307 : tensor<768xbf16>
    %8889 = stablehlo.add %arg14, %8310 : tensor<768xbf16>
    %8890 = stablehlo.add %arg15, %8313 : tensor<3072x768xbf16>
    %8891 = stablehlo.add %arg16, %8316 : tensor<3072xbf16>
    %8892 = stablehlo.add %arg17, %8319 : tensor<768x3072xbf16>
    %8893 = stablehlo.add %arg18, %8322 : tensor<768xbf16>
    %8894 = stablehlo.add %arg19, %8325 : tensor<768xbf16>
    %8895 = stablehlo.add %arg20, %8328 : tensor<768xbf16>
    %8896 = stablehlo.add %arg21, %8331 : tensor<768x768xbf16>
    %8897 = stablehlo.add %arg22, %8334 : tensor<768xbf16>
    %8898 = stablehlo.add %arg23, %8337 : tensor<768x768xbf16>
    %8899 = stablehlo.add %arg24, %8340 : tensor<768xbf16>
    %8900 = stablehlo.add %arg25, %8343 : tensor<768x768xbf16>
    %8901 = stablehlo.add %arg26, %8346 : tensor<768xbf16>
    %8902 = stablehlo.add %arg27, %8349 : tensor<768x768xbf16>
    %8903 = stablehlo.add %arg28, %8352 : tensor<768xbf16>
    %8904 = stablehlo.add %arg29, %8355 : tensor<768xbf16>
    %8905 = stablehlo.add %arg30, %8358 : tensor<768xbf16>
    %8906 = stablehlo.add %arg31, %8361 : tensor<3072x768xbf16>
    %8907 = stablehlo.add %arg32, %8364 : tensor<3072xbf16>
    %8908 = stablehlo.add %arg33, %8367 : tensor<768x3072xbf16>
    %8909 = stablehlo.add %arg34, %8370 : tensor<768xbf16>
    %8910 = stablehlo.add %arg35, %8373 : tensor<768xbf16>
    %8911 = stablehlo.add %arg36, %8376 : tensor<768xbf16>
    %8912 = stablehlo.add %arg37, %8379 : tensor<768x768xbf16>
    %8913 = stablehlo.add %arg38, %8382 : tensor<768xbf16>
    %8914 = stablehlo.add %arg39, %8385 : tensor<768x768xbf16>
    %8915 = stablehlo.add %arg40, %8388 : tensor<768xbf16>
    %8916 = stablehlo.add %arg41, %8391 : tensor<768x768xbf16>
    %8917 = stablehlo.add %arg42, %8394 : tensor<768xbf16>
    %8918 = stablehlo.add %arg43, %8397 : tensor<768x768xbf16>
    %8919 = stablehlo.add %arg44, %8400 : tensor<768xbf16>
    %8920 = stablehlo.add %arg45, %8403 : tensor<768xbf16>
    %8921 = stablehlo.add %arg46, %8406 : tensor<768xbf16>
    %8922 = stablehlo.add %arg47, %8409 : tensor<3072x768xbf16>
    %8923 = stablehlo.add %arg48, %8412 : tensor<3072xbf16>
    %8924 = stablehlo.add %arg49, %8415 : tensor<768x3072xbf16>
    %8925 = stablehlo.add %arg50, %8418 : tensor<768xbf16>
    %8926 = stablehlo.add %arg51, %8421 : tensor<768xbf16>
    %8927 = stablehlo.add %arg52, %8424 : tensor<768xbf16>
    %8928 = stablehlo.add %arg53, %8427 : tensor<768x768xbf16>
    %8929 = stablehlo.add %arg54, %8430 : tensor<768xbf16>
    %8930 = stablehlo.add %arg55, %8433 : tensor<768x768xbf16>
    %8931 = stablehlo.add %arg56, %8436 : tensor<768xbf16>
    %8932 = stablehlo.add %arg57, %8439 : tensor<768x768xbf16>
    %8933 = stablehlo.add %arg58, %8442 : tensor<768xbf16>
    %8934 = stablehlo.add %arg59, %8445 : tensor<768x768xbf16>
    %8935 = stablehlo.add %arg60, %8448 : tensor<768xbf16>
    %8936 = stablehlo.add %arg61, %8451 : tensor<768xbf16>
    %8937 = stablehlo.add %arg62, %8454 : tensor<768xbf16>
    %8938 = stablehlo.add %arg63, %8457 : tensor<3072x768xbf16>
    %8939 = stablehlo.add %arg64, %8460 : tensor<3072xbf16>
    %8940 = stablehlo.add %arg65, %8463 : tensor<768x3072xbf16>
    %8941 = stablehlo.add %arg66, %8466 : tensor<768xbf16>
    %8942 = stablehlo.add %arg67, %8469 : tensor<768xbf16>
    %8943 = stablehlo.add %arg68, %8472 : tensor<768xbf16>
    %8944 = stablehlo.add %arg69, %8475 : tensor<768x768xbf16>
    %8945 = stablehlo.add %arg70, %8478 : tensor<768xbf16>
    %8946 = stablehlo.add %arg71, %8481 : tensor<768x768xbf16>
    %8947 = stablehlo.add %arg72, %8484 : tensor<768xbf16>
    %8948 = stablehlo.add %arg73, %8487 : tensor<768x768xbf16>
    %8949 = stablehlo.add %arg74, %8490 : tensor<768xbf16>
    %8950 = stablehlo.add %arg75, %8493 : tensor<768x768xbf16>
    %8951 = stablehlo.add %arg76, %8496 : tensor<768xbf16>
    %8952 = stablehlo.add %arg77, %8499 : tensor<768xbf16>
    %8953 = stablehlo.add %arg78, %8502 : tensor<768xbf16>
    %8954 = stablehlo.add %arg79, %8505 : tensor<3072x768xbf16>
    %8955 = stablehlo.add %arg80, %8508 : tensor<3072xbf16>
    %8956 = stablehlo.add %arg81, %8511 : tensor<768x3072xbf16>
    %8957 = stablehlo.add %arg82, %8514 : tensor<768xbf16>
    %8958 = stablehlo.add %arg83, %8517 : tensor<768xbf16>
    %8959 = stablehlo.add %arg84, %8520 : tensor<768xbf16>
    %8960 = stablehlo.add %arg85, %8523 : tensor<768x768xbf16>
    %8961 = stablehlo.add %arg86, %8526 : tensor<768xbf16>
    %8962 = stablehlo.add %arg87, %8529 : tensor<768x768xbf16>
    %8963 = stablehlo.add %arg88, %8532 : tensor<768xbf16>
    %8964 = stablehlo.add %arg89, %8535 : tensor<768x768xbf16>
    %8965 = stablehlo.add %arg90, %8538 : tensor<768xbf16>
    %8966 = stablehlo.add %arg91, %8541 : tensor<768x768xbf16>
    %8967 = stablehlo.add %arg92, %8544 : tensor<768xbf16>
    %8968 = stablehlo.add %arg93, %8547 : tensor<768xbf16>
    %8969 = stablehlo.add %arg94, %8550 : tensor<768xbf16>
    %8970 = stablehlo.add %arg95, %8553 : tensor<3072x768xbf16>
    %8971 = stablehlo.add %arg96, %8556 : tensor<3072xbf16>
    %8972 = stablehlo.add %arg97, %8559 : tensor<768x3072xbf16>
    %8973 = stablehlo.add %arg98, %8562 : tensor<768xbf16>
    %8974 = stablehlo.add %arg99, %8565 : tensor<768xbf16>
    %8975 = stablehlo.add %arg100, %8568 : tensor<768xbf16>
    %8976 = stablehlo.add %arg101, %8571 : tensor<768x768xbf16>
    %8977 = stablehlo.add %arg102, %8574 : tensor<768xbf16>
    %8978 = stablehlo.add %arg103, %8577 : tensor<768x768xbf16>
    %8979 = stablehlo.add %arg104, %8580 : tensor<768xbf16>
    %8980 = stablehlo.add %arg105, %8583 : tensor<768x768xbf16>
    %8981 = stablehlo.add %arg106, %8586 : tensor<768xbf16>
    %8982 = stablehlo.add %arg107, %8589 : tensor<768x768xbf16>
    %8983 = stablehlo.add %arg108, %8592 : tensor<768xbf16>
    %8984 = stablehlo.add %arg109, %8595 : tensor<768xbf16>
    %8985 = stablehlo.add %arg110, %8598 : tensor<768xbf16>
    %8986 = stablehlo.add %arg111, %8601 : tensor<3072x768xbf16>
    %8987 = stablehlo.add %arg112, %8604 : tensor<3072xbf16>
    %8988 = stablehlo.add %arg113, %8607 : tensor<768x3072xbf16>
    %8989 = stablehlo.add %arg114, %8610 : tensor<768xbf16>
    %8990 = stablehlo.add %arg115, %8613 : tensor<768xbf16>
    %8991 = stablehlo.add %arg116, %8616 : tensor<768xbf16>
    %8992 = stablehlo.add %arg117, %8619 : tensor<768x768xbf16>
    %8993 = stablehlo.add %arg118, %8622 : tensor<768xbf16>
    %8994 = stablehlo.add %arg119, %8625 : tensor<768x768xbf16>
    %8995 = stablehlo.add %arg120, %8628 : tensor<768xbf16>
    %8996 = stablehlo.add %arg121, %8631 : tensor<768x768xbf16>
    %8997 = stablehlo.add %arg122, %8634 : tensor<768xbf16>
    %8998 = stablehlo.add %arg123, %8637 : tensor<768x768xbf16>
    %8999 = stablehlo.add %arg124, %8640 : tensor<768xbf16>
    %9000 = stablehlo.add %arg125, %8643 : tensor<768xbf16>
    %9001 = stablehlo.add %arg126, %8646 : tensor<768xbf16>
    %9002 = stablehlo.add %arg127, %8649 : tensor<3072x768xbf16>
    %9003 = stablehlo.add %arg128, %8652 : tensor<3072xbf16>
    %9004 = stablehlo.add %arg129, %8655 : tensor<768x3072xbf16>
    %9005 = stablehlo.add %arg130, %8658 : tensor<768xbf16>
    %9006 = stablehlo.add %arg131, %8661 : tensor<768xbf16>
    %9007 = stablehlo.add %arg132, %8664 : tensor<768xbf16>
    %9008 = stablehlo.add %arg133, %8667 : tensor<768x768xbf16>
    %9009 = stablehlo.add %arg134, %8670 : tensor<768xbf16>
    %9010 = stablehlo.add %arg135, %8673 : tensor<768x768xbf16>
    %9011 = stablehlo.add %arg136, %8676 : tensor<768xbf16>
    %9012 = stablehlo.add %arg137, %8679 : tensor<768x768xbf16>
    %9013 = stablehlo.add %arg138, %8682 : tensor<768xbf16>
    %9014 = stablehlo.add %arg139, %8685 : tensor<768x768xbf16>
    %9015 = stablehlo.add %arg140, %8688 : tensor<768xbf16>
    %9016 = stablehlo.add %arg141, %8691 : tensor<768xbf16>
    %9017 = stablehlo.add %arg142, %8694 : tensor<768xbf16>
    %9018 = stablehlo.add %arg143, %8697 : tensor<3072x768xbf16>
    %9019 = stablehlo.add %arg144, %8700 : tensor<3072xbf16>
    %9020 = stablehlo.add %arg145, %8703 : tensor<768x3072xbf16>
    %9021 = stablehlo.add %arg146, %8706 : tensor<768xbf16>
    %9022 = stablehlo.add %arg147, %8709 : tensor<768xbf16>
    %9023 = stablehlo.add %arg148, %8712 : tensor<768xbf16>
    %9024 = stablehlo.add %arg149, %8715 : tensor<768x768xbf16>
    %9025 = stablehlo.add %arg150, %8718 : tensor<768xbf16>
    %9026 = stablehlo.add %arg151, %8721 : tensor<768x768xbf16>
    %9027 = stablehlo.add %arg152, %8724 : tensor<768xbf16>
    %9028 = stablehlo.add %arg153, %8727 : tensor<768x768xbf16>
    %9029 = stablehlo.add %arg154, %8730 : tensor<768xbf16>
    %9030 = stablehlo.add %arg155, %8733 : tensor<768x768xbf16>
    %9031 = stablehlo.add %arg156, %8736 : tensor<768xbf16>
    %9032 = stablehlo.add %arg157, %8739 : tensor<768xbf16>
    %9033 = stablehlo.add %arg158, %8742 : tensor<768xbf16>
    %9034 = stablehlo.add %arg159, %8745 : tensor<3072x768xbf16>
    %9035 = stablehlo.add %arg160, %8748 : tensor<3072xbf16>
    %9036 = stablehlo.add %arg161, %8751 : tensor<768x3072xbf16>
    %9037 = stablehlo.add %arg162, %8754 : tensor<768xbf16>
    %9038 = stablehlo.add %arg163, %8757 : tensor<768xbf16>
    %9039 = stablehlo.add %arg164, %8760 : tensor<768xbf16>
    %9040 = stablehlo.add %arg165, %8763 : tensor<768x768xbf16>
    %9041 = stablehlo.add %arg166, %8766 : tensor<768xbf16>
    %9042 = stablehlo.add %arg167, %8769 : tensor<768x768xbf16>
    %9043 = stablehlo.add %arg168, %8772 : tensor<768xbf16>
    %9044 = stablehlo.add %arg169, %8775 : tensor<768x768xbf16>
    %9045 = stablehlo.add %arg170, %8778 : tensor<768xbf16>
    %9046 = stablehlo.add %arg171, %8781 : tensor<768x768xbf16>
    %9047 = stablehlo.add %arg172, %8784 : tensor<768xbf16>
    %9048 = stablehlo.add %arg173, %8787 : tensor<768xbf16>
    %9049 = stablehlo.add %arg174, %8790 : tensor<768xbf16>
    %9050 = stablehlo.add %arg175, %8793 : tensor<3072x768xbf16>
    %9051 = stablehlo.add %arg176, %8796 : tensor<3072xbf16>
    %9052 = stablehlo.add %arg177, %8799 : tensor<768x3072xbf16>
    %9053 = stablehlo.add %arg178, %8802 : tensor<768xbf16>
    %9054 = stablehlo.add %arg179, %8805 : tensor<768xbf16>
    %9055 = stablehlo.add %arg180, %8808 : tensor<768xbf16>
    %9056 = stablehlo.add %arg181, %8811 : tensor<768x768xbf16>
    %9057 = stablehlo.add %arg182, %8814 : tensor<768xbf16>
    %9058 = stablehlo.add %arg183, %8817 : tensor<768x768xbf16>
    %9059 = stablehlo.add %arg184, %8820 : tensor<768xbf16>
    %9060 = stablehlo.add %arg185, %8823 : tensor<768x768xbf16>
    %9061 = stablehlo.add %arg186, %8826 : tensor<768xbf16>
    %9062 = stablehlo.add %arg187, %8829 : tensor<768x768xbf16>
    %9063 = stablehlo.add %arg188, %8832 : tensor<768xbf16>
    %9064 = stablehlo.add %arg189, %8835 : tensor<768xbf16>
    %9065 = stablehlo.add %arg190, %8838 : tensor<768xbf16>
    %9066 = stablehlo.add %arg191, %8841 : tensor<3072x768xbf16>
    %9067 = stablehlo.add %arg192, %8844 : tensor<3072xbf16>
    %9068 = stablehlo.add %arg193, %8847 : tensor<768x3072xbf16>
    %9069 = stablehlo.add %arg194, %8850 : tensor<768xbf16>
    %9070 = stablehlo.add %arg195, %8853 : tensor<768xbf16>
    %9071 = stablehlo.add %arg196, %8856 : tensor<768xbf16>
    %9072 = stablehlo.add %arg197, %8859 : tensor<768x768xbf16>
    %9073 = stablehlo.add %arg198, %8862 : tensor<768xbf16>
    %9074 = stablehlo.add %arg199, %8865 : tensor<768xbf16>
    %9075 = stablehlo.add %arg200, %8868 : tensor<768xbf16>
    %9076 = stablehlo.add %arg201, %8871 : tensor<30522xbf16>
    return %c_4, %8875, %8876, %8877, %8878, %8879, %8880, %8881, %8882, %8883, %8884, %8885, %8886, %8887, %8888, %8889, %8890, %8891, %8892, %8893, %8894, %8895, %8896, %8897, %8898, %8899, %8900, %8901, %8902, %8903, %8904, %8905, %8906, %8907, %8908, %8909, %8910, %8911, %8912, %8913, %8914, %8915, %8916, %8917, %8918, %8919, %8920, %8921, %8922, %8923, %8924, %8925, %8926, %8927, %8928, %8929, %8930, %8931, %8932, %8933, %8934, %8935, %8936, %8937, %8938, %8939, %8940, %8941, %8942, %8943, %8944, %8945, %8946, %8947, %8948, %8949, %8950, %8951, %8952, %8953, %8954, %8955, %8956, %8957, %8958, %8959, %8960, %8961, %8962, %8963, %8964, %8965, %8966, %8967, %8968, %8969, %8970, %8971, %8972, %8973, %8974, %8975, %8976, %8977, %8978, %8979, %8980, %8981, %8982, %8983, %8984, %8985, %8986, %8987, %8988, %8989, %8990, %8991, %8992, %8993, %8994, %8995, %8996, %8997, %8998, %8999, %9000, %9001, %9002, %9003, %9004, %9005, %9006, %9007, %9008, %9009, %9010, %9011, %9012, %9013, %9014, %9015, %9016, %9017, %9018, %9019, %9020, %9021, %9022, %9023, %9024, %9025, %9026, %9027, %9028, %9029, %9030, %9031, %9032, %9033, %9034, %9035, %9036, %9037, %9038, %9039, %9040, %9041, %9042, %9043, %9044, %9045, %9046, %9047, %9048, %9049, %9050, %9051, %9052, %9053, %9054, %9055, %9056, %9057, %9058, %9059, %9060, %9061, %9062, %9063, %9064, %9065, %9066, %9067, %9068, %9069, %9070, %9071, %9072, %9073, %9074, %9075, %9076, %5207, %2987, %2992, %2997, %3002, %3007, %3012, %3017, %3022, %3027, %3032, %3037, %3042, %3047, %3052, %3057, %3062, %3067, %3072, %3077, %3082, %3087, %3092, %3097, %3102, %3107, %3112, %3117, %3122, %3127, %3132, %3137, %3142, %3147, %3152, %3157, %3162, %3167, %3172, %3177, %3182, %3187, %3192, %3197, %3202, %3207, %3212, %3217, %3222, %3227, %3232, %3237, %3242, %3247, %3252, %3257, %3262, %3267, %3272, %3277, %3282, %3287, %3292, %3297, %3302, %3307, %3312, %3317, %3322, %3327, %3332, %3337, %3342, %3347, %3352, %3357, %3362, %3367, %3372, %3377, %3382, %3387, %3392, %3397, %3402, %3407, %3412, %3417, %3422, %3427, %3432, %3437, %3442, %3447, %3452, %3457, %3462, %3467, %3472, %3477, %3482, %3487, %3492, %3497, %3502, %3507, %3512, %3517, %3522, %3527, %3532, %3537, %3542, %3547, %3552, %3557, %3562, %3567, %3572, %3577, %3582, %3587, %3592, %3597, %3602, %3607, %3612, %3617, %3622, %3627, %3632, %3637, %3642, %3647, %3652, %3657, %3662, %3667, %3672, %3677, %3682, %3687, %3692, %3697, %3702, %3707, %3712, %3717, %3722, %3727, %3732, %3737, %3742, %3747, %3752, %3757, %3762, %3767, %3772, %3777, %3782, %3787, %3792, %3797, %3802, %3807, %3812, %3817, %3822, %3827, %3832, %3837, %3842, %3847, %3852, %3857, %3862, %3867, %3872, %3877, %3882, %3887, %3892, %3897, %3902, %3907, %3912, %3917, %3922, %3927, %3932, %3937, %3942, %3947, %3952, %3957, %3962, %3967, %3972, %3977, %3982, %3987, %3992, %3998, %4004, %4010, %4016, %4022, %4028, %4034, %4040, %4046, %4052, %4058, %4064, %4070, %4076, %4082, %4088, %4094, %4100, %4106, %4112, %4118, %4124, %4130, %4136, %4142, %4148, %4154, %4160, %4166, %4172, %4178, %4184, %4190, %4196, %4202, %4208, %4214, %4220, %4226, %4232, %4238, %4244, %4250, %4256, %4262, %4268, %4274, %4280, %4286, %4292, %4298, %4304, %4310, %4316, %4322, %4328, %4334, %4340, %4346, %4352, %4358, %4364, %4370, %4376, %4382, %4388, %4394, %4400, %4406, %4412, %4418, %4424, %4430, %4436, %4442, %4448, %4454, %4460, %4466, %4472, %4478, %4484, %4490, %4496, %4502, %4508, %4514, %4520, %4526, %4532, %4538, %4544, %4550, %4556, %4562, %4568, %4574, %4580, %4586, %4592, %4598, %4604, %4610, %4616, %4622, %4628, %4634, %4640, %4646, %4652, %4658, %4664, %4670, %4676, %4682, %4688, %4694, %4700, %4706, %4712, %4718, %4724, %4730, %4736, %4742, %4748, %4754, %4760, %4766, %4772, %4778, %4784, %4790, %4796, %4802, %4808, %4814, %4820, %4826, %4832, %4838, %4844, %4850, %4856, %4862, %4868, %4874, %4880, %4886, %4892, %4898, %4904, %4910, %4916, %4922, %4928, %4934, %4940, %4946, %4952, %4958, %4964, %4970, %4976, %4982, %4988, %4994, %5000, %5006, %5012, %5018, %5024, %5030, %5036, %5042, %5048, %5054, %5060, %5066, %5072, %5078, %5084, %5090, %5096, %5102, %5108, %5114, %5120, %5126, %5132, %5138, %5144, %5150, %5156, %5162, %5168, %5174, %5180, %5186, %5192, %5198, %5204, %8874, %454, %449, %447, %449, %449 : tensor<i32>, tensor<30522x768xbf16>, tensor<512x768xbf16>, tensor<2x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<30522xbf16>, tensor<i32>, tensor<30522x768xbf16>, tensor<512x768xbf16>, tensor<2x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<30522xbf16>, tensor<30522x768xbf16>, tensor<512x768xbf16>, tensor<2x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<30522xbf16>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_var(%arg0: tensor<64x512x768xbf16>, %arg1: tensor<i32>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>) {
    %0 = stablehlo.convert %arg0 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1 = stablehlo.reduce(%0 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_0 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %3 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %4 = stablehlo.divide %2, %3 : tensor<64x512x1xf32>
    %5 = stablehlo.broadcast_in_dim %4, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %6 = stablehlo.subtract %0, %5 : tensor<64x512x768xf32>
    %7 = stablehlo.multiply %6, %6 : tensor<64x512x768xf32>
    %cst_1 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %8 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %9 = stablehlo.multiply %8, %6 : tensor<64x512x768xf32>
    %10 = stablehlo.convert %arg1 : (tensor<i32>) -> tensor<f32>
    %11 = stablehlo.subtract %cst_0, %10 : tensor<f32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %12 = stablehlo.reduce(%7 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %13 = stablehlo.broadcast_in_dim %12, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %14 = stablehlo.broadcast_in_dim %11, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.divide %13, %14 : tensor<64x512x1xf32>
    %16 = stablehlo.convert %15 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %17 = stablehlo.compare  GT, %11, %cst_3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %cst_4 = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %18 = call @_where(%17, %16, %cst_4) : (tensor<i1>, tensor<64x512x1xbf16>, tensor<f32>) -> tensor<64x512x1xbf16>
    return %18, %9, %11, %17 : tensor<64x512x1xbf16>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>
  }
  func.func private @_where(%arg0: tensor<i1>, %arg1: tensor<64x512x1xbf16>, %arg2: tensor<f32>) -> tensor<64x512x1xbf16> {
    %0 = stablehlo.convert %arg2 : (tensor<f32>) -> tensor<bf16>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<i1>, tensor<64x512x1xbf16>
    return %2 : tensor<64x512x1xbf16>
  }
  func.func private @_threefry_fold_in(%arg0: tensor<2xui32>, %arg1: tensor<ui32>) -> tensor<2xui32> {
    %c = stablehlo.constant dense<32> : tensor<ui32>
    %0 = stablehlo.shift_right_logical %arg1, %c : tensor<ui32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %c_0 = stablehlo.constant dense<4294967295> : tensor<ui32>
    %2 = stablehlo.and %arg1, %c_0 : tensor<ui32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %4 = stablehlo.concatenate %1, %3, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    %5 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %6 = stablehlo.reshape %5 : (tensor<1xui32>) -> tensor<ui32>
    %7 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %8 = stablehlo.reshape %7 : (tensor<1xui32>) -> tensor<ui32>
    %9 = stablehlo.slice %4 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %10 = stablehlo.slice %4 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %11:2 = call @threefry2x32(%6, %8, %9, %10) : (tensor<ui32>, tensor<ui32>, tensor<1xui32>, tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>)
    %12 = stablehlo.concatenate %11#0, %11#1, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    return %12 : tensor<2xui32>
  }
  func.func private @threefry2x32(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<1xui32>, %arg3: tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<1xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<1xui32>
    %6 = stablehlo.add %3, %5 : tensor<1xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<1xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<1xui32>
    %11 = stablehlo.or %8, %10 : tensor<1xui32>
    %12 = stablehlo.xor %6, %11 : tensor<1xui32>
    %13 = stablehlo.add %6, %12 : tensor<1xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<1xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<1xui32>
    %18 = stablehlo.or %15, %17 : tensor<1xui32>
    %19 = stablehlo.xor %13, %18 : tensor<1xui32>
    %20 = stablehlo.add %13, %19 : tensor<1xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<1xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<1xui32>
    %25 = stablehlo.or %22, %24 : tensor<1xui32>
    %26 = stablehlo.xor %20, %25 : tensor<1xui32>
    %27 = stablehlo.add %20, %26 : tensor<1xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<1xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<1xui32>
    %32 = stablehlo.or %29, %31 : tensor<1xui32>
    %33 = stablehlo.xor %27, %32 : tensor<1xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %35 = stablehlo.add %27, %34 : tensor<1xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %37 = stablehlo.add %33, %36 : tensor<1xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %39 = stablehlo.add %37, %38 : tensor<1xui32>
    %40 = stablehlo.add %35, %39 : tensor<1xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<1xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<1xui32>
    %45 = stablehlo.or %42, %44 : tensor<1xui32>
    %46 = stablehlo.xor %40, %45 : tensor<1xui32>
    %47 = stablehlo.add %40, %46 : tensor<1xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<1xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<1xui32>
    %52 = stablehlo.or %49, %51 : tensor<1xui32>
    %53 = stablehlo.xor %47, %52 : tensor<1xui32>
    %54 = stablehlo.add %47, %53 : tensor<1xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<1xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<1xui32>
    %59 = stablehlo.or %56, %58 : tensor<1xui32>
    %60 = stablehlo.xor %54, %59 : tensor<1xui32>
    %61 = stablehlo.add %54, %60 : tensor<1xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<1xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<1xui32>
    %66 = stablehlo.or %63, %65 : tensor<1xui32>
    %67 = stablehlo.xor %61, %66 : tensor<1xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %69 = stablehlo.add %61, %68 : tensor<1xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %71 = stablehlo.add %67, %70 : tensor<1xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %73 = stablehlo.add %71, %72 : tensor<1xui32>
    %74 = stablehlo.add %69, %73 : tensor<1xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<1xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<1xui32>
    %79 = stablehlo.or %76, %78 : tensor<1xui32>
    %80 = stablehlo.xor %74, %79 : tensor<1xui32>
    %81 = stablehlo.add %74, %80 : tensor<1xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<1xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<1xui32>
    %86 = stablehlo.or %83, %85 : tensor<1xui32>
    %87 = stablehlo.xor %81, %86 : tensor<1xui32>
    %88 = stablehlo.add %81, %87 : tensor<1xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<1xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<1xui32>
    %93 = stablehlo.or %90, %92 : tensor<1xui32>
    %94 = stablehlo.xor %88, %93 : tensor<1xui32>
    %95 = stablehlo.add %88, %94 : tensor<1xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<1xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<1xui32>
    %100 = stablehlo.or %97, %99 : tensor<1xui32>
    %101 = stablehlo.xor %95, %100 : tensor<1xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %103 = stablehlo.add %95, %102 : tensor<1xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %105 = stablehlo.add %101, %104 : tensor<1xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %107 = stablehlo.add %105, %106 : tensor<1xui32>
    %108 = stablehlo.add %103, %107 : tensor<1xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<1xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<1xui32>
    %113 = stablehlo.or %110, %112 : tensor<1xui32>
    %114 = stablehlo.xor %108, %113 : tensor<1xui32>
    %115 = stablehlo.add %108, %114 : tensor<1xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<1xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<1xui32>
    %120 = stablehlo.or %117, %119 : tensor<1xui32>
    %121 = stablehlo.xor %115, %120 : tensor<1xui32>
    %122 = stablehlo.add %115, %121 : tensor<1xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<1xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<1xui32>
    %127 = stablehlo.or %124, %126 : tensor<1xui32>
    %128 = stablehlo.xor %122, %127 : tensor<1xui32>
    %129 = stablehlo.add %122, %128 : tensor<1xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<1xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<1xui32>
    %134 = stablehlo.or %131, %133 : tensor<1xui32>
    %135 = stablehlo.xor %129, %134 : tensor<1xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %137 = stablehlo.add %129, %136 : tensor<1xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %139 = stablehlo.add %135, %138 : tensor<1xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %141 = stablehlo.add %139, %140 : tensor<1xui32>
    %142 = stablehlo.add %137, %141 : tensor<1xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<1xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<1xui32>
    %147 = stablehlo.or %144, %146 : tensor<1xui32>
    %148 = stablehlo.xor %142, %147 : tensor<1xui32>
    %149 = stablehlo.add %142, %148 : tensor<1xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<1xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<1xui32>
    %154 = stablehlo.or %151, %153 : tensor<1xui32>
    %155 = stablehlo.xor %149, %154 : tensor<1xui32>
    %156 = stablehlo.add %149, %155 : tensor<1xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<1xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<1xui32>
    %161 = stablehlo.or %158, %160 : tensor<1xui32>
    %162 = stablehlo.xor %156, %161 : tensor<1xui32>
    %163 = stablehlo.add %156, %162 : tensor<1xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<1xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<1xui32>
    %168 = stablehlo.or %165, %167 : tensor<1xui32>
    %169 = stablehlo.xor %163, %168 : tensor<1xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %171 = stablehlo.add %163, %170 : tensor<1xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %173 = stablehlo.add %169, %172 : tensor<1xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %175 = stablehlo.add %173, %174 : tensor<1xui32>
    return %171, %175 : tensor<1xui32>, tensor<1xui32>
  }
  func.func private @_bernoulli(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x512x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x512x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<64x512x768xi1>
    return %2 : tensor<64x512x768xi1>
  }
  func.func private @_uniform(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x512x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x512x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x512x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x512x768xui64>
    %c = stablehlo.constant dense<393216> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x512x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x512x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x512x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x512x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x512x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x512x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %23:2 = call @threefry2x32_37(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x512x768xui32>, tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x512x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x512x768xui32>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x512x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x512x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x512x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x512x768xf32>
    return %38 : tensor<64x512x768xf32>
  }
  func.func private @threefry2x32_37(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x512x768xui32>, %arg3: tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x512x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x512x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x512x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x512x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x512x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x512x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x512x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x512x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x512x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x512x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x512x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x512x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x512x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x512x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x512x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x512x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x512x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x512x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x512x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x512x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x512x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x512x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x512x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x512x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x512x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x512x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x512x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x512x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x512x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x512x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x512x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x512x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x512x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x512x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x512x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x512x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x512x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x512x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x512x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x512x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x512x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x512x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x512x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x512x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x512x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x512x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x512x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x512x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x512x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x512x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x512x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x512x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x512x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x512x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x512x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x512x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x512x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x512x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x512x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x512x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x512x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x512x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x512x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x512x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x512x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x512x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x512x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x512x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x512x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x512x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x512x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x512x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x512x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x512x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x512x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x512x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x512x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x512x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x512x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x512x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x512x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x512x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x512x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x512x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x512x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x512x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x512x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x512x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x512x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x512x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x512x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x512x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x512x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x512x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x512x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x512x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x512x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x512x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x512x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x512x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x512x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x512x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x512x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x512x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x512x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x512x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x512x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x512x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x512x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x512x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x512x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x512x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x512x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x512x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x512x768xui32>
    return %171, %175 : tensor<64x512x768xui32>, tensor<64x512x768xui32>
  }
  func.func private @_where_72(%arg0: tensor<64x512x1x512xi1>, %arg1: tensor<bf16>) -> (tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>) {
    %0 = stablehlo.broadcast_in_dim %arg0, dims = [0, 1, 2, 3] : (tensor<64x512x1x512xi1>) -> tensor<64x512x12x512xi1>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<bf16>) -> tensor<64x512x12x512xbf16>
    return %0, %1 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>
  }
  func.func private @_bernoulli_75(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x1x12x512xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_76(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x1x12x512xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x1x12x512xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x1x12x512xf32>, tensor<64x1x12x512xf32>) -> tensor<64x1x12x512xi1>
    return %2 : tensor<64x1x12x512xi1>
  }
  func.func private @_uniform_76(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x1x12x512xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x1x12x512xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x1x12x512xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x1x12x512xui64>
    %11 = stablehlo.iota dim = 3 : tensor<64x1x12x512xui64>
    %c = stablehlo.constant dense<6144> : tensor<ui64>
    %12 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %13 = stablehlo.multiply %12, %8 : tensor<64x1x12x512xui64>
    %c_0 = stablehlo.constant dense<6144> : tensor<ui64>
    %14 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %15 = stablehlo.multiply %14, %9 : tensor<64x1x12x512xui64>
    %c_1 = stablehlo.constant dense<512> : tensor<ui64>
    %16 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %17 = stablehlo.multiply %16, %10 : tensor<64x1x12x512xui64>
    %c_2 = stablehlo.constant dense<1> : tensor<ui64>
    %18 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %19 = stablehlo.multiply %18, %11 : tensor<64x1x12x512xui64>
    %20 = stablehlo.add %13, %15 : tensor<64x1x12x512xui64>
    %21 = stablehlo.add %20, %17 : tensor<64x1x12x512xui64>
    %22 = stablehlo.add %21, %19 : tensor<64x1x12x512xui64>
    %c_3 = stablehlo.constant dense<32> : tensor<ui64>
    %23 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui64>) -> tensor<64x1x12x512xui64>
    %24 = stablehlo.shift_right_logical %22, %23 : tensor<64x1x12x512xui64>
    %25 = stablehlo.convert %22 : (tensor<64x1x12x512xui64>) -> tensor<64x1x12x512xui32>
    %26 = stablehlo.convert %24 : (tensor<64x1x12x512xui64>) -> tensor<64x1x12x512xui32>
    %27:2 = call @threefry2x32_80(%5, %7, %26, %25) : (tensor<ui32>, tensor<ui32>, tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>) -> (tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>)
    %28 = stablehlo.xor %27#0, %27#1 : tensor<64x1x12x512xui32>
    %c_4 = stablehlo.constant dense<9> : tensor<ui32>
    %29 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %30 = stablehlo.shift_right_logical %28, %29 : tensor<64x1x12x512xui32>
    %c_5 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %31 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %32 = stablehlo.or %30, %31 : tensor<64x1x12x512xui32>
    %33 = stablehlo.bitcast_convert %32 : (tensor<64x1x12x512xui32>) -> tensor<64x1x12x512xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x1x12x512xf32>
    %35 = stablehlo.subtract %33, %34 : tensor<64x1x12x512xf32>
    %36 = stablehlo.subtract %3, %2 : tensor<1x1x1x1xf32>
    %37 = stablehlo.broadcast_in_dim %36, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %38 = stablehlo.multiply %35, %37 : tensor<64x1x12x512xf32>
    %39 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %40 = stablehlo.add %38, %39 : tensor<64x1x12x512xf32>
    %41 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x1x12x512xf32>
    %42 = stablehlo.maximum %41, %40 : tensor<64x1x12x512xf32>
    return %42 : tensor<64x1x12x512xf32>
  }
  func.func private @threefry2x32_80(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x1x12x512xui32>, %arg3: tensor<64x1x12x512xui32>) -> (tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x1x12x512xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x1x12x512xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x1x12x512xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x1x12x512xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x1x12x512xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x1x12x512xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x1x12x512xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x1x12x512xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x1x12x512xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x1x12x512xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x1x12x512xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x1x12x512xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x1x12x512xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x1x12x512xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x1x12x512xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x1x12x512xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x1x12x512xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x1x12x512xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x1x12x512xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x1x12x512xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x1x12x512xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x1x12x512xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x1x12x512xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x1x12x512xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x1x12x512xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x1x12x512xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x1x12x512xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x1x12x512xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x1x12x512xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x1x12x512xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x1x12x512xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x1x12x512xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x1x12x512xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x1x12x512xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x1x12x512xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x1x12x512xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x1x12x512xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x1x12x512xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x1x12x512xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x1x12x512xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x1x12x512xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x1x12x512xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x1x12x512xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x1x12x512xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x1x12x512xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x1x12x512xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x1x12x512xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x1x12x512xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x1x12x512xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x1x12x512xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x1x12x512xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x1x12x512xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x1x12x512xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x1x12x512xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x1x12x512xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x1x12x512xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x1x12x512xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x1x12x512xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x1x12x512xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x1x12x512xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x1x12x512xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x1x12x512xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x1x12x512xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x1x12x512xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x1x12x512xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x1x12x512xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x1x12x512xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x1x12x512xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x1x12x512xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x1x12x512xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x1x12x512xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x1x12x512xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x1x12x512xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x1x12x512xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x1x12x512xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x1x12x512xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x1x12x512xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x1x12x512xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x1x12x512xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x1x12x512xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x1x12x512xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x1x12x512xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x1x12x512xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x1x12x512xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x1x12x512xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x1x12x512xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x1x12x512xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x1x12x512xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x1x12x512xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x1x12x512xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x1x12x512xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x1x12x512xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x1x12x512xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x1x12x512xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x1x12x512xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x1x12x512xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x1x12x512xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x1x12x512xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x1x12x512xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x1x12x512xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x1x12x512xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x1x12x512xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x1x12x512xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x1x12x512xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x1x12x512xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x1x12x512xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x1x12x512xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x1x12x512xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x1x12x512xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x1x12x512xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x1x12x512xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x1x12x512xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x1x12x512xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x1x12x512xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x1x12x512xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x1x12x512xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x1x12x512xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x1x12x512xui32>
    return %171, %175 : tensor<64x1x12x512xui32>, tensor<64x1x12x512xui32>
  }
  func.func private @_bernoulli_98(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x512x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_99(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x512x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<64x512x768xi1>
    return %2 : tensor<64x512x768xi1>
  }
  func.func private @_uniform_99(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x512x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x512x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x512x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x512x768xui64>
    %c = stablehlo.constant dense<393216> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x512x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x512x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x512x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x512x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x512x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x512x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %23:2 = call @threefry2x32_37(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x512x768xui32>, tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x512x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x512x768xui32>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x512x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x512x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x512x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x512x768xf32>
    return %38 : tensor<64x512x768xf32>
  }
  func.func private @_var_100(%arg0: tensor<i32>) -> (tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) {
    %0 = stablehlo.convert %arg0 : (tensor<i32>) -> tensor<f32>
    %cst = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %1 = stablehlo.subtract %cst, %0 : tensor<f32>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2 = stablehlo.compare  GT, %1, %cst_0,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %cst_1 = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %3 = call @_where_101(%cst_1) : (tensor<f32>) -> tensor<64x512x1xbf16>
    return %1, %2, %3 : tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>
  }
  func.func private @_where_101(%arg0: tensor<f32>) -> tensor<64x512x1xbf16> {
    %0 = stablehlo.convert %arg0 : (tensor<f32>) -> tensor<bf16>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    return %1 : tensor<64x512x1xbf16>
  }
  func.func private @closed_call(%arg0: tensor<64x512x768xi1>, %arg1: tensor<64x512x768xbf16>, %arg2: tensor<64x512x768xi1>, %arg3: tensor<64x512x768xbf16>, %arg4: tensor<bf16>, %arg5: tensor<64x512x12x512xi1>, %arg6: tensor<64x512x12x512xbf16>, %arg7: tensor<64x512x12x512xbf16>, %arg8: tensor<bf16>, %arg9: tensor<f32>, %arg10: tensor<i1>, %arg11: tensor<64x512x1xbf16>, %arg12: tensor<bf16>, %arg13: tensor<f32>, %arg14: tensor<i1>, %arg15: tensor<64x512x1xbf16>, %arg16: tensor<64x512x1xbf16>, %arg17: tensor<64x512x1xbf16>, %arg18: tensor<64x512x1xbf16>, %arg19: tensor<64x512x1xbf16>, %arg20: tensor<bf16>, %arg21: tensor<64x512x1xbf16>, %arg22: tensor<64x512x1xbf16>, %arg23: tensor<64x512x1xbf16>, %arg24: tensor<64x512x1xbf16>, %arg25: tensor<64x512x768xbf16>, %arg26: tensor<768x768xbf16>, %arg27: tensor<768xbf16>, %arg28: tensor<768x768xbf16>, %arg29: tensor<768xbf16>, %arg30: tensor<768x768xbf16>, %arg31: tensor<768xbf16>, %arg32: tensor<768x768xbf16>, %arg33: tensor<768xbf16>, %arg34: tensor<768xbf16>, %arg35: tensor<768xbf16>, %arg36: tensor<3072x768xbf16>, %arg37: tensor<3072xbf16>, %arg38: tensor<768x3072xbf16>, %arg39: tensor<768xbf16>, %arg40: tensor<768xbf16>, %arg41: tensor<768xbf16>) -> (tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768x768xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x512xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x512xbf16>, tensor<64x512x12x64xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>, tensor<768x3072xbf16>, tensor<64x512x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<3072x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>) {
    %0 = stablehlo.transpose %arg26, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %1 = stablehlo.dot_general %arg25, %0, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %2 = stablehlo.broadcast_in_dim %arg27, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %3 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %4 = stablehlo.add %1, %3 : tensor<64x512x768xbf16>
    %5 = stablehlo.transpose %arg30, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %6 = stablehlo.dot_general %arg25, %5, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %7 = stablehlo.broadcast_in_dim %arg31, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %9 = stablehlo.add %6, %8 : tensor<64x512x768xbf16>
    %10 = stablehlo.transpose %arg28, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %11 = stablehlo.dot_general %arg25, %10, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %12 = stablehlo.broadcast_in_dim %arg29, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %13 = stablehlo.broadcast_in_dim %12, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %14 = stablehlo.add %11, %13 : tensor<64x512x768xbf16>
    %15 = stablehlo.reshape %4 : (tensor<64x512x768xbf16>) -> tensor<64x512x12x64xbf16>
    %16 = stablehlo.reshape %9 : (tensor<64x512x768xbf16>) -> tensor<64x512x12x64xbf16>
    %17 = stablehlo.reshape %14 : (tensor<64x512x768xbf16>) -> tensor<64x512x12x64xbf16>
    %18 = stablehlo.broadcast_in_dim %arg4, dims = [] : (tensor<bf16>) -> tensor<64x512x12x64xbf16>
    %19 = stablehlo.divide %15, %18 : tensor<64x512x12x64xbf16>
    %20 = stablehlo.dot_general %16, %19, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xbf16>, tensor<64x512x12x64xbf16>) -> tensor<64x12x512x512xbf16>
    %21 = stablehlo.transpose %20, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xbf16>) -> tensor<64x512x12x512xbf16>
    %22 = call @_where_129(%21, %arg5, %arg6) : (tensor<64x512x12x512xbf16>, tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xbf16>
    %23 = stablehlo.convert %22 : (tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xf32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %24 = stablehlo.reduce(%23 init: %cst) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %cst_0 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %25 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %26 = stablehlo.maximum %25, %24 : tensor<64x512x12xf32>
    %27 = stablehlo.broadcast_in_dim %26, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %28 = stablehlo.broadcast_in_dim %27, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %29 = stablehlo.subtract %23, %28 : tensor<64x512x12x512xf32>
    %30 = stablehlo.exponential %29 : tensor<64x512x12x512xf32>
    %cst_1 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %31 = stablehlo.reduce(%30 init: %cst_1) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %32 = stablehlo.broadcast_in_dim %31, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %34 = stablehlo.divide %30, %33 : tensor<64x512x12x512xf32>
    %35 = stablehlo.multiply %32, %32 : tensor<64x512x12x1xf32>
    %cst_2 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %36 = stablehlo.broadcast_in_dim %cst_2, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %37 = stablehlo.divide %36, %35 : tensor<64x512x12x1xf32>
    %38 = stablehlo.convert %34 : (tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xbf16>
    %39 = stablehlo.multiply %38, %arg7 : tensor<64x512x12x512xbf16>
    %40 = stablehlo.dot_general %17, %39, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xbf16>, tensor<64x512x12x512xbf16>) -> tensor<64x12x64x512xbf16>
    %41 = stablehlo.transpose %40, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xbf16>) -> tensor<64x512x12x64xbf16>
    %42 = stablehlo.reshape %41 : (tensor<64x512x12x64xbf16>) -> tensor<64x512x768xbf16>
    %43 = stablehlo.transpose %arg32, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %44 = stablehlo.dot_general %42, %43, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %45 = stablehlo.broadcast_in_dim %arg33, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %46 = stablehlo.broadcast_in_dim %45, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %47 = stablehlo.add %44, %46 : tensor<64x512x768xbf16>
    %48 = stablehlo.broadcast_in_dim %arg8, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %49 = stablehlo.divide %47, %48 : tensor<64x512x768xbf16>
    %50 = stablehlo.select %arg2, %49, %arg3 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %51 = stablehlo.add %50, %arg25 : tensor<64x512x768xbf16>
    %52 = stablehlo.convert %51 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %53 = stablehlo.reduce(%52 init: %cst_3) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %54 = stablehlo.broadcast_in_dim %53, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_4 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %55 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %56 = stablehlo.divide %54, %55 : tensor<64x512x1xf32>
    %57 = stablehlo.convert %56 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %58:2 = call @_var_146(%51, %arg9, %arg10, %arg11) : (tensor<64x512x768xbf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>)
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %59 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %60 = stablehlo.maximum %58#0, %59 : tensor<64x512x1xbf16>
    %61 = stablehlo.compare  EQ, %58#0, %60,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %62 = stablehlo.select %61, %arg17, %arg16 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %63 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %64 = stablehlo.compare  EQ, %63, %60,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %65 = stablehlo.select %64, %arg19, %arg18 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %66 = stablehlo.divide %62, %65 : tensor<64x512x1xbf16>
    %cst_6 = stablehlo.constant dense<1.001870e-12> : tensor<bf16>
    %67 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %68 = stablehlo.add %60, %67 : tensor<64x512x1xbf16>
    %69 = stablehlo.rsqrt %68 : tensor<64x512x1xbf16>
    %70 = stablehlo.divide %69, %68 : tensor<64x512x1xbf16>
    %cst_7 = stablehlo.constant dense<-5.000000e-01> : tensor<bf16>
    %71 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %72 = stablehlo.multiply %71, %70 : tensor<64x512x1xbf16>
    %73 = stablehlo.broadcast_in_dim %57, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %74 = stablehlo.subtract %51, %73 : tensor<64x512x768xbf16>
    %75 = stablehlo.broadcast_in_dim %69, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %76 = stablehlo.multiply %74, %75 : tensor<64x512x768xbf16>
    %77 = stablehlo.broadcast_in_dim %arg34, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %78 = stablehlo.broadcast_in_dim %77, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %79 = stablehlo.multiply %78, %76 : tensor<64x512x768xbf16>
    %80 = stablehlo.broadcast_in_dim %arg35, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %81 = stablehlo.broadcast_in_dim %80, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %82 = stablehlo.add %79, %81 : tensor<64x512x768xbf16>
    %83 = stablehlo.transpose %arg36, dims = [1, 0] : (tensor<3072x768xbf16>) -> tensor<768x3072xbf16>
    %84 = stablehlo.dot_general %82, %83, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x3072xbf16>) -> tensor<64x512x3072xbf16>
    %85 = stablehlo.broadcast_in_dim %arg37, dims = [2] : (tensor<3072xbf16>) -> tensor<1x1x3072xbf16>
    %86 = stablehlo.broadcast_in_dim %85, dims = [0, 1, 2] : (tensor<1x1x3072xbf16>) -> tensor<64x512x3072xbf16>
    %87 = stablehlo.add %84, %86 : tensor<64x512x3072xbf16>
    %88 = stablehlo.multiply %87, %87 : tensor<64x512x3072xbf16>
    %89 = stablehlo.multiply %88, %87 : tensor<64x512x3072xbf16>
    %90 = stablehlo.multiply %87, %87 : tensor<64x512x3072xbf16>
    %cst_8 = stablehlo.constant dense<3.000000e+00> : tensor<bf16>
    %91 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %92 = stablehlo.multiply %91, %90 : tensor<64x512x3072xbf16>
    %cst_9 = stablehlo.constant dense<4.467770e-02> : tensor<bf16>
    %93 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %94 = stablehlo.multiply %93, %89 : tensor<64x512x3072xbf16>
    %95 = stablehlo.add %87, %94 : tensor<64x512x3072xbf16>
    %cst_10 = stablehlo.constant dense<7.968750e-01> : tensor<bf16>
    %96 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %97 = stablehlo.multiply %96, %95 : tensor<64x512x3072xbf16>
    %98 = stablehlo.tanh %97 : tensor<64x512x3072xbf16>
    %99 = stablehlo.broadcast_in_dim %arg20, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %100 = stablehlo.subtract %99, %98 : tensor<64x512x3072xbf16>
    %cst_11 = stablehlo.constant dense<1.000000e+00> : tensor<bf16>
    %101 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %102 = stablehlo.add %101, %98 : tensor<64x512x3072xbf16>
    %cst_12 = stablehlo.constant dense<5.000000e-01> : tensor<bf16>
    %103 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %104 = stablehlo.multiply %103, %102 : tensor<64x512x3072xbf16>
    %105 = stablehlo.multiply %87, %104 : tensor<64x512x3072xbf16>
    %106 = stablehlo.transpose %arg38, dims = [1, 0] : (tensor<768x3072xbf16>) -> tensor<3072x768xbf16>
    %107 = stablehlo.dot_general %105, %106, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xbf16>, tensor<3072x768xbf16>) -> tensor<64x512x768xbf16>
    %108 = stablehlo.broadcast_in_dim %arg39, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %109 = stablehlo.broadcast_in_dim %108, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %110 = stablehlo.add %107, %109 : tensor<64x512x768xbf16>
    %111 = stablehlo.broadcast_in_dim %arg12, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %112 = stablehlo.divide %110, %111 : tensor<64x512x768xbf16>
    %113 = stablehlo.select %arg0, %112, %arg1 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %114 = stablehlo.add %113, %82 : tensor<64x512x768xbf16>
    %115 = stablehlo.convert %114 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst_13 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %116 = stablehlo.reduce(%115 init: %cst_13) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %117 = stablehlo.broadcast_in_dim %116, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %118 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %119 = stablehlo.divide %117, %118 : tensor<64x512x1xf32>
    %120 = stablehlo.convert %119 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %121:2 = call @_var_146(%114, %arg13, %arg14, %arg15) : (tensor<64x512x768xbf16>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>)
    %122 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %123 = stablehlo.maximum %121#0, %122 : tensor<64x512x1xbf16>
    %124 = stablehlo.compare  EQ, %121#0, %123,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %125 = stablehlo.select %124, %arg22, %arg21 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %126 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %127 = stablehlo.compare  EQ, %126, %123,  FLOAT : (tensor<64x512x1xbf16>, tensor<64x512x1xbf16>) -> tensor<64x512x1xi1>
    %128 = stablehlo.select %127, %arg24, %arg23 : tensor<64x512x1xi1>, tensor<64x512x1xbf16>
    %129 = stablehlo.divide %125, %128 : tensor<64x512x1xbf16>
    %130 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %131 = stablehlo.add %123, %130 : tensor<64x512x1xbf16>
    %132 = stablehlo.rsqrt %131 : tensor<64x512x1xbf16>
    %133 = stablehlo.divide %132, %131 : tensor<64x512x1xbf16>
    %134 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %135 = stablehlo.multiply %134, %133 : tensor<64x512x1xbf16>
    %136 = stablehlo.broadcast_in_dim %120, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %137 = stablehlo.subtract %114, %136 : tensor<64x512x768xbf16>
    %138 = stablehlo.broadcast_in_dim %132, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %139 = stablehlo.multiply %137, %138 : tensor<64x512x768xbf16>
    %140 = stablehlo.broadcast_in_dim %arg40, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %141 = stablehlo.broadcast_in_dim %140, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %142 = stablehlo.multiply %141, %139 : tensor<64x512x768xbf16>
    %143 = stablehlo.broadcast_in_dim %arg41, dims = [2] : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %144 = stablehlo.broadcast_in_dim %143, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %145 = stablehlo.add %142, %144 : tensor<64x512x768xbf16>
    return %145, %0, %arg25, %5, %10, %19, %16, %30, %32, %37, %39, %17, %43, %42, %58#1, %66, %72, %69, %74, %76, %77, %83, %82, %92, %98, %100, %104, %87, %106, %105, %121#1, %129, %135, %132, %137, %139, %140 : tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768x768xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x64xbf16>, tensor<64x512x12x512xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x1xf32>, tensor<64x512x12x512xbf16>, tensor<64x512x12x64xbf16>, tensor<768x768xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>, tensor<768x3072xbf16>, tensor<64x512x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x3072xbf16>, tensor<3072x768xbf16>, tensor<64x512x3072xbf16>, tensor<64x512x768xf32>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x1xbf16>, tensor<64x512x768xbf16>, tensor<64x512x768xbf16>, tensor<1x1x768xbf16>
  }
  func.func private @_where_129(%arg0: tensor<64x512x12x512xbf16>, %arg1: tensor<64x512x12x512xi1>, %arg2: tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xbf16> {
    %0 = stablehlo.select %arg1, %arg0, %arg2 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>
    return %0 : tensor<64x512x12x512xbf16>
  }
  func.func private @_var_146(%arg0: tensor<64x512x768xbf16>, %arg1: tensor<f32>, %arg2: tensor<i1>, %arg3: tensor<64x512x1xbf16>) -> (tensor<64x512x1xbf16>, tensor<64x512x768xf32>) {
    %0 = stablehlo.convert %arg0 : (tensor<64x512x768xbf16>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1 = stablehlo.reduce(%0 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_0 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %3 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %4 = stablehlo.divide %2, %3 : tensor<64x512x1xf32>
    %5 = stablehlo.broadcast_in_dim %4, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %6 = stablehlo.subtract %0, %5 : tensor<64x512x768xf32>
    %7 = stablehlo.multiply %6, %6 : tensor<64x512x768xf32>
    %cst_1 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %8 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %9 = stablehlo.multiply %8, %6 : tensor<64x512x768xf32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %10 = stablehlo.reduce(%7 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %11 = stablehlo.broadcast_in_dim %10, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %12 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %13 = stablehlo.divide %11, %12 : tensor<64x512x1xf32>
    %14 = stablehlo.convert %13 : (tensor<64x512x1xf32>) -> tensor<64x512x1xbf16>
    %15 = call @_where_147(%14, %arg2, %arg3) : (tensor<64x512x1xbf16>, tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16>
    return %15, %9 : tensor<64x512x1xbf16>, tensor<64x512x768xf32>
  }
  func.func private @_where_147(%arg0: tensor<64x512x1xbf16>, %arg1: tensor<i1>, %arg2: tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16> {
    %0 = stablehlo.select %arg1, %arg0, %arg2 : tensor<i1>, tensor<64x512x1xbf16>
    return %0 : tensor<64x512x1xbf16>
  }
  func.func private @_where_193(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_214(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_232(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_233(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_var_252(%arg0: tensor<64x512x768xf32>, %arg1: tensor<f32>, %arg2: tensor<i1>, %arg3: tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16> {
    %0 = call @_where_253(%arg2, %arg3) : (tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16>
    %1 = stablehlo.convert %0 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %2 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3 = stablehlo.divide %1, %2 : tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4 = stablehlo.reduce(%3 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %5 = stablehlo.broadcast_in_dim %4, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %6 = stablehlo.multiply %5, %arg0 : tensor<64x512x768xf32>
    %7 = stablehlo.negate %6 : tensor<64x512x768xf32>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %8 = stablehlo.reduce(%7 init: %cst_0) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %9 = stablehlo.reshape %8 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_1 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %10 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %11 = stablehlo.divide %9, %10 : tensor<64x512x1xf32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %12 = stablehlo.reduce(%11 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %13 = stablehlo.broadcast_in_dim %12, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %14 = stablehlo.add %6, %13 : tensor<64x512x768xf32>
    %15 = stablehlo.convert %14 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    return %15 : tensor<64x512x768xbf16>
  }
  func.func private @_where_253(%arg0: tensor<i1>, %arg1: tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<64x512x1xbf16>
    return %1 : tensor<64x512x1xbf16>
  }
  func.func private @closed_call_288(%arg0: tensor<bf16>, %arg1: tensor<64x512x12x512xi1>, %arg2: tensor<64x512x12x512xbf16>, %arg3: tensor<bf16>, %arg4: tensor<64x512x768xi1>, %arg5: tensor<f32>, %arg6: tensor<i1>, %arg7: tensor<bf16>, %arg8: tensor<64x512x768xi1>, %arg9: tensor<f32>, %arg10: tensor<i1>, %arg11: tensor<64x512x768xbf16>, %arg12: tensor<768x768xbf16>, %arg13: tensor<64x512x768xbf16>, %arg14: tensor<768x768xbf16>, %arg15: tensor<768x768xbf16>, %arg16: tensor<64x512x12x64xbf16>, %arg17: tensor<64x512x12x64xbf16>, %arg18: tensor<64x512x12x512xf32>, %arg19: tensor<64x512x12x1xf32>, %arg20: tensor<64x512x12x1xf32>, %arg21: tensor<64x512x12x512xbf16>, %arg22: tensor<64x512x12x64xbf16>, %arg23: tensor<768x768xbf16>, %arg24: tensor<64x512x768xbf16>, %arg25: tensor<64x512x768xf32>, %arg26: tensor<64x512x1xbf16>, %arg27: tensor<64x512x1xbf16>, %arg28: tensor<64x512x1xbf16>, %arg29: tensor<64x512x768xbf16>, %arg30: tensor<64x512x768xbf16>, %arg31: tensor<1x1x768xbf16>, %arg32: tensor<768x3072xbf16>, %arg33: tensor<64x512x768xbf16>, %arg34: tensor<64x512x3072xbf16>, %arg35: tensor<64x512x3072xbf16>, %arg36: tensor<64x512x3072xbf16>, %arg37: tensor<64x512x3072xbf16>, %arg38: tensor<64x512x3072xbf16>, %arg39: tensor<3072x768xbf16>, %arg40: tensor<64x512x3072xbf16>, %arg41: tensor<64x512x768xf32>, %arg42: tensor<64x512x1xbf16>, %arg43: tensor<64x512x1xbf16>, %arg44: tensor<64x512x1xbf16>, %arg45: tensor<64x512x768xbf16>, %arg46: tensor<64x512x768xbf16>, %arg47: tensor<1x1x768xbf16>) -> (tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>) {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %0 = stablehlo.reduce(%arg11 init: %cst) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %1 = stablehlo.reshape %0 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %2 = stablehlo.reduce(%1 init: %cst_0) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %3 = stablehlo.broadcast_in_dim %arg47, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %4 = stablehlo.multiply %3, %arg11 : tensor<64x512x768xbf16>
    %5 = stablehlo.multiply %arg11, %arg46 : tensor<64x512x768xbf16>
    %cst_1 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %6 = stablehlo.reduce(%5 init: %cst_1) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %7 = stablehlo.reshape %6 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %8 = stablehlo.reduce(%7 init: %cst_2) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %9 = stablehlo.multiply %arg45, %4 : tensor<64x512x768xbf16>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %10 = stablehlo.reduce(%9 init: %cst_3) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %11 = stablehlo.reshape %10 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %12 = stablehlo.broadcast_in_dim %arg44, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %13 = stablehlo.multiply %4, %12 : tensor<64x512x768xbf16>
    %14 = stablehlo.negate %13 : tensor<64x512x768xbf16>
    %cst_4 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %15 = stablehlo.reduce(%14 init: %cst_4) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %16 = stablehlo.reshape %15 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %17 = stablehlo.multiply %11, %arg43 : tensor<64x512x1xbf16>
    %18 = stablehlo.multiply %17, %arg42 : tensor<64x512x1xbf16>
    %19 = call @_var_289(%arg41, %arg9, %arg10, %18) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %20 = stablehlo.add %13, %19 : tensor<64x512x768xbf16>
    %21 = stablehlo.convert %16 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %cst_5 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %22 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %23 = stablehlo.divide %21, %22 : tensor<64x512x1xf32>
    %cst_6 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %24 = stablehlo.reduce(%23 init: %cst_6) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %25 = stablehlo.broadcast_in_dim %24, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %26 = stablehlo.convert %25 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    %27 = stablehlo.add %20, %26 : tensor<64x512x768xbf16>
    %cst_7 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %28 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %29 = stablehlo.select %arg8, %27, %28 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %30 = stablehlo.broadcast_in_dim %arg7, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %31 = stablehlo.divide %29, %30 : tensor<64x512x768xbf16>
    %cst_8 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %32 = stablehlo.reduce(%31 init: %cst_8) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %33 = stablehlo.reshape %32 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_9 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %34 = stablehlo.reduce(%33 init: %cst_9) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %35 = stablehlo.dot_general %31, %arg40, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x3072xbf16>) -> tensor<768x3072xbf16>
    %36 = stablehlo.transpose %35, dims = [1, 0] : (tensor<768x3072xbf16>) -> tensor<3072x768xbf16>
    %37 = stablehlo.dot_general %31, %arg39, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<3072x768xbf16>) -> tensor<64x512x3072xbf16>
    %38 = stablehlo.transpose %36, dims = [1, 0] : (tensor<3072x768xbf16>) -> tensor<768x3072xbf16>
    %39 = stablehlo.multiply %arg38, %37 : tensor<64x512x3072xbf16>
    %40 = stablehlo.multiply %37, %arg37 : tensor<64x512x3072xbf16>
    %cst_10 = stablehlo.constant dense<5.000000e-01> : tensor<bf16>
    %41 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %42 = stablehlo.multiply %41, %39 : tensor<64x512x3072xbf16>
    %43 = stablehlo.multiply %42, %arg36 : tensor<64x512x3072xbf16>
    %44 = stablehlo.multiply %43, %arg35 : tensor<64x512x3072xbf16>
    %45 = stablehlo.add %43, %44 : tensor<64x512x3072xbf16>
    %cst_11 = stablehlo.constant dense<7.968750e-01> : tensor<bf16>
    %46 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %47 = stablehlo.multiply %46, %45 : tensor<64x512x3072xbf16>
    %48 = stablehlo.add %40, %47 : tensor<64x512x3072xbf16>
    %cst_12 = stablehlo.constant dense<4.467770e-02> : tensor<bf16>
    %49 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<bf16>) -> tensor<64x512x3072xbf16>
    %50 = stablehlo.multiply %49, %47 : tensor<64x512x3072xbf16>
    %51 = stablehlo.multiply %50, %arg34 : tensor<64x512x3072xbf16>
    %52 = stablehlo.add %48, %51 : tensor<64x512x3072xbf16>
    %cst_13 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %53 = stablehlo.reduce(%52 init: %cst_13) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %54 = stablehlo.reshape %53 : (tensor<3072xbf16>) -> tensor<1x1x3072xbf16>
    %cst_14 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %55 = stablehlo.reduce(%54 init: %cst_14) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xbf16>, tensor<bf16>) -> tensor<3072xbf16>
    %56 = stablehlo.dot_general %52, %arg33, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xbf16>, tensor<64x512x768xbf16>) -> tensor<3072x768xbf16>
    %57 = stablehlo.transpose %56, dims = [1, 0] : (tensor<3072x768xbf16>) -> tensor<768x3072xbf16>
    %58 = stablehlo.dot_general %52, %arg32, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xbf16>, tensor<768x3072xbf16>) -> tensor<64x512x768xbf16>
    %59 = stablehlo.add %27, %58 : tensor<64x512x768xbf16>
    %60 = stablehlo.transpose %57, dims = [1, 0] : (tensor<768x3072xbf16>) -> tensor<3072x768xbf16>
    %cst_15 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %61 = stablehlo.reduce(%59 init: %cst_15) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %62 = stablehlo.reshape %61 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_16 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %63 = stablehlo.reduce(%62 init: %cst_16) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %64 = stablehlo.broadcast_in_dim %arg31, dims = [0, 1, 2] : (tensor<1x1x768xbf16>) -> tensor<64x512x768xbf16>
    %65 = stablehlo.multiply %64, %59 : tensor<64x512x768xbf16>
    %66 = stablehlo.multiply %59, %arg30 : tensor<64x512x768xbf16>
    %cst_17 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %67 = stablehlo.reduce(%66 init: %cst_17) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %68 = stablehlo.reshape %67 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_18 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %69 = stablehlo.reduce(%68 init: %cst_18) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %70 = stablehlo.multiply %arg29, %65 : tensor<64x512x768xbf16>
    %cst_19 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %71 = stablehlo.reduce(%70 init: %cst_19) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %72 = stablehlo.reshape %71 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %73 = stablehlo.broadcast_in_dim %arg28, dims = [0, 1, 2] : (tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %74 = stablehlo.multiply %65, %73 : tensor<64x512x768xbf16>
    %75 = stablehlo.negate %74 : tensor<64x512x768xbf16>
    %cst_20 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %76 = stablehlo.reduce(%75 init: %cst_20) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<64x512xbf16>
    %77 = stablehlo.reshape %76 : (tensor<64x512xbf16>) -> tensor<64x512x1xbf16>
    %78 = stablehlo.multiply %72, %arg27 : tensor<64x512x1xbf16>
    %79 = stablehlo.multiply %78, %arg26 : tensor<64x512x1xbf16>
    %80 = call @_var_289(%arg25, %arg5, %arg6, %79) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16>
    %81 = stablehlo.add %74, %80 : tensor<64x512x768xbf16>
    %82 = stablehlo.convert %77 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %83 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %84 = stablehlo.divide %82, %83 : tensor<64x512x1xf32>
    %cst_21 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %85 = stablehlo.reduce(%84 init: %cst_21) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %86 = stablehlo.broadcast_in_dim %85, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %87 = stablehlo.convert %86 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    %88 = stablehlo.add %81, %87 : tensor<64x512x768xbf16>
    %89 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %90 = stablehlo.select %arg4, %88, %89 : tensor<64x512x768xi1>, tensor<64x512x768xbf16>
    %91 = stablehlo.broadcast_in_dim %arg3, dims = [] : (tensor<bf16>) -> tensor<64x512x768xbf16>
    %92 = stablehlo.divide %90, %91 : tensor<64x512x768xbf16>
    %cst_22 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %93 = stablehlo.reduce(%92 init: %cst_22) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %94 = stablehlo.reshape %93 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_23 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %95 = stablehlo.reduce(%94 init: %cst_23) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %96 = stablehlo.dot_general %92, %arg24, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x768xbf16>) -> tensor<768x768xbf16>
    %97 = stablehlo.transpose %96, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %98 = stablehlo.dot_general %92, %arg23, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %99 = stablehlo.transpose %97, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %100 = stablehlo.reshape %98 : (tensor<64x512x768xbf16>) -> tensor<64x512x12x64xbf16>
    %101 = stablehlo.transpose %100, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xbf16>) -> tensor<64x12x64x512xbf16>
    %102 = stablehlo.dot_general %101, %arg22, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xbf16>, tensor<64x512x12x64xbf16>) -> tensor<64x12x512x512xbf16>
    %103 = stablehlo.transpose %102, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xbf16>) -> tensor<64x512x12x512xbf16>
    %104 = stablehlo.dot_general %101, %arg21, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xbf16>, tensor<64x512x12x512xbf16>) -> tensor<64x12x64x512xbf16>
    %105 = stablehlo.transpose %104, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xbf16>) -> tensor<64x512x12x64xbf16>
    %106 = stablehlo.multiply %103, %arg2 : tensor<64x512x12x512xbf16>
    %107 = stablehlo.convert %106 : (tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xf32>
    %108 = stablehlo.broadcast_in_dim %arg20, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %109 = stablehlo.multiply %107, %108 : tensor<64x512x12x512xf32>
    %110 = stablehlo.multiply %109, %arg18 : tensor<64x512x12x512xf32>
    %cst_24 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %111 = stablehlo.reduce(%110 init: %cst_24) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %112 = stablehlo.reshape %111 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %113 = stablehlo.negate %112 : tensor<64x512x12x1xf32>
    %114 = stablehlo.broadcast_in_dim %arg19, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %115 = stablehlo.divide %107, %114 : tensor<64x512x12x512xf32>
    %cst_25 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %116 = stablehlo.reduce(%113 init: %cst_25) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %117 = stablehlo.broadcast_in_dim %116, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %118 = stablehlo.add %115, %117 : tensor<64x512x12x512xf32>
    %119 = stablehlo.multiply %118, %arg18 : tensor<64x512x12x512xf32>
    %120 = stablehlo.convert %119 : (tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xbf16>
    %121 = call @_where_313(%arg1, %120) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xbf16>
    %122 = stablehlo.transpose %121, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xbf16>) -> tensor<64x12x512x512xbf16>
    %123 = stablehlo.dot_general %122, %arg17, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xbf16>, tensor<64x512x12x64xbf16>) -> tensor<64x12x512x64xbf16>
    %124 = stablehlo.transpose %123, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xbf16>) -> tensor<64x512x12x64xbf16>
    %125 = stablehlo.dot_general %122, %arg16, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xbf16>, tensor<64x512x12x64xbf16>) -> tensor<64x12x512x64xbf16>
    %126 = stablehlo.transpose %125, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xbf16>) -> tensor<64x512x12x64xbf16>
    %127 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<bf16>) -> tensor<64x512x12x64xbf16>
    %128 = stablehlo.divide %124, %127 : tensor<64x512x12x64xbf16>
    %129 = stablehlo.reshape %105 : (tensor<64x512x12x64xbf16>) -> tensor<64x512x768xbf16>
    %130 = stablehlo.reshape %126 : (tensor<64x512x12x64xbf16>) -> tensor<64x512x768xbf16>
    %131 = stablehlo.reshape %128 : (tensor<64x512x12x64xbf16>) -> tensor<64x512x768xbf16>
    %cst_26 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %132 = stablehlo.reduce(%129 init: %cst_26) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %133 = stablehlo.reshape %132 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_27 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %134 = stablehlo.reduce(%133 init: %cst_27) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %135 = stablehlo.dot_general %129, %arg13, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x768xbf16>) -> tensor<768x768xbf16>
    %136 = stablehlo.transpose %135, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %137 = stablehlo.dot_general %129, %arg15, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %138 = stablehlo.add %88, %137 : tensor<64x512x768xbf16>
    %139 = stablehlo.transpose %136, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %140 = stablehlo.reduce(%130 init: %cst_28) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %141 = stablehlo.reshape %140 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %142 = stablehlo.reduce(%141 init: %cst_29) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %143 = stablehlo.dot_general %130, %arg13, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x768xbf16>) -> tensor<768x768xbf16>
    %144 = stablehlo.transpose %143, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %145 = stablehlo.dot_general %130, %arg14, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %146 = stablehlo.add %138, %145 : tensor<64x512x768xbf16>
    %147 = stablehlo.transpose %144, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %cst_30 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %148 = stablehlo.reduce(%131 init: %cst_30) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %149 = stablehlo.reshape %148 : (tensor<768xbf16>) -> tensor<1x1x768xbf16>
    %cst_31 = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %150 = stablehlo.reduce(%149 init: %cst_31) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xbf16>, tensor<bf16>) -> tensor<768xbf16>
    %151 = stablehlo.dot_general %131, %arg13, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<64x512x768xbf16>) -> tensor<768x768xbf16>
    %152 = stablehlo.transpose %151, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    %153 = stablehlo.dot_general %131, %arg12, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xbf16>, tensor<768x768xbf16>) -> tensor<64x512x768xbf16>
    %154 = stablehlo.add %146, %153 : tensor<64x512x768xbf16>
    %155 = stablehlo.transpose %152, dims = [1, 0] : (tensor<768x768xbf16>) -> tensor<768x768xbf16>
    return %154, %155, %150, %139, %134, %147, %142, %99, %95, %69, %63, %60, %55, %38, %34, %8, %2 : tensor<64x512x768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768x768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<3072x768xbf16>, tensor<3072xbf16>, tensor<768x3072xbf16>, tensor<768xbf16>, tensor<768xbf16>, tensor<768xbf16>
  }
  func.func private @_var_289(%arg0: tensor<64x512x768xf32>, %arg1: tensor<f32>, %arg2: tensor<i1>, %arg3: tensor<64x512x1xbf16>) -> tensor<64x512x768xbf16> {
    %0 = call @_where_290(%arg2, %arg3) : (tensor<i1>, tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16>
    %1 = stablehlo.convert %0 : (tensor<64x512x1xbf16>) -> tensor<64x512x1xf32>
    %2 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3 = stablehlo.divide %1, %2 : tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4 = stablehlo.reduce(%3 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %5 = stablehlo.broadcast_in_dim %4, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %6 = stablehlo.multiply %5, %arg0 : tensor<64x512x768xf32>
    %7 = stablehlo.negate %6 : tensor<64x512x768xf32>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %8 = stablehlo.reduce(%7 init: %cst_0) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %9 = stablehlo.reshape %8 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_1 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %10 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %11 = stablehlo.divide %9, %10 : tensor<64x512x1xf32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %12 = stablehlo.reduce(%11 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %13 = stablehlo.broadcast_in_dim %12, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %14 = stablehlo.add %6, %13 : tensor<64x512x768xf32>
    %15 = stablehlo.convert %14 : (tensor<64x512x768xf32>) -> tensor<64x512x768xbf16>
    return %15 : tensor<64x512x768xbf16>
  }
  func.func private @_where_290(%arg0: tensor<i1>, %arg1: tensor<64x512x1xbf16>) -> tensor<64x512x1xbf16> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<bf16>) -> tensor<64x512x1xbf16>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<64x512x1xbf16>
    return %1 : tensor<64x512x1xbf16>
  }
  func.func private @_where_313(%arg0: tensor<64x512x12x512xi1>, %arg1: tensor<64x512x12x512xbf16>) -> tensor<64x512x12x512xbf16> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<bf16>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<bf16>) -> tensor<64x512x12x512xbf16>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xbf16>
    return %1 : tensor<64x512x12x512xbf16>
  }
  func.func private @_where_434(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_484(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
