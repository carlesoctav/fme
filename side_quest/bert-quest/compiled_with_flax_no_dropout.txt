module @jit_train_step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  func.func public @main(%arg0: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg1: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg2: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg3: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg4: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg5: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg6: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg7: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg8: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg9: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg10: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg11: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg12: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg13: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg14: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg15: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg16: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg17: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg18: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg19: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg20: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg21: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg22: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg23: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg24: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg25: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg26: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg27: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg28: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg29: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg30: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg31: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg32: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg33: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg34: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg35: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg36: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg37: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg38: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg39: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg40: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg41: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg42: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg43: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg44: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg45: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg46: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg47: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg48: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg49: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg50: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg51: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg52: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg53: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg54: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg55: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg56: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg57: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg58: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg59: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg60: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg61: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg62: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg63: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg64: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg65: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg66: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg67: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg68: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg69: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg70: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg71: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg72: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg73: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg74: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg75: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg76: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg77: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg78: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg79: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg80: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg81: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg82: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg83: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg84: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg85: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg86: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg87: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg88: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg89: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg90: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg91: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg92: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg93: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg94: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg95: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg96: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg97: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg98: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg99: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg100: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg101: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg102: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg103: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg104: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg105: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg106: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg107: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg108: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg109: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg110: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg111: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg112: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg113: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg114: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg115: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg116: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg117: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg118: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg119: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg120: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg121: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg122: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg123: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg124: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg125: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg126: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg127: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg128: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg129: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg130: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg131: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg132: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg133: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg134: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg135: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg136: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg137: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg138: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg139: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg140: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg141: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg142: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg143: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg144: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg145: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg146: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg147: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg148: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg149: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg150: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg151: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg152: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg153: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg154: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg155: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg156: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg157: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg158: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg159: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg160: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg161: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg162: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg163: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg164: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg165: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg166: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg167: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg168: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg169: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg170: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg171: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg172: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg173: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg174: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg175: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg176: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg177: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg178: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg179: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg180: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg181: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg182: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg183: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg184: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg185: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg186: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg187: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg188: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg189: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg190: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg191: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg192: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg193: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg194: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg195: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg196: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg197: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg198: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg199: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg200: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg201: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg202: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg203: tensor<i32>, %arg204: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg205: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg206: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg207: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg208: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg209: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg210: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg211: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg212: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg213: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg214: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg215: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg216: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg217: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg218: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg219: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg220: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg221: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg222: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg223: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg224: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg225: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg226: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg227: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg228: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg229: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg230: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg231: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg232: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg233: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg234: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg235: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg236: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg237: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg238: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg239: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg240: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg241: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg242: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg243: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg244: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg245: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg246: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg247: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg248: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg249: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg250: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg251: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg252: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg253: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg254: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg255: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg256: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg257: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg258: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg259: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg260: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg261: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg262: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg263: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg264: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg265: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg266: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg267: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg268: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg269: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg270: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg271: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg272: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg273: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg274: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg275: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg276: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg277: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg278: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg279: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg280: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg281: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg282: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg283: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg284: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg285: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg286: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg287: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg288: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg289: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg290: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg291: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg292: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg293: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg294: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg295: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg296: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg297: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg298: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg299: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg300: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg301: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg302: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg303: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg304: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg305: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg306: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg307: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg308: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg309: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg310: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg311: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg312: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg313: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg314: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg315: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg316: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg317: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg318: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg319: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg320: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg321: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg322: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg323: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg324: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg325: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg326: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg327: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg328: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg329: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg330: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg331: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg332: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg333: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg334: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg335: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg336: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg337: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg338: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg339: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg340: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg341: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg342: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg343: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg344: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg345: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg346: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg347: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg348: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg349: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg350: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg351: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg352: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg353: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg354: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg355: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg356: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg357: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg358: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg359: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg360: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg361: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg362: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg363: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg364: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg365: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg366: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg367: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg368: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg369: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg370: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg371: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg372: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg373: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg374: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg375: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg376: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg377: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg378: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg379: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg380: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg381: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg382: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg383: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg384: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg385: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg386: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg387: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg388: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg389: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg390: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg391: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg392: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg393: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg394: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg395: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg396: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg397: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg398: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg399: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg400: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg401: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg402: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg403: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg404: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg405: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg406: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg407: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg408: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg409: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg410: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg411: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg412: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg413: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg414: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg415: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg416: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg417: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg418: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg419: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg420: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg421: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg422: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg423: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg424: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg425: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg426: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg427: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg428: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg429: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg430: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg431: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg432: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg433: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg434: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg435: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg436: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg437: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg438: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg439: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg440: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg441: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg442: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg443: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg444: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg445: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg446: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg447: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg448: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg449: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg450: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg451: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg452: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg453: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg454: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg455: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg456: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg457: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg458: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg459: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg460: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg461: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg462: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg463: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg464: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg465: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg466: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg467: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg468: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg469: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg470: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg471: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg472: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg473: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg474: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg475: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg476: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg477: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg478: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg479: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg480: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg481: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg482: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg483: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg484: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg485: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg486: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg487: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg488: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg489: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg490: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg491: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg492: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg493: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg494: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg495: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg496: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg497: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg498: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg499: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg500: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg501: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg502: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg503: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg504: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg505: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg506: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg507: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg508: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg509: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg510: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg511: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg512: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg513: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg514: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg515: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg516: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg517: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg518: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg519: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg520: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg521: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg522: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg523: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg524: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg525: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg526: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg527: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg528: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg529: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg530: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg531: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg532: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg533: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg534: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg535: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg536: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg537: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg538: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg539: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg540: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg541: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg542: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg543: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg544: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg545: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg546: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg547: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg548: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg549: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg550: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg551: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg552: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg553: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg554: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg555: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg556: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg557: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg558: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg559: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg560: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg561: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg562: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg563: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg564: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg565: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg566: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg567: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg568: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg569: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg570: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg571: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg572: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg573: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg574: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg575: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg576: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg577: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg578: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg579: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg580: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg581: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg582: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg583: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg584: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg585: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg586: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg587: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg588: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg589: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg590: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg591: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg592: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg593: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg594: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg595: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg596: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg597: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg598: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg599: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg600: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg601: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg602: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg603: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg604: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg605: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg606: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg607: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg608: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg609: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg610: tensor<i32>, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg612: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg613: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg614: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}) -> (tensor<512x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].params['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][0].count"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['scale']"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[2]['total_token']"}) {
    %0 = stablehlo.iota dim = 0 : tensor<512xi32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %3 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %4 = stablehlo.compare  LT, %arg611, %3,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %5 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %6 = stablehlo.add %arg611, %5 : tensor<64x512xi32>
    %7 = stablehlo.select %4, %6, %arg611 : tensor<64x512xi1>, tensor<64x512xi32>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %9 = "stablehlo.gather"(%arg2, %8) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %10 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %11 = stablehlo.compare  LT, %2, %10,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %12 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %13 = stablehlo.add %2, %12 : tensor<64x512xi32>
    %14 = stablehlo.select %11, %13, %2 : tensor<64x512xi1>, tensor<64x512xi32>
    %15 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %16 = "stablehlo.gather"(%arg0, %15) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %17 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %18 = stablehlo.compare  LT, %arg613, %17,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %20 = stablehlo.add %arg613, %19 : tensor<64x512xi32>
    %21 = stablehlo.select %18, %20, %arg613 : tensor<64x512xi1>, tensor<64x512xi32>
    %22 = stablehlo.broadcast_in_dim %21, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %23 = "stablehlo.gather"(%arg1, %22) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %24 = stablehlo.add %16, %23 : tensor<64x512x768xf32>
    %25 = stablehlo.add %24, %9 : tensor<64x512x768xf32>
    %26 = stablehlo.multiply %25, %25 : tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %27 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %28 = stablehlo.multiply %27, %25 : tensor<64x512x768xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %29 = stablehlo.reduce(%25 init: %cst_3) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_4 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %31 = stablehlo.divide %29, %30 : tensor<64x512xf32>
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %32 = stablehlo.reduce(%26 init: %cst_5) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %33 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %34 = stablehlo.divide %32, %33 : tensor<64x512xf32>
    %35 = stablehlo.multiply %31, %31 : tensor<64x512xf32>
    %36 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %37 = stablehlo.multiply %36, %31 : tensor<64x512xf32>
    %38 = stablehlo.subtract %34, %35 : tensor<64x512xf32>
    %cst_6 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %39 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %40 = stablehlo.maximum %39, %38 : tensor<64x512xf32>
    %41 = stablehlo.compare  EQ, %38, %40,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %cst_7 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %42 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %43 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %44 = stablehlo.select %41, %42, %43 : tensor<64x512xi1>, tensor<64x512xf32>
    %45 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %46 = stablehlo.compare  EQ, %45, %40,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %47 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %48 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %49 = stablehlo.select %46, %47, %48 : tensor<64x512xi1>, tensor<64x512xf32>
    %50 = stablehlo.divide %44, %49 : tensor<64x512xf32>
    %51 = stablehlo.broadcast_in_dim %31, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %52 = stablehlo.broadcast_in_dim %40, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %53 = stablehlo.broadcast_in_dim %51, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %54 = stablehlo.subtract %25, %53 : tensor<64x512x768xf32>
    %cst_8 = stablehlo.constant dense<9.99999996E-13> : tensor<f32>
    %55 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %56 = stablehlo.add %52, %55 : tensor<64x512x1xf32>
    %57 = stablehlo.rsqrt %56 : tensor<64x512x1xf32>
    %58 = stablehlo.divide %57, %56 : tensor<64x512x1xf32>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<f32>
    %59 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %60 = stablehlo.multiply %59, %58 : tensor<64x512x1xf32>
    %61 = stablehlo.reshape %arg196 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %62 = stablehlo.broadcast_in_dim %57, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %63 = stablehlo.broadcast_in_dim %61, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %64 = stablehlo.multiply %62, %63 : tensor<64x512x768xf32>
    %65 = stablehlo.multiply %54, %64 : tensor<64x512x768xf32>
    %66 = stablehlo.reshape %arg195 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %67 = stablehlo.broadcast_in_dim %66, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %68 = stablehlo.add %65, %67 : tensor<64x512x768xf32>
    %69 = stablehlo.broadcast_in_dim %arg612, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %70 = stablehlo.broadcast_in_dim %arg612, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %71 = stablehlo.broadcast_in_dim %69, dims = [0, 1, 2] : (tensor<64x512x1xi32>) -> tensor<64x512x512xi32>
    %72 = stablehlo.broadcast_in_dim %70, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %73 = stablehlo.multiply %71, %72 : tensor<64x512x512xi32>
    %74 = stablehlo.broadcast_in_dim %73, dims = [0, 2, 3] : (tensor<64x512x512xi32>) -> tensor<64x1x512x512xi32>
    %75 = stablehlo.convert %74 : (tensor<64x1x512x512xi32>) -> tensor<64x1x512x512xf32>
    %76 = stablehlo.reshape %arg6 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %77 = stablehlo.dot_general %68, %76, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %78 = stablehlo.reshape %arg5 : (tensor<768xf32>) -> tensor<12x64xf32>
    %79 = stablehlo.broadcast_in_dim %78, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %80 = stablehlo.broadcast_in_dim %79, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %81 = stablehlo.broadcast_in_dim %80, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %82 = stablehlo.add %77, %81 : tensor<64x512x12x64xf32>
    %83 = stablehlo.reshape %arg4 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %84 = stablehlo.dot_general %68, %83, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %85 = stablehlo.reshape %arg3 : (tensor<768xf32>) -> tensor<12x64xf32>
    %86 = stablehlo.broadcast_in_dim %85, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %87 = stablehlo.broadcast_in_dim %86, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %88 = stablehlo.broadcast_in_dim %87, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %89 = stablehlo.add %84, %88 : tensor<64x512x12x64xf32>
    %90 = stablehlo.reshape %arg8 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %91 = stablehlo.dot_general %68, %90, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %92 = stablehlo.reshape %arg7 : (tensor<768xf32>) -> tensor<12x64xf32>
    %93 = stablehlo.broadcast_in_dim %92, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %94 = stablehlo.broadcast_in_dim %93, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %95 = stablehlo.broadcast_in_dim %94, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %96 = stablehlo.add %91, %95 : tensor<64x512x12x64xf32>
    %97 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %98 = stablehlo.compare  GT, %75, %97,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %cst_10 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %99 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %100 = stablehlo.convert %99 : tensor<64x1x512x512xf32>
    %cst_11 = stablehlo.constant dense<-1.000000e+10> : tensor<f32>
    %101 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %102 = stablehlo.convert %101 : tensor<64x1x512x512xf32>
    %103 = stablehlo.select %98, %100, %102 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %cst_12 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %104 = stablehlo.sqrt %cst_12 : tensor<f32>
    %105 = stablehlo.convert %104 : tensor<f32>
    %106 = stablehlo.broadcast_in_dim %105, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %107 = stablehlo.divide %82, %106 : tensor<64x512x12x64xf32>
    %108 = stablehlo.dot_general %107, %89, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %109 = stablehlo.broadcast_in_dim %103, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %110 = stablehlo.add %108, %109 : tensor<64x12x512x512xf32>
    %cst_13 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %111 = stablehlo.reduce(%110 init: %cst_13) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %cst_14 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %112 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %113 = stablehlo.maximum %112, %111 : tensor<64x12x512xf32>
    %114 = stablehlo.broadcast_in_dim %113, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %115 = stablehlo.broadcast_in_dim %114, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %116 = stablehlo.subtract %110, %115 : tensor<64x12x512x512xf32>
    %117 = stablehlo.exponential %116 : tensor<64x12x512x512xf32>
    %cst_15 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %118 = stablehlo.reduce(%117 init: %cst_15) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %119 = stablehlo.broadcast_in_dim %118, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %120 = stablehlo.broadcast_in_dim %119, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %121 = stablehlo.divide %117, %120 : tensor<64x12x512x512xf32>
    %122 = stablehlo.multiply %119, %119 : tensor<64x12x512x1xf32>
    %cst_16 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %123 = stablehlo.broadcast_in_dim %cst_16, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %124 = stablehlo.divide %123, %122 : tensor<64x12x512x1xf32>
    %125 = stablehlo.dot_general %96, %121, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %126 = stablehlo.transpose %125, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %127 = stablehlo.reshape %arg10 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %128 = stablehlo.dot_general %126, %127, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %129 = stablehlo.broadcast_in_dim %arg9, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %130 = stablehlo.broadcast_in_dim %129, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %131 = stablehlo.broadcast_in_dim %130, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %132 = stablehlo.add %128, %131 : tensor<64x512x768xf32>
    %133 = stablehlo.add %132, %68 : tensor<64x512x768xf32>
    %134 = stablehlo.multiply %133, %133 : tensor<64x512x768xf32>
    %135 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %136 = stablehlo.multiply %135, %133 : tensor<64x512x768xf32>
    %cst_17 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %137 = stablehlo.reduce(%133 init: %cst_17) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %138 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %139 = stablehlo.divide %137, %138 : tensor<64x512xf32>
    %cst_18 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %140 = stablehlo.reduce(%134 init: %cst_18) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %141 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %142 = stablehlo.divide %140, %141 : tensor<64x512xf32>
    %143 = stablehlo.multiply %139, %139 : tensor<64x512xf32>
    %144 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %145 = stablehlo.multiply %144, %139 : tensor<64x512xf32>
    %146 = stablehlo.subtract %142, %143 : tensor<64x512xf32>
    %147 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %148 = stablehlo.maximum %147, %146 : tensor<64x512xf32>
    %149 = stablehlo.compare  EQ, %146, %148,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %150 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %151 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %152 = stablehlo.select %149, %150, %151 : tensor<64x512xi1>, tensor<64x512xf32>
    %153 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %154 = stablehlo.compare  EQ, %153, %148,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %155 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %156 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %157 = stablehlo.select %154, %155, %156 : tensor<64x512xi1>, tensor<64x512xf32>
    %158 = stablehlo.divide %152, %157 : tensor<64x512xf32>
    %159 = stablehlo.broadcast_in_dim %139, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %160 = stablehlo.broadcast_in_dim %148, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %161 = stablehlo.broadcast_in_dim %159, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %162 = stablehlo.subtract %133, %161 : tensor<64x512x768xf32>
    %163 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %164 = stablehlo.add %160, %163 : tensor<64x512x1xf32>
    %165 = stablehlo.rsqrt %164 : tensor<64x512x1xf32>
    %166 = stablehlo.divide %165, %164 : tensor<64x512x1xf32>
    %167 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %168 = stablehlo.multiply %167, %166 : tensor<64x512x1xf32>
    %169 = stablehlo.reshape %arg12 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %170 = stablehlo.broadcast_in_dim %165, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %171 = stablehlo.broadcast_in_dim %169, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %172 = stablehlo.multiply %170, %171 : tensor<64x512x768xf32>
    %173 = stablehlo.multiply %162, %172 : tensor<64x512x768xf32>
    %174 = stablehlo.reshape %arg11 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %175 = stablehlo.broadcast_in_dim %174, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %176 = stablehlo.add %173, %175 : tensor<64x512x768xf32>
    %177 = stablehlo.dot_general %176, %arg18, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %178 = stablehlo.broadcast_in_dim %arg17, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %179 = stablehlo.broadcast_in_dim %178, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %180 = stablehlo.broadcast_in_dim %179, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %181 = stablehlo.add %177, %180 : tensor<64x512x3072xf32>
    %182 = stablehlo.multiply %181, %181 : tensor<64x512x3072xf32>
    %183 = stablehlo.multiply %182, %181 : tensor<64x512x3072xf32>
    %184 = stablehlo.multiply %181, %181 : tensor<64x512x3072xf32>
    %cst_19 = stablehlo.constant dense<3.000000e+00> : tensor<f32>
    %185 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %186 = stablehlo.multiply %185, %184 : tensor<64x512x3072xf32>
    %cst_20 = stablehlo.constant dense<4.471500e-02> : tensor<f32>
    %187 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %188 = stablehlo.multiply %187, %183 : tensor<64x512x3072xf32>
    %189 = stablehlo.add %181, %188 : tensor<64x512x3072xf32>
    %cst_21 = stablehlo.constant dense<0.797884583> : tensor<f32>
    %190 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %191 = stablehlo.multiply %190, %189 : tensor<64x512x3072xf32>
    %192 = stablehlo.tanh %191 : tensor<64x512x3072xf32>
    %193 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %194 = stablehlo.broadcast_in_dim %193, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %195 = stablehlo.subtract %194, %192 : tensor<64x512x3072xf32>
    %196 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %197 = stablehlo.add %196, %192 : tensor<64x512x3072xf32>
    %cst_22 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %198 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %199 = stablehlo.multiply %198, %197 : tensor<64x512x3072xf32>
    %200 = stablehlo.multiply %181, %199 : tensor<64x512x3072xf32>
    %201 = stablehlo.dot_general %200, %arg14, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %202 = stablehlo.broadcast_in_dim %arg13, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %203 = stablehlo.broadcast_in_dim %202, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %204 = stablehlo.broadcast_in_dim %203, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %205 = stablehlo.add %201, %204 : tensor<64x512x768xf32>
    %206 = stablehlo.add %205, %176 : tensor<64x512x768xf32>
    %207 = stablehlo.multiply %206, %206 : tensor<64x512x768xf32>
    %208 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %209 = stablehlo.multiply %208, %206 : tensor<64x512x768xf32>
    %cst_23 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %210 = stablehlo.reduce(%206 init: %cst_23) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %211 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %212 = stablehlo.divide %210, %211 : tensor<64x512xf32>
    %cst_24 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %213 = stablehlo.reduce(%207 init: %cst_24) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %214 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %215 = stablehlo.divide %213, %214 : tensor<64x512xf32>
    %216 = stablehlo.multiply %212, %212 : tensor<64x512xf32>
    %217 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %218 = stablehlo.multiply %217, %212 : tensor<64x512xf32>
    %219 = stablehlo.subtract %215, %216 : tensor<64x512xf32>
    %220 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %221 = stablehlo.maximum %220, %219 : tensor<64x512xf32>
    %222 = stablehlo.compare  EQ, %219, %221,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %223 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %224 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %225 = stablehlo.select %222, %223, %224 : tensor<64x512xi1>, tensor<64x512xf32>
    %226 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %227 = stablehlo.compare  EQ, %226, %221,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %228 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %229 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %230 = stablehlo.select %227, %228, %229 : tensor<64x512xi1>, tensor<64x512xf32>
    %231 = stablehlo.divide %225, %230 : tensor<64x512xf32>
    %232 = stablehlo.broadcast_in_dim %212, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %233 = stablehlo.broadcast_in_dim %221, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %234 = stablehlo.broadcast_in_dim %232, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %235 = stablehlo.subtract %206, %234 : tensor<64x512x768xf32>
    %236 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %237 = stablehlo.add %233, %236 : tensor<64x512x1xf32>
    %238 = stablehlo.rsqrt %237 : tensor<64x512x1xf32>
    %239 = stablehlo.divide %238, %237 : tensor<64x512x1xf32>
    %240 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %241 = stablehlo.multiply %240, %239 : tensor<64x512x1xf32>
    %242 = stablehlo.reshape %arg16 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %243 = stablehlo.broadcast_in_dim %238, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %244 = stablehlo.broadcast_in_dim %242, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %245 = stablehlo.multiply %243, %244 : tensor<64x512x768xf32>
    %246 = stablehlo.multiply %235, %245 : tensor<64x512x768xf32>
    %247 = stablehlo.reshape %arg15 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %248 = stablehlo.broadcast_in_dim %247, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %249 = stablehlo.add %246, %248 : tensor<64x512x768xf32>
    %250 = stablehlo.reshape %arg22 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %251 = stablehlo.dot_general %249, %250, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %252 = stablehlo.reshape %arg21 : (tensor<768xf32>) -> tensor<12x64xf32>
    %253 = stablehlo.broadcast_in_dim %252, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %254 = stablehlo.broadcast_in_dim %253, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %255 = stablehlo.broadcast_in_dim %254, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %256 = stablehlo.add %251, %255 : tensor<64x512x12x64xf32>
    %257 = stablehlo.reshape %arg20 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %258 = stablehlo.dot_general %249, %257, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %259 = stablehlo.reshape %arg19 : (tensor<768xf32>) -> tensor<12x64xf32>
    %260 = stablehlo.broadcast_in_dim %259, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %261 = stablehlo.broadcast_in_dim %260, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %262 = stablehlo.broadcast_in_dim %261, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %263 = stablehlo.add %258, %262 : tensor<64x512x12x64xf32>
    %264 = stablehlo.reshape %arg24 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %265 = stablehlo.dot_general %249, %264, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %266 = stablehlo.reshape %arg23 : (tensor<768xf32>) -> tensor<12x64xf32>
    %267 = stablehlo.broadcast_in_dim %266, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %268 = stablehlo.broadcast_in_dim %267, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %269 = stablehlo.broadcast_in_dim %268, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %270 = stablehlo.add %265, %269 : tensor<64x512x12x64xf32>
    %271 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %272 = stablehlo.compare  GT, %75, %271,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %273 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %274 = stablehlo.convert %273 : tensor<64x1x512x512xf32>
    %275 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %276 = stablehlo.convert %275 : tensor<64x1x512x512xf32>
    %277 = stablehlo.select %272, %274, %276 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %278 = stablehlo.sqrt %cst_12 : tensor<f32>
    %279 = stablehlo.convert %278 : tensor<f32>
    %280 = stablehlo.broadcast_in_dim %279, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %281 = stablehlo.divide %256, %280 : tensor<64x512x12x64xf32>
    %282 = stablehlo.dot_general %281, %263, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %283 = stablehlo.broadcast_in_dim %277, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %284 = stablehlo.add %282, %283 : tensor<64x12x512x512xf32>
    %cst_25 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %285 = stablehlo.reduce(%284 init: %cst_25) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %286 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %287 = stablehlo.maximum %286, %285 : tensor<64x12x512xf32>
    %288 = stablehlo.broadcast_in_dim %287, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %289 = stablehlo.broadcast_in_dim %288, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %290 = stablehlo.subtract %284, %289 : tensor<64x12x512x512xf32>
    %291 = stablehlo.exponential %290 : tensor<64x12x512x512xf32>
    %cst_26 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %292 = stablehlo.reduce(%291 init: %cst_26) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %293 = stablehlo.broadcast_in_dim %292, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %294 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %295 = stablehlo.divide %291, %294 : tensor<64x12x512x512xf32>
    %296 = stablehlo.multiply %293, %293 : tensor<64x12x512x1xf32>
    %cst_27 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %297 = stablehlo.broadcast_in_dim %cst_27, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %298 = stablehlo.divide %297, %296 : tensor<64x12x512x1xf32>
    %299 = stablehlo.dot_general %270, %295, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %300 = stablehlo.transpose %299, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %301 = stablehlo.reshape %arg26 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %302 = stablehlo.dot_general %300, %301, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %303 = stablehlo.broadcast_in_dim %arg25, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %304 = stablehlo.broadcast_in_dim %303, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %305 = stablehlo.broadcast_in_dim %304, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %306 = stablehlo.add %302, %305 : tensor<64x512x768xf32>
    %307 = stablehlo.add %306, %249 : tensor<64x512x768xf32>
    %308 = stablehlo.multiply %307, %307 : tensor<64x512x768xf32>
    %309 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %310 = stablehlo.multiply %309, %307 : tensor<64x512x768xf32>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %311 = stablehlo.reduce(%307 init: %cst_28) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %312 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %313 = stablehlo.divide %311, %312 : tensor<64x512xf32>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %314 = stablehlo.reduce(%308 init: %cst_29) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %315 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %316 = stablehlo.divide %314, %315 : tensor<64x512xf32>
    %317 = stablehlo.multiply %313, %313 : tensor<64x512xf32>
    %318 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %319 = stablehlo.multiply %318, %313 : tensor<64x512xf32>
    %320 = stablehlo.subtract %316, %317 : tensor<64x512xf32>
    %321 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %322 = stablehlo.maximum %321, %320 : tensor<64x512xf32>
    %323 = stablehlo.compare  EQ, %320, %322,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %324 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %325 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %326 = stablehlo.select %323, %324, %325 : tensor<64x512xi1>, tensor<64x512xf32>
    %327 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %328 = stablehlo.compare  EQ, %327, %322,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %329 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %330 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %331 = stablehlo.select %328, %329, %330 : tensor<64x512xi1>, tensor<64x512xf32>
    %332 = stablehlo.divide %326, %331 : tensor<64x512xf32>
    %333 = stablehlo.broadcast_in_dim %313, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %334 = stablehlo.broadcast_in_dim %322, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %335 = stablehlo.broadcast_in_dim %333, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %336 = stablehlo.subtract %307, %335 : tensor<64x512x768xf32>
    %337 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %338 = stablehlo.add %334, %337 : tensor<64x512x1xf32>
    %339 = stablehlo.rsqrt %338 : tensor<64x512x1xf32>
    %340 = stablehlo.divide %339, %338 : tensor<64x512x1xf32>
    %341 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %342 = stablehlo.multiply %341, %340 : tensor<64x512x1xf32>
    %343 = stablehlo.reshape %arg28 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %344 = stablehlo.broadcast_in_dim %339, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %345 = stablehlo.broadcast_in_dim %343, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %346 = stablehlo.multiply %344, %345 : tensor<64x512x768xf32>
    %347 = stablehlo.multiply %336, %346 : tensor<64x512x768xf32>
    %348 = stablehlo.reshape %arg27 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %349 = stablehlo.broadcast_in_dim %348, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %350 = stablehlo.add %347, %349 : tensor<64x512x768xf32>
    %351 = stablehlo.dot_general %350, %arg34, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %352 = stablehlo.broadcast_in_dim %arg33, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %353 = stablehlo.broadcast_in_dim %352, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %354 = stablehlo.broadcast_in_dim %353, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %355 = stablehlo.add %351, %354 : tensor<64x512x3072xf32>
    %356 = stablehlo.multiply %355, %355 : tensor<64x512x3072xf32>
    %357 = stablehlo.multiply %356, %355 : tensor<64x512x3072xf32>
    %358 = stablehlo.multiply %355, %355 : tensor<64x512x3072xf32>
    %359 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %360 = stablehlo.multiply %359, %358 : tensor<64x512x3072xf32>
    %361 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %362 = stablehlo.multiply %361, %357 : tensor<64x512x3072xf32>
    %363 = stablehlo.add %355, %362 : tensor<64x512x3072xf32>
    %364 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %365 = stablehlo.multiply %364, %363 : tensor<64x512x3072xf32>
    %366 = stablehlo.tanh %365 : tensor<64x512x3072xf32>
    %367 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %368 = stablehlo.broadcast_in_dim %367, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %369 = stablehlo.subtract %368, %366 : tensor<64x512x3072xf32>
    %370 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %371 = stablehlo.add %370, %366 : tensor<64x512x3072xf32>
    %372 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %373 = stablehlo.multiply %372, %371 : tensor<64x512x3072xf32>
    %374 = stablehlo.multiply %355, %373 : tensor<64x512x3072xf32>
    %375 = stablehlo.dot_general %374, %arg30, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %376 = stablehlo.broadcast_in_dim %arg29, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %377 = stablehlo.broadcast_in_dim %376, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %378 = stablehlo.broadcast_in_dim %377, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %379 = stablehlo.add %375, %378 : tensor<64x512x768xf32>
    %380 = stablehlo.add %379, %350 : tensor<64x512x768xf32>
    %381 = stablehlo.multiply %380, %380 : tensor<64x512x768xf32>
    %382 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %383 = stablehlo.multiply %382, %380 : tensor<64x512x768xf32>
    %cst_30 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %384 = stablehlo.reduce(%380 init: %cst_30) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %385 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %386 = stablehlo.divide %384, %385 : tensor<64x512xf32>
    %cst_31 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %387 = stablehlo.reduce(%381 init: %cst_31) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %388 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %389 = stablehlo.divide %387, %388 : tensor<64x512xf32>
    %390 = stablehlo.multiply %386, %386 : tensor<64x512xf32>
    %391 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %392 = stablehlo.multiply %391, %386 : tensor<64x512xf32>
    %393 = stablehlo.subtract %389, %390 : tensor<64x512xf32>
    %394 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %395 = stablehlo.maximum %394, %393 : tensor<64x512xf32>
    %396 = stablehlo.compare  EQ, %393, %395,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %397 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %398 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %399 = stablehlo.select %396, %397, %398 : tensor<64x512xi1>, tensor<64x512xf32>
    %400 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %401 = stablehlo.compare  EQ, %400, %395,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %402 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %403 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %404 = stablehlo.select %401, %402, %403 : tensor<64x512xi1>, tensor<64x512xf32>
    %405 = stablehlo.divide %399, %404 : tensor<64x512xf32>
    %406 = stablehlo.broadcast_in_dim %386, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %407 = stablehlo.broadcast_in_dim %395, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %408 = stablehlo.broadcast_in_dim %406, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %409 = stablehlo.subtract %380, %408 : tensor<64x512x768xf32>
    %410 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %411 = stablehlo.add %407, %410 : tensor<64x512x1xf32>
    %412 = stablehlo.rsqrt %411 : tensor<64x512x1xf32>
    %413 = stablehlo.divide %412, %411 : tensor<64x512x1xf32>
    %414 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %415 = stablehlo.multiply %414, %413 : tensor<64x512x1xf32>
    %416 = stablehlo.reshape %arg32 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %417 = stablehlo.broadcast_in_dim %412, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %418 = stablehlo.broadcast_in_dim %416, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %419 = stablehlo.multiply %417, %418 : tensor<64x512x768xf32>
    %420 = stablehlo.multiply %409, %419 : tensor<64x512x768xf32>
    %421 = stablehlo.reshape %arg31 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %422 = stablehlo.broadcast_in_dim %421, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %423 = stablehlo.add %420, %422 : tensor<64x512x768xf32>
    %424 = stablehlo.reshape %arg70 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %425 = stablehlo.dot_general %423, %424, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %426 = stablehlo.reshape %arg69 : (tensor<768xf32>) -> tensor<12x64xf32>
    %427 = stablehlo.broadcast_in_dim %426, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %428 = stablehlo.broadcast_in_dim %427, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %429 = stablehlo.broadcast_in_dim %428, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %430 = stablehlo.add %425, %429 : tensor<64x512x12x64xf32>
    %431 = stablehlo.reshape %arg68 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %432 = stablehlo.dot_general %423, %431, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %433 = stablehlo.reshape %arg67 : (tensor<768xf32>) -> tensor<12x64xf32>
    %434 = stablehlo.broadcast_in_dim %433, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %435 = stablehlo.broadcast_in_dim %434, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %436 = stablehlo.broadcast_in_dim %435, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %437 = stablehlo.add %432, %436 : tensor<64x512x12x64xf32>
    %438 = stablehlo.reshape %arg72 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %439 = stablehlo.dot_general %423, %438, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %440 = stablehlo.reshape %arg71 : (tensor<768xf32>) -> tensor<12x64xf32>
    %441 = stablehlo.broadcast_in_dim %440, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %442 = stablehlo.broadcast_in_dim %441, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %443 = stablehlo.broadcast_in_dim %442, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %444 = stablehlo.add %439, %443 : tensor<64x512x12x64xf32>
    %445 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %446 = stablehlo.compare  GT, %75, %445,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %447 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %448 = stablehlo.convert %447 : tensor<64x1x512x512xf32>
    %449 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %450 = stablehlo.convert %449 : tensor<64x1x512x512xf32>
    %451 = stablehlo.select %446, %448, %450 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %452 = stablehlo.sqrt %cst_12 : tensor<f32>
    %453 = stablehlo.convert %452 : tensor<f32>
    %454 = stablehlo.broadcast_in_dim %453, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %455 = stablehlo.divide %430, %454 : tensor<64x512x12x64xf32>
    %456 = stablehlo.dot_general %455, %437, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %457 = stablehlo.broadcast_in_dim %451, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %458 = stablehlo.add %456, %457 : tensor<64x12x512x512xf32>
    %cst_32 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %459 = stablehlo.reduce(%458 init: %cst_32) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %460 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %461 = stablehlo.maximum %460, %459 : tensor<64x12x512xf32>
    %462 = stablehlo.broadcast_in_dim %461, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %463 = stablehlo.broadcast_in_dim %462, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %464 = stablehlo.subtract %458, %463 : tensor<64x12x512x512xf32>
    %465 = stablehlo.exponential %464 : tensor<64x12x512x512xf32>
    %cst_33 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %466 = stablehlo.reduce(%465 init: %cst_33) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %467 = stablehlo.broadcast_in_dim %466, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %468 = stablehlo.broadcast_in_dim %467, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %469 = stablehlo.divide %465, %468 : tensor<64x12x512x512xf32>
    %470 = stablehlo.multiply %467, %467 : tensor<64x12x512x1xf32>
    %cst_34 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %471 = stablehlo.broadcast_in_dim %cst_34, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %472 = stablehlo.divide %471, %470 : tensor<64x12x512x1xf32>
    %473 = stablehlo.dot_general %444, %469, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %474 = stablehlo.transpose %473, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %475 = stablehlo.reshape %arg74 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %476 = stablehlo.dot_general %474, %475, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %477 = stablehlo.broadcast_in_dim %arg73, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %478 = stablehlo.broadcast_in_dim %477, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %479 = stablehlo.broadcast_in_dim %478, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %480 = stablehlo.add %476, %479 : tensor<64x512x768xf32>
    %481 = stablehlo.add %480, %423 : tensor<64x512x768xf32>
    %482 = stablehlo.multiply %481, %481 : tensor<64x512x768xf32>
    %483 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %484 = stablehlo.multiply %483, %481 : tensor<64x512x768xf32>
    %cst_35 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %485 = stablehlo.reduce(%481 init: %cst_35) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %486 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %487 = stablehlo.divide %485, %486 : tensor<64x512xf32>
    %cst_36 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %488 = stablehlo.reduce(%482 init: %cst_36) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %489 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %490 = stablehlo.divide %488, %489 : tensor<64x512xf32>
    %491 = stablehlo.multiply %487, %487 : tensor<64x512xf32>
    %492 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %493 = stablehlo.multiply %492, %487 : tensor<64x512xf32>
    %494 = stablehlo.subtract %490, %491 : tensor<64x512xf32>
    %495 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %496 = stablehlo.maximum %495, %494 : tensor<64x512xf32>
    %497 = stablehlo.compare  EQ, %494, %496,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %498 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %499 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %500 = stablehlo.select %497, %498, %499 : tensor<64x512xi1>, tensor<64x512xf32>
    %501 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %502 = stablehlo.compare  EQ, %501, %496,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %503 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %504 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %505 = stablehlo.select %502, %503, %504 : tensor<64x512xi1>, tensor<64x512xf32>
    %506 = stablehlo.divide %500, %505 : tensor<64x512xf32>
    %507 = stablehlo.broadcast_in_dim %487, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %508 = stablehlo.broadcast_in_dim %496, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %509 = stablehlo.broadcast_in_dim %507, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %510 = stablehlo.subtract %481, %509 : tensor<64x512x768xf32>
    %511 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %512 = stablehlo.add %508, %511 : tensor<64x512x1xf32>
    %513 = stablehlo.rsqrt %512 : tensor<64x512x1xf32>
    %514 = stablehlo.divide %513, %512 : tensor<64x512x1xf32>
    %515 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %516 = stablehlo.multiply %515, %514 : tensor<64x512x1xf32>
    %517 = stablehlo.reshape %arg76 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %518 = stablehlo.broadcast_in_dim %513, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %519 = stablehlo.broadcast_in_dim %517, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %520 = stablehlo.multiply %518, %519 : tensor<64x512x768xf32>
    %521 = stablehlo.multiply %510, %520 : tensor<64x512x768xf32>
    %522 = stablehlo.reshape %arg75 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %523 = stablehlo.broadcast_in_dim %522, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %524 = stablehlo.add %521, %523 : tensor<64x512x768xf32>
    %525 = stablehlo.dot_general %524, %arg82, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %526 = stablehlo.broadcast_in_dim %arg81, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %527 = stablehlo.broadcast_in_dim %526, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %528 = stablehlo.broadcast_in_dim %527, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %529 = stablehlo.add %525, %528 : tensor<64x512x3072xf32>
    %530 = stablehlo.multiply %529, %529 : tensor<64x512x3072xf32>
    %531 = stablehlo.multiply %530, %529 : tensor<64x512x3072xf32>
    %532 = stablehlo.multiply %529, %529 : tensor<64x512x3072xf32>
    %533 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %534 = stablehlo.multiply %533, %532 : tensor<64x512x3072xf32>
    %535 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %536 = stablehlo.multiply %535, %531 : tensor<64x512x3072xf32>
    %537 = stablehlo.add %529, %536 : tensor<64x512x3072xf32>
    %538 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %539 = stablehlo.multiply %538, %537 : tensor<64x512x3072xf32>
    %540 = stablehlo.tanh %539 : tensor<64x512x3072xf32>
    %541 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %542 = stablehlo.broadcast_in_dim %541, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %543 = stablehlo.subtract %542, %540 : tensor<64x512x3072xf32>
    %544 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %545 = stablehlo.add %544, %540 : tensor<64x512x3072xf32>
    %546 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %547 = stablehlo.multiply %546, %545 : tensor<64x512x3072xf32>
    %548 = stablehlo.multiply %529, %547 : tensor<64x512x3072xf32>
    %549 = stablehlo.dot_general %548, %arg78, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %550 = stablehlo.broadcast_in_dim %arg77, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %551 = stablehlo.broadcast_in_dim %550, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %552 = stablehlo.broadcast_in_dim %551, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %553 = stablehlo.add %549, %552 : tensor<64x512x768xf32>
    %554 = stablehlo.add %553, %524 : tensor<64x512x768xf32>
    %555 = stablehlo.multiply %554, %554 : tensor<64x512x768xf32>
    %556 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %557 = stablehlo.multiply %556, %554 : tensor<64x512x768xf32>
    %cst_37 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %558 = stablehlo.reduce(%554 init: %cst_37) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %559 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %560 = stablehlo.divide %558, %559 : tensor<64x512xf32>
    %cst_38 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %561 = stablehlo.reduce(%555 init: %cst_38) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %562 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %563 = stablehlo.divide %561, %562 : tensor<64x512xf32>
    %564 = stablehlo.multiply %560, %560 : tensor<64x512xf32>
    %565 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %566 = stablehlo.multiply %565, %560 : tensor<64x512xf32>
    %567 = stablehlo.subtract %563, %564 : tensor<64x512xf32>
    %568 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %569 = stablehlo.maximum %568, %567 : tensor<64x512xf32>
    %570 = stablehlo.compare  EQ, %567, %569,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %571 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %572 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %573 = stablehlo.select %570, %571, %572 : tensor<64x512xi1>, tensor<64x512xf32>
    %574 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %575 = stablehlo.compare  EQ, %574, %569,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %576 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %577 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %578 = stablehlo.select %575, %576, %577 : tensor<64x512xi1>, tensor<64x512xf32>
    %579 = stablehlo.divide %573, %578 : tensor<64x512xf32>
    %580 = stablehlo.broadcast_in_dim %560, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %581 = stablehlo.broadcast_in_dim %569, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %582 = stablehlo.broadcast_in_dim %580, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %583 = stablehlo.subtract %554, %582 : tensor<64x512x768xf32>
    %584 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %585 = stablehlo.add %581, %584 : tensor<64x512x1xf32>
    %586 = stablehlo.rsqrt %585 : tensor<64x512x1xf32>
    %587 = stablehlo.divide %586, %585 : tensor<64x512x1xf32>
    %588 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %589 = stablehlo.multiply %588, %587 : tensor<64x512x1xf32>
    %590 = stablehlo.reshape %arg80 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %591 = stablehlo.broadcast_in_dim %586, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %592 = stablehlo.broadcast_in_dim %590, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %593 = stablehlo.multiply %591, %592 : tensor<64x512x768xf32>
    %594 = stablehlo.multiply %583, %593 : tensor<64x512x768xf32>
    %595 = stablehlo.reshape %arg79 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %596 = stablehlo.broadcast_in_dim %595, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %597 = stablehlo.add %594, %596 : tensor<64x512x768xf32>
    %598 = stablehlo.reshape %arg86 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %599 = stablehlo.dot_general %597, %598, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %600 = stablehlo.reshape %arg85 : (tensor<768xf32>) -> tensor<12x64xf32>
    %601 = stablehlo.broadcast_in_dim %600, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %602 = stablehlo.broadcast_in_dim %601, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %603 = stablehlo.broadcast_in_dim %602, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %604 = stablehlo.add %599, %603 : tensor<64x512x12x64xf32>
    %605 = stablehlo.reshape %arg84 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %606 = stablehlo.dot_general %597, %605, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %607 = stablehlo.reshape %arg83 : (tensor<768xf32>) -> tensor<12x64xf32>
    %608 = stablehlo.broadcast_in_dim %607, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %609 = stablehlo.broadcast_in_dim %608, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %610 = stablehlo.broadcast_in_dim %609, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %611 = stablehlo.add %606, %610 : tensor<64x512x12x64xf32>
    %612 = stablehlo.reshape %arg88 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %613 = stablehlo.dot_general %597, %612, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %614 = stablehlo.reshape %arg87 : (tensor<768xf32>) -> tensor<12x64xf32>
    %615 = stablehlo.broadcast_in_dim %614, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %616 = stablehlo.broadcast_in_dim %615, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %617 = stablehlo.broadcast_in_dim %616, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %618 = stablehlo.add %613, %617 : tensor<64x512x12x64xf32>
    %619 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %620 = stablehlo.compare  GT, %75, %619,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %621 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %622 = stablehlo.convert %621 : tensor<64x1x512x512xf32>
    %623 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %624 = stablehlo.convert %623 : tensor<64x1x512x512xf32>
    %625 = stablehlo.select %620, %622, %624 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %626 = stablehlo.sqrt %cst_12 : tensor<f32>
    %627 = stablehlo.convert %626 : tensor<f32>
    %628 = stablehlo.broadcast_in_dim %627, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %629 = stablehlo.divide %604, %628 : tensor<64x512x12x64xf32>
    %630 = stablehlo.dot_general %629, %611, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %631 = stablehlo.broadcast_in_dim %625, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %632 = stablehlo.add %630, %631 : tensor<64x12x512x512xf32>
    %cst_39 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %633 = stablehlo.reduce(%632 init: %cst_39) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %634 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %635 = stablehlo.maximum %634, %633 : tensor<64x12x512xf32>
    %636 = stablehlo.broadcast_in_dim %635, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %637 = stablehlo.broadcast_in_dim %636, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %638 = stablehlo.subtract %632, %637 : tensor<64x12x512x512xf32>
    %639 = stablehlo.exponential %638 : tensor<64x12x512x512xf32>
    %cst_40 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %640 = stablehlo.reduce(%639 init: %cst_40) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %641 = stablehlo.broadcast_in_dim %640, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %642 = stablehlo.broadcast_in_dim %641, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %643 = stablehlo.divide %639, %642 : tensor<64x12x512x512xf32>
    %644 = stablehlo.multiply %641, %641 : tensor<64x12x512x1xf32>
    %cst_41 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %645 = stablehlo.broadcast_in_dim %cst_41, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %646 = stablehlo.divide %645, %644 : tensor<64x12x512x1xf32>
    %647 = stablehlo.dot_general %618, %643, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %648 = stablehlo.transpose %647, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %649 = stablehlo.reshape %arg90 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %650 = stablehlo.dot_general %648, %649, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %651 = stablehlo.broadcast_in_dim %arg89, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %652 = stablehlo.broadcast_in_dim %651, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %653 = stablehlo.broadcast_in_dim %652, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %654 = stablehlo.add %650, %653 : tensor<64x512x768xf32>
    %655 = stablehlo.add %654, %597 : tensor<64x512x768xf32>
    %656 = stablehlo.multiply %655, %655 : tensor<64x512x768xf32>
    %657 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %658 = stablehlo.multiply %657, %655 : tensor<64x512x768xf32>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %659 = stablehlo.reduce(%655 init: %cst_42) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %660 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %661 = stablehlo.divide %659, %660 : tensor<64x512xf32>
    %cst_43 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %662 = stablehlo.reduce(%656 init: %cst_43) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %663 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %664 = stablehlo.divide %662, %663 : tensor<64x512xf32>
    %665 = stablehlo.multiply %661, %661 : tensor<64x512xf32>
    %666 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %667 = stablehlo.multiply %666, %661 : tensor<64x512xf32>
    %668 = stablehlo.subtract %664, %665 : tensor<64x512xf32>
    %669 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %670 = stablehlo.maximum %669, %668 : tensor<64x512xf32>
    %671 = stablehlo.compare  EQ, %668, %670,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %672 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %673 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %674 = stablehlo.select %671, %672, %673 : tensor<64x512xi1>, tensor<64x512xf32>
    %675 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %676 = stablehlo.compare  EQ, %675, %670,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %677 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %678 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %679 = stablehlo.select %676, %677, %678 : tensor<64x512xi1>, tensor<64x512xf32>
    %680 = stablehlo.divide %674, %679 : tensor<64x512xf32>
    %681 = stablehlo.broadcast_in_dim %661, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %682 = stablehlo.broadcast_in_dim %670, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %683 = stablehlo.broadcast_in_dim %681, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %684 = stablehlo.subtract %655, %683 : tensor<64x512x768xf32>
    %685 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %686 = stablehlo.add %682, %685 : tensor<64x512x1xf32>
    %687 = stablehlo.rsqrt %686 : tensor<64x512x1xf32>
    %688 = stablehlo.divide %687, %686 : tensor<64x512x1xf32>
    %689 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %690 = stablehlo.multiply %689, %688 : tensor<64x512x1xf32>
    %691 = stablehlo.reshape %arg92 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %692 = stablehlo.broadcast_in_dim %687, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %693 = stablehlo.broadcast_in_dim %691, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %694 = stablehlo.multiply %692, %693 : tensor<64x512x768xf32>
    %695 = stablehlo.multiply %684, %694 : tensor<64x512x768xf32>
    %696 = stablehlo.reshape %arg91 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %697 = stablehlo.broadcast_in_dim %696, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %698 = stablehlo.add %695, %697 : tensor<64x512x768xf32>
    %699 = stablehlo.dot_general %698, %arg98, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %700 = stablehlo.broadcast_in_dim %arg97, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %701 = stablehlo.broadcast_in_dim %700, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %702 = stablehlo.broadcast_in_dim %701, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %703 = stablehlo.add %699, %702 : tensor<64x512x3072xf32>
    %704 = stablehlo.multiply %703, %703 : tensor<64x512x3072xf32>
    %705 = stablehlo.multiply %704, %703 : tensor<64x512x3072xf32>
    %706 = stablehlo.multiply %703, %703 : tensor<64x512x3072xf32>
    %707 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %708 = stablehlo.multiply %707, %706 : tensor<64x512x3072xf32>
    %709 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %710 = stablehlo.multiply %709, %705 : tensor<64x512x3072xf32>
    %711 = stablehlo.add %703, %710 : tensor<64x512x3072xf32>
    %712 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %713 = stablehlo.multiply %712, %711 : tensor<64x512x3072xf32>
    %714 = stablehlo.tanh %713 : tensor<64x512x3072xf32>
    %715 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %716 = stablehlo.broadcast_in_dim %715, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %717 = stablehlo.subtract %716, %714 : tensor<64x512x3072xf32>
    %718 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %719 = stablehlo.add %718, %714 : tensor<64x512x3072xf32>
    %720 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %721 = stablehlo.multiply %720, %719 : tensor<64x512x3072xf32>
    %722 = stablehlo.multiply %703, %721 : tensor<64x512x3072xf32>
    %723 = stablehlo.dot_general %722, %arg94, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %724 = stablehlo.broadcast_in_dim %arg93, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %725 = stablehlo.broadcast_in_dim %724, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %726 = stablehlo.broadcast_in_dim %725, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %727 = stablehlo.add %723, %726 : tensor<64x512x768xf32>
    %728 = stablehlo.add %727, %698 : tensor<64x512x768xf32>
    %729 = stablehlo.multiply %728, %728 : tensor<64x512x768xf32>
    %730 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %731 = stablehlo.multiply %730, %728 : tensor<64x512x768xf32>
    %cst_44 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %732 = stablehlo.reduce(%728 init: %cst_44) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %733 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %734 = stablehlo.divide %732, %733 : tensor<64x512xf32>
    %cst_45 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %735 = stablehlo.reduce(%729 init: %cst_45) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %736 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %737 = stablehlo.divide %735, %736 : tensor<64x512xf32>
    %738 = stablehlo.multiply %734, %734 : tensor<64x512xf32>
    %739 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %740 = stablehlo.multiply %739, %734 : tensor<64x512xf32>
    %741 = stablehlo.subtract %737, %738 : tensor<64x512xf32>
    %742 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %743 = stablehlo.maximum %742, %741 : tensor<64x512xf32>
    %744 = stablehlo.compare  EQ, %741, %743,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %745 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %746 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %747 = stablehlo.select %744, %745, %746 : tensor<64x512xi1>, tensor<64x512xf32>
    %748 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %749 = stablehlo.compare  EQ, %748, %743,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %750 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %751 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %752 = stablehlo.select %749, %750, %751 : tensor<64x512xi1>, tensor<64x512xf32>
    %753 = stablehlo.divide %747, %752 : tensor<64x512xf32>
    %754 = stablehlo.broadcast_in_dim %734, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %755 = stablehlo.broadcast_in_dim %743, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %756 = stablehlo.broadcast_in_dim %754, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %757 = stablehlo.subtract %728, %756 : tensor<64x512x768xf32>
    %758 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %759 = stablehlo.add %755, %758 : tensor<64x512x1xf32>
    %760 = stablehlo.rsqrt %759 : tensor<64x512x1xf32>
    %761 = stablehlo.divide %760, %759 : tensor<64x512x1xf32>
    %762 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %763 = stablehlo.multiply %762, %761 : tensor<64x512x1xf32>
    %764 = stablehlo.reshape %arg96 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %765 = stablehlo.broadcast_in_dim %760, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %766 = stablehlo.broadcast_in_dim %764, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %767 = stablehlo.multiply %765, %766 : tensor<64x512x768xf32>
    %768 = stablehlo.multiply %757, %767 : tensor<64x512x768xf32>
    %769 = stablehlo.reshape %arg95 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %770 = stablehlo.broadcast_in_dim %769, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %771 = stablehlo.add %768, %770 : tensor<64x512x768xf32>
    %772 = stablehlo.reshape %arg102 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %773 = stablehlo.dot_general %771, %772, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %774 = stablehlo.reshape %arg101 : (tensor<768xf32>) -> tensor<12x64xf32>
    %775 = stablehlo.broadcast_in_dim %774, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %776 = stablehlo.broadcast_in_dim %775, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %777 = stablehlo.broadcast_in_dim %776, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %778 = stablehlo.add %773, %777 : tensor<64x512x12x64xf32>
    %779 = stablehlo.reshape %arg100 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %780 = stablehlo.dot_general %771, %779, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %781 = stablehlo.reshape %arg99 : (tensor<768xf32>) -> tensor<12x64xf32>
    %782 = stablehlo.broadcast_in_dim %781, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %783 = stablehlo.broadcast_in_dim %782, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %784 = stablehlo.broadcast_in_dim %783, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %785 = stablehlo.add %780, %784 : tensor<64x512x12x64xf32>
    %786 = stablehlo.reshape %arg104 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %787 = stablehlo.dot_general %771, %786, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %788 = stablehlo.reshape %arg103 : (tensor<768xf32>) -> tensor<12x64xf32>
    %789 = stablehlo.broadcast_in_dim %788, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %790 = stablehlo.broadcast_in_dim %789, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %791 = stablehlo.broadcast_in_dim %790, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %792 = stablehlo.add %787, %791 : tensor<64x512x12x64xf32>
    %793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %794 = stablehlo.compare  GT, %75, %793,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %795 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %796 = stablehlo.convert %795 : tensor<64x1x512x512xf32>
    %797 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %798 = stablehlo.convert %797 : tensor<64x1x512x512xf32>
    %799 = stablehlo.select %794, %796, %798 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %800 = stablehlo.sqrt %cst_12 : tensor<f32>
    %801 = stablehlo.convert %800 : tensor<f32>
    %802 = stablehlo.broadcast_in_dim %801, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %803 = stablehlo.divide %778, %802 : tensor<64x512x12x64xf32>
    %804 = stablehlo.dot_general %803, %785, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %805 = stablehlo.broadcast_in_dim %799, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %806 = stablehlo.add %804, %805 : tensor<64x12x512x512xf32>
    %cst_46 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %807 = stablehlo.reduce(%806 init: %cst_46) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %808 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %809 = stablehlo.maximum %808, %807 : tensor<64x12x512xf32>
    %810 = stablehlo.broadcast_in_dim %809, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %811 = stablehlo.broadcast_in_dim %810, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %812 = stablehlo.subtract %806, %811 : tensor<64x12x512x512xf32>
    %813 = stablehlo.exponential %812 : tensor<64x12x512x512xf32>
    %cst_47 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %814 = stablehlo.reduce(%813 init: %cst_47) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %815 = stablehlo.broadcast_in_dim %814, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %816 = stablehlo.broadcast_in_dim %815, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %817 = stablehlo.divide %813, %816 : tensor<64x12x512x512xf32>
    %818 = stablehlo.multiply %815, %815 : tensor<64x12x512x1xf32>
    %cst_48 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %819 = stablehlo.broadcast_in_dim %cst_48, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %820 = stablehlo.divide %819, %818 : tensor<64x12x512x1xf32>
    %821 = stablehlo.dot_general %792, %817, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %822 = stablehlo.transpose %821, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %823 = stablehlo.reshape %arg106 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %824 = stablehlo.dot_general %822, %823, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %825 = stablehlo.broadcast_in_dim %arg105, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %826 = stablehlo.broadcast_in_dim %825, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %827 = stablehlo.broadcast_in_dim %826, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %828 = stablehlo.add %824, %827 : tensor<64x512x768xf32>
    %829 = stablehlo.add %828, %771 : tensor<64x512x768xf32>
    %830 = stablehlo.multiply %829, %829 : tensor<64x512x768xf32>
    %831 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %832 = stablehlo.multiply %831, %829 : tensor<64x512x768xf32>
    %cst_49 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %833 = stablehlo.reduce(%829 init: %cst_49) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %834 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %835 = stablehlo.divide %833, %834 : tensor<64x512xf32>
    %cst_50 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %836 = stablehlo.reduce(%830 init: %cst_50) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %837 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %838 = stablehlo.divide %836, %837 : tensor<64x512xf32>
    %839 = stablehlo.multiply %835, %835 : tensor<64x512xf32>
    %840 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %841 = stablehlo.multiply %840, %835 : tensor<64x512xf32>
    %842 = stablehlo.subtract %838, %839 : tensor<64x512xf32>
    %843 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %844 = stablehlo.maximum %843, %842 : tensor<64x512xf32>
    %845 = stablehlo.compare  EQ, %842, %844,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %846 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %847 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %848 = stablehlo.select %845, %846, %847 : tensor<64x512xi1>, tensor<64x512xf32>
    %849 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %850 = stablehlo.compare  EQ, %849, %844,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %851 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %852 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %853 = stablehlo.select %850, %851, %852 : tensor<64x512xi1>, tensor<64x512xf32>
    %854 = stablehlo.divide %848, %853 : tensor<64x512xf32>
    %855 = stablehlo.broadcast_in_dim %835, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %856 = stablehlo.broadcast_in_dim %844, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %857 = stablehlo.broadcast_in_dim %855, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %858 = stablehlo.subtract %829, %857 : tensor<64x512x768xf32>
    %859 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %860 = stablehlo.add %856, %859 : tensor<64x512x1xf32>
    %861 = stablehlo.rsqrt %860 : tensor<64x512x1xf32>
    %862 = stablehlo.divide %861, %860 : tensor<64x512x1xf32>
    %863 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %864 = stablehlo.multiply %863, %862 : tensor<64x512x1xf32>
    %865 = stablehlo.reshape %arg108 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %866 = stablehlo.broadcast_in_dim %861, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %867 = stablehlo.broadcast_in_dim %865, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %868 = stablehlo.multiply %866, %867 : tensor<64x512x768xf32>
    %869 = stablehlo.multiply %858, %868 : tensor<64x512x768xf32>
    %870 = stablehlo.reshape %arg107 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %871 = stablehlo.broadcast_in_dim %870, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %872 = stablehlo.add %869, %871 : tensor<64x512x768xf32>
    %873 = stablehlo.dot_general %872, %arg114, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %874 = stablehlo.broadcast_in_dim %arg113, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %875 = stablehlo.broadcast_in_dim %874, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %876 = stablehlo.broadcast_in_dim %875, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %877 = stablehlo.add %873, %876 : tensor<64x512x3072xf32>
    %878 = stablehlo.multiply %877, %877 : tensor<64x512x3072xf32>
    %879 = stablehlo.multiply %878, %877 : tensor<64x512x3072xf32>
    %880 = stablehlo.multiply %877, %877 : tensor<64x512x3072xf32>
    %881 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %882 = stablehlo.multiply %881, %880 : tensor<64x512x3072xf32>
    %883 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %884 = stablehlo.multiply %883, %879 : tensor<64x512x3072xf32>
    %885 = stablehlo.add %877, %884 : tensor<64x512x3072xf32>
    %886 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %887 = stablehlo.multiply %886, %885 : tensor<64x512x3072xf32>
    %888 = stablehlo.tanh %887 : tensor<64x512x3072xf32>
    %889 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %890 = stablehlo.broadcast_in_dim %889, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %891 = stablehlo.subtract %890, %888 : tensor<64x512x3072xf32>
    %892 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %893 = stablehlo.add %892, %888 : tensor<64x512x3072xf32>
    %894 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %895 = stablehlo.multiply %894, %893 : tensor<64x512x3072xf32>
    %896 = stablehlo.multiply %877, %895 : tensor<64x512x3072xf32>
    %897 = stablehlo.dot_general %896, %arg110, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %898 = stablehlo.broadcast_in_dim %arg109, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %899 = stablehlo.broadcast_in_dim %898, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %900 = stablehlo.broadcast_in_dim %899, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %901 = stablehlo.add %897, %900 : tensor<64x512x768xf32>
    %902 = stablehlo.add %901, %872 : tensor<64x512x768xf32>
    %903 = stablehlo.multiply %902, %902 : tensor<64x512x768xf32>
    %904 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %905 = stablehlo.multiply %904, %902 : tensor<64x512x768xf32>
    %cst_51 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %906 = stablehlo.reduce(%902 init: %cst_51) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %907 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %908 = stablehlo.divide %906, %907 : tensor<64x512xf32>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %909 = stablehlo.reduce(%903 init: %cst_52) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %910 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %911 = stablehlo.divide %909, %910 : tensor<64x512xf32>
    %912 = stablehlo.multiply %908, %908 : tensor<64x512xf32>
    %913 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %914 = stablehlo.multiply %913, %908 : tensor<64x512xf32>
    %915 = stablehlo.subtract %911, %912 : tensor<64x512xf32>
    %916 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %917 = stablehlo.maximum %916, %915 : tensor<64x512xf32>
    %918 = stablehlo.compare  EQ, %915, %917,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %919 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %920 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %921 = stablehlo.select %918, %919, %920 : tensor<64x512xi1>, tensor<64x512xf32>
    %922 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %923 = stablehlo.compare  EQ, %922, %917,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %924 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %925 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %926 = stablehlo.select %923, %924, %925 : tensor<64x512xi1>, tensor<64x512xf32>
    %927 = stablehlo.divide %921, %926 : tensor<64x512xf32>
    %928 = stablehlo.broadcast_in_dim %908, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %929 = stablehlo.broadcast_in_dim %917, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %930 = stablehlo.broadcast_in_dim %928, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %931 = stablehlo.subtract %902, %930 : tensor<64x512x768xf32>
    %932 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %933 = stablehlo.add %929, %932 : tensor<64x512x1xf32>
    %934 = stablehlo.rsqrt %933 : tensor<64x512x1xf32>
    %935 = stablehlo.divide %934, %933 : tensor<64x512x1xf32>
    %936 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %937 = stablehlo.multiply %936, %935 : tensor<64x512x1xf32>
    %938 = stablehlo.reshape %arg112 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %939 = stablehlo.broadcast_in_dim %934, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %940 = stablehlo.broadcast_in_dim %938, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %941 = stablehlo.multiply %939, %940 : tensor<64x512x768xf32>
    %942 = stablehlo.multiply %931, %941 : tensor<64x512x768xf32>
    %943 = stablehlo.reshape %arg111 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %944 = stablehlo.broadcast_in_dim %943, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %945 = stablehlo.add %942, %944 : tensor<64x512x768xf32>
    %946 = stablehlo.reshape %arg118 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %947 = stablehlo.dot_general %945, %946, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %948 = stablehlo.reshape %arg117 : (tensor<768xf32>) -> tensor<12x64xf32>
    %949 = stablehlo.broadcast_in_dim %948, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %950 = stablehlo.broadcast_in_dim %949, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %951 = stablehlo.broadcast_in_dim %950, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %952 = stablehlo.add %947, %951 : tensor<64x512x12x64xf32>
    %953 = stablehlo.reshape %arg116 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %954 = stablehlo.dot_general %945, %953, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %955 = stablehlo.reshape %arg115 : (tensor<768xf32>) -> tensor<12x64xf32>
    %956 = stablehlo.broadcast_in_dim %955, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %957 = stablehlo.broadcast_in_dim %956, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %958 = stablehlo.broadcast_in_dim %957, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %959 = stablehlo.add %954, %958 : tensor<64x512x12x64xf32>
    %960 = stablehlo.reshape %arg120 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %961 = stablehlo.dot_general %945, %960, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %962 = stablehlo.reshape %arg119 : (tensor<768xf32>) -> tensor<12x64xf32>
    %963 = stablehlo.broadcast_in_dim %962, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %964 = stablehlo.broadcast_in_dim %963, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %965 = stablehlo.broadcast_in_dim %964, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %966 = stablehlo.add %961, %965 : tensor<64x512x12x64xf32>
    %967 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %968 = stablehlo.compare  GT, %75, %967,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %969 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %970 = stablehlo.convert %969 : tensor<64x1x512x512xf32>
    %971 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %972 = stablehlo.convert %971 : tensor<64x1x512x512xf32>
    %973 = stablehlo.select %968, %970, %972 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %974 = stablehlo.sqrt %cst_12 : tensor<f32>
    %975 = stablehlo.convert %974 : tensor<f32>
    %976 = stablehlo.broadcast_in_dim %975, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %977 = stablehlo.divide %952, %976 : tensor<64x512x12x64xf32>
    %978 = stablehlo.dot_general %977, %959, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %979 = stablehlo.broadcast_in_dim %973, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %980 = stablehlo.add %978, %979 : tensor<64x12x512x512xf32>
    %cst_53 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %981 = stablehlo.reduce(%980 init: %cst_53) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %982 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %983 = stablehlo.maximum %982, %981 : tensor<64x12x512xf32>
    %984 = stablehlo.broadcast_in_dim %983, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %985 = stablehlo.broadcast_in_dim %984, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %986 = stablehlo.subtract %980, %985 : tensor<64x12x512x512xf32>
    %987 = stablehlo.exponential %986 : tensor<64x12x512x512xf32>
    %cst_54 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %988 = stablehlo.reduce(%987 init: %cst_54) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %989 = stablehlo.broadcast_in_dim %988, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %990 = stablehlo.broadcast_in_dim %989, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %991 = stablehlo.divide %987, %990 : tensor<64x12x512x512xf32>
    %992 = stablehlo.multiply %989, %989 : tensor<64x12x512x1xf32>
    %cst_55 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %993 = stablehlo.broadcast_in_dim %cst_55, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %994 = stablehlo.divide %993, %992 : tensor<64x12x512x1xf32>
    %995 = stablehlo.dot_general %966, %991, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %996 = stablehlo.transpose %995, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %997 = stablehlo.reshape %arg122 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %998 = stablehlo.dot_general %996, %997, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %999 = stablehlo.broadcast_in_dim %arg121, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1000 = stablehlo.broadcast_in_dim %999, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1001 = stablehlo.broadcast_in_dim %1000, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1002 = stablehlo.add %998, %1001 : tensor<64x512x768xf32>
    %1003 = stablehlo.add %1002, %945 : tensor<64x512x768xf32>
    %1004 = stablehlo.multiply %1003, %1003 : tensor<64x512x768xf32>
    %1005 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1006 = stablehlo.multiply %1005, %1003 : tensor<64x512x768xf32>
    %cst_56 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1007 = stablehlo.reduce(%1003 init: %cst_56) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1008 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1009 = stablehlo.divide %1007, %1008 : tensor<64x512xf32>
    %cst_57 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1010 = stablehlo.reduce(%1004 init: %cst_57) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1011 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1012 = stablehlo.divide %1010, %1011 : tensor<64x512xf32>
    %1013 = stablehlo.multiply %1009, %1009 : tensor<64x512xf32>
    %1014 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1015 = stablehlo.multiply %1014, %1009 : tensor<64x512xf32>
    %1016 = stablehlo.subtract %1012, %1013 : tensor<64x512xf32>
    %1017 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1018 = stablehlo.maximum %1017, %1016 : tensor<64x512xf32>
    %1019 = stablehlo.compare  EQ, %1016, %1018,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1020 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1021 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1022 = stablehlo.select %1019, %1020, %1021 : tensor<64x512xi1>, tensor<64x512xf32>
    %1023 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1024 = stablehlo.compare  EQ, %1023, %1018,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1025 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1026 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1027 = stablehlo.select %1024, %1025, %1026 : tensor<64x512xi1>, tensor<64x512xf32>
    %1028 = stablehlo.divide %1022, %1027 : tensor<64x512xf32>
    %1029 = stablehlo.broadcast_in_dim %1009, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1030 = stablehlo.broadcast_in_dim %1018, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1031 = stablehlo.broadcast_in_dim %1029, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1032 = stablehlo.subtract %1003, %1031 : tensor<64x512x768xf32>
    %1033 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1034 = stablehlo.add %1030, %1033 : tensor<64x512x1xf32>
    %1035 = stablehlo.rsqrt %1034 : tensor<64x512x1xf32>
    %1036 = stablehlo.divide %1035, %1034 : tensor<64x512x1xf32>
    %1037 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1038 = stablehlo.multiply %1037, %1036 : tensor<64x512x1xf32>
    %1039 = stablehlo.reshape %arg124 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1040 = stablehlo.broadcast_in_dim %1035, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1041 = stablehlo.broadcast_in_dim %1039, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1042 = stablehlo.multiply %1040, %1041 : tensor<64x512x768xf32>
    %1043 = stablehlo.multiply %1032, %1042 : tensor<64x512x768xf32>
    %1044 = stablehlo.reshape %arg123 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1045 = stablehlo.broadcast_in_dim %1044, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1046 = stablehlo.add %1043, %1045 : tensor<64x512x768xf32>
    %1047 = stablehlo.dot_general %1046, %arg130, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1048 = stablehlo.broadcast_in_dim %arg129, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1049 = stablehlo.broadcast_in_dim %1048, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1050 = stablehlo.broadcast_in_dim %1049, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1051 = stablehlo.add %1047, %1050 : tensor<64x512x3072xf32>
    %1052 = stablehlo.multiply %1051, %1051 : tensor<64x512x3072xf32>
    %1053 = stablehlo.multiply %1052, %1051 : tensor<64x512x3072xf32>
    %1054 = stablehlo.multiply %1051, %1051 : tensor<64x512x3072xf32>
    %1055 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1056 = stablehlo.multiply %1055, %1054 : tensor<64x512x3072xf32>
    %1057 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1058 = stablehlo.multiply %1057, %1053 : tensor<64x512x3072xf32>
    %1059 = stablehlo.add %1051, %1058 : tensor<64x512x3072xf32>
    %1060 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1061 = stablehlo.multiply %1060, %1059 : tensor<64x512x3072xf32>
    %1062 = stablehlo.tanh %1061 : tensor<64x512x3072xf32>
    %1063 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1064 = stablehlo.broadcast_in_dim %1063, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1065 = stablehlo.subtract %1064, %1062 : tensor<64x512x3072xf32>
    %1066 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1067 = stablehlo.add %1066, %1062 : tensor<64x512x3072xf32>
    %1068 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1069 = stablehlo.multiply %1068, %1067 : tensor<64x512x3072xf32>
    %1070 = stablehlo.multiply %1051, %1069 : tensor<64x512x3072xf32>
    %1071 = stablehlo.dot_general %1070, %arg126, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1072 = stablehlo.broadcast_in_dim %arg125, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1073 = stablehlo.broadcast_in_dim %1072, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1074 = stablehlo.broadcast_in_dim %1073, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1075 = stablehlo.add %1071, %1074 : tensor<64x512x768xf32>
    %1076 = stablehlo.add %1075, %1046 : tensor<64x512x768xf32>
    %1077 = stablehlo.multiply %1076, %1076 : tensor<64x512x768xf32>
    %1078 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1079 = stablehlo.multiply %1078, %1076 : tensor<64x512x768xf32>
    %cst_58 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1080 = stablehlo.reduce(%1076 init: %cst_58) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1081 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1082 = stablehlo.divide %1080, %1081 : tensor<64x512xf32>
    %cst_59 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1083 = stablehlo.reduce(%1077 init: %cst_59) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1084 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1085 = stablehlo.divide %1083, %1084 : tensor<64x512xf32>
    %1086 = stablehlo.multiply %1082, %1082 : tensor<64x512xf32>
    %1087 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1088 = stablehlo.multiply %1087, %1082 : tensor<64x512xf32>
    %1089 = stablehlo.subtract %1085, %1086 : tensor<64x512xf32>
    %1090 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1091 = stablehlo.maximum %1090, %1089 : tensor<64x512xf32>
    %1092 = stablehlo.compare  EQ, %1089, %1091,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1093 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1094 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1095 = stablehlo.select %1092, %1093, %1094 : tensor<64x512xi1>, tensor<64x512xf32>
    %1096 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1097 = stablehlo.compare  EQ, %1096, %1091,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1098 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1099 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1100 = stablehlo.select %1097, %1098, %1099 : tensor<64x512xi1>, tensor<64x512xf32>
    %1101 = stablehlo.divide %1095, %1100 : tensor<64x512xf32>
    %1102 = stablehlo.broadcast_in_dim %1082, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1103 = stablehlo.broadcast_in_dim %1091, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1104 = stablehlo.broadcast_in_dim %1102, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1105 = stablehlo.subtract %1076, %1104 : tensor<64x512x768xf32>
    %1106 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1107 = stablehlo.add %1103, %1106 : tensor<64x512x1xf32>
    %1108 = stablehlo.rsqrt %1107 : tensor<64x512x1xf32>
    %1109 = stablehlo.divide %1108, %1107 : tensor<64x512x1xf32>
    %1110 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1111 = stablehlo.multiply %1110, %1109 : tensor<64x512x1xf32>
    %1112 = stablehlo.reshape %arg128 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1113 = stablehlo.broadcast_in_dim %1108, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1114 = stablehlo.broadcast_in_dim %1112, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1115 = stablehlo.multiply %1113, %1114 : tensor<64x512x768xf32>
    %1116 = stablehlo.multiply %1105, %1115 : tensor<64x512x768xf32>
    %1117 = stablehlo.reshape %arg127 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1118 = stablehlo.broadcast_in_dim %1117, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1119 = stablehlo.add %1116, %1118 : tensor<64x512x768xf32>
    %1120 = stablehlo.reshape %arg134 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1121 = stablehlo.dot_general %1119, %1120, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1122 = stablehlo.reshape %arg133 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1123 = stablehlo.broadcast_in_dim %1122, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1124 = stablehlo.broadcast_in_dim %1123, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1125 = stablehlo.broadcast_in_dim %1124, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1126 = stablehlo.add %1121, %1125 : tensor<64x512x12x64xf32>
    %1127 = stablehlo.reshape %arg132 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1128 = stablehlo.dot_general %1119, %1127, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1129 = stablehlo.reshape %arg131 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1130 = stablehlo.broadcast_in_dim %1129, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1131 = stablehlo.broadcast_in_dim %1130, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1132 = stablehlo.broadcast_in_dim %1131, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1133 = stablehlo.add %1128, %1132 : tensor<64x512x12x64xf32>
    %1134 = stablehlo.reshape %arg136 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1135 = stablehlo.dot_general %1119, %1134, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1136 = stablehlo.reshape %arg135 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1137 = stablehlo.broadcast_in_dim %1136, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1138 = stablehlo.broadcast_in_dim %1137, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1139 = stablehlo.broadcast_in_dim %1138, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1140 = stablehlo.add %1135, %1139 : tensor<64x512x12x64xf32>
    %1141 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1142 = stablehlo.compare  GT, %75, %1141,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1143 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1144 = stablehlo.convert %1143 : tensor<64x1x512x512xf32>
    %1145 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1146 = stablehlo.convert %1145 : tensor<64x1x512x512xf32>
    %1147 = stablehlo.select %1142, %1144, %1146 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %1148 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1149 = stablehlo.convert %1148 : tensor<f32>
    %1150 = stablehlo.broadcast_in_dim %1149, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1151 = stablehlo.divide %1126, %1150 : tensor<64x512x12x64xf32>
    %1152 = stablehlo.dot_general %1151, %1133, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1153 = stablehlo.broadcast_in_dim %1147, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1154 = stablehlo.add %1152, %1153 : tensor<64x12x512x512xf32>
    %cst_60 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1155 = stablehlo.reduce(%1154 init: %cst_60) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1156 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1157 = stablehlo.maximum %1156, %1155 : tensor<64x12x512xf32>
    %1158 = stablehlo.broadcast_in_dim %1157, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1159 = stablehlo.broadcast_in_dim %1158, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1160 = stablehlo.subtract %1154, %1159 : tensor<64x12x512x512xf32>
    %1161 = stablehlo.exponential %1160 : tensor<64x12x512x512xf32>
    %cst_61 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1162 = stablehlo.reduce(%1161 init: %cst_61) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1163 = stablehlo.broadcast_in_dim %1162, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1164 = stablehlo.broadcast_in_dim %1163, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1165 = stablehlo.divide %1161, %1164 : tensor<64x12x512x512xf32>
    %1166 = stablehlo.multiply %1163, %1163 : tensor<64x12x512x1xf32>
    %cst_62 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1167 = stablehlo.broadcast_in_dim %cst_62, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1168 = stablehlo.divide %1167, %1166 : tensor<64x12x512x1xf32>
    %1169 = stablehlo.dot_general %1140, %1165, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1170 = stablehlo.transpose %1169, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1171 = stablehlo.reshape %arg138 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1172 = stablehlo.dot_general %1170, %1171, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1173 = stablehlo.broadcast_in_dim %arg137, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1174 = stablehlo.broadcast_in_dim %1173, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1175 = stablehlo.broadcast_in_dim %1174, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1176 = stablehlo.add %1172, %1175 : tensor<64x512x768xf32>
    %1177 = stablehlo.add %1176, %1119 : tensor<64x512x768xf32>
    %1178 = stablehlo.multiply %1177, %1177 : tensor<64x512x768xf32>
    %1179 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1180 = stablehlo.multiply %1179, %1177 : tensor<64x512x768xf32>
    %cst_63 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1181 = stablehlo.reduce(%1177 init: %cst_63) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1182 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1183 = stablehlo.divide %1181, %1182 : tensor<64x512xf32>
    %cst_64 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1184 = stablehlo.reduce(%1178 init: %cst_64) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1185 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1186 = stablehlo.divide %1184, %1185 : tensor<64x512xf32>
    %1187 = stablehlo.multiply %1183, %1183 : tensor<64x512xf32>
    %1188 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1189 = stablehlo.multiply %1188, %1183 : tensor<64x512xf32>
    %1190 = stablehlo.subtract %1186, %1187 : tensor<64x512xf32>
    %1191 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1192 = stablehlo.maximum %1191, %1190 : tensor<64x512xf32>
    %1193 = stablehlo.compare  EQ, %1190, %1192,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1194 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1196 = stablehlo.select %1193, %1194, %1195 : tensor<64x512xi1>, tensor<64x512xf32>
    %1197 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1198 = stablehlo.compare  EQ, %1197, %1192,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1199 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1200 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1201 = stablehlo.select %1198, %1199, %1200 : tensor<64x512xi1>, tensor<64x512xf32>
    %1202 = stablehlo.divide %1196, %1201 : tensor<64x512xf32>
    %1203 = stablehlo.broadcast_in_dim %1183, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1204 = stablehlo.broadcast_in_dim %1192, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1205 = stablehlo.broadcast_in_dim %1203, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1206 = stablehlo.subtract %1177, %1205 : tensor<64x512x768xf32>
    %1207 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1208 = stablehlo.add %1204, %1207 : tensor<64x512x1xf32>
    %1209 = stablehlo.rsqrt %1208 : tensor<64x512x1xf32>
    %1210 = stablehlo.divide %1209, %1208 : tensor<64x512x1xf32>
    %1211 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1212 = stablehlo.multiply %1211, %1210 : tensor<64x512x1xf32>
    %1213 = stablehlo.reshape %arg140 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1214 = stablehlo.broadcast_in_dim %1209, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1215 = stablehlo.broadcast_in_dim %1213, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1216 = stablehlo.multiply %1214, %1215 : tensor<64x512x768xf32>
    %1217 = stablehlo.multiply %1206, %1216 : tensor<64x512x768xf32>
    %1218 = stablehlo.reshape %arg139 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1219 = stablehlo.broadcast_in_dim %1218, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1220 = stablehlo.add %1217, %1219 : tensor<64x512x768xf32>
    %1221 = stablehlo.dot_general %1220, %arg146, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1222 = stablehlo.broadcast_in_dim %arg145, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1223 = stablehlo.broadcast_in_dim %1222, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1224 = stablehlo.broadcast_in_dim %1223, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1225 = stablehlo.add %1221, %1224 : tensor<64x512x3072xf32>
    %1226 = stablehlo.multiply %1225, %1225 : tensor<64x512x3072xf32>
    %1227 = stablehlo.multiply %1226, %1225 : tensor<64x512x3072xf32>
    %1228 = stablehlo.multiply %1225, %1225 : tensor<64x512x3072xf32>
    %1229 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1230 = stablehlo.multiply %1229, %1228 : tensor<64x512x3072xf32>
    %1231 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1232 = stablehlo.multiply %1231, %1227 : tensor<64x512x3072xf32>
    %1233 = stablehlo.add %1225, %1232 : tensor<64x512x3072xf32>
    %1234 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1235 = stablehlo.multiply %1234, %1233 : tensor<64x512x3072xf32>
    %1236 = stablehlo.tanh %1235 : tensor<64x512x3072xf32>
    %1237 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1238 = stablehlo.broadcast_in_dim %1237, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1239 = stablehlo.subtract %1238, %1236 : tensor<64x512x3072xf32>
    %1240 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1241 = stablehlo.add %1240, %1236 : tensor<64x512x3072xf32>
    %1242 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1243 = stablehlo.multiply %1242, %1241 : tensor<64x512x3072xf32>
    %1244 = stablehlo.multiply %1225, %1243 : tensor<64x512x3072xf32>
    %1245 = stablehlo.dot_general %1244, %arg142, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1246 = stablehlo.broadcast_in_dim %arg141, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1247 = stablehlo.broadcast_in_dim %1246, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1248 = stablehlo.broadcast_in_dim %1247, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1249 = stablehlo.add %1245, %1248 : tensor<64x512x768xf32>
    %1250 = stablehlo.add %1249, %1220 : tensor<64x512x768xf32>
    %1251 = stablehlo.multiply %1250, %1250 : tensor<64x512x768xf32>
    %1252 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1253 = stablehlo.multiply %1252, %1250 : tensor<64x512x768xf32>
    %cst_65 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1254 = stablehlo.reduce(%1250 init: %cst_65) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1255 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1256 = stablehlo.divide %1254, %1255 : tensor<64x512xf32>
    %cst_66 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1257 = stablehlo.reduce(%1251 init: %cst_66) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1258 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1259 = stablehlo.divide %1257, %1258 : tensor<64x512xf32>
    %1260 = stablehlo.multiply %1256, %1256 : tensor<64x512xf32>
    %1261 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1262 = stablehlo.multiply %1261, %1256 : tensor<64x512xf32>
    %1263 = stablehlo.subtract %1259, %1260 : tensor<64x512xf32>
    %1264 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1265 = stablehlo.maximum %1264, %1263 : tensor<64x512xf32>
    %1266 = stablehlo.compare  EQ, %1263, %1265,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1267 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1268 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1269 = stablehlo.select %1266, %1267, %1268 : tensor<64x512xi1>, tensor<64x512xf32>
    %1270 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1271 = stablehlo.compare  EQ, %1270, %1265,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1272 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1273 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1274 = stablehlo.select %1271, %1272, %1273 : tensor<64x512xi1>, tensor<64x512xf32>
    %1275 = stablehlo.divide %1269, %1274 : tensor<64x512xf32>
    %1276 = stablehlo.broadcast_in_dim %1256, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1277 = stablehlo.broadcast_in_dim %1265, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1278 = stablehlo.broadcast_in_dim %1276, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1279 = stablehlo.subtract %1250, %1278 : tensor<64x512x768xf32>
    %1280 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1281 = stablehlo.add %1277, %1280 : tensor<64x512x1xf32>
    %1282 = stablehlo.rsqrt %1281 : tensor<64x512x1xf32>
    %1283 = stablehlo.divide %1282, %1281 : tensor<64x512x1xf32>
    %1284 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1285 = stablehlo.multiply %1284, %1283 : tensor<64x512x1xf32>
    %1286 = stablehlo.reshape %arg144 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1287 = stablehlo.broadcast_in_dim %1282, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1288 = stablehlo.broadcast_in_dim %1286, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1289 = stablehlo.multiply %1287, %1288 : tensor<64x512x768xf32>
    %1290 = stablehlo.multiply %1279, %1289 : tensor<64x512x768xf32>
    %1291 = stablehlo.reshape %arg143 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1292 = stablehlo.broadcast_in_dim %1291, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1293 = stablehlo.add %1290, %1292 : tensor<64x512x768xf32>
    %1294 = stablehlo.reshape %arg150 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1295 = stablehlo.dot_general %1293, %1294, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1296 = stablehlo.reshape %arg149 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1297 = stablehlo.broadcast_in_dim %1296, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1298 = stablehlo.broadcast_in_dim %1297, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1299 = stablehlo.broadcast_in_dim %1298, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1300 = stablehlo.add %1295, %1299 : tensor<64x512x12x64xf32>
    %1301 = stablehlo.reshape %arg148 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1302 = stablehlo.dot_general %1293, %1301, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1303 = stablehlo.reshape %arg147 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1304 = stablehlo.broadcast_in_dim %1303, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1305 = stablehlo.broadcast_in_dim %1304, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1306 = stablehlo.broadcast_in_dim %1305, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1307 = stablehlo.add %1302, %1306 : tensor<64x512x12x64xf32>
    %1308 = stablehlo.reshape %arg152 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1309 = stablehlo.dot_general %1293, %1308, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1310 = stablehlo.reshape %arg151 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1311 = stablehlo.broadcast_in_dim %1310, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1312 = stablehlo.broadcast_in_dim %1311, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1313 = stablehlo.broadcast_in_dim %1312, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1314 = stablehlo.add %1309, %1313 : tensor<64x512x12x64xf32>
    %1315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1316 = stablehlo.compare  GT, %75, %1315,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1317 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1318 = stablehlo.convert %1317 : tensor<64x1x512x512xf32>
    %1319 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1320 = stablehlo.convert %1319 : tensor<64x1x512x512xf32>
    %1321 = stablehlo.select %1316, %1318, %1320 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %1322 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1323 = stablehlo.convert %1322 : tensor<f32>
    %1324 = stablehlo.broadcast_in_dim %1323, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1325 = stablehlo.divide %1300, %1324 : tensor<64x512x12x64xf32>
    %1326 = stablehlo.dot_general %1325, %1307, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1327 = stablehlo.broadcast_in_dim %1321, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1328 = stablehlo.add %1326, %1327 : tensor<64x12x512x512xf32>
    %cst_67 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1329 = stablehlo.reduce(%1328 init: %cst_67) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1330 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1331 = stablehlo.maximum %1330, %1329 : tensor<64x12x512xf32>
    %1332 = stablehlo.broadcast_in_dim %1331, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1333 = stablehlo.broadcast_in_dim %1332, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1334 = stablehlo.subtract %1328, %1333 : tensor<64x12x512x512xf32>
    %1335 = stablehlo.exponential %1334 : tensor<64x12x512x512xf32>
    %cst_68 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1336 = stablehlo.reduce(%1335 init: %cst_68) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1337 = stablehlo.broadcast_in_dim %1336, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1338 = stablehlo.broadcast_in_dim %1337, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1339 = stablehlo.divide %1335, %1338 : tensor<64x12x512x512xf32>
    %1340 = stablehlo.multiply %1337, %1337 : tensor<64x12x512x1xf32>
    %cst_69 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1341 = stablehlo.broadcast_in_dim %cst_69, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1342 = stablehlo.divide %1341, %1340 : tensor<64x12x512x1xf32>
    %1343 = stablehlo.dot_general %1314, %1339, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1344 = stablehlo.transpose %1343, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1345 = stablehlo.reshape %arg154 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1346 = stablehlo.dot_general %1344, %1345, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1347 = stablehlo.broadcast_in_dim %arg153, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1348 = stablehlo.broadcast_in_dim %1347, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1349 = stablehlo.broadcast_in_dim %1348, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1350 = stablehlo.add %1346, %1349 : tensor<64x512x768xf32>
    %1351 = stablehlo.add %1350, %1293 : tensor<64x512x768xf32>
    %1352 = stablehlo.multiply %1351, %1351 : tensor<64x512x768xf32>
    %1353 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1354 = stablehlo.multiply %1353, %1351 : tensor<64x512x768xf32>
    %cst_70 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1355 = stablehlo.reduce(%1351 init: %cst_70) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1356 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1357 = stablehlo.divide %1355, %1356 : tensor<64x512xf32>
    %cst_71 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1358 = stablehlo.reduce(%1352 init: %cst_71) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1359 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1360 = stablehlo.divide %1358, %1359 : tensor<64x512xf32>
    %1361 = stablehlo.multiply %1357, %1357 : tensor<64x512xf32>
    %1362 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1363 = stablehlo.multiply %1362, %1357 : tensor<64x512xf32>
    %1364 = stablehlo.subtract %1360, %1361 : tensor<64x512xf32>
    %1365 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1366 = stablehlo.maximum %1365, %1364 : tensor<64x512xf32>
    %1367 = stablehlo.compare  EQ, %1364, %1366,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1368 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1369 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1370 = stablehlo.select %1367, %1368, %1369 : tensor<64x512xi1>, tensor<64x512xf32>
    %1371 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1372 = stablehlo.compare  EQ, %1371, %1366,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1373 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1374 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1375 = stablehlo.select %1372, %1373, %1374 : tensor<64x512xi1>, tensor<64x512xf32>
    %1376 = stablehlo.divide %1370, %1375 : tensor<64x512xf32>
    %1377 = stablehlo.broadcast_in_dim %1357, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1378 = stablehlo.broadcast_in_dim %1366, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1379 = stablehlo.broadcast_in_dim %1377, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1380 = stablehlo.subtract %1351, %1379 : tensor<64x512x768xf32>
    %1381 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1382 = stablehlo.add %1378, %1381 : tensor<64x512x1xf32>
    %1383 = stablehlo.rsqrt %1382 : tensor<64x512x1xf32>
    %1384 = stablehlo.divide %1383, %1382 : tensor<64x512x1xf32>
    %1385 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1386 = stablehlo.multiply %1385, %1384 : tensor<64x512x1xf32>
    %1387 = stablehlo.reshape %arg156 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1388 = stablehlo.broadcast_in_dim %1383, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1389 = stablehlo.broadcast_in_dim %1387, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1390 = stablehlo.multiply %1388, %1389 : tensor<64x512x768xf32>
    %1391 = stablehlo.multiply %1380, %1390 : tensor<64x512x768xf32>
    %1392 = stablehlo.reshape %arg155 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1393 = stablehlo.broadcast_in_dim %1392, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1394 = stablehlo.add %1391, %1393 : tensor<64x512x768xf32>
    %1395 = stablehlo.dot_general %1394, %arg162, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1396 = stablehlo.broadcast_in_dim %arg161, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1397 = stablehlo.broadcast_in_dim %1396, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1398 = stablehlo.broadcast_in_dim %1397, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1399 = stablehlo.add %1395, %1398 : tensor<64x512x3072xf32>
    %1400 = stablehlo.multiply %1399, %1399 : tensor<64x512x3072xf32>
    %1401 = stablehlo.multiply %1400, %1399 : tensor<64x512x3072xf32>
    %1402 = stablehlo.multiply %1399, %1399 : tensor<64x512x3072xf32>
    %1403 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1404 = stablehlo.multiply %1403, %1402 : tensor<64x512x3072xf32>
    %1405 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1406 = stablehlo.multiply %1405, %1401 : tensor<64x512x3072xf32>
    %1407 = stablehlo.add %1399, %1406 : tensor<64x512x3072xf32>
    %1408 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1409 = stablehlo.multiply %1408, %1407 : tensor<64x512x3072xf32>
    %1410 = stablehlo.tanh %1409 : tensor<64x512x3072xf32>
    %1411 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1412 = stablehlo.broadcast_in_dim %1411, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1413 = stablehlo.subtract %1412, %1410 : tensor<64x512x3072xf32>
    %1414 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1415 = stablehlo.add %1414, %1410 : tensor<64x512x3072xf32>
    %1416 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1417 = stablehlo.multiply %1416, %1415 : tensor<64x512x3072xf32>
    %1418 = stablehlo.multiply %1399, %1417 : tensor<64x512x3072xf32>
    %1419 = stablehlo.dot_general %1418, %arg158, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1420 = stablehlo.broadcast_in_dim %arg157, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1421 = stablehlo.broadcast_in_dim %1420, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1422 = stablehlo.broadcast_in_dim %1421, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1423 = stablehlo.add %1419, %1422 : tensor<64x512x768xf32>
    %1424 = stablehlo.add %1423, %1394 : tensor<64x512x768xf32>
    %1425 = stablehlo.multiply %1424, %1424 : tensor<64x512x768xf32>
    %1426 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1427 = stablehlo.multiply %1426, %1424 : tensor<64x512x768xf32>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1428 = stablehlo.reduce(%1424 init: %cst_72) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1429 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1430 = stablehlo.divide %1428, %1429 : tensor<64x512xf32>
    %cst_73 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1431 = stablehlo.reduce(%1425 init: %cst_73) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1432 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1433 = stablehlo.divide %1431, %1432 : tensor<64x512xf32>
    %1434 = stablehlo.multiply %1430, %1430 : tensor<64x512xf32>
    %1435 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1436 = stablehlo.multiply %1435, %1430 : tensor<64x512xf32>
    %1437 = stablehlo.subtract %1433, %1434 : tensor<64x512xf32>
    %1438 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1439 = stablehlo.maximum %1438, %1437 : tensor<64x512xf32>
    %1440 = stablehlo.compare  EQ, %1437, %1439,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1441 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1442 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1443 = stablehlo.select %1440, %1441, %1442 : tensor<64x512xi1>, tensor<64x512xf32>
    %1444 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1445 = stablehlo.compare  EQ, %1444, %1439,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1446 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1447 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1448 = stablehlo.select %1445, %1446, %1447 : tensor<64x512xi1>, tensor<64x512xf32>
    %1449 = stablehlo.divide %1443, %1448 : tensor<64x512xf32>
    %1450 = stablehlo.broadcast_in_dim %1430, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1451 = stablehlo.broadcast_in_dim %1439, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1452 = stablehlo.broadcast_in_dim %1450, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1453 = stablehlo.subtract %1424, %1452 : tensor<64x512x768xf32>
    %1454 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1455 = stablehlo.add %1451, %1454 : tensor<64x512x1xf32>
    %1456 = stablehlo.rsqrt %1455 : tensor<64x512x1xf32>
    %1457 = stablehlo.divide %1456, %1455 : tensor<64x512x1xf32>
    %1458 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1459 = stablehlo.multiply %1458, %1457 : tensor<64x512x1xf32>
    %1460 = stablehlo.reshape %arg160 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1461 = stablehlo.broadcast_in_dim %1456, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1462 = stablehlo.broadcast_in_dim %1460, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1463 = stablehlo.multiply %1461, %1462 : tensor<64x512x768xf32>
    %1464 = stablehlo.multiply %1453, %1463 : tensor<64x512x768xf32>
    %1465 = stablehlo.reshape %arg159 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1466 = stablehlo.broadcast_in_dim %1465, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1467 = stablehlo.add %1464, %1466 : tensor<64x512x768xf32>
    %1468 = stablehlo.reshape %arg166 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1469 = stablehlo.dot_general %1467, %1468, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1470 = stablehlo.reshape %arg165 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1471 = stablehlo.broadcast_in_dim %1470, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1472 = stablehlo.broadcast_in_dim %1471, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1473 = stablehlo.broadcast_in_dim %1472, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1474 = stablehlo.add %1469, %1473 : tensor<64x512x12x64xf32>
    %1475 = stablehlo.reshape %arg164 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1476 = stablehlo.dot_general %1467, %1475, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1477 = stablehlo.reshape %arg163 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1478 = stablehlo.broadcast_in_dim %1477, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1479 = stablehlo.broadcast_in_dim %1478, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1480 = stablehlo.broadcast_in_dim %1479, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1481 = stablehlo.add %1476, %1480 : tensor<64x512x12x64xf32>
    %1482 = stablehlo.reshape %arg168 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1483 = stablehlo.dot_general %1467, %1482, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1484 = stablehlo.reshape %arg167 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1485 = stablehlo.broadcast_in_dim %1484, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1486 = stablehlo.broadcast_in_dim %1485, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1487 = stablehlo.broadcast_in_dim %1486, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1488 = stablehlo.add %1483, %1487 : tensor<64x512x12x64xf32>
    %1489 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1490 = stablehlo.compare  GT, %75, %1489,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1491 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1492 = stablehlo.convert %1491 : tensor<64x1x512x512xf32>
    %1493 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1494 = stablehlo.convert %1493 : tensor<64x1x512x512xf32>
    %1495 = stablehlo.select %1490, %1492, %1494 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %1496 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1497 = stablehlo.convert %1496 : tensor<f32>
    %1498 = stablehlo.broadcast_in_dim %1497, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1499 = stablehlo.divide %1474, %1498 : tensor<64x512x12x64xf32>
    %1500 = stablehlo.dot_general %1499, %1481, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1501 = stablehlo.broadcast_in_dim %1495, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1502 = stablehlo.add %1500, %1501 : tensor<64x12x512x512xf32>
    %cst_74 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1503 = stablehlo.reduce(%1502 init: %cst_74) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1504 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1505 = stablehlo.maximum %1504, %1503 : tensor<64x12x512xf32>
    %1506 = stablehlo.broadcast_in_dim %1505, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1507 = stablehlo.broadcast_in_dim %1506, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1508 = stablehlo.subtract %1502, %1507 : tensor<64x12x512x512xf32>
    %1509 = stablehlo.exponential %1508 : tensor<64x12x512x512xf32>
    %cst_75 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1510 = stablehlo.reduce(%1509 init: %cst_75) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1511 = stablehlo.broadcast_in_dim %1510, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1512 = stablehlo.broadcast_in_dim %1511, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1513 = stablehlo.divide %1509, %1512 : tensor<64x12x512x512xf32>
    %1514 = stablehlo.multiply %1511, %1511 : tensor<64x12x512x1xf32>
    %cst_76 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1515 = stablehlo.broadcast_in_dim %cst_76, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1516 = stablehlo.divide %1515, %1514 : tensor<64x12x512x1xf32>
    %1517 = stablehlo.dot_general %1488, %1513, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1518 = stablehlo.transpose %1517, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1519 = stablehlo.reshape %arg170 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1520 = stablehlo.dot_general %1518, %1519, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1521 = stablehlo.broadcast_in_dim %arg169, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1522 = stablehlo.broadcast_in_dim %1521, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1523 = stablehlo.broadcast_in_dim %1522, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1524 = stablehlo.add %1520, %1523 : tensor<64x512x768xf32>
    %1525 = stablehlo.add %1524, %1467 : tensor<64x512x768xf32>
    %1526 = stablehlo.multiply %1525, %1525 : tensor<64x512x768xf32>
    %1527 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1528 = stablehlo.multiply %1527, %1525 : tensor<64x512x768xf32>
    %cst_77 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1529 = stablehlo.reduce(%1525 init: %cst_77) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1530 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1531 = stablehlo.divide %1529, %1530 : tensor<64x512xf32>
    %cst_78 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1532 = stablehlo.reduce(%1526 init: %cst_78) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1533 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1534 = stablehlo.divide %1532, %1533 : tensor<64x512xf32>
    %1535 = stablehlo.multiply %1531, %1531 : tensor<64x512xf32>
    %1536 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1537 = stablehlo.multiply %1536, %1531 : tensor<64x512xf32>
    %1538 = stablehlo.subtract %1534, %1535 : tensor<64x512xf32>
    %1539 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1540 = stablehlo.maximum %1539, %1538 : tensor<64x512xf32>
    %1541 = stablehlo.compare  EQ, %1538, %1540,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1542 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1543 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1544 = stablehlo.select %1541, %1542, %1543 : tensor<64x512xi1>, tensor<64x512xf32>
    %1545 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1546 = stablehlo.compare  EQ, %1545, %1540,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1547 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1548 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1549 = stablehlo.select %1546, %1547, %1548 : tensor<64x512xi1>, tensor<64x512xf32>
    %1550 = stablehlo.divide %1544, %1549 : tensor<64x512xf32>
    %1551 = stablehlo.broadcast_in_dim %1531, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1552 = stablehlo.broadcast_in_dim %1540, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1553 = stablehlo.broadcast_in_dim %1551, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1554 = stablehlo.subtract %1525, %1553 : tensor<64x512x768xf32>
    %1555 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1556 = stablehlo.add %1552, %1555 : tensor<64x512x1xf32>
    %1557 = stablehlo.rsqrt %1556 : tensor<64x512x1xf32>
    %1558 = stablehlo.divide %1557, %1556 : tensor<64x512x1xf32>
    %1559 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1560 = stablehlo.multiply %1559, %1558 : tensor<64x512x1xf32>
    %1561 = stablehlo.reshape %arg172 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1562 = stablehlo.broadcast_in_dim %1557, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1563 = stablehlo.broadcast_in_dim %1561, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1564 = stablehlo.multiply %1562, %1563 : tensor<64x512x768xf32>
    %1565 = stablehlo.multiply %1554, %1564 : tensor<64x512x768xf32>
    %1566 = stablehlo.reshape %arg171 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1567 = stablehlo.broadcast_in_dim %1566, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1568 = stablehlo.add %1565, %1567 : tensor<64x512x768xf32>
    %1569 = stablehlo.dot_general %1568, %arg178, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1570 = stablehlo.broadcast_in_dim %arg177, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1571 = stablehlo.broadcast_in_dim %1570, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1572 = stablehlo.broadcast_in_dim %1571, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1573 = stablehlo.add %1569, %1572 : tensor<64x512x3072xf32>
    %1574 = stablehlo.multiply %1573, %1573 : tensor<64x512x3072xf32>
    %1575 = stablehlo.multiply %1574, %1573 : tensor<64x512x3072xf32>
    %1576 = stablehlo.multiply %1573, %1573 : tensor<64x512x3072xf32>
    %1577 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1578 = stablehlo.multiply %1577, %1576 : tensor<64x512x3072xf32>
    %1579 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1580 = stablehlo.multiply %1579, %1575 : tensor<64x512x3072xf32>
    %1581 = stablehlo.add %1573, %1580 : tensor<64x512x3072xf32>
    %1582 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1583 = stablehlo.multiply %1582, %1581 : tensor<64x512x3072xf32>
    %1584 = stablehlo.tanh %1583 : tensor<64x512x3072xf32>
    %1585 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1586 = stablehlo.broadcast_in_dim %1585, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1587 = stablehlo.subtract %1586, %1584 : tensor<64x512x3072xf32>
    %1588 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1589 = stablehlo.add %1588, %1584 : tensor<64x512x3072xf32>
    %1590 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1591 = stablehlo.multiply %1590, %1589 : tensor<64x512x3072xf32>
    %1592 = stablehlo.multiply %1573, %1591 : tensor<64x512x3072xf32>
    %1593 = stablehlo.dot_general %1592, %arg174, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1594 = stablehlo.broadcast_in_dim %arg173, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1595 = stablehlo.broadcast_in_dim %1594, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1596 = stablehlo.broadcast_in_dim %1595, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1597 = stablehlo.add %1593, %1596 : tensor<64x512x768xf32>
    %1598 = stablehlo.add %1597, %1568 : tensor<64x512x768xf32>
    %1599 = stablehlo.multiply %1598, %1598 : tensor<64x512x768xf32>
    %1600 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1601 = stablehlo.multiply %1600, %1598 : tensor<64x512x768xf32>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1602 = stablehlo.reduce(%1598 init: %cst_79) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1603 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1604 = stablehlo.divide %1602, %1603 : tensor<64x512xf32>
    %cst_80 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1605 = stablehlo.reduce(%1599 init: %cst_80) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1606 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1607 = stablehlo.divide %1605, %1606 : tensor<64x512xf32>
    %1608 = stablehlo.multiply %1604, %1604 : tensor<64x512xf32>
    %1609 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1610 = stablehlo.multiply %1609, %1604 : tensor<64x512xf32>
    %1611 = stablehlo.subtract %1607, %1608 : tensor<64x512xf32>
    %1612 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1613 = stablehlo.maximum %1612, %1611 : tensor<64x512xf32>
    %1614 = stablehlo.compare  EQ, %1611, %1613,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1615 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1616 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1617 = stablehlo.select %1614, %1615, %1616 : tensor<64x512xi1>, tensor<64x512xf32>
    %1618 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1619 = stablehlo.compare  EQ, %1618, %1613,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1620 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1621 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1622 = stablehlo.select %1619, %1620, %1621 : tensor<64x512xi1>, tensor<64x512xf32>
    %1623 = stablehlo.divide %1617, %1622 : tensor<64x512xf32>
    %1624 = stablehlo.broadcast_in_dim %1604, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1625 = stablehlo.broadcast_in_dim %1613, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1626 = stablehlo.broadcast_in_dim %1624, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1627 = stablehlo.subtract %1598, %1626 : tensor<64x512x768xf32>
    %1628 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1629 = stablehlo.add %1625, %1628 : tensor<64x512x1xf32>
    %1630 = stablehlo.rsqrt %1629 : tensor<64x512x1xf32>
    %1631 = stablehlo.divide %1630, %1629 : tensor<64x512x1xf32>
    %1632 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1633 = stablehlo.multiply %1632, %1631 : tensor<64x512x1xf32>
    %1634 = stablehlo.reshape %arg176 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1635 = stablehlo.broadcast_in_dim %1630, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1636 = stablehlo.broadcast_in_dim %1634, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1637 = stablehlo.multiply %1635, %1636 : tensor<64x512x768xf32>
    %1638 = stablehlo.multiply %1627, %1637 : tensor<64x512x768xf32>
    %1639 = stablehlo.reshape %arg175 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1640 = stablehlo.broadcast_in_dim %1639, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1641 = stablehlo.add %1638, %1640 : tensor<64x512x768xf32>
    %1642 = stablehlo.reshape %arg182 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1643 = stablehlo.dot_general %1641, %1642, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1644 = stablehlo.reshape %arg181 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1645 = stablehlo.broadcast_in_dim %1644, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1646 = stablehlo.broadcast_in_dim %1645, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1647 = stablehlo.broadcast_in_dim %1646, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1648 = stablehlo.add %1643, %1647 : tensor<64x512x12x64xf32>
    %1649 = stablehlo.reshape %arg180 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1650 = stablehlo.dot_general %1641, %1649, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1651 = stablehlo.reshape %arg179 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1652 = stablehlo.broadcast_in_dim %1651, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1653 = stablehlo.broadcast_in_dim %1652, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1654 = stablehlo.broadcast_in_dim %1653, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1655 = stablehlo.add %1650, %1654 : tensor<64x512x12x64xf32>
    %1656 = stablehlo.reshape %arg184 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1657 = stablehlo.dot_general %1641, %1656, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1658 = stablehlo.reshape %arg183 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1659 = stablehlo.broadcast_in_dim %1658, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1660 = stablehlo.broadcast_in_dim %1659, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1661 = stablehlo.broadcast_in_dim %1660, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1662 = stablehlo.add %1657, %1661 : tensor<64x512x12x64xf32>
    %1663 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1664 = stablehlo.compare  GT, %75, %1663,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1665 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1666 = stablehlo.convert %1665 : tensor<64x1x512x512xf32>
    %1667 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1668 = stablehlo.convert %1667 : tensor<64x1x512x512xf32>
    %1669 = stablehlo.select %1664, %1666, %1668 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %1670 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1671 = stablehlo.convert %1670 : tensor<f32>
    %1672 = stablehlo.broadcast_in_dim %1671, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1673 = stablehlo.divide %1648, %1672 : tensor<64x512x12x64xf32>
    %1674 = stablehlo.dot_general %1673, %1655, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1675 = stablehlo.broadcast_in_dim %1669, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1676 = stablehlo.add %1674, %1675 : tensor<64x12x512x512xf32>
    %cst_81 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1677 = stablehlo.reduce(%1676 init: %cst_81) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1678 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1679 = stablehlo.maximum %1678, %1677 : tensor<64x12x512xf32>
    %1680 = stablehlo.broadcast_in_dim %1679, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1681 = stablehlo.broadcast_in_dim %1680, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1682 = stablehlo.subtract %1676, %1681 : tensor<64x12x512x512xf32>
    %1683 = stablehlo.exponential %1682 : tensor<64x12x512x512xf32>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1684 = stablehlo.reduce(%1683 init: %cst_82) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1685 = stablehlo.broadcast_in_dim %1684, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1686 = stablehlo.broadcast_in_dim %1685, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1687 = stablehlo.divide %1683, %1686 : tensor<64x12x512x512xf32>
    %1688 = stablehlo.multiply %1685, %1685 : tensor<64x12x512x1xf32>
    %cst_83 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1689 = stablehlo.broadcast_in_dim %cst_83, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1690 = stablehlo.divide %1689, %1688 : tensor<64x12x512x1xf32>
    %1691 = stablehlo.dot_general %1662, %1687, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1692 = stablehlo.transpose %1691, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1693 = stablehlo.reshape %arg186 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1694 = stablehlo.dot_general %1692, %1693, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1695 = stablehlo.broadcast_in_dim %arg185, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1696 = stablehlo.broadcast_in_dim %1695, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1697 = stablehlo.broadcast_in_dim %1696, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1698 = stablehlo.add %1694, %1697 : tensor<64x512x768xf32>
    %1699 = stablehlo.add %1698, %1641 : tensor<64x512x768xf32>
    %1700 = stablehlo.multiply %1699, %1699 : tensor<64x512x768xf32>
    %1701 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1702 = stablehlo.multiply %1701, %1699 : tensor<64x512x768xf32>
    %cst_84 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1703 = stablehlo.reduce(%1699 init: %cst_84) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1704 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1705 = stablehlo.divide %1703, %1704 : tensor<64x512xf32>
    %cst_85 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1706 = stablehlo.reduce(%1700 init: %cst_85) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1707 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1708 = stablehlo.divide %1706, %1707 : tensor<64x512xf32>
    %1709 = stablehlo.multiply %1705, %1705 : tensor<64x512xf32>
    %1710 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1711 = stablehlo.multiply %1710, %1705 : tensor<64x512xf32>
    %1712 = stablehlo.subtract %1708, %1709 : tensor<64x512xf32>
    %1713 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1714 = stablehlo.maximum %1713, %1712 : tensor<64x512xf32>
    %1715 = stablehlo.compare  EQ, %1712, %1714,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1716 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1717 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1718 = stablehlo.select %1715, %1716, %1717 : tensor<64x512xi1>, tensor<64x512xf32>
    %1719 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1720 = stablehlo.compare  EQ, %1719, %1714,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1721 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1722 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1723 = stablehlo.select %1720, %1721, %1722 : tensor<64x512xi1>, tensor<64x512xf32>
    %1724 = stablehlo.divide %1718, %1723 : tensor<64x512xf32>
    %1725 = stablehlo.broadcast_in_dim %1705, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1726 = stablehlo.broadcast_in_dim %1714, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1727 = stablehlo.broadcast_in_dim %1725, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1728 = stablehlo.subtract %1699, %1727 : tensor<64x512x768xf32>
    %1729 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1730 = stablehlo.add %1726, %1729 : tensor<64x512x1xf32>
    %1731 = stablehlo.rsqrt %1730 : tensor<64x512x1xf32>
    %1732 = stablehlo.divide %1731, %1730 : tensor<64x512x1xf32>
    %1733 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1734 = stablehlo.multiply %1733, %1732 : tensor<64x512x1xf32>
    %1735 = stablehlo.reshape %arg188 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1736 = stablehlo.broadcast_in_dim %1731, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1737 = stablehlo.broadcast_in_dim %1735, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1738 = stablehlo.multiply %1736, %1737 : tensor<64x512x768xf32>
    %1739 = stablehlo.multiply %1728, %1738 : tensor<64x512x768xf32>
    %1740 = stablehlo.reshape %arg187 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1741 = stablehlo.broadcast_in_dim %1740, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1742 = stablehlo.add %1739, %1741 : tensor<64x512x768xf32>
    %1743 = stablehlo.dot_general %1742, %arg194, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1744 = stablehlo.broadcast_in_dim %arg193, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1745 = stablehlo.broadcast_in_dim %1744, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1746 = stablehlo.broadcast_in_dim %1745, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1747 = stablehlo.add %1743, %1746 : tensor<64x512x3072xf32>
    %1748 = stablehlo.multiply %1747, %1747 : tensor<64x512x3072xf32>
    %1749 = stablehlo.multiply %1748, %1747 : tensor<64x512x3072xf32>
    %1750 = stablehlo.multiply %1747, %1747 : tensor<64x512x3072xf32>
    %1751 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1752 = stablehlo.multiply %1751, %1750 : tensor<64x512x3072xf32>
    %1753 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1754 = stablehlo.multiply %1753, %1749 : tensor<64x512x3072xf32>
    %1755 = stablehlo.add %1747, %1754 : tensor<64x512x3072xf32>
    %1756 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1757 = stablehlo.multiply %1756, %1755 : tensor<64x512x3072xf32>
    %1758 = stablehlo.tanh %1757 : tensor<64x512x3072xf32>
    %1759 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1760 = stablehlo.broadcast_in_dim %1759, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1761 = stablehlo.subtract %1760, %1758 : tensor<64x512x3072xf32>
    %1762 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1763 = stablehlo.add %1762, %1758 : tensor<64x512x3072xf32>
    %1764 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1765 = stablehlo.multiply %1764, %1763 : tensor<64x512x3072xf32>
    %1766 = stablehlo.multiply %1747, %1765 : tensor<64x512x3072xf32>
    %1767 = stablehlo.dot_general %1766, %arg190, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1768 = stablehlo.broadcast_in_dim %arg189, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1769 = stablehlo.broadcast_in_dim %1768, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1770 = stablehlo.broadcast_in_dim %1769, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1771 = stablehlo.add %1767, %1770 : tensor<64x512x768xf32>
    %1772 = stablehlo.add %1771, %1742 : tensor<64x512x768xf32>
    %1773 = stablehlo.multiply %1772, %1772 : tensor<64x512x768xf32>
    %1774 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1775 = stablehlo.multiply %1774, %1772 : tensor<64x512x768xf32>
    %cst_86 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1776 = stablehlo.reduce(%1772 init: %cst_86) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1777 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1778 = stablehlo.divide %1776, %1777 : tensor<64x512xf32>
    %cst_87 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1779 = stablehlo.reduce(%1773 init: %cst_87) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1780 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1781 = stablehlo.divide %1779, %1780 : tensor<64x512xf32>
    %1782 = stablehlo.multiply %1778, %1778 : tensor<64x512xf32>
    %1783 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1784 = stablehlo.multiply %1783, %1778 : tensor<64x512xf32>
    %1785 = stablehlo.subtract %1781, %1782 : tensor<64x512xf32>
    %1786 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1787 = stablehlo.maximum %1786, %1785 : tensor<64x512xf32>
    %1788 = stablehlo.compare  EQ, %1785, %1787,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1789 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1790 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1791 = stablehlo.select %1788, %1789, %1790 : tensor<64x512xi1>, tensor<64x512xf32>
    %1792 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1793 = stablehlo.compare  EQ, %1792, %1787,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1794 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1795 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1796 = stablehlo.select %1793, %1794, %1795 : tensor<64x512xi1>, tensor<64x512xf32>
    %1797 = stablehlo.divide %1791, %1796 : tensor<64x512xf32>
    %1798 = stablehlo.broadcast_in_dim %1778, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1799 = stablehlo.broadcast_in_dim %1787, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1800 = stablehlo.broadcast_in_dim %1798, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1801 = stablehlo.subtract %1772, %1800 : tensor<64x512x768xf32>
    %1802 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1803 = stablehlo.add %1799, %1802 : tensor<64x512x1xf32>
    %1804 = stablehlo.rsqrt %1803 : tensor<64x512x1xf32>
    %1805 = stablehlo.divide %1804, %1803 : tensor<64x512x1xf32>
    %1806 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1807 = stablehlo.multiply %1806, %1805 : tensor<64x512x1xf32>
    %1808 = stablehlo.reshape %arg192 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1809 = stablehlo.broadcast_in_dim %1804, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1810 = stablehlo.broadcast_in_dim %1808, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1811 = stablehlo.multiply %1809, %1810 : tensor<64x512x768xf32>
    %1812 = stablehlo.multiply %1801, %1811 : tensor<64x512x768xf32>
    %1813 = stablehlo.reshape %arg191 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1814 = stablehlo.broadcast_in_dim %1813, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1815 = stablehlo.add %1812, %1814 : tensor<64x512x768xf32>
    %1816 = stablehlo.reshape %arg38 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1817 = stablehlo.dot_general %1815, %1816, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1818 = stablehlo.reshape %arg37 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1819 = stablehlo.broadcast_in_dim %1818, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1820 = stablehlo.broadcast_in_dim %1819, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1821 = stablehlo.broadcast_in_dim %1820, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1822 = stablehlo.add %1817, %1821 : tensor<64x512x12x64xf32>
    %1823 = stablehlo.reshape %arg36 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1824 = stablehlo.dot_general %1815, %1823, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1825 = stablehlo.reshape %arg35 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1826 = stablehlo.broadcast_in_dim %1825, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1827 = stablehlo.broadcast_in_dim %1826, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1828 = stablehlo.broadcast_in_dim %1827, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1829 = stablehlo.add %1824, %1828 : tensor<64x512x12x64xf32>
    %1830 = stablehlo.reshape %arg40 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1831 = stablehlo.dot_general %1815, %1830, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1832 = stablehlo.reshape %arg39 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1833 = stablehlo.broadcast_in_dim %1832, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1834 = stablehlo.broadcast_in_dim %1833, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1835 = stablehlo.broadcast_in_dim %1834, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1836 = stablehlo.add %1831, %1835 : tensor<64x512x12x64xf32>
    %1837 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1838 = stablehlo.compare  GT, %75, %1837,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1839 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1840 = stablehlo.convert %1839 : tensor<64x1x512x512xf32>
    %1841 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1842 = stablehlo.convert %1841 : tensor<64x1x512x512xf32>
    %1843 = stablehlo.select %1838, %1840, %1842 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %1844 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1845 = stablehlo.convert %1844 : tensor<f32>
    %1846 = stablehlo.broadcast_in_dim %1845, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1847 = stablehlo.divide %1822, %1846 : tensor<64x512x12x64xf32>
    %1848 = stablehlo.dot_general %1847, %1829, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1849 = stablehlo.broadcast_in_dim %1843, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1850 = stablehlo.add %1848, %1849 : tensor<64x12x512x512xf32>
    %cst_88 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1851 = stablehlo.reduce(%1850 init: %cst_88) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1852 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1853 = stablehlo.maximum %1852, %1851 : tensor<64x12x512xf32>
    %1854 = stablehlo.broadcast_in_dim %1853, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1855 = stablehlo.broadcast_in_dim %1854, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1856 = stablehlo.subtract %1850, %1855 : tensor<64x12x512x512xf32>
    %1857 = stablehlo.exponential %1856 : tensor<64x12x512x512xf32>
    %cst_89 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1858 = stablehlo.reduce(%1857 init: %cst_89) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1859 = stablehlo.broadcast_in_dim %1858, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1860 = stablehlo.broadcast_in_dim %1859, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1861 = stablehlo.divide %1857, %1860 : tensor<64x12x512x512xf32>
    %1862 = stablehlo.multiply %1859, %1859 : tensor<64x12x512x1xf32>
    %cst_90 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1863 = stablehlo.broadcast_in_dim %cst_90, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1864 = stablehlo.divide %1863, %1862 : tensor<64x12x512x1xf32>
    %1865 = stablehlo.dot_general %1836, %1861, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1866 = stablehlo.transpose %1865, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1867 = stablehlo.reshape %arg42 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1868 = stablehlo.dot_general %1866, %1867, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1869 = stablehlo.broadcast_in_dim %arg41, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1870 = stablehlo.broadcast_in_dim %1869, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1871 = stablehlo.broadcast_in_dim %1870, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1872 = stablehlo.add %1868, %1871 : tensor<64x512x768xf32>
    %1873 = stablehlo.add %1872, %1815 : tensor<64x512x768xf32>
    %1874 = stablehlo.multiply %1873, %1873 : tensor<64x512x768xf32>
    %1875 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1876 = stablehlo.multiply %1875, %1873 : tensor<64x512x768xf32>
    %cst_91 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1877 = stablehlo.reduce(%1873 init: %cst_91) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1878 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1879 = stablehlo.divide %1877, %1878 : tensor<64x512xf32>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1880 = stablehlo.reduce(%1874 init: %cst_92) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1881 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1882 = stablehlo.divide %1880, %1881 : tensor<64x512xf32>
    %1883 = stablehlo.multiply %1879, %1879 : tensor<64x512xf32>
    %1884 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1885 = stablehlo.multiply %1884, %1879 : tensor<64x512xf32>
    %1886 = stablehlo.subtract %1882, %1883 : tensor<64x512xf32>
    %1887 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1888 = stablehlo.maximum %1887, %1886 : tensor<64x512xf32>
    %1889 = stablehlo.compare  EQ, %1886, %1888,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1890 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1891 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1892 = stablehlo.select %1889, %1890, %1891 : tensor<64x512xi1>, tensor<64x512xf32>
    %1893 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1894 = stablehlo.compare  EQ, %1893, %1888,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1895 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1896 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1897 = stablehlo.select %1894, %1895, %1896 : tensor<64x512xi1>, tensor<64x512xf32>
    %1898 = stablehlo.divide %1892, %1897 : tensor<64x512xf32>
    %1899 = stablehlo.broadcast_in_dim %1879, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1900 = stablehlo.broadcast_in_dim %1888, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1901 = stablehlo.broadcast_in_dim %1899, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1902 = stablehlo.subtract %1873, %1901 : tensor<64x512x768xf32>
    %1903 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1904 = stablehlo.add %1900, %1903 : tensor<64x512x1xf32>
    %1905 = stablehlo.rsqrt %1904 : tensor<64x512x1xf32>
    %1906 = stablehlo.divide %1905, %1904 : tensor<64x512x1xf32>
    %1907 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1908 = stablehlo.multiply %1907, %1906 : tensor<64x512x1xf32>
    %1909 = stablehlo.reshape %arg44 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1910 = stablehlo.broadcast_in_dim %1905, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1911 = stablehlo.broadcast_in_dim %1909, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1912 = stablehlo.multiply %1910, %1911 : tensor<64x512x768xf32>
    %1913 = stablehlo.multiply %1902, %1912 : tensor<64x512x768xf32>
    %1914 = stablehlo.reshape %arg43 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1915 = stablehlo.broadcast_in_dim %1914, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1916 = stablehlo.add %1913, %1915 : tensor<64x512x768xf32>
    %1917 = stablehlo.dot_general %1916, %arg50, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1918 = stablehlo.broadcast_in_dim %arg49, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1919 = stablehlo.broadcast_in_dim %1918, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1920 = stablehlo.broadcast_in_dim %1919, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1921 = stablehlo.add %1917, %1920 : tensor<64x512x3072xf32>
    %1922 = stablehlo.multiply %1921, %1921 : tensor<64x512x3072xf32>
    %1923 = stablehlo.multiply %1922, %1921 : tensor<64x512x3072xf32>
    %1924 = stablehlo.multiply %1921, %1921 : tensor<64x512x3072xf32>
    %1925 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1926 = stablehlo.multiply %1925, %1924 : tensor<64x512x3072xf32>
    %1927 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1928 = stablehlo.multiply %1927, %1923 : tensor<64x512x3072xf32>
    %1929 = stablehlo.add %1921, %1928 : tensor<64x512x3072xf32>
    %1930 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1931 = stablehlo.multiply %1930, %1929 : tensor<64x512x3072xf32>
    %1932 = stablehlo.tanh %1931 : tensor<64x512x3072xf32>
    %1933 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1934 = stablehlo.broadcast_in_dim %1933, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1935 = stablehlo.subtract %1934, %1932 : tensor<64x512x3072xf32>
    %1936 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1937 = stablehlo.add %1936, %1932 : tensor<64x512x3072xf32>
    %1938 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1939 = stablehlo.multiply %1938, %1937 : tensor<64x512x3072xf32>
    %1940 = stablehlo.multiply %1921, %1939 : tensor<64x512x3072xf32>
    %1941 = stablehlo.dot_general %1940, %arg46, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1942 = stablehlo.broadcast_in_dim %arg45, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1943 = stablehlo.broadcast_in_dim %1942, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1944 = stablehlo.broadcast_in_dim %1943, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1945 = stablehlo.add %1941, %1944 : tensor<64x512x768xf32>
    %1946 = stablehlo.add %1945, %1916 : tensor<64x512x768xf32>
    %1947 = stablehlo.multiply %1946, %1946 : tensor<64x512x768xf32>
    %1948 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1949 = stablehlo.multiply %1948, %1946 : tensor<64x512x768xf32>
    %cst_93 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1950 = stablehlo.reduce(%1946 init: %cst_93) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1951 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1952 = stablehlo.divide %1950, %1951 : tensor<64x512xf32>
    %cst_94 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1953 = stablehlo.reduce(%1947 init: %cst_94) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1954 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1955 = stablehlo.divide %1953, %1954 : tensor<64x512xf32>
    %1956 = stablehlo.multiply %1952, %1952 : tensor<64x512xf32>
    %1957 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1958 = stablehlo.multiply %1957, %1952 : tensor<64x512xf32>
    %1959 = stablehlo.subtract %1955, %1956 : tensor<64x512xf32>
    %1960 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1961 = stablehlo.maximum %1960, %1959 : tensor<64x512xf32>
    %1962 = stablehlo.compare  EQ, %1959, %1961,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1963 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1964 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1965 = stablehlo.select %1962, %1963, %1964 : tensor<64x512xi1>, tensor<64x512xf32>
    %1966 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1967 = stablehlo.compare  EQ, %1966, %1961,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1968 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1969 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1970 = stablehlo.select %1967, %1968, %1969 : tensor<64x512xi1>, tensor<64x512xf32>
    %1971 = stablehlo.divide %1965, %1970 : tensor<64x512xf32>
    %1972 = stablehlo.broadcast_in_dim %1952, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1973 = stablehlo.broadcast_in_dim %1961, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1974 = stablehlo.broadcast_in_dim %1972, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1975 = stablehlo.subtract %1946, %1974 : tensor<64x512x768xf32>
    %1976 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1977 = stablehlo.add %1973, %1976 : tensor<64x512x1xf32>
    %1978 = stablehlo.rsqrt %1977 : tensor<64x512x1xf32>
    %1979 = stablehlo.divide %1978, %1977 : tensor<64x512x1xf32>
    %1980 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1981 = stablehlo.multiply %1980, %1979 : tensor<64x512x1xf32>
    %1982 = stablehlo.reshape %arg48 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1983 = stablehlo.broadcast_in_dim %1978, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1984 = stablehlo.broadcast_in_dim %1982, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1985 = stablehlo.multiply %1983, %1984 : tensor<64x512x768xf32>
    %1986 = stablehlo.multiply %1975, %1985 : tensor<64x512x768xf32>
    %1987 = stablehlo.reshape %arg47 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1988 = stablehlo.broadcast_in_dim %1987, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1989 = stablehlo.add %1986, %1988 : tensor<64x512x768xf32>
    %1990 = stablehlo.reshape %arg54 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1991 = stablehlo.dot_general %1989, %1990, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1992 = stablehlo.reshape %arg53 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1993 = stablehlo.broadcast_in_dim %1992, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1994 = stablehlo.broadcast_in_dim %1993, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1995 = stablehlo.broadcast_in_dim %1994, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1996 = stablehlo.add %1991, %1995 : tensor<64x512x12x64xf32>
    %1997 = stablehlo.reshape %arg52 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1998 = stablehlo.dot_general %1989, %1997, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1999 = stablehlo.reshape %arg51 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2000 = stablehlo.broadcast_in_dim %1999, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2001 = stablehlo.broadcast_in_dim %2000, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2002 = stablehlo.broadcast_in_dim %2001, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2003 = stablehlo.add %1998, %2002 : tensor<64x512x12x64xf32>
    %2004 = stablehlo.reshape %arg56 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2005 = stablehlo.dot_general %1989, %2004, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2006 = stablehlo.reshape %arg55 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2007 = stablehlo.broadcast_in_dim %2006, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2008 = stablehlo.broadcast_in_dim %2007, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2009 = stablehlo.broadcast_in_dim %2008, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2010 = stablehlo.add %2005, %2009 : tensor<64x512x12x64xf32>
    %2011 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2012 = stablehlo.compare  GT, %75, %2011,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %2013 = stablehlo.broadcast_in_dim %cst_10, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2014 = stablehlo.convert %2013 : tensor<64x1x512x512xf32>
    %2015 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2016 = stablehlo.convert %2015 : tensor<64x1x512x512xf32>
    %2017 = stablehlo.select %2012, %2014, %2016 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %2018 = stablehlo.sqrt %cst_12 : tensor<f32>
    %2019 = stablehlo.convert %2018 : tensor<f32>
    %2020 = stablehlo.broadcast_in_dim %2019, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2021 = stablehlo.divide %1996, %2020 : tensor<64x512x12x64xf32>
    %2022 = stablehlo.dot_general %2021, %2003, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2023 = stablehlo.broadcast_in_dim %2017, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %2024 = stablehlo.add %2022, %2023 : tensor<64x12x512x512xf32>
    %cst_95 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2025 = stablehlo.reduce(%2024 init: %cst_95) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2026 = stablehlo.broadcast_in_dim %cst_14, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %2027 = stablehlo.maximum %2026, %2025 : tensor<64x12x512xf32>
    %2028 = stablehlo.broadcast_in_dim %2027, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2029 = stablehlo.broadcast_in_dim %2028, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2030 = stablehlo.subtract %2024, %2029 : tensor<64x12x512x512xf32>
    %2031 = stablehlo.exponential %2030 : tensor<64x12x512x512xf32>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2032 = stablehlo.reduce(%2031 init: %cst_96) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2033 = stablehlo.broadcast_in_dim %2032, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2034 = stablehlo.broadcast_in_dim %2033, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2035 = stablehlo.divide %2031, %2034 : tensor<64x12x512x512xf32>
    %2036 = stablehlo.multiply %2033, %2033 : tensor<64x12x512x1xf32>
    %cst_97 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2037 = stablehlo.broadcast_in_dim %cst_97, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %2038 = stablehlo.divide %2037, %2036 : tensor<64x12x512x1xf32>
    %2039 = stablehlo.dot_general %2010, %2035, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2040 = stablehlo.transpose %2039, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2041 = stablehlo.reshape %arg58 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %2042 = stablehlo.dot_general %2040, %2041, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %2043 = stablehlo.broadcast_in_dim %arg57, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2044 = stablehlo.broadcast_in_dim %2043, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2045 = stablehlo.broadcast_in_dim %2044, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2046 = stablehlo.add %2042, %2045 : tensor<64x512x768xf32>
    %2047 = stablehlo.add %2046, %1989 : tensor<64x512x768xf32>
    %2048 = stablehlo.multiply %2047, %2047 : tensor<64x512x768xf32>
    %2049 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2050 = stablehlo.multiply %2049, %2047 : tensor<64x512x768xf32>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2051 = stablehlo.reduce(%2047 init: %cst_98) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2052 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2053 = stablehlo.divide %2051, %2052 : tensor<64x512xf32>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2054 = stablehlo.reduce(%2048 init: %cst_99) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2055 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2056 = stablehlo.divide %2054, %2055 : tensor<64x512xf32>
    %2057 = stablehlo.multiply %2053, %2053 : tensor<64x512xf32>
    %2058 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2059 = stablehlo.multiply %2058, %2053 : tensor<64x512xf32>
    %2060 = stablehlo.subtract %2056, %2057 : tensor<64x512xf32>
    %2061 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2062 = stablehlo.maximum %2061, %2060 : tensor<64x512xf32>
    %2063 = stablehlo.compare  EQ, %2060, %2062,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2064 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2065 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2066 = stablehlo.select %2063, %2064, %2065 : tensor<64x512xi1>, tensor<64x512xf32>
    %2067 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2068 = stablehlo.compare  EQ, %2067, %2062,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2069 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2070 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2071 = stablehlo.select %2068, %2069, %2070 : tensor<64x512xi1>, tensor<64x512xf32>
    %2072 = stablehlo.divide %2066, %2071 : tensor<64x512xf32>
    %2073 = stablehlo.broadcast_in_dim %2053, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2074 = stablehlo.broadcast_in_dim %2062, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2075 = stablehlo.broadcast_in_dim %2073, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2076 = stablehlo.subtract %2047, %2075 : tensor<64x512x768xf32>
    %2077 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2078 = stablehlo.add %2074, %2077 : tensor<64x512x1xf32>
    %2079 = stablehlo.rsqrt %2078 : tensor<64x512x1xf32>
    %2080 = stablehlo.divide %2079, %2078 : tensor<64x512x1xf32>
    %2081 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2082 = stablehlo.multiply %2081, %2080 : tensor<64x512x1xf32>
    %2083 = stablehlo.reshape %arg60 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2084 = stablehlo.broadcast_in_dim %2079, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2085 = stablehlo.broadcast_in_dim %2083, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2086 = stablehlo.multiply %2084, %2085 : tensor<64x512x768xf32>
    %2087 = stablehlo.multiply %2076, %2086 : tensor<64x512x768xf32>
    %2088 = stablehlo.reshape %arg59 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2089 = stablehlo.broadcast_in_dim %2088, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2090 = stablehlo.add %2087, %2089 : tensor<64x512x768xf32>
    %2091 = stablehlo.dot_general %2090, %arg66, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2092 = stablehlo.broadcast_in_dim %arg65, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %2093 = stablehlo.broadcast_in_dim %2092, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %2094 = stablehlo.broadcast_in_dim %2093, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2095 = stablehlo.add %2091, %2094 : tensor<64x512x3072xf32>
    %2096 = stablehlo.multiply %2095, %2095 : tensor<64x512x3072xf32>
    %2097 = stablehlo.multiply %2096, %2095 : tensor<64x512x3072xf32>
    %2098 = stablehlo.multiply %2095, %2095 : tensor<64x512x3072xf32>
    %2099 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2100 = stablehlo.multiply %2099, %2098 : tensor<64x512x3072xf32>
    %2101 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2102 = stablehlo.multiply %2101, %2097 : tensor<64x512x3072xf32>
    %2103 = stablehlo.add %2095, %2102 : tensor<64x512x3072xf32>
    %2104 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2105 = stablehlo.multiply %2104, %2103 : tensor<64x512x3072xf32>
    %2106 = stablehlo.tanh %2105 : tensor<64x512x3072xf32>
    %2107 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2108 = stablehlo.broadcast_in_dim %2107, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2109 = stablehlo.subtract %2108, %2106 : tensor<64x512x3072xf32>
    %2110 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2111 = stablehlo.add %2110, %2106 : tensor<64x512x3072xf32>
    %2112 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2113 = stablehlo.multiply %2112, %2111 : tensor<64x512x3072xf32>
    %2114 = stablehlo.multiply %2095, %2113 : tensor<64x512x3072xf32>
    %2115 = stablehlo.dot_general %2114, %arg62, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2116 = stablehlo.broadcast_in_dim %arg61, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2117 = stablehlo.broadcast_in_dim %2116, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2118 = stablehlo.broadcast_in_dim %2117, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2119 = stablehlo.add %2115, %2118 : tensor<64x512x768xf32>
    %2120 = stablehlo.add %2119, %2090 : tensor<64x512x768xf32>
    %2121 = stablehlo.multiply %2120, %2120 : tensor<64x512x768xf32>
    %2122 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2123 = stablehlo.multiply %2122, %2120 : tensor<64x512x768xf32>
    %cst_100 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2124 = stablehlo.reduce(%2120 init: %cst_100) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2125 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2126 = stablehlo.divide %2124, %2125 : tensor<64x512xf32>
    %cst_101 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2127 = stablehlo.reduce(%2121 init: %cst_101) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2128 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2129 = stablehlo.divide %2127, %2128 : tensor<64x512xf32>
    %2130 = stablehlo.multiply %2126, %2126 : tensor<64x512xf32>
    %2131 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2132 = stablehlo.multiply %2131, %2126 : tensor<64x512xf32>
    %2133 = stablehlo.subtract %2129, %2130 : tensor<64x512xf32>
    %2134 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2135 = stablehlo.maximum %2134, %2133 : tensor<64x512xf32>
    %2136 = stablehlo.compare  EQ, %2133, %2135,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2137 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2138 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2139 = stablehlo.select %2136, %2137, %2138 : tensor<64x512xi1>, tensor<64x512xf32>
    %2140 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2141 = stablehlo.compare  EQ, %2140, %2135,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2142 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2143 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2144 = stablehlo.select %2141, %2142, %2143 : tensor<64x512xi1>, tensor<64x512xf32>
    %2145 = stablehlo.divide %2139, %2144 : tensor<64x512xf32>
    %2146 = stablehlo.broadcast_in_dim %2126, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2147 = stablehlo.broadcast_in_dim %2135, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2148 = stablehlo.broadcast_in_dim %2146, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2149 = stablehlo.subtract %2120, %2148 : tensor<64x512x768xf32>
    %2150 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2151 = stablehlo.add %2147, %2150 : tensor<64x512x1xf32>
    %2152 = stablehlo.rsqrt %2151 : tensor<64x512x1xf32>
    %2153 = stablehlo.divide %2152, %2151 : tensor<64x512x1xf32>
    %2154 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2155 = stablehlo.multiply %2154, %2153 : tensor<64x512x1xf32>
    %2156 = stablehlo.reshape %arg64 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2157 = stablehlo.broadcast_in_dim %2152, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2158 = stablehlo.broadcast_in_dim %2156, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2159 = stablehlo.multiply %2157, %2158 : tensor<64x512x768xf32>
    %2160 = stablehlo.multiply %2149, %2159 : tensor<64x512x768xf32>
    %2161 = stablehlo.reshape %arg63 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2162 = stablehlo.broadcast_in_dim %2161, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2163 = stablehlo.add %2160, %2162 : tensor<64x512x768xf32>
    %2164 = stablehlo.dot_general %2163, %arg199, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2165 = stablehlo.broadcast_in_dim %arg198, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2166 = stablehlo.broadcast_in_dim %2165, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2167 = stablehlo.broadcast_in_dim %2166, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2168 = stablehlo.add %2164, %2167 : tensor<64x512x768xf32>
    %2169 = stablehlo.multiply %2168, %2168 : tensor<64x512x768xf32>
    %2170 = stablehlo.multiply %2169, %2168 : tensor<64x512x768xf32>
    %2171 = stablehlo.multiply %2168, %2168 : tensor<64x512x768xf32>
    %2172 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2173 = stablehlo.multiply %2172, %2171 : tensor<64x512x768xf32>
    %2174 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2175 = stablehlo.multiply %2174, %2170 : tensor<64x512x768xf32>
    %2176 = stablehlo.add %2168, %2175 : tensor<64x512x768xf32>
    %2177 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2178 = stablehlo.multiply %2177, %2176 : tensor<64x512x768xf32>
    %2179 = stablehlo.tanh %2178 : tensor<64x512x768xf32>
    %2180 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2181 = stablehlo.broadcast_in_dim %2180, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2182 = stablehlo.subtract %2181, %2179 : tensor<64x512x768xf32>
    %2183 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2184 = stablehlo.add %2183, %2179 : tensor<64x512x768xf32>
    %2185 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2186 = stablehlo.multiply %2185, %2184 : tensor<64x512x768xf32>
    %2187 = stablehlo.multiply %2168, %2186 : tensor<64x512x768xf32>
    %2188 = stablehlo.multiply %2187, %2187 : tensor<64x512x768xf32>
    %2189 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2190 = stablehlo.multiply %2189, %2187 : tensor<64x512x768xf32>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2191 = stablehlo.reduce(%2187 init: %cst_102) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2192 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2193 = stablehlo.divide %2191, %2192 : tensor<64x512xf32>
    %cst_103 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2194 = stablehlo.reduce(%2188 init: %cst_103) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2195 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2196 = stablehlo.divide %2194, %2195 : tensor<64x512xf32>
    %2197 = stablehlo.multiply %2193, %2193 : tensor<64x512xf32>
    %2198 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2199 = stablehlo.multiply %2198, %2193 : tensor<64x512xf32>
    %2200 = stablehlo.subtract %2196, %2197 : tensor<64x512xf32>
    %2201 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2202 = stablehlo.maximum %2201, %2200 : tensor<64x512xf32>
    %2203 = stablehlo.compare  EQ, %2200, %2202,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2204 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2205 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2206 = stablehlo.select %2203, %2204, %2205 : tensor<64x512xi1>, tensor<64x512xf32>
    %2207 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2208 = stablehlo.compare  EQ, %2207, %2202,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2209 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2210 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2211 = stablehlo.select %2208, %2209, %2210 : tensor<64x512xi1>, tensor<64x512xf32>
    %2212 = stablehlo.divide %2206, %2211 : tensor<64x512xf32>
    %2213 = stablehlo.broadcast_in_dim %2193, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2214 = stablehlo.broadcast_in_dim %2202, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2215 = stablehlo.broadcast_in_dim %2213, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2216 = stablehlo.subtract %2187, %2215 : tensor<64x512x768xf32>
    %2217 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2218 = stablehlo.add %2214, %2217 : tensor<64x512x1xf32>
    %2219 = stablehlo.rsqrt %2218 : tensor<64x512x1xf32>
    %2220 = stablehlo.divide %2219, %2218 : tensor<64x512x1xf32>
    %2221 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2222 = stablehlo.multiply %2221, %2220 : tensor<64x512x1xf32>
    %2223 = stablehlo.reshape %arg202 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2224 = stablehlo.broadcast_in_dim %2219, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2225 = stablehlo.broadcast_in_dim %2223, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2226 = stablehlo.multiply %2224, %2225 : tensor<64x512x768xf32>
    %2227 = stablehlo.multiply %2216, %2226 : tensor<64x512x768xf32>
    %2228 = stablehlo.reshape %arg201 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2229 = stablehlo.broadcast_in_dim %2228, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2230 = stablehlo.add %2227, %2229 : tensor<64x512x768xf32>
    %2231 = stablehlo.transpose %arg200, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2232 = stablehlo.dot_general %2230, %2231, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x30522xf32>) -> tensor<64x512x30522xf32>
    %2233 = stablehlo.broadcast_in_dim %arg197, dims = [2] : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %2234 = stablehlo.broadcast_in_dim %2233, dims = [0, 1, 2] : (tensor<1x1x30522xf32>) -> tensor<64x512x30522xf32>
    %2235 = stablehlo.add %2232, %2234 : tensor<64x512x30522xf32>
    %c_104 = stablehlo.constant dense<-100> : tensor<i32>
    %2236 = stablehlo.broadcast_in_dim %c_104, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2237 = stablehlo.compare  NE, %arg614, %2236,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_105 = stablehlo.constant dense<0> : tensor<i32>
    %2238 = call @_where(%2237, %arg614, %c_105) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %2239 = call @_where(%2237, %2238, %c_105) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_106 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2240 = stablehlo.reduce(%2235 init: %cst_106) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2241 = stablehlo.broadcast_in_dim %2240, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2242 = stablehlo.broadcast_in_dim %2241, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2243 = stablehlo.subtract %2235, %2242 : tensor<64x512x30522xf32>
    %2244 = stablehlo.exponential %2243 : tensor<64x512x30522xf32>
    %cst_107 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2245 = stablehlo.reduce(%2244 init: %cst_107) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2246 = stablehlo.log %2245 : tensor<64x512xf32>
    %2247 = stablehlo.broadcast_in_dim %2239, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %2248:2 = call @take_along_axis(%2243, %2247) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %2249 = stablehlo.slice %2248#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %2250 = stablehlo.reshape %2249 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %2251 = stablehlo.subtract %2246, %2250 : tensor<64x512xf32>
    %2252 = call @_where_90(%2237, %2251, %cst_10) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2253 = stablehlo.reduce(%2252 init: %cst_108) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %2254 = stablehlo.convert %2237 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_109 = stablehlo.constant dense<0> : tensor<i32>
    %2255 = stablehlo.reduce(%2254 init: %c_109) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2256 = call @argmax(%2235) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %2257 = stablehlo.compare  EQ, %2256, %arg614,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %2258 = stablehlo.and %2257, %2237 : tensor<64x512xi1>
    %2259 = stablehlo.convert %2258 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_110 = stablehlo.constant dense<0> : tensor<i32>
    %2260 = stablehlo.reduce(%2259 init: %c_110) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2261 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2262 = stablehlo.broadcast_in_dim %2261, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2263 = call @_where_105(%2237, %2262) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %2264 = stablehlo.negate %2263 : tensor<64x512xf32>
    %2265 = stablehlo.broadcast_in_dim %2264, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2266 = stablehlo.pad %2265, %cst_6, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %2267 = call @take_along_axis_106(%2248#1, %2266) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2268 = stablehlo.divide %2263, %2245 : tensor<64x512xf32>
    %2269 = stablehlo.broadcast_in_dim %2268, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %2270 = stablehlo.multiply %2269, %2244 : tensor<64x512x30522xf32>
    %2271 = stablehlo.add %2267, %2270 : tensor<64x512x30522xf32>
    %cst_111 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2272 = stablehlo.reduce(%2271 init: %cst_111) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2273 = stablehlo.reshape %2272 : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2274 = stablehlo.reduce(%2273 init: %cst_112) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2275 = stablehlo.dot_general %2271, %2230, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %2276 = stablehlo.transpose %2275, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2277 = stablehlo.dot_general %2271, %2231, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<768x30522xf32>) -> tensor<64x512x768xf32>
    %2278 = stablehlo.transpose %2276, dims = [1, 0] : (tensor<768x30522xf32>) -> tensor<30522x768xf32>
    %cst_113 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2279 = stablehlo.reduce(%2277 init: %cst_113) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2280 = stablehlo.reshape %2279 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2281 = stablehlo.reshape %2280 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2282 = stablehlo.multiply %2216, %2277 : tensor<64x512x768xf32>
    %2283 = stablehlo.multiply %2277, %2226 : tensor<64x512x768xf32>
    %2284 = stablehlo.broadcast_in_dim %2219, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2285 = stablehlo.multiply %2284, %2282 : tensor<64x512x768xf32>
    %cst_114 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2286 = stablehlo.reduce(%2285 init: %cst_114) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2287 = stablehlo.reshape %2286 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2288 = stablehlo.broadcast_in_dim %2223, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2289 = stablehlo.multiply %2282, %2288 : tensor<64x512x768xf32>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2290 = stablehlo.reduce(%2289 init: %cst_115) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2291 = stablehlo.reshape %2290 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2292 = stablehlo.reshape %2287 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2293 = stablehlo.multiply %2291, %2222 : tensor<64x512x1xf32>
    %2294 = stablehlo.negate %2283 : tensor<64x512x768xf32>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2295 = stablehlo.reduce(%2294 init: %cst_116) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2296 = stablehlo.reshape %2295 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_117 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2297 = stablehlo.reduce(%2293 init: %cst_117) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2298 = stablehlo.reduce(%2296 init: %cst_118) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2299 = stablehlo.multiply %2297, %2212 : tensor<64x512xf32>
    %2300 = stablehlo.negate %2299 : tensor<64x512xf32>
    %2301 = stablehlo.multiply %2300, %2199 : tensor<64x512xf32>
    %2302 = stablehlo.add %2298, %2301 : tensor<64x512xf32>
    %2303 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2304 = stablehlo.divide %2299, %2303 : tensor<64x512xf32>
    %2305 = stablehlo.broadcast_in_dim %2304, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2306 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2307 = stablehlo.divide %2302, %2306 : tensor<64x512xf32>
    %2308 = stablehlo.broadcast_in_dim %2307, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2309 = stablehlo.add %2283, %2308 : tensor<64x512x768xf32>
    %2310 = stablehlo.multiply %2305, %2190 : tensor<64x512x768xf32>
    %2311 = stablehlo.add %2309, %2310 : tensor<64x512x768xf32>
    %2312 = stablehlo.multiply %2168, %2311 : tensor<64x512x768xf32>
    %2313 = stablehlo.multiply %2311, %2186 : tensor<64x512x768xf32>
    %2314 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2315 = stablehlo.multiply %2314, %2312 : tensor<64x512x768xf32>
    %2316 = stablehlo.multiply %2315, %2182 : tensor<64x512x768xf32>
    %2317 = stablehlo.multiply %2316, %2179 : tensor<64x512x768xf32>
    %2318 = stablehlo.add %2316, %2317 : tensor<64x512x768xf32>
    %2319 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2320 = stablehlo.multiply %2319, %2318 : tensor<64x512x768xf32>
    %2321 = stablehlo.add %2313, %2320 : tensor<64x512x768xf32>
    %2322 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2323 = stablehlo.multiply %2322, %2320 : tensor<64x512x768xf32>
    %2324 = stablehlo.multiply %2323, %2173 : tensor<64x512x768xf32>
    %2325 = stablehlo.add %2321, %2324 : tensor<64x512x768xf32>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2326 = stablehlo.reduce(%2325 init: %cst_119) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2327 = stablehlo.reshape %2326 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_120 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2328 = stablehlo.reduce(%2327 init: %cst_120) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2329 = stablehlo.broadcast_in_dim %2328, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_121 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2330 = stablehlo.reduce(%2329 init: %cst_121) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2331 = stablehlo.dot_general %2325, %2163, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2332 = stablehlo.transpose %2331, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2333 = stablehlo.dot_general %2325, %arg199, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2334 = stablehlo.reduce(%2333 init: %cst_122) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2335 = stablehlo.reshape %2334 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2336 = stablehlo.reshape %2335 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2337 = stablehlo.multiply %2149, %2333 : tensor<64x512x768xf32>
    %2338 = stablehlo.multiply %2333, %2159 : tensor<64x512x768xf32>
    %2339 = stablehlo.broadcast_in_dim %2152, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2340 = stablehlo.multiply %2339, %2337 : tensor<64x512x768xf32>
    %cst_123 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2341 = stablehlo.reduce(%2340 init: %cst_123) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2342 = stablehlo.reshape %2341 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2343 = stablehlo.broadcast_in_dim %2156, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2344 = stablehlo.multiply %2337, %2343 : tensor<64x512x768xf32>
    %cst_124 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2345 = stablehlo.reduce(%2344 init: %cst_124) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2346 = stablehlo.reshape %2345 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2347 = stablehlo.reshape %2342 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2348 = stablehlo.multiply %2346, %2155 : tensor<64x512x1xf32>
    %2349 = stablehlo.negate %2338 : tensor<64x512x768xf32>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2350 = stablehlo.reduce(%2349 init: %cst_125) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2351 = stablehlo.reshape %2350 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2352 = stablehlo.reduce(%2348 init: %cst_126) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_127 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2353 = stablehlo.reduce(%2351 init: %cst_127) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2354 = stablehlo.multiply %2352, %2145 : tensor<64x512xf32>
    %2355 = stablehlo.negate %2354 : tensor<64x512xf32>
    %2356 = stablehlo.multiply %2355, %2132 : tensor<64x512xf32>
    %2357 = stablehlo.add %2353, %2356 : tensor<64x512xf32>
    %2358 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2359 = stablehlo.divide %2354, %2358 : tensor<64x512xf32>
    %2360 = stablehlo.broadcast_in_dim %2359, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2361 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2362 = stablehlo.divide %2357, %2361 : tensor<64x512xf32>
    %2363 = stablehlo.broadcast_in_dim %2362, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2364 = stablehlo.add %2338, %2363 : tensor<64x512x768xf32>
    %2365 = stablehlo.multiply %2360, %2123 : tensor<64x512x768xf32>
    %2366 = stablehlo.add %2364, %2365 : tensor<64x512x768xf32>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2367 = stablehlo.reduce(%2366 init: %cst_128) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2368 = stablehlo.reshape %2367 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2369 = stablehlo.reduce(%2368 init: %cst_129) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2370 = stablehlo.broadcast_in_dim %2369, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_130 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2371 = stablehlo.reduce(%2370 init: %cst_130) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2372 = stablehlo.dot_general %2366, %2114, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2373 = stablehlo.transpose %2372, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2374 = stablehlo.dot_general %2366, %arg62, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2375 = stablehlo.multiply %2095, %2374 : tensor<64x512x3072xf32>
    %2376 = stablehlo.multiply %2374, %2113 : tensor<64x512x3072xf32>
    %2377 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2378 = stablehlo.multiply %2377, %2375 : tensor<64x512x3072xf32>
    %2379 = stablehlo.multiply %2378, %2109 : tensor<64x512x3072xf32>
    %2380 = stablehlo.multiply %2379, %2106 : tensor<64x512x3072xf32>
    %2381 = stablehlo.add %2379, %2380 : tensor<64x512x3072xf32>
    %2382 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2383 = stablehlo.multiply %2382, %2381 : tensor<64x512x3072xf32>
    %2384 = stablehlo.add %2376, %2383 : tensor<64x512x3072xf32>
    %2385 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2386 = stablehlo.multiply %2385, %2383 : tensor<64x512x3072xf32>
    %2387 = stablehlo.multiply %2386, %2100 : tensor<64x512x3072xf32>
    %2388 = stablehlo.add %2384, %2387 : tensor<64x512x3072xf32>
    %cst_131 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2389 = stablehlo.reduce(%2388 init: %cst_131) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2390 = stablehlo.reshape %2389 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2391 = stablehlo.reduce(%2390 init: %cst_132) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2392 = stablehlo.broadcast_in_dim %2391, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_133 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2393 = stablehlo.reduce(%2392 init: %cst_133) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2394 = stablehlo.dot_general %2388, %2090, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2395 = stablehlo.transpose %2394, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2396 = stablehlo.dot_general %2388, %arg66, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2397 = stablehlo.add %2366, %2396 : tensor<64x512x768xf32>
    %cst_134 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2398 = stablehlo.reduce(%2397 init: %cst_134) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2399 = stablehlo.reshape %2398 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2400 = stablehlo.reshape %2399 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2401 = stablehlo.multiply %2076, %2397 : tensor<64x512x768xf32>
    %2402 = stablehlo.multiply %2397, %2086 : tensor<64x512x768xf32>
    %2403 = stablehlo.broadcast_in_dim %2079, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2404 = stablehlo.multiply %2403, %2401 : tensor<64x512x768xf32>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2405 = stablehlo.reduce(%2404 init: %cst_135) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2406 = stablehlo.reshape %2405 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2407 = stablehlo.broadcast_in_dim %2083, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2408 = stablehlo.multiply %2401, %2407 : tensor<64x512x768xf32>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2409 = stablehlo.reduce(%2408 init: %cst_136) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2410 = stablehlo.reshape %2409 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2411 = stablehlo.reshape %2406 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2412 = stablehlo.multiply %2410, %2082 : tensor<64x512x1xf32>
    %2413 = stablehlo.negate %2402 : tensor<64x512x768xf32>
    %cst_137 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2414 = stablehlo.reduce(%2413 init: %cst_137) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2415 = stablehlo.reshape %2414 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2416 = stablehlo.reduce(%2412 init: %cst_138) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2417 = stablehlo.reduce(%2415 init: %cst_139) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2418 = stablehlo.multiply %2416, %2072 : tensor<64x512xf32>
    %2419 = stablehlo.negate %2418 : tensor<64x512xf32>
    %2420 = stablehlo.multiply %2419, %2059 : tensor<64x512xf32>
    %2421 = stablehlo.add %2417, %2420 : tensor<64x512xf32>
    %2422 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2423 = stablehlo.divide %2418, %2422 : tensor<64x512xf32>
    %2424 = stablehlo.broadcast_in_dim %2423, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2425 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2426 = stablehlo.divide %2421, %2425 : tensor<64x512xf32>
    %2427 = stablehlo.broadcast_in_dim %2426, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2428 = stablehlo.add %2402, %2427 : tensor<64x512x768xf32>
    %2429 = stablehlo.multiply %2424, %2050 : tensor<64x512x768xf32>
    %2430 = stablehlo.add %2428, %2429 : tensor<64x512x768xf32>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2431 = stablehlo.reduce(%2430 init: %cst_140) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2432 = stablehlo.reshape %2431 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2433 = stablehlo.reduce(%2432 init: %cst_141) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2434 = stablehlo.broadcast_in_dim %2433, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_142 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2435 = stablehlo.reduce(%2434 init: %cst_142) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2436 = stablehlo.dot_general %2430, %2040, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2437 = stablehlo.transpose %2436, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2438 = stablehlo.dot_general %2430, %2041, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2439 = stablehlo.reshape %2437 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2440 = stablehlo.transpose %2438, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2441 = stablehlo.dot_general %2440, %2010, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2442 = stablehlo.dot_general %2440, %2035, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2443 = stablehlo.transpose %2442, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2444 = stablehlo.broadcast_in_dim %2038, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2445 = stablehlo.multiply %2441, %2444 : tensor<64x12x512x512xf32>
    %2446 = stablehlo.multiply %2445, %2031 : tensor<64x12x512x512xf32>
    %cst_143 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2447 = stablehlo.reduce(%2446 init: %cst_143) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2448 = stablehlo.reshape %2447 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2449 = stablehlo.negate %2448 : tensor<64x12x512x1xf32>
    %2450 = stablehlo.broadcast_in_dim %2033, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2451 = stablehlo.divide %2441, %2450 : tensor<64x12x512x512xf32>
    %cst_144 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2452 = stablehlo.reduce(%2449 init: %cst_144) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2453 = stablehlo.broadcast_in_dim %2452, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2454 = stablehlo.add %2451, %2453 : tensor<64x12x512x512xf32>
    %2455 = stablehlo.multiply %2454, %2031 : tensor<64x12x512x512xf32>
    %2456 = stablehlo.dot_general %2455, %2021, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2457 = stablehlo.transpose %2456, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2458 = stablehlo.dot_general %2455, %2003, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2459 = stablehlo.transpose %2458, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2460 = stablehlo.broadcast_in_dim %2019, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2461 = stablehlo.divide %2459, %2460 : tensor<64x512x12x64xf32>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2462 = stablehlo.reduce(%2443 init: %cst_145) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2463 = stablehlo.reshape %2462 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2464 = stablehlo.reduce(%2463 init: %cst_146) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2465 = stablehlo.broadcast_in_dim %2464, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_147 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2466 = stablehlo.reduce(%2465 init: %cst_147) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2467 = stablehlo.reshape %2466 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2468 = stablehlo.dot_general %2443, %1989, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2469 = stablehlo.transpose %2468, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2470 = stablehlo.dot_general %2443, %2004, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2471 = stablehlo.add %2430, %2470 : tensor<64x512x768xf32>
    %2472 = stablehlo.reshape %2469 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_148 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2473 = stablehlo.reduce(%2457 init: %cst_148) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2474 = stablehlo.reshape %2473 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2475 = stablehlo.reduce(%2474 init: %cst_149) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2476 = stablehlo.broadcast_in_dim %2475, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2477 = stablehlo.reduce(%2476 init: %cst_150) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2478 = stablehlo.reshape %2477 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2479 = stablehlo.dot_general %2457, %1989, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2480 = stablehlo.transpose %2479, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2481 = stablehlo.dot_general %2457, %1997, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2482 = stablehlo.add %2471, %2481 : tensor<64x512x768xf32>
    %2483 = stablehlo.reshape %2480 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2484 = stablehlo.reduce(%2461 init: %cst_151) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2485 = stablehlo.reshape %2484 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2486 = stablehlo.reduce(%2485 init: %cst_152) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2487 = stablehlo.broadcast_in_dim %2486, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2488 = stablehlo.reduce(%2487 init: %cst_153) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2489 = stablehlo.reshape %2488 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2490 = stablehlo.dot_general %2461, %1989, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2491 = stablehlo.transpose %2490, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2492 = stablehlo.dot_general %2461, %1990, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2493 = stablehlo.add %2482, %2492 : tensor<64x512x768xf32>
    %2494 = stablehlo.reshape %2491 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2495 = stablehlo.reduce(%2493 init: %cst_154) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2496 = stablehlo.reshape %2495 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2497 = stablehlo.reshape %2496 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2498 = stablehlo.multiply %1975, %2493 : tensor<64x512x768xf32>
    %2499 = stablehlo.multiply %2493, %1985 : tensor<64x512x768xf32>
    %2500 = stablehlo.broadcast_in_dim %1978, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2501 = stablehlo.multiply %2500, %2498 : tensor<64x512x768xf32>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2502 = stablehlo.reduce(%2501 init: %cst_155) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2503 = stablehlo.reshape %2502 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2504 = stablehlo.broadcast_in_dim %1982, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2505 = stablehlo.multiply %2498, %2504 : tensor<64x512x768xf32>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2506 = stablehlo.reduce(%2505 init: %cst_156) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2507 = stablehlo.reshape %2506 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2508 = stablehlo.reshape %2503 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2509 = stablehlo.multiply %2507, %1981 : tensor<64x512x1xf32>
    %2510 = stablehlo.negate %2499 : tensor<64x512x768xf32>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2511 = stablehlo.reduce(%2510 init: %cst_157) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2512 = stablehlo.reshape %2511 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2513 = stablehlo.reduce(%2509 init: %cst_158) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2514 = stablehlo.reduce(%2512 init: %cst_159) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2515 = stablehlo.multiply %2513, %1971 : tensor<64x512xf32>
    %2516 = stablehlo.negate %2515 : tensor<64x512xf32>
    %2517 = stablehlo.multiply %2516, %1958 : tensor<64x512xf32>
    %2518 = stablehlo.add %2514, %2517 : tensor<64x512xf32>
    %2519 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2520 = stablehlo.divide %2515, %2519 : tensor<64x512xf32>
    %2521 = stablehlo.broadcast_in_dim %2520, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2522 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2523 = stablehlo.divide %2518, %2522 : tensor<64x512xf32>
    %2524 = stablehlo.broadcast_in_dim %2523, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2525 = stablehlo.add %2499, %2524 : tensor<64x512x768xf32>
    %2526 = stablehlo.multiply %2521, %1949 : tensor<64x512x768xf32>
    %2527 = stablehlo.add %2525, %2526 : tensor<64x512x768xf32>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2528 = stablehlo.reduce(%2527 init: %cst_160) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2529 = stablehlo.reshape %2528 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2530 = stablehlo.reduce(%2529 init: %cst_161) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2531 = stablehlo.broadcast_in_dim %2530, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2532 = stablehlo.reduce(%2531 init: %cst_162) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2533 = stablehlo.dot_general %2527, %1940, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2534 = stablehlo.transpose %2533, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2535 = stablehlo.dot_general %2527, %arg46, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2536 = stablehlo.multiply %1921, %2535 : tensor<64x512x3072xf32>
    %2537 = stablehlo.multiply %2535, %1939 : tensor<64x512x3072xf32>
    %2538 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2539 = stablehlo.multiply %2538, %2536 : tensor<64x512x3072xf32>
    %2540 = stablehlo.multiply %2539, %1935 : tensor<64x512x3072xf32>
    %2541 = stablehlo.multiply %2540, %1932 : tensor<64x512x3072xf32>
    %2542 = stablehlo.add %2540, %2541 : tensor<64x512x3072xf32>
    %2543 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2544 = stablehlo.multiply %2543, %2542 : tensor<64x512x3072xf32>
    %2545 = stablehlo.add %2537, %2544 : tensor<64x512x3072xf32>
    %2546 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2547 = stablehlo.multiply %2546, %2544 : tensor<64x512x3072xf32>
    %2548 = stablehlo.multiply %2547, %1926 : tensor<64x512x3072xf32>
    %2549 = stablehlo.add %2545, %2548 : tensor<64x512x3072xf32>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2550 = stablehlo.reduce(%2549 init: %cst_163) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2551 = stablehlo.reshape %2550 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2552 = stablehlo.reduce(%2551 init: %cst_164) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2553 = stablehlo.broadcast_in_dim %2552, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2554 = stablehlo.reduce(%2553 init: %cst_165) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2555 = stablehlo.dot_general %2549, %1916, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2556 = stablehlo.transpose %2555, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2557 = stablehlo.dot_general %2549, %arg50, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2558 = stablehlo.add %2527, %2557 : tensor<64x512x768xf32>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2559 = stablehlo.reduce(%2558 init: %cst_166) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2560 = stablehlo.reshape %2559 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2561 = stablehlo.reshape %2560 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2562 = stablehlo.multiply %1902, %2558 : tensor<64x512x768xf32>
    %2563 = stablehlo.multiply %2558, %1912 : tensor<64x512x768xf32>
    %2564 = stablehlo.broadcast_in_dim %1905, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2565 = stablehlo.multiply %2564, %2562 : tensor<64x512x768xf32>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2566 = stablehlo.reduce(%2565 init: %cst_167) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2567 = stablehlo.reshape %2566 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2568 = stablehlo.broadcast_in_dim %1909, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2569 = stablehlo.multiply %2562, %2568 : tensor<64x512x768xf32>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2570 = stablehlo.reduce(%2569 init: %cst_168) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2571 = stablehlo.reshape %2570 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2572 = stablehlo.reshape %2567 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2573 = stablehlo.multiply %2571, %1908 : tensor<64x512x1xf32>
    %2574 = stablehlo.negate %2563 : tensor<64x512x768xf32>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2575 = stablehlo.reduce(%2574 init: %cst_169) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2576 = stablehlo.reshape %2575 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2577 = stablehlo.reduce(%2573 init: %cst_170) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2578 = stablehlo.reduce(%2576 init: %cst_171) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2579 = stablehlo.multiply %2577, %1898 : tensor<64x512xf32>
    %2580 = stablehlo.negate %2579 : tensor<64x512xf32>
    %2581 = stablehlo.multiply %2580, %1885 : tensor<64x512xf32>
    %2582 = stablehlo.add %2578, %2581 : tensor<64x512xf32>
    %2583 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2584 = stablehlo.divide %2579, %2583 : tensor<64x512xf32>
    %2585 = stablehlo.broadcast_in_dim %2584, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2586 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2587 = stablehlo.divide %2582, %2586 : tensor<64x512xf32>
    %2588 = stablehlo.broadcast_in_dim %2587, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2589 = stablehlo.add %2563, %2588 : tensor<64x512x768xf32>
    %2590 = stablehlo.multiply %2585, %1876 : tensor<64x512x768xf32>
    %2591 = stablehlo.add %2589, %2590 : tensor<64x512x768xf32>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2592 = stablehlo.reduce(%2591 init: %cst_172) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2593 = stablehlo.reshape %2592 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2594 = stablehlo.reduce(%2593 init: %cst_173) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2595 = stablehlo.broadcast_in_dim %2594, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2596 = stablehlo.reduce(%2595 init: %cst_174) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2597 = stablehlo.dot_general %2591, %1866, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2598 = stablehlo.transpose %2597, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2599 = stablehlo.dot_general %2591, %1867, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2600 = stablehlo.reshape %2598 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2601 = stablehlo.transpose %2599, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2602 = stablehlo.dot_general %2601, %1836, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2603 = stablehlo.dot_general %2601, %1861, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2604 = stablehlo.transpose %2603, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2605 = stablehlo.broadcast_in_dim %1864, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2606 = stablehlo.multiply %2602, %2605 : tensor<64x12x512x512xf32>
    %2607 = stablehlo.multiply %2606, %1857 : tensor<64x12x512x512xf32>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2608 = stablehlo.reduce(%2607 init: %cst_175) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2609 = stablehlo.reshape %2608 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2610 = stablehlo.negate %2609 : tensor<64x12x512x1xf32>
    %2611 = stablehlo.broadcast_in_dim %1859, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2612 = stablehlo.divide %2602, %2611 : tensor<64x12x512x512xf32>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2613 = stablehlo.reduce(%2610 init: %cst_176) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2614 = stablehlo.broadcast_in_dim %2613, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2615 = stablehlo.add %2612, %2614 : tensor<64x12x512x512xf32>
    %2616 = stablehlo.multiply %2615, %1857 : tensor<64x12x512x512xf32>
    %2617 = stablehlo.dot_general %2616, %1847, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2618 = stablehlo.transpose %2617, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2619 = stablehlo.dot_general %2616, %1829, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2620 = stablehlo.transpose %2619, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2621 = stablehlo.broadcast_in_dim %1845, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2622 = stablehlo.divide %2620, %2621 : tensor<64x512x12x64xf32>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2623 = stablehlo.reduce(%2604 init: %cst_177) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2624 = stablehlo.reshape %2623 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2625 = stablehlo.reduce(%2624 init: %cst_178) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2626 = stablehlo.broadcast_in_dim %2625, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2627 = stablehlo.reduce(%2626 init: %cst_179) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2628 = stablehlo.reshape %2627 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2629 = stablehlo.dot_general %2604, %1815, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2630 = stablehlo.transpose %2629, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2631 = stablehlo.dot_general %2604, %1830, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2632 = stablehlo.add %2591, %2631 : tensor<64x512x768xf32>
    %2633 = stablehlo.reshape %2630 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2634 = stablehlo.reduce(%2618 init: %cst_180) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2635 = stablehlo.reshape %2634 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2636 = stablehlo.reduce(%2635 init: %cst_181) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2637 = stablehlo.broadcast_in_dim %2636, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2638 = stablehlo.reduce(%2637 init: %cst_182) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2639 = stablehlo.reshape %2638 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2640 = stablehlo.dot_general %2618, %1815, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2641 = stablehlo.transpose %2640, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2642 = stablehlo.dot_general %2618, %1823, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2643 = stablehlo.add %2632, %2642 : tensor<64x512x768xf32>
    %2644 = stablehlo.reshape %2641 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2645 = stablehlo.reduce(%2622 init: %cst_183) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2646 = stablehlo.reshape %2645 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2647 = stablehlo.reduce(%2646 init: %cst_184) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2648 = stablehlo.broadcast_in_dim %2647, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2649 = stablehlo.reduce(%2648 init: %cst_185) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2650 = stablehlo.reshape %2649 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2651 = stablehlo.dot_general %2622, %1815, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2652 = stablehlo.transpose %2651, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2653 = stablehlo.dot_general %2622, %1816, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2654 = stablehlo.add %2643, %2653 : tensor<64x512x768xf32>
    %2655 = stablehlo.reshape %2652 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2656 = stablehlo.reduce(%2654 init: %cst_186) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2657 = stablehlo.reshape %2656 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2658 = stablehlo.reshape %2657 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2659 = stablehlo.multiply %1801, %2654 : tensor<64x512x768xf32>
    %2660 = stablehlo.multiply %2654, %1811 : tensor<64x512x768xf32>
    %2661 = stablehlo.broadcast_in_dim %1804, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2662 = stablehlo.multiply %2661, %2659 : tensor<64x512x768xf32>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2663 = stablehlo.reduce(%2662 init: %cst_187) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2664 = stablehlo.reshape %2663 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2665 = stablehlo.broadcast_in_dim %1808, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2666 = stablehlo.multiply %2659, %2665 : tensor<64x512x768xf32>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2667 = stablehlo.reduce(%2666 init: %cst_188) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2668 = stablehlo.reshape %2667 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2669 = stablehlo.reshape %2664 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2670 = stablehlo.multiply %2668, %1807 : tensor<64x512x1xf32>
    %2671 = stablehlo.negate %2660 : tensor<64x512x768xf32>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2672 = stablehlo.reduce(%2671 init: %cst_189) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2673 = stablehlo.reshape %2672 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2674 = stablehlo.reduce(%2670 init: %cst_190) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2675 = stablehlo.reduce(%2673 init: %cst_191) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2676 = stablehlo.multiply %2674, %1797 : tensor<64x512xf32>
    %2677 = stablehlo.negate %2676 : tensor<64x512xf32>
    %2678 = stablehlo.multiply %2677, %1784 : tensor<64x512xf32>
    %2679 = stablehlo.add %2675, %2678 : tensor<64x512xf32>
    %2680 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2681 = stablehlo.divide %2676, %2680 : tensor<64x512xf32>
    %2682 = stablehlo.broadcast_in_dim %2681, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2683 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2684 = stablehlo.divide %2679, %2683 : tensor<64x512xf32>
    %2685 = stablehlo.broadcast_in_dim %2684, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2686 = stablehlo.add %2660, %2685 : tensor<64x512x768xf32>
    %2687 = stablehlo.multiply %2682, %1775 : tensor<64x512x768xf32>
    %2688 = stablehlo.add %2686, %2687 : tensor<64x512x768xf32>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2689 = stablehlo.reduce(%2688 init: %cst_192) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2690 = stablehlo.reshape %2689 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2691 = stablehlo.reduce(%2690 init: %cst_193) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2692 = stablehlo.broadcast_in_dim %2691, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2693 = stablehlo.reduce(%2692 init: %cst_194) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2694 = stablehlo.dot_general %2688, %1766, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2695 = stablehlo.transpose %2694, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2696 = stablehlo.dot_general %2688, %arg190, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2697 = stablehlo.multiply %1747, %2696 : tensor<64x512x3072xf32>
    %2698 = stablehlo.multiply %2696, %1765 : tensor<64x512x3072xf32>
    %2699 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2700 = stablehlo.multiply %2699, %2697 : tensor<64x512x3072xf32>
    %2701 = stablehlo.multiply %2700, %1761 : tensor<64x512x3072xf32>
    %2702 = stablehlo.multiply %2701, %1758 : tensor<64x512x3072xf32>
    %2703 = stablehlo.add %2701, %2702 : tensor<64x512x3072xf32>
    %2704 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2705 = stablehlo.multiply %2704, %2703 : tensor<64x512x3072xf32>
    %2706 = stablehlo.add %2698, %2705 : tensor<64x512x3072xf32>
    %2707 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2708 = stablehlo.multiply %2707, %2705 : tensor<64x512x3072xf32>
    %2709 = stablehlo.multiply %2708, %1752 : tensor<64x512x3072xf32>
    %2710 = stablehlo.add %2706, %2709 : tensor<64x512x3072xf32>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2711 = stablehlo.reduce(%2710 init: %cst_195) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2712 = stablehlo.reshape %2711 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2713 = stablehlo.reduce(%2712 init: %cst_196) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2714 = stablehlo.broadcast_in_dim %2713, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2715 = stablehlo.reduce(%2714 init: %cst_197) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2716 = stablehlo.dot_general %2710, %1742, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2717 = stablehlo.transpose %2716, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2718 = stablehlo.dot_general %2710, %arg194, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2719 = stablehlo.add %2688, %2718 : tensor<64x512x768xf32>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2720 = stablehlo.reduce(%2719 init: %cst_198) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2721 = stablehlo.reshape %2720 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2722 = stablehlo.reshape %2721 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2723 = stablehlo.multiply %1728, %2719 : tensor<64x512x768xf32>
    %2724 = stablehlo.multiply %2719, %1738 : tensor<64x512x768xf32>
    %2725 = stablehlo.broadcast_in_dim %1731, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2726 = stablehlo.multiply %2725, %2723 : tensor<64x512x768xf32>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2727 = stablehlo.reduce(%2726 init: %cst_199) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2728 = stablehlo.reshape %2727 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2729 = stablehlo.broadcast_in_dim %1735, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2730 = stablehlo.multiply %2723, %2729 : tensor<64x512x768xf32>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2731 = stablehlo.reduce(%2730 init: %cst_200) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2732 = stablehlo.reshape %2731 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2733 = stablehlo.reshape %2728 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2734 = stablehlo.multiply %2732, %1734 : tensor<64x512x1xf32>
    %2735 = stablehlo.negate %2724 : tensor<64x512x768xf32>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2736 = stablehlo.reduce(%2735 init: %cst_201) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2737 = stablehlo.reshape %2736 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2738 = stablehlo.reduce(%2734 init: %cst_202) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2739 = stablehlo.reduce(%2737 init: %cst_203) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2740 = stablehlo.multiply %2738, %1724 : tensor<64x512xf32>
    %2741 = stablehlo.negate %2740 : tensor<64x512xf32>
    %2742 = stablehlo.multiply %2741, %1711 : tensor<64x512xf32>
    %2743 = stablehlo.add %2739, %2742 : tensor<64x512xf32>
    %2744 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2745 = stablehlo.divide %2740, %2744 : tensor<64x512xf32>
    %2746 = stablehlo.broadcast_in_dim %2745, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2747 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2748 = stablehlo.divide %2743, %2747 : tensor<64x512xf32>
    %2749 = stablehlo.broadcast_in_dim %2748, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2750 = stablehlo.add %2724, %2749 : tensor<64x512x768xf32>
    %2751 = stablehlo.multiply %2746, %1702 : tensor<64x512x768xf32>
    %2752 = stablehlo.add %2750, %2751 : tensor<64x512x768xf32>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2753 = stablehlo.reduce(%2752 init: %cst_204) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2754 = stablehlo.reshape %2753 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2755 = stablehlo.reduce(%2754 init: %cst_205) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2756 = stablehlo.broadcast_in_dim %2755, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2757 = stablehlo.reduce(%2756 init: %cst_206) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2758 = stablehlo.dot_general %2752, %1692, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2759 = stablehlo.transpose %2758, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2760 = stablehlo.dot_general %2752, %1693, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2761 = stablehlo.reshape %2759 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2762 = stablehlo.transpose %2760, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2763 = stablehlo.dot_general %2762, %1662, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2764 = stablehlo.dot_general %2762, %1687, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2765 = stablehlo.transpose %2764, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2766 = stablehlo.broadcast_in_dim %1690, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2767 = stablehlo.multiply %2763, %2766 : tensor<64x12x512x512xf32>
    %2768 = stablehlo.multiply %2767, %1683 : tensor<64x12x512x512xf32>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2769 = stablehlo.reduce(%2768 init: %cst_207) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2770 = stablehlo.reshape %2769 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2771 = stablehlo.negate %2770 : tensor<64x12x512x1xf32>
    %2772 = stablehlo.broadcast_in_dim %1685, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2773 = stablehlo.divide %2763, %2772 : tensor<64x12x512x512xf32>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2774 = stablehlo.reduce(%2771 init: %cst_208) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2775 = stablehlo.broadcast_in_dim %2774, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2776 = stablehlo.add %2773, %2775 : tensor<64x12x512x512xf32>
    %2777 = stablehlo.multiply %2776, %1683 : tensor<64x12x512x512xf32>
    %2778 = stablehlo.dot_general %2777, %1673, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2779 = stablehlo.transpose %2778, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2780 = stablehlo.dot_general %2777, %1655, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2781 = stablehlo.transpose %2780, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2782 = stablehlo.broadcast_in_dim %1671, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2783 = stablehlo.divide %2781, %2782 : tensor<64x512x12x64xf32>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2784 = stablehlo.reduce(%2765 init: %cst_209) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2785 = stablehlo.reshape %2784 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2786 = stablehlo.reduce(%2785 init: %cst_210) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2787 = stablehlo.broadcast_in_dim %2786, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2788 = stablehlo.reduce(%2787 init: %cst_211) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2789 = stablehlo.reshape %2788 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2790 = stablehlo.dot_general %2765, %1641, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2791 = stablehlo.transpose %2790, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2792 = stablehlo.dot_general %2765, %1656, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2793 = stablehlo.add %2752, %2792 : tensor<64x512x768xf32>
    %2794 = stablehlo.reshape %2791 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2795 = stablehlo.reduce(%2779 init: %cst_212) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2796 = stablehlo.reshape %2795 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2797 = stablehlo.reduce(%2796 init: %cst_213) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2798 = stablehlo.broadcast_in_dim %2797, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2799 = stablehlo.reduce(%2798 init: %cst_214) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2800 = stablehlo.reshape %2799 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2801 = stablehlo.dot_general %2779, %1641, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2802 = stablehlo.transpose %2801, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2803 = stablehlo.dot_general %2779, %1649, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2804 = stablehlo.add %2793, %2803 : tensor<64x512x768xf32>
    %2805 = stablehlo.reshape %2802 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2806 = stablehlo.reduce(%2783 init: %cst_215) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2807 = stablehlo.reshape %2806 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2808 = stablehlo.reduce(%2807 init: %cst_216) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2809 = stablehlo.broadcast_in_dim %2808, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2810 = stablehlo.reduce(%2809 init: %cst_217) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2811 = stablehlo.reshape %2810 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2812 = stablehlo.dot_general %2783, %1641, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2813 = stablehlo.transpose %2812, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2814 = stablehlo.dot_general %2783, %1642, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2815 = stablehlo.add %2804, %2814 : tensor<64x512x768xf32>
    %2816 = stablehlo.reshape %2813 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2817 = stablehlo.reduce(%2815 init: %cst_218) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2818 = stablehlo.reshape %2817 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2819 = stablehlo.reshape %2818 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2820 = stablehlo.multiply %1627, %2815 : tensor<64x512x768xf32>
    %2821 = stablehlo.multiply %2815, %1637 : tensor<64x512x768xf32>
    %2822 = stablehlo.broadcast_in_dim %1630, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2823 = stablehlo.multiply %2822, %2820 : tensor<64x512x768xf32>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2824 = stablehlo.reduce(%2823 init: %cst_219) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2825 = stablehlo.reshape %2824 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2826 = stablehlo.broadcast_in_dim %1634, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2827 = stablehlo.multiply %2820, %2826 : tensor<64x512x768xf32>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2828 = stablehlo.reduce(%2827 init: %cst_220) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2829 = stablehlo.reshape %2828 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2830 = stablehlo.reshape %2825 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2831 = stablehlo.multiply %2829, %1633 : tensor<64x512x1xf32>
    %2832 = stablehlo.negate %2821 : tensor<64x512x768xf32>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2833 = stablehlo.reduce(%2832 init: %cst_221) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2834 = stablehlo.reshape %2833 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2835 = stablehlo.reduce(%2831 init: %cst_222) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2836 = stablehlo.reduce(%2834 init: %cst_223) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2837 = stablehlo.multiply %2835, %1623 : tensor<64x512xf32>
    %2838 = stablehlo.negate %2837 : tensor<64x512xf32>
    %2839 = stablehlo.multiply %2838, %1610 : tensor<64x512xf32>
    %2840 = stablehlo.add %2836, %2839 : tensor<64x512xf32>
    %2841 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2842 = stablehlo.divide %2837, %2841 : tensor<64x512xf32>
    %2843 = stablehlo.broadcast_in_dim %2842, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2844 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2845 = stablehlo.divide %2840, %2844 : tensor<64x512xf32>
    %2846 = stablehlo.broadcast_in_dim %2845, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2847 = stablehlo.add %2821, %2846 : tensor<64x512x768xf32>
    %2848 = stablehlo.multiply %2843, %1601 : tensor<64x512x768xf32>
    %2849 = stablehlo.add %2847, %2848 : tensor<64x512x768xf32>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2850 = stablehlo.reduce(%2849 init: %cst_224) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2851 = stablehlo.reshape %2850 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2852 = stablehlo.reduce(%2851 init: %cst_225) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2853 = stablehlo.broadcast_in_dim %2852, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2854 = stablehlo.reduce(%2853 init: %cst_226) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2855 = stablehlo.dot_general %2849, %1592, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2856 = stablehlo.transpose %2855, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2857 = stablehlo.dot_general %2849, %arg174, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2858 = stablehlo.multiply %1573, %2857 : tensor<64x512x3072xf32>
    %2859 = stablehlo.multiply %2857, %1591 : tensor<64x512x3072xf32>
    %2860 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2861 = stablehlo.multiply %2860, %2858 : tensor<64x512x3072xf32>
    %2862 = stablehlo.multiply %2861, %1587 : tensor<64x512x3072xf32>
    %2863 = stablehlo.multiply %2862, %1584 : tensor<64x512x3072xf32>
    %2864 = stablehlo.add %2862, %2863 : tensor<64x512x3072xf32>
    %2865 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2866 = stablehlo.multiply %2865, %2864 : tensor<64x512x3072xf32>
    %2867 = stablehlo.add %2859, %2866 : tensor<64x512x3072xf32>
    %2868 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2869 = stablehlo.multiply %2868, %2866 : tensor<64x512x3072xf32>
    %2870 = stablehlo.multiply %2869, %1578 : tensor<64x512x3072xf32>
    %2871 = stablehlo.add %2867, %2870 : tensor<64x512x3072xf32>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2872 = stablehlo.reduce(%2871 init: %cst_227) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2873 = stablehlo.reshape %2872 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2874 = stablehlo.reduce(%2873 init: %cst_228) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2875 = stablehlo.broadcast_in_dim %2874, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2876 = stablehlo.reduce(%2875 init: %cst_229) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2877 = stablehlo.dot_general %2871, %1568, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2878 = stablehlo.transpose %2877, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2879 = stablehlo.dot_general %2871, %arg178, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2880 = stablehlo.add %2849, %2879 : tensor<64x512x768xf32>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2881 = stablehlo.reduce(%2880 init: %cst_230) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2882 = stablehlo.reshape %2881 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2883 = stablehlo.reshape %2882 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2884 = stablehlo.multiply %1554, %2880 : tensor<64x512x768xf32>
    %2885 = stablehlo.multiply %2880, %1564 : tensor<64x512x768xf32>
    %2886 = stablehlo.broadcast_in_dim %1557, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2887 = stablehlo.multiply %2886, %2884 : tensor<64x512x768xf32>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2888 = stablehlo.reduce(%2887 init: %cst_231) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2889 = stablehlo.reshape %2888 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2890 = stablehlo.broadcast_in_dim %1561, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2891 = stablehlo.multiply %2884, %2890 : tensor<64x512x768xf32>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2892 = stablehlo.reduce(%2891 init: %cst_232) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2893 = stablehlo.reshape %2892 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2894 = stablehlo.reshape %2889 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2895 = stablehlo.multiply %2893, %1560 : tensor<64x512x1xf32>
    %2896 = stablehlo.negate %2885 : tensor<64x512x768xf32>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2897 = stablehlo.reduce(%2896 init: %cst_233) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2898 = stablehlo.reshape %2897 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2899 = stablehlo.reduce(%2895 init: %cst_234) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2900 = stablehlo.reduce(%2898 init: %cst_235) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2901 = stablehlo.multiply %2899, %1550 : tensor<64x512xf32>
    %2902 = stablehlo.negate %2901 : tensor<64x512xf32>
    %2903 = stablehlo.multiply %2902, %1537 : tensor<64x512xf32>
    %2904 = stablehlo.add %2900, %2903 : tensor<64x512xf32>
    %2905 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2906 = stablehlo.divide %2901, %2905 : tensor<64x512xf32>
    %2907 = stablehlo.broadcast_in_dim %2906, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2908 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2909 = stablehlo.divide %2904, %2908 : tensor<64x512xf32>
    %2910 = stablehlo.broadcast_in_dim %2909, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2911 = stablehlo.add %2885, %2910 : tensor<64x512x768xf32>
    %2912 = stablehlo.multiply %2907, %1528 : tensor<64x512x768xf32>
    %2913 = stablehlo.add %2911, %2912 : tensor<64x512x768xf32>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2914 = stablehlo.reduce(%2913 init: %cst_236) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2915 = stablehlo.reshape %2914 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2916 = stablehlo.reduce(%2915 init: %cst_237) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2917 = stablehlo.broadcast_in_dim %2916, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2918 = stablehlo.reduce(%2917 init: %cst_238) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2919 = stablehlo.dot_general %2913, %1518, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2920 = stablehlo.transpose %2919, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2921 = stablehlo.dot_general %2913, %1519, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2922 = stablehlo.reshape %2920 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2923 = stablehlo.transpose %2921, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2924 = stablehlo.dot_general %2923, %1488, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2925 = stablehlo.dot_general %2923, %1513, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2926 = stablehlo.transpose %2925, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2927 = stablehlo.broadcast_in_dim %1516, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2928 = stablehlo.multiply %2924, %2927 : tensor<64x12x512x512xf32>
    %2929 = stablehlo.multiply %2928, %1509 : tensor<64x12x512x512xf32>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2930 = stablehlo.reduce(%2929 init: %cst_239) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2931 = stablehlo.reshape %2930 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2932 = stablehlo.negate %2931 : tensor<64x12x512x1xf32>
    %2933 = stablehlo.broadcast_in_dim %1511, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2934 = stablehlo.divide %2924, %2933 : tensor<64x12x512x512xf32>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2935 = stablehlo.reduce(%2932 init: %cst_240) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2936 = stablehlo.broadcast_in_dim %2935, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2937 = stablehlo.add %2934, %2936 : tensor<64x12x512x512xf32>
    %2938 = stablehlo.multiply %2937, %1509 : tensor<64x12x512x512xf32>
    %2939 = stablehlo.dot_general %2938, %1499, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2940 = stablehlo.transpose %2939, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2941 = stablehlo.dot_general %2938, %1481, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2942 = stablehlo.transpose %2941, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2943 = stablehlo.broadcast_in_dim %1497, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2944 = stablehlo.divide %2942, %2943 : tensor<64x512x12x64xf32>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2945 = stablehlo.reduce(%2926 init: %cst_241) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2946 = stablehlo.reshape %2945 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2947 = stablehlo.reduce(%2946 init: %cst_242) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2948 = stablehlo.broadcast_in_dim %2947, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2949 = stablehlo.reduce(%2948 init: %cst_243) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2950 = stablehlo.reshape %2949 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2951 = stablehlo.dot_general %2926, %1467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2952 = stablehlo.transpose %2951, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2953 = stablehlo.dot_general %2926, %1482, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2954 = stablehlo.add %2913, %2953 : tensor<64x512x768xf32>
    %2955 = stablehlo.reshape %2952 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2956 = stablehlo.reduce(%2940 init: %cst_244) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2957 = stablehlo.reshape %2956 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2958 = stablehlo.reduce(%2957 init: %cst_245) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2959 = stablehlo.broadcast_in_dim %2958, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2960 = stablehlo.reduce(%2959 init: %cst_246) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2961 = stablehlo.reshape %2960 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2962 = stablehlo.dot_general %2940, %1467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2963 = stablehlo.transpose %2962, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2964 = stablehlo.dot_general %2940, %1475, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2965 = stablehlo.add %2954, %2964 : tensor<64x512x768xf32>
    %2966 = stablehlo.reshape %2963 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2967 = stablehlo.reduce(%2944 init: %cst_247) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2968 = stablehlo.reshape %2967 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2969 = stablehlo.reduce(%2968 init: %cst_248) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2970 = stablehlo.broadcast_in_dim %2969, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2971 = stablehlo.reduce(%2970 init: %cst_249) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2972 = stablehlo.reshape %2971 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2973 = stablehlo.dot_general %2944, %1467, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2974 = stablehlo.transpose %2973, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2975 = stablehlo.dot_general %2944, %1468, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2976 = stablehlo.add %2965, %2975 : tensor<64x512x768xf32>
    %2977 = stablehlo.reshape %2974 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2978 = stablehlo.reduce(%2976 init: %cst_250) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2979 = stablehlo.reshape %2978 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2980 = stablehlo.reshape %2979 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2981 = stablehlo.multiply %1453, %2976 : tensor<64x512x768xf32>
    %2982 = stablehlo.multiply %2976, %1463 : tensor<64x512x768xf32>
    %2983 = stablehlo.broadcast_in_dim %1456, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2984 = stablehlo.multiply %2983, %2981 : tensor<64x512x768xf32>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2985 = stablehlo.reduce(%2984 init: %cst_251) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2986 = stablehlo.reshape %2985 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2987 = stablehlo.broadcast_in_dim %1460, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2988 = stablehlo.multiply %2981, %2987 : tensor<64x512x768xf32>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2989 = stablehlo.reduce(%2988 init: %cst_252) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2990 = stablehlo.reshape %2989 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2991 = stablehlo.reshape %2986 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2992 = stablehlo.multiply %2990, %1459 : tensor<64x512x1xf32>
    %2993 = stablehlo.negate %2982 : tensor<64x512x768xf32>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2994 = stablehlo.reduce(%2993 init: %cst_253) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2995 = stablehlo.reshape %2994 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2996 = stablehlo.reduce(%2992 init: %cst_254) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2997 = stablehlo.reduce(%2995 init: %cst_255) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2998 = stablehlo.multiply %2996, %1449 : tensor<64x512xf32>
    %2999 = stablehlo.negate %2998 : tensor<64x512xf32>
    %3000 = stablehlo.multiply %2999, %1436 : tensor<64x512xf32>
    %3001 = stablehlo.add %2997, %3000 : tensor<64x512xf32>
    %3002 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3003 = stablehlo.divide %2998, %3002 : tensor<64x512xf32>
    %3004 = stablehlo.broadcast_in_dim %3003, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3005 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3006 = stablehlo.divide %3001, %3005 : tensor<64x512xf32>
    %3007 = stablehlo.broadcast_in_dim %3006, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3008 = stablehlo.add %2982, %3007 : tensor<64x512x768xf32>
    %3009 = stablehlo.multiply %3004, %1427 : tensor<64x512x768xf32>
    %3010 = stablehlo.add %3008, %3009 : tensor<64x512x768xf32>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3011 = stablehlo.reduce(%3010 init: %cst_256) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3012 = stablehlo.reshape %3011 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3013 = stablehlo.reduce(%3012 init: %cst_257) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3014 = stablehlo.broadcast_in_dim %3013, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3015 = stablehlo.reduce(%3014 init: %cst_258) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3016 = stablehlo.dot_general %3010, %1418, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3017 = stablehlo.transpose %3016, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3018 = stablehlo.dot_general %3010, %arg158, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3019 = stablehlo.multiply %1399, %3018 : tensor<64x512x3072xf32>
    %3020 = stablehlo.multiply %3018, %1417 : tensor<64x512x3072xf32>
    %3021 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3022 = stablehlo.multiply %3021, %3019 : tensor<64x512x3072xf32>
    %3023 = stablehlo.multiply %3022, %1413 : tensor<64x512x3072xf32>
    %3024 = stablehlo.multiply %3023, %1410 : tensor<64x512x3072xf32>
    %3025 = stablehlo.add %3023, %3024 : tensor<64x512x3072xf32>
    %3026 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3027 = stablehlo.multiply %3026, %3025 : tensor<64x512x3072xf32>
    %3028 = stablehlo.add %3020, %3027 : tensor<64x512x3072xf32>
    %3029 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3030 = stablehlo.multiply %3029, %3027 : tensor<64x512x3072xf32>
    %3031 = stablehlo.multiply %3030, %1404 : tensor<64x512x3072xf32>
    %3032 = stablehlo.add %3028, %3031 : tensor<64x512x3072xf32>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3033 = stablehlo.reduce(%3032 init: %cst_259) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3034 = stablehlo.reshape %3033 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3035 = stablehlo.reduce(%3034 init: %cst_260) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3036 = stablehlo.broadcast_in_dim %3035, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3037 = stablehlo.reduce(%3036 init: %cst_261) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3038 = stablehlo.dot_general %3032, %1394, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3039 = stablehlo.transpose %3038, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3040 = stablehlo.dot_general %3032, %arg162, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3041 = stablehlo.add %3010, %3040 : tensor<64x512x768xf32>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3042 = stablehlo.reduce(%3041 init: %cst_262) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3043 = stablehlo.reshape %3042 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3044 = stablehlo.reshape %3043 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3045 = stablehlo.multiply %1380, %3041 : tensor<64x512x768xf32>
    %3046 = stablehlo.multiply %3041, %1390 : tensor<64x512x768xf32>
    %3047 = stablehlo.broadcast_in_dim %1383, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3048 = stablehlo.multiply %3047, %3045 : tensor<64x512x768xf32>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3049 = stablehlo.reduce(%3048 init: %cst_263) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3050 = stablehlo.reshape %3049 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3051 = stablehlo.broadcast_in_dim %1387, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3052 = stablehlo.multiply %3045, %3051 : tensor<64x512x768xf32>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3053 = stablehlo.reduce(%3052 init: %cst_264) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3054 = stablehlo.reshape %3053 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3055 = stablehlo.reshape %3050 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3056 = stablehlo.multiply %3054, %1386 : tensor<64x512x1xf32>
    %3057 = stablehlo.negate %3046 : tensor<64x512x768xf32>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3058 = stablehlo.reduce(%3057 init: %cst_265) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3059 = stablehlo.reshape %3058 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3060 = stablehlo.reduce(%3056 init: %cst_266) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3061 = stablehlo.reduce(%3059 init: %cst_267) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3062 = stablehlo.multiply %3060, %1376 : tensor<64x512xf32>
    %3063 = stablehlo.negate %3062 : tensor<64x512xf32>
    %3064 = stablehlo.multiply %3063, %1363 : tensor<64x512xf32>
    %3065 = stablehlo.add %3061, %3064 : tensor<64x512xf32>
    %3066 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3067 = stablehlo.divide %3062, %3066 : tensor<64x512xf32>
    %3068 = stablehlo.broadcast_in_dim %3067, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3069 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3070 = stablehlo.divide %3065, %3069 : tensor<64x512xf32>
    %3071 = stablehlo.broadcast_in_dim %3070, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3072 = stablehlo.add %3046, %3071 : tensor<64x512x768xf32>
    %3073 = stablehlo.multiply %3068, %1354 : tensor<64x512x768xf32>
    %3074 = stablehlo.add %3072, %3073 : tensor<64x512x768xf32>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3075 = stablehlo.reduce(%3074 init: %cst_268) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3076 = stablehlo.reshape %3075 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3077 = stablehlo.reduce(%3076 init: %cst_269) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3078 = stablehlo.broadcast_in_dim %3077, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3079 = stablehlo.reduce(%3078 init: %cst_270) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3080 = stablehlo.dot_general %3074, %1344, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3081 = stablehlo.transpose %3080, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3082 = stablehlo.dot_general %3074, %1345, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3083 = stablehlo.reshape %3081 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3084 = stablehlo.transpose %3082, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3085 = stablehlo.dot_general %3084, %1314, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3086 = stablehlo.dot_general %3084, %1339, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3087 = stablehlo.transpose %3086, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3088 = stablehlo.broadcast_in_dim %1342, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3089 = stablehlo.multiply %3085, %3088 : tensor<64x12x512x512xf32>
    %3090 = stablehlo.multiply %3089, %1335 : tensor<64x12x512x512xf32>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3091 = stablehlo.reduce(%3090 init: %cst_271) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3092 = stablehlo.reshape %3091 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3093 = stablehlo.negate %3092 : tensor<64x12x512x1xf32>
    %3094 = stablehlo.broadcast_in_dim %1337, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3095 = stablehlo.divide %3085, %3094 : tensor<64x12x512x512xf32>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3096 = stablehlo.reduce(%3093 init: %cst_272) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3097 = stablehlo.broadcast_in_dim %3096, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3098 = stablehlo.add %3095, %3097 : tensor<64x12x512x512xf32>
    %3099 = stablehlo.multiply %3098, %1335 : tensor<64x12x512x512xf32>
    %3100 = stablehlo.dot_general %3099, %1325, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3101 = stablehlo.transpose %3100, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3102 = stablehlo.dot_general %3099, %1307, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3103 = stablehlo.transpose %3102, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3104 = stablehlo.broadcast_in_dim %1323, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3105 = stablehlo.divide %3103, %3104 : tensor<64x512x12x64xf32>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3106 = stablehlo.reduce(%3087 init: %cst_273) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3107 = stablehlo.reshape %3106 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3108 = stablehlo.reduce(%3107 init: %cst_274) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3109 = stablehlo.broadcast_in_dim %3108, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3110 = stablehlo.reduce(%3109 init: %cst_275) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3111 = stablehlo.reshape %3110 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3112 = stablehlo.dot_general %3087, %1293, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3113 = stablehlo.transpose %3112, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3114 = stablehlo.dot_general %3087, %1308, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3115 = stablehlo.add %3074, %3114 : tensor<64x512x768xf32>
    %3116 = stablehlo.reshape %3113 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3117 = stablehlo.reduce(%3101 init: %cst_276) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3118 = stablehlo.reshape %3117 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3119 = stablehlo.reduce(%3118 init: %cst_277) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3120 = stablehlo.broadcast_in_dim %3119, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3121 = stablehlo.reduce(%3120 init: %cst_278) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3122 = stablehlo.reshape %3121 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3123 = stablehlo.dot_general %3101, %1293, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3124 = stablehlo.transpose %3123, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3125 = stablehlo.dot_general %3101, %1301, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3126 = stablehlo.add %3115, %3125 : tensor<64x512x768xf32>
    %3127 = stablehlo.reshape %3124 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3128 = stablehlo.reduce(%3105 init: %cst_279) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3129 = stablehlo.reshape %3128 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3130 = stablehlo.reduce(%3129 init: %cst_280) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3131 = stablehlo.broadcast_in_dim %3130, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3132 = stablehlo.reduce(%3131 init: %cst_281) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3133 = stablehlo.reshape %3132 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3134 = stablehlo.dot_general %3105, %1293, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3135 = stablehlo.transpose %3134, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3136 = stablehlo.dot_general %3105, %1294, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3137 = stablehlo.add %3126, %3136 : tensor<64x512x768xf32>
    %3138 = stablehlo.reshape %3135 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3139 = stablehlo.reduce(%3137 init: %cst_282) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3140 = stablehlo.reshape %3139 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3141 = stablehlo.reshape %3140 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3142 = stablehlo.multiply %1279, %3137 : tensor<64x512x768xf32>
    %3143 = stablehlo.multiply %3137, %1289 : tensor<64x512x768xf32>
    %3144 = stablehlo.broadcast_in_dim %1282, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3145 = stablehlo.multiply %3144, %3142 : tensor<64x512x768xf32>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3146 = stablehlo.reduce(%3145 init: %cst_283) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3147 = stablehlo.reshape %3146 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3148 = stablehlo.broadcast_in_dim %1286, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3149 = stablehlo.multiply %3142, %3148 : tensor<64x512x768xf32>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3150 = stablehlo.reduce(%3149 init: %cst_284) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3151 = stablehlo.reshape %3150 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3152 = stablehlo.reshape %3147 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3153 = stablehlo.multiply %3151, %1285 : tensor<64x512x1xf32>
    %3154 = stablehlo.negate %3143 : tensor<64x512x768xf32>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3155 = stablehlo.reduce(%3154 init: %cst_285) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3156 = stablehlo.reshape %3155 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3157 = stablehlo.reduce(%3153 init: %cst_286) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3158 = stablehlo.reduce(%3156 init: %cst_287) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3159 = stablehlo.multiply %3157, %1275 : tensor<64x512xf32>
    %3160 = stablehlo.negate %3159 : tensor<64x512xf32>
    %3161 = stablehlo.multiply %3160, %1262 : tensor<64x512xf32>
    %3162 = stablehlo.add %3158, %3161 : tensor<64x512xf32>
    %3163 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3164 = stablehlo.divide %3159, %3163 : tensor<64x512xf32>
    %3165 = stablehlo.broadcast_in_dim %3164, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3166 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3167 = stablehlo.divide %3162, %3166 : tensor<64x512xf32>
    %3168 = stablehlo.broadcast_in_dim %3167, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3169 = stablehlo.add %3143, %3168 : tensor<64x512x768xf32>
    %3170 = stablehlo.multiply %3165, %1253 : tensor<64x512x768xf32>
    %3171 = stablehlo.add %3169, %3170 : tensor<64x512x768xf32>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3172 = stablehlo.reduce(%3171 init: %cst_288) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3173 = stablehlo.reshape %3172 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3174 = stablehlo.reduce(%3173 init: %cst_289) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3175 = stablehlo.broadcast_in_dim %3174, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3176 = stablehlo.reduce(%3175 init: %cst_290) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3177 = stablehlo.dot_general %3171, %1244, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3178 = stablehlo.transpose %3177, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3179 = stablehlo.dot_general %3171, %arg142, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3180 = stablehlo.multiply %1225, %3179 : tensor<64x512x3072xf32>
    %3181 = stablehlo.multiply %3179, %1243 : tensor<64x512x3072xf32>
    %3182 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3183 = stablehlo.multiply %3182, %3180 : tensor<64x512x3072xf32>
    %3184 = stablehlo.multiply %3183, %1239 : tensor<64x512x3072xf32>
    %3185 = stablehlo.multiply %3184, %1236 : tensor<64x512x3072xf32>
    %3186 = stablehlo.add %3184, %3185 : tensor<64x512x3072xf32>
    %3187 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3188 = stablehlo.multiply %3187, %3186 : tensor<64x512x3072xf32>
    %3189 = stablehlo.add %3181, %3188 : tensor<64x512x3072xf32>
    %3190 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3191 = stablehlo.multiply %3190, %3188 : tensor<64x512x3072xf32>
    %3192 = stablehlo.multiply %3191, %1230 : tensor<64x512x3072xf32>
    %3193 = stablehlo.add %3189, %3192 : tensor<64x512x3072xf32>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3194 = stablehlo.reduce(%3193 init: %cst_291) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3195 = stablehlo.reshape %3194 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3196 = stablehlo.reduce(%3195 init: %cst_292) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3197 = stablehlo.broadcast_in_dim %3196, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3198 = stablehlo.reduce(%3197 init: %cst_293) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3199 = stablehlo.dot_general %3193, %1220, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3200 = stablehlo.transpose %3199, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3201 = stablehlo.dot_general %3193, %arg146, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3202 = stablehlo.add %3171, %3201 : tensor<64x512x768xf32>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3203 = stablehlo.reduce(%3202 init: %cst_294) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3204 = stablehlo.reshape %3203 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3205 = stablehlo.reshape %3204 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3206 = stablehlo.multiply %1206, %3202 : tensor<64x512x768xf32>
    %3207 = stablehlo.multiply %3202, %1216 : tensor<64x512x768xf32>
    %3208 = stablehlo.broadcast_in_dim %1209, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3209 = stablehlo.multiply %3208, %3206 : tensor<64x512x768xf32>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3210 = stablehlo.reduce(%3209 init: %cst_295) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3211 = stablehlo.reshape %3210 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3212 = stablehlo.broadcast_in_dim %1213, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3213 = stablehlo.multiply %3206, %3212 : tensor<64x512x768xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3214 = stablehlo.reduce(%3213 init: %cst_296) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3215 = stablehlo.reshape %3214 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3216 = stablehlo.reshape %3211 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3217 = stablehlo.multiply %3215, %1212 : tensor<64x512x1xf32>
    %3218 = stablehlo.negate %3207 : tensor<64x512x768xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3219 = stablehlo.reduce(%3218 init: %cst_297) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3220 = stablehlo.reshape %3219 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3221 = stablehlo.reduce(%3217 init: %cst_298) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3222 = stablehlo.reduce(%3220 init: %cst_299) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3223 = stablehlo.multiply %3221, %1202 : tensor<64x512xf32>
    %3224 = stablehlo.negate %3223 : tensor<64x512xf32>
    %3225 = stablehlo.multiply %3224, %1189 : tensor<64x512xf32>
    %3226 = stablehlo.add %3222, %3225 : tensor<64x512xf32>
    %3227 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3228 = stablehlo.divide %3223, %3227 : tensor<64x512xf32>
    %3229 = stablehlo.broadcast_in_dim %3228, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3230 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3231 = stablehlo.divide %3226, %3230 : tensor<64x512xf32>
    %3232 = stablehlo.broadcast_in_dim %3231, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3233 = stablehlo.add %3207, %3232 : tensor<64x512x768xf32>
    %3234 = stablehlo.multiply %3229, %1180 : tensor<64x512x768xf32>
    %3235 = stablehlo.add %3233, %3234 : tensor<64x512x768xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3236 = stablehlo.reduce(%3235 init: %cst_300) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3237 = stablehlo.reshape %3236 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3238 = stablehlo.reduce(%3237 init: %cst_301) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3239 = stablehlo.broadcast_in_dim %3238, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3240 = stablehlo.reduce(%3239 init: %cst_302) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3241 = stablehlo.dot_general %3235, %1170, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3242 = stablehlo.transpose %3241, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3243 = stablehlo.dot_general %3235, %1171, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3244 = stablehlo.reshape %3242 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3245 = stablehlo.transpose %3243, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3246 = stablehlo.dot_general %3245, %1140, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3247 = stablehlo.dot_general %3245, %1165, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3248 = stablehlo.transpose %3247, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3249 = stablehlo.broadcast_in_dim %1168, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3250 = stablehlo.multiply %3246, %3249 : tensor<64x12x512x512xf32>
    %3251 = stablehlo.multiply %3250, %1161 : tensor<64x12x512x512xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3252 = stablehlo.reduce(%3251 init: %cst_303) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3253 = stablehlo.reshape %3252 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3254 = stablehlo.negate %3253 : tensor<64x12x512x1xf32>
    %3255 = stablehlo.broadcast_in_dim %1163, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3256 = stablehlo.divide %3246, %3255 : tensor<64x12x512x512xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3257 = stablehlo.reduce(%3254 init: %cst_304) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3258 = stablehlo.broadcast_in_dim %3257, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3259 = stablehlo.add %3256, %3258 : tensor<64x12x512x512xf32>
    %3260 = stablehlo.multiply %3259, %1161 : tensor<64x12x512x512xf32>
    %3261 = stablehlo.dot_general %3260, %1151, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3262 = stablehlo.transpose %3261, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3263 = stablehlo.dot_general %3260, %1133, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3264 = stablehlo.transpose %3263, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3265 = stablehlo.broadcast_in_dim %1149, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3266 = stablehlo.divide %3264, %3265 : tensor<64x512x12x64xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3267 = stablehlo.reduce(%3248 init: %cst_305) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3268 = stablehlo.reshape %3267 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3269 = stablehlo.reduce(%3268 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3270 = stablehlo.broadcast_in_dim %3269, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3271 = stablehlo.reduce(%3270 init: %cst_307) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3272 = stablehlo.reshape %3271 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3273 = stablehlo.dot_general %3248, %1119, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3274 = stablehlo.transpose %3273, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3275 = stablehlo.dot_general %3248, %1134, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3276 = stablehlo.add %3235, %3275 : tensor<64x512x768xf32>
    %3277 = stablehlo.reshape %3274 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3278 = stablehlo.reduce(%3262 init: %cst_308) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3279 = stablehlo.reshape %3278 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3280 = stablehlo.reduce(%3279 init: %cst_309) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3281 = stablehlo.broadcast_in_dim %3280, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3282 = stablehlo.reduce(%3281 init: %cst_310) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3283 = stablehlo.reshape %3282 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3284 = stablehlo.dot_general %3262, %1119, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3285 = stablehlo.transpose %3284, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3286 = stablehlo.dot_general %3262, %1127, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3287 = stablehlo.add %3276, %3286 : tensor<64x512x768xf32>
    %3288 = stablehlo.reshape %3285 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3289 = stablehlo.reduce(%3266 init: %cst_311) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3290 = stablehlo.reshape %3289 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3291 = stablehlo.reduce(%3290 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3292 = stablehlo.broadcast_in_dim %3291, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3293 = stablehlo.reduce(%3292 init: %cst_313) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3294 = stablehlo.reshape %3293 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3295 = stablehlo.dot_general %3266, %1119, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3296 = stablehlo.transpose %3295, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3297 = stablehlo.dot_general %3266, %1120, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3298 = stablehlo.add %3287, %3297 : tensor<64x512x768xf32>
    %3299 = stablehlo.reshape %3296 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3300 = stablehlo.reduce(%3298 init: %cst_314) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3301 = stablehlo.reshape %3300 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3302 = stablehlo.reshape %3301 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3303 = stablehlo.multiply %1105, %3298 : tensor<64x512x768xf32>
    %3304 = stablehlo.multiply %3298, %1115 : tensor<64x512x768xf32>
    %3305 = stablehlo.broadcast_in_dim %1108, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3306 = stablehlo.multiply %3305, %3303 : tensor<64x512x768xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3307 = stablehlo.reduce(%3306 init: %cst_315) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3308 = stablehlo.reshape %3307 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3309 = stablehlo.broadcast_in_dim %1112, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3310 = stablehlo.multiply %3303, %3309 : tensor<64x512x768xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3311 = stablehlo.reduce(%3310 init: %cst_316) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3312 = stablehlo.reshape %3311 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3313 = stablehlo.reshape %3308 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3314 = stablehlo.multiply %3312, %1111 : tensor<64x512x1xf32>
    %3315 = stablehlo.negate %3304 : tensor<64x512x768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3316 = stablehlo.reduce(%3315 init: %cst_317) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3317 = stablehlo.reshape %3316 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3318 = stablehlo.reduce(%3314 init: %cst_318) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3319 = stablehlo.reduce(%3317 init: %cst_319) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3320 = stablehlo.multiply %3318, %1101 : tensor<64x512xf32>
    %3321 = stablehlo.negate %3320 : tensor<64x512xf32>
    %3322 = stablehlo.multiply %3321, %1088 : tensor<64x512xf32>
    %3323 = stablehlo.add %3319, %3322 : tensor<64x512xf32>
    %3324 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3325 = stablehlo.divide %3320, %3324 : tensor<64x512xf32>
    %3326 = stablehlo.broadcast_in_dim %3325, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3327 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3328 = stablehlo.divide %3323, %3327 : tensor<64x512xf32>
    %3329 = stablehlo.broadcast_in_dim %3328, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3330 = stablehlo.add %3304, %3329 : tensor<64x512x768xf32>
    %3331 = stablehlo.multiply %3326, %1079 : tensor<64x512x768xf32>
    %3332 = stablehlo.add %3330, %3331 : tensor<64x512x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3333 = stablehlo.reduce(%3332 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3334 = stablehlo.reshape %3333 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3335 = stablehlo.reduce(%3334 init: %cst_321) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3336 = stablehlo.broadcast_in_dim %3335, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3337 = stablehlo.reduce(%3336 init: %cst_322) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3338 = stablehlo.dot_general %3332, %1070, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3339 = stablehlo.transpose %3338, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3340 = stablehlo.dot_general %3332, %arg126, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3341 = stablehlo.multiply %1051, %3340 : tensor<64x512x3072xf32>
    %3342 = stablehlo.multiply %3340, %1069 : tensor<64x512x3072xf32>
    %3343 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3344 = stablehlo.multiply %3343, %3341 : tensor<64x512x3072xf32>
    %3345 = stablehlo.multiply %3344, %1065 : tensor<64x512x3072xf32>
    %3346 = stablehlo.multiply %3345, %1062 : tensor<64x512x3072xf32>
    %3347 = stablehlo.add %3345, %3346 : tensor<64x512x3072xf32>
    %3348 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3349 = stablehlo.multiply %3348, %3347 : tensor<64x512x3072xf32>
    %3350 = stablehlo.add %3342, %3349 : tensor<64x512x3072xf32>
    %3351 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3352 = stablehlo.multiply %3351, %3349 : tensor<64x512x3072xf32>
    %3353 = stablehlo.multiply %3352, %1056 : tensor<64x512x3072xf32>
    %3354 = stablehlo.add %3350, %3353 : tensor<64x512x3072xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3355 = stablehlo.reduce(%3354 init: %cst_323) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3356 = stablehlo.reshape %3355 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3357 = stablehlo.reduce(%3356 init: %cst_324) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3358 = stablehlo.broadcast_in_dim %3357, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3359 = stablehlo.reduce(%3358 init: %cst_325) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3360 = stablehlo.dot_general %3354, %1046, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3361 = stablehlo.transpose %3360, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3362 = stablehlo.dot_general %3354, %arg130, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3363 = stablehlo.add %3332, %3362 : tensor<64x512x768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3364 = stablehlo.reduce(%3363 init: %cst_326) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3365 = stablehlo.reshape %3364 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3366 = stablehlo.reshape %3365 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3367 = stablehlo.multiply %1032, %3363 : tensor<64x512x768xf32>
    %3368 = stablehlo.multiply %3363, %1042 : tensor<64x512x768xf32>
    %3369 = stablehlo.broadcast_in_dim %1035, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3370 = stablehlo.multiply %3369, %3367 : tensor<64x512x768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3371 = stablehlo.reduce(%3370 init: %cst_327) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3372 = stablehlo.reshape %3371 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3373 = stablehlo.broadcast_in_dim %1039, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3374 = stablehlo.multiply %3367, %3373 : tensor<64x512x768xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3375 = stablehlo.reduce(%3374 init: %cst_328) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3376 = stablehlo.reshape %3375 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3377 = stablehlo.reshape %3372 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3378 = stablehlo.multiply %3376, %1038 : tensor<64x512x1xf32>
    %3379 = stablehlo.negate %3368 : tensor<64x512x768xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3380 = stablehlo.reduce(%3379 init: %cst_329) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3381 = stablehlo.reshape %3380 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3382 = stablehlo.reduce(%3378 init: %cst_330) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3383 = stablehlo.reduce(%3381 init: %cst_331) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3384 = stablehlo.multiply %3382, %1028 : tensor<64x512xf32>
    %3385 = stablehlo.negate %3384 : tensor<64x512xf32>
    %3386 = stablehlo.multiply %3385, %1015 : tensor<64x512xf32>
    %3387 = stablehlo.add %3383, %3386 : tensor<64x512xf32>
    %3388 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3389 = stablehlo.divide %3384, %3388 : tensor<64x512xf32>
    %3390 = stablehlo.broadcast_in_dim %3389, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3391 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3392 = stablehlo.divide %3387, %3391 : tensor<64x512xf32>
    %3393 = stablehlo.broadcast_in_dim %3392, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3394 = stablehlo.add %3368, %3393 : tensor<64x512x768xf32>
    %3395 = stablehlo.multiply %3390, %1006 : tensor<64x512x768xf32>
    %3396 = stablehlo.add %3394, %3395 : tensor<64x512x768xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3397 = stablehlo.reduce(%3396 init: %cst_332) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3398 = stablehlo.reshape %3397 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3399 = stablehlo.reduce(%3398 init: %cst_333) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3400 = stablehlo.broadcast_in_dim %3399, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3401 = stablehlo.reduce(%3400 init: %cst_334) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3402 = stablehlo.dot_general %3396, %996, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3403 = stablehlo.transpose %3402, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3404 = stablehlo.dot_general %3396, %997, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3405 = stablehlo.reshape %3403 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3406 = stablehlo.transpose %3404, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3407 = stablehlo.dot_general %3406, %966, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3408 = stablehlo.dot_general %3406, %991, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3409 = stablehlo.transpose %3408, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3410 = stablehlo.broadcast_in_dim %994, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3411 = stablehlo.multiply %3407, %3410 : tensor<64x12x512x512xf32>
    %3412 = stablehlo.multiply %3411, %987 : tensor<64x12x512x512xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3413 = stablehlo.reduce(%3412 init: %cst_335) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3414 = stablehlo.reshape %3413 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3415 = stablehlo.negate %3414 : tensor<64x12x512x1xf32>
    %3416 = stablehlo.broadcast_in_dim %989, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3417 = stablehlo.divide %3407, %3416 : tensor<64x12x512x512xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3418 = stablehlo.reduce(%3415 init: %cst_336) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3419 = stablehlo.broadcast_in_dim %3418, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3420 = stablehlo.add %3417, %3419 : tensor<64x12x512x512xf32>
    %3421 = stablehlo.multiply %3420, %987 : tensor<64x12x512x512xf32>
    %3422 = stablehlo.dot_general %3421, %977, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3423 = stablehlo.transpose %3422, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3424 = stablehlo.dot_general %3421, %959, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3425 = stablehlo.transpose %3424, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3426 = stablehlo.broadcast_in_dim %975, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3427 = stablehlo.divide %3425, %3426 : tensor<64x512x12x64xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3428 = stablehlo.reduce(%3409 init: %cst_337) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3429 = stablehlo.reshape %3428 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3430 = stablehlo.reduce(%3429 init: %cst_338) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3431 = stablehlo.broadcast_in_dim %3430, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3432 = stablehlo.reduce(%3431 init: %cst_339) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3433 = stablehlo.reshape %3432 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3434 = stablehlo.dot_general %3409, %945, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3435 = stablehlo.transpose %3434, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3436 = stablehlo.dot_general %3409, %960, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3437 = stablehlo.add %3396, %3436 : tensor<64x512x768xf32>
    %3438 = stablehlo.reshape %3435 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3439 = stablehlo.reduce(%3423 init: %cst_340) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3440 = stablehlo.reshape %3439 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3441 = stablehlo.reduce(%3440 init: %cst_341) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3442 = stablehlo.broadcast_in_dim %3441, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3443 = stablehlo.reduce(%3442 init: %cst_342) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3444 = stablehlo.reshape %3443 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3445 = stablehlo.dot_general %3423, %945, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3446 = stablehlo.transpose %3445, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3447 = stablehlo.dot_general %3423, %953, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3448 = stablehlo.add %3437, %3447 : tensor<64x512x768xf32>
    %3449 = stablehlo.reshape %3446 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3450 = stablehlo.reduce(%3427 init: %cst_343) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3451 = stablehlo.reshape %3450 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3452 = stablehlo.reduce(%3451 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3453 = stablehlo.broadcast_in_dim %3452, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3454 = stablehlo.reduce(%3453 init: %cst_345) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3455 = stablehlo.reshape %3454 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3456 = stablehlo.dot_general %3427, %945, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3457 = stablehlo.transpose %3456, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3458 = stablehlo.dot_general %3427, %946, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3459 = stablehlo.add %3448, %3458 : tensor<64x512x768xf32>
    %3460 = stablehlo.reshape %3457 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3461 = stablehlo.reduce(%3459 init: %cst_346) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3462 = stablehlo.reshape %3461 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3463 = stablehlo.reshape %3462 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3464 = stablehlo.multiply %931, %3459 : tensor<64x512x768xf32>
    %3465 = stablehlo.multiply %3459, %941 : tensor<64x512x768xf32>
    %3466 = stablehlo.broadcast_in_dim %934, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3467 = stablehlo.multiply %3466, %3464 : tensor<64x512x768xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3468 = stablehlo.reduce(%3467 init: %cst_347) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3469 = stablehlo.reshape %3468 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3470 = stablehlo.broadcast_in_dim %938, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3471 = stablehlo.multiply %3464, %3470 : tensor<64x512x768xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3472 = stablehlo.reduce(%3471 init: %cst_348) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3473 = stablehlo.reshape %3472 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3474 = stablehlo.reshape %3469 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3475 = stablehlo.multiply %3473, %937 : tensor<64x512x1xf32>
    %3476 = stablehlo.negate %3465 : tensor<64x512x768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3477 = stablehlo.reduce(%3476 init: %cst_349) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3478 = stablehlo.reshape %3477 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3479 = stablehlo.reduce(%3475 init: %cst_350) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3480 = stablehlo.reduce(%3478 init: %cst_351) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3481 = stablehlo.multiply %3479, %927 : tensor<64x512xf32>
    %3482 = stablehlo.negate %3481 : tensor<64x512xf32>
    %3483 = stablehlo.multiply %3482, %914 : tensor<64x512xf32>
    %3484 = stablehlo.add %3480, %3483 : tensor<64x512xf32>
    %3485 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3486 = stablehlo.divide %3481, %3485 : tensor<64x512xf32>
    %3487 = stablehlo.broadcast_in_dim %3486, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3488 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3489 = stablehlo.divide %3484, %3488 : tensor<64x512xf32>
    %3490 = stablehlo.broadcast_in_dim %3489, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3491 = stablehlo.add %3465, %3490 : tensor<64x512x768xf32>
    %3492 = stablehlo.multiply %3487, %905 : tensor<64x512x768xf32>
    %3493 = stablehlo.add %3491, %3492 : tensor<64x512x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3494 = stablehlo.reduce(%3493 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3495 = stablehlo.reshape %3494 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3496 = stablehlo.reduce(%3495 init: %cst_353) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3497 = stablehlo.broadcast_in_dim %3496, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3498 = stablehlo.reduce(%3497 init: %cst_354) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3499 = stablehlo.dot_general %3493, %896, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3500 = stablehlo.transpose %3499, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3501 = stablehlo.dot_general %3493, %arg110, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3502 = stablehlo.multiply %877, %3501 : tensor<64x512x3072xf32>
    %3503 = stablehlo.multiply %3501, %895 : tensor<64x512x3072xf32>
    %3504 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3505 = stablehlo.multiply %3504, %3502 : tensor<64x512x3072xf32>
    %3506 = stablehlo.multiply %3505, %891 : tensor<64x512x3072xf32>
    %3507 = stablehlo.multiply %3506, %888 : tensor<64x512x3072xf32>
    %3508 = stablehlo.add %3506, %3507 : tensor<64x512x3072xf32>
    %3509 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3510 = stablehlo.multiply %3509, %3508 : tensor<64x512x3072xf32>
    %3511 = stablehlo.add %3503, %3510 : tensor<64x512x3072xf32>
    %3512 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3513 = stablehlo.multiply %3512, %3510 : tensor<64x512x3072xf32>
    %3514 = stablehlo.multiply %3513, %882 : tensor<64x512x3072xf32>
    %3515 = stablehlo.add %3511, %3514 : tensor<64x512x3072xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3516 = stablehlo.reduce(%3515 init: %cst_355) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3517 = stablehlo.reshape %3516 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3518 = stablehlo.reduce(%3517 init: %cst_356) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3519 = stablehlo.broadcast_in_dim %3518, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3520 = stablehlo.reduce(%3519 init: %cst_357) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3521 = stablehlo.dot_general %3515, %872, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3522 = stablehlo.transpose %3521, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3523 = stablehlo.dot_general %3515, %arg114, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3524 = stablehlo.add %3493, %3523 : tensor<64x512x768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3525 = stablehlo.reduce(%3524 init: %cst_358) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3526 = stablehlo.reshape %3525 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3527 = stablehlo.reshape %3526 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3528 = stablehlo.multiply %858, %3524 : tensor<64x512x768xf32>
    %3529 = stablehlo.multiply %3524, %868 : tensor<64x512x768xf32>
    %3530 = stablehlo.broadcast_in_dim %861, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3531 = stablehlo.multiply %3530, %3528 : tensor<64x512x768xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3532 = stablehlo.reduce(%3531 init: %cst_359) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3533 = stablehlo.reshape %3532 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3534 = stablehlo.broadcast_in_dim %865, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3535 = stablehlo.multiply %3528, %3534 : tensor<64x512x768xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3536 = stablehlo.reduce(%3535 init: %cst_360) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3537 = stablehlo.reshape %3536 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3538 = stablehlo.reshape %3533 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3539 = stablehlo.multiply %3537, %864 : tensor<64x512x1xf32>
    %3540 = stablehlo.negate %3529 : tensor<64x512x768xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3541 = stablehlo.reduce(%3540 init: %cst_361) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3542 = stablehlo.reshape %3541 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3543 = stablehlo.reduce(%3539 init: %cst_362) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3544 = stablehlo.reduce(%3542 init: %cst_363) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3545 = stablehlo.multiply %3543, %854 : tensor<64x512xf32>
    %3546 = stablehlo.negate %3545 : tensor<64x512xf32>
    %3547 = stablehlo.multiply %3546, %841 : tensor<64x512xf32>
    %3548 = stablehlo.add %3544, %3547 : tensor<64x512xf32>
    %3549 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3550 = stablehlo.divide %3545, %3549 : tensor<64x512xf32>
    %3551 = stablehlo.broadcast_in_dim %3550, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3552 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3553 = stablehlo.divide %3548, %3552 : tensor<64x512xf32>
    %3554 = stablehlo.broadcast_in_dim %3553, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3555 = stablehlo.add %3529, %3554 : tensor<64x512x768xf32>
    %3556 = stablehlo.multiply %3551, %832 : tensor<64x512x768xf32>
    %3557 = stablehlo.add %3555, %3556 : tensor<64x512x768xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3558 = stablehlo.reduce(%3557 init: %cst_364) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3559 = stablehlo.reshape %3558 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3560 = stablehlo.reduce(%3559 init: %cst_365) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3561 = stablehlo.broadcast_in_dim %3560, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3562 = stablehlo.reduce(%3561 init: %cst_366) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3563 = stablehlo.dot_general %3557, %822, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3564 = stablehlo.transpose %3563, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3565 = stablehlo.dot_general %3557, %823, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3566 = stablehlo.reshape %3564 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3567 = stablehlo.transpose %3565, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3568 = stablehlo.dot_general %3567, %792, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3569 = stablehlo.dot_general %3567, %817, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3570 = stablehlo.transpose %3569, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3571 = stablehlo.broadcast_in_dim %820, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3572 = stablehlo.multiply %3568, %3571 : tensor<64x12x512x512xf32>
    %3573 = stablehlo.multiply %3572, %813 : tensor<64x12x512x512xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3574 = stablehlo.reduce(%3573 init: %cst_367) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3575 = stablehlo.reshape %3574 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3576 = stablehlo.negate %3575 : tensor<64x12x512x1xf32>
    %3577 = stablehlo.broadcast_in_dim %815, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3578 = stablehlo.divide %3568, %3577 : tensor<64x12x512x512xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3579 = stablehlo.reduce(%3576 init: %cst_368) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3580 = stablehlo.broadcast_in_dim %3579, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3581 = stablehlo.add %3578, %3580 : tensor<64x12x512x512xf32>
    %3582 = stablehlo.multiply %3581, %813 : tensor<64x12x512x512xf32>
    %3583 = stablehlo.dot_general %3582, %803, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3584 = stablehlo.transpose %3583, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3585 = stablehlo.dot_general %3582, %785, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3586 = stablehlo.transpose %3585, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3587 = stablehlo.broadcast_in_dim %801, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3588 = stablehlo.divide %3586, %3587 : tensor<64x512x12x64xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3589 = stablehlo.reduce(%3570 init: %cst_369) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3590 = stablehlo.reshape %3589 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3591 = stablehlo.reduce(%3590 init: %cst_370) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3592 = stablehlo.broadcast_in_dim %3591, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3593 = stablehlo.reduce(%3592 init: %cst_371) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3594 = stablehlo.reshape %3593 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3595 = stablehlo.dot_general %3570, %771, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3596 = stablehlo.transpose %3595, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3597 = stablehlo.dot_general %3570, %786, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3598 = stablehlo.add %3557, %3597 : tensor<64x512x768xf32>
    %3599 = stablehlo.reshape %3596 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3600 = stablehlo.reduce(%3584 init: %cst_372) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3601 = stablehlo.reshape %3600 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3602 = stablehlo.reduce(%3601 init: %cst_373) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3603 = stablehlo.broadcast_in_dim %3602, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3604 = stablehlo.reduce(%3603 init: %cst_374) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3605 = stablehlo.reshape %3604 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3606 = stablehlo.dot_general %3584, %771, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3607 = stablehlo.transpose %3606, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3608 = stablehlo.dot_general %3584, %779, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3609 = stablehlo.add %3598, %3608 : tensor<64x512x768xf32>
    %3610 = stablehlo.reshape %3607 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3611 = stablehlo.reduce(%3588 init: %cst_375) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3612 = stablehlo.reshape %3611 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3613 = stablehlo.reduce(%3612 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3614 = stablehlo.broadcast_in_dim %3613, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3615 = stablehlo.reduce(%3614 init: %cst_377) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3616 = stablehlo.reshape %3615 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3617 = stablehlo.dot_general %3588, %771, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3618 = stablehlo.transpose %3617, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3619 = stablehlo.dot_general %3588, %772, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3620 = stablehlo.add %3609, %3619 : tensor<64x512x768xf32>
    %3621 = stablehlo.reshape %3618 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3622 = stablehlo.reduce(%3620 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3623 = stablehlo.reshape %3622 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3624 = stablehlo.reshape %3623 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3625 = stablehlo.multiply %757, %3620 : tensor<64x512x768xf32>
    %3626 = stablehlo.multiply %3620, %767 : tensor<64x512x768xf32>
    %3627 = stablehlo.broadcast_in_dim %760, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3628 = stablehlo.multiply %3627, %3625 : tensor<64x512x768xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3629 = stablehlo.reduce(%3628 init: %cst_379) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3630 = stablehlo.reshape %3629 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3631 = stablehlo.broadcast_in_dim %764, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3632 = stablehlo.multiply %3625, %3631 : tensor<64x512x768xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3633 = stablehlo.reduce(%3632 init: %cst_380) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3634 = stablehlo.reshape %3633 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3635 = stablehlo.reshape %3630 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3636 = stablehlo.multiply %3634, %763 : tensor<64x512x1xf32>
    %3637 = stablehlo.negate %3626 : tensor<64x512x768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3638 = stablehlo.reduce(%3637 init: %cst_381) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3639 = stablehlo.reshape %3638 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3640 = stablehlo.reduce(%3636 init: %cst_382) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3641 = stablehlo.reduce(%3639 init: %cst_383) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3642 = stablehlo.multiply %3640, %753 : tensor<64x512xf32>
    %3643 = stablehlo.negate %3642 : tensor<64x512xf32>
    %3644 = stablehlo.multiply %3643, %740 : tensor<64x512xf32>
    %3645 = stablehlo.add %3641, %3644 : tensor<64x512xf32>
    %3646 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3647 = stablehlo.divide %3642, %3646 : tensor<64x512xf32>
    %3648 = stablehlo.broadcast_in_dim %3647, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3649 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3650 = stablehlo.divide %3645, %3649 : tensor<64x512xf32>
    %3651 = stablehlo.broadcast_in_dim %3650, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3652 = stablehlo.add %3626, %3651 : tensor<64x512x768xf32>
    %3653 = stablehlo.multiply %3648, %731 : tensor<64x512x768xf32>
    %3654 = stablehlo.add %3652, %3653 : tensor<64x512x768xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3655 = stablehlo.reduce(%3654 init: %cst_384) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3656 = stablehlo.reshape %3655 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3657 = stablehlo.reduce(%3656 init: %cst_385) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3658 = stablehlo.broadcast_in_dim %3657, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3659 = stablehlo.reduce(%3658 init: %cst_386) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3660 = stablehlo.dot_general %3654, %722, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3661 = stablehlo.transpose %3660, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3662 = stablehlo.dot_general %3654, %arg94, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3663 = stablehlo.multiply %703, %3662 : tensor<64x512x3072xf32>
    %3664 = stablehlo.multiply %3662, %721 : tensor<64x512x3072xf32>
    %3665 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3666 = stablehlo.multiply %3665, %3663 : tensor<64x512x3072xf32>
    %3667 = stablehlo.multiply %3666, %717 : tensor<64x512x3072xf32>
    %3668 = stablehlo.multiply %3667, %714 : tensor<64x512x3072xf32>
    %3669 = stablehlo.add %3667, %3668 : tensor<64x512x3072xf32>
    %3670 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3671 = stablehlo.multiply %3670, %3669 : tensor<64x512x3072xf32>
    %3672 = stablehlo.add %3664, %3671 : tensor<64x512x3072xf32>
    %3673 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3674 = stablehlo.multiply %3673, %3671 : tensor<64x512x3072xf32>
    %3675 = stablehlo.multiply %3674, %708 : tensor<64x512x3072xf32>
    %3676 = stablehlo.add %3672, %3675 : tensor<64x512x3072xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3677 = stablehlo.reduce(%3676 init: %cst_387) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3678 = stablehlo.reshape %3677 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3679 = stablehlo.reduce(%3678 init: %cst_388) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3680 = stablehlo.broadcast_in_dim %3679, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3681 = stablehlo.reduce(%3680 init: %cst_389) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3682 = stablehlo.dot_general %3676, %698, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3683 = stablehlo.transpose %3682, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3684 = stablehlo.dot_general %3676, %arg98, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3685 = stablehlo.add %3654, %3684 : tensor<64x512x768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3686 = stablehlo.reduce(%3685 init: %cst_390) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3687 = stablehlo.reshape %3686 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3688 = stablehlo.reshape %3687 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3689 = stablehlo.multiply %684, %3685 : tensor<64x512x768xf32>
    %3690 = stablehlo.multiply %3685, %694 : tensor<64x512x768xf32>
    %3691 = stablehlo.broadcast_in_dim %687, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3692 = stablehlo.multiply %3691, %3689 : tensor<64x512x768xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3693 = stablehlo.reduce(%3692 init: %cst_391) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3694 = stablehlo.reshape %3693 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3695 = stablehlo.broadcast_in_dim %691, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3696 = stablehlo.multiply %3689, %3695 : tensor<64x512x768xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3697 = stablehlo.reduce(%3696 init: %cst_392) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3698 = stablehlo.reshape %3697 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3699 = stablehlo.reshape %3694 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3700 = stablehlo.multiply %3698, %690 : tensor<64x512x1xf32>
    %3701 = stablehlo.negate %3690 : tensor<64x512x768xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3702 = stablehlo.reduce(%3701 init: %cst_393) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3703 = stablehlo.reshape %3702 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3704 = stablehlo.reduce(%3700 init: %cst_394) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3705 = stablehlo.reduce(%3703 init: %cst_395) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3706 = stablehlo.multiply %3704, %680 : tensor<64x512xf32>
    %3707 = stablehlo.negate %3706 : tensor<64x512xf32>
    %3708 = stablehlo.multiply %3707, %667 : tensor<64x512xf32>
    %3709 = stablehlo.add %3705, %3708 : tensor<64x512xf32>
    %3710 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3711 = stablehlo.divide %3706, %3710 : tensor<64x512xf32>
    %3712 = stablehlo.broadcast_in_dim %3711, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3713 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3714 = stablehlo.divide %3709, %3713 : tensor<64x512xf32>
    %3715 = stablehlo.broadcast_in_dim %3714, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3716 = stablehlo.add %3690, %3715 : tensor<64x512x768xf32>
    %3717 = stablehlo.multiply %3712, %658 : tensor<64x512x768xf32>
    %3718 = stablehlo.add %3716, %3717 : tensor<64x512x768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3719 = stablehlo.reduce(%3718 init: %cst_396) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3720 = stablehlo.reshape %3719 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3721 = stablehlo.reduce(%3720 init: %cst_397) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3722 = stablehlo.broadcast_in_dim %3721, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3723 = stablehlo.reduce(%3722 init: %cst_398) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3724 = stablehlo.dot_general %3718, %648, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3725 = stablehlo.transpose %3724, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3726 = stablehlo.dot_general %3718, %649, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3727 = stablehlo.reshape %3725 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3728 = stablehlo.transpose %3726, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3729 = stablehlo.dot_general %3728, %618, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3730 = stablehlo.dot_general %3728, %643, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3731 = stablehlo.transpose %3730, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3732 = stablehlo.broadcast_in_dim %646, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3733 = stablehlo.multiply %3729, %3732 : tensor<64x12x512x512xf32>
    %3734 = stablehlo.multiply %3733, %639 : tensor<64x12x512x512xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3735 = stablehlo.reduce(%3734 init: %cst_399) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3736 = stablehlo.reshape %3735 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3737 = stablehlo.negate %3736 : tensor<64x12x512x1xf32>
    %3738 = stablehlo.broadcast_in_dim %641, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3739 = stablehlo.divide %3729, %3738 : tensor<64x12x512x512xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3740 = stablehlo.reduce(%3737 init: %cst_400) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3741 = stablehlo.broadcast_in_dim %3740, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3742 = stablehlo.add %3739, %3741 : tensor<64x12x512x512xf32>
    %3743 = stablehlo.multiply %3742, %639 : tensor<64x12x512x512xf32>
    %3744 = stablehlo.dot_general %3743, %629, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3745 = stablehlo.transpose %3744, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3746 = stablehlo.dot_general %3743, %611, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3747 = stablehlo.transpose %3746, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3748 = stablehlo.broadcast_in_dim %627, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3749 = stablehlo.divide %3747, %3748 : tensor<64x512x12x64xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3750 = stablehlo.reduce(%3731 init: %cst_401) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3751 = stablehlo.reshape %3750 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3752 = stablehlo.reduce(%3751 init: %cst_402) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3753 = stablehlo.broadcast_in_dim %3752, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3754 = stablehlo.reduce(%3753 init: %cst_403) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3755 = stablehlo.reshape %3754 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3756 = stablehlo.dot_general %3731, %597, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3757 = stablehlo.transpose %3756, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3758 = stablehlo.dot_general %3731, %612, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3759 = stablehlo.add %3718, %3758 : tensor<64x512x768xf32>
    %3760 = stablehlo.reshape %3757 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3761 = stablehlo.reduce(%3745 init: %cst_404) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3762 = stablehlo.reshape %3761 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3763 = stablehlo.reduce(%3762 init: %cst_405) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3764 = stablehlo.broadcast_in_dim %3763, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3765 = stablehlo.reduce(%3764 init: %cst_406) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3766 = stablehlo.reshape %3765 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3767 = stablehlo.dot_general %3745, %597, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3768 = stablehlo.transpose %3767, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3769 = stablehlo.dot_general %3745, %605, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3770 = stablehlo.add %3759, %3769 : tensor<64x512x768xf32>
    %3771 = stablehlo.reshape %3768 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3772 = stablehlo.reduce(%3749 init: %cst_407) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3773 = stablehlo.reshape %3772 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3774 = stablehlo.reduce(%3773 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3775 = stablehlo.broadcast_in_dim %3774, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3776 = stablehlo.reduce(%3775 init: %cst_409) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3777 = stablehlo.reshape %3776 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3778 = stablehlo.dot_general %3749, %597, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3779 = stablehlo.transpose %3778, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3780 = stablehlo.dot_general %3749, %598, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3781 = stablehlo.add %3770, %3780 : tensor<64x512x768xf32>
    %3782 = stablehlo.reshape %3779 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3783 = stablehlo.reduce(%3781 init: %cst_410) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3784 = stablehlo.reshape %3783 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3785 = stablehlo.reshape %3784 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3786 = stablehlo.multiply %583, %3781 : tensor<64x512x768xf32>
    %3787 = stablehlo.multiply %3781, %593 : tensor<64x512x768xf32>
    %3788 = stablehlo.broadcast_in_dim %586, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3789 = stablehlo.multiply %3788, %3786 : tensor<64x512x768xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3790 = stablehlo.reduce(%3789 init: %cst_411) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3791 = stablehlo.reshape %3790 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3792 = stablehlo.broadcast_in_dim %590, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3793 = stablehlo.multiply %3786, %3792 : tensor<64x512x768xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3794 = stablehlo.reduce(%3793 init: %cst_412) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3795 = stablehlo.reshape %3794 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3796 = stablehlo.reshape %3791 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3797 = stablehlo.multiply %3795, %589 : tensor<64x512x1xf32>
    %3798 = stablehlo.negate %3787 : tensor<64x512x768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3799 = stablehlo.reduce(%3798 init: %cst_413) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3800 = stablehlo.reshape %3799 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3801 = stablehlo.reduce(%3797 init: %cst_414) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3802 = stablehlo.reduce(%3800 init: %cst_415) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3803 = stablehlo.multiply %3801, %579 : tensor<64x512xf32>
    %3804 = stablehlo.negate %3803 : tensor<64x512xf32>
    %3805 = stablehlo.multiply %3804, %566 : tensor<64x512xf32>
    %3806 = stablehlo.add %3802, %3805 : tensor<64x512xf32>
    %3807 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3808 = stablehlo.divide %3803, %3807 : tensor<64x512xf32>
    %3809 = stablehlo.broadcast_in_dim %3808, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3810 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3811 = stablehlo.divide %3806, %3810 : tensor<64x512xf32>
    %3812 = stablehlo.broadcast_in_dim %3811, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3813 = stablehlo.add %3787, %3812 : tensor<64x512x768xf32>
    %3814 = stablehlo.multiply %3809, %557 : tensor<64x512x768xf32>
    %3815 = stablehlo.add %3813, %3814 : tensor<64x512x768xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3816 = stablehlo.reduce(%3815 init: %cst_416) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3817 = stablehlo.reshape %3816 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3818 = stablehlo.reduce(%3817 init: %cst_417) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3819 = stablehlo.broadcast_in_dim %3818, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3820 = stablehlo.reduce(%3819 init: %cst_418) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3821 = stablehlo.dot_general %3815, %548, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3822 = stablehlo.transpose %3821, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3823 = stablehlo.dot_general %3815, %arg78, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3824 = stablehlo.multiply %529, %3823 : tensor<64x512x3072xf32>
    %3825 = stablehlo.multiply %3823, %547 : tensor<64x512x3072xf32>
    %3826 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3827 = stablehlo.multiply %3826, %3824 : tensor<64x512x3072xf32>
    %3828 = stablehlo.multiply %3827, %543 : tensor<64x512x3072xf32>
    %3829 = stablehlo.multiply %3828, %540 : tensor<64x512x3072xf32>
    %3830 = stablehlo.add %3828, %3829 : tensor<64x512x3072xf32>
    %3831 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3832 = stablehlo.multiply %3831, %3830 : tensor<64x512x3072xf32>
    %3833 = stablehlo.add %3825, %3832 : tensor<64x512x3072xf32>
    %3834 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3835 = stablehlo.multiply %3834, %3832 : tensor<64x512x3072xf32>
    %3836 = stablehlo.multiply %3835, %534 : tensor<64x512x3072xf32>
    %3837 = stablehlo.add %3833, %3836 : tensor<64x512x3072xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3838 = stablehlo.reduce(%3837 init: %cst_419) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3839 = stablehlo.reshape %3838 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3840 = stablehlo.reduce(%3839 init: %cst_420) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3841 = stablehlo.broadcast_in_dim %3840, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3842 = stablehlo.reduce(%3841 init: %cst_421) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3843 = stablehlo.dot_general %3837, %524, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3844 = stablehlo.transpose %3843, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3845 = stablehlo.dot_general %3837, %arg82, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3846 = stablehlo.add %3815, %3845 : tensor<64x512x768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3847 = stablehlo.reduce(%3846 init: %cst_422) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3848 = stablehlo.reshape %3847 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3849 = stablehlo.reshape %3848 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3850 = stablehlo.multiply %510, %3846 : tensor<64x512x768xf32>
    %3851 = stablehlo.multiply %3846, %520 : tensor<64x512x768xf32>
    %3852 = stablehlo.broadcast_in_dim %513, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3853 = stablehlo.multiply %3852, %3850 : tensor<64x512x768xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3854 = stablehlo.reduce(%3853 init: %cst_423) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3855 = stablehlo.reshape %3854 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3856 = stablehlo.broadcast_in_dim %517, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3857 = stablehlo.multiply %3850, %3856 : tensor<64x512x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3858 = stablehlo.reduce(%3857 init: %cst_424) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3859 = stablehlo.reshape %3858 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3860 = stablehlo.reshape %3855 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3861 = stablehlo.multiply %3859, %516 : tensor<64x512x1xf32>
    %3862 = stablehlo.negate %3851 : tensor<64x512x768xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3863 = stablehlo.reduce(%3862 init: %cst_425) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3864 = stablehlo.reshape %3863 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3865 = stablehlo.reduce(%3861 init: %cst_426) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3866 = stablehlo.reduce(%3864 init: %cst_427) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3867 = stablehlo.multiply %3865, %506 : tensor<64x512xf32>
    %3868 = stablehlo.negate %3867 : tensor<64x512xf32>
    %3869 = stablehlo.multiply %3868, %493 : tensor<64x512xf32>
    %3870 = stablehlo.add %3866, %3869 : tensor<64x512xf32>
    %3871 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3872 = stablehlo.divide %3867, %3871 : tensor<64x512xf32>
    %3873 = stablehlo.broadcast_in_dim %3872, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3874 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3875 = stablehlo.divide %3870, %3874 : tensor<64x512xf32>
    %3876 = stablehlo.broadcast_in_dim %3875, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3877 = stablehlo.add %3851, %3876 : tensor<64x512x768xf32>
    %3878 = stablehlo.multiply %3873, %484 : tensor<64x512x768xf32>
    %3879 = stablehlo.add %3877, %3878 : tensor<64x512x768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3880 = stablehlo.reduce(%3879 init: %cst_428) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3881 = stablehlo.reshape %3880 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3882 = stablehlo.reduce(%3881 init: %cst_429) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3883 = stablehlo.broadcast_in_dim %3882, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3884 = stablehlo.reduce(%3883 init: %cst_430) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3885 = stablehlo.dot_general %3879, %474, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3886 = stablehlo.transpose %3885, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3887 = stablehlo.dot_general %3879, %475, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3888 = stablehlo.reshape %3886 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3889 = stablehlo.transpose %3887, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3890 = stablehlo.dot_general %3889, %444, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3891 = stablehlo.dot_general %3889, %469, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3892 = stablehlo.transpose %3891, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3893 = stablehlo.broadcast_in_dim %472, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3894 = stablehlo.multiply %3890, %3893 : tensor<64x12x512x512xf32>
    %3895 = stablehlo.multiply %3894, %465 : tensor<64x12x512x512xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3896 = stablehlo.reduce(%3895 init: %cst_431) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3897 = stablehlo.reshape %3896 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3898 = stablehlo.negate %3897 : tensor<64x12x512x1xf32>
    %3899 = stablehlo.broadcast_in_dim %467, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3900 = stablehlo.divide %3890, %3899 : tensor<64x12x512x512xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3901 = stablehlo.reduce(%3898 init: %cst_432) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3902 = stablehlo.broadcast_in_dim %3901, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3903 = stablehlo.add %3900, %3902 : tensor<64x12x512x512xf32>
    %3904 = stablehlo.multiply %3903, %465 : tensor<64x12x512x512xf32>
    %3905 = stablehlo.dot_general %3904, %455, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3906 = stablehlo.transpose %3905, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3907 = stablehlo.dot_general %3904, %437, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3908 = stablehlo.transpose %3907, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3909 = stablehlo.broadcast_in_dim %453, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3910 = stablehlo.divide %3908, %3909 : tensor<64x512x12x64xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3911 = stablehlo.reduce(%3892 init: %cst_433) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3912 = stablehlo.reshape %3911 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3913 = stablehlo.reduce(%3912 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3914 = stablehlo.broadcast_in_dim %3913, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3915 = stablehlo.reduce(%3914 init: %cst_435) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3916 = stablehlo.reshape %3915 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3917 = stablehlo.dot_general %3892, %423, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3918 = stablehlo.transpose %3917, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3919 = stablehlo.dot_general %3892, %438, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3920 = stablehlo.add %3879, %3919 : tensor<64x512x768xf32>
    %3921 = stablehlo.reshape %3918 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3922 = stablehlo.reduce(%3906 init: %cst_436) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3923 = stablehlo.reshape %3922 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3924 = stablehlo.reduce(%3923 init: %cst_437) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3925 = stablehlo.broadcast_in_dim %3924, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3926 = stablehlo.reduce(%3925 init: %cst_438) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3927 = stablehlo.reshape %3926 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3928 = stablehlo.dot_general %3906, %423, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3929 = stablehlo.transpose %3928, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3930 = stablehlo.dot_general %3906, %431, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3931 = stablehlo.add %3920, %3930 : tensor<64x512x768xf32>
    %3932 = stablehlo.reshape %3929 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3933 = stablehlo.reduce(%3910 init: %cst_439) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3934 = stablehlo.reshape %3933 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3935 = stablehlo.reduce(%3934 init: %cst_440) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3936 = stablehlo.broadcast_in_dim %3935, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3937 = stablehlo.reduce(%3936 init: %cst_441) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3938 = stablehlo.reshape %3937 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3939 = stablehlo.dot_general %3910, %423, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3940 = stablehlo.transpose %3939, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3941 = stablehlo.dot_general %3910, %424, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3942 = stablehlo.add %3931, %3941 : tensor<64x512x768xf32>
    %3943 = stablehlo.reshape %3940 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3944 = stablehlo.reduce(%3942 init: %cst_442) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3945 = stablehlo.reshape %3944 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3946 = stablehlo.reshape %3945 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3947 = stablehlo.multiply %409, %3942 : tensor<64x512x768xf32>
    %3948 = stablehlo.multiply %3942, %419 : tensor<64x512x768xf32>
    %3949 = stablehlo.broadcast_in_dim %412, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3950 = stablehlo.multiply %3949, %3947 : tensor<64x512x768xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3951 = stablehlo.reduce(%3950 init: %cst_443) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3952 = stablehlo.reshape %3951 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3953 = stablehlo.broadcast_in_dim %416, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3954 = stablehlo.multiply %3947, %3953 : tensor<64x512x768xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3955 = stablehlo.reduce(%3954 init: %cst_444) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3956 = stablehlo.reshape %3955 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3957 = stablehlo.reshape %3952 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3958 = stablehlo.multiply %3956, %415 : tensor<64x512x1xf32>
    %3959 = stablehlo.negate %3948 : tensor<64x512x768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3960 = stablehlo.reduce(%3959 init: %cst_445) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3961 = stablehlo.reshape %3960 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3962 = stablehlo.reduce(%3958 init: %cst_446) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3963 = stablehlo.reduce(%3961 init: %cst_447) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3964 = stablehlo.multiply %3962, %405 : tensor<64x512xf32>
    %3965 = stablehlo.negate %3964 : tensor<64x512xf32>
    %3966 = stablehlo.multiply %3965, %392 : tensor<64x512xf32>
    %3967 = stablehlo.add %3963, %3966 : tensor<64x512xf32>
    %3968 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3969 = stablehlo.divide %3964, %3968 : tensor<64x512xf32>
    %3970 = stablehlo.broadcast_in_dim %3969, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3971 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3972 = stablehlo.divide %3967, %3971 : tensor<64x512xf32>
    %3973 = stablehlo.broadcast_in_dim %3972, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3974 = stablehlo.add %3948, %3973 : tensor<64x512x768xf32>
    %3975 = stablehlo.multiply %3970, %383 : tensor<64x512x768xf32>
    %3976 = stablehlo.add %3974, %3975 : tensor<64x512x768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3977 = stablehlo.reduce(%3976 init: %cst_448) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3978 = stablehlo.reshape %3977 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3979 = stablehlo.reduce(%3978 init: %cst_449) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3980 = stablehlo.broadcast_in_dim %3979, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3981 = stablehlo.reduce(%3980 init: %cst_450) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3982 = stablehlo.dot_general %3976, %374, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3983 = stablehlo.transpose %3982, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3984 = stablehlo.dot_general %3976, %arg30, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3985 = stablehlo.multiply %355, %3984 : tensor<64x512x3072xf32>
    %3986 = stablehlo.multiply %3984, %373 : tensor<64x512x3072xf32>
    %3987 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3988 = stablehlo.multiply %3987, %3985 : tensor<64x512x3072xf32>
    %3989 = stablehlo.multiply %3988, %369 : tensor<64x512x3072xf32>
    %3990 = stablehlo.multiply %3989, %366 : tensor<64x512x3072xf32>
    %3991 = stablehlo.add %3989, %3990 : tensor<64x512x3072xf32>
    %3992 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3993 = stablehlo.multiply %3992, %3991 : tensor<64x512x3072xf32>
    %3994 = stablehlo.add %3986, %3993 : tensor<64x512x3072xf32>
    %3995 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3996 = stablehlo.multiply %3995, %3993 : tensor<64x512x3072xf32>
    %3997 = stablehlo.multiply %3996, %360 : tensor<64x512x3072xf32>
    %3998 = stablehlo.add %3994, %3997 : tensor<64x512x3072xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3999 = stablehlo.reduce(%3998 init: %cst_451) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4000 = stablehlo.reshape %3999 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4001 = stablehlo.reduce(%4000 init: %cst_452) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4002 = stablehlo.broadcast_in_dim %4001, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4003 = stablehlo.reduce(%4002 init: %cst_453) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4004 = stablehlo.dot_general %3998, %350, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4005 = stablehlo.transpose %4004, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4006 = stablehlo.dot_general %3998, %arg34, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4007 = stablehlo.add %3976, %4006 : tensor<64x512x768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4008 = stablehlo.reduce(%4007 init: %cst_454) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4009 = stablehlo.reshape %4008 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4010 = stablehlo.reshape %4009 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4011 = stablehlo.multiply %336, %4007 : tensor<64x512x768xf32>
    %4012 = stablehlo.multiply %4007, %346 : tensor<64x512x768xf32>
    %4013 = stablehlo.broadcast_in_dim %339, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4014 = stablehlo.multiply %4013, %4011 : tensor<64x512x768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4015 = stablehlo.reduce(%4014 init: %cst_455) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4016 = stablehlo.reshape %4015 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4017 = stablehlo.broadcast_in_dim %343, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4018 = stablehlo.multiply %4011, %4017 : tensor<64x512x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4019 = stablehlo.reduce(%4018 init: %cst_456) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4020 = stablehlo.reshape %4019 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4021 = stablehlo.reshape %4016 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4022 = stablehlo.multiply %4020, %342 : tensor<64x512x1xf32>
    %4023 = stablehlo.negate %4012 : tensor<64x512x768xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4024 = stablehlo.reduce(%4023 init: %cst_457) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4025 = stablehlo.reshape %4024 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4026 = stablehlo.reduce(%4022 init: %cst_458) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4027 = stablehlo.reduce(%4025 init: %cst_459) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4028 = stablehlo.multiply %4026, %332 : tensor<64x512xf32>
    %4029 = stablehlo.negate %4028 : tensor<64x512xf32>
    %4030 = stablehlo.multiply %4029, %319 : tensor<64x512xf32>
    %4031 = stablehlo.add %4027, %4030 : tensor<64x512xf32>
    %4032 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4033 = stablehlo.divide %4028, %4032 : tensor<64x512xf32>
    %4034 = stablehlo.broadcast_in_dim %4033, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4035 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4036 = stablehlo.divide %4031, %4035 : tensor<64x512xf32>
    %4037 = stablehlo.broadcast_in_dim %4036, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4038 = stablehlo.add %4012, %4037 : tensor<64x512x768xf32>
    %4039 = stablehlo.multiply %4034, %310 : tensor<64x512x768xf32>
    %4040 = stablehlo.add %4038, %4039 : tensor<64x512x768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4041 = stablehlo.reduce(%4040 init: %cst_460) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4042 = stablehlo.reshape %4041 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4043 = stablehlo.reduce(%4042 init: %cst_461) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4044 = stablehlo.broadcast_in_dim %4043, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4045 = stablehlo.reduce(%4044 init: %cst_462) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4046 = stablehlo.dot_general %4040, %300, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4047 = stablehlo.transpose %4046, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4048 = stablehlo.dot_general %4040, %301, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4049 = stablehlo.reshape %4047 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4050 = stablehlo.transpose %4048, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4051 = stablehlo.dot_general %4050, %270, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4052 = stablehlo.dot_general %4050, %295, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4053 = stablehlo.transpose %4052, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4054 = stablehlo.broadcast_in_dim %298, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4055 = stablehlo.multiply %4051, %4054 : tensor<64x12x512x512xf32>
    %4056 = stablehlo.multiply %4055, %291 : tensor<64x12x512x512xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4057 = stablehlo.reduce(%4056 init: %cst_463) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4058 = stablehlo.reshape %4057 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4059 = stablehlo.negate %4058 : tensor<64x12x512x1xf32>
    %4060 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4061 = stablehlo.divide %4051, %4060 : tensor<64x12x512x512xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4062 = stablehlo.reduce(%4059 init: %cst_464) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4063 = stablehlo.broadcast_in_dim %4062, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4064 = stablehlo.add %4061, %4063 : tensor<64x12x512x512xf32>
    %4065 = stablehlo.multiply %4064, %291 : tensor<64x12x512x512xf32>
    %4066 = stablehlo.dot_general %4065, %281, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4067 = stablehlo.transpose %4066, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4068 = stablehlo.dot_general %4065, %263, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4069 = stablehlo.transpose %4068, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4070 = stablehlo.broadcast_in_dim %279, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4071 = stablehlo.divide %4069, %4070 : tensor<64x512x12x64xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4072 = stablehlo.reduce(%4053 init: %cst_465) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4073 = stablehlo.reshape %4072 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4074 = stablehlo.reduce(%4073 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4075 = stablehlo.broadcast_in_dim %4074, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4076 = stablehlo.reduce(%4075 init: %cst_467) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4077 = stablehlo.reshape %4076 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4078 = stablehlo.dot_general %4053, %249, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4079 = stablehlo.transpose %4078, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4080 = stablehlo.dot_general %4053, %264, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4081 = stablehlo.add %4040, %4080 : tensor<64x512x768xf32>
    %4082 = stablehlo.reshape %4079 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4083 = stablehlo.reduce(%4067 init: %cst_468) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4084 = stablehlo.reshape %4083 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4085 = stablehlo.reduce(%4084 init: %cst_469) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4086 = stablehlo.broadcast_in_dim %4085, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4087 = stablehlo.reduce(%4086 init: %cst_470) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4088 = stablehlo.reshape %4087 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4089 = stablehlo.dot_general %4067, %249, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4090 = stablehlo.transpose %4089, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4091 = stablehlo.dot_general %4067, %257, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4092 = stablehlo.add %4081, %4091 : tensor<64x512x768xf32>
    %4093 = stablehlo.reshape %4090 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4094 = stablehlo.reduce(%4071 init: %cst_471) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4095 = stablehlo.reshape %4094 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4096 = stablehlo.reduce(%4095 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4097 = stablehlo.broadcast_in_dim %4096, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4098 = stablehlo.reduce(%4097 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4099 = stablehlo.reshape %4098 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4100 = stablehlo.dot_general %4071, %249, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4101 = stablehlo.transpose %4100, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4102 = stablehlo.dot_general %4071, %250, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4103 = stablehlo.add %4092, %4102 : tensor<64x512x768xf32>
    %4104 = stablehlo.reshape %4101 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4105 = stablehlo.reduce(%4103 init: %cst_474) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4106 = stablehlo.reshape %4105 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4107 = stablehlo.reshape %4106 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4108 = stablehlo.multiply %235, %4103 : tensor<64x512x768xf32>
    %4109 = stablehlo.multiply %4103, %245 : tensor<64x512x768xf32>
    %4110 = stablehlo.broadcast_in_dim %238, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4111 = stablehlo.multiply %4110, %4108 : tensor<64x512x768xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4112 = stablehlo.reduce(%4111 init: %cst_475) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4113 = stablehlo.reshape %4112 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4114 = stablehlo.broadcast_in_dim %242, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4115 = stablehlo.multiply %4108, %4114 : tensor<64x512x768xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4116 = stablehlo.reduce(%4115 init: %cst_476) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4117 = stablehlo.reshape %4116 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4118 = stablehlo.reshape %4113 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4119 = stablehlo.multiply %4117, %241 : tensor<64x512x1xf32>
    %4120 = stablehlo.negate %4109 : tensor<64x512x768xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4121 = stablehlo.reduce(%4120 init: %cst_477) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4122 = stablehlo.reshape %4121 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4123 = stablehlo.reduce(%4119 init: %cst_478) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4124 = stablehlo.reduce(%4122 init: %cst_479) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4125 = stablehlo.multiply %4123, %231 : tensor<64x512xf32>
    %4126 = stablehlo.negate %4125 : tensor<64x512xf32>
    %4127 = stablehlo.multiply %4126, %218 : tensor<64x512xf32>
    %4128 = stablehlo.add %4124, %4127 : tensor<64x512xf32>
    %4129 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4130 = stablehlo.divide %4125, %4129 : tensor<64x512xf32>
    %4131 = stablehlo.broadcast_in_dim %4130, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4132 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4133 = stablehlo.divide %4128, %4132 : tensor<64x512xf32>
    %4134 = stablehlo.broadcast_in_dim %4133, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4135 = stablehlo.add %4109, %4134 : tensor<64x512x768xf32>
    %4136 = stablehlo.multiply %4131, %209 : tensor<64x512x768xf32>
    %4137 = stablehlo.add %4135, %4136 : tensor<64x512x768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4138 = stablehlo.reduce(%4137 init: %cst_480) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4139 = stablehlo.reshape %4138 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4140 = stablehlo.reduce(%4139 init: %cst_481) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4141 = stablehlo.broadcast_in_dim %4140, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4142 = stablehlo.reduce(%4141 init: %cst_482) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4143 = stablehlo.dot_general %4137, %200, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4144 = stablehlo.transpose %4143, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4145 = stablehlo.dot_general %4137, %arg14, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4146 = stablehlo.multiply %181, %4145 : tensor<64x512x3072xf32>
    %4147 = stablehlo.multiply %4145, %199 : tensor<64x512x3072xf32>
    %4148 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4149 = stablehlo.multiply %4148, %4146 : tensor<64x512x3072xf32>
    %4150 = stablehlo.multiply %4149, %195 : tensor<64x512x3072xf32>
    %4151 = stablehlo.multiply %4150, %192 : tensor<64x512x3072xf32>
    %4152 = stablehlo.add %4150, %4151 : tensor<64x512x3072xf32>
    %4153 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4154 = stablehlo.multiply %4153, %4152 : tensor<64x512x3072xf32>
    %4155 = stablehlo.add %4147, %4154 : tensor<64x512x3072xf32>
    %4156 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4157 = stablehlo.multiply %4156, %4154 : tensor<64x512x3072xf32>
    %4158 = stablehlo.multiply %4157, %186 : tensor<64x512x3072xf32>
    %4159 = stablehlo.add %4155, %4158 : tensor<64x512x3072xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4160 = stablehlo.reduce(%4159 init: %cst_483) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4161 = stablehlo.reshape %4160 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4162 = stablehlo.reduce(%4161 init: %cst_484) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4163 = stablehlo.broadcast_in_dim %4162, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4164 = stablehlo.reduce(%4163 init: %cst_485) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4165 = stablehlo.dot_general %4159, %176, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4166 = stablehlo.transpose %4165, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4167 = stablehlo.dot_general %4159, %arg18, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4168 = stablehlo.add %4137, %4167 : tensor<64x512x768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4169 = stablehlo.reduce(%4168 init: %cst_486) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4170 = stablehlo.reshape %4169 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4171 = stablehlo.reshape %4170 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4172 = stablehlo.multiply %162, %4168 : tensor<64x512x768xf32>
    %4173 = stablehlo.multiply %4168, %172 : tensor<64x512x768xf32>
    %4174 = stablehlo.broadcast_in_dim %165, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4175 = stablehlo.multiply %4174, %4172 : tensor<64x512x768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4176 = stablehlo.reduce(%4175 init: %cst_487) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4177 = stablehlo.reshape %4176 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4178 = stablehlo.broadcast_in_dim %169, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4179 = stablehlo.multiply %4172, %4178 : tensor<64x512x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4180 = stablehlo.reduce(%4179 init: %cst_488) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4181 = stablehlo.reshape %4180 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4182 = stablehlo.reshape %4177 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4183 = stablehlo.multiply %4181, %168 : tensor<64x512x1xf32>
    %4184 = stablehlo.negate %4173 : tensor<64x512x768xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4185 = stablehlo.reduce(%4184 init: %cst_489) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4186 = stablehlo.reshape %4185 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4187 = stablehlo.reduce(%4183 init: %cst_490) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4188 = stablehlo.reduce(%4186 init: %cst_491) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4189 = stablehlo.multiply %4187, %158 : tensor<64x512xf32>
    %4190 = stablehlo.negate %4189 : tensor<64x512xf32>
    %4191 = stablehlo.multiply %4190, %145 : tensor<64x512xf32>
    %4192 = stablehlo.add %4188, %4191 : tensor<64x512xf32>
    %4193 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4194 = stablehlo.divide %4189, %4193 : tensor<64x512xf32>
    %4195 = stablehlo.broadcast_in_dim %4194, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4196 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4197 = stablehlo.divide %4192, %4196 : tensor<64x512xf32>
    %4198 = stablehlo.broadcast_in_dim %4197, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4199 = stablehlo.add %4173, %4198 : tensor<64x512x768xf32>
    %4200 = stablehlo.multiply %4195, %136 : tensor<64x512x768xf32>
    %4201 = stablehlo.add %4199, %4200 : tensor<64x512x768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4202 = stablehlo.reduce(%4201 init: %cst_492) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4203 = stablehlo.reshape %4202 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4204 = stablehlo.reduce(%4203 init: %cst_493) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4205 = stablehlo.broadcast_in_dim %4204, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4206 = stablehlo.reduce(%4205 init: %cst_494) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4207 = stablehlo.dot_general %4201, %126, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4208 = stablehlo.transpose %4207, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4209 = stablehlo.dot_general %4201, %127, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4210 = stablehlo.reshape %4208 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4211 = stablehlo.transpose %4209, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4212 = stablehlo.dot_general %4211, %96, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4213 = stablehlo.dot_general %4211, %121, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4214 = stablehlo.transpose %4213, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4215 = stablehlo.broadcast_in_dim %124, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4216 = stablehlo.multiply %4212, %4215 : tensor<64x12x512x512xf32>
    %4217 = stablehlo.multiply %4216, %117 : tensor<64x12x512x512xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4218 = stablehlo.reduce(%4217 init: %cst_495) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4219 = stablehlo.reshape %4218 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4220 = stablehlo.negate %4219 : tensor<64x12x512x1xf32>
    %4221 = stablehlo.broadcast_in_dim %119, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4222 = stablehlo.divide %4212, %4221 : tensor<64x12x512x512xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4223 = stablehlo.reduce(%4220 init: %cst_496) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4224 = stablehlo.broadcast_in_dim %4223, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4225 = stablehlo.add %4222, %4224 : tensor<64x12x512x512xf32>
    %4226 = stablehlo.multiply %4225, %117 : tensor<64x12x512x512xf32>
    %4227 = stablehlo.dot_general %4226, %107, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4228 = stablehlo.transpose %4227, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4229 = stablehlo.dot_general %4226, %89, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4230 = stablehlo.transpose %4229, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4231 = stablehlo.broadcast_in_dim %105, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4232 = stablehlo.divide %4230, %4231 : tensor<64x512x12x64xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4233 = stablehlo.reduce(%4214 init: %cst_497) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4234 = stablehlo.reshape %4233 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4235 = stablehlo.reduce(%4234 init: %cst_498) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4236 = stablehlo.broadcast_in_dim %4235, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_499 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4237 = stablehlo.reduce(%4236 init: %cst_499) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4238 = stablehlo.reshape %4237 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4239 = stablehlo.dot_general %4214, %68, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4240 = stablehlo.transpose %4239, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4241 = stablehlo.dot_general %4214, %90, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4242 = stablehlo.add %4201, %4241 : tensor<64x512x768xf32>
    %4243 = stablehlo.reshape %4240 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_500 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4244 = stablehlo.reduce(%4228 init: %cst_500) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4245 = stablehlo.reshape %4244 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_501 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4246 = stablehlo.reduce(%4245 init: %cst_501) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4247 = stablehlo.broadcast_in_dim %4246, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_502 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4248 = stablehlo.reduce(%4247 init: %cst_502) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4249 = stablehlo.reshape %4248 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4250 = stablehlo.dot_general %4228, %68, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4251 = stablehlo.transpose %4250, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4252 = stablehlo.dot_general %4228, %83, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4253 = stablehlo.add %4242, %4252 : tensor<64x512x768xf32>
    %4254 = stablehlo.reshape %4251 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_503 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4255 = stablehlo.reduce(%4232 init: %cst_503) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4256 = stablehlo.reshape %4255 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_504 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4257 = stablehlo.reduce(%4256 init: %cst_504) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4258 = stablehlo.broadcast_in_dim %4257, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_505 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4259 = stablehlo.reduce(%4258 init: %cst_505) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4260 = stablehlo.reshape %4259 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4261 = stablehlo.dot_general %4232, %68, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4262 = stablehlo.transpose %4261, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4263 = stablehlo.dot_general %4232, %76, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4264 = stablehlo.add %4253, %4263 : tensor<64x512x768xf32>
    %4265 = stablehlo.reshape %4262 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_506 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4266 = stablehlo.reduce(%4264 init: %cst_506) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4267 = stablehlo.reshape %4266 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4268 = stablehlo.reshape %4267 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4269 = stablehlo.multiply %54, %4264 : tensor<64x512x768xf32>
    %4270 = stablehlo.multiply %4264, %64 : tensor<64x512x768xf32>
    %4271 = stablehlo.broadcast_in_dim %57, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4272 = stablehlo.multiply %4271, %4269 : tensor<64x512x768xf32>
    %cst_507 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4273 = stablehlo.reduce(%4272 init: %cst_507) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4274 = stablehlo.reshape %4273 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4275 = stablehlo.broadcast_in_dim %61, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4276 = stablehlo.multiply %4269, %4275 : tensor<64x512x768xf32>
    %cst_508 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4277 = stablehlo.reduce(%4276 init: %cst_508) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4278 = stablehlo.reshape %4277 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4279 = stablehlo.reshape %4274 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4280 = stablehlo.multiply %4278, %60 : tensor<64x512x1xf32>
    %4281 = stablehlo.negate %4270 : tensor<64x512x768xf32>
    %cst_509 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4282 = stablehlo.reduce(%4281 init: %cst_509) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4283 = stablehlo.reshape %4282 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_510 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4284 = stablehlo.reduce(%4280 init: %cst_510) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_511 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4285 = stablehlo.reduce(%4283 init: %cst_511) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4286 = stablehlo.multiply %4284, %50 : tensor<64x512xf32>
    %4287 = stablehlo.negate %4286 : tensor<64x512xf32>
    %4288 = stablehlo.multiply %4287, %37 : tensor<64x512xf32>
    %4289 = stablehlo.add %4285, %4288 : tensor<64x512xf32>
    %4290 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4291 = stablehlo.divide %4286, %4290 : tensor<64x512xf32>
    %4292 = stablehlo.broadcast_in_dim %4291, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4293 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4294 = stablehlo.divide %4289, %4293 : tensor<64x512xf32>
    %4295 = stablehlo.broadcast_in_dim %4294, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4296 = stablehlo.add %4270, %4295 : tensor<64x512x768xf32>
    %4297 = stablehlo.multiply %4292, %28 : tensor<64x512x768xf32>
    %4298 = stablehlo.add %4296, %4297 : tensor<64x512x768xf32>
    %4299 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4300 = "stablehlo.scatter"(%4299, %22, %4298) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg615: tensor<f32>, %arg616: tensor<f32>):
      %11446 = stablehlo.add %arg615, %arg616 : tensor<f32>
      stablehlo.return %11446 : tensor<f32>
    }) : (tensor<2x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<2x768xf32>
    %4301 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4302 = "stablehlo.scatter"(%4301, %15, %4298) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg615: tensor<f32>, %arg616: tensor<f32>):
      %11446 = stablehlo.add %arg615, %arg616 : tensor<f32>
      stablehlo.return %11446 : tensor<f32>
    }) : (tensor<512x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<512x768xf32>
    %4303 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4304 = "stablehlo.scatter"(%4303, %8, %4298) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg615: tensor<f32>, %arg616: tensor<f32>):
      %11446 = stablehlo.add %arg615, %arg616 : tensor<f32>
      stablehlo.return %11446 : tensor<f32>
    }) : (tensor<30522x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %4305 = stablehlo.multiply %4302, %4302 : tensor<512x768xf32>
    %cst_512 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4306 = stablehlo.reduce(%4305 init: %cst_512) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %4307 = stablehlo.add %cst_6, %4306 : tensor<f32>
    %4308 = stablehlo.multiply %4300, %4300 : tensor<2x768xf32>
    %cst_513 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4309 = stablehlo.reduce(%4308 init: %cst_513) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %4310 = stablehlo.add %4307, %4309 : tensor<f32>
    %4311 = stablehlo.multiply %4304, %4304 : tensor<30522x768xf32>
    %cst_514 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4312 = stablehlo.reduce(%4311 init: %cst_514) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %4313 = stablehlo.add %4310, %4312 : tensor<f32>
    %4314 = stablehlo.multiply %4249, %4249 : tensor<768xf32>
    %cst_515 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4315 = stablehlo.reduce(%4314 init: %cst_515) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4316 = stablehlo.add %4313, %4315 : tensor<f32>
    %4317 = stablehlo.multiply %4254, %4254 : tensor<768x768xf32>
    %cst_516 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4318 = stablehlo.reduce(%4317 init: %cst_516) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4319 = stablehlo.add %4316, %4318 : tensor<f32>
    %4320 = stablehlo.multiply %4260, %4260 : tensor<768xf32>
    %cst_517 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4321 = stablehlo.reduce(%4320 init: %cst_517) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4322 = stablehlo.add %4319, %4321 : tensor<f32>
    %4323 = stablehlo.multiply %4265, %4265 : tensor<768x768xf32>
    %cst_518 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4324 = stablehlo.reduce(%4323 init: %cst_518) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4325 = stablehlo.add %4322, %4324 : tensor<f32>
    %4326 = stablehlo.multiply %4238, %4238 : tensor<768xf32>
    %cst_519 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4327 = stablehlo.reduce(%4326 init: %cst_519) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4328 = stablehlo.add %4325, %4327 : tensor<f32>
    %4329 = stablehlo.multiply %4243, %4243 : tensor<768x768xf32>
    %cst_520 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4330 = stablehlo.reduce(%4329 init: %cst_520) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4331 = stablehlo.add %4328, %4330 : tensor<f32>
    %4332 = stablehlo.multiply %4206, %4206 : tensor<768xf32>
    %cst_521 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4333 = stablehlo.reduce(%4332 init: %cst_521) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4334 = stablehlo.add %4331, %4333 : tensor<f32>
    %4335 = stablehlo.multiply %4210, %4210 : tensor<768x768xf32>
    %cst_522 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4336 = stablehlo.reduce(%4335 init: %cst_522) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4337 = stablehlo.add %4334, %4336 : tensor<f32>
    %4338 = stablehlo.multiply %4171, %4171 : tensor<768xf32>
    %cst_523 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4339 = stablehlo.reduce(%4338 init: %cst_523) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4340 = stablehlo.add %4337, %4339 : tensor<f32>
    %4341 = stablehlo.multiply %4182, %4182 : tensor<768xf32>
    %cst_524 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4342 = stablehlo.reduce(%4341 init: %cst_524) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4343 = stablehlo.add %4340, %4342 : tensor<f32>
    %4344 = stablehlo.multiply %4142, %4142 : tensor<768xf32>
    %cst_525 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4345 = stablehlo.reduce(%4344 init: %cst_525) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4346 = stablehlo.add %4343, %4345 : tensor<f32>
    %4347 = stablehlo.multiply %4144, %4144 : tensor<3072x768xf32>
    %cst_526 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4348 = stablehlo.reduce(%4347 init: %cst_526) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4349 = stablehlo.add %4346, %4348 : tensor<f32>
    %4350 = stablehlo.multiply %4107, %4107 : tensor<768xf32>
    %cst_527 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4351 = stablehlo.reduce(%4350 init: %cst_527) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4352 = stablehlo.add %4349, %4351 : tensor<f32>
    %4353 = stablehlo.multiply %4118, %4118 : tensor<768xf32>
    %cst_528 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4354 = stablehlo.reduce(%4353 init: %cst_528) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4355 = stablehlo.add %4352, %4354 : tensor<f32>
    %4356 = stablehlo.multiply %4164, %4164 : tensor<3072xf32>
    %cst_529 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4357 = stablehlo.reduce(%4356 init: %cst_529) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4358 = stablehlo.add %4355, %4357 : tensor<f32>
    %4359 = stablehlo.multiply %4166, %4166 : tensor<768x3072xf32>
    %cst_530 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4360 = stablehlo.reduce(%4359 init: %cst_530) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4361 = stablehlo.add %4358, %4360 : tensor<f32>
    %4362 = stablehlo.multiply %4088, %4088 : tensor<768xf32>
    %cst_531 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4363 = stablehlo.reduce(%4362 init: %cst_531) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4364 = stablehlo.add %4361, %4363 : tensor<f32>
    %4365 = stablehlo.multiply %4093, %4093 : tensor<768x768xf32>
    %cst_532 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4366 = stablehlo.reduce(%4365 init: %cst_532) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4367 = stablehlo.add %4364, %4366 : tensor<f32>
    %4368 = stablehlo.multiply %4099, %4099 : tensor<768xf32>
    %cst_533 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4369 = stablehlo.reduce(%4368 init: %cst_533) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4370 = stablehlo.add %4367, %4369 : tensor<f32>
    %4371 = stablehlo.multiply %4104, %4104 : tensor<768x768xf32>
    %cst_534 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4372 = stablehlo.reduce(%4371 init: %cst_534) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4373 = stablehlo.add %4370, %4372 : tensor<f32>
    %4374 = stablehlo.multiply %4077, %4077 : tensor<768xf32>
    %cst_535 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4375 = stablehlo.reduce(%4374 init: %cst_535) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4376 = stablehlo.add %4373, %4375 : tensor<f32>
    %4377 = stablehlo.multiply %4082, %4082 : tensor<768x768xf32>
    %cst_536 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4378 = stablehlo.reduce(%4377 init: %cst_536) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4379 = stablehlo.add %4376, %4378 : tensor<f32>
    %4380 = stablehlo.multiply %4045, %4045 : tensor<768xf32>
    %cst_537 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4381 = stablehlo.reduce(%4380 init: %cst_537) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4382 = stablehlo.add %4379, %4381 : tensor<f32>
    %4383 = stablehlo.multiply %4049, %4049 : tensor<768x768xf32>
    %cst_538 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4384 = stablehlo.reduce(%4383 init: %cst_538) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4385 = stablehlo.add %4382, %4384 : tensor<f32>
    %4386 = stablehlo.multiply %4010, %4010 : tensor<768xf32>
    %cst_539 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4387 = stablehlo.reduce(%4386 init: %cst_539) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4388 = stablehlo.add %4385, %4387 : tensor<f32>
    %4389 = stablehlo.multiply %4021, %4021 : tensor<768xf32>
    %cst_540 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4390 = stablehlo.reduce(%4389 init: %cst_540) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4391 = stablehlo.add %4388, %4390 : tensor<f32>
    %4392 = stablehlo.multiply %3981, %3981 : tensor<768xf32>
    %cst_541 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4393 = stablehlo.reduce(%4392 init: %cst_541) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4394 = stablehlo.add %4391, %4393 : tensor<f32>
    %4395 = stablehlo.multiply %3983, %3983 : tensor<3072x768xf32>
    %cst_542 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4396 = stablehlo.reduce(%4395 init: %cst_542) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4397 = stablehlo.add %4394, %4396 : tensor<f32>
    %4398 = stablehlo.multiply %3946, %3946 : tensor<768xf32>
    %cst_543 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4399 = stablehlo.reduce(%4398 init: %cst_543) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4400 = stablehlo.add %4397, %4399 : tensor<f32>
    %4401 = stablehlo.multiply %3957, %3957 : tensor<768xf32>
    %cst_544 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4402 = stablehlo.reduce(%4401 init: %cst_544) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4403 = stablehlo.add %4400, %4402 : tensor<f32>
    %4404 = stablehlo.multiply %4003, %4003 : tensor<3072xf32>
    %cst_545 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4405 = stablehlo.reduce(%4404 init: %cst_545) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4406 = stablehlo.add %4403, %4405 : tensor<f32>
    %4407 = stablehlo.multiply %4005, %4005 : tensor<768x3072xf32>
    %cst_546 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4408 = stablehlo.reduce(%4407 init: %cst_546) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4409 = stablehlo.add %4406, %4408 : tensor<f32>
    %4410 = stablehlo.multiply %2639, %2639 : tensor<768xf32>
    %cst_547 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4411 = stablehlo.reduce(%4410 init: %cst_547) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4412 = stablehlo.add %4409, %4411 : tensor<f32>
    %4413 = stablehlo.multiply %2644, %2644 : tensor<768x768xf32>
    %cst_548 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4414 = stablehlo.reduce(%4413 init: %cst_548) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4415 = stablehlo.add %4412, %4414 : tensor<f32>
    %4416 = stablehlo.multiply %2650, %2650 : tensor<768xf32>
    %cst_549 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4417 = stablehlo.reduce(%4416 init: %cst_549) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4418 = stablehlo.add %4415, %4417 : tensor<f32>
    %4419 = stablehlo.multiply %2655, %2655 : tensor<768x768xf32>
    %cst_550 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4420 = stablehlo.reduce(%4419 init: %cst_550) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4421 = stablehlo.add %4418, %4420 : tensor<f32>
    %4422 = stablehlo.multiply %2628, %2628 : tensor<768xf32>
    %cst_551 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4423 = stablehlo.reduce(%4422 init: %cst_551) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4424 = stablehlo.add %4421, %4423 : tensor<f32>
    %4425 = stablehlo.multiply %2633, %2633 : tensor<768x768xf32>
    %cst_552 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4426 = stablehlo.reduce(%4425 init: %cst_552) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4427 = stablehlo.add %4424, %4426 : tensor<f32>
    %4428 = stablehlo.multiply %2596, %2596 : tensor<768xf32>
    %cst_553 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4429 = stablehlo.reduce(%4428 init: %cst_553) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4430 = stablehlo.add %4427, %4429 : tensor<f32>
    %4431 = stablehlo.multiply %2600, %2600 : tensor<768x768xf32>
    %cst_554 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4432 = stablehlo.reduce(%4431 init: %cst_554) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4433 = stablehlo.add %4430, %4432 : tensor<f32>
    %4434 = stablehlo.multiply %2561, %2561 : tensor<768xf32>
    %cst_555 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4435 = stablehlo.reduce(%4434 init: %cst_555) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4436 = stablehlo.add %4433, %4435 : tensor<f32>
    %4437 = stablehlo.multiply %2572, %2572 : tensor<768xf32>
    %cst_556 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4438 = stablehlo.reduce(%4437 init: %cst_556) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4439 = stablehlo.add %4436, %4438 : tensor<f32>
    %4440 = stablehlo.multiply %2532, %2532 : tensor<768xf32>
    %cst_557 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4441 = stablehlo.reduce(%4440 init: %cst_557) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4442 = stablehlo.add %4439, %4441 : tensor<f32>
    %4443 = stablehlo.multiply %2534, %2534 : tensor<3072x768xf32>
    %cst_558 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4444 = stablehlo.reduce(%4443 init: %cst_558) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4445 = stablehlo.add %4442, %4444 : tensor<f32>
    %4446 = stablehlo.multiply %2497, %2497 : tensor<768xf32>
    %cst_559 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4447 = stablehlo.reduce(%4446 init: %cst_559) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4448 = stablehlo.add %4445, %4447 : tensor<f32>
    %4449 = stablehlo.multiply %2508, %2508 : tensor<768xf32>
    %cst_560 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4450 = stablehlo.reduce(%4449 init: %cst_560) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4451 = stablehlo.add %4448, %4450 : tensor<f32>
    %4452 = stablehlo.multiply %2554, %2554 : tensor<3072xf32>
    %cst_561 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4453 = stablehlo.reduce(%4452 init: %cst_561) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4454 = stablehlo.add %4451, %4453 : tensor<f32>
    %4455 = stablehlo.multiply %2556, %2556 : tensor<768x3072xf32>
    %cst_562 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4456 = stablehlo.reduce(%4455 init: %cst_562) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4457 = stablehlo.add %4454, %4456 : tensor<f32>
    %4458 = stablehlo.multiply %2478, %2478 : tensor<768xf32>
    %cst_563 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4459 = stablehlo.reduce(%4458 init: %cst_563) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4460 = stablehlo.add %4457, %4459 : tensor<f32>
    %4461 = stablehlo.multiply %2483, %2483 : tensor<768x768xf32>
    %cst_564 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4462 = stablehlo.reduce(%4461 init: %cst_564) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4463 = stablehlo.add %4460, %4462 : tensor<f32>
    %4464 = stablehlo.multiply %2489, %2489 : tensor<768xf32>
    %cst_565 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4465 = stablehlo.reduce(%4464 init: %cst_565) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4466 = stablehlo.add %4463, %4465 : tensor<f32>
    %4467 = stablehlo.multiply %2494, %2494 : tensor<768x768xf32>
    %cst_566 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4468 = stablehlo.reduce(%4467 init: %cst_566) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4469 = stablehlo.add %4466, %4468 : tensor<f32>
    %4470 = stablehlo.multiply %2467, %2467 : tensor<768xf32>
    %cst_567 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4471 = stablehlo.reduce(%4470 init: %cst_567) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4472 = stablehlo.add %4469, %4471 : tensor<f32>
    %4473 = stablehlo.multiply %2472, %2472 : tensor<768x768xf32>
    %cst_568 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4474 = stablehlo.reduce(%4473 init: %cst_568) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4475 = stablehlo.add %4472, %4474 : tensor<f32>
    %4476 = stablehlo.multiply %2435, %2435 : tensor<768xf32>
    %cst_569 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4477 = stablehlo.reduce(%4476 init: %cst_569) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4478 = stablehlo.add %4475, %4477 : tensor<f32>
    %4479 = stablehlo.multiply %2439, %2439 : tensor<768x768xf32>
    %cst_570 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4480 = stablehlo.reduce(%4479 init: %cst_570) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4481 = stablehlo.add %4478, %4480 : tensor<f32>
    %4482 = stablehlo.multiply %2400, %2400 : tensor<768xf32>
    %cst_571 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4483 = stablehlo.reduce(%4482 init: %cst_571) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4484 = stablehlo.add %4481, %4483 : tensor<f32>
    %4485 = stablehlo.multiply %2411, %2411 : tensor<768xf32>
    %cst_572 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4486 = stablehlo.reduce(%4485 init: %cst_572) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4487 = stablehlo.add %4484, %4486 : tensor<f32>
    %4488 = stablehlo.multiply %2371, %2371 : tensor<768xf32>
    %cst_573 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4489 = stablehlo.reduce(%4488 init: %cst_573) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4490 = stablehlo.add %4487, %4489 : tensor<f32>
    %4491 = stablehlo.multiply %2373, %2373 : tensor<3072x768xf32>
    %cst_574 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4492 = stablehlo.reduce(%4491 init: %cst_574) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4493 = stablehlo.add %4490, %4492 : tensor<f32>
    %4494 = stablehlo.multiply %2336, %2336 : tensor<768xf32>
    %cst_575 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4495 = stablehlo.reduce(%4494 init: %cst_575) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4496 = stablehlo.add %4493, %4495 : tensor<f32>
    %4497 = stablehlo.multiply %2347, %2347 : tensor<768xf32>
    %cst_576 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4498 = stablehlo.reduce(%4497 init: %cst_576) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4499 = stablehlo.add %4496, %4498 : tensor<f32>
    %4500 = stablehlo.multiply %2393, %2393 : tensor<3072xf32>
    %cst_577 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4501 = stablehlo.reduce(%4500 init: %cst_577) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4502 = stablehlo.add %4499, %4501 : tensor<f32>
    %4503 = stablehlo.multiply %2395, %2395 : tensor<768x3072xf32>
    %cst_578 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4504 = stablehlo.reduce(%4503 init: %cst_578) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4505 = stablehlo.add %4502, %4504 : tensor<f32>
    %4506 = stablehlo.multiply %3927, %3927 : tensor<768xf32>
    %cst_579 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4507 = stablehlo.reduce(%4506 init: %cst_579) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4508 = stablehlo.add %4505, %4507 : tensor<f32>
    %4509 = stablehlo.multiply %3932, %3932 : tensor<768x768xf32>
    %cst_580 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4510 = stablehlo.reduce(%4509 init: %cst_580) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4511 = stablehlo.add %4508, %4510 : tensor<f32>
    %4512 = stablehlo.multiply %3938, %3938 : tensor<768xf32>
    %cst_581 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4513 = stablehlo.reduce(%4512 init: %cst_581) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4514 = stablehlo.add %4511, %4513 : tensor<f32>
    %4515 = stablehlo.multiply %3943, %3943 : tensor<768x768xf32>
    %cst_582 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4516 = stablehlo.reduce(%4515 init: %cst_582) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4517 = stablehlo.add %4514, %4516 : tensor<f32>
    %4518 = stablehlo.multiply %3916, %3916 : tensor<768xf32>
    %cst_583 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4519 = stablehlo.reduce(%4518 init: %cst_583) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4520 = stablehlo.add %4517, %4519 : tensor<f32>
    %4521 = stablehlo.multiply %3921, %3921 : tensor<768x768xf32>
    %cst_584 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4522 = stablehlo.reduce(%4521 init: %cst_584) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4523 = stablehlo.add %4520, %4522 : tensor<f32>
    %4524 = stablehlo.multiply %3884, %3884 : tensor<768xf32>
    %cst_585 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4525 = stablehlo.reduce(%4524 init: %cst_585) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4526 = stablehlo.add %4523, %4525 : tensor<f32>
    %4527 = stablehlo.multiply %3888, %3888 : tensor<768x768xf32>
    %cst_586 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4528 = stablehlo.reduce(%4527 init: %cst_586) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4529 = stablehlo.add %4526, %4528 : tensor<f32>
    %4530 = stablehlo.multiply %3849, %3849 : tensor<768xf32>
    %cst_587 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4531 = stablehlo.reduce(%4530 init: %cst_587) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4532 = stablehlo.add %4529, %4531 : tensor<f32>
    %4533 = stablehlo.multiply %3860, %3860 : tensor<768xf32>
    %cst_588 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4534 = stablehlo.reduce(%4533 init: %cst_588) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4535 = stablehlo.add %4532, %4534 : tensor<f32>
    %4536 = stablehlo.multiply %3820, %3820 : tensor<768xf32>
    %cst_589 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4537 = stablehlo.reduce(%4536 init: %cst_589) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4538 = stablehlo.add %4535, %4537 : tensor<f32>
    %4539 = stablehlo.multiply %3822, %3822 : tensor<3072x768xf32>
    %cst_590 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4540 = stablehlo.reduce(%4539 init: %cst_590) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4541 = stablehlo.add %4538, %4540 : tensor<f32>
    %4542 = stablehlo.multiply %3785, %3785 : tensor<768xf32>
    %cst_591 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4543 = stablehlo.reduce(%4542 init: %cst_591) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4544 = stablehlo.add %4541, %4543 : tensor<f32>
    %4545 = stablehlo.multiply %3796, %3796 : tensor<768xf32>
    %cst_592 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4546 = stablehlo.reduce(%4545 init: %cst_592) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4547 = stablehlo.add %4544, %4546 : tensor<f32>
    %4548 = stablehlo.multiply %3842, %3842 : tensor<3072xf32>
    %cst_593 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4549 = stablehlo.reduce(%4548 init: %cst_593) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4550 = stablehlo.add %4547, %4549 : tensor<f32>
    %4551 = stablehlo.multiply %3844, %3844 : tensor<768x3072xf32>
    %cst_594 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4552 = stablehlo.reduce(%4551 init: %cst_594) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4553 = stablehlo.add %4550, %4552 : tensor<f32>
    %4554 = stablehlo.multiply %3766, %3766 : tensor<768xf32>
    %cst_595 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4555 = stablehlo.reduce(%4554 init: %cst_595) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4556 = stablehlo.add %4553, %4555 : tensor<f32>
    %4557 = stablehlo.multiply %3771, %3771 : tensor<768x768xf32>
    %cst_596 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4558 = stablehlo.reduce(%4557 init: %cst_596) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4559 = stablehlo.add %4556, %4558 : tensor<f32>
    %4560 = stablehlo.multiply %3777, %3777 : tensor<768xf32>
    %cst_597 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4561 = stablehlo.reduce(%4560 init: %cst_597) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4562 = stablehlo.add %4559, %4561 : tensor<f32>
    %4563 = stablehlo.multiply %3782, %3782 : tensor<768x768xf32>
    %cst_598 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4564 = stablehlo.reduce(%4563 init: %cst_598) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4565 = stablehlo.add %4562, %4564 : tensor<f32>
    %4566 = stablehlo.multiply %3755, %3755 : tensor<768xf32>
    %cst_599 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4567 = stablehlo.reduce(%4566 init: %cst_599) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4568 = stablehlo.add %4565, %4567 : tensor<f32>
    %4569 = stablehlo.multiply %3760, %3760 : tensor<768x768xf32>
    %cst_600 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4570 = stablehlo.reduce(%4569 init: %cst_600) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4571 = stablehlo.add %4568, %4570 : tensor<f32>
    %4572 = stablehlo.multiply %3723, %3723 : tensor<768xf32>
    %cst_601 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4573 = stablehlo.reduce(%4572 init: %cst_601) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4574 = stablehlo.add %4571, %4573 : tensor<f32>
    %4575 = stablehlo.multiply %3727, %3727 : tensor<768x768xf32>
    %cst_602 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4576 = stablehlo.reduce(%4575 init: %cst_602) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4577 = stablehlo.add %4574, %4576 : tensor<f32>
    %4578 = stablehlo.multiply %3688, %3688 : tensor<768xf32>
    %cst_603 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4579 = stablehlo.reduce(%4578 init: %cst_603) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4580 = stablehlo.add %4577, %4579 : tensor<f32>
    %4581 = stablehlo.multiply %3699, %3699 : tensor<768xf32>
    %cst_604 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4582 = stablehlo.reduce(%4581 init: %cst_604) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4583 = stablehlo.add %4580, %4582 : tensor<f32>
    %4584 = stablehlo.multiply %3659, %3659 : tensor<768xf32>
    %cst_605 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4585 = stablehlo.reduce(%4584 init: %cst_605) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4586 = stablehlo.add %4583, %4585 : tensor<f32>
    %4587 = stablehlo.multiply %3661, %3661 : tensor<3072x768xf32>
    %cst_606 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4588 = stablehlo.reduce(%4587 init: %cst_606) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4589 = stablehlo.add %4586, %4588 : tensor<f32>
    %4590 = stablehlo.multiply %3624, %3624 : tensor<768xf32>
    %cst_607 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4591 = stablehlo.reduce(%4590 init: %cst_607) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4592 = stablehlo.add %4589, %4591 : tensor<f32>
    %4593 = stablehlo.multiply %3635, %3635 : tensor<768xf32>
    %cst_608 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4594 = stablehlo.reduce(%4593 init: %cst_608) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4595 = stablehlo.add %4592, %4594 : tensor<f32>
    %4596 = stablehlo.multiply %3681, %3681 : tensor<3072xf32>
    %cst_609 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4597 = stablehlo.reduce(%4596 init: %cst_609) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4598 = stablehlo.add %4595, %4597 : tensor<f32>
    %4599 = stablehlo.multiply %3683, %3683 : tensor<768x3072xf32>
    %cst_610 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4600 = stablehlo.reduce(%4599 init: %cst_610) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4601 = stablehlo.add %4598, %4600 : tensor<f32>
    %4602 = stablehlo.multiply %3605, %3605 : tensor<768xf32>
    %cst_611 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4603 = stablehlo.reduce(%4602 init: %cst_611) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4604 = stablehlo.add %4601, %4603 : tensor<f32>
    %4605 = stablehlo.multiply %3610, %3610 : tensor<768x768xf32>
    %cst_612 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4606 = stablehlo.reduce(%4605 init: %cst_612) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4607 = stablehlo.add %4604, %4606 : tensor<f32>
    %4608 = stablehlo.multiply %3616, %3616 : tensor<768xf32>
    %cst_613 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4609 = stablehlo.reduce(%4608 init: %cst_613) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4610 = stablehlo.add %4607, %4609 : tensor<f32>
    %4611 = stablehlo.multiply %3621, %3621 : tensor<768x768xf32>
    %cst_614 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4612 = stablehlo.reduce(%4611 init: %cst_614) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4613 = stablehlo.add %4610, %4612 : tensor<f32>
    %4614 = stablehlo.multiply %3594, %3594 : tensor<768xf32>
    %cst_615 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4615 = stablehlo.reduce(%4614 init: %cst_615) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4616 = stablehlo.add %4613, %4615 : tensor<f32>
    %4617 = stablehlo.multiply %3599, %3599 : tensor<768x768xf32>
    %cst_616 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4618 = stablehlo.reduce(%4617 init: %cst_616) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4619 = stablehlo.add %4616, %4618 : tensor<f32>
    %4620 = stablehlo.multiply %3562, %3562 : tensor<768xf32>
    %cst_617 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4621 = stablehlo.reduce(%4620 init: %cst_617) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4622 = stablehlo.add %4619, %4621 : tensor<f32>
    %4623 = stablehlo.multiply %3566, %3566 : tensor<768x768xf32>
    %cst_618 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4624 = stablehlo.reduce(%4623 init: %cst_618) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4625 = stablehlo.add %4622, %4624 : tensor<f32>
    %4626 = stablehlo.multiply %3527, %3527 : tensor<768xf32>
    %cst_619 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4627 = stablehlo.reduce(%4626 init: %cst_619) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4628 = stablehlo.add %4625, %4627 : tensor<f32>
    %4629 = stablehlo.multiply %3538, %3538 : tensor<768xf32>
    %cst_620 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4630 = stablehlo.reduce(%4629 init: %cst_620) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4631 = stablehlo.add %4628, %4630 : tensor<f32>
    %4632 = stablehlo.multiply %3498, %3498 : tensor<768xf32>
    %cst_621 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4633 = stablehlo.reduce(%4632 init: %cst_621) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4634 = stablehlo.add %4631, %4633 : tensor<f32>
    %4635 = stablehlo.multiply %3500, %3500 : tensor<3072x768xf32>
    %cst_622 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4636 = stablehlo.reduce(%4635 init: %cst_622) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4637 = stablehlo.add %4634, %4636 : tensor<f32>
    %4638 = stablehlo.multiply %3463, %3463 : tensor<768xf32>
    %cst_623 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4639 = stablehlo.reduce(%4638 init: %cst_623) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4640 = stablehlo.add %4637, %4639 : tensor<f32>
    %4641 = stablehlo.multiply %3474, %3474 : tensor<768xf32>
    %cst_624 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4642 = stablehlo.reduce(%4641 init: %cst_624) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4643 = stablehlo.add %4640, %4642 : tensor<f32>
    %4644 = stablehlo.multiply %3520, %3520 : tensor<3072xf32>
    %cst_625 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4645 = stablehlo.reduce(%4644 init: %cst_625) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4646 = stablehlo.add %4643, %4645 : tensor<f32>
    %4647 = stablehlo.multiply %3522, %3522 : tensor<768x3072xf32>
    %cst_626 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4648 = stablehlo.reduce(%4647 init: %cst_626) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4649 = stablehlo.add %4646, %4648 : tensor<f32>
    %4650 = stablehlo.multiply %3444, %3444 : tensor<768xf32>
    %cst_627 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4651 = stablehlo.reduce(%4650 init: %cst_627) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4652 = stablehlo.add %4649, %4651 : tensor<f32>
    %4653 = stablehlo.multiply %3449, %3449 : tensor<768x768xf32>
    %cst_628 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4654 = stablehlo.reduce(%4653 init: %cst_628) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4655 = stablehlo.add %4652, %4654 : tensor<f32>
    %4656 = stablehlo.multiply %3455, %3455 : tensor<768xf32>
    %cst_629 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4657 = stablehlo.reduce(%4656 init: %cst_629) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4658 = stablehlo.add %4655, %4657 : tensor<f32>
    %4659 = stablehlo.multiply %3460, %3460 : tensor<768x768xf32>
    %cst_630 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4660 = stablehlo.reduce(%4659 init: %cst_630) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4661 = stablehlo.add %4658, %4660 : tensor<f32>
    %4662 = stablehlo.multiply %3433, %3433 : tensor<768xf32>
    %cst_631 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4663 = stablehlo.reduce(%4662 init: %cst_631) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4664 = stablehlo.add %4661, %4663 : tensor<f32>
    %4665 = stablehlo.multiply %3438, %3438 : tensor<768x768xf32>
    %cst_632 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4666 = stablehlo.reduce(%4665 init: %cst_632) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4667 = stablehlo.add %4664, %4666 : tensor<f32>
    %4668 = stablehlo.multiply %3401, %3401 : tensor<768xf32>
    %cst_633 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4669 = stablehlo.reduce(%4668 init: %cst_633) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4670 = stablehlo.add %4667, %4669 : tensor<f32>
    %4671 = stablehlo.multiply %3405, %3405 : tensor<768x768xf32>
    %cst_634 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4672 = stablehlo.reduce(%4671 init: %cst_634) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4673 = stablehlo.add %4670, %4672 : tensor<f32>
    %4674 = stablehlo.multiply %3366, %3366 : tensor<768xf32>
    %cst_635 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4675 = stablehlo.reduce(%4674 init: %cst_635) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4676 = stablehlo.add %4673, %4675 : tensor<f32>
    %4677 = stablehlo.multiply %3377, %3377 : tensor<768xf32>
    %cst_636 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4678 = stablehlo.reduce(%4677 init: %cst_636) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4679 = stablehlo.add %4676, %4678 : tensor<f32>
    %4680 = stablehlo.multiply %3337, %3337 : tensor<768xf32>
    %cst_637 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4681 = stablehlo.reduce(%4680 init: %cst_637) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4682 = stablehlo.add %4679, %4681 : tensor<f32>
    %4683 = stablehlo.multiply %3339, %3339 : tensor<3072x768xf32>
    %cst_638 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4684 = stablehlo.reduce(%4683 init: %cst_638) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4685 = stablehlo.add %4682, %4684 : tensor<f32>
    %4686 = stablehlo.multiply %3302, %3302 : tensor<768xf32>
    %cst_639 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4687 = stablehlo.reduce(%4686 init: %cst_639) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4688 = stablehlo.add %4685, %4687 : tensor<f32>
    %4689 = stablehlo.multiply %3313, %3313 : tensor<768xf32>
    %cst_640 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4690 = stablehlo.reduce(%4689 init: %cst_640) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4691 = stablehlo.add %4688, %4690 : tensor<f32>
    %4692 = stablehlo.multiply %3359, %3359 : tensor<3072xf32>
    %cst_641 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4693 = stablehlo.reduce(%4692 init: %cst_641) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4694 = stablehlo.add %4691, %4693 : tensor<f32>
    %4695 = stablehlo.multiply %3361, %3361 : tensor<768x3072xf32>
    %cst_642 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4696 = stablehlo.reduce(%4695 init: %cst_642) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4697 = stablehlo.add %4694, %4696 : tensor<f32>
    %4698 = stablehlo.multiply %3283, %3283 : tensor<768xf32>
    %cst_643 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4699 = stablehlo.reduce(%4698 init: %cst_643) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4700 = stablehlo.add %4697, %4699 : tensor<f32>
    %4701 = stablehlo.multiply %3288, %3288 : tensor<768x768xf32>
    %cst_644 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4702 = stablehlo.reduce(%4701 init: %cst_644) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4703 = stablehlo.add %4700, %4702 : tensor<f32>
    %4704 = stablehlo.multiply %3294, %3294 : tensor<768xf32>
    %cst_645 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4705 = stablehlo.reduce(%4704 init: %cst_645) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4706 = stablehlo.add %4703, %4705 : tensor<f32>
    %4707 = stablehlo.multiply %3299, %3299 : tensor<768x768xf32>
    %cst_646 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4708 = stablehlo.reduce(%4707 init: %cst_646) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4709 = stablehlo.add %4706, %4708 : tensor<f32>
    %4710 = stablehlo.multiply %3272, %3272 : tensor<768xf32>
    %cst_647 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4711 = stablehlo.reduce(%4710 init: %cst_647) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4712 = stablehlo.add %4709, %4711 : tensor<f32>
    %4713 = stablehlo.multiply %3277, %3277 : tensor<768x768xf32>
    %cst_648 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4714 = stablehlo.reduce(%4713 init: %cst_648) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4715 = stablehlo.add %4712, %4714 : tensor<f32>
    %4716 = stablehlo.multiply %3240, %3240 : tensor<768xf32>
    %cst_649 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4717 = stablehlo.reduce(%4716 init: %cst_649) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4718 = stablehlo.add %4715, %4717 : tensor<f32>
    %4719 = stablehlo.multiply %3244, %3244 : tensor<768x768xf32>
    %cst_650 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4720 = stablehlo.reduce(%4719 init: %cst_650) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4721 = stablehlo.add %4718, %4720 : tensor<f32>
    %4722 = stablehlo.multiply %3205, %3205 : tensor<768xf32>
    %cst_651 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4723 = stablehlo.reduce(%4722 init: %cst_651) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4724 = stablehlo.add %4721, %4723 : tensor<f32>
    %4725 = stablehlo.multiply %3216, %3216 : tensor<768xf32>
    %cst_652 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4726 = stablehlo.reduce(%4725 init: %cst_652) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4727 = stablehlo.add %4724, %4726 : tensor<f32>
    %4728 = stablehlo.multiply %3176, %3176 : tensor<768xf32>
    %cst_653 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4729 = stablehlo.reduce(%4728 init: %cst_653) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4730 = stablehlo.add %4727, %4729 : tensor<f32>
    %4731 = stablehlo.multiply %3178, %3178 : tensor<3072x768xf32>
    %cst_654 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4732 = stablehlo.reduce(%4731 init: %cst_654) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4733 = stablehlo.add %4730, %4732 : tensor<f32>
    %4734 = stablehlo.multiply %3141, %3141 : tensor<768xf32>
    %cst_655 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4735 = stablehlo.reduce(%4734 init: %cst_655) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4736 = stablehlo.add %4733, %4735 : tensor<f32>
    %4737 = stablehlo.multiply %3152, %3152 : tensor<768xf32>
    %cst_656 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4738 = stablehlo.reduce(%4737 init: %cst_656) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4739 = stablehlo.add %4736, %4738 : tensor<f32>
    %4740 = stablehlo.multiply %3198, %3198 : tensor<3072xf32>
    %cst_657 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4741 = stablehlo.reduce(%4740 init: %cst_657) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4742 = stablehlo.add %4739, %4741 : tensor<f32>
    %4743 = stablehlo.multiply %3200, %3200 : tensor<768x3072xf32>
    %cst_658 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4744 = stablehlo.reduce(%4743 init: %cst_658) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4745 = stablehlo.add %4742, %4744 : tensor<f32>
    %4746 = stablehlo.multiply %3122, %3122 : tensor<768xf32>
    %cst_659 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4747 = stablehlo.reduce(%4746 init: %cst_659) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4748 = stablehlo.add %4745, %4747 : tensor<f32>
    %4749 = stablehlo.multiply %3127, %3127 : tensor<768x768xf32>
    %cst_660 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4750 = stablehlo.reduce(%4749 init: %cst_660) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4751 = stablehlo.add %4748, %4750 : tensor<f32>
    %4752 = stablehlo.multiply %3133, %3133 : tensor<768xf32>
    %cst_661 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4753 = stablehlo.reduce(%4752 init: %cst_661) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4754 = stablehlo.add %4751, %4753 : tensor<f32>
    %4755 = stablehlo.multiply %3138, %3138 : tensor<768x768xf32>
    %cst_662 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4756 = stablehlo.reduce(%4755 init: %cst_662) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4757 = stablehlo.add %4754, %4756 : tensor<f32>
    %4758 = stablehlo.multiply %3111, %3111 : tensor<768xf32>
    %cst_663 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4759 = stablehlo.reduce(%4758 init: %cst_663) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4760 = stablehlo.add %4757, %4759 : tensor<f32>
    %4761 = stablehlo.multiply %3116, %3116 : tensor<768x768xf32>
    %cst_664 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4762 = stablehlo.reduce(%4761 init: %cst_664) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4763 = stablehlo.add %4760, %4762 : tensor<f32>
    %4764 = stablehlo.multiply %3079, %3079 : tensor<768xf32>
    %cst_665 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4765 = stablehlo.reduce(%4764 init: %cst_665) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4766 = stablehlo.add %4763, %4765 : tensor<f32>
    %4767 = stablehlo.multiply %3083, %3083 : tensor<768x768xf32>
    %cst_666 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4768 = stablehlo.reduce(%4767 init: %cst_666) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4769 = stablehlo.add %4766, %4768 : tensor<f32>
    %4770 = stablehlo.multiply %3044, %3044 : tensor<768xf32>
    %cst_667 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4771 = stablehlo.reduce(%4770 init: %cst_667) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4772 = stablehlo.add %4769, %4771 : tensor<f32>
    %4773 = stablehlo.multiply %3055, %3055 : tensor<768xf32>
    %cst_668 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4774 = stablehlo.reduce(%4773 init: %cst_668) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4775 = stablehlo.add %4772, %4774 : tensor<f32>
    %4776 = stablehlo.multiply %3015, %3015 : tensor<768xf32>
    %cst_669 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4777 = stablehlo.reduce(%4776 init: %cst_669) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4778 = stablehlo.add %4775, %4777 : tensor<f32>
    %4779 = stablehlo.multiply %3017, %3017 : tensor<3072x768xf32>
    %cst_670 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4780 = stablehlo.reduce(%4779 init: %cst_670) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4781 = stablehlo.add %4778, %4780 : tensor<f32>
    %4782 = stablehlo.multiply %2980, %2980 : tensor<768xf32>
    %cst_671 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4783 = stablehlo.reduce(%4782 init: %cst_671) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4784 = stablehlo.add %4781, %4783 : tensor<f32>
    %4785 = stablehlo.multiply %2991, %2991 : tensor<768xf32>
    %cst_672 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4786 = stablehlo.reduce(%4785 init: %cst_672) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4787 = stablehlo.add %4784, %4786 : tensor<f32>
    %4788 = stablehlo.multiply %3037, %3037 : tensor<3072xf32>
    %cst_673 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4789 = stablehlo.reduce(%4788 init: %cst_673) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4790 = stablehlo.add %4787, %4789 : tensor<f32>
    %4791 = stablehlo.multiply %3039, %3039 : tensor<768x3072xf32>
    %cst_674 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4792 = stablehlo.reduce(%4791 init: %cst_674) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4793 = stablehlo.add %4790, %4792 : tensor<f32>
    %4794 = stablehlo.multiply %2961, %2961 : tensor<768xf32>
    %cst_675 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4795 = stablehlo.reduce(%4794 init: %cst_675) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4796 = stablehlo.add %4793, %4795 : tensor<f32>
    %4797 = stablehlo.multiply %2966, %2966 : tensor<768x768xf32>
    %cst_676 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4798 = stablehlo.reduce(%4797 init: %cst_676) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4799 = stablehlo.add %4796, %4798 : tensor<f32>
    %4800 = stablehlo.multiply %2972, %2972 : tensor<768xf32>
    %cst_677 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4801 = stablehlo.reduce(%4800 init: %cst_677) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4802 = stablehlo.add %4799, %4801 : tensor<f32>
    %4803 = stablehlo.multiply %2977, %2977 : tensor<768x768xf32>
    %cst_678 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4804 = stablehlo.reduce(%4803 init: %cst_678) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4805 = stablehlo.add %4802, %4804 : tensor<f32>
    %4806 = stablehlo.multiply %2950, %2950 : tensor<768xf32>
    %cst_679 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4807 = stablehlo.reduce(%4806 init: %cst_679) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4808 = stablehlo.add %4805, %4807 : tensor<f32>
    %4809 = stablehlo.multiply %2955, %2955 : tensor<768x768xf32>
    %cst_680 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4810 = stablehlo.reduce(%4809 init: %cst_680) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4811 = stablehlo.add %4808, %4810 : tensor<f32>
    %4812 = stablehlo.multiply %2918, %2918 : tensor<768xf32>
    %cst_681 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4813 = stablehlo.reduce(%4812 init: %cst_681) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4814 = stablehlo.add %4811, %4813 : tensor<f32>
    %4815 = stablehlo.multiply %2922, %2922 : tensor<768x768xf32>
    %cst_682 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4816 = stablehlo.reduce(%4815 init: %cst_682) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4817 = stablehlo.add %4814, %4816 : tensor<f32>
    %4818 = stablehlo.multiply %2883, %2883 : tensor<768xf32>
    %cst_683 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4819 = stablehlo.reduce(%4818 init: %cst_683) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4820 = stablehlo.add %4817, %4819 : tensor<f32>
    %4821 = stablehlo.multiply %2894, %2894 : tensor<768xf32>
    %cst_684 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4822 = stablehlo.reduce(%4821 init: %cst_684) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4823 = stablehlo.add %4820, %4822 : tensor<f32>
    %4824 = stablehlo.multiply %2854, %2854 : tensor<768xf32>
    %cst_685 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4825 = stablehlo.reduce(%4824 init: %cst_685) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4826 = stablehlo.add %4823, %4825 : tensor<f32>
    %4827 = stablehlo.multiply %2856, %2856 : tensor<3072x768xf32>
    %cst_686 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4828 = stablehlo.reduce(%4827 init: %cst_686) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4829 = stablehlo.add %4826, %4828 : tensor<f32>
    %4830 = stablehlo.multiply %2819, %2819 : tensor<768xf32>
    %cst_687 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4831 = stablehlo.reduce(%4830 init: %cst_687) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4832 = stablehlo.add %4829, %4831 : tensor<f32>
    %4833 = stablehlo.multiply %2830, %2830 : tensor<768xf32>
    %cst_688 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4834 = stablehlo.reduce(%4833 init: %cst_688) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4835 = stablehlo.add %4832, %4834 : tensor<f32>
    %4836 = stablehlo.multiply %2876, %2876 : tensor<3072xf32>
    %cst_689 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4837 = stablehlo.reduce(%4836 init: %cst_689) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4838 = stablehlo.add %4835, %4837 : tensor<f32>
    %4839 = stablehlo.multiply %2878, %2878 : tensor<768x3072xf32>
    %cst_690 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4840 = stablehlo.reduce(%4839 init: %cst_690) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4841 = stablehlo.add %4838, %4840 : tensor<f32>
    %4842 = stablehlo.multiply %2800, %2800 : tensor<768xf32>
    %cst_691 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4843 = stablehlo.reduce(%4842 init: %cst_691) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4844 = stablehlo.add %4841, %4843 : tensor<f32>
    %4845 = stablehlo.multiply %2805, %2805 : tensor<768x768xf32>
    %cst_692 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4846 = stablehlo.reduce(%4845 init: %cst_692) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4847 = stablehlo.add %4844, %4846 : tensor<f32>
    %4848 = stablehlo.multiply %2811, %2811 : tensor<768xf32>
    %cst_693 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4849 = stablehlo.reduce(%4848 init: %cst_693) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4850 = stablehlo.add %4847, %4849 : tensor<f32>
    %4851 = stablehlo.multiply %2816, %2816 : tensor<768x768xf32>
    %cst_694 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4852 = stablehlo.reduce(%4851 init: %cst_694) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4853 = stablehlo.add %4850, %4852 : tensor<f32>
    %4854 = stablehlo.multiply %2789, %2789 : tensor<768xf32>
    %cst_695 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4855 = stablehlo.reduce(%4854 init: %cst_695) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4856 = stablehlo.add %4853, %4855 : tensor<f32>
    %4857 = stablehlo.multiply %2794, %2794 : tensor<768x768xf32>
    %cst_696 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4858 = stablehlo.reduce(%4857 init: %cst_696) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4859 = stablehlo.add %4856, %4858 : tensor<f32>
    %4860 = stablehlo.multiply %2757, %2757 : tensor<768xf32>
    %cst_697 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4861 = stablehlo.reduce(%4860 init: %cst_697) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4862 = stablehlo.add %4859, %4861 : tensor<f32>
    %4863 = stablehlo.multiply %2761, %2761 : tensor<768x768xf32>
    %cst_698 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4864 = stablehlo.reduce(%4863 init: %cst_698) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4865 = stablehlo.add %4862, %4864 : tensor<f32>
    %4866 = stablehlo.multiply %2722, %2722 : tensor<768xf32>
    %cst_699 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4867 = stablehlo.reduce(%4866 init: %cst_699) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4868 = stablehlo.add %4865, %4867 : tensor<f32>
    %4869 = stablehlo.multiply %2733, %2733 : tensor<768xf32>
    %cst_700 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4870 = stablehlo.reduce(%4869 init: %cst_700) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4871 = stablehlo.add %4868, %4870 : tensor<f32>
    %4872 = stablehlo.multiply %2693, %2693 : tensor<768xf32>
    %cst_701 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4873 = stablehlo.reduce(%4872 init: %cst_701) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4874 = stablehlo.add %4871, %4873 : tensor<f32>
    %4875 = stablehlo.multiply %2695, %2695 : tensor<3072x768xf32>
    %cst_702 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4876 = stablehlo.reduce(%4875 init: %cst_702) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4877 = stablehlo.add %4874, %4876 : tensor<f32>
    %4878 = stablehlo.multiply %2658, %2658 : tensor<768xf32>
    %cst_703 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4879 = stablehlo.reduce(%4878 init: %cst_703) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4880 = stablehlo.add %4877, %4879 : tensor<f32>
    %4881 = stablehlo.multiply %2669, %2669 : tensor<768xf32>
    %cst_704 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4882 = stablehlo.reduce(%4881 init: %cst_704) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4883 = stablehlo.add %4880, %4882 : tensor<f32>
    %4884 = stablehlo.multiply %2715, %2715 : tensor<3072xf32>
    %cst_705 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4885 = stablehlo.reduce(%4884 init: %cst_705) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4886 = stablehlo.add %4883, %4885 : tensor<f32>
    %4887 = stablehlo.multiply %2717, %2717 : tensor<768x3072xf32>
    %cst_706 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4888 = stablehlo.reduce(%4887 init: %cst_706) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4889 = stablehlo.add %4886, %4888 : tensor<f32>
    %4890 = stablehlo.multiply %4268, %4268 : tensor<768xf32>
    %cst_707 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4891 = stablehlo.reduce(%4890 init: %cst_707) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4892 = stablehlo.add %4889, %4891 : tensor<f32>
    %4893 = stablehlo.multiply %4279, %4279 : tensor<768xf32>
    %cst_708 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4894 = stablehlo.reduce(%4893 init: %cst_708) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4895 = stablehlo.add %4892, %4894 : tensor<f32>
    %4896 = stablehlo.multiply %2274, %2274 : tensor<30522xf32>
    %cst_709 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4897 = stablehlo.reduce(%4896 init: %cst_709) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %4898 = stablehlo.add %4895, %4897 : tensor<f32>
    %4899 = stablehlo.multiply %2330, %2330 : tensor<768xf32>
    %cst_710 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4900 = stablehlo.reduce(%4899 init: %cst_710) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4901 = stablehlo.add %4898, %4900 : tensor<f32>
    %4902 = stablehlo.multiply %2332, %2332 : tensor<768x768xf32>
    %cst_711 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4903 = stablehlo.reduce(%4902 init: %cst_711) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4904 = stablehlo.add %4901, %4903 : tensor<f32>
    %4905 = stablehlo.multiply %2278, %2278 : tensor<30522x768xf32>
    %cst_712 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4906 = stablehlo.reduce(%4905 init: %cst_712) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %4907 = stablehlo.add %4904, %4906 : tensor<f32>
    %4908 = stablehlo.multiply %2281, %2281 : tensor<768xf32>
    %cst_713 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4909 = stablehlo.reduce(%4908 init: %cst_713) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4910 = stablehlo.add %4907, %4909 : tensor<f32>
    %4911 = stablehlo.multiply %2292, %2292 : tensor<768xf32>
    %cst_714 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4912 = stablehlo.reduce(%4911 init: %cst_714) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4913 = stablehlo.add %4910, %4912 : tensor<f32>
    %4914 = stablehlo.sqrt %4913 : tensor<f32>
    %4915 = stablehlo.compare  LT, %4914, %cst_7,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %4916 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4917 = stablehlo.divide %4302, %4916 : tensor<512x768xf32>
    %4918 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4919 = stablehlo.multiply %4917, %4918 : tensor<512x768xf32>
    %4920 = stablehlo.select %4915, %4302, %4919 : tensor<i1>, tensor<512x768xf32>
    %4921 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4922 = stablehlo.divide %4300, %4921 : tensor<2x768xf32>
    %4923 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4924 = stablehlo.multiply %4922, %4923 : tensor<2x768xf32>
    %4925 = stablehlo.select %4915, %4300, %4924 : tensor<i1>, tensor<2x768xf32>
    %4926 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4927 = stablehlo.divide %4304, %4926 : tensor<30522x768xf32>
    %4928 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4929 = stablehlo.multiply %4927, %4928 : tensor<30522x768xf32>
    %4930 = stablehlo.select %4915, %4304, %4929 : tensor<i1>, tensor<30522x768xf32>
    %4931 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4932 = stablehlo.divide %4249, %4931 : tensor<768xf32>
    %4933 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4934 = stablehlo.multiply %4932, %4933 : tensor<768xf32>
    %4935 = stablehlo.select %4915, %4249, %4934 : tensor<i1>, tensor<768xf32>
    %4936 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4937 = stablehlo.divide %4254, %4936 : tensor<768x768xf32>
    %4938 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4939 = stablehlo.multiply %4937, %4938 : tensor<768x768xf32>
    %4940 = stablehlo.select %4915, %4254, %4939 : tensor<i1>, tensor<768x768xf32>
    %4941 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4942 = stablehlo.divide %4260, %4941 : tensor<768xf32>
    %4943 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4944 = stablehlo.multiply %4942, %4943 : tensor<768xf32>
    %4945 = stablehlo.select %4915, %4260, %4944 : tensor<i1>, tensor<768xf32>
    %4946 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4947 = stablehlo.divide %4265, %4946 : tensor<768x768xf32>
    %4948 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4949 = stablehlo.multiply %4947, %4948 : tensor<768x768xf32>
    %4950 = stablehlo.select %4915, %4265, %4949 : tensor<i1>, tensor<768x768xf32>
    %4951 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4952 = stablehlo.divide %4238, %4951 : tensor<768xf32>
    %4953 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4954 = stablehlo.multiply %4952, %4953 : tensor<768xf32>
    %4955 = stablehlo.select %4915, %4238, %4954 : tensor<i1>, tensor<768xf32>
    %4956 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4957 = stablehlo.divide %4243, %4956 : tensor<768x768xf32>
    %4958 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4959 = stablehlo.multiply %4957, %4958 : tensor<768x768xf32>
    %4960 = stablehlo.select %4915, %4243, %4959 : tensor<i1>, tensor<768x768xf32>
    %4961 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4962 = stablehlo.divide %4206, %4961 : tensor<768xf32>
    %4963 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4964 = stablehlo.multiply %4962, %4963 : tensor<768xf32>
    %4965 = stablehlo.select %4915, %4206, %4964 : tensor<i1>, tensor<768xf32>
    %4966 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4967 = stablehlo.divide %4210, %4966 : tensor<768x768xf32>
    %4968 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4969 = stablehlo.multiply %4967, %4968 : tensor<768x768xf32>
    %4970 = stablehlo.select %4915, %4210, %4969 : tensor<i1>, tensor<768x768xf32>
    %4971 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4972 = stablehlo.divide %4171, %4971 : tensor<768xf32>
    %4973 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4974 = stablehlo.multiply %4972, %4973 : tensor<768xf32>
    %4975 = stablehlo.select %4915, %4171, %4974 : tensor<i1>, tensor<768xf32>
    %4976 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4977 = stablehlo.divide %4182, %4976 : tensor<768xf32>
    %4978 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4979 = stablehlo.multiply %4977, %4978 : tensor<768xf32>
    %4980 = stablehlo.select %4915, %4182, %4979 : tensor<i1>, tensor<768xf32>
    %4981 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4982 = stablehlo.divide %4142, %4981 : tensor<768xf32>
    %4983 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4984 = stablehlo.multiply %4982, %4983 : tensor<768xf32>
    %4985 = stablehlo.select %4915, %4142, %4984 : tensor<i1>, tensor<768xf32>
    %4986 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4987 = stablehlo.divide %4144, %4986 : tensor<3072x768xf32>
    %4988 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4989 = stablehlo.multiply %4987, %4988 : tensor<3072x768xf32>
    %4990 = stablehlo.select %4915, %4144, %4989 : tensor<i1>, tensor<3072x768xf32>
    %4991 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4992 = stablehlo.divide %4107, %4991 : tensor<768xf32>
    %4993 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4994 = stablehlo.multiply %4992, %4993 : tensor<768xf32>
    %4995 = stablehlo.select %4915, %4107, %4994 : tensor<i1>, tensor<768xf32>
    %4996 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4997 = stablehlo.divide %4118, %4996 : tensor<768xf32>
    %4998 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4999 = stablehlo.multiply %4997, %4998 : tensor<768xf32>
    %5000 = stablehlo.select %4915, %4118, %4999 : tensor<i1>, tensor<768xf32>
    %5001 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5002 = stablehlo.divide %4164, %5001 : tensor<3072xf32>
    %5003 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5004 = stablehlo.multiply %5002, %5003 : tensor<3072xf32>
    %5005 = stablehlo.select %4915, %4164, %5004 : tensor<i1>, tensor<3072xf32>
    %5006 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5007 = stablehlo.divide %4166, %5006 : tensor<768x3072xf32>
    %5008 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5009 = stablehlo.multiply %5007, %5008 : tensor<768x3072xf32>
    %5010 = stablehlo.select %4915, %4166, %5009 : tensor<i1>, tensor<768x3072xf32>
    %5011 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5012 = stablehlo.divide %4088, %5011 : tensor<768xf32>
    %5013 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5014 = stablehlo.multiply %5012, %5013 : tensor<768xf32>
    %5015 = stablehlo.select %4915, %4088, %5014 : tensor<i1>, tensor<768xf32>
    %5016 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5017 = stablehlo.divide %4093, %5016 : tensor<768x768xf32>
    %5018 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5019 = stablehlo.multiply %5017, %5018 : tensor<768x768xf32>
    %5020 = stablehlo.select %4915, %4093, %5019 : tensor<i1>, tensor<768x768xf32>
    %5021 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5022 = stablehlo.divide %4099, %5021 : tensor<768xf32>
    %5023 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5024 = stablehlo.multiply %5022, %5023 : tensor<768xf32>
    %5025 = stablehlo.select %4915, %4099, %5024 : tensor<i1>, tensor<768xf32>
    %5026 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5027 = stablehlo.divide %4104, %5026 : tensor<768x768xf32>
    %5028 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5029 = stablehlo.multiply %5027, %5028 : tensor<768x768xf32>
    %5030 = stablehlo.select %4915, %4104, %5029 : tensor<i1>, tensor<768x768xf32>
    %5031 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5032 = stablehlo.divide %4077, %5031 : tensor<768xf32>
    %5033 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5034 = stablehlo.multiply %5032, %5033 : tensor<768xf32>
    %5035 = stablehlo.select %4915, %4077, %5034 : tensor<i1>, tensor<768xf32>
    %5036 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5037 = stablehlo.divide %4082, %5036 : tensor<768x768xf32>
    %5038 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5039 = stablehlo.multiply %5037, %5038 : tensor<768x768xf32>
    %5040 = stablehlo.select %4915, %4082, %5039 : tensor<i1>, tensor<768x768xf32>
    %5041 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5042 = stablehlo.divide %4045, %5041 : tensor<768xf32>
    %5043 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5044 = stablehlo.multiply %5042, %5043 : tensor<768xf32>
    %5045 = stablehlo.select %4915, %4045, %5044 : tensor<i1>, tensor<768xf32>
    %5046 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5047 = stablehlo.divide %4049, %5046 : tensor<768x768xf32>
    %5048 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5049 = stablehlo.multiply %5047, %5048 : tensor<768x768xf32>
    %5050 = stablehlo.select %4915, %4049, %5049 : tensor<i1>, tensor<768x768xf32>
    %5051 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5052 = stablehlo.divide %4010, %5051 : tensor<768xf32>
    %5053 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5054 = stablehlo.multiply %5052, %5053 : tensor<768xf32>
    %5055 = stablehlo.select %4915, %4010, %5054 : tensor<i1>, tensor<768xf32>
    %5056 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5057 = stablehlo.divide %4021, %5056 : tensor<768xf32>
    %5058 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5059 = stablehlo.multiply %5057, %5058 : tensor<768xf32>
    %5060 = stablehlo.select %4915, %4021, %5059 : tensor<i1>, tensor<768xf32>
    %5061 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5062 = stablehlo.divide %3981, %5061 : tensor<768xf32>
    %5063 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5064 = stablehlo.multiply %5062, %5063 : tensor<768xf32>
    %5065 = stablehlo.select %4915, %3981, %5064 : tensor<i1>, tensor<768xf32>
    %5066 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5067 = stablehlo.divide %3983, %5066 : tensor<3072x768xf32>
    %5068 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5069 = stablehlo.multiply %5067, %5068 : tensor<3072x768xf32>
    %5070 = stablehlo.select %4915, %3983, %5069 : tensor<i1>, tensor<3072x768xf32>
    %5071 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5072 = stablehlo.divide %3946, %5071 : tensor<768xf32>
    %5073 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5074 = stablehlo.multiply %5072, %5073 : tensor<768xf32>
    %5075 = stablehlo.select %4915, %3946, %5074 : tensor<i1>, tensor<768xf32>
    %5076 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5077 = stablehlo.divide %3957, %5076 : tensor<768xf32>
    %5078 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5079 = stablehlo.multiply %5077, %5078 : tensor<768xf32>
    %5080 = stablehlo.select %4915, %3957, %5079 : tensor<i1>, tensor<768xf32>
    %5081 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5082 = stablehlo.divide %4003, %5081 : tensor<3072xf32>
    %5083 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5084 = stablehlo.multiply %5082, %5083 : tensor<3072xf32>
    %5085 = stablehlo.select %4915, %4003, %5084 : tensor<i1>, tensor<3072xf32>
    %5086 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5087 = stablehlo.divide %4005, %5086 : tensor<768x3072xf32>
    %5088 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5089 = stablehlo.multiply %5087, %5088 : tensor<768x3072xf32>
    %5090 = stablehlo.select %4915, %4005, %5089 : tensor<i1>, tensor<768x3072xf32>
    %5091 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5092 = stablehlo.divide %2639, %5091 : tensor<768xf32>
    %5093 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5094 = stablehlo.multiply %5092, %5093 : tensor<768xf32>
    %5095 = stablehlo.select %4915, %2639, %5094 : tensor<i1>, tensor<768xf32>
    %5096 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5097 = stablehlo.divide %2644, %5096 : tensor<768x768xf32>
    %5098 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5099 = stablehlo.multiply %5097, %5098 : tensor<768x768xf32>
    %5100 = stablehlo.select %4915, %2644, %5099 : tensor<i1>, tensor<768x768xf32>
    %5101 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5102 = stablehlo.divide %2650, %5101 : tensor<768xf32>
    %5103 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5104 = stablehlo.multiply %5102, %5103 : tensor<768xf32>
    %5105 = stablehlo.select %4915, %2650, %5104 : tensor<i1>, tensor<768xf32>
    %5106 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5107 = stablehlo.divide %2655, %5106 : tensor<768x768xf32>
    %5108 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5109 = stablehlo.multiply %5107, %5108 : tensor<768x768xf32>
    %5110 = stablehlo.select %4915, %2655, %5109 : tensor<i1>, tensor<768x768xf32>
    %5111 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5112 = stablehlo.divide %2628, %5111 : tensor<768xf32>
    %5113 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5114 = stablehlo.multiply %5112, %5113 : tensor<768xf32>
    %5115 = stablehlo.select %4915, %2628, %5114 : tensor<i1>, tensor<768xf32>
    %5116 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5117 = stablehlo.divide %2633, %5116 : tensor<768x768xf32>
    %5118 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5119 = stablehlo.multiply %5117, %5118 : tensor<768x768xf32>
    %5120 = stablehlo.select %4915, %2633, %5119 : tensor<i1>, tensor<768x768xf32>
    %5121 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5122 = stablehlo.divide %2596, %5121 : tensor<768xf32>
    %5123 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5124 = stablehlo.multiply %5122, %5123 : tensor<768xf32>
    %5125 = stablehlo.select %4915, %2596, %5124 : tensor<i1>, tensor<768xf32>
    %5126 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5127 = stablehlo.divide %2600, %5126 : tensor<768x768xf32>
    %5128 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5129 = stablehlo.multiply %5127, %5128 : tensor<768x768xf32>
    %5130 = stablehlo.select %4915, %2600, %5129 : tensor<i1>, tensor<768x768xf32>
    %5131 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5132 = stablehlo.divide %2561, %5131 : tensor<768xf32>
    %5133 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5134 = stablehlo.multiply %5132, %5133 : tensor<768xf32>
    %5135 = stablehlo.select %4915, %2561, %5134 : tensor<i1>, tensor<768xf32>
    %5136 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5137 = stablehlo.divide %2572, %5136 : tensor<768xf32>
    %5138 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5139 = stablehlo.multiply %5137, %5138 : tensor<768xf32>
    %5140 = stablehlo.select %4915, %2572, %5139 : tensor<i1>, tensor<768xf32>
    %5141 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5142 = stablehlo.divide %2532, %5141 : tensor<768xf32>
    %5143 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5144 = stablehlo.multiply %5142, %5143 : tensor<768xf32>
    %5145 = stablehlo.select %4915, %2532, %5144 : tensor<i1>, tensor<768xf32>
    %5146 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5147 = stablehlo.divide %2534, %5146 : tensor<3072x768xf32>
    %5148 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5149 = stablehlo.multiply %5147, %5148 : tensor<3072x768xf32>
    %5150 = stablehlo.select %4915, %2534, %5149 : tensor<i1>, tensor<3072x768xf32>
    %5151 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5152 = stablehlo.divide %2497, %5151 : tensor<768xf32>
    %5153 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5154 = stablehlo.multiply %5152, %5153 : tensor<768xf32>
    %5155 = stablehlo.select %4915, %2497, %5154 : tensor<i1>, tensor<768xf32>
    %5156 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5157 = stablehlo.divide %2508, %5156 : tensor<768xf32>
    %5158 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5159 = stablehlo.multiply %5157, %5158 : tensor<768xf32>
    %5160 = stablehlo.select %4915, %2508, %5159 : tensor<i1>, tensor<768xf32>
    %5161 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5162 = stablehlo.divide %2554, %5161 : tensor<3072xf32>
    %5163 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5164 = stablehlo.multiply %5162, %5163 : tensor<3072xf32>
    %5165 = stablehlo.select %4915, %2554, %5164 : tensor<i1>, tensor<3072xf32>
    %5166 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5167 = stablehlo.divide %2556, %5166 : tensor<768x3072xf32>
    %5168 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5169 = stablehlo.multiply %5167, %5168 : tensor<768x3072xf32>
    %5170 = stablehlo.select %4915, %2556, %5169 : tensor<i1>, tensor<768x3072xf32>
    %5171 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5172 = stablehlo.divide %2478, %5171 : tensor<768xf32>
    %5173 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5174 = stablehlo.multiply %5172, %5173 : tensor<768xf32>
    %5175 = stablehlo.select %4915, %2478, %5174 : tensor<i1>, tensor<768xf32>
    %5176 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5177 = stablehlo.divide %2483, %5176 : tensor<768x768xf32>
    %5178 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5179 = stablehlo.multiply %5177, %5178 : tensor<768x768xf32>
    %5180 = stablehlo.select %4915, %2483, %5179 : tensor<i1>, tensor<768x768xf32>
    %5181 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5182 = stablehlo.divide %2489, %5181 : tensor<768xf32>
    %5183 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5184 = stablehlo.multiply %5182, %5183 : tensor<768xf32>
    %5185 = stablehlo.select %4915, %2489, %5184 : tensor<i1>, tensor<768xf32>
    %5186 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5187 = stablehlo.divide %2494, %5186 : tensor<768x768xf32>
    %5188 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5189 = stablehlo.multiply %5187, %5188 : tensor<768x768xf32>
    %5190 = stablehlo.select %4915, %2494, %5189 : tensor<i1>, tensor<768x768xf32>
    %5191 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5192 = stablehlo.divide %2467, %5191 : tensor<768xf32>
    %5193 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5194 = stablehlo.multiply %5192, %5193 : tensor<768xf32>
    %5195 = stablehlo.select %4915, %2467, %5194 : tensor<i1>, tensor<768xf32>
    %5196 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5197 = stablehlo.divide %2472, %5196 : tensor<768x768xf32>
    %5198 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5199 = stablehlo.multiply %5197, %5198 : tensor<768x768xf32>
    %5200 = stablehlo.select %4915, %2472, %5199 : tensor<i1>, tensor<768x768xf32>
    %5201 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5202 = stablehlo.divide %2435, %5201 : tensor<768xf32>
    %5203 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5204 = stablehlo.multiply %5202, %5203 : tensor<768xf32>
    %5205 = stablehlo.select %4915, %2435, %5204 : tensor<i1>, tensor<768xf32>
    %5206 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5207 = stablehlo.divide %2439, %5206 : tensor<768x768xf32>
    %5208 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5209 = stablehlo.multiply %5207, %5208 : tensor<768x768xf32>
    %5210 = stablehlo.select %4915, %2439, %5209 : tensor<i1>, tensor<768x768xf32>
    %5211 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5212 = stablehlo.divide %2400, %5211 : tensor<768xf32>
    %5213 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5214 = stablehlo.multiply %5212, %5213 : tensor<768xf32>
    %5215 = stablehlo.select %4915, %2400, %5214 : tensor<i1>, tensor<768xf32>
    %5216 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5217 = stablehlo.divide %2411, %5216 : tensor<768xf32>
    %5218 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5219 = stablehlo.multiply %5217, %5218 : tensor<768xf32>
    %5220 = stablehlo.select %4915, %2411, %5219 : tensor<i1>, tensor<768xf32>
    %5221 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5222 = stablehlo.divide %2371, %5221 : tensor<768xf32>
    %5223 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5224 = stablehlo.multiply %5222, %5223 : tensor<768xf32>
    %5225 = stablehlo.select %4915, %2371, %5224 : tensor<i1>, tensor<768xf32>
    %5226 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5227 = stablehlo.divide %2373, %5226 : tensor<3072x768xf32>
    %5228 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5229 = stablehlo.multiply %5227, %5228 : tensor<3072x768xf32>
    %5230 = stablehlo.select %4915, %2373, %5229 : tensor<i1>, tensor<3072x768xf32>
    %5231 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5232 = stablehlo.divide %2336, %5231 : tensor<768xf32>
    %5233 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5234 = stablehlo.multiply %5232, %5233 : tensor<768xf32>
    %5235 = stablehlo.select %4915, %2336, %5234 : tensor<i1>, tensor<768xf32>
    %5236 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5237 = stablehlo.divide %2347, %5236 : tensor<768xf32>
    %5238 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5239 = stablehlo.multiply %5237, %5238 : tensor<768xf32>
    %5240 = stablehlo.select %4915, %2347, %5239 : tensor<i1>, tensor<768xf32>
    %5241 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5242 = stablehlo.divide %2393, %5241 : tensor<3072xf32>
    %5243 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5244 = stablehlo.multiply %5242, %5243 : tensor<3072xf32>
    %5245 = stablehlo.select %4915, %2393, %5244 : tensor<i1>, tensor<3072xf32>
    %5246 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5247 = stablehlo.divide %2395, %5246 : tensor<768x3072xf32>
    %5248 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5249 = stablehlo.multiply %5247, %5248 : tensor<768x3072xf32>
    %5250 = stablehlo.select %4915, %2395, %5249 : tensor<i1>, tensor<768x3072xf32>
    %5251 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5252 = stablehlo.divide %3927, %5251 : tensor<768xf32>
    %5253 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5254 = stablehlo.multiply %5252, %5253 : tensor<768xf32>
    %5255 = stablehlo.select %4915, %3927, %5254 : tensor<i1>, tensor<768xf32>
    %5256 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5257 = stablehlo.divide %3932, %5256 : tensor<768x768xf32>
    %5258 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5259 = stablehlo.multiply %5257, %5258 : tensor<768x768xf32>
    %5260 = stablehlo.select %4915, %3932, %5259 : tensor<i1>, tensor<768x768xf32>
    %5261 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5262 = stablehlo.divide %3938, %5261 : tensor<768xf32>
    %5263 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5264 = stablehlo.multiply %5262, %5263 : tensor<768xf32>
    %5265 = stablehlo.select %4915, %3938, %5264 : tensor<i1>, tensor<768xf32>
    %5266 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5267 = stablehlo.divide %3943, %5266 : tensor<768x768xf32>
    %5268 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5269 = stablehlo.multiply %5267, %5268 : tensor<768x768xf32>
    %5270 = stablehlo.select %4915, %3943, %5269 : tensor<i1>, tensor<768x768xf32>
    %5271 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5272 = stablehlo.divide %3916, %5271 : tensor<768xf32>
    %5273 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5274 = stablehlo.multiply %5272, %5273 : tensor<768xf32>
    %5275 = stablehlo.select %4915, %3916, %5274 : tensor<i1>, tensor<768xf32>
    %5276 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5277 = stablehlo.divide %3921, %5276 : tensor<768x768xf32>
    %5278 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5279 = stablehlo.multiply %5277, %5278 : tensor<768x768xf32>
    %5280 = stablehlo.select %4915, %3921, %5279 : tensor<i1>, tensor<768x768xf32>
    %5281 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5282 = stablehlo.divide %3884, %5281 : tensor<768xf32>
    %5283 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5284 = stablehlo.multiply %5282, %5283 : tensor<768xf32>
    %5285 = stablehlo.select %4915, %3884, %5284 : tensor<i1>, tensor<768xf32>
    %5286 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5287 = stablehlo.divide %3888, %5286 : tensor<768x768xf32>
    %5288 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5289 = stablehlo.multiply %5287, %5288 : tensor<768x768xf32>
    %5290 = stablehlo.select %4915, %3888, %5289 : tensor<i1>, tensor<768x768xf32>
    %5291 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5292 = stablehlo.divide %3849, %5291 : tensor<768xf32>
    %5293 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5294 = stablehlo.multiply %5292, %5293 : tensor<768xf32>
    %5295 = stablehlo.select %4915, %3849, %5294 : tensor<i1>, tensor<768xf32>
    %5296 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5297 = stablehlo.divide %3860, %5296 : tensor<768xf32>
    %5298 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5299 = stablehlo.multiply %5297, %5298 : tensor<768xf32>
    %5300 = stablehlo.select %4915, %3860, %5299 : tensor<i1>, tensor<768xf32>
    %5301 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5302 = stablehlo.divide %3820, %5301 : tensor<768xf32>
    %5303 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5304 = stablehlo.multiply %5302, %5303 : tensor<768xf32>
    %5305 = stablehlo.select %4915, %3820, %5304 : tensor<i1>, tensor<768xf32>
    %5306 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5307 = stablehlo.divide %3822, %5306 : tensor<3072x768xf32>
    %5308 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5309 = stablehlo.multiply %5307, %5308 : tensor<3072x768xf32>
    %5310 = stablehlo.select %4915, %3822, %5309 : tensor<i1>, tensor<3072x768xf32>
    %5311 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5312 = stablehlo.divide %3785, %5311 : tensor<768xf32>
    %5313 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5314 = stablehlo.multiply %5312, %5313 : tensor<768xf32>
    %5315 = stablehlo.select %4915, %3785, %5314 : tensor<i1>, tensor<768xf32>
    %5316 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5317 = stablehlo.divide %3796, %5316 : tensor<768xf32>
    %5318 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5319 = stablehlo.multiply %5317, %5318 : tensor<768xf32>
    %5320 = stablehlo.select %4915, %3796, %5319 : tensor<i1>, tensor<768xf32>
    %5321 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5322 = stablehlo.divide %3842, %5321 : tensor<3072xf32>
    %5323 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5324 = stablehlo.multiply %5322, %5323 : tensor<3072xf32>
    %5325 = stablehlo.select %4915, %3842, %5324 : tensor<i1>, tensor<3072xf32>
    %5326 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5327 = stablehlo.divide %3844, %5326 : tensor<768x3072xf32>
    %5328 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5329 = stablehlo.multiply %5327, %5328 : tensor<768x3072xf32>
    %5330 = stablehlo.select %4915, %3844, %5329 : tensor<i1>, tensor<768x3072xf32>
    %5331 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5332 = stablehlo.divide %3766, %5331 : tensor<768xf32>
    %5333 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5334 = stablehlo.multiply %5332, %5333 : tensor<768xf32>
    %5335 = stablehlo.select %4915, %3766, %5334 : tensor<i1>, tensor<768xf32>
    %5336 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5337 = stablehlo.divide %3771, %5336 : tensor<768x768xf32>
    %5338 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5339 = stablehlo.multiply %5337, %5338 : tensor<768x768xf32>
    %5340 = stablehlo.select %4915, %3771, %5339 : tensor<i1>, tensor<768x768xf32>
    %5341 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5342 = stablehlo.divide %3777, %5341 : tensor<768xf32>
    %5343 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5344 = stablehlo.multiply %5342, %5343 : tensor<768xf32>
    %5345 = stablehlo.select %4915, %3777, %5344 : tensor<i1>, tensor<768xf32>
    %5346 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5347 = stablehlo.divide %3782, %5346 : tensor<768x768xf32>
    %5348 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5349 = stablehlo.multiply %5347, %5348 : tensor<768x768xf32>
    %5350 = stablehlo.select %4915, %3782, %5349 : tensor<i1>, tensor<768x768xf32>
    %5351 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5352 = stablehlo.divide %3755, %5351 : tensor<768xf32>
    %5353 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5354 = stablehlo.multiply %5352, %5353 : tensor<768xf32>
    %5355 = stablehlo.select %4915, %3755, %5354 : tensor<i1>, tensor<768xf32>
    %5356 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5357 = stablehlo.divide %3760, %5356 : tensor<768x768xf32>
    %5358 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5359 = stablehlo.multiply %5357, %5358 : tensor<768x768xf32>
    %5360 = stablehlo.select %4915, %3760, %5359 : tensor<i1>, tensor<768x768xf32>
    %5361 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5362 = stablehlo.divide %3723, %5361 : tensor<768xf32>
    %5363 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5364 = stablehlo.multiply %5362, %5363 : tensor<768xf32>
    %5365 = stablehlo.select %4915, %3723, %5364 : tensor<i1>, tensor<768xf32>
    %5366 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5367 = stablehlo.divide %3727, %5366 : tensor<768x768xf32>
    %5368 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5369 = stablehlo.multiply %5367, %5368 : tensor<768x768xf32>
    %5370 = stablehlo.select %4915, %3727, %5369 : tensor<i1>, tensor<768x768xf32>
    %5371 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5372 = stablehlo.divide %3688, %5371 : tensor<768xf32>
    %5373 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5374 = stablehlo.multiply %5372, %5373 : tensor<768xf32>
    %5375 = stablehlo.select %4915, %3688, %5374 : tensor<i1>, tensor<768xf32>
    %5376 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5377 = stablehlo.divide %3699, %5376 : tensor<768xf32>
    %5378 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5379 = stablehlo.multiply %5377, %5378 : tensor<768xf32>
    %5380 = stablehlo.select %4915, %3699, %5379 : tensor<i1>, tensor<768xf32>
    %5381 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5382 = stablehlo.divide %3659, %5381 : tensor<768xf32>
    %5383 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5384 = stablehlo.multiply %5382, %5383 : tensor<768xf32>
    %5385 = stablehlo.select %4915, %3659, %5384 : tensor<i1>, tensor<768xf32>
    %5386 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5387 = stablehlo.divide %3661, %5386 : tensor<3072x768xf32>
    %5388 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5389 = stablehlo.multiply %5387, %5388 : tensor<3072x768xf32>
    %5390 = stablehlo.select %4915, %3661, %5389 : tensor<i1>, tensor<3072x768xf32>
    %5391 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5392 = stablehlo.divide %3624, %5391 : tensor<768xf32>
    %5393 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5394 = stablehlo.multiply %5392, %5393 : tensor<768xf32>
    %5395 = stablehlo.select %4915, %3624, %5394 : tensor<i1>, tensor<768xf32>
    %5396 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5397 = stablehlo.divide %3635, %5396 : tensor<768xf32>
    %5398 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5399 = stablehlo.multiply %5397, %5398 : tensor<768xf32>
    %5400 = stablehlo.select %4915, %3635, %5399 : tensor<i1>, tensor<768xf32>
    %5401 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5402 = stablehlo.divide %3681, %5401 : tensor<3072xf32>
    %5403 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5404 = stablehlo.multiply %5402, %5403 : tensor<3072xf32>
    %5405 = stablehlo.select %4915, %3681, %5404 : tensor<i1>, tensor<3072xf32>
    %5406 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5407 = stablehlo.divide %3683, %5406 : tensor<768x3072xf32>
    %5408 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5409 = stablehlo.multiply %5407, %5408 : tensor<768x3072xf32>
    %5410 = stablehlo.select %4915, %3683, %5409 : tensor<i1>, tensor<768x3072xf32>
    %5411 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5412 = stablehlo.divide %3605, %5411 : tensor<768xf32>
    %5413 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5414 = stablehlo.multiply %5412, %5413 : tensor<768xf32>
    %5415 = stablehlo.select %4915, %3605, %5414 : tensor<i1>, tensor<768xf32>
    %5416 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5417 = stablehlo.divide %3610, %5416 : tensor<768x768xf32>
    %5418 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5419 = stablehlo.multiply %5417, %5418 : tensor<768x768xf32>
    %5420 = stablehlo.select %4915, %3610, %5419 : tensor<i1>, tensor<768x768xf32>
    %5421 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5422 = stablehlo.divide %3616, %5421 : tensor<768xf32>
    %5423 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5424 = stablehlo.multiply %5422, %5423 : tensor<768xf32>
    %5425 = stablehlo.select %4915, %3616, %5424 : tensor<i1>, tensor<768xf32>
    %5426 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5427 = stablehlo.divide %3621, %5426 : tensor<768x768xf32>
    %5428 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5429 = stablehlo.multiply %5427, %5428 : tensor<768x768xf32>
    %5430 = stablehlo.select %4915, %3621, %5429 : tensor<i1>, tensor<768x768xf32>
    %5431 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5432 = stablehlo.divide %3594, %5431 : tensor<768xf32>
    %5433 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5434 = stablehlo.multiply %5432, %5433 : tensor<768xf32>
    %5435 = stablehlo.select %4915, %3594, %5434 : tensor<i1>, tensor<768xf32>
    %5436 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5437 = stablehlo.divide %3599, %5436 : tensor<768x768xf32>
    %5438 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5439 = stablehlo.multiply %5437, %5438 : tensor<768x768xf32>
    %5440 = stablehlo.select %4915, %3599, %5439 : tensor<i1>, tensor<768x768xf32>
    %5441 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5442 = stablehlo.divide %3562, %5441 : tensor<768xf32>
    %5443 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5444 = stablehlo.multiply %5442, %5443 : tensor<768xf32>
    %5445 = stablehlo.select %4915, %3562, %5444 : tensor<i1>, tensor<768xf32>
    %5446 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5447 = stablehlo.divide %3566, %5446 : tensor<768x768xf32>
    %5448 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5449 = stablehlo.multiply %5447, %5448 : tensor<768x768xf32>
    %5450 = stablehlo.select %4915, %3566, %5449 : tensor<i1>, tensor<768x768xf32>
    %5451 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5452 = stablehlo.divide %3527, %5451 : tensor<768xf32>
    %5453 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5454 = stablehlo.multiply %5452, %5453 : tensor<768xf32>
    %5455 = stablehlo.select %4915, %3527, %5454 : tensor<i1>, tensor<768xf32>
    %5456 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5457 = stablehlo.divide %3538, %5456 : tensor<768xf32>
    %5458 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5459 = stablehlo.multiply %5457, %5458 : tensor<768xf32>
    %5460 = stablehlo.select %4915, %3538, %5459 : tensor<i1>, tensor<768xf32>
    %5461 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5462 = stablehlo.divide %3498, %5461 : tensor<768xf32>
    %5463 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5464 = stablehlo.multiply %5462, %5463 : tensor<768xf32>
    %5465 = stablehlo.select %4915, %3498, %5464 : tensor<i1>, tensor<768xf32>
    %5466 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5467 = stablehlo.divide %3500, %5466 : tensor<3072x768xf32>
    %5468 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5469 = stablehlo.multiply %5467, %5468 : tensor<3072x768xf32>
    %5470 = stablehlo.select %4915, %3500, %5469 : tensor<i1>, tensor<3072x768xf32>
    %5471 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5472 = stablehlo.divide %3463, %5471 : tensor<768xf32>
    %5473 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5474 = stablehlo.multiply %5472, %5473 : tensor<768xf32>
    %5475 = stablehlo.select %4915, %3463, %5474 : tensor<i1>, tensor<768xf32>
    %5476 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5477 = stablehlo.divide %3474, %5476 : tensor<768xf32>
    %5478 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5479 = stablehlo.multiply %5477, %5478 : tensor<768xf32>
    %5480 = stablehlo.select %4915, %3474, %5479 : tensor<i1>, tensor<768xf32>
    %5481 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5482 = stablehlo.divide %3520, %5481 : tensor<3072xf32>
    %5483 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5484 = stablehlo.multiply %5482, %5483 : tensor<3072xf32>
    %5485 = stablehlo.select %4915, %3520, %5484 : tensor<i1>, tensor<3072xf32>
    %5486 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5487 = stablehlo.divide %3522, %5486 : tensor<768x3072xf32>
    %5488 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5489 = stablehlo.multiply %5487, %5488 : tensor<768x3072xf32>
    %5490 = stablehlo.select %4915, %3522, %5489 : tensor<i1>, tensor<768x3072xf32>
    %5491 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5492 = stablehlo.divide %3444, %5491 : tensor<768xf32>
    %5493 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5494 = stablehlo.multiply %5492, %5493 : tensor<768xf32>
    %5495 = stablehlo.select %4915, %3444, %5494 : tensor<i1>, tensor<768xf32>
    %5496 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5497 = stablehlo.divide %3449, %5496 : tensor<768x768xf32>
    %5498 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5499 = stablehlo.multiply %5497, %5498 : tensor<768x768xf32>
    %5500 = stablehlo.select %4915, %3449, %5499 : tensor<i1>, tensor<768x768xf32>
    %5501 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5502 = stablehlo.divide %3455, %5501 : tensor<768xf32>
    %5503 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5504 = stablehlo.multiply %5502, %5503 : tensor<768xf32>
    %5505 = stablehlo.select %4915, %3455, %5504 : tensor<i1>, tensor<768xf32>
    %5506 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5507 = stablehlo.divide %3460, %5506 : tensor<768x768xf32>
    %5508 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5509 = stablehlo.multiply %5507, %5508 : tensor<768x768xf32>
    %5510 = stablehlo.select %4915, %3460, %5509 : tensor<i1>, tensor<768x768xf32>
    %5511 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5512 = stablehlo.divide %3433, %5511 : tensor<768xf32>
    %5513 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5514 = stablehlo.multiply %5512, %5513 : tensor<768xf32>
    %5515 = stablehlo.select %4915, %3433, %5514 : tensor<i1>, tensor<768xf32>
    %5516 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5517 = stablehlo.divide %3438, %5516 : tensor<768x768xf32>
    %5518 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5519 = stablehlo.multiply %5517, %5518 : tensor<768x768xf32>
    %5520 = stablehlo.select %4915, %3438, %5519 : tensor<i1>, tensor<768x768xf32>
    %5521 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5522 = stablehlo.divide %3401, %5521 : tensor<768xf32>
    %5523 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5524 = stablehlo.multiply %5522, %5523 : tensor<768xf32>
    %5525 = stablehlo.select %4915, %3401, %5524 : tensor<i1>, tensor<768xf32>
    %5526 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5527 = stablehlo.divide %3405, %5526 : tensor<768x768xf32>
    %5528 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5529 = stablehlo.multiply %5527, %5528 : tensor<768x768xf32>
    %5530 = stablehlo.select %4915, %3405, %5529 : tensor<i1>, tensor<768x768xf32>
    %5531 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5532 = stablehlo.divide %3366, %5531 : tensor<768xf32>
    %5533 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5534 = stablehlo.multiply %5532, %5533 : tensor<768xf32>
    %5535 = stablehlo.select %4915, %3366, %5534 : tensor<i1>, tensor<768xf32>
    %5536 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5537 = stablehlo.divide %3377, %5536 : tensor<768xf32>
    %5538 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5539 = stablehlo.multiply %5537, %5538 : tensor<768xf32>
    %5540 = stablehlo.select %4915, %3377, %5539 : tensor<i1>, tensor<768xf32>
    %5541 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5542 = stablehlo.divide %3337, %5541 : tensor<768xf32>
    %5543 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5544 = stablehlo.multiply %5542, %5543 : tensor<768xf32>
    %5545 = stablehlo.select %4915, %3337, %5544 : tensor<i1>, tensor<768xf32>
    %5546 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5547 = stablehlo.divide %3339, %5546 : tensor<3072x768xf32>
    %5548 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5549 = stablehlo.multiply %5547, %5548 : tensor<3072x768xf32>
    %5550 = stablehlo.select %4915, %3339, %5549 : tensor<i1>, tensor<3072x768xf32>
    %5551 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5552 = stablehlo.divide %3302, %5551 : tensor<768xf32>
    %5553 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5554 = stablehlo.multiply %5552, %5553 : tensor<768xf32>
    %5555 = stablehlo.select %4915, %3302, %5554 : tensor<i1>, tensor<768xf32>
    %5556 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5557 = stablehlo.divide %3313, %5556 : tensor<768xf32>
    %5558 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5559 = stablehlo.multiply %5557, %5558 : tensor<768xf32>
    %5560 = stablehlo.select %4915, %3313, %5559 : tensor<i1>, tensor<768xf32>
    %5561 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5562 = stablehlo.divide %3359, %5561 : tensor<3072xf32>
    %5563 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5564 = stablehlo.multiply %5562, %5563 : tensor<3072xf32>
    %5565 = stablehlo.select %4915, %3359, %5564 : tensor<i1>, tensor<3072xf32>
    %5566 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5567 = stablehlo.divide %3361, %5566 : tensor<768x3072xf32>
    %5568 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5569 = stablehlo.multiply %5567, %5568 : tensor<768x3072xf32>
    %5570 = stablehlo.select %4915, %3361, %5569 : tensor<i1>, tensor<768x3072xf32>
    %5571 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5572 = stablehlo.divide %3283, %5571 : tensor<768xf32>
    %5573 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5574 = stablehlo.multiply %5572, %5573 : tensor<768xf32>
    %5575 = stablehlo.select %4915, %3283, %5574 : tensor<i1>, tensor<768xf32>
    %5576 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5577 = stablehlo.divide %3288, %5576 : tensor<768x768xf32>
    %5578 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5579 = stablehlo.multiply %5577, %5578 : tensor<768x768xf32>
    %5580 = stablehlo.select %4915, %3288, %5579 : tensor<i1>, tensor<768x768xf32>
    %5581 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5582 = stablehlo.divide %3294, %5581 : tensor<768xf32>
    %5583 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5584 = stablehlo.multiply %5582, %5583 : tensor<768xf32>
    %5585 = stablehlo.select %4915, %3294, %5584 : tensor<i1>, tensor<768xf32>
    %5586 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5587 = stablehlo.divide %3299, %5586 : tensor<768x768xf32>
    %5588 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5589 = stablehlo.multiply %5587, %5588 : tensor<768x768xf32>
    %5590 = stablehlo.select %4915, %3299, %5589 : tensor<i1>, tensor<768x768xf32>
    %5591 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5592 = stablehlo.divide %3272, %5591 : tensor<768xf32>
    %5593 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5594 = stablehlo.multiply %5592, %5593 : tensor<768xf32>
    %5595 = stablehlo.select %4915, %3272, %5594 : tensor<i1>, tensor<768xf32>
    %5596 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5597 = stablehlo.divide %3277, %5596 : tensor<768x768xf32>
    %5598 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5599 = stablehlo.multiply %5597, %5598 : tensor<768x768xf32>
    %5600 = stablehlo.select %4915, %3277, %5599 : tensor<i1>, tensor<768x768xf32>
    %5601 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5602 = stablehlo.divide %3240, %5601 : tensor<768xf32>
    %5603 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5604 = stablehlo.multiply %5602, %5603 : tensor<768xf32>
    %5605 = stablehlo.select %4915, %3240, %5604 : tensor<i1>, tensor<768xf32>
    %5606 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5607 = stablehlo.divide %3244, %5606 : tensor<768x768xf32>
    %5608 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5609 = stablehlo.multiply %5607, %5608 : tensor<768x768xf32>
    %5610 = stablehlo.select %4915, %3244, %5609 : tensor<i1>, tensor<768x768xf32>
    %5611 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5612 = stablehlo.divide %3205, %5611 : tensor<768xf32>
    %5613 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5614 = stablehlo.multiply %5612, %5613 : tensor<768xf32>
    %5615 = stablehlo.select %4915, %3205, %5614 : tensor<i1>, tensor<768xf32>
    %5616 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5617 = stablehlo.divide %3216, %5616 : tensor<768xf32>
    %5618 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5619 = stablehlo.multiply %5617, %5618 : tensor<768xf32>
    %5620 = stablehlo.select %4915, %3216, %5619 : tensor<i1>, tensor<768xf32>
    %5621 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5622 = stablehlo.divide %3176, %5621 : tensor<768xf32>
    %5623 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5624 = stablehlo.multiply %5622, %5623 : tensor<768xf32>
    %5625 = stablehlo.select %4915, %3176, %5624 : tensor<i1>, tensor<768xf32>
    %5626 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5627 = stablehlo.divide %3178, %5626 : tensor<3072x768xf32>
    %5628 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5629 = stablehlo.multiply %5627, %5628 : tensor<3072x768xf32>
    %5630 = stablehlo.select %4915, %3178, %5629 : tensor<i1>, tensor<3072x768xf32>
    %5631 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5632 = stablehlo.divide %3141, %5631 : tensor<768xf32>
    %5633 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5634 = stablehlo.multiply %5632, %5633 : tensor<768xf32>
    %5635 = stablehlo.select %4915, %3141, %5634 : tensor<i1>, tensor<768xf32>
    %5636 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5637 = stablehlo.divide %3152, %5636 : tensor<768xf32>
    %5638 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5639 = stablehlo.multiply %5637, %5638 : tensor<768xf32>
    %5640 = stablehlo.select %4915, %3152, %5639 : tensor<i1>, tensor<768xf32>
    %5641 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5642 = stablehlo.divide %3198, %5641 : tensor<3072xf32>
    %5643 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5644 = stablehlo.multiply %5642, %5643 : tensor<3072xf32>
    %5645 = stablehlo.select %4915, %3198, %5644 : tensor<i1>, tensor<3072xf32>
    %5646 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5647 = stablehlo.divide %3200, %5646 : tensor<768x3072xf32>
    %5648 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5649 = stablehlo.multiply %5647, %5648 : tensor<768x3072xf32>
    %5650 = stablehlo.select %4915, %3200, %5649 : tensor<i1>, tensor<768x3072xf32>
    %5651 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5652 = stablehlo.divide %3122, %5651 : tensor<768xf32>
    %5653 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5654 = stablehlo.multiply %5652, %5653 : tensor<768xf32>
    %5655 = stablehlo.select %4915, %3122, %5654 : tensor<i1>, tensor<768xf32>
    %5656 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5657 = stablehlo.divide %3127, %5656 : tensor<768x768xf32>
    %5658 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5659 = stablehlo.multiply %5657, %5658 : tensor<768x768xf32>
    %5660 = stablehlo.select %4915, %3127, %5659 : tensor<i1>, tensor<768x768xf32>
    %5661 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5662 = stablehlo.divide %3133, %5661 : tensor<768xf32>
    %5663 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5664 = stablehlo.multiply %5662, %5663 : tensor<768xf32>
    %5665 = stablehlo.select %4915, %3133, %5664 : tensor<i1>, tensor<768xf32>
    %5666 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5667 = stablehlo.divide %3138, %5666 : tensor<768x768xf32>
    %5668 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5669 = stablehlo.multiply %5667, %5668 : tensor<768x768xf32>
    %5670 = stablehlo.select %4915, %3138, %5669 : tensor<i1>, tensor<768x768xf32>
    %5671 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5672 = stablehlo.divide %3111, %5671 : tensor<768xf32>
    %5673 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5674 = stablehlo.multiply %5672, %5673 : tensor<768xf32>
    %5675 = stablehlo.select %4915, %3111, %5674 : tensor<i1>, tensor<768xf32>
    %5676 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5677 = stablehlo.divide %3116, %5676 : tensor<768x768xf32>
    %5678 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5679 = stablehlo.multiply %5677, %5678 : tensor<768x768xf32>
    %5680 = stablehlo.select %4915, %3116, %5679 : tensor<i1>, tensor<768x768xf32>
    %5681 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5682 = stablehlo.divide %3079, %5681 : tensor<768xf32>
    %5683 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5684 = stablehlo.multiply %5682, %5683 : tensor<768xf32>
    %5685 = stablehlo.select %4915, %3079, %5684 : tensor<i1>, tensor<768xf32>
    %5686 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5687 = stablehlo.divide %3083, %5686 : tensor<768x768xf32>
    %5688 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5689 = stablehlo.multiply %5687, %5688 : tensor<768x768xf32>
    %5690 = stablehlo.select %4915, %3083, %5689 : tensor<i1>, tensor<768x768xf32>
    %5691 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5692 = stablehlo.divide %3044, %5691 : tensor<768xf32>
    %5693 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5694 = stablehlo.multiply %5692, %5693 : tensor<768xf32>
    %5695 = stablehlo.select %4915, %3044, %5694 : tensor<i1>, tensor<768xf32>
    %5696 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5697 = stablehlo.divide %3055, %5696 : tensor<768xf32>
    %5698 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5699 = stablehlo.multiply %5697, %5698 : tensor<768xf32>
    %5700 = stablehlo.select %4915, %3055, %5699 : tensor<i1>, tensor<768xf32>
    %5701 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5702 = stablehlo.divide %3015, %5701 : tensor<768xf32>
    %5703 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5704 = stablehlo.multiply %5702, %5703 : tensor<768xf32>
    %5705 = stablehlo.select %4915, %3015, %5704 : tensor<i1>, tensor<768xf32>
    %5706 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5707 = stablehlo.divide %3017, %5706 : tensor<3072x768xf32>
    %5708 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5709 = stablehlo.multiply %5707, %5708 : tensor<3072x768xf32>
    %5710 = stablehlo.select %4915, %3017, %5709 : tensor<i1>, tensor<3072x768xf32>
    %5711 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5712 = stablehlo.divide %2980, %5711 : tensor<768xf32>
    %5713 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5714 = stablehlo.multiply %5712, %5713 : tensor<768xf32>
    %5715 = stablehlo.select %4915, %2980, %5714 : tensor<i1>, tensor<768xf32>
    %5716 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5717 = stablehlo.divide %2991, %5716 : tensor<768xf32>
    %5718 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5719 = stablehlo.multiply %5717, %5718 : tensor<768xf32>
    %5720 = stablehlo.select %4915, %2991, %5719 : tensor<i1>, tensor<768xf32>
    %5721 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5722 = stablehlo.divide %3037, %5721 : tensor<3072xf32>
    %5723 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5724 = stablehlo.multiply %5722, %5723 : tensor<3072xf32>
    %5725 = stablehlo.select %4915, %3037, %5724 : tensor<i1>, tensor<3072xf32>
    %5726 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5727 = stablehlo.divide %3039, %5726 : tensor<768x3072xf32>
    %5728 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5729 = stablehlo.multiply %5727, %5728 : tensor<768x3072xf32>
    %5730 = stablehlo.select %4915, %3039, %5729 : tensor<i1>, tensor<768x3072xf32>
    %5731 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5732 = stablehlo.divide %2961, %5731 : tensor<768xf32>
    %5733 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5734 = stablehlo.multiply %5732, %5733 : tensor<768xf32>
    %5735 = stablehlo.select %4915, %2961, %5734 : tensor<i1>, tensor<768xf32>
    %5736 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5737 = stablehlo.divide %2966, %5736 : tensor<768x768xf32>
    %5738 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5739 = stablehlo.multiply %5737, %5738 : tensor<768x768xf32>
    %5740 = stablehlo.select %4915, %2966, %5739 : tensor<i1>, tensor<768x768xf32>
    %5741 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5742 = stablehlo.divide %2972, %5741 : tensor<768xf32>
    %5743 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5744 = stablehlo.multiply %5742, %5743 : tensor<768xf32>
    %5745 = stablehlo.select %4915, %2972, %5744 : tensor<i1>, tensor<768xf32>
    %5746 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5747 = stablehlo.divide %2977, %5746 : tensor<768x768xf32>
    %5748 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5749 = stablehlo.multiply %5747, %5748 : tensor<768x768xf32>
    %5750 = stablehlo.select %4915, %2977, %5749 : tensor<i1>, tensor<768x768xf32>
    %5751 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5752 = stablehlo.divide %2950, %5751 : tensor<768xf32>
    %5753 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5754 = stablehlo.multiply %5752, %5753 : tensor<768xf32>
    %5755 = stablehlo.select %4915, %2950, %5754 : tensor<i1>, tensor<768xf32>
    %5756 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5757 = stablehlo.divide %2955, %5756 : tensor<768x768xf32>
    %5758 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5759 = stablehlo.multiply %5757, %5758 : tensor<768x768xf32>
    %5760 = stablehlo.select %4915, %2955, %5759 : tensor<i1>, tensor<768x768xf32>
    %5761 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5762 = stablehlo.divide %2918, %5761 : tensor<768xf32>
    %5763 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5764 = stablehlo.multiply %5762, %5763 : tensor<768xf32>
    %5765 = stablehlo.select %4915, %2918, %5764 : tensor<i1>, tensor<768xf32>
    %5766 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5767 = stablehlo.divide %2922, %5766 : tensor<768x768xf32>
    %5768 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5769 = stablehlo.multiply %5767, %5768 : tensor<768x768xf32>
    %5770 = stablehlo.select %4915, %2922, %5769 : tensor<i1>, tensor<768x768xf32>
    %5771 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5772 = stablehlo.divide %2883, %5771 : tensor<768xf32>
    %5773 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5774 = stablehlo.multiply %5772, %5773 : tensor<768xf32>
    %5775 = stablehlo.select %4915, %2883, %5774 : tensor<i1>, tensor<768xf32>
    %5776 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5777 = stablehlo.divide %2894, %5776 : tensor<768xf32>
    %5778 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5779 = stablehlo.multiply %5777, %5778 : tensor<768xf32>
    %5780 = stablehlo.select %4915, %2894, %5779 : tensor<i1>, tensor<768xf32>
    %5781 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5782 = stablehlo.divide %2854, %5781 : tensor<768xf32>
    %5783 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5784 = stablehlo.multiply %5782, %5783 : tensor<768xf32>
    %5785 = stablehlo.select %4915, %2854, %5784 : tensor<i1>, tensor<768xf32>
    %5786 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5787 = stablehlo.divide %2856, %5786 : tensor<3072x768xf32>
    %5788 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5789 = stablehlo.multiply %5787, %5788 : tensor<3072x768xf32>
    %5790 = stablehlo.select %4915, %2856, %5789 : tensor<i1>, tensor<3072x768xf32>
    %5791 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5792 = stablehlo.divide %2819, %5791 : tensor<768xf32>
    %5793 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5794 = stablehlo.multiply %5792, %5793 : tensor<768xf32>
    %5795 = stablehlo.select %4915, %2819, %5794 : tensor<i1>, tensor<768xf32>
    %5796 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5797 = stablehlo.divide %2830, %5796 : tensor<768xf32>
    %5798 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5799 = stablehlo.multiply %5797, %5798 : tensor<768xf32>
    %5800 = stablehlo.select %4915, %2830, %5799 : tensor<i1>, tensor<768xf32>
    %5801 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5802 = stablehlo.divide %2876, %5801 : tensor<3072xf32>
    %5803 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5804 = stablehlo.multiply %5802, %5803 : tensor<3072xf32>
    %5805 = stablehlo.select %4915, %2876, %5804 : tensor<i1>, tensor<3072xf32>
    %5806 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5807 = stablehlo.divide %2878, %5806 : tensor<768x3072xf32>
    %5808 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5809 = stablehlo.multiply %5807, %5808 : tensor<768x3072xf32>
    %5810 = stablehlo.select %4915, %2878, %5809 : tensor<i1>, tensor<768x3072xf32>
    %5811 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5812 = stablehlo.divide %2800, %5811 : tensor<768xf32>
    %5813 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5814 = stablehlo.multiply %5812, %5813 : tensor<768xf32>
    %5815 = stablehlo.select %4915, %2800, %5814 : tensor<i1>, tensor<768xf32>
    %5816 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5817 = stablehlo.divide %2805, %5816 : tensor<768x768xf32>
    %5818 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5819 = stablehlo.multiply %5817, %5818 : tensor<768x768xf32>
    %5820 = stablehlo.select %4915, %2805, %5819 : tensor<i1>, tensor<768x768xf32>
    %5821 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5822 = stablehlo.divide %2811, %5821 : tensor<768xf32>
    %5823 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5824 = stablehlo.multiply %5822, %5823 : tensor<768xf32>
    %5825 = stablehlo.select %4915, %2811, %5824 : tensor<i1>, tensor<768xf32>
    %5826 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5827 = stablehlo.divide %2816, %5826 : tensor<768x768xf32>
    %5828 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5829 = stablehlo.multiply %5827, %5828 : tensor<768x768xf32>
    %5830 = stablehlo.select %4915, %2816, %5829 : tensor<i1>, tensor<768x768xf32>
    %5831 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5832 = stablehlo.divide %2789, %5831 : tensor<768xf32>
    %5833 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5834 = stablehlo.multiply %5832, %5833 : tensor<768xf32>
    %5835 = stablehlo.select %4915, %2789, %5834 : tensor<i1>, tensor<768xf32>
    %5836 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5837 = stablehlo.divide %2794, %5836 : tensor<768x768xf32>
    %5838 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5839 = stablehlo.multiply %5837, %5838 : tensor<768x768xf32>
    %5840 = stablehlo.select %4915, %2794, %5839 : tensor<i1>, tensor<768x768xf32>
    %5841 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5842 = stablehlo.divide %2757, %5841 : tensor<768xf32>
    %5843 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5844 = stablehlo.multiply %5842, %5843 : tensor<768xf32>
    %5845 = stablehlo.select %4915, %2757, %5844 : tensor<i1>, tensor<768xf32>
    %5846 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5847 = stablehlo.divide %2761, %5846 : tensor<768x768xf32>
    %5848 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5849 = stablehlo.multiply %5847, %5848 : tensor<768x768xf32>
    %5850 = stablehlo.select %4915, %2761, %5849 : tensor<i1>, tensor<768x768xf32>
    %5851 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5852 = stablehlo.divide %2722, %5851 : tensor<768xf32>
    %5853 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5854 = stablehlo.multiply %5852, %5853 : tensor<768xf32>
    %5855 = stablehlo.select %4915, %2722, %5854 : tensor<i1>, tensor<768xf32>
    %5856 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5857 = stablehlo.divide %2733, %5856 : tensor<768xf32>
    %5858 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5859 = stablehlo.multiply %5857, %5858 : tensor<768xf32>
    %5860 = stablehlo.select %4915, %2733, %5859 : tensor<i1>, tensor<768xf32>
    %5861 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5862 = stablehlo.divide %2693, %5861 : tensor<768xf32>
    %5863 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5864 = stablehlo.multiply %5862, %5863 : tensor<768xf32>
    %5865 = stablehlo.select %4915, %2693, %5864 : tensor<i1>, tensor<768xf32>
    %5866 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5867 = stablehlo.divide %2695, %5866 : tensor<3072x768xf32>
    %5868 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5869 = stablehlo.multiply %5867, %5868 : tensor<3072x768xf32>
    %5870 = stablehlo.select %4915, %2695, %5869 : tensor<i1>, tensor<3072x768xf32>
    %5871 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5872 = stablehlo.divide %2658, %5871 : tensor<768xf32>
    %5873 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5874 = stablehlo.multiply %5872, %5873 : tensor<768xf32>
    %5875 = stablehlo.select %4915, %2658, %5874 : tensor<i1>, tensor<768xf32>
    %5876 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5877 = stablehlo.divide %2669, %5876 : tensor<768xf32>
    %5878 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5879 = stablehlo.multiply %5877, %5878 : tensor<768xf32>
    %5880 = stablehlo.select %4915, %2669, %5879 : tensor<i1>, tensor<768xf32>
    %5881 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5882 = stablehlo.divide %2715, %5881 : tensor<3072xf32>
    %5883 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5884 = stablehlo.multiply %5882, %5883 : tensor<3072xf32>
    %5885 = stablehlo.select %4915, %2715, %5884 : tensor<i1>, tensor<3072xf32>
    %5886 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5887 = stablehlo.divide %2717, %5886 : tensor<768x3072xf32>
    %5888 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5889 = stablehlo.multiply %5887, %5888 : tensor<768x3072xf32>
    %5890 = stablehlo.select %4915, %2717, %5889 : tensor<i1>, tensor<768x3072xf32>
    %5891 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5892 = stablehlo.divide %4268, %5891 : tensor<768xf32>
    %5893 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5894 = stablehlo.multiply %5892, %5893 : tensor<768xf32>
    %5895 = stablehlo.select %4915, %4268, %5894 : tensor<i1>, tensor<768xf32>
    %5896 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5897 = stablehlo.divide %4279, %5896 : tensor<768xf32>
    %5898 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5899 = stablehlo.multiply %5897, %5898 : tensor<768xf32>
    %5900 = stablehlo.select %4915, %4279, %5899 : tensor<i1>, tensor<768xf32>
    %5901 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5902 = stablehlo.divide %2274, %5901 : tensor<30522xf32>
    %5903 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5904 = stablehlo.multiply %5902, %5903 : tensor<30522xf32>
    %5905 = stablehlo.select %4915, %2274, %5904 : tensor<i1>, tensor<30522xf32>
    %5906 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5907 = stablehlo.divide %2330, %5906 : tensor<768xf32>
    %5908 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5909 = stablehlo.multiply %5907, %5908 : tensor<768xf32>
    %5910 = stablehlo.select %4915, %2330, %5909 : tensor<i1>, tensor<768xf32>
    %5911 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5912 = stablehlo.divide %2332, %5911 : tensor<768x768xf32>
    %5913 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5914 = stablehlo.multiply %5912, %5913 : tensor<768x768xf32>
    %5915 = stablehlo.select %4915, %2332, %5914 : tensor<i1>, tensor<768x768xf32>
    %5916 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5917 = stablehlo.divide %2278, %5916 : tensor<30522x768xf32>
    %5918 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5919 = stablehlo.multiply %5917, %5918 : tensor<30522x768xf32>
    %5920 = stablehlo.select %4915, %2278, %5919 : tensor<i1>, tensor<30522x768xf32>
    %5921 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5922 = stablehlo.divide %2281, %5921 : tensor<768xf32>
    %5923 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5924 = stablehlo.multiply %5922, %5923 : tensor<768xf32>
    %5925 = stablehlo.select %4915, %2281, %5924 : tensor<i1>, tensor<768xf32>
    %5926 = stablehlo.broadcast_in_dim %4914, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5927 = stablehlo.divide %2292, %5926 : tensor<768xf32>
    %5928 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5929 = stablehlo.multiply %5927, %5928 : tensor<768xf32>
    %5930 = stablehlo.select %4915, %2292, %5929 : tensor<i1>, tensor<768xf32>
    %cst_715 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %5931 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5932 = stablehlo.multiply %5931, %4920 : tensor<512x768xf32>
    %cst_716 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %5933 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5934 = stablehlo.multiply %5933, %arg204 : tensor<512x768xf32>
    %5935 = stablehlo.add %5932, %5934 : tensor<512x768xf32>
    %5936 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5937 = stablehlo.multiply %5936, %4925 : tensor<2x768xf32>
    %5938 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5939 = stablehlo.multiply %5938, %arg205 : tensor<2x768xf32>
    %5940 = stablehlo.add %5937, %5939 : tensor<2x768xf32>
    %5941 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5942 = stablehlo.multiply %5941, %4930 : tensor<30522x768xf32>
    %5943 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5944 = stablehlo.multiply %5943, %arg206 : tensor<30522x768xf32>
    %5945 = stablehlo.add %5942, %5944 : tensor<30522x768xf32>
    %5946 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5947 = stablehlo.multiply %5946, %4935 : tensor<768xf32>
    %5948 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5949 = stablehlo.multiply %5948, %arg207 : tensor<768xf32>
    %5950 = stablehlo.add %5947, %5949 : tensor<768xf32>
    %5951 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5952 = stablehlo.multiply %5951, %4940 : tensor<768x768xf32>
    %5953 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5954 = stablehlo.multiply %5953, %arg208 : tensor<768x768xf32>
    %5955 = stablehlo.add %5952, %5954 : tensor<768x768xf32>
    %5956 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5957 = stablehlo.multiply %5956, %4945 : tensor<768xf32>
    %5958 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5959 = stablehlo.multiply %5958, %arg209 : tensor<768xf32>
    %5960 = stablehlo.add %5957, %5959 : tensor<768xf32>
    %5961 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5962 = stablehlo.multiply %5961, %4950 : tensor<768x768xf32>
    %5963 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5964 = stablehlo.multiply %5963, %arg210 : tensor<768x768xf32>
    %5965 = stablehlo.add %5962, %5964 : tensor<768x768xf32>
    %5966 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5967 = stablehlo.multiply %5966, %4955 : tensor<768xf32>
    %5968 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5969 = stablehlo.multiply %5968, %arg211 : tensor<768xf32>
    %5970 = stablehlo.add %5967, %5969 : tensor<768xf32>
    %5971 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5972 = stablehlo.multiply %5971, %4960 : tensor<768x768xf32>
    %5973 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5974 = stablehlo.multiply %5973, %arg212 : tensor<768x768xf32>
    %5975 = stablehlo.add %5972, %5974 : tensor<768x768xf32>
    %5976 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5977 = stablehlo.multiply %5976, %4965 : tensor<768xf32>
    %5978 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5979 = stablehlo.multiply %5978, %arg213 : tensor<768xf32>
    %5980 = stablehlo.add %5977, %5979 : tensor<768xf32>
    %5981 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5982 = stablehlo.multiply %5981, %4970 : tensor<768x768xf32>
    %5983 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5984 = stablehlo.multiply %5983, %arg214 : tensor<768x768xf32>
    %5985 = stablehlo.add %5982, %5984 : tensor<768x768xf32>
    %5986 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5987 = stablehlo.multiply %5986, %4975 : tensor<768xf32>
    %5988 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5989 = stablehlo.multiply %5988, %arg215 : tensor<768xf32>
    %5990 = stablehlo.add %5987, %5989 : tensor<768xf32>
    %5991 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5992 = stablehlo.multiply %5991, %4980 : tensor<768xf32>
    %5993 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5994 = stablehlo.multiply %5993, %arg216 : tensor<768xf32>
    %5995 = stablehlo.add %5992, %5994 : tensor<768xf32>
    %5996 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5997 = stablehlo.multiply %5996, %4985 : tensor<768xf32>
    %5998 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5999 = stablehlo.multiply %5998, %arg217 : tensor<768xf32>
    %6000 = stablehlo.add %5997, %5999 : tensor<768xf32>
    %6001 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6002 = stablehlo.multiply %6001, %4990 : tensor<3072x768xf32>
    %6003 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6004 = stablehlo.multiply %6003, %arg218 : tensor<3072x768xf32>
    %6005 = stablehlo.add %6002, %6004 : tensor<3072x768xf32>
    %6006 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6007 = stablehlo.multiply %6006, %4995 : tensor<768xf32>
    %6008 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6009 = stablehlo.multiply %6008, %arg219 : tensor<768xf32>
    %6010 = stablehlo.add %6007, %6009 : tensor<768xf32>
    %6011 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6012 = stablehlo.multiply %6011, %5000 : tensor<768xf32>
    %6013 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6014 = stablehlo.multiply %6013, %arg220 : tensor<768xf32>
    %6015 = stablehlo.add %6012, %6014 : tensor<768xf32>
    %6016 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6017 = stablehlo.multiply %6016, %5005 : tensor<3072xf32>
    %6018 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6019 = stablehlo.multiply %6018, %arg221 : tensor<3072xf32>
    %6020 = stablehlo.add %6017, %6019 : tensor<3072xf32>
    %6021 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6022 = stablehlo.multiply %6021, %5010 : tensor<768x3072xf32>
    %6023 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6024 = stablehlo.multiply %6023, %arg222 : tensor<768x3072xf32>
    %6025 = stablehlo.add %6022, %6024 : tensor<768x3072xf32>
    %6026 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6027 = stablehlo.multiply %6026, %5015 : tensor<768xf32>
    %6028 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6029 = stablehlo.multiply %6028, %arg223 : tensor<768xf32>
    %6030 = stablehlo.add %6027, %6029 : tensor<768xf32>
    %6031 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6032 = stablehlo.multiply %6031, %5020 : tensor<768x768xf32>
    %6033 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6034 = stablehlo.multiply %6033, %arg224 : tensor<768x768xf32>
    %6035 = stablehlo.add %6032, %6034 : tensor<768x768xf32>
    %6036 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6037 = stablehlo.multiply %6036, %5025 : tensor<768xf32>
    %6038 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6039 = stablehlo.multiply %6038, %arg225 : tensor<768xf32>
    %6040 = stablehlo.add %6037, %6039 : tensor<768xf32>
    %6041 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6042 = stablehlo.multiply %6041, %5030 : tensor<768x768xf32>
    %6043 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6044 = stablehlo.multiply %6043, %arg226 : tensor<768x768xf32>
    %6045 = stablehlo.add %6042, %6044 : tensor<768x768xf32>
    %6046 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6047 = stablehlo.multiply %6046, %5035 : tensor<768xf32>
    %6048 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6049 = stablehlo.multiply %6048, %arg227 : tensor<768xf32>
    %6050 = stablehlo.add %6047, %6049 : tensor<768xf32>
    %6051 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6052 = stablehlo.multiply %6051, %5040 : tensor<768x768xf32>
    %6053 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6054 = stablehlo.multiply %6053, %arg228 : tensor<768x768xf32>
    %6055 = stablehlo.add %6052, %6054 : tensor<768x768xf32>
    %6056 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6057 = stablehlo.multiply %6056, %5045 : tensor<768xf32>
    %6058 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6059 = stablehlo.multiply %6058, %arg229 : tensor<768xf32>
    %6060 = stablehlo.add %6057, %6059 : tensor<768xf32>
    %6061 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6062 = stablehlo.multiply %6061, %5050 : tensor<768x768xf32>
    %6063 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6064 = stablehlo.multiply %6063, %arg230 : tensor<768x768xf32>
    %6065 = stablehlo.add %6062, %6064 : tensor<768x768xf32>
    %6066 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6067 = stablehlo.multiply %6066, %5055 : tensor<768xf32>
    %6068 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6069 = stablehlo.multiply %6068, %arg231 : tensor<768xf32>
    %6070 = stablehlo.add %6067, %6069 : tensor<768xf32>
    %6071 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6072 = stablehlo.multiply %6071, %5060 : tensor<768xf32>
    %6073 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6074 = stablehlo.multiply %6073, %arg232 : tensor<768xf32>
    %6075 = stablehlo.add %6072, %6074 : tensor<768xf32>
    %6076 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6077 = stablehlo.multiply %6076, %5065 : tensor<768xf32>
    %6078 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6079 = stablehlo.multiply %6078, %arg233 : tensor<768xf32>
    %6080 = stablehlo.add %6077, %6079 : tensor<768xf32>
    %6081 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6082 = stablehlo.multiply %6081, %5070 : tensor<3072x768xf32>
    %6083 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6084 = stablehlo.multiply %6083, %arg234 : tensor<3072x768xf32>
    %6085 = stablehlo.add %6082, %6084 : tensor<3072x768xf32>
    %6086 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6087 = stablehlo.multiply %6086, %5075 : tensor<768xf32>
    %6088 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6089 = stablehlo.multiply %6088, %arg235 : tensor<768xf32>
    %6090 = stablehlo.add %6087, %6089 : tensor<768xf32>
    %6091 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6092 = stablehlo.multiply %6091, %5080 : tensor<768xf32>
    %6093 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6094 = stablehlo.multiply %6093, %arg236 : tensor<768xf32>
    %6095 = stablehlo.add %6092, %6094 : tensor<768xf32>
    %6096 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6097 = stablehlo.multiply %6096, %5085 : tensor<3072xf32>
    %6098 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6099 = stablehlo.multiply %6098, %arg237 : tensor<3072xf32>
    %6100 = stablehlo.add %6097, %6099 : tensor<3072xf32>
    %6101 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6102 = stablehlo.multiply %6101, %5090 : tensor<768x3072xf32>
    %6103 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6104 = stablehlo.multiply %6103, %arg238 : tensor<768x3072xf32>
    %6105 = stablehlo.add %6102, %6104 : tensor<768x3072xf32>
    %6106 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6107 = stablehlo.multiply %6106, %5095 : tensor<768xf32>
    %6108 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6109 = stablehlo.multiply %6108, %arg239 : tensor<768xf32>
    %6110 = stablehlo.add %6107, %6109 : tensor<768xf32>
    %6111 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6112 = stablehlo.multiply %6111, %5100 : tensor<768x768xf32>
    %6113 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6114 = stablehlo.multiply %6113, %arg240 : tensor<768x768xf32>
    %6115 = stablehlo.add %6112, %6114 : tensor<768x768xf32>
    %6116 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6117 = stablehlo.multiply %6116, %5105 : tensor<768xf32>
    %6118 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6119 = stablehlo.multiply %6118, %arg241 : tensor<768xf32>
    %6120 = stablehlo.add %6117, %6119 : tensor<768xf32>
    %6121 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6122 = stablehlo.multiply %6121, %5110 : tensor<768x768xf32>
    %6123 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6124 = stablehlo.multiply %6123, %arg242 : tensor<768x768xf32>
    %6125 = stablehlo.add %6122, %6124 : tensor<768x768xf32>
    %6126 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6127 = stablehlo.multiply %6126, %5115 : tensor<768xf32>
    %6128 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6129 = stablehlo.multiply %6128, %arg243 : tensor<768xf32>
    %6130 = stablehlo.add %6127, %6129 : tensor<768xf32>
    %6131 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6132 = stablehlo.multiply %6131, %5120 : tensor<768x768xf32>
    %6133 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6134 = stablehlo.multiply %6133, %arg244 : tensor<768x768xf32>
    %6135 = stablehlo.add %6132, %6134 : tensor<768x768xf32>
    %6136 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6137 = stablehlo.multiply %6136, %5125 : tensor<768xf32>
    %6138 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6139 = stablehlo.multiply %6138, %arg245 : tensor<768xf32>
    %6140 = stablehlo.add %6137, %6139 : tensor<768xf32>
    %6141 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6142 = stablehlo.multiply %6141, %5130 : tensor<768x768xf32>
    %6143 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6144 = stablehlo.multiply %6143, %arg246 : tensor<768x768xf32>
    %6145 = stablehlo.add %6142, %6144 : tensor<768x768xf32>
    %6146 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6147 = stablehlo.multiply %6146, %5135 : tensor<768xf32>
    %6148 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6149 = stablehlo.multiply %6148, %arg247 : tensor<768xf32>
    %6150 = stablehlo.add %6147, %6149 : tensor<768xf32>
    %6151 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6152 = stablehlo.multiply %6151, %5140 : tensor<768xf32>
    %6153 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6154 = stablehlo.multiply %6153, %arg248 : tensor<768xf32>
    %6155 = stablehlo.add %6152, %6154 : tensor<768xf32>
    %6156 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6157 = stablehlo.multiply %6156, %5145 : tensor<768xf32>
    %6158 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6159 = stablehlo.multiply %6158, %arg249 : tensor<768xf32>
    %6160 = stablehlo.add %6157, %6159 : tensor<768xf32>
    %6161 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6162 = stablehlo.multiply %6161, %5150 : tensor<3072x768xf32>
    %6163 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6164 = stablehlo.multiply %6163, %arg250 : tensor<3072x768xf32>
    %6165 = stablehlo.add %6162, %6164 : tensor<3072x768xf32>
    %6166 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6167 = stablehlo.multiply %6166, %5155 : tensor<768xf32>
    %6168 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6169 = stablehlo.multiply %6168, %arg251 : tensor<768xf32>
    %6170 = stablehlo.add %6167, %6169 : tensor<768xf32>
    %6171 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6172 = stablehlo.multiply %6171, %5160 : tensor<768xf32>
    %6173 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6174 = stablehlo.multiply %6173, %arg252 : tensor<768xf32>
    %6175 = stablehlo.add %6172, %6174 : tensor<768xf32>
    %6176 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6177 = stablehlo.multiply %6176, %5165 : tensor<3072xf32>
    %6178 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6179 = stablehlo.multiply %6178, %arg253 : tensor<3072xf32>
    %6180 = stablehlo.add %6177, %6179 : tensor<3072xf32>
    %6181 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6182 = stablehlo.multiply %6181, %5170 : tensor<768x3072xf32>
    %6183 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6184 = stablehlo.multiply %6183, %arg254 : tensor<768x3072xf32>
    %6185 = stablehlo.add %6182, %6184 : tensor<768x3072xf32>
    %6186 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6187 = stablehlo.multiply %6186, %5175 : tensor<768xf32>
    %6188 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6189 = stablehlo.multiply %6188, %arg255 : tensor<768xf32>
    %6190 = stablehlo.add %6187, %6189 : tensor<768xf32>
    %6191 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6192 = stablehlo.multiply %6191, %5180 : tensor<768x768xf32>
    %6193 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6194 = stablehlo.multiply %6193, %arg256 : tensor<768x768xf32>
    %6195 = stablehlo.add %6192, %6194 : tensor<768x768xf32>
    %6196 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6197 = stablehlo.multiply %6196, %5185 : tensor<768xf32>
    %6198 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6199 = stablehlo.multiply %6198, %arg257 : tensor<768xf32>
    %6200 = stablehlo.add %6197, %6199 : tensor<768xf32>
    %6201 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6202 = stablehlo.multiply %6201, %5190 : tensor<768x768xf32>
    %6203 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6204 = stablehlo.multiply %6203, %arg258 : tensor<768x768xf32>
    %6205 = stablehlo.add %6202, %6204 : tensor<768x768xf32>
    %6206 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6207 = stablehlo.multiply %6206, %5195 : tensor<768xf32>
    %6208 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6209 = stablehlo.multiply %6208, %arg259 : tensor<768xf32>
    %6210 = stablehlo.add %6207, %6209 : tensor<768xf32>
    %6211 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6212 = stablehlo.multiply %6211, %5200 : tensor<768x768xf32>
    %6213 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6214 = stablehlo.multiply %6213, %arg260 : tensor<768x768xf32>
    %6215 = stablehlo.add %6212, %6214 : tensor<768x768xf32>
    %6216 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6217 = stablehlo.multiply %6216, %5205 : tensor<768xf32>
    %6218 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6219 = stablehlo.multiply %6218, %arg261 : tensor<768xf32>
    %6220 = stablehlo.add %6217, %6219 : tensor<768xf32>
    %6221 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6222 = stablehlo.multiply %6221, %5210 : tensor<768x768xf32>
    %6223 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6224 = stablehlo.multiply %6223, %arg262 : tensor<768x768xf32>
    %6225 = stablehlo.add %6222, %6224 : tensor<768x768xf32>
    %6226 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6227 = stablehlo.multiply %6226, %5215 : tensor<768xf32>
    %6228 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6229 = stablehlo.multiply %6228, %arg263 : tensor<768xf32>
    %6230 = stablehlo.add %6227, %6229 : tensor<768xf32>
    %6231 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6232 = stablehlo.multiply %6231, %5220 : tensor<768xf32>
    %6233 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6234 = stablehlo.multiply %6233, %arg264 : tensor<768xf32>
    %6235 = stablehlo.add %6232, %6234 : tensor<768xf32>
    %6236 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6237 = stablehlo.multiply %6236, %5225 : tensor<768xf32>
    %6238 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6239 = stablehlo.multiply %6238, %arg265 : tensor<768xf32>
    %6240 = stablehlo.add %6237, %6239 : tensor<768xf32>
    %6241 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6242 = stablehlo.multiply %6241, %5230 : tensor<3072x768xf32>
    %6243 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6244 = stablehlo.multiply %6243, %arg266 : tensor<3072x768xf32>
    %6245 = stablehlo.add %6242, %6244 : tensor<3072x768xf32>
    %6246 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6247 = stablehlo.multiply %6246, %5235 : tensor<768xf32>
    %6248 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6249 = stablehlo.multiply %6248, %arg267 : tensor<768xf32>
    %6250 = stablehlo.add %6247, %6249 : tensor<768xf32>
    %6251 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6252 = stablehlo.multiply %6251, %5240 : tensor<768xf32>
    %6253 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6254 = stablehlo.multiply %6253, %arg268 : tensor<768xf32>
    %6255 = stablehlo.add %6252, %6254 : tensor<768xf32>
    %6256 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6257 = stablehlo.multiply %6256, %5245 : tensor<3072xf32>
    %6258 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6259 = stablehlo.multiply %6258, %arg269 : tensor<3072xf32>
    %6260 = stablehlo.add %6257, %6259 : tensor<3072xf32>
    %6261 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6262 = stablehlo.multiply %6261, %5250 : tensor<768x3072xf32>
    %6263 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6264 = stablehlo.multiply %6263, %arg270 : tensor<768x3072xf32>
    %6265 = stablehlo.add %6262, %6264 : tensor<768x3072xf32>
    %6266 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6267 = stablehlo.multiply %6266, %5255 : tensor<768xf32>
    %6268 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6269 = stablehlo.multiply %6268, %arg271 : tensor<768xf32>
    %6270 = stablehlo.add %6267, %6269 : tensor<768xf32>
    %6271 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6272 = stablehlo.multiply %6271, %5260 : tensor<768x768xf32>
    %6273 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6274 = stablehlo.multiply %6273, %arg272 : tensor<768x768xf32>
    %6275 = stablehlo.add %6272, %6274 : tensor<768x768xf32>
    %6276 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6277 = stablehlo.multiply %6276, %5265 : tensor<768xf32>
    %6278 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6279 = stablehlo.multiply %6278, %arg273 : tensor<768xf32>
    %6280 = stablehlo.add %6277, %6279 : tensor<768xf32>
    %6281 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6282 = stablehlo.multiply %6281, %5270 : tensor<768x768xf32>
    %6283 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6284 = stablehlo.multiply %6283, %arg274 : tensor<768x768xf32>
    %6285 = stablehlo.add %6282, %6284 : tensor<768x768xf32>
    %6286 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6287 = stablehlo.multiply %6286, %5275 : tensor<768xf32>
    %6288 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6289 = stablehlo.multiply %6288, %arg275 : tensor<768xf32>
    %6290 = stablehlo.add %6287, %6289 : tensor<768xf32>
    %6291 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6292 = stablehlo.multiply %6291, %5280 : tensor<768x768xf32>
    %6293 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6294 = stablehlo.multiply %6293, %arg276 : tensor<768x768xf32>
    %6295 = stablehlo.add %6292, %6294 : tensor<768x768xf32>
    %6296 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6297 = stablehlo.multiply %6296, %5285 : tensor<768xf32>
    %6298 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6299 = stablehlo.multiply %6298, %arg277 : tensor<768xf32>
    %6300 = stablehlo.add %6297, %6299 : tensor<768xf32>
    %6301 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6302 = stablehlo.multiply %6301, %5290 : tensor<768x768xf32>
    %6303 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6304 = stablehlo.multiply %6303, %arg278 : tensor<768x768xf32>
    %6305 = stablehlo.add %6302, %6304 : tensor<768x768xf32>
    %6306 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6307 = stablehlo.multiply %6306, %5295 : tensor<768xf32>
    %6308 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6309 = stablehlo.multiply %6308, %arg279 : tensor<768xf32>
    %6310 = stablehlo.add %6307, %6309 : tensor<768xf32>
    %6311 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6312 = stablehlo.multiply %6311, %5300 : tensor<768xf32>
    %6313 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6314 = stablehlo.multiply %6313, %arg280 : tensor<768xf32>
    %6315 = stablehlo.add %6312, %6314 : tensor<768xf32>
    %6316 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6317 = stablehlo.multiply %6316, %5305 : tensor<768xf32>
    %6318 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6319 = stablehlo.multiply %6318, %arg281 : tensor<768xf32>
    %6320 = stablehlo.add %6317, %6319 : tensor<768xf32>
    %6321 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6322 = stablehlo.multiply %6321, %5310 : tensor<3072x768xf32>
    %6323 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6324 = stablehlo.multiply %6323, %arg282 : tensor<3072x768xf32>
    %6325 = stablehlo.add %6322, %6324 : tensor<3072x768xf32>
    %6326 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6327 = stablehlo.multiply %6326, %5315 : tensor<768xf32>
    %6328 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6329 = stablehlo.multiply %6328, %arg283 : tensor<768xf32>
    %6330 = stablehlo.add %6327, %6329 : tensor<768xf32>
    %6331 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6332 = stablehlo.multiply %6331, %5320 : tensor<768xf32>
    %6333 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6334 = stablehlo.multiply %6333, %arg284 : tensor<768xf32>
    %6335 = stablehlo.add %6332, %6334 : tensor<768xf32>
    %6336 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6337 = stablehlo.multiply %6336, %5325 : tensor<3072xf32>
    %6338 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6339 = stablehlo.multiply %6338, %arg285 : tensor<3072xf32>
    %6340 = stablehlo.add %6337, %6339 : tensor<3072xf32>
    %6341 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6342 = stablehlo.multiply %6341, %5330 : tensor<768x3072xf32>
    %6343 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6344 = stablehlo.multiply %6343, %arg286 : tensor<768x3072xf32>
    %6345 = stablehlo.add %6342, %6344 : tensor<768x3072xf32>
    %6346 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6347 = stablehlo.multiply %6346, %5335 : tensor<768xf32>
    %6348 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6349 = stablehlo.multiply %6348, %arg287 : tensor<768xf32>
    %6350 = stablehlo.add %6347, %6349 : tensor<768xf32>
    %6351 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6352 = stablehlo.multiply %6351, %5340 : tensor<768x768xf32>
    %6353 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6354 = stablehlo.multiply %6353, %arg288 : tensor<768x768xf32>
    %6355 = stablehlo.add %6352, %6354 : tensor<768x768xf32>
    %6356 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6357 = stablehlo.multiply %6356, %5345 : tensor<768xf32>
    %6358 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6359 = stablehlo.multiply %6358, %arg289 : tensor<768xf32>
    %6360 = stablehlo.add %6357, %6359 : tensor<768xf32>
    %6361 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6362 = stablehlo.multiply %6361, %5350 : tensor<768x768xf32>
    %6363 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6364 = stablehlo.multiply %6363, %arg290 : tensor<768x768xf32>
    %6365 = stablehlo.add %6362, %6364 : tensor<768x768xf32>
    %6366 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6367 = stablehlo.multiply %6366, %5355 : tensor<768xf32>
    %6368 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6369 = stablehlo.multiply %6368, %arg291 : tensor<768xf32>
    %6370 = stablehlo.add %6367, %6369 : tensor<768xf32>
    %6371 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6372 = stablehlo.multiply %6371, %5360 : tensor<768x768xf32>
    %6373 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6374 = stablehlo.multiply %6373, %arg292 : tensor<768x768xf32>
    %6375 = stablehlo.add %6372, %6374 : tensor<768x768xf32>
    %6376 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6377 = stablehlo.multiply %6376, %5365 : tensor<768xf32>
    %6378 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6379 = stablehlo.multiply %6378, %arg293 : tensor<768xf32>
    %6380 = stablehlo.add %6377, %6379 : tensor<768xf32>
    %6381 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6382 = stablehlo.multiply %6381, %5370 : tensor<768x768xf32>
    %6383 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6384 = stablehlo.multiply %6383, %arg294 : tensor<768x768xf32>
    %6385 = stablehlo.add %6382, %6384 : tensor<768x768xf32>
    %6386 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6387 = stablehlo.multiply %6386, %5375 : tensor<768xf32>
    %6388 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6389 = stablehlo.multiply %6388, %arg295 : tensor<768xf32>
    %6390 = stablehlo.add %6387, %6389 : tensor<768xf32>
    %6391 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6392 = stablehlo.multiply %6391, %5380 : tensor<768xf32>
    %6393 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6394 = stablehlo.multiply %6393, %arg296 : tensor<768xf32>
    %6395 = stablehlo.add %6392, %6394 : tensor<768xf32>
    %6396 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6397 = stablehlo.multiply %6396, %5385 : tensor<768xf32>
    %6398 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6399 = stablehlo.multiply %6398, %arg297 : tensor<768xf32>
    %6400 = stablehlo.add %6397, %6399 : tensor<768xf32>
    %6401 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6402 = stablehlo.multiply %6401, %5390 : tensor<3072x768xf32>
    %6403 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6404 = stablehlo.multiply %6403, %arg298 : tensor<3072x768xf32>
    %6405 = stablehlo.add %6402, %6404 : tensor<3072x768xf32>
    %6406 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6407 = stablehlo.multiply %6406, %5395 : tensor<768xf32>
    %6408 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6409 = stablehlo.multiply %6408, %arg299 : tensor<768xf32>
    %6410 = stablehlo.add %6407, %6409 : tensor<768xf32>
    %6411 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6412 = stablehlo.multiply %6411, %5400 : tensor<768xf32>
    %6413 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6414 = stablehlo.multiply %6413, %arg300 : tensor<768xf32>
    %6415 = stablehlo.add %6412, %6414 : tensor<768xf32>
    %6416 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6417 = stablehlo.multiply %6416, %5405 : tensor<3072xf32>
    %6418 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6419 = stablehlo.multiply %6418, %arg301 : tensor<3072xf32>
    %6420 = stablehlo.add %6417, %6419 : tensor<3072xf32>
    %6421 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6422 = stablehlo.multiply %6421, %5410 : tensor<768x3072xf32>
    %6423 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6424 = stablehlo.multiply %6423, %arg302 : tensor<768x3072xf32>
    %6425 = stablehlo.add %6422, %6424 : tensor<768x3072xf32>
    %6426 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6427 = stablehlo.multiply %6426, %5415 : tensor<768xf32>
    %6428 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6429 = stablehlo.multiply %6428, %arg303 : tensor<768xf32>
    %6430 = stablehlo.add %6427, %6429 : tensor<768xf32>
    %6431 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6432 = stablehlo.multiply %6431, %5420 : tensor<768x768xf32>
    %6433 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6434 = stablehlo.multiply %6433, %arg304 : tensor<768x768xf32>
    %6435 = stablehlo.add %6432, %6434 : tensor<768x768xf32>
    %6436 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6437 = stablehlo.multiply %6436, %5425 : tensor<768xf32>
    %6438 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6439 = stablehlo.multiply %6438, %arg305 : tensor<768xf32>
    %6440 = stablehlo.add %6437, %6439 : tensor<768xf32>
    %6441 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6442 = stablehlo.multiply %6441, %5430 : tensor<768x768xf32>
    %6443 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6444 = stablehlo.multiply %6443, %arg306 : tensor<768x768xf32>
    %6445 = stablehlo.add %6442, %6444 : tensor<768x768xf32>
    %6446 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6447 = stablehlo.multiply %6446, %5435 : tensor<768xf32>
    %6448 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6449 = stablehlo.multiply %6448, %arg307 : tensor<768xf32>
    %6450 = stablehlo.add %6447, %6449 : tensor<768xf32>
    %6451 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6452 = stablehlo.multiply %6451, %5440 : tensor<768x768xf32>
    %6453 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6454 = stablehlo.multiply %6453, %arg308 : tensor<768x768xf32>
    %6455 = stablehlo.add %6452, %6454 : tensor<768x768xf32>
    %6456 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6457 = stablehlo.multiply %6456, %5445 : tensor<768xf32>
    %6458 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6459 = stablehlo.multiply %6458, %arg309 : tensor<768xf32>
    %6460 = stablehlo.add %6457, %6459 : tensor<768xf32>
    %6461 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6462 = stablehlo.multiply %6461, %5450 : tensor<768x768xf32>
    %6463 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6464 = stablehlo.multiply %6463, %arg310 : tensor<768x768xf32>
    %6465 = stablehlo.add %6462, %6464 : tensor<768x768xf32>
    %6466 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6467 = stablehlo.multiply %6466, %5455 : tensor<768xf32>
    %6468 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6469 = stablehlo.multiply %6468, %arg311 : tensor<768xf32>
    %6470 = stablehlo.add %6467, %6469 : tensor<768xf32>
    %6471 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6472 = stablehlo.multiply %6471, %5460 : tensor<768xf32>
    %6473 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6474 = stablehlo.multiply %6473, %arg312 : tensor<768xf32>
    %6475 = stablehlo.add %6472, %6474 : tensor<768xf32>
    %6476 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6477 = stablehlo.multiply %6476, %5465 : tensor<768xf32>
    %6478 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6479 = stablehlo.multiply %6478, %arg313 : tensor<768xf32>
    %6480 = stablehlo.add %6477, %6479 : tensor<768xf32>
    %6481 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6482 = stablehlo.multiply %6481, %5470 : tensor<3072x768xf32>
    %6483 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6484 = stablehlo.multiply %6483, %arg314 : tensor<3072x768xf32>
    %6485 = stablehlo.add %6482, %6484 : tensor<3072x768xf32>
    %6486 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6487 = stablehlo.multiply %6486, %5475 : tensor<768xf32>
    %6488 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6489 = stablehlo.multiply %6488, %arg315 : tensor<768xf32>
    %6490 = stablehlo.add %6487, %6489 : tensor<768xf32>
    %6491 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6492 = stablehlo.multiply %6491, %5480 : tensor<768xf32>
    %6493 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6494 = stablehlo.multiply %6493, %arg316 : tensor<768xf32>
    %6495 = stablehlo.add %6492, %6494 : tensor<768xf32>
    %6496 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6497 = stablehlo.multiply %6496, %5485 : tensor<3072xf32>
    %6498 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6499 = stablehlo.multiply %6498, %arg317 : tensor<3072xf32>
    %6500 = stablehlo.add %6497, %6499 : tensor<3072xf32>
    %6501 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6502 = stablehlo.multiply %6501, %5490 : tensor<768x3072xf32>
    %6503 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6504 = stablehlo.multiply %6503, %arg318 : tensor<768x3072xf32>
    %6505 = stablehlo.add %6502, %6504 : tensor<768x3072xf32>
    %6506 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6507 = stablehlo.multiply %6506, %5495 : tensor<768xf32>
    %6508 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6509 = stablehlo.multiply %6508, %arg319 : tensor<768xf32>
    %6510 = stablehlo.add %6507, %6509 : tensor<768xf32>
    %6511 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6512 = stablehlo.multiply %6511, %5500 : tensor<768x768xf32>
    %6513 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6514 = stablehlo.multiply %6513, %arg320 : tensor<768x768xf32>
    %6515 = stablehlo.add %6512, %6514 : tensor<768x768xf32>
    %6516 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6517 = stablehlo.multiply %6516, %5505 : tensor<768xf32>
    %6518 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6519 = stablehlo.multiply %6518, %arg321 : tensor<768xf32>
    %6520 = stablehlo.add %6517, %6519 : tensor<768xf32>
    %6521 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6522 = stablehlo.multiply %6521, %5510 : tensor<768x768xf32>
    %6523 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6524 = stablehlo.multiply %6523, %arg322 : tensor<768x768xf32>
    %6525 = stablehlo.add %6522, %6524 : tensor<768x768xf32>
    %6526 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6527 = stablehlo.multiply %6526, %5515 : tensor<768xf32>
    %6528 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6529 = stablehlo.multiply %6528, %arg323 : tensor<768xf32>
    %6530 = stablehlo.add %6527, %6529 : tensor<768xf32>
    %6531 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6532 = stablehlo.multiply %6531, %5520 : tensor<768x768xf32>
    %6533 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6534 = stablehlo.multiply %6533, %arg324 : tensor<768x768xf32>
    %6535 = stablehlo.add %6532, %6534 : tensor<768x768xf32>
    %6536 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6537 = stablehlo.multiply %6536, %5525 : tensor<768xf32>
    %6538 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6539 = stablehlo.multiply %6538, %arg325 : tensor<768xf32>
    %6540 = stablehlo.add %6537, %6539 : tensor<768xf32>
    %6541 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6542 = stablehlo.multiply %6541, %5530 : tensor<768x768xf32>
    %6543 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6544 = stablehlo.multiply %6543, %arg326 : tensor<768x768xf32>
    %6545 = stablehlo.add %6542, %6544 : tensor<768x768xf32>
    %6546 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6547 = stablehlo.multiply %6546, %5535 : tensor<768xf32>
    %6548 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6549 = stablehlo.multiply %6548, %arg327 : tensor<768xf32>
    %6550 = stablehlo.add %6547, %6549 : tensor<768xf32>
    %6551 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6552 = stablehlo.multiply %6551, %5540 : tensor<768xf32>
    %6553 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6554 = stablehlo.multiply %6553, %arg328 : tensor<768xf32>
    %6555 = stablehlo.add %6552, %6554 : tensor<768xf32>
    %6556 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6557 = stablehlo.multiply %6556, %5545 : tensor<768xf32>
    %6558 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6559 = stablehlo.multiply %6558, %arg329 : tensor<768xf32>
    %6560 = stablehlo.add %6557, %6559 : tensor<768xf32>
    %6561 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6562 = stablehlo.multiply %6561, %5550 : tensor<3072x768xf32>
    %6563 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6564 = stablehlo.multiply %6563, %arg330 : tensor<3072x768xf32>
    %6565 = stablehlo.add %6562, %6564 : tensor<3072x768xf32>
    %6566 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6567 = stablehlo.multiply %6566, %5555 : tensor<768xf32>
    %6568 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6569 = stablehlo.multiply %6568, %arg331 : tensor<768xf32>
    %6570 = stablehlo.add %6567, %6569 : tensor<768xf32>
    %6571 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6572 = stablehlo.multiply %6571, %5560 : tensor<768xf32>
    %6573 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6574 = stablehlo.multiply %6573, %arg332 : tensor<768xf32>
    %6575 = stablehlo.add %6572, %6574 : tensor<768xf32>
    %6576 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6577 = stablehlo.multiply %6576, %5565 : tensor<3072xf32>
    %6578 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6579 = stablehlo.multiply %6578, %arg333 : tensor<3072xf32>
    %6580 = stablehlo.add %6577, %6579 : tensor<3072xf32>
    %6581 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6582 = stablehlo.multiply %6581, %5570 : tensor<768x3072xf32>
    %6583 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6584 = stablehlo.multiply %6583, %arg334 : tensor<768x3072xf32>
    %6585 = stablehlo.add %6582, %6584 : tensor<768x3072xf32>
    %6586 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6587 = stablehlo.multiply %6586, %5575 : tensor<768xf32>
    %6588 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6589 = stablehlo.multiply %6588, %arg335 : tensor<768xf32>
    %6590 = stablehlo.add %6587, %6589 : tensor<768xf32>
    %6591 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6592 = stablehlo.multiply %6591, %5580 : tensor<768x768xf32>
    %6593 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6594 = stablehlo.multiply %6593, %arg336 : tensor<768x768xf32>
    %6595 = stablehlo.add %6592, %6594 : tensor<768x768xf32>
    %6596 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6597 = stablehlo.multiply %6596, %5585 : tensor<768xf32>
    %6598 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6599 = stablehlo.multiply %6598, %arg337 : tensor<768xf32>
    %6600 = stablehlo.add %6597, %6599 : tensor<768xf32>
    %6601 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6602 = stablehlo.multiply %6601, %5590 : tensor<768x768xf32>
    %6603 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6604 = stablehlo.multiply %6603, %arg338 : tensor<768x768xf32>
    %6605 = stablehlo.add %6602, %6604 : tensor<768x768xf32>
    %6606 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6607 = stablehlo.multiply %6606, %5595 : tensor<768xf32>
    %6608 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6609 = stablehlo.multiply %6608, %arg339 : tensor<768xf32>
    %6610 = stablehlo.add %6607, %6609 : tensor<768xf32>
    %6611 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6612 = stablehlo.multiply %6611, %5600 : tensor<768x768xf32>
    %6613 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6614 = stablehlo.multiply %6613, %arg340 : tensor<768x768xf32>
    %6615 = stablehlo.add %6612, %6614 : tensor<768x768xf32>
    %6616 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6617 = stablehlo.multiply %6616, %5605 : tensor<768xf32>
    %6618 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6619 = stablehlo.multiply %6618, %arg341 : tensor<768xf32>
    %6620 = stablehlo.add %6617, %6619 : tensor<768xf32>
    %6621 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6622 = stablehlo.multiply %6621, %5610 : tensor<768x768xf32>
    %6623 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6624 = stablehlo.multiply %6623, %arg342 : tensor<768x768xf32>
    %6625 = stablehlo.add %6622, %6624 : tensor<768x768xf32>
    %6626 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6627 = stablehlo.multiply %6626, %5615 : tensor<768xf32>
    %6628 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6629 = stablehlo.multiply %6628, %arg343 : tensor<768xf32>
    %6630 = stablehlo.add %6627, %6629 : tensor<768xf32>
    %6631 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6632 = stablehlo.multiply %6631, %5620 : tensor<768xf32>
    %6633 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6634 = stablehlo.multiply %6633, %arg344 : tensor<768xf32>
    %6635 = stablehlo.add %6632, %6634 : tensor<768xf32>
    %6636 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6637 = stablehlo.multiply %6636, %5625 : tensor<768xf32>
    %6638 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6639 = stablehlo.multiply %6638, %arg345 : tensor<768xf32>
    %6640 = stablehlo.add %6637, %6639 : tensor<768xf32>
    %6641 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6642 = stablehlo.multiply %6641, %5630 : tensor<3072x768xf32>
    %6643 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6644 = stablehlo.multiply %6643, %arg346 : tensor<3072x768xf32>
    %6645 = stablehlo.add %6642, %6644 : tensor<3072x768xf32>
    %6646 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6647 = stablehlo.multiply %6646, %5635 : tensor<768xf32>
    %6648 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6649 = stablehlo.multiply %6648, %arg347 : tensor<768xf32>
    %6650 = stablehlo.add %6647, %6649 : tensor<768xf32>
    %6651 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6652 = stablehlo.multiply %6651, %5640 : tensor<768xf32>
    %6653 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6654 = stablehlo.multiply %6653, %arg348 : tensor<768xf32>
    %6655 = stablehlo.add %6652, %6654 : tensor<768xf32>
    %6656 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6657 = stablehlo.multiply %6656, %5645 : tensor<3072xf32>
    %6658 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6659 = stablehlo.multiply %6658, %arg349 : tensor<3072xf32>
    %6660 = stablehlo.add %6657, %6659 : tensor<3072xf32>
    %6661 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6662 = stablehlo.multiply %6661, %5650 : tensor<768x3072xf32>
    %6663 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6664 = stablehlo.multiply %6663, %arg350 : tensor<768x3072xf32>
    %6665 = stablehlo.add %6662, %6664 : tensor<768x3072xf32>
    %6666 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6667 = stablehlo.multiply %6666, %5655 : tensor<768xf32>
    %6668 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6669 = stablehlo.multiply %6668, %arg351 : tensor<768xf32>
    %6670 = stablehlo.add %6667, %6669 : tensor<768xf32>
    %6671 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6672 = stablehlo.multiply %6671, %5660 : tensor<768x768xf32>
    %6673 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6674 = stablehlo.multiply %6673, %arg352 : tensor<768x768xf32>
    %6675 = stablehlo.add %6672, %6674 : tensor<768x768xf32>
    %6676 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6677 = stablehlo.multiply %6676, %5665 : tensor<768xf32>
    %6678 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6679 = stablehlo.multiply %6678, %arg353 : tensor<768xf32>
    %6680 = stablehlo.add %6677, %6679 : tensor<768xf32>
    %6681 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6682 = stablehlo.multiply %6681, %5670 : tensor<768x768xf32>
    %6683 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6684 = stablehlo.multiply %6683, %arg354 : tensor<768x768xf32>
    %6685 = stablehlo.add %6682, %6684 : tensor<768x768xf32>
    %6686 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6687 = stablehlo.multiply %6686, %5675 : tensor<768xf32>
    %6688 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6689 = stablehlo.multiply %6688, %arg355 : tensor<768xf32>
    %6690 = stablehlo.add %6687, %6689 : tensor<768xf32>
    %6691 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6692 = stablehlo.multiply %6691, %5680 : tensor<768x768xf32>
    %6693 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6694 = stablehlo.multiply %6693, %arg356 : tensor<768x768xf32>
    %6695 = stablehlo.add %6692, %6694 : tensor<768x768xf32>
    %6696 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6697 = stablehlo.multiply %6696, %5685 : tensor<768xf32>
    %6698 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6699 = stablehlo.multiply %6698, %arg357 : tensor<768xf32>
    %6700 = stablehlo.add %6697, %6699 : tensor<768xf32>
    %6701 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6702 = stablehlo.multiply %6701, %5690 : tensor<768x768xf32>
    %6703 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6704 = stablehlo.multiply %6703, %arg358 : tensor<768x768xf32>
    %6705 = stablehlo.add %6702, %6704 : tensor<768x768xf32>
    %6706 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6707 = stablehlo.multiply %6706, %5695 : tensor<768xf32>
    %6708 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6709 = stablehlo.multiply %6708, %arg359 : tensor<768xf32>
    %6710 = stablehlo.add %6707, %6709 : tensor<768xf32>
    %6711 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6712 = stablehlo.multiply %6711, %5700 : tensor<768xf32>
    %6713 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6714 = stablehlo.multiply %6713, %arg360 : tensor<768xf32>
    %6715 = stablehlo.add %6712, %6714 : tensor<768xf32>
    %6716 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6717 = stablehlo.multiply %6716, %5705 : tensor<768xf32>
    %6718 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6719 = stablehlo.multiply %6718, %arg361 : tensor<768xf32>
    %6720 = stablehlo.add %6717, %6719 : tensor<768xf32>
    %6721 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6722 = stablehlo.multiply %6721, %5710 : tensor<3072x768xf32>
    %6723 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6724 = stablehlo.multiply %6723, %arg362 : tensor<3072x768xf32>
    %6725 = stablehlo.add %6722, %6724 : tensor<3072x768xf32>
    %6726 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6727 = stablehlo.multiply %6726, %5715 : tensor<768xf32>
    %6728 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6729 = stablehlo.multiply %6728, %arg363 : tensor<768xf32>
    %6730 = stablehlo.add %6727, %6729 : tensor<768xf32>
    %6731 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6732 = stablehlo.multiply %6731, %5720 : tensor<768xf32>
    %6733 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6734 = stablehlo.multiply %6733, %arg364 : tensor<768xf32>
    %6735 = stablehlo.add %6732, %6734 : tensor<768xf32>
    %6736 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6737 = stablehlo.multiply %6736, %5725 : tensor<3072xf32>
    %6738 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6739 = stablehlo.multiply %6738, %arg365 : tensor<3072xf32>
    %6740 = stablehlo.add %6737, %6739 : tensor<3072xf32>
    %6741 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6742 = stablehlo.multiply %6741, %5730 : tensor<768x3072xf32>
    %6743 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6744 = stablehlo.multiply %6743, %arg366 : tensor<768x3072xf32>
    %6745 = stablehlo.add %6742, %6744 : tensor<768x3072xf32>
    %6746 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6747 = stablehlo.multiply %6746, %5735 : tensor<768xf32>
    %6748 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6749 = stablehlo.multiply %6748, %arg367 : tensor<768xf32>
    %6750 = stablehlo.add %6747, %6749 : tensor<768xf32>
    %6751 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6752 = stablehlo.multiply %6751, %5740 : tensor<768x768xf32>
    %6753 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6754 = stablehlo.multiply %6753, %arg368 : tensor<768x768xf32>
    %6755 = stablehlo.add %6752, %6754 : tensor<768x768xf32>
    %6756 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6757 = stablehlo.multiply %6756, %5745 : tensor<768xf32>
    %6758 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6759 = stablehlo.multiply %6758, %arg369 : tensor<768xf32>
    %6760 = stablehlo.add %6757, %6759 : tensor<768xf32>
    %6761 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6762 = stablehlo.multiply %6761, %5750 : tensor<768x768xf32>
    %6763 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6764 = stablehlo.multiply %6763, %arg370 : tensor<768x768xf32>
    %6765 = stablehlo.add %6762, %6764 : tensor<768x768xf32>
    %6766 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6767 = stablehlo.multiply %6766, %5755 : tensor<768xf32>
    %6768 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6769 = stablehlo.multiply %6768, %arg371 : tensor<768xf32>
    %6770 = stablehlo.add %6767, %6769 : tensor<768xf32>
    %6771 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6772 = stablehlo.multiply %6771, %5760 : tensor<768x768xf32>
    %6773 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6774 = stablehlo.multiply %6773, %arg372 : tensor<768x768xf32>
    %6775 = stablehlo.add %6772, %6774 : tensor<768x768xf32>
    %6776 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6777 = stablehlo.multiply %6776, %5765 : tensor<768xf32>
    %6778 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6779 = stablehlo.multiply %6778, %arg373 : tensor<768xf32>
    %6780 = stablehlo.add %6777, %6779 : tensor<768xf32>
    %6781 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6782 = stablehlo.multiply %6781, %5770 : tensor<768x768xf32>
    %6783 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6784 = stablehlo.multiply %6783, %arg374 : tensor<768x768xf32>
    %6785 = stablehlo.add %6782, %6784 : tensor<768x768xf32>
    %6786 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6787 = stablehlo.multiply %6786, %5775 : tensor<768xf32>
    %6788 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6789 = stablehlo.multiply %6788, %arg375 : tensor<768xf32>
    %6790 = stablehlo.add %6787, %6789 : tensor<768xf32>
    %6791 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6792 = stablehlo.multiply %6791, %5780 : tensor<768xf32>
    %6793 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6794 = stablehlo.multiply %6793, %arg376 : tensor<768xf32>
    %6795 = stablehlo.add %6792, %6794 : tensor<768xf32>
    %6796 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6797 = stablehlo.multiply %6796, %5785 : tensor<768xf32>
    %6798 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6799 = stablehlo.multiply %6798, %arg377 : tensor<768xf32>
    %6800 = stablehlo.add %6797, %6799 : tensor<768xf32>
    %6801 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6802 = stablehlo.multiply %6801, %5790 : tensor<3072x768xf32>
    %6803 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6804 = stablehlo.multiply %6803, %arg378 : tensor<3072x768xf32>
    %6805 = stablehlo.add %6802, %6804 : tensor<3072x768xf32>
    %6806 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6807 = stablehlo.multiply %6806, %5795 : tensor<768xf32>
    %6808 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6809 = stablehlo.multiply %6808, %arg379 : tensor<768xf32>
    %6810 = stablehlo.add %6807, %6809 : tensor<768xf32>
    %6811 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6812 = stablehlo.multiply %6811, %5800 : tensor<768xf32>
    %6813 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6814 = stablehlo.multiply %6813, %arg380 : tensor<768xf32>
    %6815 = stablehlo.add %6812, %6814 : tensor<768xf32>
    %6816 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6817 = stablehlo.multiply %6816, %5805 : tensor<3072xf32>
    %6818 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6819 = stablehlo.multiply %6818, %arg381 : tensor<3072xf32>
    %6820 = stablehlo.add %6817, %6819 : tensor<3072xf32>
    %6821 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6822 = stablehlo.multiply %6821, %5810 : tensor<768x3072xf32>
    %6823 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6824 = stablehlo.multiply %6823, %arg382 : tensor<768x3072xf32>
    %6825 = stablehlo.add %6822, %6824 : tensor<768x3072xf32>
    %6826 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6827 = stablehlo.multiply %6826, %5815 : tensor<768xf32>
    %6828 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6829 = stablehlo.multiply %6828, %arg383 : tensor<768xf32>
    %6830 = stablehlo.add %6827, %6829 : tensor<768xf32>
    %6831 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6832 = stablehlo.multiply %6831, %5820 : tensor<768x768xf32>
    %6833 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6834 = stablehlo.multiply %6833, %arg384 : tensor<768x768xf32>
    %6835 = stablehlo.add %6832, %6834 : tensor<768x768xf32>
    %6836 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6837 = stablehlo.multiply %6836, %5825 : tensor<768xf32>
    %6838 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6839 = stablehlo.multiply %6838, %arg385 : tensor<768xf32>
    %6840 = stablehlo.add %6837, %6839 : tensor<768xf32>
    %6841 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6842 = stablehlo.multiply %6841, %5830 : tensor<768x768xf32>
    %6843 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6844 = stablehlo.multiply %6843, %arg386 : tensor<768x768xf32>
    %6845 = stablehlo.add %6842, %6844 : tensor<768x768xf32>
    %6846 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6847 = stablehlo.multiply %6846, %5835 : tensor<768xf32>
    %6848 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6849 = stablehlo.multiply %6848, %arg387 : tensor<768xf32>
    %6850 = stablehlo.add %6847, %6849 : tensor<768xf32>
    %6851 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6852 = stablehlo.multiply %6851, %5840 : tensor<768x768xf32>
    %6853 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6854 = stablehlo.multiply %6853, %arg388 : tensor<768x768xf32>
    %6855 = stablehlo.add %6852, %6854 : tensor<768x768xf32>
    %6856 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6857 = stablehlo.multiply %6856, %5845 : tensor<768xf32>
    %6858 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6859 = stablehlo.multiply %6858, %arg389 : tensor<768xf32>
    %6860 = stablehlo.add %6857, %6859 : tensor<768xf32>
    %6861 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6862 = stablehlo.multiply %6861, %5850 : tensor<768x768xf32>
    %6863 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6864 = stablehlo.multiply %6863, %arg390 : tensor<768x768xf32>
    %6865 = stablehlo.add %6862, %6864 : tensor<768x768xf32>
    %6866 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6867 = stablehlo.multiply %6866, %5855 : tensor<768xf32>
    %6868 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6869 = stablehlo.multiply %6868, %arg391 : tensor<768xf32>
    %6870 = stablehlo.add %6867, %6869 : tensor<768xf32>
    %6871 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6872 = stablehlo.multiply %6871, %5860 : tensor<768xf32>
    %6873 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6874 = stablehlo.multiply %6873, %arg392 : tensor<768xf32>
    %6875 = stablehlo.add %6872, %6874 : tensor<768xf32>
    %6876 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6877 = stablehlo.multiply %6876, %5865 : tensor<768xf32>
    %6878 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6879 = stablehlo.multiply %6878, %arg393 : tensor<768xf32>
    %6880 = stablehlo.add %6877, %6879 : tensor<768xf32>
    %6881 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6882 = stablehlo.multiply %6881, %5870 : tensor<3072x768xf32>
    %6883 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6884 = stablehlo.multiply %6883, %arg394 : tensor<3072x768xf32>
    %6885 = stablehlo.add %6882, %6884 : tensor<3072x768xf32>
    %6886 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6887 = stablehlo.multiply %6886, %5875 : tensor<768xf32>
    %6888 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6889 = stablehlo.multiply %6888, %arg395 : tensor<768xf32>
    %6890 = stablehlo.add %6887, %6889 : tensor<768xf32>
    %6891 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6892 = stablehlo.multiply %6891, %5880 : tensor<768xf32>
    %6893 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6894 = stablehlo.multiply %6893, %arg396 : tensor<768xf32>
    %6895 = stablehlo.add %6892, %6894 : tensor<768xf32>
    %6896 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6897 = stablehlo.multiply %6896, %5885 : tensor<3072xf32>
    %6898 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6899 = stablehlo.multiply %6898, %arg397 : tensor<3072xf32>
    %6900 = stablehlo.add %6897, %6899 : tensor<3072xf32>
    %6901 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6902 = stablehlo.multiply %6901, %5890 : tensor<768x3072xf32>
    %6903 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6904 = stablehlo.multiply %6903, %arg398 : tensor<768x3072xf32>
    %6905 = stablehlo.add %6902, %6904 : tensor<768x3072xf32>
    %6906 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6907 = stablehlo.multiply %6906, %5895 : tensor<768xf32>
    %6908 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6909 = stablehlo.multiply %6908, %arg399 : tensor<768xf32>
    %6910 = stablehlo.add %6907, %6909 : tensor<768xf32>
    %6911 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6912 = stablehlo.multiply %6911, %5900 : tensor<768xf32>
    %6913 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6914 = stablehlo.multiply %6913, %arg400 : tensor<768xf32>
    %6915 = stablehlo.add %6912, %6914 : tensor<768xf32>
    %6916 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6917 = stablehlo.multiply %6916, %5905 : tensor<30522xf32>
    %6918 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6919 = stablehlo.multiply %6918, %arg401 : tensor<30522xf32>
    %6920 = stablehlo.add %6917, %6919 : tensor<30522xf32>
    %6921 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6922 = stablehlo.multiply %6921, %5910 : tensor<768xf32>
    %6923 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6924 = stablehlo.multiply %6923, %arg402 : tensor<768xf32>
    %6925 = stablehlo.add %6922, %6924 : tensor<768xf32>
    %6926 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6927 = stablehlo.multiply %6926, %5915 : tensor<768x768xf32>
    %6928 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6929 = stablehlo.multiply %6928, %arg403 : tensor<768x768xf32>
    %6930 = stablehlo.add %6927, %6929 : tensor<768x768xf32>
    %6931 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6932 = stablehlo.multiply %6931, %5920 : tensor<30522x768xf32>
    %6933 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6934 = stablehlo.multiply %6933, %arg404 : tensor<30522x768xf32>
    %6935 = stablehlo.add %6932, %6934 : tensor<30522x768xf32>
    %6936 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6937 = stablehlo.multiply %6936, %5925 : tensor<768xf32>
    %6938 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6939 = stablehlo.multiply %6938, %arg405 : tensor<768xf32>
    %6940 = stablehlo.add %6937, %6939 : tensor<768xf32>
    %6941 = stablehlo.broadcast_in_dim %cst_715, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6942 = stablehlo.multiply %6941, %5930 : tensor<768xf32>
    %6943 = stablehlo.broadcast_in_dim %cst_716, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6944 = stablehlo.multiply %6943, %arg406 : tensor<768xf32>
    %6945 = stablehlo.add %6942, %6944 : tensor<768xf32>
    %6946 = stablehlo.multiply %4920, %4920 : tensor<512x768xf32>
    %cst_717 = stablehlo.constant dense<1.000000e-03> : tensor<f32>
    %6947 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6948 = stablehlo.multiply %6947, %6946 : tensor<512x768xf32>
    %cst_718 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %6949 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6950 = stablehlo.multiply %6949, %arg407 : tensor<512x768xf32>
    %6951 = stablehlo.add %6948, %6950 : tensor<512x768xf32>
    %6952 = stablehlo.multiply %4925, %4925 : tensor<2x768xf32>
    %6953 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6954 = stablehlo.multiply %6953, %6952 : tensor<2x768xf32>
    %6955 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6956 = stablehlo.multiply %6955, %arg408 : tensor<2x768xf32>
    %6957 = stablehlo.add %6954, %6956 : tensor<2x768xf32>
    %6958 = stablehlo.multiply %4930, %4930 : tensor<30522x768xf32>
    %6959 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6960 = stablehlo.multiply %6959, %6958 : tensor<30522x768xf32>
    %6961 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6962 = stablehlo.multiply %6961, %arg409 : tensor<30522x768xf32>
    %6963 = stablehlo.add %6960, %6962 : tensor<30522x768xf32>
    %6964 = stablehlo.multiply %4935, %4935 : tensor<768xf32>
    %6965 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6966 = stablehlo.multiply %6965, %6964 : tensor<768xf32>
    %6967 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6968 = stablehlo.multiply %6967, %arg410 : tensor<768xf32>
    %6969 = stablehlo.add %6966, %6968 : tensor<768xf32>
    %6970 = stablehlo.multiply %4940, %4940 : tensor<768x768xf32>
    %6971 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6972 = stablehlo.multiply %6971, %6970 : tensor<768x768xf32>
    %6973 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6974 = stablehlo.multiply %6973, %arg411 : tensor<768x768xf32>
    %6975 = stablehlo.add %6972, %6974 : tensor<768x768xf32>
    %6976 = stablehlo.multiply %4945, %4945 : tensor<768xf32>
    %6977 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6978 = stablehlo.multiply %6977, %6976 : tensor<768xf32>
    %6979 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6980 = stablehlo.multiply %6979, %arg412 : tensor<768xf32>
    %6981 = stablehlo.add %6978, %6980 : tensor<768xf32>
    %6982 = stablehlo.multiply %4950, %4950 : tensor<768x768xf32>
    %6983 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6984 = stablehlo.multiply %6983, %6982 : tensor<768x768xf32>
    %6985 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6986 = stablehlo.multiply %6985, %arg413 : tensor<768x768xf32>
    %6987 = stablehlo.add %6984, %6986 : tensor<768x768xf32>
    %6988 = stablehlo.multiply %4955, %4955 : tensor<768xf32>
    %6989 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6990 = stablehlo.multiply %6989, %6988 : tensor<768xf32>
    %6991 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6992 = stablehlo.multiply %6991, %arg414 : tensor<768xf32>
    %6993 = stablehlo.add %6990, %6992 : tensor<768xf32>
    %6994 = stablehlo.multiply %4960, %4960 : tensor<768x768xf32>
    %6995 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6996 = stablehlo.multiply %6995, %6994 : tensor<768x768xf32>
    %6997 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6998 = stablehlo.multiply %6997, %arg415 : tensor<768x768xf32>
    %6999 = stablehlo.add %6996, %6998 : tensor<768x768xf32>
    %7000 = stablehlo.multiply %4965, %4965 : tensor<768xf32>
    %7001 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7002 = stablehlo.multiply %7001, %7000 : tensor<768xf32>
    %7003 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7004 = stablehlo.multiply %7003, %arg416 : tensor<768xf32>
    %7005 = stablehlo.add %7002, %7004 : tensor<768xf32>
    %7006 = stablehlo.multiply %4970, %4970 : tensor<768x768xf32>
    %7007 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7008 = stablehlo.multiply %7007, %7006 : tensor<768x768xf32>
    %7009 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7010 = stablehlo.multiply %7009, %arg417 : tensor<768x768xf32>
    %7011 = stablehlo.add %7008, %7010 : tensor<768x768xf32>
    %7012 = stablehlo.multiply %4975, %4975 : tensor<768xf32>
    %7013 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7014 = stablehlo.multiply %7013, %7012 : tensor<768xf32>
    %7015 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7016 = stablehlo.multiply %7015, %arg418 : tensor<768xf32>
    %7017 = stablehlo.add %7014, %7016 : tensor<768xf32>
    %7018 = stablehlo.multiply %4980, %4980 : tensor<768xf32>
    %7019 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7020 = stablehlo.multiply %7019, %7018 : tensor<768xf32>
    %7021 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7022 = stablehlo.multiply %7021, %arg419 : tensor<768xf32>
    %7023 = stablehlo.add %7020, %7022 : tensor<768xf32>
    %7024 = stablehlo.multiply %4985, %4985 : tensor<768xf32>
    %7025 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7026 = stablehlo.multiply %7025, %7024 : tensor<768xf32>
    %7027 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7028 = stablehlo.multiply %7027, %arg420 : tensor<768xf32>
    %7029 = stablehlo.add %7026, %7028 : tensor<768xf32>
    %7030 = stablehlo.multiply %4990, %4990 : tensor<3072x768xf32>
    %7031 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7032 = stablehlo.multiply %7031, %7030 : tensor<3072x768xf32>
    %7033 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7034 = stablehlo.multiply %7033, %arg421 : tensor<3072x768xf32>
    %7035 = stablehlo.add %7032, %7034 : tensor<3072x768xf32>
    %7036 = stablehlo.multiply %4995, %4995 : tensor<768xf32>
    %7037 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7038 = stablehlo.multiply %7037, %7036 : tensor<768xf32>
    %7039 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7040 = stablehlo.multiply %7039, %arg422 : tensor<768xf32>
    %7041 = stablehlo.add %7038, %7040 : tensor<768xf32>
    %7042 = stablehlo.multiply %5000, %5000 : tensor<768xf32>
    %7043 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7044 = stablehlo.multiply %7043, %7042 : tensor<768xf32>
    %7045 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7046 = stablehlo.multiply %7045, %arg423 : tensor<768xf32>
    %7047 = stablehlo.add %7044, %7046 : tensor<768xf32>
    %7048 = stablehlo.multiply %5005, %5005 : tensor<3072xf32>
    %7049 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7050 = stablehlo.multiply %7049, %7048 : tensor<3072xf32>
    %7051 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7052 = stablehlo.multiply %7051, %arg424 : tensor<3072xf32>
    %7053 = stablehlo.add %7050, %7052 : tensor<3072xf32>
    %7054 = stablehlo.multiply %5010, %5010 : tensor<768x3072xf32>
    %7055 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7056 = stablehlo.multiply %7055, %7054 : tensor<768x3072xf32>
    %7057 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7058 = stablehlo.multiply %7057, %arg425 : tensor<768x3072xf32>
    %7059 = stablehlo.add %7056, %7058 : tensor<768x3072xf32>
    %7060 = stablehlo.multiply %5015, %5015 : tensor<768xf32>
    %7061 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7062 = stablehlo.multiply %7061, %7060 : tensor<768xf32>
    %7063 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7064 = stablehlo.multiply %7063, %arg426 : tensor<768xf32>
    %7065 = stablehlo.add %7062, %7064 : tensor<768xf32>
    %7066 = stablehlo.multiply %5020, %5020 : tensor<768x768xf32>
    %7067 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7068 = stablehlo.multiply %7067, %7066 : tensor<768x768xf32>
    %7069 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7070 = stablehlo.multiply %7069, %arg427 : tensor<768x768xf32>
    %7071 = stablehlo.add %7068, %7070 : tensor<768x768xf32>
    %7072 = stablehlo.multiply %5025, %5025 : tensor<768xf32>
    %7073 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7074 = stablehlo.multiply %7073, %7072 : tensor<768xf32>
    %7075 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7076 = stablehlo.multiply %7075, %arg428 : tensor<768xf32>
    %7077 = stablehlo.add %7074, %7076 : tensor<768xf32>
    %7078 = stablehlo.multiply %5030, %5030 : tensor<768x768xf32>
    %7079 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7080 = stablehlo.multiply %7079, %7078 : tensor<768x768xf32>
    %7081 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7082 = stablehlo.multiply %7081, %arg429 : tensor<768x768xf32>
    %7083 = stablehlo.add %7080, %7082 : tensor<768x768xf32>
    %7084 = stablehlo.multiply %5035, %5035 : tensor<768xf32>
    %7085 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7086 = stablehlo.multiply %7085, %7084 : tensor<768xf32>
    %7087 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7088 = stablehlo.multiply %7087, %arg430 : tensor<768xf32>
    %7089 = stablehlo.add %7086, %7088 : tensor<768xf32>
    %7090 = stablehlo.multiply %5040, %5040 : tensor<768x768xf32>
    %7091 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7092 = stablehlo.multiply %7091, %7090 : tensor<768x768xf32>
    %7093 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7094 = stablehlo.multiply %7093, %arg431 : tensor<768x768xf32>
    %7095 = stablehlo.add %7092, %7094 : tensor<768x768xf32>
    %7096 = stablehlo.multiply %5045, %5045 : tensor<768xf32>
    %7097 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7098 = stablehlo.multiply %7097, %7096 : tensor<768xf32>
    %7099 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7100 = stablehlo.multiply %7099, %arg432 : tensor<768xf32>
    %7101 = stablehlo.add %7098, %7100 : tensor<768xf32>
    %7102 = stablehlo.multiply %5050, %5050 : tensor<768x768xf32>
    %7103 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7104 = stablehlo.multiply %7103, %7102 : tensor<768x768xf32>
    %7105 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7106 = stablehlo.multiply %7105, %arg433 : tensor<768x768xf32>
    %7107 = stablehlo.add %7104, %7106 : tensor<768x768xf32>
    %7108 = stablehlo.multiply %5055, %5055 : tensor<768xf32>
    %7109 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7110 = stablehlo.multiply %7109, %7108 : tensor<768xf32>
    %7111 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7112 = stablehlo.multiply %7111, %arg434 : tensor<768xf32>
    %7113 = stablehlo.add %7110, %7112 : tensor<768xf32>
    %7114 = stablehlo.multiply %5060, %5060 : tensor<768xf32>
    %7115 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7116 = stablehlo.multiply %7115, %7114 : tensor<768xf32>
    %7117 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7118 = stablehlo.multiply %7117, %arg435 : tensor<768xf32>
    %7119 = stablehlo.add %7116, %7118 : tensor<768xf32>
    %7120 = stablehlo.multiply %5065, %5065 : tensor<768xf32>
    %7121 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7122 = stablehlo.multiply %7121, %7120 : tensor<768xf32>
    %7123 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7124 = stablehlo.multiply %7123, %arg436 : tensor<768xf32>
    %7125 = stablehlo.add %7122, %7124 : tensor<768xf32>
    %7126 = stablehlo.multiply %5070, %5070 : tensor<3072x768xf32>
    %7127 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7128 = stablehlo.multiply %7127, %7126 : tensor<3072x768xf32>
    %7129 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7130 = stablehlo.multiply %7129, %arg437 : tensor<3072x768xf32>
    %7131 = stablehlo.add %7128, %7130 : tensor<3072x768xf32>
    %7132 = stablehlo.multiply %5075, %5075 : tensor<768xf32>
    %7133 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7134 = stablehlo.multiply %7133, %7132 : tensor<768xf32>
    %7135 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7136 = stablehlo.multiply %7135, %arg438 : tensor<768xf32>
    %7137 = stablehlo.add %7134, %7136 : tensor<768xf32>
    %7138 = stablehlo.multiply %5080, %5080 : tensor<768xf32>
    %7139 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7140 = stablehlo.multiply %7139, %7138 : tensor<768xf32>
    %7141 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7142 = stablehlo.multiply %7141, %arg439 : tensor<768xf32>
    %7143 = stablehlo.add %7140, %7142 : tensor<768xf32>
    %7144 = stablehlo.multiply %5085, %5085 : tensor<3072xf32>
    %7145 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7146 = stablehlo.multiply %7145, %7144 : tensor<3072xf32>
    %7147 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7148 = stablehlo.multiply %7147, %arg440 : tensor<3072xf32>
    %7149 = stablehlo.add %7146, %7148 : tensor<3072xf32>
    %7150 = stablehlo.multiply %5090, %5090 : tensor<768x3072xf32>
    %7151 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7152 = stablehlo.multiply %7151, %7150 : tensor<768x3072xf32>
    %7153 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7154 = stablehlo.multiply %7153, %arg441 : tensor<768x3072xf32>
    %7155 = stablehlo.add %7152, %7154 : tensor<768x3072xf32>
    %7156 = stablehlo.multiply %5095, %5095 : tensor<768xf32>
    %7157 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7158 = stablehlo.multiply %7157, %7156 : tensor<768xf32>
    %7159 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7160 = stablehlo.multiply %7159, %arg442 : tensor<768xf32>
    %7161 = stablehlo.add %7158, %7160 : tensor<768xf32>
    %7162 = stablehlo.multiply %5100, %5100 : tensor<768x768xf32>
    %7163 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7164 = stablehlo.multiply %7163, %7162 : tensor<768x768xf32>
    %7165 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7166 = stablehlo.multiply %7165, %arg443 : tensor<768x768xf32>
    %7167 = stablehlo.add %7164, %7166 : tensor<768x768xf32>
    %7168 = stablehlo.multiply %5105, %5105 : tensor<768xf32>
    %7169 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7170 = stablehlo.multiply %7169, %7168 : tensor<768xf32>
    %7171 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7172 = stablehlo.multiply %7171, %arg444 : tensor<768xf32>
    %7173 = stablehlo.add %7170, %7172 : tensor<768xf32>
    %7174 = stablehlo.multiply %5110, %5110 : tensor<768x768xf32>
    %7175 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7176 = stablehlo.multiply %7175, %7174 : tensor<768x768xf32>
    %7177 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7178 = stablehlo.multiply %7177, %arg445 : tensor<768x768xf32>
    %7179 = stablehlo.add %7176, %7178 : tensor<768x768xf32>
    %7180 = stablehlo.multiply %5115, %5115 : tensor<768xf32>
    %7181 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7182 = stablehlo.multiply %7181, %7180 : tensor<768xf32>
    %7183 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7184 = stablehlo.multiply %7183, %arg446 : tensor<768xf32>
    %7185 = stablehlo.add %7182, %7184 : tensor<768xf32>
    %7186 = stablehlo.multiply %5120, %5120 : tensor<768x768xf32>
    %7187 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7188 = stablehlo.multiply %7187, %7186 : tensor<768x768xf32>
    %7189 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7190 = stablehlo.multiply %7189, %arg447 : tensor<768x768xf32>
    %7191 = stablehlo.add %7188, %7190 : tensor<768x768xf32>
    %7192 = stablehlo.multiply %5125, %5125 : tensor<768xf32>
    %7193 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7194 = stablehlo.multiply %7193, %7192 : tensor<768xf32>
    %7195 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7196 = stablehlo.multiply %7195, %arg448 : tensor<768xf32>
    %7197 = stablehlo.add %7194, %7196 : tensor<768xf32>
    %7198 = stablehlo.multiply %5130, %5130 : tensor<768x768xf32>
    %7199 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7200 = stablehlo.multiply %7199, %7198 : tensor<768x768xf32>
    %7201 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7202 = stablehlo.multiply %7201, %arg449 : tensor<768x768xf32>
    %7203 = stablehlo.add %7200, %7202 : tensor<768x768xf32>
    %7204 = stablehlo.multiply %5135, %5135 : tensor<768xf32>
    %7205 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7206 = stablehlo.multiply %7205, %7204 : tensor<768xf32>
    %7207 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7208 = stablehlo.multiply %7207, %arg450 : tensor<768xf32>
    %7209 = stablehlo.add %7206, %7208 : tensor<768xf32>
    %7210 = stablehlo.multiply %5140, %5140 : tensor<768xf32>
    %7211 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7212 = stablehlo.multiply %7211, %7210 : tensor<768xf32>
    %7213 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7214 = stablehlo.multiply %7213, %arg451 : tensor<768xf32>
    %7215 = stablehlo.add %7212, %7214 : tensor<768xf32>
    %7216 = stablehlo.multiply %5145, %5145 : tensor<768xf32>
    %7217 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7218 = stablehlo.multiply %7217, %7216 : tensor<768xf32>
    %7219 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7220 = stablehlo.multiply %7219, %arg452 : tensor<768xf32>
    %7221 = stablehlo.add %7218, %7220 : tensor<768xf32>
    %7222 = stablehlo.multiply %5150, %5150 : tensor<3072x768xf32>
    %7223 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7224 = stablehlo.multiply %7223, %7222 : tensor<3072x768xf32>
    %7225 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7226 = stablehlo.multiply %7225, %arg453 : tensor<3072x768xf32>
    %7227 = stablehlo.add %7224, %7226 : tensor<3072x768xf32>
    %7228 = stablehlo.multiply %5155, %5155 : tensor<768xf32>
    %7229 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7230 = stablehlo.multiply %7229, %7228 : tensor<768xf32>
    %7231 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7232 = stablehlo.multiply %7231, %arg454 : tensor<768xf32>
    %7233 = stablehlo.add %7230, %7232 : tensor<768xf32>
    %7234 = stablehlo.multiply %5160, %5160 : tensor<768xf32>
    %7235 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7236 = stablehlo.multiply %7235, %7234 : tensor<768xf32>
    %7237 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7238 = stablehlo.multiply %7237, %arg455 : tensor<768xf32>
    %7239 = stablehlo.add %7236, %7238 : tensor<768xf32>
    %7240 = stablehlo.multiply %5165, %5165 : tensor<3072xf32>
    %7241 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7242 = stablehlo.multiply %7241, %7240 : tensor<3072xf32>
    %7243 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7244 = stablehlo.multiply %7243, %arg456 : tensor<3072xf32>
    %7245 = stablehlo.add %7242, %7244 : tensor<3072xf32>
    %7246 = stablehlo.multiply %5170, %5170 : tensor<768x3072xf32>
    %7247 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7248 = stablehlo.multiply %7247, %7246 : tensor<768x3072xf32>
    %7249 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7250 = stablehlo.multiply %7249, %arg457 : tensor<768x3072xf32>
    %7251 = stablehlo.add %7248, %7250 : tensor<768x3072xf32>
    %7252 = stablehlo.multiply %5175, %5175 : tensor<768xf32>
    %7253 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7254 = stablehlo.multiply %7253, %7252 : tensor<768xf32>
    %7255 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7256 = stablehlo.multiply %7255, %arg458 : tensor<768xf32>
    %7257 = stablehlo.add %7254, %7256 : tensor<768xf32>
    %7258 = stablehlo.multiply %5180, %5180 : tensor<768x768xf32>
    %7259 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7260 = stablehlo.multiply %7259, %7258 : tensor<768x768xf32>
    %7261 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7262 = stablehlo.multiply %7261, %arg459 : tensor<768x768xf32>
    %7263 = stablehlo.add %7260, %7262 : tensor<768x768xf32>
    %7264 = stablehlo.multiply %5185, %5185 : tensor<768xf32>
    %7265 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7266 = stablehlo.multiply %7265, %7264 : tensor<768xf32>
    %7267 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7268 = stablehlo.multiply %7267, %arg460 : tensor<768xf32>
    %7269 = stablehlo.add %7266, %7268 : tensor<768xf32>
    %7270 = stablehlo.multiply %5190, %5190 : tensor<768x768xf32>
    %7271 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7272 = stablehlo.multiply %7271, %7270 : tensor<768x768xf32>
    %7273 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7274 = stablehlo.multiply %7273, %arg461 : tensor<768x768xf32>
    %7275 = stablehlo.add %7272, %7274 : tensor<768x768xf32>
    %7276 = stablehlo.multiply %5195, %5195 : tensor<768xf32>
    %7277 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7278 = stablehlo.multiply %7277, %7276 : tensor<768xf32>
    %7279 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7280 = stablehlo.multiply %7279, %arg462 : tensor<768xf32>
    %7281 = stablehlo.add %7278, %7280 : tensor<768xf32>
    %7282 = stablehlo.multiply %5200, %5200 : tensor<768x768xf32>
    %7283 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7284 = stablehlo.multiply %7283, %7282 : tensor<768x768xf32>
    %7285 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7286 = stablehlo.multiply %7285, %arg463 : tensor<768x768xf32>
    %7287 = stablehlo.add %7284, %7286 : tensor<768x768xf32>
    %7288 = stablehlo.multiply %5205, %5205 : tensor<768xf32>
    %7289 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7290 = stablehlo.multiply %7289, %7288 : tensor<768xf32>
    %7291 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7292 = stablehlo.multiply %7291, %arg464 : tensor<768xf32>
    %7293 = stablehlo.add %7290, %7292 : tensor<768xf32>
    %7294 = stablehlo.multiply %5210, %5210 : tensor<768x768xf32>
    %7295 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7296 = stablehlo.multiply %7295, %7294 : tensor<768x768xf32>
    %7297 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7298 = stablehlo.multiply %7297, %arg465 : tensor<768x768xf32>
    %7299 = stablehlo.add %7296, %7298 : tensor<768x768xf32>
    %7300 = stablehlo.multiply %5215, %5215 : tensor<768xf32>
    %7301 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7302 = stablehlo.multiply %7301, %7300 : tensor<768xf32>
    %7303 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7304 = stablehlo.multiply %7303, %arg466 : tensor<768xf32>
    %7305 = stablehlo.add %7302, %7304 : tensor<768xf32>
    %7306 = stablehlo.multiply %5220, %5220 : tensor<768xf32>
    %7307 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7308 = stablehlo.multiply %7307, %7306 : tensor<768xf32>
    %7309 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7310 = stablehlo.multiply %7309, %arg467 : tensor<768xf32>
    %7311 = stablehlo.add %7308, %7310 : tensor<768xf32>
    %7312 = stablehlo.multiply %5225, %5225 : tensor<768xf32>
    %7313 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7314 = stablehlo.multiply %7313, %7312 : tensor<768xf32>
    %7315 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7316 = stablehlo.multiply %7315, %arg468 : tensor<768xf32>
    %7317 = stablehlo.add %7314, %7316 : tensor<768xf32>
    %7318 = stablehlo.multiply %5230, %5230 : tensor<3072x768xf32>
    %7319 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7320 = stablehlo.multiply %7319, %7318 : tensor<3072x768xf32>
    %7321 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7322 = stablehlo.multiply %7321, %arg469 : tensor<3072x768xf32>
    %7323 = stablehlo.add %7320, %7322 : tensor<3072x768xf32>
    %7324 = stablehlo.multiply %5235, %5235 : tensor<768xf32>
    %7325 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7326 = stablehlo.multiply %7325, %7324 : tensor<768xf32>
    %7327 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7328 = stablehlo.multiply %7327, %arg470 : tensor<768xf32>
    %7329 = stablehlo.add %7326, %7328 : tensor<768xf32>
    %7330 = stablehlo.multiply %5240, %5240 : tensor<768xf32>
    %7331 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7332 = stablehlo.multiply %7331, %7330 : tensor<768xf32>
    %7333 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7334 = stablehlo.multiply %7333, %arg471 : tensor<768xf32>
    %7335 = stablehlo.add %7332, %7334 : tensor<768xf32>
    %7336 = stablehlo.multiply %5245, %5245 : tensor<3072xf32>
    %7337 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7338 = stablehlo.multiply %7337, %7336 : tensor<3072xf32>
    %7339 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7340 = stablehlo.multiply %7339, %arg472 : tensor<3072xf32>
    %7341 = stablehlo.add %7338, %7340 : tensor<3072xf32>
    %7342 = stablehlo.multiply %5250, %5250 : tensor<768x3072xf32>
    %7343 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7344 = stablehlo.multiply %7343, %7342 : tensor<768x3072xf32>
    %7345 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7346 = stablehlo.multiply %7345, %arg473 : tensor<768x3072xf32>
    %7347 = stablehlo.add %7344, %7346 : tensor<768x3072xf32>
    %7348 = stablehlo.multiply %5255, %5255 : tensor<768xf32>
    %7349 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7350 = stablehlo.multiply %7349, %7348 : tensor<768xf32>
    %7351 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7352 = stablehlo.multiply %7351, %arg474 : tensor<768xf32>
    %7353 = stablehlo.add %7350, %7352 : tensor<768xf32>
    %7354 = stablehlo.multiply %5260, %5260 : tensor<768x768xf32>
    %7355 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7356 = stablehlo.multiply %7355, %7354 : tensor<768x768xf32>
    %7357 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7358 = stablehlo.multiply %7357, %arg475 : tensor<768x768xf32>
    %7359 = stablehlo.add %7356, %7358 : tensor<768x768xf32>
    %7360 = stablehlo.multiply %5265, %5265 : tensor<768xf32>
    %7361 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7362 = stablehlo.multiply %7361, %7360 : tensor<768xf32>
    %7363 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7364 = stablehlo.multiply %7363, %arg476 : tensor<768xf32>
    %7365 = stablehlo.add %7362, %7364 : tensor<768xf32>
    %7366 = stablehlo.multiply %5270, %5270 : tensor<768x768xf32>
    %7367 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7368 = stablehlo.multiply %7367, %7366 : tensor<768x768xf32>
    %7369 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7370 = stablehlo.multiply %7369, %arg477 : tensor<768x768xf32>
    %7371 = stablehlo.add %7368, %7370 : tensor<768x768xf32>
    %7372 = stablehlo.multiply %5275, %5275 : tensor<768xf32>
    %7373 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7374 = stablehlo.multiply %7373, %7372 : tensor<768xf32>
    %7375 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7376 = stablehlo.multiply %7375, %arg478 : tensor<768xf32>
    %7377 = stablehlo.add %7374, %7376 : tensor<768xf32>
    %7378 = stablehlo.multiply %5280, %5280 : tensor<768x768xf32>
    %7379 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7380 = stablehlo.multiply %7379, %7378 : tensor<768x768xf32>
    %7381 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7382 = stablehlo.multiply %7381, %arg479 : tensor<768x768xf32>
    %7383 = stablehlo.add %7380, %7382 : tensor<768x768xf32>
    %7384 = stablehlo.multiply %5285, %5285 : tensor<768xf32>
    %7385 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7386 = stablehlo.multiply %7385, %7384 : tensor<768xf32>
    %7387 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7388 = stablehlo.multiply %7387, %arg480 : tensor<768xf32>
    %7389 = stablehlo.add %7386, %7388 : tensor<768xf32>
    %7390 = stablehlo.multiply %5290, %5290 : tensor<768x768xf32>
    %7391 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7392 = stablehlo.multiply %7391, %7390 : tensor<768x768xf32>
    %7393 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7394 = stablehlo.multiply %7393, %arg481 : tensor<768x768xf32>
    %7395 = stablehlo.add %7392, %7394 : tensor<768x768xf32>
    %7396 = stablehlo.multiply %5295, %5295 : tensor<768xf32>
    %7397 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7398 = stablehlo.multiply %7397, %7396 : tensor<768xf32>
    %7399 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7400 = stablehlo.multiply %7399, %arg482 : tensor<768xf32>
    %7401 = stablehlo.add %7398, %7400 : tensor<768xf32>
    %7402 = stablehlo.multiply %5300, %5300 : tensor<768xf32>
    %7403 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7404 = stablehlo.multiply %7403, %7402 : tensor<768xf32>
    %7405 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7406 = stablehlo.multiply %7405, %arg483 : tensor<768xf32>
    %7407 = stablehlo.add %7404, %7406 : tensor<768xf32>
    %7408 = stablehlo.multiply %5305, %5305 : tensor<768xf32>
    %7409 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7410 = stablehlo.multiply %7409, %7408 : tensor<768xf32>
    %7411 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7412 = stablehlo.multiply %7411, %arg484 : tensor<768xf32>
    %7413 = stablehlo.add %7410, %7412 : tensor<768xf32>
    %7414 = stablehlo.multiply %5310, %5310 : tensor<3072x768xf32>
    %7415 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7416 = stablehlo.multiply %7415, %7414 : tensor<3072x768xf32>
    %7417 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7418 = stablehlo.multiply %7417, %arg485 : tensor<3072x768xf32>
    %7419 = stablehlo.add %7416, %7418 : tensor<3072x768xf32>
    %7420 = stablehlo.multiply %5315, %5315 : tensor<768xf32>
    %7421 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7422 = stablehlo.multiply %7421, %7420 : tensor<768xf32>
    %7423 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7424 = stablehlo.multiply %7423, %arg486 : tensor<768xf32>
    %7425 = stablehlo.add %7422, %7424 : tensor<768xf32>
    %7426 = stablehlo.multiply %5320, %5320 : tensor<768xf32>
    %7427 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7428 = stablehlo.multiply %7427, %7426 : tensor<768xf32>
    %7429 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7430 = stablehlo.multiply %7429, %arg487 : tensor<768xf32>
    %7431 = stablehlo.add %7428, %7430 : tensor<768xf32>
    %7432 = stablehlo.multiply %5325, %5325 : tensor<3072xf32>
    %7433 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7434 = stablehlo.multiply %7433, %7432 : tensor<3072xf32>
    %7435 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7436 = stablehlo.multiply %7435, %arg488 : tensor<3072xf32>
    %7437 = stablehlo.add %7434, %7436 : tensor<3072xf32>
    %7438 = stablehlo.multiply %5330, %5330 : tensor<768x3072xf32>
    %7439 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7440 = stablehlo.multiply %7439, %7438 : tensor<768x3072xf32>
    %7441 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7442 = stablehlo.multiply %7441, %arg489 : tensor<768x3072xf32>
    %7443 = stablehlo.add %7440, %7442 : tensor<768x3072xf32>
    %7444 = stablehlo.multiply %5335, %5335 : tensor<768xf32>
    %7445 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7446 = stablehlo.multiply %7445, %7444 : tensor<768xf32>
    %7447 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7448 = stablehlo.multiply %7447, %arg490 : tensor<768xf32>
    %7449 = stablehlo.add %7446, %7448 : tensor<768xf32>
    %7450 = stablehlo.multiply %5340, %5340 : tensor<768x768xf32>
    %7451 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7452 = stablehlo.multiply %7451, %7450 : tensor<768x768xf32>
    %7453 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7454 = stablehlo.multiply %7453, %arg491 : tensor<768x768xf32>
    %7455 = stablehlo.add %7452, %7454 : tensor<768x768xf32>
    %7456 = stablehlo.multiply %5345, %5345 : tensor<768xf32>
    %7457 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7458 = stablehlo.multiply %7457, %7456 : tensor<768xf32>
    %7459 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7460 = stablehlo.multiply %7459, %arg492 : tensor<768xf32>
    %7461 = stablehlo.add %7458, %7460 : tensor<768xf32>
    %7462 = stablehlo.multiply %5350, %5350 : tensor<768x768xf32>
    %7463 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7464 = stablehlo.multiply %7463, %7462 : tensor<768x768xf32>
    %7465 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7466 = stablehlo.multiply %7465, %arg493 : tensor<768x768xf32>
    %7467 = stablehlo.add %7464, %7466 : tensor<768x768xf32>
    %7468 = stablehlo.multiply %5355, %5355 : tensor<768xf32>
    %7469 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7470 = stablehlo.multiply %7469, %7468 : tensor<768xf32>
    %7471 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7472 = stablehlo.multiply %7471, %arg494 : tensor<768xf32>
    %7473 = stablehlo.add %7470, %7472 : tensor<768xf32>
    %7474 = stablehlo.multiply %5360, %5360 : tensor<768x768xf32>
    %7475 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7476 = stablehlo.multiply %7475, %7474 : tensor<768x768xf32>
    %7477 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7478 = stablehlo.multiply %7477, %arg495 : tensor<768x768xf32>
    %7479 = stablehlo.add %7476, %7478 : tensor<768x768xf32>
    %7480 = stablehlo.multiply %5365, %5365 : tensor<768xf32>
    %7481 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7482 = stablehlo.multiply %7481, %7480 : tensor<768xf32>
    %7483 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7484 = stablehlo.multiply %7483, %arg496 : tensor<768xf32>
    %7485 = stablehlo.add %7482, %7484 : tensor<768xf32>
    %7486 = stablehlo.multiply %5370, %5370 : tensor<768x768xf32>
    %7487 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7488 = stablehlo.multiply %7487, %7486 : tensor<768x768xf32>
    %7489 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7490 = stablehlo.multiply %7489, %arg497 : tensor<768x768xf32>
    %7491 = stablehlo.add %7488, %7490 : tensor<768x768xf32>
    %7492 = stablehlo.multiply %5375, %5375 : tensor<768xf32>
    %7493 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7494 = stablehlo.multiply %7493, %7492 : tensor<768xf32>
    %7495 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7496 = stablehlo.multiply %7495, %arg498 : tensor<768xf32>
    %7497 = stablehlo.add %7494, %7496 : tensor<768xf32>
    %7498 = stablehlo.multiply %5380, %5380 : tensor<768xf32>
    %7499 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7500 = stablehlo.multiply %7499, %7498 : tensor<768xf32>
    %7501 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7502 = stablehlo.multiply %7501, %arg499 : tensor<768xf32>
    %7503 = stablehlo.add %7500, %7502 : tensor<768xf32>
    %7504 = stablehlo.multiply %5385, %5385 : tensor<768xf32>
    %7505 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7506 = stablehlo.multiply %7505, %7504 : tensor<768xf32>
    %7507 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7508 = stablehlo.multiply %7507, %arg500 : tensor<768xf32>
    %7509 = stablehlo.add %7506, %7508 : tensor<768xf32>
    %7510 = stablehlo.multiply %5390, %5390 : tensor<3072x768xf32>
    %7511 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7512 = stablehlo.multiply %7511, %7510 : tensor<3072x768xf32>
    %7513 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7514 = stablehlo.multiply %7513, %arg501 : tensor<3072x768xf32>
    %7515 = stablehlo.add %7512, %7514 : tensor<3072x768xf32>
    %7516 = stablehlo.multiply %5395, %5395 : tensor<768xf32>
    %7517 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7518 = stablehlo.multiply %7517, %7516 : tensor<768xf32>
    %7519 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7520 = stablehlo.multiply %7519, %arg502 : tensor<768xf32>
    %7521 = stablehlo.add %7518, %7520 : tensor<768xf32>
    %7522 = stablehlo.multiply %5400, %5400 : tensor<768xf32>
    %7523 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7524 = stablehlo.multiply %7523, %7522 : tensor<768xf32>
    %7525 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7526 = stablehlo.multiply %7525, %arg503 : tensor<768xf32>
    %7527 = stablehlo.add %7524, %7526 : tensor<768xf32>
    %7528 = stablehlo.multiply %5405, %5405 : tensor<3072xf32>
    %7529 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7530 = stablehlo.multiply %7529, %7528 : tensor<3072xf32>
    %7531 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7532 = stablehlo.multiply %7531, %arg504 : tensor<3072xf32>
    %7533 = stablehlo.add %7530, %7532 : tensor<3072xf32>
    %7534 = stablehlo.multiply %5410, %5410 : tensor<768x3072xf32>
    %7535 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7536 = stablehlo.multiply %7535, %7534 : tensor<768x3072xf32>
    %7537 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7538 = stablehlo.multiply %7537, %arg505 : tensor<768x3072xf32>
    %7539 = stablehlo.add %7536, %7538 : tensor<768x3072xf32>
    %7540 = stablehlo.multiply %5415, %5415 : tensor<768xf32>
    %7541 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7542 = stablehlo.multiply %7541, %7540 : tensor<768xf32>
    %7543 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7544 = stablehlo.multiply %7543, %arg506 : tensor<768xf32>
    %7545 = stablehlo.add %7542, %7544 : tensor<768xf32>
    %7546 = stablehlo.multiply %5420, %5420 : tensor<768x768xf32>
    %7547 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7548 = stablehlo.multiply %7547, %7546 : tensor<768x768xf32>
    %7549 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7550 = stablehlo.multiply %7549, %arg507 : tensor<768x768xf32>
    %7551 = stablehlo.add %7548, %7550 : tensor<768x768xf32>
    %7552 = stablehlo.multiply %5425, %5425 : tensor<768xf32>
    %7553 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7554 = stablehlo.multiply %7553, %7552 : tensor<768xf32>
    %7555 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7556 = stablehlo.multiply %7555, %arg508 : tensor<768xf32>
    %7557 = stablehlo.add %7554, %7556 : tensor<768xf32>
    %7558 = stablehlo.multiply %5430, %5430 : tensor<768x768xf32>
    %7559 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7560 = stablehlo.multiply %7559, %7558 : tensor<768x768xf32>
    %7561 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7562 = stablehlo.multiply %7561, %arg509 : tensor<768x768xf32>
    %7563 = stablehlo.add %7560, %7562 : tensor<768x768xf32>
    %7564 = stablehlo.multiply %5435, %5435 : tensor<768xf32>
    %7565 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7566 = stablehlo.multiply %7565, %7564 : tensor<768xf32>
    %7567 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7568 = stablehlo.multiply %7567, %arg510 : tensor<768xf32>
    %7569 = stablehlo.add %7566, %7568 : tensor<768xf32>
    %7570 = stablehlo.multiply %5440, %5440 : tensor<768x768xf32>
    %7571 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7572 = stablehlo.multiply %7571, %7570 : tensor<768x768xf32>
    %7573 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7574 = stablehlo.multiply %7573, %arg511 : tensor<768x768xf32>
    %7575 = stablehlo.add %7572, %7574 : tensor<768x768xf32>
    %7576 = stablehlo.multiply %5445, %5445 : tensor<768xf32>
    %7577 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7578 = stablehlo.multiply %7577, %7576 : tensor<768xf32>
    %7579 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7580 = stablehlo.multiply %7579, %arg512 : tensor<768xf32>
    %7581 = stablehlo.add %7578, %7580 : tensor<768xf32>
    %7582 = stablehlo.multiply %5450, %5450 : tensor<768x768xf32>
    %7583 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7584 = stablehlo.multiply %7583, %7582 : tensor<768x768xf32>
    %7585 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7586 = stablehlo.multiply %7585, %arg513 : tensor<768x768xf32>
    %7587 = stablehlo.add %7584, %7586 : tensor<768x768xf32>
    %7588 = stablehlo.multiply %5455, %5455 : tensor<768xf32>
    %7589 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7590 = stablehlo.multiply %7589, %7588 : tensor<768xf32>
    %7591 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7592 = stablehlo.multiply %7591, %arg514 : tensor<768xf32>
    %7593 = stablehlo.add %7590, %7592 : tensor<768xf32>
    %7594 = stablehlo.multiply %5460, %5460 : tensor<768xf32>
    %7595 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7596 = stablehlo.multiply %7595, %7594 : tensor<768xf32>
    %7597 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7598 = stablehlo.multiply %7597, %arg515 : tensor<768xf32>
    %7599 = stablehlo.add %7596, %7598 : tensor<768xf32>
    %7600 = stablehlo.multiply %5465, %5465 : tensor<768xf32>
    %7601 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7602 = stablehlo.multiply %7601, %7600 : tensor<768xf32>
    %7603 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7604 = stablehlo.multiply %7603, %arg516 : tensor<768xf32>
    %7605 = stablehlo.add %7602, %7604 : tensor<768xf32>
    %7606 = stablehlo.multiply %5470, %5470 : tensor<3072x768xf32>
    %7607 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7608 = stablehlo.multiply %7607, %7606 : tensor<3072x768xf32>
    %7609 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7610 = stablehlo.multiply %7609, %arg517 : tensor<3072x768xf32>
    %7611 = stablehlo.add %7608, %7610 : tensor<3072x768xf32>
    %7612 = stablehlo.multiply %5475, %5475 : tensor<768xf32>
    %7613 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7614 = stablehlo.multiply %7613, %7612 : tensor<768xf32>
    %7615 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7616 = stablehlo.multiply %7615, %arg518 : tensor<768xf32>
    %7617 = stablehlo.add %7614, %7616 : tensor<768xf32>
    %7618 = stablehlo.multiply %5480, %5480 : tensor<768xf32>
    %7619 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7620 = stablehlo.multiply %7619, %7618 : tensor<768xf32>
    %7621 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7622 = stablehlo.multiply %7621, %arg519 : tensor<768xf32>
    %7623 = stablehlo.add %7620, %7622 : tensor<768xf32>
    %7624 = stablehlo.multiply %5485, %5485 : tensor<3072xf32>
    %7625 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7626 = stablehlo.multiply %7625, %7624 : tensor<3072xf32>
    %7627 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7628 = stablehlo.multiply %7627, %arg520 : tensor<3072xf32>
    %7629 = stablehlo.add %7626, %7628 : tensor<3072xf32>
    %7630 = stablehlo.multiply %5490, %5490 : tensor<768x3072xf32>
    %7631 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7632 = stablehlo.multiply %7631, %7630 : tensor<768x3072xf32>
    %7633 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7634 = stablehlo.multiply %7633, %arg521 : tensor<768x3072xf32>
    %7635 = stablehlo.add %7632, %7634 : tensor<768x3072xf32>
    %7636 = stablehlo.multiply %5495, %5495 : tensor<768xf32>
    %7637 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7638 = stablehlo.multiply %7637, %7636 : tensor<768xf32>
    %7639 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7640 = stablehlo.multiply %7639, %arg522 : tensor<768xf32>
    %7641 = stablehlo.add %7638, %7640 : tensor<768xf32>
    %7642 = stablehlo.multiply %5500, %5500 : tensor<768x768xf32>
    %7643 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7644 = stablehlo.multiply %7643, %7642 : tensor<768x768xf32>
    %7645 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7646 = stablehlo.multiply %7645, %arg523 : tensor<768x768xf32>
    %7647 = stablehlo.add %7644, %7646 : tensor<768x768xf32>
    %7648 = stablehlo.multiply %5505, %5505 : tensor<768xf32>
    %7649 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7650 = stablehlo.multiply %7649, %7648 : tensor<768xf32>
    %7651 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7652 = stablehlo.multiply %7651, %arg524 : tensor<768xf32>
    %7653 = stablehlo.add %7650, %7652 : tensor<768xf32>
    %7654 = stablehlo.multiply %5510, %5510 : tensor<768x768xf32>
    %7655 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7656 = stablehlo.multiply %7655, %7654 : tensor<768x768xf32>
    %7657 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7658 = stablehlo.multiply %7657, %arg525 : tensor<768x768xf32>
    %7659 = stablehlo.add %7656, %7658 : tensor<768x768xf32>
    %7660 = stablehlo.multiply %5515, %5515 : tensor<768xf32>
    %7661 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7662 = stablehlo.multiply %7661, %7660 : tensor<768xf32>
    %7663 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7664 = stablehlo.multiply %7663, %arg526 : tensor<768xf32>
    %7665 = stablehlo.add %7662, %7664 : tensor<768xf32>
    %7666 = stablehlo.multiply %5520, %5520 : tensor<768x768xf32>
    %7667 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7668 = stablehlo.multiply %7667, %7666 : tensor<768x768xf32>
    %7669 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7670 = stablehlo.multiply %7669, %arg527 : tensor<768x768xf32>
    %7671 = stablehlo.add %7668, %7670 : tensor<768x768xf32>
    %7672 = stablehlo.multiply %5525, %5525 : tensor<768xf32>
    %7673 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7674 = stablehlo.multiply %7673, %7672 : tensor<768xf32>
    %7675 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7676 = stablehlo.multiply %7675, %arg528 : tensor<768xf32>
    %7677 = stablehlo.add %7674, %7676 : tensor<768xf32>
    %7678 = stablehlo.multiply %5530, %5530 : tensor<768x768xf32>
    %7679 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7680 = stablehlo.multiply %7679, %7678 : tensor<768x768xf32>
    %7681 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7682 = stablehlo.multiply %7681, %arg529 : tensor<768x768xf32>
    %7683 = stablehlo.add %7680, %7682 : tensor<768x768xf32>
    %7684 = stablehlo.multiply %5535, %5535 : tensor<768xf32>
    %7685 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7686 = stablehlo.multiply %7685, %7684 : tensor<768xf32>
    %7687 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7688 = stablehlo.multiply %7687, %arg530 : tensor<768xf32>
    %7689 = stablehlo.add %7686, %7688 : tensor<768xf32>
    %7690 = stablehlo.multiply %5540, %5540 : tensor<768xf32>
    %7691 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7692 = stablehlo.multiply %7691, %7690 : tensor<768xf32>
    %7693 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7694 = stablehlo.multiply %7693, %arg531 : tensor<768xf32>
    %7695 = stablehlo.add %7692, %7694 : tensor<768xf32>
    %7696 = stablehlo.multiply %5545, %5545 : tensor<768xf32>
    %7697 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7698 = stablehlo.multiply %7697, %7696 : tensor<768xf32>
    %7699 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7700 = stablehlo.multiply %7699, %arg532 : tensor<768xf32>
    %7701 = stablehlo.add %7698, %7700 : tensor<768xf32>
    %7702 = stablehlo.multiply %5550, %5550 : tensor<3072x768xf32>
    %7703 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7704 = stablehlo.multiply %7703, %7702 : tensor<3072x768xf32>
    %7705 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7706 = stablehlo.multiply %7705, %arg533 : tensor<3072x768xf32>
    %7707 = stablehlo.add %7704, %7706 : tensor<3072x768xf32>
    %7708 = stablehlo.multiply %5555, %5555 : tensor<768xf32>
    %7709 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7710 = stablehlo.multiply %7709, %7708 : tensor<768xf32>
    %7711 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7712 = stablehlo.multiply %7711, %arg534 : tensor<768xf32>
    %7713 = stablehlo.add %7710, %7712 : tensor<768xf32>
    %7714 = stablehlo.multiply %5560, %5560 : tensor<768xf32>
    %7715 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7716 = stablehlo.multiply %7715, %7714 : tensor<768xf32>
    %7717 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7718 = stablehlo.multiply %7717, %arg535 : tensor<768xf32>
    %7719 = stablehlo.add %7716, %7718 : tensor<768xf32>
    %7720 = stablehlo.multiply %5565, %5565 : tensor<3072xf32>
    %7721 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7722 = stablehlo.multiply %7721, %7720 : tensor<3072xf32>
    %7723 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7724 = stablehlo.multiply %7723, %arg536 : tensor<3072xf32>
    %7725 = stablehlo.add %7722, %7724 : tensor<3072xf32>
    %7726 = stablehlo.multiply %5570, %5570 : tensor<768x3072xf32>
    %7727 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7728 = stablehlo.multiply %7727, %7726 : tensor<768x3072xf32>
    %7729 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7730 = stablehlo.multiply %7729, %arg537 : tensor<768x3072xf32>
    %7731 = stablehlo.add %7728, %7730 : tensor<768x3072xf32>
    %7732 = stablehlo.multiply %5575, %5575 : tensor<768xf32>
    %7733 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7734 = stablehlo.multiply %7733, %7732 : tensor<768xf32>
    %7735 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7736 = stablehlo.multiply %7735, %arg538 : tensor<768xf32>
    %7737 = stablehlo.add %7734, %7736 : tensor<768xf32>
    %7738 = stablehlo.multiply %5580, %5580 : tensor<768x768xf32>
    %7739 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7740 = stablehlo.multiply %7739, %7738 : tensor<768x768xf32>
    %7741 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7742 = stablehlo.multiply %7741, %arg539 : tensor<768x768xf32>
    %7743 = stablehlo.add %7740, %7742 : tensor<768x768xf32>
    %7744 = stablehlo.multiply %5585, %5585 : tensor<768xf32>
    %7745 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7746 = stablehlo.multiply %7745, %7744 : tensor<768xf32>
    %7747 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7748 = stablehlo.multiply %7747, %arg540 : tensor<768xf32>
    %7749 = stablehlo.add %7746, %7748 : tensor<768xf32>
    %7750 = stablehlo.multiply %5590, %5590 : tensor<768x768xf32>
    %7751 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7752 = stablehlo.multiply %7751, %7750 : tensor<768x768xf32>
    %7753 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7754 = stablehlo.multiply %7753, %arg541 : tensor<768x768xf32>
    %7755 = stablehlo.add %7752, %7754 : tensor<768x768xf32>
    %7756 = stablehlo.multiply %5595, %5595 : tensor<768xf32>
    %7757 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7758 = stablehlo.multiply %7757, %7756 : tensor<768xf32>
    %7759 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7760 = stablehlo.multiply %7759, %arg542 : tensor<768xf32>
    %7761 = stablehlo.add %7758, %7760 : tensor<768xf32>
    %7762 = stablehlo.multiply %5600, %5600 : tensor<768x768xf32>
    %7763 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7764 = stablehlo.multiply %7763, %7762 : tensor<768x768xf32>
    %7765 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7766 = stablehlo.multiply %7765, %arg543 : tensor<768x768xf32>
    %7767 = stablehlo.add %7764, %7766 : tensor<768x768xf32>
    %7768 = stablehlo.multiply %5605, %5605 : tensor<768xf32>
    %7769 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7770 = stablehlo.multiply %7769, %7768 : tensor<768xf32>
    %7771 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7772 = stablehlo.multiply %7771, %arg544 : tensor<768xf32>
    %7773 = stablehlo.add %7770, %7772 : tensor<768xf32>
    %7774 = stablehlo.multiply %5610, %5610 : tensor<768x768xf32>
    %7775 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7776 = stablehlo.multiply %7775, %7774 : tensor<768x768xf32>
    %7777 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7778 = stablehlo.multiply %7777, %arg545 : tensor<768x768xf32>
    %7779 = stablehlo.add %7776, %7778 : tensor<768x768xf32>
    %7780 = stablehlo.multiply %5615, %5615 : tensor<768xf32>
    %7781 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7782 = stablehlo.multiply %7781, %7780 : tensor<768xf32>
    %7783 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7784 = stablehlo.multiply %7783, %arg546 : tensor<768xf32>
    %7785 = stablehlo.add %7782, %7784 : tensor<768xf32>
    %7786 = stablehlo.multiply %5620, %5620 : tensor<768xf32>
    %7787 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7788 = stablehlo.multiply %7787, %7786 : tensor<768xf32>
    %7789 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7790 = stablehlo.multiply %7789, %arg547 : tensor<768xf32>
    %7791 = stablehlo.add %7788, %7790 : tensor<768xf32>
    %7792 = stablehlo.multiply %5625, %5625 : tensor<768xf32>
    %7793 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7794 = stablehlo.multiply %7793, %7792 : tensor<768xf32>
    %7795 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7796 = stablehlo.multiply %7795, %arg548 : tensor<768xf32>
    %7797 = stablehlo.add %7794, %7796 : tensor<768xf32>
    %7798 = stablehlo.multiply %5630, %5630 : tensor<3072x768xf32>
    %7799 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7800 = stablehlo.multiply %7799, %7798 : tensor<3072x768xf32>
    %7801 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7802 = stablehlo.multiply %7801, %arg549 : tensor<3072x768xf32>
    %7803 = stablehlo.add %7800, %7802 : tensor<3072x768xf32>
    %7804 = stablehlo.multiply %5635, %5635 : tensor<768xf32>
    %7805 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7806 = stablehlo.multiply %7805, %7804 : tensor<768xf32>
    %7807 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7808 = stablehlo.multiply %7807, %arg550 : tensor<768xf32>
    %7809 = stablehlo.add %7806, %7808 : tensor<768xf32>
    %7810 = stablehlo.multiply %5640, %5640 : tensor<768xf32>
    %7811 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7812 = stablehlo.multiply %7811, %7810 : tensor<768xf32>
    %7813 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7814 = stablehlo.multiply %7813, %arg551 : tensor<768xf32>
    %7815 = stablehlo.add %7812, %7814 : tensor<768xf32>
    %7816 = stablehlo.multiply %5645, %5645 : tensor<3072xf32>
    %7817 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7818 = stablehlo.multiply %7817, %7816 : tensor<3072xf32>
    %7819 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7820 = stablehlo.multiply %7819, %arg552 : tensor<3072xf32>
    %7821 = stablehlo.add %7818, %7820 : tensor<3072xf32>
    %7822 = stablehlo.multiply %5650, %5650 : tensor<768x3072xf32>
    %7823 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7824 = stablehlo.multiply %7823, %7822 : tensor<768x3072xf32>
    %7825 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7826 = stablehlo.multiply %7825, %arg553 : tensor<768x3072xf32>
    %7827 = stablehlo.add %7824, %7826 : tensor<768x3072xf32>
    %7828 = stablehlo.multiply %5655, %5655 : tensor<768xf32>
    %7829 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7830 = stablehlo.multiply %7829, %7828 : tensor<768xf32>
    %7831 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7832 = stablehlo.multiply %7831, %arg554 : tensor<768xf32>
    %7833 = stablehlo.add %7830, %7832 : tensor<768xf32>
    %7834 = stablehlo.multiply %5660, %5660 : tensor<768x768xf32>
    %7835 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7836 = stablehlo.multiply %7835, %7834 : tensor<768x768xf32>
    %7837 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7838 = stablehlo.multiply %7837, %arg555 : tensor<768x768xf32>
    %7839 = stablehlo.add %7836, %7838 : tensor<768x768xf32>
    %7840 = stablehlo.multiply %5665, %5665 : tensor<768xf32>
    %7841 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7842 = stablehlo.multiply %7841, %7840 : tensor<768xf32>
    %7843 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7844 = stablehlo.multiply %7843, %arg556 : tensor<768xf32>
    %7845 = stablehlo.add %7842, %7844 : tensor<768xf32>
    %7846 = stablehlo.multiply %5670, %5670 : tensor<768x768xf32>
    %7847 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7848 = stablehlo.multiply %7847, %7846 : tensor<768x768xf32>
    %7849 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7850 = stablehlo.multiply %7849, %arg557 : tensor<768x768xf32>
    %7851 = stablehlo.add %7848, %7850 : tensor<768x768xf32>
    %7852 = stablehlo.multiply %5675, %5675 : tensor<768xf32>
    %7853 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7854 = stablehlo.multiply %7853, %7852 : tensor<768xf32>
    %7855 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7856 = stablehlo.multiply %7855, %arg558 : tensor<768xf32>
    %7857 = stablehlo.add %7854, %7856 : tensor<768xf32>
    %7858 = stablehlo.multiply %5680, %5680 : tensor<768x768xf32>
    %7859 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7860 = stablehlo.multiply %7859, %7858 : tensor<768x768xf32>
    %7861 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7862 = stablehlo.multiply %7861, %arg559 : tensor<768x768xf32>
    %7863 = stablehlo.add %7860, %7862 : tensor<768x768xf32>
    %7864 = stablehlo.multiply %5685, %5685 : tensor<768xf32>
    %7865 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7866 = stablehlo.multiply %7865, %7864 : tensor<768xf32>
    %7867 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7868 = stablehlo.multiply %7867, %arg560 : tensor<768xf32>
    %7869 = stablehlo.add %7866, %7868 : tensor<768xf32>
    %7870 = stablehlo.multiply %5690, %5690 : tensor<768x768xf32>
    %7871 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7872 = stablehlo.multiply %7871, %7870 : tensor<768x768xf32>
    %7873 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7874 = stablehlo.multiply %7873, %arg561 : tensor<768x768xf32>
    %7875 = stablehlo.add %7872, %7874 : tensor<768x768xf32>
    %7876 = stablehlo.multiply %5695, %5695 : tensor<768xf32>
    %7877 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7878 = stablehlo.multiply %7877, %7876 : tensor<768xf32>
    %7879 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7880 = stablehlo.multiply %7879, %arg562 : tensor<768xf32>
    %7881 = stablehlo.add %7878, %7880 : tensor<768xf32>
    %7882 = stablehlo.multiply %5700, %5700 : tensor<768xf32>
    %7883 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7884 = stablehlo.multiply %7883, %7882 : tensor<768xf32>
    %7885 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7886 = stablehlo.multiply %7885, %arg563 : tensor<768xf32>
    %7887 = stablehlo.add %7884, %7886 : tensor<768xf32>
    %7888 = stablehlo.multiply %5705, %5705 : tensor<768xf32>
    %7889 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7890 = stablehlo.multiply %7889, %7888 : tensor<768xf32>
    %7891 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7892 = stablehlo.multiply %7891, %arg564 : tensor<768xf32>
    %7893 = stablehlo.add %7890, %7892 : tensor<768xf32>
    %7894 = stablehlo.multiply %5710, %5710 : tensor<3072x768xf32>
    %7895 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7896 = stablehlo.multiply %7895, %7894 : tensor<3072x768xf32>
    %7897 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7898 = stablehlo.multiply %7897, %arg565 : tensor<3072x768xf32>
    %7899 = stablehlo.add %7896, %7898 : tensor<3072x768xf32>
    %7900 = stablehlo.multiply %5715, %5715 : tensor<768xf32>
    %7901 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7902 = stablehlo.multiply %7901, %7900 : tensor<768xf32>
    %7903 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7904 = stablehlo.multiply %7903, %arg566 : tensor<768xf32>
    %7905 = stablehlo.add %7902, %7904 : tensor<768xf32>
    %7906 = stablehlo.multiply %5720, %5720 : tensor<768xf32>
    %7907 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7908 = stablehlo.multiply %7907, %7906 : tensor<768xf32>
    %7909 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7910 = stablehlo.multiply %7909, %arg567 : tensor<768xf32>
    %7911 = stablehlo.add %7908, %7910 : tensor<768xf32>
    %7912 = stablehlo.multiply %5725, %5725 : tensor<3072xf32>
    %7913 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7914 = stablehlo.multiply %7913, %7912 : tensor<3072xf32>
    %7915 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7916 = stablehlo.multiply %7915, %arg568 : tensor<3072xf32>
    %7917 = stablehlo.add %7914, %7916 : tensor<3072xf32>
    %7918 = stablehlo.multiply %5730, %5730 : tensor<768x3072xf32>
    %7919 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7920 = stablehlo.multiply %7919, %7918 : tensor<768x3072xf32>
    %7921 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7922 = stablehlo.multiply %7921, %arg569 : tensor<768x3072xf32>
    %7923 = stablehlo.add %7920, %7922 : tensor<768x3072xf32>
    %7924 = stablehlo.multiply %5735, %5735 : tensor<768xf32>
    %7925 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7926 = stablehlo.multiply %7925, %7924 : tensor<768xf32>
    %7927 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7928 = stablehlo.multiply %7927, %arg570 : tensor<768xf32>
    %7929 = stablehlo.add %7926, %7928 : tensor<768xf32>
    %7930 = stablehlo.multiply %5740, %5740 : tensor<768x768xf32>
    %7931 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7932 = stablehlo.multiply %7931, %7930 : tensor<768x768xf32>
    %7933 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7934 = stablehlo.multiply %7933, %arg571 : tensor<768x768xf32>
    %7935 = stablehlo.add %7932, %7934 : tensor<768x768xf32>
    %7936 = stablehlo.multiply %5745, %5745 : tensor<768xf32>
    %7937 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7938 = stablehlo.multiply %7937, %7936 : tensor<768xf32>
    %7939 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7940 = stablehlo.multiply %7939, %arg572 : tensor<768xf32>
    %7941 = stablehlo.add %7938, %7940 : tensor<768xf32>
    %7942 = stablehlo.multiply %5750, %5750 : tensor<768x768xf32>
    %7943 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7944 = stablehlo.multiply %7943, %7942 : tensor<768x768xf32>
    %7945 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7946 = stablehlo.multiply %7945, %arg573 : tensor<768x768xf32>
    %7947 = stablehlo.add %7944, %7946 : tensor<768x768xf32>
    %7948 = stablehlo.multiply %5755, %5755 : tensor<768xf32>
    %7949 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7950 = stablehlo.multiply %7949, %7948 : tensor<768xf32>
    %7951 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7952 = stablehlo.multiply %7951, %arg574 : tensor<768xf32>
    %7953 = stablehlo.add %7950, %7952 : tensor<768xf32>
    %7954 = stablehlo.multiply %5760, %5760 : tensor<768x768xf32>
    %7955 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7956 = stablehlo.multiply %7955, %7954 : tensor<768x768xf32>
    %7957 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7958 = stablehlo.multiply %7957, %arg575 : tensor<768x768xf32>
    %7959 = stablehlo.add %7956, %7958 : tensor<768x768xf32>
    %7960 = stablehlo.multiply %5765, %5765 : tensor<768xf32>
    %7961 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7962 = stablehlo.multiply %7961, %7960 : tensor<768xf32>
    %7963 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7964 = stablehlo.multiply %7963, %arg576 : tensor<768xf32>
    %7965 = stablehlo.add %7962, %7964 : tensor<768xf32>
    %7966 = stablehlo.multiply %5770, %5770 : tensor<768x768xf32>
    %7967 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7968 = stablehlo.multiply %7967, %7966 : tensor<768x768xf32>
    %7969 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7970 = stablehlo.multiply %7969, %arg577 : tensor<768x768xf32>
    %7971 = stablehlo.add %7968, %7970 : tensor<768x768xf32>
    %7972 = stablehlo.multiply %5775, %5775 : tensor<768xf32>
    %7973 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7974 = stablehlo.multiply %7973, %7972 : tensor<768xf32>
    %7975 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7976 = stablehlo.multiply %7975, %arg578 : tensor<768xf32>
    %7977 = stablehlo.add %7974, %7976 : tensor<768xf32>
    %7978 = stablehlo.multiply %5780, %5780 : tensor<768xf32>
    %7979 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7980 = stablehlo.multiply %7979, %7978 : tensor<768xf32>
    %7981 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7982 = stablehlo.multiply %7981, %arg579 : tensor<768xf32>
    %7983 = stablehlo.add %7980, %7982 : tensor<768xf32>
    %7984 = stablehlo.multiply %5785, %5785 : tensor<768xf32>
    %7985 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7986 = stablehlo.multiply %7985, %7984 : tensor<768xf32>
    %7987 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7988 = stablehlo.multiply %7987, %arg580 : tensor<768xf32>
    %7989 = stablehlo.add %7986, %7988 : tensor<768xf32>
    %7990 = stablehlo.multiply %5790, %5790 : tensor<3072x768xf32>
    %7991 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7992 = stablehlo.multiply %7991, %7990 : tensor<3072x768xf32>
    %7993 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7994 = stablehlo.multiply %7993, %arg581 : tensor<3072x768xf32>
    %7995 = stablehlo.add %7992, %7994 : tensor<3072x768xf32>
    %7996 = stablehlo.multiply %5795, %5795 : tensor<768xf32>
    %7997 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7998 = stablehlo.multiply %7997, %7996 : tensor<768xf32>
    %7999 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8000 = stablehlo.multiply %7999, %arg582 : tensor<768xf32>
    %8001 = stablehlo.add %7998, %8000 : tensor<768xf32>
    %8002 = stablehlo.multiply %5800, %5800 : tensor<768xf32>
    %8003 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8004 = stablehlo.multiply %8003, %8002 : tensor<768xf32>
    %8005 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8006 = stablehlo.multiply %8005, %arg583 : tensor<768xf32>
    %8007 = stablehlo.add %8004, %8006 : tensor<768xf32>
    %8008 = stablehlo.multiply %5805, %5805 : tensor<3072xf32>
    %8009 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8010 = stablehlo.multiply %8009, %8008 : tensor<3072xf32>
    %8011 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8012 = stablehlo.multiply %8011, %arg584 : tensor<3072xf32>
    %8013 = stablehlo.add %8010, %8012 : tensor<3072xf32>
    %8014 = stablehlo.multiply %5810, %5810 : tensor<768x3072xf32>
    %8015 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8016 = stablehlo.multiply %8015, %8014 : tensor<768x3072xf32>
    %8017 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8018 = stablehlo.multiply %8017, %arg585 : tensor<768x3072xf32>
    %8019 = stablehlo.add %8016, %8018 : tensor<768x3072xf32>
    %8020 = stablehlo.multiply %5815, %5815 : tensor<768xf32>
    %8021 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8022 = stablehlo.multiply %8021, %8020 : tensor<768xf32>
    %8023 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8024 = stablehlo.multiply %8023, %arg586 : tensor<768xf32>
    %8025 = stablehlo.add %8022, %8024 : tensor<768xf32>
    %8026 = stablehlo.multiply %5820, %5820 : tensor<768x768xf32>
    %8027 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8028 = stablehlo.multiply %8027, %8026 : tensor<768x768xf32>
    %8029 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8030 = stablehlo.multiply %8029, %arg587 : tensor<768x768xf32>
    %8031 = stablehlo.add %8028, %8030 : tensor<768x768xf32>
    %8032 = stablehlo.multiply %5825, %5825 : tensor<768xf32>
    %8033 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8034 = stablehlo.multiply %8033, %8032 : tensor<768xf32>
    %8035 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8036 = stablehlo.multiply %8035, %arg588 : tensor<768xf32>
    %8037 = stablehlo.add %8034, %8036 : tensor<768xf32>
    %8038 = stablehlo.multiply %5830, %5830 : tensor<768x768xf32>
    %8039 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8040 = stablehlo.multiply %8039, %8038 : tensor<768x768xf32>
    %8041 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8042 = stablehlo.multiply %8041, %arg589 : tensor<768x768xf32>
    %8043 = stablehlo.add %8040, %8042 : tensor<768x768xf32>
    %8044 = stablehlo.multiply %5835, %5835 : tensor<768xf32>
    %8045 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8046 = stablehlo.multiply %8045, %8044 : tensor<768xf32>
    %8047 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8048 = stablehlo.multiply %8047, %arg590 : tensor<768xf32>
    %8049 = stablehlo.add %8046, %8048 : tensor<768xf32>
    %8050 = stablehlo.multiply %5840, %5840 : tensor<768x768xf32>
    %8051 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8052 = stablehlo.multiply %8051, %8050 : tensor<768x768xf32>
    %8053 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8054 = stablehlo.multiply %8053, %arg591 : tensor<768x768xf32>
    %8055 = stablehlo.add %8052, %8054 : tensor<768x768xf32>
    %8056 = stablehlo.multiply %5845, %5845 : tensor<768xf32>
    %8057 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8058 = stablehlo.multiply %8057, %8056 : tensor<768xf32>
    %8059 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8060 = stablehlo.multiply %8059, %arg592 : tensor<768xf32>
    %8061 = stablehlo.add %8058, %8060 : tensor<768xf32>
    %8062 = stablehlo.multiply %5850, %5850 : tensor<768x768xf32>
    %8063 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8064 = stablehlo.multiply %8063, %8062 : tensor<768x768xf32>
    %8065 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8066 = stablehlo.multiply %8065, %arg593 : tensor<768x768xf32>
    %8067 = stablehlo.add %8064, %8066 : tensor<768x768xf32>
    %8068 = stablehlo.multiply %5855, %5855 : tensor<768xf32>
    %8069 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8070 = stablehlo.multiply %8069, %8068 : tensor<768xf32>
    %8071 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8072 = stablehlo.multiply %8071, %arg594 : tensor<768xf32>
    %8073 = stablehlo.add %8070, %8072 : tensor<768xf32>
    %8074 = stablehlo.multiply %5860, %5860 : tensor<768xf32>
    %8075 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8076 = stablehlo.multiply %8075, %8074 : tensor<768xf32>
    %8077 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8078 = stablehlo.multiply %8077, %arg595 : tensor<768xf32>
    %8079 = stablehlo.add %8076, %8078 : tensor<768xf32>
    %8080 = stablehlo.multiply %5865, %5865 : tensor<768xf32>
    %8081 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8082 = stablehlo.multiply %8081, %8080 : tensor<768xf32>
    %8083 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8084 = stablehlo.multiply %8083, %arg596 : tensor<768xf32>
    %8085 = stablehlo.add %8082, %8084 : tensor<768xf32>
    %8086 = stablehlo.multiply %5870, %5870 : tensor<3072x768xf32>
    %8087 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8088 = stablehlo.multiply %8087, %8086 : tensor<3072x768xf32>
    %8089 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8090 = stablehlo.multiply %8089, %arg597 : tensor<3072x768xf32>
    %8091 = stablehlo.add %8088, %8090 : tensor<3072x768xf32>
    %8092 = stablehlo.multiply %5875, %5875 : tensor<768xf32>
    %8093 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8094 = stablehlo.multiply %8093, %8092 : tensor<768xf32>
    %8095 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8096 = stablehlo.multiply %8095, %arg598 : tensor<768xf32>
    %8097 = stablehlo.add %8094, %8096 : tensor<768xf32>
    %8098 = stablehlo.multiply %5880, %5880 : tensor<768xf32>
    %8099 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8100 = stablehlo.multiply %8099, %8098 : tensor<768xf32>
    %8101 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8102 = stablehlo.multiply %8101, %arg599 : tensor<768xf32>
    %8103 = stablehlo.add %8100, %8102 : tensor<768xf32>
    %8104 = stablehlo.multiply %5885, %5885 : tensor<3072xf32>
    %8105 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8106 = stablehlo.multiply %8105, %8104 : tensor<3072xf32>
    %8107 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8108 = stablehlo.multiply %8107, %arg600 : tensor<3072xf32>
    %8109 = stablehlo.add %8106, %8108 : tensor<3072xf32>
    %8110 = stablehlo.multiply %5890, %5890 : tensor<768x3072xf32>
    %8111 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8112 = stablehlo.multiply %8111, %8110 : tensor<768x3072xf32>
    %8113 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8114 = stablehlo.multiply %8113, %arg601 : tensor<768x3072xf32>
    %8115 = stablehlo.add %8112, %8114 : tensor<768x3072xf32>
    %8116 = stablehlo.multiply %5895, %5895 : tensor<768xf32>
    %8117 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8118 = stablehlo.multiply %8117, %8116 : tensor<768xf32>
    %8119 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8120 = stablehlo.multiply %8119, %arg602 : tensor<768xf32>
    %8121 = stablehlo.add %8118, %8120 : tensor<768xf32>
    %8122 = stablehlo.multiply %5900, %5900 : tensor<768xf32>
    %8123 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8124 = stablehlo.multiply %8123, %8122 : tensor<768xf32>
    %8125 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8126 = stablehlo.multiply %8125, %arg603 : tensor<768xf32>
    %8127 = stablehlo.add %8124, %8126 : tensor<768xf32>
    %8128 = stablehlo.multiply %5905, %5905 : tensor<30522xf32>
    %8129 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8130 = stablehlo.multiply %8129, %8128 : tensor<30522xf32>
    %8131 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8132 = stablehlo.multiply %8131, %arg604 : tensor<30522xf32>
    %8133 = stablehlo.add %8130, %8132 : tensor<30522xf32>
    %8134 = stablehlo.multiply %5910, %5910 : tensor<768xf32>
    %8135 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8136 = stablehlo.multiply %8135, %8134 : tensor<768xf32>
    %8137 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8138 = stablehlo.multiply %8137, %arg605 : tensor<768xf32>
    %8139 = stablehlo.add %8136, %8138 : tensor<768xf32>
    %8140 = stablehlo.multiply %5915, %5915 : tensor<768x768xf32>
    %8141 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8142 = stablehlo.multiply %8141, %8140 : tensor<768x768xf32>
    %8143 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8144 = stablehlo.multiply %8143, %arg606 : tensor<768x768xf32>
    %8145 = stablehlo.add %8142, %8144 : tensor<768x768xf32>
    %8146 = stablehlo.multiply %5920, %5920 : tensor<30522x768xf32>
    %8147 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8148 = stablehlo.multiply %8147, %8146 : tensor<30522x768xf32>
    %8149 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8150 = stablehlo.multiply %8149, %arg607 : tensor<30522x768xf32>
    %8151 = stablehlo.add %8148, %8150 : tensor<30522x768xf32>
    %8152 = stablehlo.multiply %5925, %5925 : tensor<768xf32>
    %8153 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8154 = stablehlo.multiply %8153, %8152 : tensor<768xf32>
    %8155 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8156 = stablehlo.multiply %8155, %arg608 : tensor<768xf32>
    %8157 = stablehlo.add %8154, %8156 : tensor<768xf32>
    %8158 = stablehlo.multiply %5930, %5930 : tensor<768xf32>
    %8159 = stablehlo.broadcast_in_dim %cst_717, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8160 = stablehlo.multiply %8159, %8158 : tensor<768xf32>
    %8161 = stablehlo.broadcast_in_dim %cst_718, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8162 = stablehlo.multiply %8161, %arg609 : tensor<768xf32>
    %8163 = stablehlo.add %8160, %8162 : tensor<768xf32>
    %c_719 = stablehlo.constant dense<2147483647> : tensor<i32>
    %8164 = stablehlo.compare  LT, %arg203, %c_719,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %c_720 = stablehlo.constant dense<1> : tensor<i32>
    %8165 = stablehlo.add %arg203, %c_720 : tensor<i32>
    %8166 = call @_where_264(%8164, %8165, %c_719) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_721 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %8167 = stablehlo.convert %8166 : (tensor<i32>) -> tensor<f32>
    %8168 = stablehlo.power %cst_721, %8167 : tensor<f32>
    %8169 = stablehlo.subtract %cst_7, %8168 : tensor<f32>
    %8170 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8171 = stablehlo.divide %5935, %8170 : tensor<512x768xf32>
    %8172 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8173 = stablehlo.divide %5940, %8172 : tensor<2x768xf32>
    %8174 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8175 = stablehlo.divide %5945, %8174 : tensor<30522x768xf32>
    %8176 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8177 = stablehlo.divide %5950, %8176 : tensor<768xf32>
    %8178 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8179 = stablehlo.divide %5955, %8178 : tensor<768x768xf32>
    %8180 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8181 = stablehlo.divide %5960, %8180 : tensor<768xf32>
    %8182 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8183 = stablehlo.divide %5965, %8182 : tensor<768x768xf32>
    %8184 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8185 = stablehlo.divide %5970, %8184 : tensor<768xf32>
    %8186 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8187 = stablehlo.divide %5975, %8186 : tensor<768x768xf32>
    %8188 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8189 = stablehlo.divide %5980, %8188 : tensor<768xf32>
    %8190 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8191 = stablehlo.divide %5985, %8190 : tensor<768x768xf32>
    %8192 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8193 = stablehlo.divide %5990, %8192 : tensor<768xf32>
    %8194 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8195 = stablehlo.divide %5995, %8194 : tensor<768xf32>
    %8196 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8197 = stablehlo.divide %6000, %8196 : tensor<768xf32>
    %8198 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8199 = stablehlo.divide %6005, %8198 : tensor<3072x768xf32>
    %8200 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8201 = stablehlo.divide %6010, %8200 : tensor<768xf32>
    %8202 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8203 = stablehlo.divide %6015, %8202 : tensor<768xf32>
    %8204 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8205 = stablehlo.divide %6020, %8204 : tensor<3072xf32>
    %8206 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8207 = stablehlo.divide %6025, %8206 : tensor<768x3072xf32>
    %8208 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8209 = stablehlo.divide %6030, %8208 : tensor<768xf32>
    %8210 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8211 = stablehlo.divide %6035, %8210 : tensor<768x768xf32>
    %8212 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8213 = stablehlo.divide %6040, %8212 : tensor<768xf32>
    %8214 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8215 = stablehlo.divide %6045, %8214 : tensor<768x768xf32>
    %8216 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8217 = stablehlo.divide %6050, %8216 : tensor<768xf32>
    %8218 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8219 = stablehlo.divide %6055, %8218 : tensor<768x768xf32>
    %8220 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8221 = stablehlo.divide %6060, %8220 : tensor<768xf32>
    %8222 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8223 = stablehlo.divide %6065, %8222 : tensor<768x768xf32>
    %8224 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8225 = stablehlo.divide %6070, %8224 : tensor<768xf32>
    %8226 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8227 = stablehlo.divide %6075, %8226 : tensor<768xf32>
    %8228 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8229 = stablehlo.divide %6080, %8228 : tensor<768xf32>
    %8230 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8231 = stablehlo.divide %6085, %8230 : tensor<3072x768xf32>
    %8232 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8233 = stablehlo.divide %6090, %8232 : tensor<768xf32>
    %8234 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8235 = stablehlo.divide %6095, %8234 : tensor<768xf32>
    %8236 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8237 = stablehlo.divide %6100, %8236 : tensor<3072xf32>
    %8238 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8239 = stablehlo.divide %6105, %8238 : tensor<768x3072xf32>
    %8240 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8241 = stablehlo.divide %6110, %8240 : tensor<768xf32>
    %8242 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8243 = stablehlo.divide %6115, %8242 : tensor<768x768xf32>
    %8244 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8245 = stablehlo.divide %6120, %8244 : tensor<768xf32>
    %8246 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8247 = stablehlo.divide %6125, %8246 : tensor<768x768xf32>
    %8248 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8249 = stablehlo.divide %6130, %8248 : tensor<768xf32>
    %8250 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8251 = stablehlo.divide %6135, %8250 : tensor<768x768xf32>
    %8252 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8253 = stablehlo.divide %6140, %8252 : tensor<768xf32>
    %8254 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8255 = stablehlo.divide %6145, %8254 : tensor<768x768xf32>
    %8256 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8257 = stablehlo.divide %6150, %8256 : tensor<768xf32>
    %8258 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8259 = stablehlo.divide %6155, %8258 : tensor<768xf32>
    %8260 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8261 = stablehlo.divide %6160, %8260 : tensor<768xf32>
    %8262 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8263 = stablehlo.divide %6165, %8262 : tensor<3072x768xf32>
    %8264 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8265 = stablehlo.divide %6170, %8264 : tensor<768xf32>
    %8266 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8267 = stablehlo.divide %6175, %8266 : tensor<768xf32>
    %8268 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8269 = stablehlo.divide %6180, %8268 : tensor<3072xf32>
    %8270 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8271 = stablehlo.divide %6185, %8270 : tensor<768x3072xf32>
    %8272 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8273 = stablehlo.divide %6190, %8272 : tensor<768xf32>
    %8274 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8275 = stablehlo.divide %6195, %8274 : tensor<768x768xf32>
    %8276 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8277 = stablehlo.divide %6200, %8276 : tensor<768xf32>
    %8278 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8279 = stablehlo.divide %6205, %8278 : tensor<768x768xf32>
    %8280 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8281 = stablehlo.divide %6210, %8280 : tensor<768xf32>
    %8282 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8283 = stablehlo.divide %6215, %8282 : tensor<768x768xf32>
    %8284 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8285 = stablehlo.divide %6220, %8284 : tensor<768xf32>
    %8286 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8287 = stablehlo.divide %6225, %8286 : tensor<768x768xf32>
    %8288 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8289 = stablehlo.divide %6230, %8288 : tensor<768xf32>
    %8290 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8291 = stablehlo.divide %6235, %8290 : tensor<768xf32>
    %8292 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8293 = stablehlo.divide %6240, %8292 : tensor<768xf32>
    %8294 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8295 = stablehlo.divide %6245, %8294 : tensor<3072x768xf32>
    %8296 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8297 = stablehlo.divide %6250, %8296 : tensor<768xf32>
    %8298 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8299 = stablehlo.divide %6255, %8298 : tensor<768xf32>
    %8300 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8301 = stablehlo.divide %6260, %8300 : tensor<3072xf32>
    %8302 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8303 = stablehlo.divide %6265, %8302 : tensor<768x3072xf32>
    %8304 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8305 = stablehlo.divide %6270, %8304 : tensor<768xf32>
    %8306 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8307 = stablehlo.divide %6275, %8306 : tensor<768x768xf32>
    %8308 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8309 = stablehlo.divide %6280, %8308 : tensor<768xf32>
    %8310 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8311 = stablehlo.divide %6285, %8310 : tensor<768x768xf32>
    %8312 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8313 = stablehlo.divide %6290, %8312 : tensor<768xf32>
    %8314 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8315 = stablehlo.divide %6295, %8314 : tensor<768x768xf32>
    %8316 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8317 = stablehlo.divide %6300, %8316 : tensor<768xf32>
    %8318 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8319 = stablehlo.divide %6305, %8318 : tensor<768x768xf32>
    %8320 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8321 = stablehlo.divide %6310, %8320 : tensor<768xf32>
    %8322 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8323 = stablehlo.divide %6315, %8322 : tensor<768xf32>
    %8324 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8325 = stablehlo.divide %6320, %8324 : tensor<768xf32>
    %8326 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8327 = stablehlo.divide %6325, %8326 : tensor<3072x768xf32>
    %8328 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8329 = stablehlo.divide %6330, %8328 : tensor<768xf32>
    %8330 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8331 = stablehlo.divide %6335, %8330 : tensor<768xf32>
    %8332 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8333 = stablehlo.divide %6340, %8332 : tensor<3072xf32>
    %8334 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8335 = stablehlo.divide %6345, %8334 : tensor<768x3072xf32>
    %8336 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8337 = stablehlo.divide %6350, %8336 : tensor<768xf32>
    %8338 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8339 = stablehlo.divide %6355, %8338 : tensor<768x768xf32>
    %8340 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8341 = stablehlo.divide %6360, %8340 : tensor<768xf32>
    %8342 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8343 = stablehlo.divide %6365, %8342 : tensor<768x768xf32>
    %8344 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8345 = stablehlo.divide %6370, %8344 : tensor<768xf32>
    %8346 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8347 = stablehlo.divide %6375, %8346 : tensor<768x768xf32>
    %8348 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8349 = stablehlo.divide %6380, %8348 : tensor<768xf32>
    %8350 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8351 = stablehlo.divide %6385, %8350 : tensor<768x768xf32>
    %8352 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8353 = stablehlo.divide %6390, %8352 : tensor<768xf32>
    %8354 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8355 = stablehlo.divide %6395, %8354 : tensor<768xf32>
    %8356 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8357 = stablehlo.divide %6400, %8356 : tensor<768xf32>
    %8358 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8359 = stablehlo.divide %6405, %8358 : tensor<3072x768xf32>
    %8360 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8361 = stablehlo.divide %6410, %8360 : tensor<768xf32>
    %8362 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8363 = stablehlo.divide %6415, %8362 : tensor<768xf32>
    %8364 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8365 = stablehlo.divide %6420, %8364 : tensor<3072xf32>
    %8366 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8367 = stablehlo.divide %6425, %8366 : tensor<768x3072xf32>
    %8368 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8369 = stablehlo.divide %6430, %8368 : tensor<768xf32>
    %8370 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8371 = stablehlo.divide %6435, %8370 : tensor<768x768xf32>
    %8372 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8373 = stablehlo.divide %6440, %8372 : tensor<768xf32>
    %8374 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8375 = stablehlo.divide %6445, %8374 : tensor<768x768xf32>
    %8376 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8377 = stablehlo.divide %6450, %8376 : tensor<768xf32>
    %8378 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8379 = stablehlo.divide %6455, %8378 : tensor<768x768xf32>
    %8380 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8381 = stablehlo.divide %6460, %8380 : tensor<768xf32>
    %8382 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8383 = stablehlo.divide %6465, %8382 : tensor<768x768xf32>
    %8384 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8385 = stablehlo.divide %6470, %8384 : tensor<768xf32>
    %8386 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8387 = stablehlo.divide %6475, %8386 : tensor<768xf32>
    %8388 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8389 = stablehlo.divide %6480, %8388 : tensor<768xf32>
    %8390 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8391 = stablehlo.divide %6485, %8390 : tensor<3072x768xf32>
    %8392 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8393 = stablehlo.divide %6490, %8392 : tensor<768xf32>
    %8394 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8395 = stablehlo.divide %6495, %8394 : tensor<768xf32>
    %8396 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8397 = stablehlo.divide %6500, %8396 : tensor<3072xf32>
    %8398 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8399 = stablehlo.divide %6505, %8398 : tensor<768x3072xf32>
    %8400 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8401 = stablehlo.divide %6510, %8400 : tensor<768xf32>
    %8402 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8403 = stablehlo.divide %6515, %8402 : tensor<768x768xf32>
    %8404 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8405 = stablehlo.divide %6520, %8404 : tensor<768xf32>
    %8406 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8407 = stablehlo.divide %6525, %8406 : tensor<768x768xf32>
    %8408 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8409 = stablehlo.divide %6530, %8408 : tensor<768xf32>
    %8410 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8411 = stablehlo.divide %6535, %8410 : tensor<768x768xf32>
    %8412 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8413 = stablehlo.divide %6540, %8412 : tensor<768xf32>
    %8414 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8415 = stablehlo.divide %6545, %8414 : tensor<768x768xf32>
    %8416 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8417 = stablehlo.divide %6550, %8416 : tensor<768xf32>
    %8418 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8419 = stablehlo.divide %6555, %8418 : tensor<768xf32>
    %8420 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8421 = stablehlo.divide %6560, %8420 : tensor<768xf32>
    %8422 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8423 = stablehlo.divide %6565, %8422 : tensor<3072x768xf32>
    %8424 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8425 = stablehlo.divide %6570, %8424 : tensor<768xf32>
    %8426 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8427 = stablehlo.divide %6575, %8426 : tensor<768xf32>
    %8428 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8429 = stablehlo.divide %6580, %8428 : tensor<3072xf32>
    %8430 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8431 = stablehlo.divide %6585, %8430 : tensor<768x3072xf32>
    %8432 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8433 = stablehlo.divide %6590, %8432 : tensor<768xf32>
    %8434 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8435 = stablehlo.divide %6595, %8434 : tensor<768x768xf32>
    %8436 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8437 = stablehlo.divide %6600, %8436 : tensor<768xf32>
    %8438 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8439 = stablehlo.divide %6605, %8438 : tensor<768x768xf32>
    %8440 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8441 = stablehlo.divide %6610, %8440 : tensor<768xf32>
    %8442 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8443 = stablehlo.divide %6615, %8442 : tensor<768x768xf32>
    %8444 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8445 = stablehlo.divide %6620, %8444 : tensor<768xf32>
    %8446 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8447 = stablehlo.divide %6625, %8446 : tensor<768x768xf32>
    %8448 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8449 = stablehlo.divide %6630, %8448 : tensor<768xf32>
    %8450 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8451 = stablehlo.divide %6635, %8450 : tensor<768xf32>
    %8452 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8453 = stablehlo.divide %6640, %8452 : tensor<768xf32>
    %8454 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8455 = stablehlo.divide %6645, %8454 : tensor<3072x768xf32>
    %8456 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8457 = stablehlo.divide %6650, %8456 : tensor<768xf32>
    %8458 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8459 = stablehlo.divide %6655, %8458 : tensor<768xf32>
    %8460 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8461 = stablehlo.divide %6660, %8460 : tensor<3072xf32>
    %8462 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8463 = stablehlo.divide %6665, %8462 : tensor<768x3072xf32>
    %8464 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8465 = stablehlo.divide %6670, %8464 : tensor<768xf32>
    %8466 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8467 = stablehlo.divide %6675, %8466 : tensor<768x768xf32>
    %8468 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8469 = stablehlo.divide %6680, %8468 : tensor<768xf32>
    %8470 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8471 = stablehlo.divide %6685, %8470 : tensor<768x768xf32>
    %8472 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8473 = stablehlo.divide %6690, %8472 : tensor<768xf32>
    %8474 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8475 = stablehlo.divide %6695, %8474 : tensor<768x768xf32>
    %8476 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8477 = stablehlo.divide %6700, %8476 : tensor<768xf32>
    %8478 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8479 = stablehlo.divide %6705, %8478 : tensor<768x768xf32>
    %8480 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8481 = stablehlo.divide %6710, %8480 : tensor<768xf32>
    %8482 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8483 = stablehlo.divide %6715, %8482 : tensor<768xf32>
    %8484 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8485 = stablehlo.divide %6720, %8484 : tensor<768xf32>
    %8486 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8487 = stablehlo.divide %6725, %8486 : tensor<3072x768xf32>
    %8488 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8489 = stablehlo.divide %6730, %8488 : tensor<768xf32>
    %8490 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8491 = stablehlo.divide %6735, %8490 : tensor<768xf32>
    %8492 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8493 = stablehlo.divide %6740, %8492 : tensor<3072xf32>
    %8494 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8495 = stablehlo.divide %6745, %8494 : tensor<768x3072xf32>
    %8496 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8497 = stablehlo.divide %6750, %8496 : tensor<768xf32>
    %8498 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8499 = stablehlo.divide %6755, %8498 : tensor<768x768xf32>
    %8500 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8501 = stablehlo.divide %6760, %8500 : tensor<768xf32>
    %8502 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8503 = stablehlo.divide %6765, %8502 : tensor<768x768xf32>
    %8504 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8505 = stablehlo.divide %6770, %8504 : tensor<768xf32>
    %8506 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8507 = stablehlo.divide %6775, %8506 : tensor<768x768xf32>
    %8508 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8509 = stablehlo.divide %6780, %8508 : tensor<768xf32>
    %8510 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8511 = stablehlo.divide %6785, %8510 : tensor<768x768xf32>
    %8512 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8513 = stablehlo.divide %6790, %8512 : tensor<768xf32>
    %8514 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8515 = stablehlo.divide %6795, %8514 : tensor<768xf32>
    %8516 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8517 = stablehlo.divide %6800, %8516 : tensor<768xf32>
    %8518 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8519 = stablehlo.divide %6805, %8518 : tensor<3072x768xf32>
    %8520 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8521 = stablehlo.divide %6810, %8520 : tensor<768xf32>
    %8522 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8523 = stablehlo.divide %6815, %8522 : tensor<768xf32>
    %8524 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8525 = stablehlo.divide %6820, %8524 : tensor<3072xf32>
    %8526 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8527 = stablehlo.divide %6825, %8526 : tensor<768x3072xf32>
    %8528 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8529 = stablehlo.divide %6830, %8528 : tensor<768xf32>
    %8530 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8531 = stablehlo.divide %6835, %8530 : tensor<768x768xf32>
    %8532 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8533 = stablehlo.divide %6840, %8532 : tensor<768xf32>
    %8534 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8535 = stablehlo.divide %6845, %8534 : tensor<768x768xf32>
    %8536 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8537 = stablehlo.divide %6850, %8536 : tensor<768xf32>
    %8538 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8539 = stablehlo.divide %6855, %8538 : tensor<768x768xf32>
    %8540 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8541 = stablehlo.divide %6860, %8540 : tensor<768xf32>
    %8542 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8543 = stablehlo.divide %6865, %8542 : tensor<768x768xf32>
    %8544 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8545 = stablehlo.divide %6870, %8544 : tensor<768xf32>
    %8546 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8547 = stablehlo.divide %6875, %8546 : tensor<768xf32>
    %8548 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8549 = stablehlo.divide %6880, %8548 : tensor<768xf32>
    %8550 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8551 = stablehlo.divide %6885, %8550 : tensor<3072x768xf32>
    %8552 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8553 = stablehlo.divide %6890, %8552 : tensor<768xf32>
    %8554 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8555 = stablehlo.divide %6895, %8554 : tensor<768xf32>
    %8556 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8557 = stablehlo.divide %6900, %8556 : tensor<3072xf32>
    %8558 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8559 = stablehlo.divide %6905, %8558 : tensor<768x3072xf32>
    %8560 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8561 = stablehlo.divide %6910, %8560 : tensor<768xf32>
    %8562 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8563 = stablehlo.divide %6915, %8562 : tensor<768xf32>
    %8564 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8565 = stablehlo.divide %6920, %8564 : tensor<30522xf32>
    %8566 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8567 = stablehlo.divide %6925, %8566 : tensor<768xf32>
    %8568 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8569 = stablehlo.divide %6930, %8568 : tensor<768x768xf32>
    %8570 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8571 = stablehlo.divide %6935, %8570 : tensor<30522x768xf32>
    %8572 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8573 = stablehlo.divide %6940, %8572 : tensor<768xf32>
    %8574 = stablehlo.broadcast_in_dim %8169, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8575 = stablehlo.divide %6945, %8574 : tensor<768xf32>
    %cst_722 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %8576 = stablehlo.convert %8166 : (tensor<i32>) -> tensor<f32>
    %8577 = stablehlo.power %cst_722, %8576 : tensor<f32>
    %8578 = stablehlo.subtract %cst_7, %8577 : tensor<f32>
    %8579 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8580 = stablehlo.divide %6951, %8579 : tensor<512x768xf32>
    %8581 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8582 = stablehlo.divide %6957, %8581 : tensor<2x768xf32>
    %8583 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8584 = stablehlo.divide %6963, %8583 : tensor<30522x768xf32>
    %8585 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8586 = stablehlo.divide %6969, %8585 : tensor<768xf32>
    %8587 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8588 = stablehlo.divide %6975, %8587 : tensor<768x768xf32>
    %8589 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8590 = stablehlo.divide %6981, %8589 : tensor<768xf32>
    %8591 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8592 = stablehlo.divide %6987, %8591 : tensor<768x768xf32>
    %8593 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8594 = stablehlo.divide %6993, %8593 : tensor<768xf32>
    %8595 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8596 = stablehlo.divide %6999, %8595 : tensor<768x768xf32>
    %8597 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8598 = stablehlo.divide %7005, %8597 : tensor<768xf32>
    %8599 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8600 = stablehlo.divide %7011, %8599 : tensor<768x768xf32>
    %8601 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8602 = stablehlo.divide %7017, %8601 : tensor<768xf32>
    %8603 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8604 = stablehlo.divide %7023, %8603 : tensor<768xf32>
    %8605 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8606 = stablehlo.divide %7029, %8605 : tensor<768xf32>
    %8607 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8608 = stablehlo.divide %7035, %8607 : tensor<3072x768xf32>
    %8609 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8610 = stablehlo.divide %7041, %8609 : tensor<768xf32>
    %8611 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8612 = stablehlo.divide %7047, %8611 : tensor<768xf32>
    %8613 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8614 = stablehlo.divide %7053, %8613 : tensor<3072xf32>
    %8615 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8616 = stablehlo.divide %7059, %8615 : tensor<768x3072xf32>
    %8617 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8618 = stablehlo.divide %7065, %8617 : tensor<768xf32>
    %8619 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8620 = stablehlo.divide %7071, %8619 : tensor<768x768xf32>
    %8621 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8622 = stablehlo.divide %7077, %8621 : tensor<768xf32>
    %8623 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8624 = stablehlo.divide %7083, %8623 : tensor<768x768xf32>
    %8625 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8626 = stablehlo.divide %7089, %8625 : tensor<768xf32>
    %8627 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8628 = stablehlo.divide %7095, %8627 : tensor<768x768xf32>
    %8629 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8630 = stablehlo.divide %7101, %8629 : tensor<768xf32>
    %8631 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8632 = stablehlo.divide %7107, %8631 : tensor<768x768xf32>
    %8633 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8634 = stablehlo.divide %7113, %8633 : tensor<768xf32>
    %8635 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8636 = stablehlo.divide %7119, %8635 : tensor<768xf32>
    %8637 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8638 = stablehlo.divide %7125, %8637 : tensor<768xf32>
    %8639 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8640 = stablehlo.divide %7131, %8639 : tensor<3072x768xf32>
    %8641 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8642 = stablehlo.divide %7137, %8641 : tensor<768xf32>
    %8643 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8644 = stablehlo.divide %7143, %8643 : tensor<768xf32>
    %8645 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8646 = stablehlo.divide %7149, %8645 : tensor<3072xf32>
    %8647 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8648 = stablehlo.divide %7155, %8647 : tensor<768x3072xf32>
    %8649 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8650 = stablehlo.divide %7161, %8649 : tensor<768xf32>
    %8651 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8652 = stablehlo.divide %7167, %8651 : tensor<768x768xf32>
    %8653 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8654 = stablehlo.divide %7173, %8653 : tensor<768xf32>
    %8655 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8656 = stablehlo.divide %7179, %8655 : tensor<768x768xf32>
    %8657 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8658 = stablehlo.divide %7185, %8657 : tensor<768xf32>
    %8659 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8660 = stablehlo.divide %7191, %8659 : tensor<768x768xf32>
    %8661 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8662 = stablehlo.divide %7197, %8661 : tensor<768xf32>
    %8663 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8664 = stablehlo.divide %7203, %8663 : tensor<768x768xf32>
    %8665 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8666 = stablehlo.divide %7209, %8665 : tensor<768xf32>
    %8667 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8668 = stablehlo.divide %7215, %8667 : tensor<768xf32>
    %8669 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8670 = stablehlo.divide %7221, %8669 : tensor<768xf32>
    %8671 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8672 = stablehlo.divide %7227, %8671 : tensor<3072x768xf32>
    %8673 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8674 = stablehlo.divide %7233, %8673 : tensor<768xf32>
    %8675 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8676 = stablehlo.divide %7239, %8675 : tensor<768xf32>
    %8677 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8678 = stablehlo.divide %7245, %8677 : tensor<3072xf32>
    %8679 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8680 = stablehlo.divide %7251, %8679 : tensor<768x3072xf32>
    %8681 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8682 = stablehlo.divide %7257, %8681 : tensor<768xf32>
    %8683 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8684 = stablehlo.divide %7263, %8683 : tensor<768x768xf32>
    %8685 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8686 = stablehlo.divide %7269, %8685 : tensor<768xf32>
    %8687 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8688 = stablehlo.divide %7275, %8687 : tensor<768x768xf32>
    %8689 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8690 = stablehlo.divide %7281, %8689 : tensor<768xf32>
    %8691 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8692 = stablehlo.divide %7287, %8691 : tensor<768x768xf32>
    %8693 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8694 = stablehlo.divide %7293, %8693 : tensor<768xf32>
    %8695 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8696 = stablehlo.divide %7299, %8695 : tensor<768x768xf32>
    %8697 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8698 = stablehlo.divide %7305, %8697 : tensor<768xf32>
    %8699 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8700 = stablehlo.divide %7311, %8699 : tensor<768xf32>
    %8701 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8702 = stablehlo.divide %7317, %8701 : tensor<768xf32>
    %8703 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8704 = stablehlo.divide %7323, %8703 : tensor<3072x768xf32>
    %8705 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8706 = stablehlo.divide %7329, %8705 : tensor<768xf32>
    %8707 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8708 = stablehlo.divide %7335, %8707 : tensor<768xf32>
    %8709 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8710 = stablehlo.divide %7341, %8709 : tensor<3072xf32>
    %8711 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8712 = stablehlo.divide %7347, %8711 : tensor<768x3072xf32>
    %8713 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8714 = stablehlo.divide %7353, %8713 : tensor<768xf32>
    %8715 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8716 = stablehlo.divide %7359, %8715 : tensor<768x768xf32>
    %8717 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8718 = stablehlo.divide %7365, %8717 : tensor<768xf32>
    %8719 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8720 = stablehlo.divide %7371, %8719 : tensor<768x768xf32>
    %8721 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8722 = stablehlo.divide %7377, %8721 : tensor<768xf32>
    %8723 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8724 = stablehlo.divide %7383, %8723 : tensor<768x768xf32>
    %8725 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8726 = stablehlo.divide %7389, %8725 : tensor<768xf32>
    %8727 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8728 = stablehlo.divide %7395, %8727 : tensor<768x768xf32>
    %8729 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8730 = stablehlo.divide %7401, %8729 : tensor<768xf32>
    %8731 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8732 = stablehlo.divide %7407, %8731 : tensor<768xf32>
    %8733 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8734 = stablehlo.divide %7413, %8733 : tensor<768xf32>
    %8735 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8736 = stablehlo.divide %7419, %8735 : tensor<3072x768xf32>
    %8737 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8738 = stablehlo.divide %7425, %8737 : tensor<768xf32>
    %8739 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8740 = stablehlo.divide %7431, %8739 : tensor<768xf32>
    %8741 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8742 = stablehlo.divide %7437, %8741 : tensor<3072xf32>
    %8743 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8744 = stablehlo.divide %7443, %8743 : tensor<768x3072xf32>
    %8745 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8746 = stablehlo.divide %7449, %8745 : tensor<768xf32>
    %8747 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8748 = stablehlo.divide %7455, %8747 : tensor<768x768xf32>
    %8749 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8750 = stablehlo.divide %7461, %8749 : tensor<768xf32>
    %8751 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8752 = stablehlo.divide %7467, %8751 : tensor<768x768xf32>
    %8753 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8754 = stablehlo.divide %7473, %8753 : tensor<768xf32>
    %8755 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8756 = stablehlo.divide %7479, %8755 : tensor<768x768xf32>
    %8757 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8758 = stablehlo.divide %7485, %8757 : tensor<768xf32>
    %8759 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8760 = stablehlo.divide %7491, %8759 : tensor<768x768xf32>
    %8761 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8762 = stablehlo.divide %7497, %8761 : tensor<768xf32>
    %8763 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8764 = stablehlo.divide %7503, %8763 : tensor<768xf32>
    %8765 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8766 = stablehlo.divide %7509, %8765 : tensor<768xf32>
    %8767 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8768 = stablehlo.divide %7515, %8767 : tensor<3072x768xf32>
    %8769 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8770 = stablehlo.divide %7521, %8769 : tensor<768xf32>
    %8771 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8772 = stablehlo.divide %7527, %8771 : tensor<768xf32>
    %8773 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8774 = stablehlo.divide %7533, %8773 : tensor<3072xf32>
    %8775 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8776 = stablehlo.divide %7539, %8775 : tensor<768x3072xf32>
    %8777 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8778 = stablehlo.divide %7545, %8777 : tensor<768xf32>
    %8779 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8780 = stablehlo.divide %7551, %8779 : tensor<768x768xf32>
    %8781 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8782 = stablehlo.divide %7557, %8781 : tensor<768xf32>
    %8783 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8784 = stablehlo.divide %7563, %8783 : tensor<768x768xf32>
    %8785 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8786 = stablehlo.divide %7569, %8785 : tensor<768xf32>
    %8787 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8788 = stablehlo.divide %7575, %8787 : tensor<768x768xf32>
    %8789 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8790 = stablehlo.divide %7581, %8789 : tensor<768xf32>
    %8791 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8792 = stablehlo.divide %7587, %8791 : tensor<768x768xf32>
    %8793 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8794 = stablehlo.divide %7593, %8793 : tensor<768xf32>
    %8795 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8796 = stablehlo.divide %7599, %8795 : tensor<768xf32>
    %8797 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8798 = stablehlo.divide %7605, %8797 : tensor<768xf32>
    %8799 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8800 = stablehlo.divide %7611, %8799 : tensor<3072x768xf32>
    %8801 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8802 = stablehlo.divide %7617, %8801 : tensor<768xf32>
    %8803 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8804 = stablehlo.divide %7623, %8803 : tensor<768xf32>
    %8805 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8806 = stablehlo.divide %7629, %8805 : tensor<3072xf32>
    %8807 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8808 = stablehlo.divide %7635, %8807 : tensor<768x3072xf32>
    %8809 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8810 = stablehlo.divide %7641, %8809 : tensor<768xf32>
    %8811 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8812 = stablehlo.divide %7647, %8811 : tensor<768x768xf32>
    %8813 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8814 = stablehlo.divide %7653, %8813 : tensor<768xf32>
    %8815 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8816 = stablehlo.divide %7659, %8815 : tensor<768x768xf32>
    %8817 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8818 = stablehlo.divide %7665, %8817 : tensor<768xf32>
    %8819 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8820 = stablehlo.divide %7671, %8819 : tensor<768x768xf32>
    %8821 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8822 = stablehlo.divide %7677, %8821 : tensor<768xf32>
    %8823 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8824 = stablehlo.divide %7683, %8823 : tensor<768x768xf32>
    %8825 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8826 = stablehlo.divide %7689, %8825 : tensor<768xf32>
    %8827 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8828 = stablehlo.divide %7695, %8827 : tensor<768xf32>
    %8829 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8830 = stablehlo.divide %7701, %8829 : tensor<768xf32>
    %8831 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8832 = stablehlo.divide %7707, %8831 : tensor<3072x768xf32>
    %8833 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8834 = stablehlo.divide %7713, %8833 : tensor<768xf32>
    %8835 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8836 = stablehlo.divide %7719, %8835 : tensor<768xf32>
    %8837 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8838 = stablehlo.divide %7725, %8837 : tensor<3072xf32>
    %8839 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8840 = stablehlo.divide %7731, %8839 : tensor<768x3072xf32>
    %8841 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8842 = stablehlo.divide %7737, %8841 : tensor<768xf32>
    %8843 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8844 = stablehlo.divide %7743, %8843 : tensor<768x768xf32>
    %8845 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8846 = stablehlo.divide %7749, %8845 : tensor<768xf32>
    %8847 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8848 = stablehlo.divide %7755, %8847 : tensor<768x768xf32>
    %8849 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8850 = stablehlo.divide %7761, %8849 : tensor<768xf32>
    %8851 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8852 = stablehlo.divide %7767, %8851 : tensor<768x768xf32>
    %8853 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8854 = stablehlo.divide %7773, %8853 : tensor<768xf32>
    %8855 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8856 = stablehlo.divide %7779, %8855 : tensor<768x768xf32>
    %8857 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8858 = stablehlo.divide %7785, %8857 : tensor<768xf32>
    %8859 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8860 = stablehlo.divide %7791, %8859 : tensor<768xf32>
    %8861 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8862 = stablehlo.divide %7797, %8861 : tensor<768xf32>
    %8863 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8864 = stablehlo.divide %7803, %8863 : tensor<3072x768xf32>
    %8865 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8866 = stablehlo.divide %7809, %8865 : tensor<768xf32>
    %8867 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8868 = stablehlo.divide %7815, %8867 : tensor<768xf32>
    %8869 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8870 = stablehlo.divide %7821, %8869 : tensor<3072xf32>
    %8871 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8872 = stablehlo.divide %7827, %8871 : tensor<768x3072xf32>
    %8873 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8874 = stablehlo.divide %7833, %8873 : tensor<768xf32>
    %8875 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8876 = stablehlo.divide %7839, %8875 : tensor<768x768xf32>
    %8877 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8878 = stablehlo.divide %7845, %8877 : tensor<768xf32>
    %8879 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8880 = stablehlo.divide %7851, %8879 : tensor<768x768xf32>
    %8881 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8882 = stablehlo.divide %7857, %8881 : tensor<768xf32>
    %8883 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8884 = stablehlo.divide %7863, %8883 : tensor<768x768xf32>
    %8885 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8886 = stablehlo.divide %7869, %8885 : tensor<768xf32>
    %8887 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8888 = stablehlo.divide %7875, %8887 : tensor<768x768xf32>
    %8889 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8890 = stablehlo.divide %7881, %8889 : tensor<768xf32>
    %8891 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8892 = stablehlo.divide %7887, %8891 : tensor<768xf32>
    %8893 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8894 = stablehlo.divide %7893, %8893 : tensor<768xf32>
    %8895 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8896 = stablehlo.divide %7899, %8895 : tensor<3072x768xf32>
    %8897 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8898 = stablehlo.divide %7905, %8897 : tensor<768xf32>
    %8899 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8900 = stablehlo.divide %7911, %8899 : tensor<768xf32>
    %8901 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8902 = stablehlo.divide %7917, %8901 : tensor<3072xf32>
    %8903 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8904 = stablehlo.divide %7923, %8903 : tensor<768x3072xf32>
    %8905 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8906 = stablehlo.divide %7929, %8905 : tensor<768xf32>
    %8907 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8908 = stablehlo.divide %7935, %8907 : tensor<768x768xf32>
    %8909 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8910 = stablehlo.divide %7941, %8909 : tensor<768xf32>
    %8911 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8912 = stablehlo.divide %7947, %8911 : tensor<768x768xf32>
    %8913 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8914 = stablehlo.divide %7953, %8913 : tensor<768xf32>
    %8915 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8916 = stablehlo.divide %7959, %8915 : tensor<768x768xf32>
    %8917 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8918 = stablehlo.divide %7965, %8917 : tensor<768xf32>
    %8919 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8920 = stablehlo.divide %7971, %8919 : tensor<768x768xf32>
    %8921 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8922 = stablehlo.divide %7977, %8921 : tensor<768xf32>
    %8923 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8924 = stablehlo.divide %7983, %8923 : tensor<768xf32>
    %8925 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8926 = stablehlo.divide %7989, %8925 : tensor<768xf32>
    %8927 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8928 = stablehlo.divide %7995, %8927 : tensor<3072x768xf32>
    %8929 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8930 = stablehlo.divide %8001, %8929 : tensor<768xf32>
    %8931 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8932 = stablehlo.divide %8007, %8931 : tensor<768xf32>
    %8933 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8934 = stablehlo.divide %8013, %8933 : tensor<3072xf32>
    %8935 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8936 = stablehlo.divide %8019, %8935 : tensor<768x3072xf32>
    %8937 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8938 = stablehlo.divide %8025, %8937 : tensor<768xf32>
    %8939 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8940 = stablehlo.divide %8031, %8939 : tensor<768x768xf32>
    %8941 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8942 = stablehlo.divide %8037, %8941 : tensor<768xf32>
    %8943 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8944 = stablehlo.divide %8043, %8943 : tensor<768x768xf32>
    %8945 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8946 = stablehlo.divide %8049, %8945 : tensor<768xf32>
    %8947 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8948 = stablehlo.divide %8055, %8947 : tensor<768x768xf32>
    %8949 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8950 = stablehlo.divide %8061, %8949 : tensor<768xf32>
    %8951 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8952 = stablehlo.divide %8067, %8951 : tensor<768x768xf32>
    %8953 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8954 = stablehlo.divide %8073, %8953 : tensor<768xf32>
    %8955 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8956 = stablehlo.divide %8079, %8955 : tensor<768xf32>
    %8957 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8958 = stablehlo.divide %8085, %8957 : tensor<768xf32>
    %8959 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8960 = stablehlo.divide %8091, %8959 : tensor<3072x768xf32>
    %8961 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8962 = stablehlo.divide %8097, %8961 : tensor<768xf32>
    %8963 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8964 = stablehlo.divide %8103, %8963 : tensor<768xf32>
    %8965 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8966 = stablehlo.divide %8109, %8965 : tensor<3072xf32>
    %8967 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8968 = stablehlo.divide %8115, %8967 : tensor<768x3072xf32>
    %8969 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8970 = stablehlo.divide %8121, %8969 : tensor<768xf32>
    %8971 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8972 = stablehlo.divide %8127, %8971 : tensor<768xf32>
    %8973 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8974 = stablehlo.divide %8133, %8973 : tensor<30522xf32>
    %8975 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8976 = stablehlo.divide %8139, %8975 : tensor<768xf32>
    %8977 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8978 = stablehlo.divide %8145, %8977 : tensor<768x768xf32>
    %8979 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8980 = stablehlo.divide %8151, %8979 : tensor<30522x768xf32>
    %8981 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8982 = stablehlo.divide %8157, %8981 : tensor<768xf32>
    %8983 = stablehlo.broadcast_in_dim %8578, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8984 = stablehlo.divide %8163, %8983 : tensor<768xf32>
    %8985 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8986 = stablehlo.add %8580, %8985 : tensor<512x768xf32>
    %8987 = stablehlo.sqrt %8986 : tensor<512x768xf32>
    %cst_723 = stablehlo.constant dense<9.99999993E-9> : tensor<f32>
    %8988 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8989 = stablehlo.add %8987, %8988 : tensor<512x768xf32>
    %8990 = stablehlo.divide %8171, %8989 : tensor<512x768xf32>
    %8991 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8992 = stablehlo.add %8582, %8991 : tensor<2x768xf32>
    %8993 = stablehlo.sqrt %8992 : tensor<2x768xf32>
    %8994 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8995 = stablehlo.add %8993, %8994 : tensor<2x768xf32>
    %8996 = stablehlo.divide %8173, %8995 : tensor<2x768xf32>
    %8997 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8998 = stablehlo.add %8584, %8997 : tensor<30522x768xf32>
    %8999 = stablehlo.sqrt %8998 : tensor<30522x768xf32>
    %9000 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9001 = stablehlo.add %8999, %9000 : tensor<30522x768xf32>
    %9002 = stablehlo.divide %8175, %9001 : tensor<30522x768xf32>
    %9003 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9004 = stablehlo.add %8586, %9003 : tensor<768xf32>
    %9005 = stablehlo.sqrt %9004 : tensor<768xf32>
    %9006 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9007 = stablehlo.add %9005, %9006 : tensor<768xf32>
    %9008 = stablehlo.divide %8177, %9007 : tensor<768xf32>
    %9009 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9010 = stablehlo.add %8588, %9009 : tensor<768x768xf32>
    %9011 = stablehlo.sqrt %9010 : tensor<768x768xf32>
    %9012 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9013 = stablehlo.add %9011, %9012 : tensor<768x768xf32>
    %9014 = stablehlo.divide %8179, %9013 : tensor<768x768xf32>
    %9015 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9016 = stablehlo.add %8590, %9015 : tensor<768xf32>
    %9017 = stablehlo.sqrt %9016 : tensor<768xf32>
    %9018 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9019 = stablehlo.add %9017, %9018 : tensor<768xf32>
    %9020 = stablehlo.divide %8181, %9019 : tensor<768xf32>
    %9021 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9022 = stablehlo.add %8592, %9021 : tensor<768x768xf32>
    %9023 = stablehlo.sqrt %9022 : tensor<768x768xf32>
    %9024 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9025 = stablehlo.add %9023, %9024 : tensor<768x768xf32>
    %9026 = stablehlo.divide %8183, %9025 : tensor<768x768xf32>
    %9027 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9028 = stablehlo.add %8594, %9027 : tensor<768xf32>
    %9029 = stablehlo.sqrt %9028 : tensor<768xf32>
    %9030 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9031 = stablehlo.add %9029, %9030 : tensor<768xf32>
    %9032 = stablehlo.divide %8185, %9031 : tensor<768xf32>
    %9033 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9034 = stablehlo.add %8596, %9033 : tensor<768x768xf32>
    %9035 = stablehlo.sqrt %9034 : tensor<768x768xf32>
    %9036 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9037 = stablehlo.add %9035, %9036 : tensor<768x768xf32>
    %9038 = stablehlo.divide %8187, %9037 : tensor<768x768xf32>
    %9039 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9040 = stablehlo.add %8598, %9039 : tensor<768xf32>
    %9041 = stablehlo.sqrt %9040 : tensor<768xf32>
    %9042 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9043 = stablehlo.add %9041, %9042 : tensor<768xf32>
    %9044 = stablehlo.divide %8189, %9043 : tensor<768xf32>
    %9045 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9046 = stablehlo.add %8600, %9045 : tensor<768x768xf32>
    %9047 = stablehlo.sqrt %9046 : tensor<768x768xf32>
    %9048 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9049 = stablehlo.add %9047, %9048 : tensor<768x768xf32>
    %9050 = stablehlo.divide %8191, %9049 : tensor<768x768xf32>
    %9051 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9052 = stablehlo.add %8602, %9051 : tensor<768xf32>
    %9053 = stablehlo.sqrt %9052 : tensor<768xf32>
    %9054 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9055 = stablehlo.add %9053, %9054 : tensor<768xf32>
    %9056 = stablehlo.divide %8193, %9055 : tensor<768xf32>
    %9057 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9058 = stablehlo.add %8604, %9057 : tensor<768xf32>
    %9059 = stablehlo.sqrt %9058 : tensor<768xf32>
    %9060 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9061 = stablehlo.add %9059, %9060 : tensor<768xf32>
    %9062 = stablehlo.divide %8195, %9061 : tensor<768xf32>
    %9063 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9064 = stablehlo.add %8606, %9063 : tensor<768xf32>
    %9065 = stablehlo.sqrt %9064 : tensor<768xf32>
    %9066 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9067 = stablehlo.add %9065, %9066 : tensor<768xf32>
    %9068 = stablehlo.divide %8197, %9067 : tensor<768xf32>
    %9069 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9070 = stablehlo.add %8608, %9069 : tensor<3072x768xf32>
    %9071 = stablehlo.sqrt %9070 : tensor<3072x768xf32>
    %9072 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9073 = stablehlo.add %9071, %9072 : tensor<3072x768xf32>
    %9074 = stablehlo.divide %8199, %9073 : tensor<3072x768xf32>
    %9075 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9076 = stablehlo.add %8610, %9075 : tensor<768xf32>
    %9077 = stablehlo.sqrt %9076 : tensor<768xf32>
    %9078 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9079 = stablehlo.add %9077, %9078 : tensor<768xf32>
    %9080 = stablehlo.divide %8201, %9079 : tensor<768xf32>
    %9081 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9082 = stablehlo.add %8612, %9081 : tensor<768xf32>
    %9083 = stablehlo.sqrt %9082 : tensor<768xf32>
    %9084 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9085 = stablehlo.add %9083, %9084 : tensor<768xf32>
    %9086 = stablehlo.divide %8203, %9085 : tensor<768xf32>
    %9087 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9088 = stablehlo.add %8614, %9087 : tensor<3072xf32>
    %9089 = stablehlo.sqrt %9088 : tensor<3072xf32>
    %9090 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9091 = stablehlo.add %9089, %9090 : tensor<3072xf32>
    %9092 = stablehlo.divide %8205, %9091 : tensor<3072xf32>
    %9093 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9094 = stablehlo.add %8616, %9093 : tensor<768x3072xf32>
    %9095 = stablehlo.sqrt %9094 : tensor<768x3072xf32>
    %9096 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9097 = stablehlo.add %9095, %9096 : tensor<768x3072xf32>
    %9098 = stablehlo.divide %8207, %9097 : tensor<768x3072xf32>
    %9099 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9100 = stablehlo.add %8618, %9099 : tensor<768xf32>
    %9101 = stablehlo.sqrt %9100 : tensor<768xf32>
    %9102 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9103 = stablehlo.add %9101, %9102 : tensor<768xf32>
    %9104 = stablehlo.divide %8209, %9103 : tensor<768xf32>
    %9105 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9106 = stablehlo.add %8620, %9105 : tensor<768x768xf32>
    %9107 = stablehlo.sqrt %9106 : tensor<768x768xf32>
    %9108 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9109 = stablehlo.add %9107, %9108 : tensor<768x768xf32>
    %9110 = stablehlo.divide %8211, %9109 : tensor<768x768xf32>
    %9111 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9112 = stablehlo.add %8622, %9111 : tensor<768xf32>
    %9113 = stablehlo.sqrt %9112 : tensor<768xf32>
    %9114 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9115 = stablehlo.add %9113, %9114 : tensor<768xf32>
    %9116 = stablehlo.divide %8213, %9115 : tensor<768xf32>
    %9117 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9118 = stablehlo.add %8624, %9117 : tensor<768x768xf32>
    %9119 = stablehlo.sqrt %9118 : tensor<768x768xf32>
    %9120 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9121 = stablehlo.add %9119, %9120 : tensor<768x768xf32>
    %9122 = stablehlo.divide %8215, %9121 : tensor<768x768xf32>
    %9123 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9124 = stablehlo.add %8626, %9123 : tensor<768xf32>
    %9125 = stablehlo.sqrt %9124 : tensor<768xf32>
    %9126 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9127 = stablehlo.add %9125, %9126 : tensor<768xf32>
    %9128 = stablehlo.divide %8217, %9127 : tensor<768xf32>
    %9129 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9130 = stablehlo.add %8628, %9129 : tensor<768x768xf32>
    %9131 = stablehlo.sqrt %9130 : tensor<768x768xf32>
    %9132 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9133 = stablehlo.add %9131, %9132 : tensor<768x768xf32>
    %9134 = stablehlo.divide %8219, %9133 : tensor<768x768xf32>
    %9135 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9136 = stablehlo.add %8630, %9135 : tensor<768xf32>
    %9137 = stablehlo.sqrt %9136 : tensor<768xf32>
    %9138 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9139 = stablehlo.add %9137, %9138 : tensor<768xf32>
    %9140 = stablehlo.divide %8221, %9139 : tensor<768xf32>
    %9141 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9142 = stablehlo.add %8632, %9141 : tensor<768x768xf32>
    %9143 = stablehlo.sqrt %9142 : tensor<768x768xf32>
    %9144 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9145 = stablehlo.add %9143, %9144 : tensor<768x768xf32>
    %9146 = stablehlo.divide %8223, %9145 : tensor<768x768xf32>
    %9147 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9148 = stablehlo.add %8634, %9147 : tensor<768xf32>
    %9149 = stablehlo.sqrt %9148 : tensor<768xf32>
    %9150 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9151 = stablehlo.add %9149, %9150 : tensor<768xf32>
    %9152 = stablehlo.divide %8225, %9151 : tensor<768xf32>
    %9153 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9154 = stablehlo.add %8636, %9153 : tensor<768xf32>
    %9155 = stablehlo.sqrt %9154 : tensor<768xf32>
    %9156 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9157 = stablehlo.add %9155, %9156 : tensor<768xf32>
    %9158 = stablehlo.divide %8227, %9157 : tensor<768xf32>
    %9159 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9160 = stablehlo.add %8638, %9159 : tensor<768xf32>
    %9161 = stablehlo.sqrt %9160 : tensor<768xf32>
    %9162 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9163 = stablehlo.add %9161, %9162 : tensor<768xf32>
    %9164 = stablehlo.divide %8229, %9163 : tensor<768xf32>
    %9165 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9166 = stablehlo.add %8640, %9165 : tensor<3072x768xf32>
    %9167 = stablehlo.sqrt %9166 : tensor<3072x768xf32>
    %9168 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9169 = stablehlo.add %9167, %9168 : tensor<3072x768xf32>
    %9170 = stablehlo.divide %8231, %9169 : tensor<3072x768xf32>
    %9171 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9172 = stablehlo.add %8642, %9171 : tensor<768xf32>
    %9173 = stablehlo.sqrt %9172 : tensor<768xf32>
    %9174 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9175 = stablehlo.add %9173, %9174 : tensor<768xf32>
    %9176 = stablehlo.divide %8233, %9175 : tensor<768xf32>
    %9177 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9178 = stablehlo.add %8644, %9177 : tensor<768xf32>
    %9179 = stablehlo.sqrt %9178 : tensor<768xf32>
    %9180 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9181 = stablehlo.add %9179, %9180 : tensor<768xf32>
    %9182 = stablehlo.divide %8235, %9181 : tensor<768xf32>
    %9183 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9184 = stablehlo.add %8646, %9183 : tensor<3072xf32>
    %9185 = stablehlo.sqrt %9184 : tensor<3072xf32>
    %9186 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9187 = stablehlo.add %9185, %9186 : tensor<3072xf32>
    %9188 = stablehlo.divide %8237, %9187 : tensor<3072xf32>
    %9189 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9190 = stablehlo.add %8648, %9189 : tensor<768x3072xf32>
    %9191 = stablehlo.sqrt %9190 : tensor<768x3072xf32>
    %9192 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9193 = stablehlo.add %9191, %9192 : tensor<768x3072xf32>
    %9194 = stablehlo.divide %8239, %9193 : tensor<768x3072xf32>
    %9195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9196 = stablehlo.add %8650, %9195 : tensor<768xf32>
    %9197 = stablehlo.sqrt %9196 : tensor<768xf32>
    %9198 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9199 = stablehlo.add %9197, %9198 : tensor<768xf32>
    %9200 = stablehlo.divide %8241, %9199 : tensor<768xf32>
    %9201 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9202 = stablehlo.add %8652, %9201 : tensor<768x768xf32>
    %9203 = stablehlo.sqrt %9202 : tensor<768x768xf32>
    %9204 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9205 = stablehlo.add %9203, %9204 : tensor<768x768xf32>
    %9206 = stablehlo.divide %8243, %9205 : tensor<768x768xf32>
    %9207 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9208 = stablehlo.add %8654, %9207 : tensor<768xf32>
    %9209 = stablehlo.sqrt %9208 : tensor<768xf32>
    %9210 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9211 = stablehlo.add %9209, %9210 : tensor<768xf32>
    %9212 = stablehlo.divide %8245, %9211 : tensor<768xf32>
    %9213 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9214 = stablehlo.add %8656, %9213 : tensor<768x768xf32>
    %9215 = stablehlo.sqrt %9214 : tensor<768x768xf32>
    %9216 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9217 = stablehlo.add %9215, %9216 : tensor<768x768xf32>
    %9218 = stablehlo.divide %8247, %9217 : tensor<768x768xf32>
    %9219 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9220 = stablehlo.add %8658, %9219 : tensor<768xf32>
    %9221 = stablehlo.sqrt %9220 : tensor<768xf32>
    %9222 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9223 = stablehlo.add %9221, %9222 : tensor<768xf32>
    %9224 = stablehlo.divide %8249, %9223 : tensor<768xf32>
    %9225 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9226 = stablehlo.add %8660, %9225 : tensor<768x768xf32>
    %9227 = stablehlo.sqrt %9226 : tensor<768x768xf32>
    %9228 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9229 = stablehlo.add %9227, %9228 : tensor<768x768xf32>
    %9230 = stablehlo.divide %8251, %9229 : tensor<768x768xf32>
    %9231 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9232 = stablehlo.add %8662, %9231 : tensor<768xf32>
    %9233 = stablehlo.sqrt %9232 : tensor<768xf32>
    %9234 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9235 = stablehlo.add %9233, %9234 : tensor<768xf32>
    %9236 = stablehlo.divide %8253, %9235 : tensor<768xf32>
    %9237 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9238 = stablehlo.add %8664, %9237 : tensor<768x768xf32>
    %9239 = stablehlo.sqrt %9238 : tensor<768x768xf32>
    %9240 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9241 = stablehlo.add %9239, %9240 : tensor<768x768xf32>
    %9242 = stablehlo.divide %8255, %9241 : tensor<768x768xf32>
    %9243 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9244 = stablehlo.add %8666, %9243 : tensor<768xf32>
    %9245 = stablehlo.sqrt %9244 : tensor<768xf32>
    %9246 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9247 = stablehlo.add %9245, %9246 : tensor<768xf32>
    %9248 = stablehlo.divide %8257, %9247 : tensor<768xf32>
    %9249 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9250 = stablehlo.add %8668, %9249 : tensor<768xf32>
    %9251 = stablehlo.sqrt %9250 : tensor<768xf32>
    %9252 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9253 = stablehlo.add %9251, %9252 : tensor<768xf32>
    %9254 = stablehlo.divide %8259, %9253 : tensor<768xf32>
    %9255 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9256 = stablehlo.add %8670, %9255 : tensor<768xf32>
    %9257 = stablehlo.sqrt %9256 : tensor<768xf32>
    %9258 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9259 = stablehlo.add %9257, %9258 : tensor<768xf32>
    %9260 = stablehlo.divide %8261, %9259 : tensor<768xf32>
    %9261 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9262 = stablehlo.add %8672, %9261 : tensor<3072x768xf32>
    %9263 = stablehlo.sqrt %9262 : tensor<3072x768xf32>
    %9264 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9265 = stablehlo.add %9263, %9264 : tensor<3072x768xf32>
    %9266 = stablehlo.divide %8263, %9265 : tensor<3072x768xf32>
    %9267 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9268 = stablehlo.add %8674, %9267 : tensor<768xf32>
    %9269 = stablehlo.sqrt %9268 : tensor<768xf32>
    %9270 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9271 = stablehlo.add %9269, %9270 : tensor<768xf32>
    %9272 = stablehlo.divide %8265, %9271 : tensor<768xf32>
    %9273 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9274 = stablehlo.add %8676, %9273 : tensor<768xf32>
    %9275 = stablehlo.sqrt %9274 : tensor<768xf32>
    %9276 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9277 = stablehlo.add %9275, %9276 : tensor<768xf32>
    %9278 = stablehlo.divide %8267, %9277 : tensor<768xf32>
    %9279 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9280 = stablehlo.add %8678, %9279 : tensor<3072xf32>
    %9281 = stablehlo.sqrt %9280 : tensor<3072xf32>
    %9282 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9283 = stablehlo.add %9281, %9282 : tensor<3072xf32>
    %9284 = stablehlo.divide %8269, %9283 : tensor<3072xf32>
    %9285 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9286 = stablehlo.add %8680, %9285 : tensor<768x3072xf32>
    %9287 = stablehlo.sqrt %9286 : tensor<768x3072xf32>
    %9288 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9289 = stablehlo.add %9287, %9288 : tensor<768x3072xf32>
    %9290 = stablehlo.divide %8271, %9289 : tensor<768x3072xf32>
    %9291 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9292 = stablehlo.add %8682, %9291 : tensor<768xf32>
    %9293 = stablehlo.sqrt %9292 : tensor<768xf32>
    %9294 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9295 = stablehlo.add %9293, %9294 : tensor<768xf32>
    %9296 = stablehlo.divide %8273, %9295 : tensor<768xf32>
    %9297 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9298 = stablehlo.add %8684, %9297 : tensor<768x768xf32>
    %9299 = stablehlo.sqrt %9298 : tensor<768x768xf32>
    %9300 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9301 = stablehlo.add %9299, %9300 : tensor<768x768xf32>
    %9302 = stablehlo.divide %8275, %9301 : tensor<768x768xf32>
    %9303 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9304 = stablehlo.add %8686, %9303 : tensor<768xf32>
    %9305 = stablehlo.sqrt %9304 : tensor<768xf32>
    %9306 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9307 = stablehlo.add %9305, %9306 : tensor<768xf32>
    %9308 = stablehlo.divide %8277, %9307 : tensor<768xf32>
    %9309 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9310 = stablehlo.add %8688, %9309 : tensor<768x768xf32>
    %9311 = stablehlo.sqrt %9310 : tensor<768x768xf32>
    %9312 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9313 = stablehlo.add %9311, %9312 : tensor<768x768xf32>
    %9314 = stablehlo.divide %8279, %9313 : tensor<768x768xf32>
    %9315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9316 = stablehlo.add %8690, %9315 : tensor<768xf32>
    %9317 = stablehlo.sqrt %9316 : tensor<768xf32>
    %9318 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9319 = stablehlo.add %9317, %9318 : tensor<768xf32>
    %9320 = stablehlo.divide %8281, %9319 : tensor<768xf32>
    %9321 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9322 = stablehlo.add %8692, %9321 : tensor<768x768xf32>
    %9323 = stablehlo.sqrt %9322 : tensor<768x768xf32>
    %9324 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9325 = stablehlo.add %9323, %9324 : tensor<768x768xf32>
    %9326 = stablehlo.divide %8283, %9325 : tensor<768x768xf32>
    %9327 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9328 = stablehlo.add %8694, %9327 : tensor<768xf32>
    %9329 = stablehlo.sqrt %9328 : tensor<768xf32>
    %9330 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9331 = stablehlo.add %9329, %9330 : tensor<768xf32>
    %9332 = stablehlo.divide %8285, %9331 : tensor<768xf32>
    %9333 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9334 = stablehlo.add %8696, %9333 : tensor<768x768xf32>
    %9335 = stablehlo.sqrt %9334 : tensor<768x768xf32>
    %9336 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9337 = stablehlo.add %9335, %9336 : tensor<768x768xf32>
    %9338 = stablehlo.divide %8287, %9337 : tensor<768x768xf32>
    %9339 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9340 = stablehlo.add %8698, %9339 : tensor<768xf32>
    %9341 = stablehlo.sqrt %9340 : tensor<768xf32>
    %9342 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9343 = stablehlo.add %9341, %9342 : tensor<768xf32>
    %9344 = stablehlo.divide %8289, %9343 : tensor<768xf32>
    %9345 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9346 = stablehlo.add %8700, %9345 : tensor<768xf32>
    %9347 = stablehlo.sqrt %9346 : tensor<768xf32>
    %9348 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9349 = stablehlo.add %9347, %9348 : tensor<768xf32>
    %9350 = stablehlo.divide %8291, %9349 : tensor<768xf32>
    %9351 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9352 = stablehlo.add %8702, %9351 : tensor<768xf32>
    %9353 = stablehlo.sqrt %9352 : tensor<768xf32>
    %9354 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9355 = stablehlo.add %9353, %9354 : tensor<768xf32>
    %9356 = stablehlo.divide %8293, %9355 : tensor<768xf32>
    %9357 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9358 = stablehlo.add %8704, %9357 : tensor<3072x768xf32>
    %9359 = stablehlo.sqrt %9358 : tensor<3072x768xf32>
    %9360 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9361 = stablehlo.add %9359, %9360 : tensor<3072x768xf32>
    %9362 = stablehlo.divide %8295, %9361 : tensor<3072x768xf32>
    %9363 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9364 = stablehlo.add %8706, %9363 : tensor<768xf32>
    %9365 = stablehlo.sqrt %9364 : tensor<768xf32>
    %9366 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9367 = stablehlo.add %9365, %9366 : tensor<768xf32>
    %9368 = stablehlo.divide %8297, %9367 : tensor<768xf32>
    %9369 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9370 = stablehlo.add %8708, %9369 : tensor<768xf32>
    %9371 = stablehlo.sqrt %9370 : tensor<768xf32>
    %9372 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9373 = stablehlo.add %9371, %9372 : tensor<768xf32>
    %9374 = stablehlo.divide %8299, %9373 : tensor<768xf32>
    %9375 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9376 = stablehlo.add %8710, %9375 : tensor<3072xf32>
    %9377 = stablehlo.sqrt %9376 : tensor<3072xf32>
    %9378 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9379 = stablehlo.add %9377, %9378 : tensor<3072xf32>
    %9380 = stablehlo.divide %8301, %9379 : tensor<3072xf32>
    %9381 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9382 = stablehlo.add %8712, %9381 : tensor<768x3072xf32>
    %9383 = stablehlo.sqrt %9382 : tensor<768x3072xf32>
    %9384 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9385 = stablehlo.add %9383, %9384 : tensor<768x3072xf32>
    %9386 = stablehlo.divide %8303, %9385 : tensor<768x3072xf32>
    %9387 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9388 = stablehlo.add %8714, %9387 : tensor<768xf32>
    %9389 = stablehlo.sqrt %9388 : tensor<768xf32>
    %9390 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9391 = stablehlo.add %9389, %9390 : tensor<768xf32>
    %9392 = stablehlo.divide %8305, %9391 : tensor<768xf32>
    %9393 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9394 = stablehlo.add %8716, %9393 : tensor<768x768xf32>
    %9395 = stablehlo.sqrt %9394 : tensor<768x768xf32>
    %9396 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9397 = stablehlo.add %9395, %9396 : tensor<768x768xf32>
    %9398 = stablehlo.divide %8307, %9397 : tensor<768x768xf32>
    %9399 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9400 = stablehlo.add %8718, %9399 : tensor<768xf32>
    %9401 = stablehlo.sqrt %9400 : tensor<768xf32>
    %9402 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9403 = stablehlo.add %9401, %9402 : tensor<768xf32>
    %9404 = stablehlo.divide %8309, %9403 : tensor<768xf32>
    %9405 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9406 = stablehlo.add %8720, %9405 : tensor<768x768xf32>
    %9407 = stablehlo.sqrt %9406 : tensor<768x768xf32>
    %9408 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9409 = stablehlo.add %9407, %9408 : tensor<768x768xf32>
    %9410 = stablehlo.divide %8311, %9409 : tensor<768x768xf32>
    %9411 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9412 = stablehlo.add %8722, %9411 : tensor<768xf32>
    %9413 = stablehlo.sqrt %9412 : tensor<768xf32>
    %9414 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9415 = stablehlo.add %9413, %9414 : tensor<768xf32>
    %9416 = stablehlo.divide %8313, %9415 : tensor<768xf32>
    %9417 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9418 = stablehlo.add %8724, %9417 : tensor<768x768xf32>
    %9419 = stablehlo.sqrt %9418 : tensor<768x768xf32>
    %9420 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9421 = stablehlo.add %9419, %9420 : tensor<768x768xf32>
    %9422 = stablehlo.divide %8315, %9421 : tensor<768x768xf32>
    %9423 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9424 = stablehlo.add %8726, %9423 : tensor<768xf32>
    %9425 = stablehlo.sqrt %9424 : tensor<768xf32>
    %9426 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9427 = stablehlo.add %9425, %9426 : tensor<768xf32>
    %9428 = stablehlo.divide %8317, %9427 : tensor<768xf32>
    %9429 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9430 = stablehlo.add %8728, %9429 : tensor<768x768xf32>
    %9431 = stablehlo.sqrt %9430 : tensor<768x768xf32>
    %9432 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9433 = stablehlo.add %9431, %9432 : tensor<768x768xf32>
    %9434 = stablehlo.divide %8319, %9433 : tensor<768x768xf32>
    %9435 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9436 = stablehlo.add %8730, %9435 : tensor<768xf32>
    %9437 = stablehlo.sqrt %9436 : tensor<768xf32>
    %9438 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9439 = stablehlo.add %9437, %9438 : tensor<768xf32>
    %9440 = stablehlo.divide %8321, %9439 : tensor<768xf32>
    %9441 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9442 = stablehlo.add %8732, %9441 : tensor<768xf32>
    %9443 = stablehlo.sqrt %9442 : tensor<768xf32>
    %9444 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9445 = stablehlo.add %9443, %9444 : tensor<768xf32>
    %9446 = stablehlo.divide %8323, %9445 : tensor<768xf32>
    %9447 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9448 = stablehlo.add %8734, %9447 : tensor<768xf32>
    %9449 = stablehlo.sqrt %9448 : tensor<768xf32>
    %9450 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9451 = stablehlo.add %9449, %9450 : tensor<768xf32>
    %9452 = stablehlo.divide %8325, %9451 : tensor<768xf32>
    %9453 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9454 = stablehlo.add %8736, %9453 : tensor<3072x768xf32>
    %9455 = stablehlo.sqrt %9454 : tensor<3072x768xf32>
    %9456 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9457 = stablehlo.add %9455, %9456 : tensor<3072x768xf32>
    %9458 = stablehlo.divide %8327, %9457 : tensor<3072x768xf32>
    %9459 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9460 = stablehlo.add %8738, %9459 : tensor<768xf32>
    %9461 = stablehlo.sqrt %9460 : tensor<768xf32>
    %9462 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9463 = stablehlo.add %9461, %9462 : tensor<768xf32>
    %9464 = stablehlo.divide %8329, %9463 : tensor<768xf32>
    %9465 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9466 = stablehlo.add %8740, %9465 : tensor<768xf32>
    %9467 = stablehlo.sqrt %9466 : tensor<768xf32>
    %9468 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9469 = stablehlo.add %9467, %9468 : tensor<768xf32>
    %9470 = stablehlo.divide %8331, %9469 : tensor<768xf32>
    %9471 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9472 = stablehlo.add %8742, %9471 : tensor<3072xf32>
    %9473 = stablehlo.sqrt %9472 : tensor<3072xf32>
    %9474 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9475 = stablehlo.add %9473, %9474 : tensor<3072xf32>
    %9476 = stablehlo.divide %8333, %9475 : tensor<3072xf32>
    %9477 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9478 = stablehlo.add %8744, %9477 : tensor<768x3072xf32>
    %9479 = stablehlo.sqrt %9478 : tensor<768x3072xf32>
    %9480 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9481 = stablehlo.add %9479, %9480 : tensor<768x3072xf32>
    %9482 = stablehlo.divide %8335, %9481 : tensor<768x3072xf32>
    %9483 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9484 = stablehlo.add %8746, %9483 : tensor<768xf32>
    %9485 = stablehlo.sqrt %9484 : tensor<768xf32>
    %9486 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9487 = stablehlo.add %9485, %9486 : tensor<768xf32>
    %9488 = stablehlo.divide %8337, %9487 : tensor<768xf32>
    %9489 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9490 = stablehlo.add %8748, %9489 : tensor<768x768xf32>
    %9491 = stablehlo.sqrt %9490 : tensor<768x768xf32>
    %9492 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9493 = stablehlo.add %9491, %9492 : tensor<768x768xf32>
    %9494 = stablehlo.divide %8339, %9493 : tensor<768x768xf32>
    %9495 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9496 = stablehlo.add %8750, %9495 : tensor<768xf32>
    %9497 = stablehlo.sqrt %9496 : tensor<768xf32>
    %9498 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9499 = stablehlo.add %9497, %9498 : tensor<768xf32>
    %9500 = stablehlo.divide %8341, %9499 : tensor<768xf32>
    %9501 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9502 = stablehlo.add %8752, %9501 : tensor<768x768xf32>
    %9503 = stablehlo.sqrt %9502 : tensor<768x768xf32>
    %9504 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9505 = stablehlo.add %9503, %9504 : tensor<768x768xf32>
    %9506 = stablehlo.divide %8343, %9505 : tensor<768x768xf32>
    %9507 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9508 = stablehlo.add %8754, %9507 : tensor<768xf32>
    %9509 = stablehlo.sqrt %9508 : tensor<768xf32>
    %9510 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9511 = stablehlo.add %9509, %9510 : tensor<768xf32>
    %9512 = stablehlo.divide %8345, %9511 : tensor<768xf32>
    %9513 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9514 = stablehlo.add %8756, %9513 : tensor<768x768xf32>
    %9515 = stablehlo.sqrt %9514 : tensor<768x768xf32>
    %9516 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9517 = stablehlo.add %9515, %9516 : tensor<768x768xf32>
    %9518 = stablehlo.divide %8347, %9517 : tensor<768x768xf32>
    %9519 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9520 = stablehlo.add %8758, %9519 : tensor<768xf32>
    %9521 = stablehlo.sqrt %9520 : tensor<768xf32>
    %9522 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9523 = stablehlo.add %9521, %9522 : tensor<768xf32>
    %9524 = stablehlo.divide %8349, %9523 : tensor<768xf32>
    %9525 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9526 = stablehlo.add %8760, %9525 : tensor<768x768xf32>
    %9527 = stablehlo.sqrt %9526 : tensor<768x768xf32>
    %9528 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9529 = stablehlo.add %9527, %9528 : tensor<768x768xf32>
    %9530 = stablehlo.divide %8351, %9529 : tensor<768x768xf32>
    %9531 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9532 = stablehlo.add %8762, %9531 : tensor<768xf32>
    %9533 = stablehlo.sqrt %9532 : tensor<768xf32>
    %9534 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9535 = stablehlo.add %9533, %9534 : tensor<768xf32>
    %9536 = stablehlo.divide %8353, %9535 : tensor<768xf32>
    %9537 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9538 = stablehlo.add %8764, %9537 : tensor<768xf32>
    %9539 = stablehlo.sqrt %9538 : tensor<768xf32>
    %9540 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9541 = stablehlo.add %9539, %9540 : tensor<768xf32>
    %9542 = stablehlo.divide %8355, %9541 : tensor<768xf32>
    %9543 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9544 = stablehlo.add %8766, %9543 : tensor<768xf32>
    %9545 = stablehlo.sqrt %9544 : tensor<768xf32>
    %9546 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9547 = stablehlo.add %9545, %9546 : tensor<768xf32>
    %9548 = stablehlo.divide %8357, %9547 : tensor<768xf32>
    %9549 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9550 = stablehlo.add %8768, %9549 : tensor<3072x768xf32>
    %9551 = stablehlo.sqrt %9550 : tensor<3072x768xf32>
    %9552 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9553 = stablehlo.add %9551, %9552 : tensor<3072x768xf32>
    %9554 = stablehlo.divide %8359, %9553 : tensor<3072x768xf32>
    %9555 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9556 = stablehlo.add %8770, %9555 : tensor<768xf32>
    %9557 = stablehlo.sqrt %9556 : tensor<768xf32>
    %9558 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9559 = stablehlo.add %9557, %9558 : tensor<768xf32>
    %9560 = stablehlo.divide %8361, %9559 : tensor<768xf32>
    %9561 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9562 = stablehlo.add %8772, %9561 : tensor<768xf32>
    %9563 = stablehlo.sqrt %9562 : tensor<768xf32>
    %9564 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9565 = stablehlo.add %9563, %9564 : tensor<768xf32>
    %9566 = stablehlo.divide %8363, %9565 : tensor<768xf32>
    %9567 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9568 = stablehlo.add %8774, %9567 : tensor<3072xf32>
    %9569 = stablehlo.sqrt %9568 : tensor<3072xf32>
    %9570 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9571 = stablehlo.add %9569, %9570 : tensor<3072xf32>
    %9572 = stablehlo.divide %8365, %9571 : tensor<3072xf32>
    %9573 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9574 = stablehlo.add %8776, %9573 : tensor<768x3072xf32>
    %9575 = stablehlo.sqrt %9574 : tensor<768x3072xf32>
    %9576 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9577 = stablehlo.add %9575, %9576 : tensor<768x3072xf32>
    %9578 = stablehlo.divide %8367, %9577 : tensor<768x3072xf32>
    %9579 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9580 = stablehlo.add %8778, %9579 : tensor<768xf32>
    %9581 = stablehlo.sqrt %9580 : tensor<768xf32>
    %9582 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9583 = stablehlo.add %9581, %9582 : tensor<768xf32>
    %9584 = stablehlo.divide %8369, %9583 : tensor<768xf32>
    %9585 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9586 = stablehlo.add %8780, %9585 : tensor<768x768xf32>
    %9587 = stablehlo.sqrt %9586 : tensor<768x768xf32>
    %9588 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9589 = stablehlo.add %9587, %9588 : tensor<768x768xf32>
    %9590 = stablehlo.divide %8371, %9589 : tensor<768x768xf32>
    %9591 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9592 = stablehlo.add %8782, %9591 : tensor<768xf32>
    %9593 = stablehlo.sqrt %9592 : tensor<768xf32>
    %9594 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9595 = stablehlo.add %9593, %9594 : tensor<768xf32>
    %9596 = stablehlo.divide %8373, %9595 : tensor<768xf32>
    %9597 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9598 = stablehlo.add %8784, %9597 : tensor<768x768xf32>
    %9599 = stablehlo.sqrt %9598 : tensor<768x768xf32>
    %9600 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9601 = stablehlo.add %9599, %9600 : tensor<768x768xf32>
    %9602 = stablehlo.divide %8375, %9601 : tensor<768x768xf32>
    %9603 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9604 = stablehlo.add %8786, %9603 : tensor<768xf32>
    %9605 = stablehlo.sqrt %9604 : tensor<768xf32>
    %9606 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9607 = stablehlo.add %9605, %9606 : tensor<768xf32>
    %9608 = stablehlo.divide %8377, %9607 : tensor<768xf32>
    %9609 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9610 = stablehlo.add %8788, %9609 : tensor<768x768xf32>
    %9611 = stablehlo.sqrt %9610 : tensor<768x768xf32>
    %9612 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9613 = stablehlo.add %9611, %9612 : tensor<768x768xf32>
    %9614 = stablehlo.divide %8379, %9613 : tensor<768x768xf32>
    %9615 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9616 = stablehlo.add %8790, %9615 : tensor<768xf32>
    %9617 = stablehlo.sqrt %9616 : tensor<768xf32>
    %9618 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9619 = stablehlo.add %9617, %9618 : tensor<768xf32>
    %9620 = stablehlo.divide %8381, %9619 : tensor<768xf32>
    %9621 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9622 = stablehlo.add %8792, %9621 : tensor<768x768xf32>
    %9623 = stablehlo.sqrt %9622 : tensor<768x768xf32>
    %9624 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9625 = stablehlo.add %9623, %9624 : tensor<768x768xf32>
    %9626 = stablehlo.divide %8383, %9625 : tensor<768x768xf32>
    %9627 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9628 = stablehlo.add %8794, %9627 : tensor<768xf32>
    %9629 = stablehlo.sqrt %9628 : tensor<768xf32>
    %9630 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9631 = stablehlo.add %9629, %9630 : tensor<768xf32>
    %9632 = stablehlo.divide %8385, %9631 : tensor<768xf32>
    %9633 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9634 = stablehlo.add %8796, %9633 : tensor<768xf32>
    %9635 = stablehlo.sqrt %9634 : tensor<768xf32>
    %9636 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9637 = stablehlo.add %9635, %9636 : tensor<768xf32>
    %9638 = stablehlo.divide %8387, %9637 : tensor<768xf32>
    %9639 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9640 = stablehlo.add %8798, %9639 : tensor<768xf32>
    %9641 = stablehlo.sqrt %9640 : tensor<768xf32>
    %9642 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9643 = stablehlo.add %9641, %9642 : tensor<768xf32>
    %9644 = stablehlo.divide %8389, %9643 : tensor<768xf32>
    %9645 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9646 = stablehlo.add %8800, %9645 : tensor<3072x768xf32>
    %9647 = stablehlo.sqrt %9646 : tensor<3072x768xf32>
    %9648 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9649 = stablehlo.add %9647, %9648 : tensor<3072x768xf32>
    %9650 = stablehlo.divide %8391, %9649 : tensor<3072x768xf32>
    %9651 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9652 = stablehlo.add %8802, %9651 : tensor<768xf32>
    %9653 = stablehlo.sqrt %9652 : tensor<768xf32>
    %9654 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9655 = stablehlo.add %9653, %9654 : tensor<768xf32>
    %9656 = stablehlo.divide %8393, %9655 : tensor<768xf32>
    %9657 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9658 = stablehlo.add %8804, %9657 : tensor<768xf32>
    %9659 = stablehlo.sqrt %9658 : tensor<768xf32>
    %9660 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9661 = stablehlo.add %9659, %9660 : tensor<768xf32>
    %9662 = stablehlo.divide %8395, %9661 : tensor<768xf32>
    %9663 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9664 = stablehlo.add %8806, %9663 : tensor<3072xf32>
    %9665 = stablehlo.sqrt %9664 : tensor<3072xf32>
    %9666 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9667 = stablehlo.add %9665, %9666 : tensor<3072xf32>
    %9668 = stablehlo.divide %8397, %9667 : tensor<3072xf32>
    %9669 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9670 = stablehlo.add %8808, %9669 : tensor<768x3072xf32>
    %9671 = stablehlo.sqrt %9670 : tensor<768x3072xf32>
    %9672 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9673 = stablehlo.add %9671, %9672 : tensor<768x3072xf32>
    %9674 = stablehlo.divide %8399, %9673 : tensor<768x3072xf32>
    %9675 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9676 = stablehlo.add %8810, %9675 : tensor<768xf32>
    %9677 = stablehlo.sqrt %9676 : tensor<768xf32>
    %9678 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9679 = stablehlo.add %9677, %9678 : tensor<768xf32>
    %9680 = stablehlo.divide %8401, %9679 : tensor<768xf32>
    %9681 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9682 = stablehlo.add %8812, %9681 : tensor<768x768xf32>
    %9683 = stablehlo.sqrt %9682 : tensor<768x768xf32>
    %9684 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9685 = stablehlo.add %9683, %9684 : tensor<768x768xf32>
    %9686 = stablehlo.divide %8403, %9685 : tensor<768x768xf32>
    %9687 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9688 = stablehlo.add %8814, %9687 : tensor<768xf32>
    %9689 = stablehlo.sqrt %9688 : tensor<768xf32>
    %9690 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9691 = stablehlo.add %9689, %9690 : tensor<768xf32>
    %9692 = stablehlo.divide %8405, %9691 : tensor<768xf32>
    %9693 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9694 = stablehlo.add %8816, %9693 : tensor<768x768xf32>
    %9695 = stablehlo.sqrt %9694 : tensor<768x768xf32>
    %9696 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9697 = stablehlo.add %9695, %9696 : tensor<768x768xf32>
    %9698 = stablehlo.divide %8407, %9697 : tensor<768x768xf32>
    %9699 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9700 = stablehlo.add %8818, %9699 : tensor<768xf32>
    %9701 = stablehlo.sqrt %9700 : tensor<768xf32>
    %9702 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9703 = stablehlo.add %9701, %9702 : tensor<768xf32>
    %9704 = stablehlo.divide %8409, %9703 : tensor<768xf32>
    %9705 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9706 = stablehlo.add %8820, %9705 : tensor<768x768xf32>
    %9707 = stablehlo.sqrt %9706 : tensor<768x768xf32>
    %9708 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9709 = stablehlo.add %9707, %9708 : tensor<768x768xf32>
    %9710 = stablehlo.divide %8411, %9709 : tensor<768x768xf32>
    %9711 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9712 = stablehlo.add %8822, %9711 : tensor<768xf32>
    %9713 = stablehlo.sqrt %9712 : tensor<768xf32>
    %9714 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9715 = stablehlo.add %9713, %9714 : tensor<768xf32>
    %9716 = stablehlo.divide %8413, %9715 : tensor<768xf32>
    %9717 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9718 = stablehlo.add %8824, %9717 : tensor<768x768xf32>
    %9719 = stablehlo.sqrt %9718 : tensor<768x768xf32>
    %9720 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9721 = stablehlo.add %9719, %9720 : tensor<768x768xf32>
    %9722 = stablehlo.divide %8415, %9721 : tensor<768x768xf32>
    %9723 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9724 = stablehlo.add %8826, %9723 : tensor<768xf32>
    %9725 = stablehlo.sqrt %9724 : tensor<768xf32>
    %9726 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9727 = stablehlo.add %9725, %9726 : tensor<768xf32>
    %9728 = stablehlo.divide %8417, %9727 : tensor<768xf32>
    %9729 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9730 = stablehlo.add %8828, %9729 : tensor<768xf32>
    %9731 = stablehlo.sqrt %9730 : tensor<768xf32>
    %9732 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9733 = stablehlo.add %9731, %9732 : tensor<768xf32>
    %9734 = stablehlo.divide %8419, %9733 : tensor<768xf32>
    %9735 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9736 = stablehlo.add %8830, %9735 : tensor<768xf32>
    %9737 = stablehlo.sqrt %9736 : tensor<768xf32>
    %9738 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9739 = stablehlo.add %9737, %9738 : tensor<768xf32>
    %9740 = stablehlo.divide %8421, %9739 : tensor<768xf32>
    %9741 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9742 = stablehlo.add %8832, %9741 : tensor<3072x768xf32>
    %9743 = stablehlo.sqrt %9742 : tensor<3072x768xf32>
    %9744 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9745 = stablehlo.add %9743, %9744 : tensor<3072x768xf32>
    %9746 = stablehlo.divide %8423, %9745 : tensor<3072x768xf32>
    %9747 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9748 = stablehlo.add %8834, %9747 : tensor<768xf32>
    %9749 = stablehlo.sqrt %9748 : tensor<768xf32>
    %9750 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9751 = stablehlo.add %9749, %9750 : tensor<768xf32>
    %9752 = stablehlo.divide %8425, %9751 : tensor<768xf32>
    %9753 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9754 = stablehlo.add %8836, %9753 : tensor<768xf32>
    %9755 = stablehlo.sqrt %9754 : tensor<768xf32>
    %9756 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9757 = stablehlo.add %9755, %9756 : tensor<768xf32>
    %9758 = stablehlo.divide %8427, %9757 : tensor<768xf32>
    %9759 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9760 = stablehlo.add %8838, %9759 : tensor<3072xf32>
    %9761 = stablehlo.sqrt %9760 : tensor<3072xf32>
    %9762 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9763 = stablehlo.add %9761, %9762 : tensor<3072xf32>
    %9764 = stablehlo.divide %8429, %9763 : tensor<3072xf32>
    %9765 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9766 = stablehlo.add %8840, %9765 : tensor<768x3072xf32>
    %9767 = stablehlo.sqrt %9766 : tensor<768x3072xf32>
    %9768 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9769 = stablehlo.add %9767, %9768 : tensor<768x3072xf32>
    %9770 = stablehlo.divide %8431, %9769 : tensor<768x3072xf32>
    %9771 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9772 = stablehlo.add %8842, %9771 : tensor<768xf32>
    %9773 = stablehlo.sqrt %9772 : tensor<768xf32>
    %9774 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9775 = stablehlo.add %9773, %9774 : tensor<768xf32>
    %9776 = stablehlo.divide %8433, %9775 : tensor<768xf32>
    %9777 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9778 = stablehlo.add %8844, %9777 : tensor<768x768xf32>
    %9779 = stablehlo.sqrt %9778 : tensor<768x768xf32>
    %9780 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9781 = stablehlo.add %9779, %9780 : tensor<768x768xf32>
    %9782 = stablehlo.divide %8435, %9781 : tensor<768x768xf32>
    %9783 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9784 = stablehlo.add %8846, %9783 : tensor<768xf32>
    %9785 = stablehlo.sqrt %9784 : tensor<768xf32>
    %9786 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9787 = stablehlo.add %9785, %9786 : tensor<768xf32>
    %9788 = stablehlo.divide %8437, %9787 : tensor<768xf32>
    %9789 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9790 = stablehlo.add %8848, %9789 : tensor<768x768xf32>
    %9791 = stablehlo.sqrt %9790 : tensor<768x768xf32>
    %9792 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9793 = stablehlo.add %9791, %9792 : tensor<768x768xf32>
    %9794 = stablehlo.divide %8439, %9793 : tensor<768x768xf32>
    %9795 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9796 = stablehlo.add %8850, %9795 : tensor<768xf32>
    %9797 = stablehlo.sqrt %9796 : tensor<768xf32>
    %9798 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9799 = stablehlo.add %9797, %9798 : tensor<768xf32>
    %9800 = stablehlo.divide %8441, %9799 : tensor<768xf32>
    %9801 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9802 = stablehlo.add %8852, %9801 : tensor<768x768xf32>
    %9803 = stablehlo.sqrt %9802 : tensor<768x768xf32>
    %9804 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9805 = stablehlo.add %9803, %9804 : tensor<768x768xf32>
    %9806 = stablehlo.divide %8443, %9805 : tensor<768x768xf32>
    %9807 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9808 = stablehlo.add %8854, %9807 : tensor<768xf32>
    %9809 = stablehlo.sqrt %9808 : tensor<768xf32>
    %9810 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9811 = stablehlo.add %9809, %9810 : tensor<768xf32>
    %9812 = stablehlo.divide %8445, %9811 : tensor<768xf32>
    %9813 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9814 = stablehlo.add %8856, %9813 : tensor<768x768xf32>
    %9815 = stablehlo.sqrt %9814 : tensor<768x768xf32>
    %9816 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9817 = stablehlo.add %9815, %9816 : tensor<768x768xf32>
    %9818 = stablehlo.divide %8447, %9817 : tensor<768x768xf32>
    %9819 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9820 = stablehlo.add %8858, %9819 : tensor<768xf32>
    %9821 = stablehlo.sqrt %9820 : tensor<768xf32>
    %9822 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9823 = stablehlo.add %9821, %9822 : tensor<768xf32>
    %9824 = stablehlo.divide %8449, %9823 : tensor<768xf32>
    %9825 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9826 = stablehlo.add %8860, %9825 : tensor<768xf32>
    %9827 = stablehlo.sqrt %9826 : tensor<768xf32>
    %9828 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9829 = stablehlo.add %9827, %9828 : tensor<768xf32>
    %9830 = stablehlo.divide %8451, %9829 : tensor<768xf32>
    %9831 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9832 = stablehlo.add %8862, %9831 : tensor<768xf32>
    %9833 = stablehlo.sqrt %9832 : tensor<768xf32>
    %9834 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9835 = stablehlo.add %9833, %9834 : tensor<768xf32>
    %9836 = stablehlo.divide %8453, %9835 : tensor<768xf32>
    %9837 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9838 = stablehlo.add %8864, %9837 : tensor<3072x768xf32>
    %9839 = stablehlo.sqrt %9838 : tensor<3072x768xf32>
    %9840 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9841 = stablehlo.add %9839, %9840 : tensor<3072x768xf32>
    %9842 = stablehlo.divide %8455, %9841 : tensor<3072x768xf32>
    %9843 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9844 = stablehlo.add %8866, %9843 : tensor<768xf32>
    %9845 = stablehlo.sqrt %9844 : tensor<768xf32>
    %9846 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9847 = stablehlo.add %9845, %9846 : tensor<768xf32>
    %9848 = stablehlo.divide %8457, %9847 : tensor<768xf32>
    %9849 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9850 = stablehlo.add %8868, %9849 : tensor<768xf32>
    %9851 = stablehlo.sqrt %9850 : tensor<768xf32>
    %9852 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9853 = stablehlo.add %9851, %9852 : tensor<768xf32>
    %9854 = stablehlo.divide %8459, %9853 : tensor<768xf32>
    %9855 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9856 = stablehlo.add %8870, %9855 : tensor<3072xf32>
    %9857 = stablehlo.sqrt %9856 : tensor<3072xf32>
    %9858 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9859 = stablehlo.add %9857, %9858 : tensor<3072xf32>
    %9860 = stablehlo.divide %8461, %9859 : tensor<3072xf32>
    %9861 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9862 = stablehlo.add %8872, %9861 : tensor<768x3072xf32>
    %9863 = stablehlo.sqrt %9862 : tensor<768x3072xf32>
    %9864 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9865 = stablehlo.add %9863, %9864 : tensor<768x3072xf32>
    %9866 = stablehlo.divide %8463, %9865 : tensor<768x3072xf32>
    %9867 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9868 = stablehlo.add %8874, %9867 : tensor<768xf32>
    %9869 = stablehlo.sqrt %9868 : tensor<768xf32>
    %9870 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9871 = stablehlo.add %9869, %9870 : tensor<768xf32>
    %9872 = stablehlo.divide %8465, %9871 : tensor<768xf32>
    %9873 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9874 = stablehlo.add %8876, %9873 : tensor<768x768xf32>
    %9875 = stablehlo.sqrt %9874 : tensor<768x768xf32>
    %9876 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9877 = stablehlo.add %9875, %9876 : tensor<768x768xf32>
    %9878 = stablehlo.divide %8467, %9877 : tensor<768x768xf32>
    %9879 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9880 = stablehlo.add %8878, %9879 : tensor<768xf32>
    %9881 = stablehlo.sqrt %9880 : tensor<768xf32>
    %9882 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9883 = stablehlo.add %9881, %9882 : tensor<768xf32>
    %9884 = stablehlo.divide %8469, %9883 : tensor<768xf32>
    %9885 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9886 = stablehlo.add %8880, %9885 : tensor<768x768xf32>
    %9887 = stablehlo.sqrt %9886 : tensor<768x768xf32>
    %9888 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9889 = stablehlo.add %9887, %9888 : tensor<768x768xf32>
    %9890 = stablehlo.divide %8471, %9889 : tensor<768x768xf32>
    %9891 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9892 = stablehlo.add %8882, %9891 : tensor<768xf32>
    %9893 = stablehlo.sqrt %9892 : tensor<768xf32>
    %9894 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9895 = stablehlo.add %9893, %9894 : tensor<768xf32>
    %9896 = stablehlo.divide %8473, %9895 : tensor<768xf32>
    %9897 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9898 = stablehlo.add %8884, %9897 : tensor<768x768xf32>
    %9899 = stablehlo.sqrt %9898 : tensor<768x768xf32>
    %9900 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9901 = stablehlo.add %9899, %9900 : tensor<768x768xf32>
    %9902 = stablehlo.divide %8475, %9901 : tensor<768x768xf32>
    %9903 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9904 = stablehlo.add %8886, %9903 : tensor<768xf32>
    %9905 = stablehlo.sqrt %9904 : tensor<768xf32>
    %9906 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9907 = stablehlo.add %9905, %9906 : tensor<768xf32>
    %9908 = stablehlo.divide %8477, %9907 : tensor<768xf32>
    %9909 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9910 = stablehlo.add %8888, %9909 : tensor<768x768xf32>
    %9911 = stablehlo.sqrt %9910 : tensor<768x768xf32>
    %9912 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9913 = stablehlo.add %9911, %9912 : tensor<768x768xf32>
    %9914 = stablehlo.divide %8479, %9913 : tensor<768x768xf32>
    %9915 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9916 = stablehlo.add %8890, %9915 : tensor<768xf32>
    %9917 = stablehlo.sqrt %9916 : tensor<768xf32>
    %9918 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9919 = stablehlo.add %9917, %9918 : tensor<768xf32>
    %9920 = stablehlo.divide %8481, %9919 : tensor<768xf32>
    %9921 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9922 = stablehlo.add %8892, %9921 : tensor<768xf32>
    %9923 = stablehlo.sqrt %9922 : tensor<768xf32>
    %9924 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9925 = stablehlo.add %9923, %9924 : tensor<768xf32>
    %9926 = stablehlo.divide %8483, %9925 : tensor<768xf32>
    %9927 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9928 = stablehlo.add %8894, %9927 : tensor<768xf32>
    %9929 = stablehlo.sqrt %9928 : tensor<768xf32>
    %9930 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9931 = stablehlo.add %9929, %9930 : tensor<768xf32>
    %9932 = stablehlo.divide %8485, %9931 : tensor<768xf32>
    %9933 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9934 = stablehlo.add %8896, %9933 : tensor<3072x768xf32>
    %9935 = stablehlo.sqrt %9934 : tensor<3072x768xf32>
    %9936 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9937 = stablehlo.add %9935, %9936 : tensor<3072x768xf32>
    %9938 = stablehlo.divide %8487, %9937 : tensor<3072x768xf32>
    %9939 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9940 = stablehlo.add %8898, %9939 : tensor<768xf32>
    %9941 = stablehlo.sqrt %9940 : tensor<768xf32>
    %9942 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9943 = stablehlo.add %9941, %9942 : tensor<768xf32>
    %9944 = stablehlo.divide %8489, %9943 : tensor<768xf32>
    %9945 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9946 = stablehlo.add %8900, %9945 : tensor<768xf32>
    %9947 = stablehlo.sqrt %9946 : tensor<768xf32>
    %9948 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9949 = stablehlo.add %9947, %9948 : tensor<768xf32>
    %9950 = stablehlo.divide %8491, %9949 : tensor<768xf32>
    %9951 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9952 = stablehlo.add %8902, %9951 : tensor<3072xf32>
    %9953 = stablehlo.sqrt %9952 : tensor<3072xf32>
    %9954 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9955 = stablehlo.add %9953, %9954 : tensor<3072xf32>
    %9956 = stablehlo.divide %8493, %9955 : tensor<3072xf32>
    %9957 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9958 = stablehlo.add %8904, %9957 : tensor<768x3072xf32>
    %9959 = stablehlo.sqrt %9958 : tensor<768x3072xf32>
    %9960 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9961 = stablehlo.add %9959, %9960 : tensor<768x3072xf32>
    %9962 = stablehlo.divide %8495, %9961 : tensor<768x3072xf32>
    %9963 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9964 = stablehlo.add %8906, %9963 : tensor<768xf32>
    %9965 = stablehlo.sqrt %9964 : tensor<768xf32>
    %9966 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9967 = stablehlo.add %9965, %9966 : tensor<768xf32>
    %9968 = stablehlo.divide %8497, %9967 : tensor<768xf32>
    %9969 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9970 = stablehlo.add %8908, %9969 : tensor<768x768xf32>
    %9971 = stablehlo.sqrt %9970 : tensor<768x768xf32>
    %9972 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9973 = stablehlo.add %9971, %9972 : tensor<768x768xf32>
    %9974 = stablehlo.divide %8499, %9973 : tensor<768x768xf32>
    %9975 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9976 = stablehlo.add %8910, %9975 : tensor<768xf32>
    %9977 = stablehlo.sqrt %9976 : tensor<768xf32>
    %9978 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9979 = stablehlo.add %9977, %9978 : tensor<768xf32>
    %9980 = stablehlo.divide %8501, %9979 : tensor<768xf32>
    %9981 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9982 = stablehlo.add %8912, %9981 : tensor<768x768xf32>
    %9983 = stablehlo.sqrt %9982 : tensor<768x768xf32>
    %9984 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9985 = stablehlo.add %9983, %9984 : tensor<768x768xf32>
    %9986 = stablehlo.divide %8503, %9985 : tensor<768x768xf32>
    %9987 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9988 = stablehlo.add %8914, %9987 : tensor<768xf32>
    %9989 = stablehlo.sqrt %9988 : tensor<768xf32>
    %9990 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9991 = stablehlo.add %9989, %9990 : tensor<768xf32>
    %9992 = stablehlo.divide %8505, %9991 : tensor<768xf32>
    %9993 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9994 = stablehlo.add %8916, %9993 : tensor<768x768xf32>
    %9995 = stablehlo.sqrt %9994 : tensor<768x768xf32>
    %9996 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9997 = stablehlo.add %9995, %9996 : tensor<768x768xf32>
    %9998 = stablehlo.divide %8507, %9997 : tensor<768x768xf32>
    %9999 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10000 = stablehlo.add %8918, %9999 : tensor<768xf32>
    %10001 = stablehlo.sqrt %10000 : tensor<768xf32>
    %10002 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10003 = stablehlo.add %10001, %10002 : tensor<768xf32>
    %10004 = stablehlo.divide %8509, %10003 : tensor<768xf32>
    %10005 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10006 = stablehlo.add %8920, %10005 : tensor<768x768xf32>
    %10007 = stablehlo.sqrt %10006 : tensor<768x768xf32>
    %10008 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10009 = stablehlo.add %10007, %10008 : tensor<768x768xf32>
    %10010 = stablehlo.divide %8511, %10009 : tensor<768x768xf32>
    %10011 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10012 = stablehlo.add %8922, %10011 : tensor<768xf32>
    %10013 = stablehlo.sqrt %10012 : tensor<768xf32>
    %10014 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10015 = stablehlo.add %10013, %10014 : tensor<768xf32>
    %10016 = stablehlo.divide %8513, %10015 : tensor<768xf32>
    %10017 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10018 = stablehlo.add %8924, %10017 : tensor<768xf32>
    %10019 = stablehlo.sqrt %10018 : tensor<768xf32>
    %10020 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10021 = stablehlo.add %10019, %10020 : tensor<768xf32>
    %10022 = stablehlo.divide %8515, %10021 : tensor<768xf32>
    %10023 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10024 = stablehlo.add %8926, %10023 : tensor<768xf32>
    %10025 = stablehlo.sqrt %10024 : tensor<768xf32>
    %10026 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10027 = stablehlo.add %10025, %10026 : tensor<768xf32>
    %10028 = stablehlo.divide %8517, %10027 : tensor<768xf32>
    %10029 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10030 = stablehlo.add %8928, %10029 : tensor<3072x768xf32>
    %10031 = stablehlo.sqrt %10030 : tensor<3072x768xf32>
    %10032 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10033 = stablehlo.add %10031, %10032 : tensor<3072x768xf32>
    %10034 = stablehlo.divide %8519, %10033 : tensor<3072x768xf32>
    %10035 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10036 = stablehlo.add %8930, %10035 : tensor<768xf32>
    %10037 = stablehlo.sqrt %10036 : tensor<768xf32>
    %10038 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10039 = stablehlo.add %10037, %10038 : tensor<768xf32>
    %10040 = stablehlo.divide %8521, %10039 : tensor<768xf32>
    %10041 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10042 = stablehlo.add %8932, %10041 : tensor<768xf32>
    %10043 = stablehlo.sqrt %10042 : tensor<768xf32>
    %10044 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10045 = stablehlo.add %10043, %10044 : tensor<768xf32>
    %10046 = stablehlo.divide %8523, %10045 : tensor<768xf32>
    %10047 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10048 = stablehlo.add %8934, %10047 : tensor<3072xf32>
    %10049 = stablehlo.sqrt %10048 : tensor<3072xf32>
    %10050 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10051 = stablehlo.add %10049, %10050 : tensor<3072xf32>
    %10052 = stablehlo.divide %8525, %10051 : tensor<3072xf32>
    %10053 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10054 = stablehlo.add %8936, %10053 : tensor<768x3072xf32>
    %10055 = stablehlo.sqrt %10054 : tensor<768x3072xf32>
    %10056 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10057 = stablehlo.add %10055, %10056 : tensor<768x3072xf32>
    %10058 = stablehlo.divide %8527, %10057 : tensor<768x3072xf32>
    %10059 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10060 = stablehlo.add %8938, %10059 : tensor<768xf32>
    %10061 = stablehlo.sqrt %10060 : tensor<768xf32>
    %10062 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10063 = stablehlo.add %10061, %10062 : tensor<768xf32>
    %10064 = stablehlo.divide %8529, %10063 : tensor<768xf32>
    %10065 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10066 = stablehlo.add %8940, %10065 : tensor<768x768xf32>
    %10067 = stablehlo.sqrt %10066 : tensor<768x768xf32>
    %10068 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10069 = stablehlo.add %10067, %10068 : tensor<768x768xf32>
    %10070 = stablehlo.divide %8531, %10069 : tensor<768x768xf32>
    %10071 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10072 = stablehlo.add %8942, %10071 : tensor<768xf32>
    %10073 = stablehlo.sqrt %10072 : tensor<768xf32>
    %10074 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10075 = stablehlo.add %10073, %10074 : tensor<768xf32>
    %10076 = stablehlo.divide %8533, %10075 : tensor<768xf32>
    %10077 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10078 = stablehlo.add %8944, %10077 : tensor<768x768xf32>
    %10079 = stablehlo.sqrt %10078 : tensor<768x768xf32>
    %10080 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10081 = stablehlo.add %10079, %10080 : tensor<768x768xf32>
    %10082 = stablehlo.divide %8535, %10081 : tensor<768x768xf32>
    %10083 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10084 = stablehlo.add %8946, %10083 : tensor<768xf32>
    %10085 = stablehlo.sqrt %10084 : tensor<768xf32>
    %10086 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10087 = stablehlo.add %10085, %10086 : tensor<768xf32>
    %10088 = stablehlo.divide %8537, %10087 : tensor<768xf32>
    %10089 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10090 = stablehlo.add %8948, %10089 : tensor<768x768xf32>
    %10091 = stablehlo.sqrt %10090 : tensor<768x768xf32>
    %10092 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10093 = stablehlo.add %10091, %10092 : tensor<768x768xf32>
    %10094 = stablehlo.divide %8539, %10093 : tensor<768x768xf32>
    %10095 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10096 = stablehlo.add %8950, %10095 : tensor<768xf32>
    %10097 = stablehlo.sqrt %10096 : tensor<768xf32>
    %10098 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10099 = stablehlo.add %10097, %10098 : tensor<768xf32>
    %10100 = stablehlo.divide %8541, %10099 : tensor<768xf32>
    %10101 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10102 = stablehlo.add %8952, %10101 : tensor<768x768xf32>
    %10103 = stablehlo.sqrt %10102 : tensor<768x768xf32>
    %10104 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10105 = stablehlo.add %10103, %10104 : tensor<768x768xf32>
    %10106 = stablehlo.divide %8543, %10105 : tensor<768x768xf32>
    %10107 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10108 = stablehlo.add %8954, %10107 : tensor<768xf32>
    %10109 = stablehlo.sqrt %10108 : tensor<768xf32>
    %10110 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10111 = stablehlo.add %10109, %10110 : tensor<768xf32>
    %10112 = stablehlo.divide %8545, %10111 : tensor<768xf32>
    %10113 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10114 = stablehlo.add %8956, %10113 : tensor<768xf32>
    %10115 = stablehlo.sqrt %10114 : tensor<768xf32>
    %10116 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10117 = stablehlo.add %10115, %10116 : tensor<768xf32>
    %10118 = stablehlo.divide %8547, %10117 : tensor<768xf32>
    %10119 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10120 = stablehlo.add %8958, %10119 : tensor<768xf32>
    %10121 = stablehlo.sqrt %10120 : tensor<768xf32>
    %10122 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10123 = stablehlo.add %10121, %10122 : tensor<768xf32>
    %10124 = stablehlo.divide %8549, %10123 : tensor<768xf32>
    %10125 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10126 = stablehlo.add %8960, %10125 : tensor<3072x768xf32>
    %10127 = stablehlo.sqrt %10126 : tensor<3072x768xf32>
    %10128 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10129 = stablehlo.add %10127, %10128 : tensor<3072x768xf32>
    %10130 = stablehlo.divide %8551, %10129 : tensor<3072x768xf32>
    %10131 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10132 = stablehlo.add %8962, %10131 : tensor<768xf32>
    %10133 = stablehlo.sqrt %10132 : tensor<768xf32>
    %10134 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10135 = stablehlo.add %10133, %10134 : tensor<768xf32>
    %10136 = stablehlo.divide %8553, %10135 : tensor<768xf32>
    %10137 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10138 = stablehlo.add %8964, %10137 : tensor<768xf32>
    %10139 = stablehlo.sqrt %10138 : tensor<768xf32>
    %10140 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10141 = stablehlo.add %10139, %10140 : tensor<768xf32>
    %10142 = stablehlo.divide %8555, %10141 : tensor<768xf32>
    %10143 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10144 = stablehlo.add %8966, %10143 : tensor<3072xf32>
    %10145 = stablehlo.sqrt %10144 : tensor<3072xf32>
    %10146 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10147 = stablehlo.add %10145, %10146 : tensor<3072xf32>
    %10148 = stablehlo.divide %8557, %10147 : tensor<3072xf32>
    %10149 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10150 = stablehlo.add %8968, %10149 : tensor<768x3072xf32>
    %10151 = stablehlo.sqrt %10150 : tensor<768x3072xf32>
    %10152 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10153 = stablehlo.add %10151, %10152 : tensor<768x3072xf32>
    %10154 = stablehlo.divide %8559, %10153 : tensor<768x3072xf32>
    %10155 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10156 = stablehlo.add %8970, %10155 : tensor<768xf32>
    %10157 = stablehlo.sqrt %10156 : tensor<768xf32>
    %10158 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10159 = stablehlo.add %10157, %10158 : tensor<768xf32>
    %10160 = stablehlo.divide %8561, %10159 : tensor<768xf32>
    %10161 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10162 = stablehlo.add %8972, %10161 : tensor<768xf32>
    %10163 = stablehlo.sqrt %10162 : tensor<768xf32>
    %10164 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10165 = stablehlo.add %10163, %10164 : tensor<768xf32>
    %10166 = stablehlo.divide %8563, %10165 : tensor<768xf32>
    %10167 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10168 = stablehlo.add %8974, %10167 : tensor<30522xf32>
    %10169 = stablehlo.sqrt %10168 : tensor<30522xf32>
    %10170 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10171 = stablehlo.add %10169, %10170 : tensor<30522xf32>
    %10172 = stablehlo.divide %8565, %10171 : tensor<30522xf32>
    %10173 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10174 = stablehlo.add %8976, %10173 : tensor<768xf32>
    %10175 = stablehlo.sqrt %10174 : tensor<768xf32>
    %10176 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10177 = stablehlo.add %10175, %10176 : tensor<768xf32>
    %10178 = stablehlo.divide %8567, %10177 : tensor<768xf32>
    %10179 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10180 = stablehlo.add %8978, %10179 : tensor<768x768xf32>
    %10181 = stablehlo.sqrt %10180 : tensor<768x768xf32>
    %10182 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10183 = stablehlo.add %10181, %10182 : tensor<768x768xf32>
    %10184 = stablehlo.divide %8569, %10183 : tensor<768x768xf32>
    %10185 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10186 = stablehlo.add %8980, %10185 : tensor<30522x768xf32>
    %10187 = stablehlo.sqrt %10186 : tensor<30522x768xf32>
    %10188 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10189 = stablehlo.add %10187, %10188 : tensor<30522x768xf32>
    %10190 = stablehlo.divide %8571, %10189 : tensor<30522x768xf32>
    %10191 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10192 = stablehlo.add %8982, %10191 : tensor<768xf32>
    %10193 = stablehlo.sqrt %10192 : tensor<768xf32>
    %10194 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10195 = stablehlo.add %10193, %10194 : tensor<768xf32>
    %10196 = stablehlo.divide %8573, %10195 : tensor<768xf32>
    %10197 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10198 = stablehlo.add %8984, %10197 : tensor<768xf32>
    %10199 = stablehlo.sqrt %10198 : tensor<768xf32>
    %10200 = stablehlo.broadcast_in_dim %cst_723, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10201 = stablehlo.add %10199, %10200 : tensor<768xf32>
    %10202 = stablehlo.divide %8575, %10201 : tensor<768xf32>
    %cst_724 = stablehlo.constant dense<0.00999999977> : tensor<f32>
    %10203 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10204 = stablehlo.multiply %10203, %arg0 : tensor<512x768xf32>
    %10205 = stablehlo.add %8990, %10204 : tensor<512x768xf32>
    %10206 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10207 = stablehlo.multiply %10206, %arg1 : tensor<2x768xf32>
    %10208 = stablehlo.add %8996, %10207 : tensor<2x768xf32>
    %10209 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10210 = stablehlo.multiply %10209, %arg2 : tensor<30522x768xf32>
    %10211 = stablehlo.add %9002, %10210 : tensor<30522x768xf32>
    %10212 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10213 = stablehlo.multiply %10212, %arg3 : tensor<768xf32>
    %10214 = stablehlo.add %9008, %10213 : tensor<768xf32>
    %10215 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10216 = stablehlo.multiply %10215, %arg4 : tensor<768x768xf32>
    %10217 = stablehlo.add %9014, %10216 : tensor<768x768xf32>
    %10218 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10219 = stablehlo.multiply %10218, %arg5 : tensor<768xf32>
    %10220 = stablehlo.add %9020, %10219 : tensor<768xf32>
    %10221 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10222 = stablehlo.multiply %10221, %arg6 : tensor<768x768xf32>
    %10223 = stablehlo.add %9026, %10222 : tensor<768x768xf32>
    %10224 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10225 = stablehlo.multiply %10224, %arg7 : tensor<768xf32>
    %10226 = stablehlo.add %9032, %10225 : tensor<768xf32>
    %10227 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10228 = stablehlo.multiply %10227, %arg8 : tensor<768x768xf32>
    %10229 = stablehlo.add %9038, %10228 : tensor<768x768xf32>
    %10230 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10231 = stablehlo.multiply %10230, %arg9 : tensor<768xf32>
    %10232 = stablehlo.add %9044, %10231 : tensor<768xf32>
    %10233 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10234 = stablehlo.multiply %10233, %arg10 : tensor<768x768xf32>
    %10235 = stablehlo.add %9050, %10234 : tensor<768x768xf32>
    %10236 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10237 = stablehlo.multiply %10236, %arg11 : tensor<768xf32>
    %10238 = stablehlo.add %9056, %10237 : tensor<768xf32>
    %10239 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10240 = stablehlo.multiply %10239, %arg12 : tensor<768xf32>
    %10241 = stablehlo.add %9062, %10240 : tensor<768xf32>
    %10242 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10243 = stablehlo.multiply %10242, %arg13 : tensor<768xf32>
    %10244 = stablehlo.add %9068, %10243 : tensor<768xf32>
    %10245 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10246 = stablehlo.multiply %10245, %arg14 : tensor<3072x768xf32>
    %10247 = stablehlo.add %9074, %10246 : tensor<3072x768xf32>
    %10248 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10249 = stablehlo.multiply %10248, %arg15 : tensor<768xf32>
    %10250 = stablehlo.add %9080, %10249 : tensor<768xf32>
    %10251 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10252 = stablehlo.multiply %10251, %arg16 : tensor<768xf32>
    %10253 = stablehlo.add %9086, %10252 : tensor<768xf32>
    %10254 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10255 = stablehlo.multiply %10254, %arg17 : tensor<3072xf32>
    %10256 = stablehlo.add %9092, %10255 : tensor<3072xf32>
    %10257 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10258 = stablehlo.multiply %10257, %arg18 : tensor<768x3072xf32>
    %10259 = stablehlo.add %9098, %10258 : tensor<768x3072xf32>
    %10260 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10261 = stablehlo.multiply %10260, %arg19 : tensor<768xf32>
    %10262 = stablehlo.add %9104, %10261 : tensor<768xf32>
    %10263 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10264 = stablehlo.multiply %10263, %arg20 : tensor<768x768xf32>
    %10265 = stablehlo.add %9110, %10264 : tensor<768x768xf32>
    %10266 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10267 = stablehlo.multiply %10266, %arg21 : tensor<768xf32>
    %10268 = stablehlo.add %9116, %10267 : tensor<768xf32>
    %10269 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10270 = stablehlo.multiply %10269, %arg22 : tensor<768x768xf32>
    %10271 = stablehlo.add %9122, %10270 : tensor<768x768xf32>
    %10272 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10273 = stablehlo.multiply %10272, %arg23 : tensor<768xf32>
    %10274 = stablehlo.add %9128, %10273 : tensor<768xf32>
    %10275 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10276 = stablehlo.multiply %10275, %arg24 : tensor<768x768xf32>
    %10277 = stablehlo.add %9134, %10276 : tensor<768x768xf32>
    %10278 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10279 = stablehlo.multiply %10278, %arg25 : tensor<768xf32>
    %10280 = stablehlo.add %9140, %10279 : tensor<768xf32>
    %10281 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10282 = stablehlo.multiply %10281, %arg26 : tensor<768x768xf32>
    %10283 = stablehlo.add %9146, %10282 : tensor<768x768xf32>
    %10284 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10285 = stablehlo.multiply %10284, %arg27 : tensor<768xf32>
    %10286 = stablehlo.add %9152, %10285 : tensor<768xf32>
    %10287 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10288 = stablehlo.multiply %10287, %arg28 : tensor<768xf32>
    %10289 = stablehlo.add %9158, %10288 : tensor<768xf32>
    %10290 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10291 = stablehlo.multiply %10290, %arg29 : tensor<768xf32>
    %10292 = stablehlo.add %9164, %10291 : tensor<768xf32>
    %10293 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10294 = stablehlo.multiply %10293, %arg30 : tensor<3072x768xf32>
    %10295 = stablehlo.add %9170, %10294 : tensor<3072x768xf32>
    %10296 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10297 = stablehlo.multiply %10296, %arg31 : tensor<768xf32>
    %10298 = stablehlo.add %9176, %10297 : tensor<768xf32>
    %10299 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10300 = stablehlo.multiply %10299, %arg32 : tensor<768xf32>
    %10301 = stablehlo.add %9182, %10300 : tensor<768xf32>
    %10302 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10303 = stablehlo.multiply %10302, %arg33 : tensor<3072xf32>
    %10304 = stablehlo.add %9188, %10303 : tensor<3072xf32>
    %10305 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10306 = stablehlo.multiply %10305, %arg34 : tensor<768x3072xf32>
    %10307 = stablehlo.add %9194, %10306 : tensor<768x3072xf32>
    %10308 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10309 = stablehlo.multiply %10308, %arg35 : tensor<768xf32>
    %10310 = stablehlo.add %9200, %10309 : tensor<768xf32>
    %10311 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10312 = stablehlo.multiply %10311, %arg36 : tensor<768x768xf32>
    %10313 = stablehlo.add %9206, %10312 : tensor<768x768xf32>
    %10314 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10315 = stablehlo.multiply %10314, %arg37 : tensor<768xf32>
    %10316 = stablehlo.add %9212, %10315 : tensor<768xf32>
    %10317 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10318 = stablehlo.multiply %10317, %arg38 : tensor<768x768xf32>
    %10319 = stablehlo.add %9218, %10318 : tensor<768x768xf32>
    %10320 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10321 = stablehlo.multiply %10320, %arg39 : tensor<768xf32>
    %10322 = stablehlo.add %9224, %10321 : tensor<768xf32>
    %10323 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10324 = stablehlo.multiply %10323, %arg40 : tensor<768x768xf32>
    %10325 = stablehlo.add %9230, %10324 : tensor<768x768xf32>
    %10326 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10327 = stablehlo.multiply %10326, %arg41 : tensor<768xf32>
    %10328 = stablehlo.add %9236, %10327 : tensor<768xf32>
    %10329 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10330 = stablehlo.multiply %10329, %arg42 : tensor<768x768xf32>
    %10331 = stablehlo.add %9242, %10330 : tensor<768x768xf32>
    %10332 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10333 = stablehlo.multiply %10332, %arg43 : tensor<768xf32>
    %10334 = stablehlo.add %9248, %10333 : tensor<768xf32>
    %10335 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10336 = stablehlo.multiply %10335, %arg44 : tensor<768xf32>
    %10337 = stablehlo.add %9254, %10336 : tensor<768xf32>
    %10338 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10339 = stablehlo.multiply %10338, %arg45 : tensor<768xf32>
    %10340 = stablehlo.add %9260, %10339 : tensor<768xf32>
    %10341 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10342 = stablehlo.multiply %10341, %arg46 : tensor<3072x768xf32>
    %10343 = stablehlo.add %9266, %10342 : tensor<3072x768xf32>
    %10344 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10345 = stablehlo.multiply %10344, %arg47 : tensor<768xf32>
    %10346 = stablehlo.add %9272, %10345 : tensor<768xf32>
    %10347 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10348 = stablehlo.multiply %10347, %arg48 : tensor<768xf32>
    %10349 = stablehlo.add %9278, %10348 : tensor<768xf32>
    %10350 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10351 = stablehlo.multiply %10350, %arg49 : tensor<3072xf32>
    %10352 = stablehlo.add %9284, %10351 : tensor<3072xf32>
    %10353 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10354 = stablehlo.multiply %10353, %arg50 : tensor<768x3072xf32>
    %10355 = stablehlo.add %9290, %10354 : tensor<768x3072xf32>
    %10356 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10357 = stablehlo.multiply %10356, %arg51 : tensor<768xf32>
    %10358 = stablehlo.add %9296, %10357 : tensor<768xf32>
    %10359 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10360 = stablehlo.multiply %10359, %arg52 : tensor<768x768xf32>
    %10361 = stablehlo.add %9302, %10360 : tensor<768x768xf32>
    %10362 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10363 = stablehlo.multiply %10362, %arg53 : tensor<768xf32>
    %10364 = stablehlo.add %9308, %10363 : tensor<768xf32>
    %10365 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10366 = stablehlo.multiply %10365, %arg54 : tensor<768x768xf32>
    %10367 = stablehlo.add %9314, %10366 : tensor<768x768xf32>
    %10368 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10369 = stablehlo.multiply %10368, %arg55 : tensor<768xf32>
    %10370 = stablehlo.add %9320, %10369 : tensor<768xf32>
    %10371 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10372 = stablehlo.multiply %10371, %arg56 : tensor<768x768xf32>
    %10373 = stablehlo.add %9326, %10372 : tensor<768x768xf32>
    %10374 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10375 = stablehlo.multiply %10374, %arg57 : tensor<768xf32>
    %10376 = stablehlo.add %9332, %10375 : tensor<768xf32>
    %10377 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10378 = stablehlo.multiply %10377, %arg58 : tensor<768x768xf32>
    %10379 = stablehlo.add %9338, %10378 : tensor<768x768xf32>
    %10380 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10381 = stablehlo.multiply %10380, %arg59 : tensor<768xf32>
    %10382 = stablehlo.add %9344, %10381 : tensor<768xf32>
    %10383 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10384 = stablehlo.multiply %10383, %arg60 : tensor<768xf32>
    %10385 = stablehlo.add %9350, %10384 : tensor<768xf32>
    %10386 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10387 = stablehlo.multiply %10386, %arg61 : tensor<768xf32>
    %10388 = stablehlo.add %9356, %10387 : tensor<768xf32>
    %10389 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10390 = stablehlo.multiply %10389, %arg62 : tensor<3072x768xf32>
    %10391 = stablehlo.add %9362, %10390 : tensor<3072x768xf32>
    %10392 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10393 = stablehlo.multiply %10392, %arg63 : tensor<768xf32>
    %10394 = stablehlo.add %9368, %10393 : tensor<768xf32>
    %10395 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10396 = stablehlo.multiply %10395, %arg64 : tensor<768xf32>
    %10397 = stablehlo.add %9374, %10396 : tensor<768xf32>
    %10398 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10399 = stablehlo.multiply %10398, %arg65 : tensor<3072xf32>
    %10400 = stablehlo.add %9380, %10399 : tensor<3072xf32>
    %10401 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10402 = stablehlo.multiply %10401, %arg66 : tensor<768x3072xf32>
    %10403 = stablehlo.add %9386, %10402 : tensor<768x3072xf32>
    %10404 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10405 = stablehlo.multiply %10404, %arg67 : tensor<768xf32>
    %10406 = stablehlo.add %9392, %10405 : tensor<768xf32>
    %10407 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10408 = stablehlo.multiply %10407, %arg68 : tensor<768x768xf32>
    %10409 = stablehlo.add %9398, %10408 : tensor<768x768xf32>
    %10410 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10411 = stablehlo.multiply %10410, %arg69 : tensor<768xf32>
    %10412 = stablehlo.add %9404, %10411 : tensor<768xf32>
    %10413 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10414 = stablehlo.multiply %10413, %arg70 : tensor<768x768xf32>
    %10415 = stablehlo.add %9410, %10414 : tensor<768x768xf32>
    %10416 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10417 = stablehlo.multiply %10416, %arg71 : tensor<768xf32>
    %10418 = stablehlo.add %9416, %10417 : tensor<768xf32>
    %10419 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10420 = stablehlo.multiply %10419, %arg72 : tensor<768x768xf32>
    %10421 = stablehlo.add %9422, %10420 : tensor<768x768xf32>
    %10422 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10423 = stablehlo.multiply %10422, %arg73 : tensor<768xf32>
    %10424 = stablehlo.add %9428, %10423 : tensor<768xf32>
    %10425 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10426 = stablehlo.multiply %10425, %arg74 : tensor<768x768xf32>
    %10427 = stablehlo.add %9434, %10426 : tensor<768x768xf32>
    %10428 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10429 = stablehlo.multiply %10428, %arg75 : tensor<768xf32>
    %10430 = stablehlo.add %9440, %10429 : tensor<768xf32>
    %10431 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10432 = stablehlo.multiply %10431, %arg76 : tensor<768xf32>
    %10433 = stablehlo.add %9446, %10432 : tensor<768xf32>
    %10434 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10435 = stablehlo.multiply %10434, %arg77 : tensor<768xf32>
    %10436 = stablehlo.add %9452, %10435 : tensor<768xf32>
    %10437 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10438 = stablehlo.multiply %10437, %arg78 : tensor<3072x768xf32>
    %10439 = stablehlo.add %9458, %10438 : tensor<3072x768xf32>
    %10440 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10441 = stablehlo.multiply %10440, %arg79 : tensor<768xf32>
    %10442 = stablehlo.add %9464, %10441 : tensor<768xf32>
    %10443 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10444 = stablehlo.multiply %10443, %arg80 : tensor<768xf32>
    %10445 = stablehlo.add %9470, %10444 : tensor<768xf32>
    %10446 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10447 = stablehlo.multiply %10446, %arg81 : tensor<3072xf32>
    %10448 = stablehlo.add %9476, %10447 : tensor<3072xf32>
    %10449 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10450 = stablehlo.multiply %10449, %arg82 : tensor<768x3072xf32>
    %10451 = stablehlo.add %9482, %10450 : tensor<768x3072xf32>
    %10452 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10453 = stablehlo.multiply %10452, %arg83 : tensor<768xf32>
    %10454 = stablehlo.add %9488, %10453 : tensor<768xf32>
    %10455 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10456 = stablehlo.multiply %10455, %arg84 : tensor<768x768xf32>
    %10457 = stablehlo.add %9494, %10456 : tensor<768x768xf32>
    %10458 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10459 = stablehlo.multiply %10458, %arg85 : tensor<768xf32>
    %10460 = stablehlo.add %9500, %10459 : tensor<768xf32>
    %10461 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10462 = stablehlo.multiply %10461, %arg86 : tensor<768x768xf32>
    %10463 = stablehlo.add %9506, %10462 : tensor<768x768xf32>
    %10464 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10465 = stablehlo.multiply %10464, %arg87 : tensor<768xf32>
    %10466 = stablehlo.add %9512, %10465 : tensor<768xf32>
    %10467 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10468 = stablehlo.multiply %10467, %arg88 : tensor<768x768xf32>
    %10469 = stablehlo.add %9518, %10468 : tensor<768x768xf32>
    %10470 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10471 = stablehlo.multiply %10470, %arg89 : tensor<768xf32>
    %10472 = stablehlo.add %9524, %10471 : tensor<768xf32>
    %10473 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10474 = stablehlo.multiply %10473, %arg90 : tensor<768x768xf32>
    %10475 = stablehlo.add %9530, %10474 : tensor<768x768xf32>
    %10476 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10477 = stablehlo.multiply %10476, %arg91 : tensor<768xf32>
    %10478 = stablehlo.add %9536, %10477 : tensor<768xf32>
    %10479 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10480 = stablehlo.multiply %10479, %arg92 : tensor<768xf32>
    %10481 = stablehlo.add %9542, %10480 : tensor<768xf32>
    %10482 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10483 = stablehlo.multiply %10482, %arg93 : tensor<768xf32>
    %10484 = stablehlo.add %9548, %10483 : tensor<768xf32>
    %10485 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10486 = stablehlo.multiply %10485, %arg94 : tensor<3072x768xf32>
    %10487 = stablehlo.add %9554, %10486 : tensor<3072x768xf32>
    %10488 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10489 = stablehlo.multiply %10488, %arg95 : tensor<768xf32>
    %10490 = stablehlo.add %9560, %10489 : tensor<768xf32>
    %10491 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10492 = stablehlo.multiply %10491, %arg96 : tensor<768xf32>
    %10493 = stablehlo.add %9566, %10492 : tensor<768xf32>
    %10494 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10495 = stablehlo.multiply %10494, %arg97 : tensor<3072xf32>
    %10496 = stablehlo.add %9572, %10495 : tensor<3072xf32>
    %10497 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10498 = stablehlo.multiply %10497, %arg98 : tensor<768x3072xf32>
    %10499 = stablehlo.add %9578, %10498 : tensor<768x3072xf32>
    %10500 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10501 = stablehlo.multiply %10500, %arg99 : tensor<768xf32>
    %10502 = stablehlo.add %9584, %10501 : tensor<768xf32>
    %10503 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10504 = stablehlo.multiply %10503, %arg100 : tensor<768x768xf32>
    %10505 = stablehlo.add %9590, %10504 : tensor<768x768xf32>
    %10506 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10507 = stablehlo.multiply %10506, %arg101 : tensor<768xf32>
    %10508 = stablehlo.add %9596, %10507 : tensor<768xf32>
    %10509 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10510 = stablehlo.multiply %10509, %arg102 : tensor<768x768xf32>
    %10511 = stablehlo.add %9602, %10510 : tensor<768x768xf32>
    %10512 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10513 = stablehlo.multiply %10512, %arg103 : tensor<768xf32>
    %10514 = stablehlo.add %9608, %10513 : tensor<768xf32>
    %10515 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10516 = stablehlo.multiply %10515, %arg104 : tensor<768x768xf32>
    %10517 = stablehlo.add %9614, %10516 : tensor<768x768xf32>
    %10518 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10519 = stablehlo.multiply %10518, %arg105 : tensor<768xf32>
    %10520 = stablehlo.add %9620, %10519 : tensor<768xf32>
    %10521 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10522 = stablehlo.multiply %10521, %arg106 : tensor<768x768xf32>
    %10523 = stablehlo.add %9626, %10522 : tensor<768x768xf32>
    %10524 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10525 = stablehlo.multiply %10524, %arg107 : tensor<768xf32>
    %10526 = stablehlo.add %9632, %10525 : tensor<768xf32>
    %10527 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10528 = stablehlo.multiply %10527, %arg108 : tensor<768xf32>
    %10529 = stablehlo.add %9638, %10528 : tensor<768xf32>
    %10530 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10531 = stablehlo.multiply %10530, %arg109 : tensor<768xf32>
    %10532 = stablehlo.add %9644, %10531 : tensor<768xf32>
    %10533 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10534 = stablehlo.multiply %10533, %arg110 : tensor<3072x768xf32>
    %10535 = stablehlo.add %9650, %10534 : tensor<3072x768xf32>
    %10536 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10537 = stablehlo.multiply %10536, %arg111 : tensor<768xf32>
    %10538 = stablehlo.add %9656, %10537 : tensor<768xf32>
    %10539 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10540 = stablehlo.multiply %10539, %arg112 : tensor<768xf32>
    %10541 = stablehlo.add %9662, %10540 : tensor<768xf32>
    %10542 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10543 = stablehlo.multiply %10542, %arg113 : tensor<3072xf32>
    %10544 = stablehlo.add %9668, %10543 : tensor<3072xf32>
    %10545 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10546 = stablehlo.multiply %10545, %arg114 : tensor<768x3072xf32>
    %10547 = stablehlo.add %9674, %10546 : tensor<768x3072xf32>
    %10548 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10549 = stablehlo.multiply %10548, %arg115 : tensor<768xf32>
    %10550 = stablehlo.add %9680, %10549 : tensor<768xf32>
    %10551 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10552 = stablehlo.multiply %10551, %arg116 : tensor<768x768xf32>
    %10553 = stablehlo.add %9686, %10552 : tensor<768x768xf32>
    %10554 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10555 = stablehlo.multiply %10554, %arg117 : tensor<768xf32>
    %10556 = stablehlo.add %9692, %10555 : tensor<768xf32>
    %10557 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10558 = stablehlo.multiply %10557, %arg118 : tensor<768x768xf32>
    %10559 = stablehlo.add %9698, %10558 : tensor<768x768xf32>
    %10560 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10561 = stablehlo.multiply %10560, %arg119 : tensor<768xf32>
    %10562 = stablehlo.add %9704, %10561 : tensor<768xf32>
    %10563 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10564 = stablehlo.multiply %10563, %arg120 : tensor<768x768xf32>
    %10565 = stablehlo.add %9710, %10564 : tensor<768x768xf32>
    %10566 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10567 = stablehlo.multiply %10566, %arg121 : tensor<768xf32>
    %10568 = stablehlo.add %9716, %10567 : tensor<768xf32>
    %10569 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10570 = stablehlo.multiply %10569, %arg122 : tensor<768x768xf32>
    %10571 = stablehlo.add %9722, %10570 : tensor<768x768xf32>
    %10572 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10573 = stablehlo.multiply %10572, %arg123 : tensor<768xf32>
    %10574 = stablehlo.add %9728, %10573 : tensor<768xf32>
    %10575 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10576 = stablehlo.multiply %10575, %arg124 : tensor<768xf32>
    %10577 = stablehlo.add %9734, %10576 : tensor<768xf32>
    %10578 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10579 = stablehlo.multiply %10578, %arg125 : tensor<768xf32>
    %10580 = stablehlo.add %9740, %10579 : tensor<768xf32>
    %10581 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10582 = stablehlo.multiply %10581, %arg126 : tensor<3072x768xf32>
    %10583 = stablehlo.add %9746, %10582 : tensor<3072x768xf32>
    %10584 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10585 = stablehlo.multiply %10584, %arg127 : tensor<768xf32>
    %10586 = stablehlo.add %9752, %10585 : tensor<768xf32>
    %10587 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10588 = stablehlo.multiply %10587, %arg128 : tensor<768xf32>
    %10589 = stablehlo.add %9758, %10588 : tensor<768xf32>
    %10590 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10591 = stablehlo.multiply %10590, %arg129 : tensor<3072xf32>
    %10592 = stablehlo.add %9764, %10591 : tensor<3072xf32>
    %10593 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10594 = stablehlo.multiply %10593, %arg130 : tensor<768x3072xf32>
    %10595 = stablehlo.add %9770, %10594 : tensor<768x3072xf32>
    %10596 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10597 = stablehlo.multiply %10596, %arg131 : tensor<768xf32>
    %10598 = stablehlo.add %9776, %10597 : tensor<768xf32>
    %10599 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10600 = stablehlo.multiply %10599, %arg132 : tensor<768x768xf32>
    %10601 = stablehlo.add %9782, %10600 : tensor<768x768xf32>
    %10602 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10603 = stablehlo.multiply %10602, %arg133 : tensor<768xf32>
    %10604 = stablehlo.add %9788, %10603 : tensor<768xf32>
    %10605 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10606 = stablehlo.multiply %10605, %arg134 : tensor<768x768xf32>
    %10607 = stablehlo.add %9794, %10606 : tensor<768x768xf32>
    %10608 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10609 = stablehlo.multiply %10608, %arg135 : tensor<768xf32>
    %10610 = stablehlo.add %9800, %10609 : tensor<768xf32>
    %10611 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10612 = stablehlo.multiply %10611, %arg136 : tensor<768x768xf32>
    %10613 = stablehlo.add %9806, %10612 : tensor<768x768xf32>
    %10614 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10615 = stablehlo.multiply %10614, %arg137 : tensor<768xf32>
    %10616 = stablehlo.add %9812, %10615 : tensor<768xf32>
    %10617 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10618 = stablehlo.multiply %10617, %arg138 : tensor<768x768xf32>
    %10619 = stablehlo.add %9818, %10618 : tensor<768x768xf32>
    %10620 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10621 = stablehlo.multiply %10620, %arg139 : tensor<768xf32>
    %10622 = stablehlo.add %9824, %10621 : tensor<768xf32>
    %10623 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10624 = stablehlo.multiply %10623, %arg140 : tensor<768xf32>
    %10625 = stablehlo.add %9830, %10624 : tensor<768xf32>
    %10626 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10627 = stablehlo.multiply %10626, %arg141 : tensor<768xf32>
    %10628 = stablehlo.add %9836, %10627 : tensor<768xf32>
    %10629 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10630 = stablehlo.multiply %10629, %arg142 : tensor<3072x768xf32>
    %10631 = stablehlo.add %9842, %10630 : tensor<3072x768xf32>
    %10632 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10633 = stablehlo.multiply %10632, %arg143 : tensor<768xf32>
    %10634 = stablehlo.add %9848, %10633 : tensor<768xf32>
    %10635 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10636 = stablehlo.multiply %10635, %arg144 : tensor<768xf32>
    %10637 = stablehlo.add %9854, %10636 : tensor<768xf32>
    %10638 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10639 = stablehlo.multiply %10638, %arg145 : tensor<3072xf32>
    %10640 = stablehlo.add %9860, %10639 : tensor<3072xf32>
    %10641 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10642 = stablehlo.multiply %10641, %arg146 : tensor<768x3072xf32>
    %10643 = stablehlo.add %9866, %10642 : tensor<768x3072xf32>
    %10644 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10645 = stablehlo.multiply %10644, %arg147 : tensor<768xf32>
    %10646 = stablehlo.add %9872, %10645 : tensor<768xf32>
    %10647 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10648 = stablehlo.multiply %10647, %arg148 : tensor<768x768xf32>
    %10649 = stablehlo.add %9878, %10648 : tensor<768x768xf32>
    %10650 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10651 = stablehlo.multiply %10650, %arg149 : tensor<768xf32>
    %10652 = stablehlo.add %9884, %10651 : tensor<768xf32>
    %10653 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10654 = stablehlo.multiply %10653, %arg150 : tensor<768x768xf32>
    %10655 = stablehlo.add %9890, %10654 : tensor<768x768xf32>
    %10656 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10657 = stablehlo.multiply %10656, %arg151 : tensor<768xf32>
    %10658 = stablehlo.add %9896, %10657 : tensor<768xf32>
    %10659 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10660 = stablehlo.multiply %10659, %arg152 : tensor<768x768xf32>
    %10661 = stablehlo.add %9902, %10660 : tensor<768x768xf32>
    %10662 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10663 = stablehlo.multiply %10662, %arg153 : tensor<768xf32>
    %10664 = stablehlo.add %9908, %10663 : tensor<768xf32>
    %10665 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10666 = stablehlo.multiply %10665, %arg154 : tensor<768x768xf32>
    %10667 = stablehlo.add %9914, %10666 : tensor<768x768xf32>
    %10668 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10669 = stablehlo.multiply %10668, %arg155 : tensor<768xf32>
    %10670 = stablehlo.add %9920, %10669 : tensor<768xf32>
    %10671 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10672 = stablehlo.multiply %10671, %arg156 : tensor<768xf32>
    %10673 = stablehlo.add %9926, %10672 : tensor<768xf32>
    %10674 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10675 = stablehlo.multiply %10674, %arg157 : tensor<768xf32>
    %10676 = stablehlo.add %9932, %10675 : tensor<768xf32>
    %10677 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10678 = stablehlo.multiply %10677, %arg158 : tensor<3072x768xf32>
    %10679 = stablehlo.add %9938, %10678 : tensor<3072x768xf32>
    %10680 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10681 = stablehlo.multiply %10680, %arg159 : tensor<768xf32>
    %10682 = stablehlo.add %9944, %10681 : tensor<768xf32>
    %10683 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10684 = stablehlo.multiply %10683, %arg160 : tensor<768xf32>
    %10685 = stablehlo.add %9950, %10684 : tensor<768xf32>
    %10686 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10687 = stablehlo.multiply %10686, %arg161 : tensor<3072xf32>
    %10688 = stablehlo.add %9956, %10687 : tensor<3072xf32>
    %10689 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10690 = stablehlo.multiply %10689, %arg162 : tensor<768x3072xf32>
    %10691 = stablehlo.add %9962, %10690 : tensor<768x3072xf32>
    %10692 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10693 = stablehlo.multiply %10692, %arg163 : tensor<768xf32>
    %10694 = stablehlo.add %9968, %10693 : tensor<768xf32>
    %10695 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10696 = stablehlo.multiply %10695, %arg164 : tensor<768x768xf32>
    %10697 = stablehlo.add %9974, %10696 : tensor<768x768xf32>
    %10698 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10699 = stablehlo.multiply %10698, %arg165 : tensor<768xf32>
    %10700 = stablehlo.add %9980, %10699 : tensor<768xf32>
    %10701 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10702 = stablehlo.multiply %10701, %arg166 : tensor<768x768xf32>
    %10703 = stablehlo.add %9986, %10702 : tensor<768x768xf32>
    %10704 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10705 = stablehlo.multiply %10704, %arg167 : tensor<768xf32>
    %10706 = stablehlo.add %9992, %10705 : tensor<768xf32>
    %10707 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10708 = stablehlo.multiply %10707, %arg168 : tensor<768x768xf32>
    %10709 = stablehlo.add %9998, %10708 : tensor<768x768xf32>
    %10710 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10711 = stablehlo.multiply %10710, %arg169 : tensor<768xf32>
    %10712 = stablehlo.add %10004, %10711 : tensor<768xf32>
    %10713 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10714 = stablehlo.multiply %10713, %arg170 : tensor<768x768xf32>
    %10715 = stablehlo.add %10010, %10714 : tensor<768x768xf32>
    %10716 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10717 = stablehlo.multiply %10716, %arg171 : tensor<768xf32>
    %10718 = stablehlo.add %10016, %10717 : tensor<768xf32>
    %10719 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10720 = stablehlo.multiply %10719, %arg172 : tensor<768xf32>
    %10721 = stablehlo.add %10022, %10720 : tensor<768xf32>
    %10722 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10723 = stablehlo.multiply %10722, %arg173 : tensor<768xf32>
    %10724 = stablehlo.add %10028, %10723 : tensor<768xf32>
    %10725 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10726 = stablehlo.multiply %10725, %arg174 : tensor<3072x768xf32>
    %10727 = stablehlo.add %10034, %10726 : tensor<3072x768xf32>
    %10728 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10729 = stablehlo.multiply %10728, %arg175 : tensor<768xf32>
    %10730 = stablehlo.add %10040, %10729 : tensor<768xf32>
    %10731 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10732 = stablehlo.multiply %10731, %arg176 : tensor<768xf32>
    %10733 = stablehlo.add %10046, %10732 : tensor<768xf32>
    %10734 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10735 = stablehlo.multiply %10734, %arg177 : tensor<3072xf32>
    %10736 = stablehlo.add %10052, %10735 : tensor<3072xf32>
    %10737 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10738 = stablehlo.multiply %10737, %arg178 : tensor<768x3072xf32>
    %10739 = stablehlo.add %10058, %10738 : tensor<768x3072xf32>
    %10740 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10741 = stablehlo.multiply %10740, %arg179 : tensor<768xf32>
    %10742 = stablehlo.add %10064, %10741 : tensor<768xf32>
    %10743 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10744 = stablehlo.multiply %10743, %arg180 : tensor<768x768xf32>
    %10745 = stablehlo.add %10070, %10744 : tensor<768x768xf32>
    %10746 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10747 = stablehlo.multiply %10746, %arg181 : tensor<768xf32>
    %10748 = stablehlo.add %10076, %10747 : tensor<768xf32>
    %10749 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10750 = stablehlo.multiply %10749, %arg182 : tensor<768x768xf32>
    %10751 = stablehlo.add %10082, %10750 : tensor<768x768xf32>
    %10752 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10753 = stablehlo.multiply %10752, %arg183 : tensor<768xf32>
    %10754 = stablehlo.add %10088, %10753 : tensor<768xf32>
    %10755 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10756 = stablehlo.multiply %10755, %arg184 : tensor<768x768xf32>
    %10757 = stablehlo.add %10094, %10756 : tensor<768x768xf32>
    %10758 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10759 = stablehlo.multiply %10758, %arg185 : tensor<768xf32>
    %10760 = stablehlo.add %10100, %10759 : tensor<768xf32>
    %10761 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10762 = stablehlo.multiply %10761, %arg186 : tensor<768x768xf32>
    %10763 = stablehlo.add %10106, %10762 : tensor<768x768xf32>
    %10764 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10765 = stablehlo.multiply %10764, %arg187 : tensor<768xf32>
    %10766 = stablehlo.add %10112, %10765 : tensor<768xf32>
    %10767 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10768 = stablehlo.multiply %10767, %arg188 : tensor<768xf32>
    %10769 = stablehlo.add %10118, %10768 : tensor<768xf32>
    %10770 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10771 = stablehlo.multiply %10770, %arg189 : tensor<768xf32>
    %10772 = stablehlo.add %10124, %10771 : tensor<768xf32>
    %10773 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10774 = stablehlo.multiply %10773, %arg190 : tensor<3072x768xf32>
    %10775 = stablehlo.add %10130, %10774 : tensor<3072x768xf32>
    %10776 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10777 = stablehlo.multiply %10776, %arg191 : tensor<768xf32>
    %10778 = stablehlo.add %10136, %10777 : tensor<768xf32>
    %10779 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10780 = stablehlo.multiply %10779, %arg192 : tensor<768xf32>
    %10781 = stablehlo.add %10142, %10780 : tensor<768xf32>
    %10782 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10783 = stablehlo.multiply %10782, %arg193 : tensor<3072xf32>
    %10784 = stablehlo.add %10148, %10783 : tensor<3072xf32>
    %10785 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10786 = stablehlo.multiply %10785, %arg194 : tensor<768x3072xf32>
    %10787 = stablehlo.add %10154, %10786 : tensor<768x3072xf32>
    %10788 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10789 = stablehlo.multiply %10788, %arg195 : tensor<768xf32>
    %10790 = stablehlo.add %10160, %10789 : tensor<768xf32>
    %10791 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10792 = stablehlo.multiply %10791, %arg196 : tensor<768xf32>
    %10793 = stablehlo.add %10166, %10792 : tensor<768xf32>
    %10794 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10795 = stablehlo.multiply %10794, %arg197 : tensor<30522xf32>
    %10796 = stablehlo.add %10172, %10795 : tensor<30522xf32>
    %10797 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10798 = stablehlo.multiply %10797, %arg198 : tensor<768xf32>
    %10799 = stablehlo.add %10178, %10798 : tensor<768xf32>
    %10800 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10801 = stablehlo.multiply %10800, %arg199 : tensor<768x768xf32>
    %10802 = stablehlo.add %10184, %10801 : tensor<768x768xf32>
    %10803 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10804 = stablehlo.multiply %10803, %arg200 : tensor<30522x768xf32>
    %10805 = stablehlo.add %10190, %10804 : tensor<30522x768xf32>
    %10806 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10807 = stablehlo.multiply %10806, %arg201 : tensor<768xf32>
    %10808 = stablehlo.add %10196, %10807 : tensor<768xf32>
    %10809 = stablehlo.broadcast_in_dim %cst_724, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10810 = stablehlo.multiply %10809, %arg202 : tensor<768xf32>
    %10811 = stablehlo.add %10202, %10810 : tensor<768xf32>
    %10812 = stablehlo.subtract %arg610, %c : tensor<i32>
    %c_725 = stablehlo.constant dense<1000> : tensor<i32>
    %10813 = call @clip(%10812, %c_105, %c_725) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %10814 = stablehlo.convert %10813 : (tensor<i32>) -> tensor<f32>
    %cst_726 = stablehlo.constant dense<1.000000e+03> : tensor<f32>
    %10815 = stablehlo.divide %10814, %cst_726 : tensor<f32>
    %10816 = stablehlo.subtract %cst_7, %10815 : tensor<f32>
    %cst_727 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %10817 = stablehlo.multiply %cst_727, %10816 : tensor<f32>
    %cst_728 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10818 = stablehlo.add %10817, %cst_728 : tensor<f32>
    %c_729 = stablehlo.constant dense<1000> : tensor<i32>
    %10819 = stablehlo.compare  LT, %arg610, %c_729,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %10820 = stablehlo.subtract %arg610, %c_729 : tensor<i32>
    %10821 = stablehlo.convert %10820 : (tensor<i32>) -> tensor<f32>
    %cst_730 = stablehlo.constant dense<9.000000e+03> : tensor<f32>
    %10822 = stablehlo.minimum %10821, %cst_730 : tensor<f32>
    %cst_731 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %10823 = stablehlo.multiply %cst_731, %10822 : tensor<f32>
    %10824 = stablehlo.divide %10823, %cst_730 : tensor<f32>
    %10825 = stablehlo.cosine %10824 : tensor<f32>
    %cst_732 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %10826 = stablehlo.add %cst_732, %10825 : tensor<f32>
    %cst_733 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %10827 = stablehlo.multiply %cst_733, %10826 : tensor<f32>
    %10828 = stablehlo.power %10827, %cst_732 : tensor<f32>
    %10829 = stablehlo.multiply %cst_732, %10828 : tensor<f32>
    %10830 = stablehlo.add %10829, %cst_10 : tensor<f32>
    %cst_734 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10831 = stablehlo.multiply %cst_734, %10830 : tensor<f32>
    %10832 = call @_where_314(%10819, %10818, %10831) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_735 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %10833 = stablehlo.multiply %cst_735, %10832 : tensor<f32>
    %10834 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10835 = stablehlo.multiply %10834, %10205 : tensor<512x768xf32>
    %10836 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10837 = stablehlo.multiply %10836, %10208 : tensor<2x768xf32>
    %10838 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10839 = stablehlo.multiply %10838, %10211 : tensor<30522x768xf32>
    %10840 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10841 = stablehlo.multiply %10840, %10214 : tensor<768xf32>
    %10842 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10843 = stablehlo.multiply %10842, %10217 : tensor<768x768xf32>
    %10844 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10845 = stablehlo.multiply %10844, %10220 : tensor<768xf32>
    %10846 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10847 = stablehlo.multiply %10846, %10223 : tensor<768x768xf32>
    %10848 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10849 = stablehlo.multiply %10848, %10226 : tensor<768xf32>
    %10850 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10851 = stablehlo.multiply %10850, %10229 : tensor<768x768xf32>
    %10852 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10853 = stablehlo.multiply %10852, %10232 : tensor<768xf32>
    %10854 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10855 = stablehlo.multiply %10854, %10235 : tensor<768x768xf32>
    %10856 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10857 = stablehlo.multiply %10856, %10238 : tensor<768xf32>
    %10858 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10859 = stablehlo.multiply %10858, %10241 : tensor<768xf32>
    %10860 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10861 = stablehlo.multiply %10860, %10244 : tensor<768xf32>
    %10862 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10863 = stablehlo.multiply %10862, %10247 : tensor<3072x768xf32>
    %10864 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10865 = stablehlo.multiply %10864, %10250 : tensor<768xf32>
    %10866 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10867 = stablehlo.multiply %10866, %10253 : tensor<768xf32>
    %10868 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10869 = stablehlo.multiply %10868, %10256 : tensor<3072xf32>
    %10870 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10871 = stablehlo.multiply %10870, %10259 : tensor<768x3072xf32>
    %10872 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10873 = stablehlo.multiply %10872, %10262 : tensor<768xf32>
    %10874 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10875 = stablehlo.multiply %10874, %10265 : tensor<768x768xf32>
    %10876 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10877 = stablehlo.multiply %10876, %10268 : tensor<768xf32>
    %10878 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10879 = stablehlo.multiply %10878, %10271 : tensor<768x768xf32>
    %10880 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10881 = stablehlo.multiply %10880, %10274 : tensor<768xf32>
    %10882 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10883 = stablehlo.multiply %10882, %10277 : tensor<768x768xf32>
    %10884 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10885 = stablehlo.multiply %10884, %10280 : tensor<768xf32>
    %10886 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10887 = stablehlo.multiply %10886, %10283 : tensor<768x768xf32>
    %10888 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10889 = stablehlo.multiply %10888, %10286 : tensor<768xf32>
    %10890 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10891 = stablehlo.multiply %10890, %10289 : tensor<768xf32>
    %10892 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10893 = stablehlo.multiply %10892, %10292 : tensor<768xf32>
    %10894 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10895 = stablehlo.multiply %10894, %10295 : tensor<3072x768xf32>
    %10896 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10897 = stablehlo.multiply %10896, %10298 : tensor<768xf32>
    %10898 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10899 = stablehlo.multiply %10898, %10301 : tensor<768xf32>
    %10900 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10901 = stablehlo.multiply %10900, %10304 : tensor<3072xf32>
    %10902 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10903 = stablehlo.multiply %10902, %10307 : tensor<768x3072xf32>
    %10904 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10905 = stablehlo.multiply %10904, %10310 : tensor<768xf32>
    %10906 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10907 = stablehlo.multiply %10906, %10313 : tensor<768x768xf32>
    %10908 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10909 = stablehlo.multiply %10908, %10316 : tensor<768xf32>
    %10910 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10911 = stablehlo.multiply %10910, %10319 : tensor<768x768xf32>
    %10912 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10913 = stablehlo.multiply %10912, %10322 : tensor<768xf32>
    %10914 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10915 = stablehlo.multiply %10914, %10325 : tensor<768x768xf32>
    %10916 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10917 = stablehlo.multiply %10916, %10328 : tensor<768xf32>
    %10918 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10919 = stablehlo.multiply %10918, %10331 : tensor<768x768xf32>
    %10920 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10921 = stablehlo.multiply %10920, %10334 : tensor<768xf32>
    %10922 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10923 = stablehlo.multiply %10922, %10337 : tensor<768xf32>
    %10924 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10925 = stablehlo.multiply %10924, %10340 : tensor<768xf32>
    %10926 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10927 = stablehlo.multiply %10926, %10343 : tensor<3072x768xf32>
    %10928 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10929 = stablehlo.multiply %10928, %10346 : tensor<768xf32>
    %10930 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10931 = stablehlo.multiply %10930, %10349 : tensor<768xf32>
    %10932 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10933 = stablehlo.multiply %10932, %10352 : tensor<3072xf32>
    %10934 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10935 = stablehlo.multiply %10934, %10355 : tensor<768x3072xf32>
    %10936 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10937 = stablehlo.multiply %10936, %10358 : tensor<768xf32>
    %10938 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10939 = stablehlo.multiply %10938, %10361 : tensor<768x768xf32>
    %10940 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10941 = stablehlo.multiply %10940, %10364 : tensor<768xf32>
    %10942 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10943 = stablehlo.multiply %10942, %10367 : tensor<768x768xf32>
    %10944 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10945 = stablehlo.multiply %10944, %10370 : tensor<768xf32>
    %10946 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10947 = stablehlo.multiply %10946, %10373 : tensor<768x768xf32>
    %10948 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10949 = stablehlo.multiply %10948, %10376 : tensor<768xf32>
    %10950 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10951 = stablehlo.multiply %10950, %10379 : tensor<768x768xf32>
    %10952 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10953 = stablehlo.multiply %10952, %10382 : tensor<768xf32>
    %10954 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10955 = stablehlo.multiply %10954, %10385 : tensor<768xf32>
    %10956 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10957 = stablehlo.multiply %10956, %10388 : tensor<768xf32>
    %10958 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10959 = stablehlo.multiply %10958, %10391 : tensor<3072x768xf32>
    %10960 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10961 = stablehlo.multiply %10960, %10394 : tensor<768xf32>
    %10962 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10963 = stablehlo.multiply %10962, %10397 : tensor<768xf32>
    %10964 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10965 = stablehlo.multiply %10964, %10400 : tensor<3072xf32>
    %10966 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10967 = stablehlo.multiply %10966, %10403 : tensor<768x3072xf32>
    %10968 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10969 = stablehlo.multiply %10968, %10406 : tensor<768xf32>
    %10970 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10971 = stablehlo.multiply %10970, %10409 : tensor<768x768xf32>
    %10972 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10973 = stablehlo.multiply %10972, %10412 : tensor<768xf32>
    %10974 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10975 = stablehlo.multiply %10974, %10415 : tensor<768x768xf32>
    %10976 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10977 = stablehlo.multiply %10976, %10418 : tensor<768xf32>
    %10978 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10979 = stablehlo.multiply %10978, %10421 : tensor<768x768xf32>
    %10980 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10981 = stablehlo.multiply %10980, %10424 : tensor<768xf32>
    %10982 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10983 = stablehlo.multiply %10982, %10427 : tensor<768x768xf32>
    %10984 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10985 = stablehlo.multiply %10984, %10430 : tensor<768xf32>
    %10986 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10987 = stablehlo.multiply %10986, %10433 : tensor<768xf32>
    %10988 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10989 = stablehlo.multiply %10988, %10436 : tensor<768xf32>
    %10990 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10991 = stablehlo.multiply %10990, %10439 : tensor<3072x768xf32>
    %10992 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10993 = stablehlo.multiply %10992, %10442 : tensor<768xf32>
    %10994 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10995 = stablehlo.multiply %10994, %10445 : tensor<768xf32>
    %10996 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10997 = stablehlo.multiply %10996, %10448 : tensor<3072xf32>
    %10998 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10999 = stablehlo.multiply %10998, %10451 : tensor<768x3072xf32>
    %11000 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11001 = stablehlo.multiply %11000, %10454 : tensor<768xf32>
    %11002 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11003 = stablehlo.multiply %11002, %10457 : tensor<768x768xf32>
    %11004 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11005 = stablehlo.multiply %11004, %10460 : tensor<768xf32>
    %11006 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11007 = stablehlo.multiply %11006, %10463 : tensor<768x768xf32>
    %11008 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11009 = stablehlo.multiply %11008, %10466 : tensor<768xf32>
    %11010 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11011 = stablehlo.multiply %11010, %10469 : tensor<768x768xf32>
    %11012 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11013 = stablehlo.multiply %11012, %10472 : tensor<768xf32>
    %11014 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11015 = stablehlo.multiply %11014, %10475 : tensor<768x768xf32>
    %11016 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11017 = stablehlo.multiply %11016, %10478 : tensor<768xf32>
    %11018 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11019 = stablehlo.multiply %11018, %10481 : tensor<768xf32>
    %11020 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11021 = stablehlo.multiply %11020, %10484 : tensor<768xf32>
    %11022 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11023 = stablehlo.multiply %11022, %10487 : tensor<3072x768xf32>
    %11024 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11025 = stablehlo.multiply %11024, %10490 : tensor<768xf32>
    %11026 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11027 = stablehlo.multiply %11026, %10493 : tensor<768xf32>
    %11028 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11029 = stablehlo.multiply %11028, %10496 : tensor<3072xf32>
    %11030 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11031 = stablehlo.multiply %11030, %10499 : tensor<768x3072xf32>
    %11032 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11033 = stablehlo.multiply %11032, %10502 : tensor<768xf32>
    %11034 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11035 = stablehlo.multiply %11034, %10505 : tensor<768x768xf32>
    %11036 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11037 = stablehlo.multiply %11036, %10508 : tensor<768xf32>
    %11038 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11039 = stablehlo.multiply %11038, %10511 : tensor<768x768xf32>
    %11040 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11041 = stablehlo.multiply %11040, %10514 : tensor<768xf32>
    %11042 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11043 = stablehlo.multiply %11042, %10517 : tensor<768x768xf32>
    %11044 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11045 = stablehlo.multiply %11044, %10520 : tensor<768xf32>
    %11046 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11047 = stablehlo.multiply %11046, %10523 : tensor<768x768xf32>
    %11048 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11049 = stablehlo.multiply %11048, %10526 : tensor<768xf32>
    %11050 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11051 = stablehlo.multiply %11050, %10529 : tensor<768xf32>
    %11052 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11053 = stablehlo.multiply %11052, %10532 : tensor<768xf32>
    %11054 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11055 = stablehlo.multiply %11054, %10535 : tensor<3072x768xf32>
    %11056 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11057 = stablehlo.multiply %11056, %10538 : tensor<768xf32>
    %11058 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11059 = stablehlo.multiply %11058, %10541 : tensor<768xf32>
    %11060 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11061 = stablehlo.multiply %11060, %10544 : tensor<3072xf32>
    %11062 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11063 = stablehlo.multiply %11062, %10547 : tensor<768x3072xf32>
    %11064 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11065 = stablehlo.multiply %11064, %10550 : tensor<768xf32>
    %11066 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11067 = stablehlo.multiply %11066, %10553 : tensor<768x768xf32>
    %11068 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11069 = stablehlo.multiply %11068, %10556 : tensor<768xf32>
    %11070 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11071 = stablehlo.multiply %11070, %10559 : tensor<768x768xf32>
    %11072 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11073 = stablehlo.multiply %11072, %10562 : tensor<768xf32>
    %11074 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11075 = stablehlo.multiply %11074, %10565 : tensor<768x768xf32>
    %11076 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11077 = stablehlo.multiply %11076, %10568 : tensor<768xf32>
    %11078 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11079 = stablehlo.multiply %11078, %10571 : tensor<768x768xf32>
    %11080 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11081 = stablehlo.multiply %11080, %10574 : tensor<768xf32>
    %11082 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11083 = stablehlo.multiply %11082, %10577 : tensor<768xf32>
    %11084 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11085 = stablehlo.multiply %11084, %10580 : tensor<768xf32>
    %11086 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11087 = stablehlo.multiply %11086, %10583 : tensor<3072x768xf32>
    %11088 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11089 = stablehlo.multiply %11088, %10586 : tensor<768xf32>
    %11090 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11091 = stablehlo.multiply %11090, %10589 : tensor<768xf32>
    %11092 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11093 = stablehlo.multiply %11092, %10592 : tensor<3072xf32>
    %11094 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11095 = stablehlo.multiply %11094, %10595 : tensor<768x3072xf32>
    %11096 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11097 = stablehlo.multiply %11096, %10598 : tensor<768xf32>
    %11098 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11099 = stablehlo.multiply %11098, %10601 : tensor<768x768xf32>
    %11100 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11101 = stablehlo.multiply %11100, %10604 : tensor<768xf32>
    %11102 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11103 = stablehlo.multiply %11102, %10607 : tensor<768x768xf32>
    %11104 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11105 = stablehlo.multiply %11104, %10610 : tensor<768xf32>
    %11106 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11107 = stablehlo.multiply %11106, %10613 : tensor<768x768xf32>
    %11108 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11109 = stablehlo.multiply %11108, %10616 : tensor<768xf32>
    %11110 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11111 = stablehlo.multiply %11110, %10619 : tensor<768x768xf32>
    %11112 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11113 = stablehlo.multiply %11112, %10622 : tensor<768xf32>
    %11114 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11115 = stablehlo.multiply %11114, %10625 : tensor<768xf32>
    %11116 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11117 = stablehlo.multiply %11116, %10628 : tensor<768xf32>
    %11118 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11119 = stablehlo.multiply %11118, %10631 : tensor<3072x768xf32>
    %11120 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11121 = stablehlo.multiply %11120, %10634 : tensor<768xf32>
    %11122 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11123 = stablehlo.multiply %11122, %10637 : tensor<768xf32>
    %11124 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11125 = stablehlo.multiply %11124, %10640 : tensor<3072xf32>
    %11126 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11127 = stablehlo.multiply %11126, %10643 : tensor<768x3072xf32>
    %11128 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11129 = stablehlo.multiply %11128, %10646 : tensor<768xf32>
    %11130 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11131 = stablehlo.multiply %11130, %10649 : tensor<768x768xf32>
    %11132 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11133 = stablehlo.multiply %11132, %10652 : tensor<768xf32>
    %11134 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11135 = stablehlo.multiply %11134, %10655 : tensor<768x768xf32>
    %11136 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11137 = stablehlo.multiply %11136, %10658 : tensor<768xf32>
    %11138 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11139 = stablehlo.multiply %11138, %10661 : tensor<768x768xf32>
    %11140 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11141 = stablehlo.multiply %11140, %10664 : tensor<768xf32>
    %11142 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11143 = stablehlo.multiply %11142, %10667 : tensor<768x768xf32>
    %11144 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11145 = stablehlo.multiply %11144, %10670 : tensor<768xf32>
    %11146 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11147 = stablehlo.multiply %11146, %10673 : tensor<768xf32>
    %11148 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11149 = stablehlo.multiply %11148, %10676 : tensor<768xf32>
    %11150 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11151 = stablehlo.multiply %11150, %10679 : tensor<3072x768xf32>
    %11152 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11153 = stablehlo.multiply %11152, %10682 : tensor<768xf32>
    %11154 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11155 = stablehlo.multiply %11154, %10685 : tensor<768xf32>
    %11156 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11157 = stablehlo.multiply %11156, %10688 : tensor<3072xf32>
    %11158 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11159 = stablehlo.multiply %11158, %10691 : tensor<768x3072xf32>
    %11160 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11161 = stablehlo.multiply %11160, %10694 : tensor<768xf32>
    %11162 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11163 = stablehlo.multiply %11162, %10697 : tensor<768x768xf32>
    %11164 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11165 = stablehlo.multiply %11164, %10700 : tensor<768xf32>
    %11166 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11167 = stablehlo.multiply %11166, %10703 : tensor<768x768xf32>
    %11168 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11169 = stablehlo.multiply %11168, %10706 : tensor<768xf32>
    %11170 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11171 = stablehlo.multiply %11170, %10709 : tensor<768x768xf32>
    %11172 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11173 = stablehlo.multiply %11172, %10712 : tensor<768xf32>
    %11174 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11175 = stablehlo.multiply %11174, %10715 : tensor<768x768xf32>
    %11176 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11177 = stablehlo.multiply %11176, %10718 : tensor<768xf32>
    %11178 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11179 = stablehlo.multiply %11178, %10721 : tensor<768xf32>
    %11180 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11181 = stablehlo.multiply %11180, %10724 : tensor<768xf32>
    %11182 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11183 = stablehlo.multiply %11182, %10727 : tensor<3072x768xf32>
    %11184 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11185 = stablehlo.multiply %11184, %10730 : tensor<768xf32>
    %11186 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11187 = stablehlo.multiply %11186, %10733 : tensor<768xf32>
    %11188 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11189 = stablehlo.multiply %11188, %10736 : tensor<3072xf32>
    %11190 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11191 = stablehlo.multiply %11190, %10739 : tensor<768x3072xf32>
    %11192 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11193 = stablehlo.multiply %11192, %10742 : tensor<768xf32>
    %11194 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11195 = stablehlo.multiply %11194, %10745 : tensor<768x768xf32>
    %11196 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11197 = stablehlo.multiply %11196, %10748 : tensor<768xf32>
    %11198 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11199 = stablehlo.multiply %11198, %10751 : tensor<768x768xf32>
    %11200 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11201 = stablehlo.multiply %11200, %10754 : tensor<768xf32>
    %11202 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11203 = stablehlo.multiply %11202, %10757 : tensor<768x768xf32>
    %11204 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11205 = stablehlo.multiply %11204, %10760 : tensor<768xf32>
    %11206 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11207 = stablehlo.multiply %11206, %10763 : tensor<768x768xf32>
    %11208 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11209 = stablehlo.multiply %11208, %10766 : tensor<768xf32>
    %11210 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11211 = stablehlo.multiply %11210, %10769 : tensor<768xf32>
    %11212 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11213 = stablehlo.multiply %11212, %10772 : tensor<768xf32>
    %11214 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11215 = stablehlo.multiply %11214, %10775 : tensor<3072x768xf32>
    %11216 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11217 = stablehlo.multiply %11216, %10778 : tensor<768xf32>
    %11218 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11219 = stablehlo.multiply %11218, %10781 : tensor<768xf32>
    %11220 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11221 = stablehlo.multiply %11220, %10784 : tensor<3072xf32>
    %11222 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11223 = stablehlo.multiply %11222, %10787 : tensor<768x3072xf32>
    %11224 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11225 = stablehlo.multiply %11224, %10790 : tensor<768xf32>
    %11226 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11227 = stablehlo.multiply %11226, %10793 : tensor<768xf32>
    %11228 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11229 = stablehlo.multiply %11228, %10796 : tensor<30522xf32>
    %11230 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11231 = stablehlo.multiply %11230, %10799 : tensor<768xf32>
    %11232 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11233 = stablehlo.multiply %11232, %10802 : tensor<768x768xf32>
    %11234 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11235 = stablehlo.multiply %11234, %10805 : tensor<30522x768xf32>
    %11236 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11237 = stablehlo.multiply %11236, %10808 : tensor<768xf32>
    %11238 = stablehlo.broadcast_in_dim %10833, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11239 = stablehlo.multiply %11238, %10811 : tensor<768xf32>
    %11240 = stablehlo.compare  LT, %arg610, %c_719,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11241 = stablehlo.add %arg610, %c_720 : tensor<i32>
    %11242 = call @_where_264(%11240, %11241, %c_719) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11243 = stablehlo.add %arg0, %10835 : tensor<512x768xf32>
    %11244 = stablehlo.add %arg1, %10837 : tensor<2x768xf32>
    %11245 = stablehlo.add %arg2, %10839 : tensor<30522x768xf32>
    %11246 = stablehlo.add %arg3, %10841 : tensor<768xf32>
    %11247 = stablehlo.add %arg4, %10843 : tensor<768x768xf32>
    %11248 = stablehlo.add %arg5, %10845 : tensor<768xf32>
    %11249 = stablehlo.add %arg6, %10847 : tensor<768x768xf32>
    %11250 = stablehlo.add %arg7, %10849 : tensor<768xf32>
    %11251 = stablehlo.add %arg8, %10851 : tensor<768x768xf32>
    %11252 = stablehlo.add %arg9, %10853 : tensor<768xf32>
    %11253 = stablehlo.add %arg10, %10855 : tensor<768x768xf32>
    %11254 = stablehlo.add %arg11, %10857 : tensor<768xf32>
    %11255 = stablehlo.add %arg12, %10859 : tensor<768xf32>
    %11256 = stablehlo.add %arg13, %10861 : tensor<768xf32>
    %11257 = stablehlo.add %arg14, %10863 : tensor<3072x768xf32>
    %11258 = stablehlo.add %arg15, %10865 : tensor<768xf32>
    %11259 = stablehlo.add %arg16, %10867 : tensor<768xf32>
    %11260 = stablehlo.add %arg17, %10869 : tensor<3072xf32>
    %11261 = stablehlo.add %arg18, %10871 : tensor<768x3072xf32>
    %11262 = stablehlo.add %arg19, %10873 : tensor<768xf32>
    %11263 = stablehlo.add %arg20, %10875 : tensor<768x768xf32>
    %11264 = stablehlo.add %arg21, %10877 : tensor<768xf32>
    %11265 = stablehlo.add %arg22, %10879 : tensor<768x768xf32>
    %11266 = stablehlo.add %arg23, %10881 : tensor<768xf32>
    %11267 = stablehlo.add %arg24, %10883 : tensor<768x768xf32>
    %11268 = stablehlo.add %arg25, %10885 : tensor<768xf32>
    %11269 = stablehlo.add %arg26, %10887 : tensor<768x768xf32>
    %11270 = stablehlo.add %arg27, %10889 : tensor<768xf32>
    %11271 = stablehlo.add %arg28, %10891 : tensor<768xf32>
    %11272 = stablehlo.add %arg29, %10893 : tensor<768xf32>
    %11273 = stablehlo.add %arg30, %10895 : tensor<3072x768xf32>
    %11274 = stablehlo.add %arg31, %10897 : tensor<768xf32>
    %11275 = stablehlo.add %arg32, %10899 : tensor<768xf32>
    %11276 = stablehlo.add %arg33, %10901 : tensor<3072xf32>
    %11277 = stablehlo.add %arg34, %10903 : tensor<768x3072xf32>
    %11278 = stablehlo.add %arg35, %10905 : tensor<768xf32>
    %11279 = stablehlo.add %arg36, %10907 : tensor<768x768xf32>
    %11280 = stablehlo.add %arg37, %10909 : tensor<768xf32>
    %11281 = stablehlo.add %arg38, %10911 : tensor<768x768xf32>
    %11282 = stablehlo.add %arg39, %10913 : tensor<768xf32>
    %11283 = stablehlo.add %arg40, %10915 : tensor<768x768xf32>
    %11284 = stablehlo.add %arg41, %10917 : tensor<768xf32>
    %11285 = stablehlo.add %arg42, %10919 : tensor<768x768xf32>
    %11286 = stablehlo.add %arg43, %10921 : tensor<768xf32>
    %11287 = stablehlo.add %arg44, %10923 : tensor<768xf32>
    %11288 = stablehlo.add %arg45, %10925 : tensor<768xf32>
    %11289 = stablehlo.add %arg46, %10927 : tensor<3072x768xf32>
    %11290 = stablehlo.add %arg47, %10929 : tensor<768xf32>
    %11291 = stablehlo.add %arg48, %10931 : tensor<768xf32>
    %11292 = stablehlo.add %arg49, %10933 : tensor<3072xf32>
    %11293 = stablehlo.add %arg50, %10935 : tensor<768x3072xf32>
    %11294 = stablehlo.add %arg51, %10937 : tensor<768xf32>
    %11295 = stablehlo.add %arg52, %10939 : tensor<768x768xf32>
    %11296 = stablehlo.add %arg53, %10941 : tensor<768xf32>
    %11297 = stablehlo.add %arg54, %10943 : tensor<768x768xf32>
    %11298 = stablehlo.add %arg55, %10945 : tensor<768xf32>
    %11299 = stablehlo.add %arg56, %10947 : tensor<768x768xf32>
    %11300 = stablehlo.add %arg57, %10949 : tensor<768xf32>
    %11301 = stablehlo.add %arg58, %10951 : tensor<768x768xf32>
    %11302 = stablehlo.add %arg59, %10953 : tensor<768xf32>
    %11303 = stablehlo.add %arg60, %10955 : tensor<768xf32>
    %11304 = stablehlo.add %arg61, %10957 : tensor<768xf32>
    %11305 = stablehlo.add %arg62, %10959 : tensor<3072x768xf32>
    %11306 = stablehlo.add %arg63, %10961 : tensor<768xf32>
    %11307 = stablehlo.add %arg64, %10963 : tensor<768xf32>
    %11308 = stablehlo.add %arg65, %10965 : tensor<3072xf32>
    %11309 = stablehlo.add %arg66, %10967 : tensor<768x3072xf32>
    %11310 = stablehlo.add %arg67, %10969 : tensor<768xf32>
    %11311 = stablehlo.add %arg68, %10971 : tensor<768x768xf32>
    %11312 = stablehlo.add %arg69, %10973 : tensor<768xf32>
    %11313 = stablehlo.add %arg70, %10975 : tensor<768x768xf32>
    %11314 = stablehlo.add %arg71, %10977 : tensor<768xf32>
    %11315 = stablehlo.add %arg72, %10979 : tensor<768x768xf32>
    %11316 = stablehlo.add %arg73, %10981 : tensor<768xf32>
    %11317 = stablehlo.add %arg74, %10983 : tensor<768x768xf32>
    %11318 = stablehlo.add %arg75, %10985 : tensor<768xf32>
    %11319 = stablehlo.add %arg76, %10987 : tensor<768xf32>
    %11320 = stablehlo.add %arg77, %10989 : tensor<768xf32>
    %11321 = stablehlo.add %arg78, %10991 : tensor<3072x768xf32>
    %11322 = stablehlo.add %arg79, %10993 : tensor<768xf32>
    %11323 = stablehlo.add %arg80, %10995 : tensor<768xf32>
    %11324 = stablehlo.add %arg81, %10997 : tensor<3072xf32>
    %11325 = stablehlo.add %arg82, %10999 : tensor<768x3072xf32>
    %11326 = stablehlo.add %arg83, %11001 : tensor<768xf32>
    %11327 = stablehlo.add %arg84, %11003 : tensor<768x768xf32>
    %11328 = stablehlo.add %arg85, %11005 : tensor<768xf32>
    %11329 = stablehlo.add %arg86, %11007 : tensor<768x768xf32>
    %11330 = stablehlo.add %arg87, %11009 : tensor<768xf32>
    %11331 = stablehlo.add %arg88, %11011 : tensor<768x768xf32>
    %11332 = stablehlo.add %arg89, %11013 : tensor<768xf32>
    %11333 = stablehlo.add %arg90, %11015 : tensor<768x768xf32>
    %11334 = stablehlo.add %arg91, %11017 : tensor<768xf32>
    %11335 = stablehlo.add %arg92, %11019 : tensor<768xf32>
    %11336 = stablehlo.add %arg93, %11021 : tensor<768xf32>
    %11337 = stablehlo.add %arg94, %11023 : tensor<3072x768xf32>
    %11338 = stablehlo.add %arg95, %11025 : tensor<768xf32>
    %11339 = stablehlo.add %arg96, %11027 : tensor<768xf32>
    %11340 = stablehlo.add %arg97, %11029 : tensor<3072xf32>
    %11341 = stablehlo.add %arg98, %11031 : tensor<768x3072xf32>
    %11342 = stablehlo.add %arg99, %11033 : tensor<768xf32>
    %11343 = stablehlo.add %arg100, %11035 : tensor<768x768xf32>
    %11344 = stablehlo.add %arg101, %11037 : tensor<768xf32>
    %11345 = stablehlo.add %arg102, %11039 : tensor<768x768xf32>
    %11346 = stablehlo.add %arg103, %11041 : tensor<768xf32>
    %11347 = stablehlo.add %arg104, %11043 : tensor<768x768xf32>
    %11348 = stablehlo.add %arg105, %11045 : tensor<768xf32>
    %11349 = stablehlo.add %arg106, %11047 : tensor<768x768xf32>
    %11350 = stablehlo.add %arg107, %11049 : tensor<768xf32>
    %11351 = stablehlo.add %arg108, %11051 : tensor<768xf32>
    %11352 = stablehlo.add %arg109, %11053 : tensor<768xf32>
    %11353 = stablehlo.add %arg110, %11055 : tensor<3072x768xf32>
    %11354 = stablehlo.add %arg111, %11057 : tensor<768xf32>
    %11355 = stablehlo.add %arg112, %11059 : tensor<768xf32>
    %11356 = stablehlo.add %arg113, %11061 : tensor<3072xf32>
    %11357 = stablehlo.add %arg114, %11063 : tensor<768x3072xf32>
    %11358 = stablehlo.add %arg115, %11065 : tensor<768xf32>
    %11359 = stablehlo.add %arg116, %11067 : tensor<768x768xf32>
    %11360 = stablehlo.add %arg117, %11069 : tensor<768xf32>
    %11361 = stablehlo.add %arg118, %11071 : tensor<768x768xf32>
    %11362 = stablehlo.add %arg119, %11073 : tensor<768xf32>
    %11363 = stablehlo.add %arg120, %11075 : tensor<768x768xf32>
    %11364 = stablehlo.add %arg121, %11077 : tensor<768xf32>
    %11365 = stablehlo.add %arg122, %11079 : tensor<768x768xf32>
    %11366 = stablehlo.add %arg123, %11081 : tensor<768xf32>
    %11367 = stablehlo.add %arg124, %11083 : tensor<768xf32>
    %11368 = stablehlo.add %arg125, %11085 : tensor<768xf32>
    %11369 = stablehlo.add %arg126, %11087 : tensor<3072x768xf32>
    %11370 = stablehlo.add %arg127, %11089 : tensor<768xf32>
    %11371 = stablehlo.add %arg128, %11091 : tensor<768xf32>
    %11372 = stablehlo.add %arg129, %11093 : tensor<3072xf32>
    %11373 = stablehlo.add %arg130, %11095 : tensor<768x3072xf32>
    %11374 = stablehlo.add %arg131, %11097 : tensor<768xf32>
    %11375 = stablehlo.add %arg132, %11099 : tensor<768x768xf32>
    %11376 = stablehlo.add %arg133, %11101 : tensor<768xf32>
    %11377 = stablehlo.add %arg134, %11103 : tensor<768x768xf32>
    %11378 = stablehlo.add %arg135, %11105 : tensor<768xf32>
    %11379 = stablehlo.add %arg136, %11107 : tensor<768x768xf32>
    %11380 = stablehlo.add %arg137, %11109 : tensor<768xf32>
    %11381 = stablehlo.add %arg138, %11111 : tensor<768x768xf32>
    %11382 = stablehlo.add %arg139, %11113 : tensor<768xf32>
    %11383 = stablehlo.add %arg140, %11115 : tensor<768xf32>
    %11384 = stablehlo.add %arg141, %11117 : tensor<768xf32>
    %11385 = stablehlo.add %arg142, %11119 : tensor<3072x768xf32>
    %11386 = stablehlo.add %arg143, %11121 : tensor<768xf32>
    %11387 = stablehlo.add %arg144, %11123 : tensor<768xf32>
    %11388 = stablehlo.add %arg145, %11125 : tensor<3072xf32>
    %11389 = stablehlo.add %arg146, %11127 : tensor<768x3072xf32>
    %11390 = stablehlo.add %arg147, %11129 : tensor<768xf32>
    %11391 = stablehlo.add %arg148, %11131 : tensor<768x768xf32>
    %11392 = stablehlo.add %arg149, %11133 : tensor<768xf32>
    %11393 = stablehlo.add %arg150, %11135 : tensor<768x768xf32>
    %11394 = stablehlo.add %arg151, %11137 : tensor<768xf32>
    %11395 = stablehlo.add %arg152, %11139 : tensor<768x768xf32>
    %11396 = stablehlo.add %arg153, %11141 : tensor<768xf32>
    %11397 = stablehlo.add %arg154, %11143 : tensor<768x768xf32>
    %11398 = stablehlo.add %arg155, %11145 : tensor<768xf32>
    %11399 = stablehlo.add %arg156, %11147 : tensor<768xf32>
    %11400 = stablehlo.add %arg157, %11149 : tensor<768xf32>
    %11401 = stablehlo.add %arg158, %11151 : tensor<3072x768xf32>
    %11402 = stablehlo.add %arg159, %11153 : tensor<768xf32>
    %11403 = stablehlo.add %arg160, %11155 : tensor<768xf32>
    %11404 = stablehlo.add %arg161, %11157 : tensor<3072xf32>
    %11405 = stablehlo.add %arg162, %11159 : tensor<768x3072xf32>
    %11406 = stablehlo.add %arg163, %11161 : tensor<768xf32>
    %11407 = stablehlo.add %arg164, %11163 : tensor<768x768xf32>
    %11408 = stablehlo.add %arg165, %11165 : tensor<768xf32>
    %11409 = stablehlo.add %arg166, %11167 : tensor<768x768xf32>
    %11410 = stablehlo.add %arg167, %11169 : tensor<768xf32>
    %11411 = stablehlo.add %arg168, %11171 : tensor<768x768xf32>
    %11412 = stablehlo.add %arg169, %11173 : tensor<768xf32>
    %11413 = stablehlo.add %arg170, %11175 : tensor<768x768xf32>
    %11414 = stablehlo.add %arg171, %11177 : tensor<768xf32>
    %11415 = stablehlo.add %arg172, %11179 : tensor<768xf32>
    %11416 = stablehlo.add %arg173, %11181 : tensor<768xf32>
    %11417 = stablehlo.add %arg174, %11183 : tensor<3072x768xf32>
    %11418 = stablehlo.add %arg175, %11185 : tensor<768xf32>
    %11419 = stablehlo.add %arg176, %11187 : tensor<768xf32>
    %11420 = stablehlo.add %arg177, %11189 : tensor<3072xf32>
    %11421 = stablehlo.add %arg178, %11191 : tensor<768x3072xf32>
    %11422 = stablehlo.add %arg179, %11193 : tensor<768xf32>
    %11423 = stablehlo.add %arg180, %11195 : tensor<768x768xf32>
    %11424 = stablehlo.add %arg181, %11197 : tensor<768xf32>
    %11425 = stablehlo.add %arg182, %11199 : tensor<768x768xf32>
    %11426 = stablehlo.add %arg183, %11201 : tensor<768xf32>
    %11427 = stablehlo.add %arg184, %11203 : tensor<768x768xf32>
    %11428 = stablehlo.add %arg185, %11205 : tensor<768xf32>
    %11429 = stablehlo.add %arg186, %11207 : tensor<768x768xf32>
    %11430 = stablehlo.add %arg187, %11209 : tensor<768xf32>
    %11431 = stablehlo.add %arg188, %11211 : tensor<768xf32>
    %11432 = stablehlo.add %arg189, %11213 : tensor<768xf32>
    %11433 = stablehlo.add %arg190, %11215 : tensor<3072x768xf32>
    %11434 = stablehlo.add %arg191, %11217 : tensor<768xf32>
    %11435 = stablehlo.add %arg192, %11219 : tensor<768xf32>
    %11436 = stablehlo.add %arg193, %11221 : tensor<3072xf32>
    %11437 = stablehlo.add %arg194, %11223 : tensor<768x3072xf32>
    %11438 = stablehlo.add %arg195, %11225 : tensor<768xf32>
    %11439 = stablehlo.add %arg196, %11227 : tensor<768xf32>
    %11440 = stablehlo.add %arg197, %11229 : tensor<30522xf32>
    %11441 = stablehlo.add %arg198, %11231 : tensor<768xf32>
    %11442 = stablehlo.add %arg199, %11233 : tensor<768x768xf32>
    %11443 = stablehlo.add %arg200, %11235 : tensor<30522x768xf32>
    %11444 = stablehlo.add %arg201, %11237 : tensor<768xf32>
    %11445 = stablehlo.add %arg202, %11239 : tensor<768xf32>
    return %11243, %11244, %11245, %11246, %11247, %11248, %11249, %11250, %11251, %11252, %11253, %11254, %11255, %11256, %11257, %11258, %11259, %11260, %11261, %11262, %11263, %11264, %11265, %11266, %11267, %11268, %11269, %11270, %11271, %11272, %11273, %11274, %11275, %11276, %11277, %11278, %11279, %11280, %11281, %11282, %11283, %11284, %11285, %11286, %11287, %11288, %11289, %11290, %11291, %11292, %11293, %11294, %11295, %11296, %11297, %11298, %11299, %11300, %11301, %11302, %11303, %11304, %11305, %11306, %11307, %11308, %11309, %11310, %11311, %11312, %11313, %11314, %11315, %11316, %11317, %11318, %11319, %11320, %11321, %11322, %11323, %11324, %11325, %11326, %11327, %11328, %11329, %11330, %11331, %11332, %11333, %11334, %11335, %11336, %11337, %11338, %11339, %11340, %11341, %11342, %11343, %11344, %11345, %11346, %11347, %11348, %11349, %11350, %11351, %11352, %11353, %11354, %11355, %11356, %11357, %11358, %11359, %11360, %11361, %11362, %11363, %11364, %11365, %11366, %11367, %11368, %11369, %11370, %11371, %11372, %11373, %11374, %11375, %11376, %11377, %11378, %11379, %11380, %11381, %11382, %11383, %11384, %11385, %11386, %11387, %11388, %11389, %11390, %11391, %11392, %11393, %11394, %11395, %11396, %11397, %11398, %11399, %11400, %11401, %11402, %11403, %11404, %11405, %11406, %11407, %11408, %11409, %11410, %11411, %11412, %11413, %11414, %11415, %11416, %11417, %11418, %11419, %11420, %11421, %11422, %11423, %11424, %11425, %11426, %11427, %11428, %11429, %11430, %11431, %11432, %11433, %11434, %11435, %11436, %11437, %11438, %11439, %11440, %11441, %11442, %11443, %11444, %11445, %8166, %5935, %5940, %5945, %5950, %5955, %5960, %5965, %5970, %5975, %5980, %5985, %5990, %5995, %6000, %6005, %6010, %6015, %6020, %6025, %6030, %6035, %6040, %6045, %6050, %6055, %6060, %6065, %6070, %6075, %6080, %6085, %6090, %6095, %6100, %6105, %6110, %6115, %6120, %6125, %6130, %6135, %6140, %6145, %6150, %6155, %6160, %6165, %6170, %6175, %6180, %6185, %6190, %6195, %6200, %6205, %6210, %6215, %6220, %6225, %6230, %6235, %6240, %6245, %6250, %6255, %6260, %6265, %6270, %6275, %6280, %6285, %6290, %6295, %6300, %6305, %6310, %6315, %6320, %6325, %6330, %6335, %6340, %6345, %6350, %6355, %6360, %6365, %6370, %6375, %6380, %6385, %6390, %6395, %6400, %6405, %6410, %6415, %6420, %6425, %6430, %6435, %6440, %6445, %6450, %6455, %6460, %6465, %6470, %6475, %6480, %6485, %6490, %6495, %6500, %6505, %6510, %6515, %6520, %6525, %6530, %6535, %6540, %6545, %6550, %6555, %6560, %6565, %6570, %6575, %6580, %6585, %6590, %6595, %6600, %6605, %6610, %6615, %6620, %6625, %6630, %6635, %6640, %6645, %6650, %6655, %6660, %6665, %6670, %6675, %6680, %6685, %6690, %6695, %6700, %6705, %6710, %6715, %6720, %6725, %6730, %6735, %6740, %6745, %6750, %6755, %6760, %6765, %6770, %6775, %6780, %6785, %6790, %6795, %6800, %6805, %6810, %6815, %6820, %6825, %6830, %6835, %6840, %6845, %6850, %6855, %6860, %6865, %6870, %6875, %6880, %6885, %6890, %6895, %6900, %6905, %6910, %6915, %6920, %6925, %6930, %6935, %6940, %6945, %6951, %6957, %6963, %6969, %6975, %6981, %6987, %6993, %6999, %7005, %7011, %7017, %7023, %7029, %7035, %7041, %7047, %7053, %7059, %7065, %7071, %7077, %7083, %7089, %7095, %7101, %7107, %7113, %7119, %7125, %7131, %7137, %7143, %7149, %7155, %7161, %7167, %7173, %7179, %7185, %7191, %7197, %7203, %7209, %7215, %7221, %7227, %7233, %7239, %7245, %7251, %7257, %7263, %7269, %7275, %7281, %7287, %7293, %7299, %7305, %7311, %7317, %7323, %7329, %7335, %7341, %7347, %7353, %7359, %7365, %7371, %7377, %7383, %7389, %7395, %7401, %7407, %7413, %7419, %7425, %7431, %7437, %7443, %7449, %7455, %7461, %7467, %7473, %7479, %7485, %7491, %7497, %7503, %7509, %7515, %7521, %7527, %7533, %7539, %7545, %7551, %7557, %7563, %7569, %7575, %7581, %7587, %7593, %7599, %7605, %7611, %7617, %7623, %7629, %7635, %7641, %7647, %7653, %7659, %7665, %7671, %7677, %7683, %7689, %7695, %7701, %7707, %7713, %7719, %7725, %7731, %7737, %7743, %7749, %7755, %7761, %7767, %7773, %7779, %7785, %7791, %7797, %7803, %7809, %7815, %7821, %7827, %7833, %7839, %7845, %7851, %7857, %7863, %7869, %7875, %7881, %7887, %7893, %7899, %7905, %7911, %7917, %7923, %7929, %7935, %7941, %7947, %7953, %7959, %7965, %7971, %7977, %7983, %7989, %7995, %8001, %8007, %8013, %8019, %8025, %8031, %8037, %8043, %8049, %8055, %8061, %8067, %8073, %8079, %8085, %8091, %8097, %8103, %8109, %8115, %8121, %8127, %8133, %8139, %8145, %8151, %8157, %8163, %11242, %2260, %2255, %2253, %2255, %2255 : tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_where(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_90(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_105(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_106(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_where_264(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_314(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
