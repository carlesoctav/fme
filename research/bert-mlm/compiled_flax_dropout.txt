module @jit_train_step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  sdy.mesh @empty_mesh = <[]>
  func.func public @main(%arg0: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg1: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg2: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg3: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg4: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg5: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg6: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg7: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg8: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg9: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg10: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg11: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg12: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg13: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg14: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg15: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg16: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg17: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg18: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg19: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg20: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg21: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg22: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg23: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg24: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg25: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg26: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg27: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg28: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg29: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg30: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg31: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg32: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg33: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg34: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg35: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg36: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg37: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg38: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg39: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg40: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg41: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg42: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg43: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg44: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg45: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg46: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg47: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg48: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg49: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg50: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg51: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg52: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg53: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg54: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg55: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg56: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg57: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg58: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg59: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg60: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg61: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg62: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg63: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg64: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg65: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg66: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg67: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg68: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg69: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg70: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg71: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg72: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg73: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg74: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg75: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg76: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg77: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg78: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg79: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg80: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg81: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg82: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg83: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg84: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg85: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg86: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg87: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg88: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg89: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg90: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg91: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg92: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg93: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg94: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg95: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg96: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg97: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg98: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg99: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg100: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg101: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg102: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg103: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg104: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg105: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg106: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg107: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg108: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg109: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg110: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg111: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg112: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg113: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg114: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg115: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg116: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg117: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg118: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg119: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg120: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg121: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg122: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg123: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg124: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg125: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg126: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg127: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg128: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg129: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg130: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg131: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg132: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg133: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg134: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg135: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg136: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg137: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg138: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg139: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg140: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg141: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg142: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg143: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg144: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg145: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg146: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg147: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg148: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg149: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg150: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg151: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg152: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg153: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg154: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg155: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg156: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg157: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg158: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg159: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg160: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg161: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg162: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg163: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg164: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg165: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg166: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg167: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg168: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg169: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg170: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg171: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg172: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg173: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg174: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg175: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg176: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg177: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg178: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg179: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg180: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg181: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg182: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg183: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg184: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg185: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg186: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg187: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg188: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg189: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg190: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg191: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg192: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg193: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg194: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg195: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg196: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg197: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg198: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg199: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg200: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg201: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg202: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg203: tensor<i32>, %arg204: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg205: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg206: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg207: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg208: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg209: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg210: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg211: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg212: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg213: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg214: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg215: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg216: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg217: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg218: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg219: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg220: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg221: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg222: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg223: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg224: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg225: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg226: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg227: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg228: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg229: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg230: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg231: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg232: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg233: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg234: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg235: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg236: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg237: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg238: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg239: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg240: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg241: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg242: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg243: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg244: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg245: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg246: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg247: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg248: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg249: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg250: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg251: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg252: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg253: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg254: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg255: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg256: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg257: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg258: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg259: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg260: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg261: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg262: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg263: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg264: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg265: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg266: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg267: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg268: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg269: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg270: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg271: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg272: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg273: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg274: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg275: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg276: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg277: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg278: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg279: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg280: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg281: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg282: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg283: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg284: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg285: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg286: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg287: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg288: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg289: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg290: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg291: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg292: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg293: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg294: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg295: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg296: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg297: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg298: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg299: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg300: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg301: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg302: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg303: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg304: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg305: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg306: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg307: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg308: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg309: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg310: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg311: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg312: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg313: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg314: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg315: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg316: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg317: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg318: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg319: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg320: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg321: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg322: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg323: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg324: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg325: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg326: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg327: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg328: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg329: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg330: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg331: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg332: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg333: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg334: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg335: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg336: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg337: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg338: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg339: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg340: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg341: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg342: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg343: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg344: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg345: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg346: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg347: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg348: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg349: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg350: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg351: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg352: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg353: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg354: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg355: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg356: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg357: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg358: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg359: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg360: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg361: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg362: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg363: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg364: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg365: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg366: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg367: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg368: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg369: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg370: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg371: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg372: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg373: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg374: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg375: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg376: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg377: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg378: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg379: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg380: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg381: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg382: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg383: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg384: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg385: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg386: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg387: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg388: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg389: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg390: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg391: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg392: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg393: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg394: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg395: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg396: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg397: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg398: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg399: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg400: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg401: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg402: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg403: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg404: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg405: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg406: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg407: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg408: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg409: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg410: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg411: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg412: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg413: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg414: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg415: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg416: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg417: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg418: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg419: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg420: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg421: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg422: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg423: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg424: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg425: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg426: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg427: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg428: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg429: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg430: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg431: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg432: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg433: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg434: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg435: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg436: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg437: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg438: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg439: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg440: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg441: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg442: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg443: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg444: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg445: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg446: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg447: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg448: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg449: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg450: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg451: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg452: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg453: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg454: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg455: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg456: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg457: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg458: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg459: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg460: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg461: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg462: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg463: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg464: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg465: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg466: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg467: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg468: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg469: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg470: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg471: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg472: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg473: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg474: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg475: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg476: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg477: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg478: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg479: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg480: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg481: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg482: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg483: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg484: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg485: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg486: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg487: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg488: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg489: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg490: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg491: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg492: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg493: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg494: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg495: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg496: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg497: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg498: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg499: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg500: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg501: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg502: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg503: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg504: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg505: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg506: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg507: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg508: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg509: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg510: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg511: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg512: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg513: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg514: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg515: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg516: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg517: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg518: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg519: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg520: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg521: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg522: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg523: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg524: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg525: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg526: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg527: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg528: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg529: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg530: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg531: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg532: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg533: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg534: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg535: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg536: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg537: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg538: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg539: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg540: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg541: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg542: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg543: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg544: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg545: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg546: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg547: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg548: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg549: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg550: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg551: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg552: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg553: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg554: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg555: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg556: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg557: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg558: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg559: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg560: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg561: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg562: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg563: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg564: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg565: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg566: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg567: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg568: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg569: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg570: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg571: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg572: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg573: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg574: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg575: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg576: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg577: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg578: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg579: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg580: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg581: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg582: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg583: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg584: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg585: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg586: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg587: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg588: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg589: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg590: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg591: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg592: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg593: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg594: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg595: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg596: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg597: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg598: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg599: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg600: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg601: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg602: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg603: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg604: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg605: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg606: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg607: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg608: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg609: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg610: tensor<i32>, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg612: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg613: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg614: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg615: tensor<2xui32>) -> (tensor<512x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].params['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].params['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].params['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][0].count"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].mu['mlm_head']['params']['layer_norm']['scale']"}, tensor<512x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_position_ids']['embedding']"}, tensor<2x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_segment_ids']['embedding']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_0']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_1']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_10']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_11']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_2']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_3']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_4']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_5']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_6']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_7']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_8']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['key']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['query']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['attention_layer']['value']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['attention_block']['layer_norm']['scale']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['bias']"}, tensor<3072x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['layer_norm']['scale']"}, tensor<3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['bias']"}, tensor<768x3072xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['encoder_block']['layer_sequence']['layers_9']['mlp_block']['mlp']['dense_layer']['kernel']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['encoder']['params']['layer_norm']['scale']"}, tensor<30522xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['bias']"}, tensor<768x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['dense']['kernel']"}, tensor<30522x768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['encoder']['embedder']['embedders_token_ids']['embedding']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['bias']"}, tensor<768xf32> {jax.result_info = "result[0].opt_state[1][0].nu['mlm_head']['params']['layer_norm']['scale']"}, tensor<i32> {jax.result_info = "result[0].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[2]['total_token']"}) {
    %0 = sdy.sharding_constraint %arg615 <@empty_mesh, [{}]> : tensor<2xui32>
    %1 = stablehlo.iota dim = 0 : tensor<512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %4 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %5 = stablehlo.compare  LT, %arg611, %4,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %7 = stablehlo.add %arg611, %6 : tensor<64x512xi32>
    %8 = stablehlo.select %5, %7, %arg611 : tensor<64x512xi1>, tensor<64x512xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %10 = "stablehlo.gather"(%arg2, %9) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %12 = stablehlo.compare  LT, %3, %11,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %13 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %14 = stablehlo.add %3, %13 : tensor<64x512xi32>
    %15 = stablehlo.select %12, %14, %3 : tensor<64x512xi1>, tensor<64x512xi32>
    %16 = stablehlo.broadcast_in_dim %15, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %17 = "stablehlo.gather"(%arg0, %16) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %18 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %19 = stablehlo.compare  LT, %arg613, %18,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %20 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %21 = stablehlo.add %arg613, %20 : tensor<64x512xi32>
    %22 = stablehlo.select %19, %21, %arg613 : tensor<64x512xi1>, tensor<64x512xi32>
    %23 = stablehlo.broadcast_in_dim %22, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %24 = "stablehlo.gather"(%arg1, %23) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %25 = stablehlo.add %17, %24 : tensor<64x512x768xf32>
    %26 = stablehlo.add %25, %10 : tensor<64x512x768xf32>
    %27 = stablehlo.multiply %26, %26 : tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %28 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %29 = stablehlo.multiply %28, %26 : tensor<64x512x768xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %30 = stablehlo.reduce(%26 init: %cst_3) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_4 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %31 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %32 = stablehlo.divide %30, %31 : tensor<64x512xf32>
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %33 = stablehlo.reduce(%27 init: %cst_5) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %34 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %35 = stablehlo.divide %33, %34 : tensor<64x512xf32>
    %36 = stablehlo.multiply %32, %32 : tensor<64x512xf32>
    %37 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %38 = stablehlo.multiply %37, %32 : tensor<64x512xf32>
    %39 = stablehlo.subtract %35, %36 : tensor<64x512xf32>
    %cst_6 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %40 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %41 = stablehlo.maximum %40, %39 : tensor<64x512xf32>
    %42 = stablehlo.compare  EQ, %39, %41,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %cst_7 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %43 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %44 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %45 = stablehlo.select %42, %43, %44 : tensor<64x512xi1>, tensor<64x512xf32>
    %46 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %47 = stablehlo.compare  EQ, %46, %41,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %48 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %49 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %50 = stablehlo.select %47, %48, %49 : tensor<64x512xi1>, tensor<64x512xf32>
    %51 = stablehlo.divide %45, %50 : tensor<64x512xf32>
    %52 = stablehlo.broadcast_in_dim %32, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %53 = stablehlo.broadcast_in_dim %41, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %54 = stablehlo.broadcast_in_dim %52, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %55 = stablehlo.subtract %26, %54 : tensor<64x512x768xf32>
    %cst_8 = stablehlo.constant dense<9.99999996E-13> : tensor<f32>
    %56 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %57 = stablehlo.add %53, %56 : tensor<64x512x1xf32>
    %58 = stablehlo.rsqrt %57 : tensor<64x512x1xf32>
    %59 = stablehlo.divide %58, %57 : tensor<64x512x1xf32>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<f32>
    %60 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %61 = stablehlo.multiply %60, %59 : tensor<64x512x1xf32>
    %62 = stablehlo.reshape %arg196 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %63 = stablehlo.broadcast_in_dim %58, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %64 = stablehlo.broadcast_in_dim %62, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %65 = stablehlo.multiply %63, %64 : tensor<64x512x768xf32>
    %66 = stablehlo.multiply %55, %65 : tensor<64x512x768xf32>
    %67 = stablehlo.reshape %arg195 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %68 = stablehlo.broadcast_in_dim %67, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %69 = stablehlo.add %66, %68 : tensor<64x512x768xf32>
    %c_10 = stablehlo.constant dense<4050721435> : tensor<ui32>
    %70 = call @_threefry_fold_in(%0, %c_10) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_11 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %71 = call @_bernoulli(%70, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %72 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %73 = stablehlo.divide %69, %72 : tensor<64x512x768xf32>
    %74 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %75 = stablehlo.select %71, %73, %74 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %76 = stablehlo.broadcast_in_dim %arg612, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %77 = stablehlo.broadcast_in_dim %arg612, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %78 = stablehlo.broadcast_in_dim %76, dims = [0, 1, 2] : (tensor<64x512x1xi32>) -> tensor<64x512x512xi32>
    %79 = stablehlo.broadcast_in_dim %77, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %80 = stablehlo.multiply %78, %79 : tensor<64x512x512xi32>
    %81 = stablehlo.broadcast_in_dim %80, dims = [0, 2, 3] : (tensor<64x512x512xi32>) -> tensor<64x1x512x512xi32>
    %82 = stablehlo.convert %81 : (tensor<64x1x512x512xi32>) -> tensor<64x1x512x512xf32>
    %83 = stablehlo.reshape %arg6 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %84 = stablehlo.dot_general %75, %83, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %85 = stablehlo.reshape %arg5 : (tensor<768xf32>) -> tensor<12x64xf32>
    %86 = stablehlo.broadcast_in_dim %85, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %87 = stablehlo.broadcast_in_dim %86, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %88 = stablehlo.broadcast_in_dim %87, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %89 = stablehlo.add %84, %88 : tensor<64x512x12x64xf32>
    %90 = stablehlo.reshape %arg4 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %91 = stablehlo.dot_general %75, %90, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %92 = stablehlo.reshape %arg3 : (tensor<768xf32>) -> tensor<12x64xf32>
    %93 = stablehlo.broadcast_in_dim %92, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %94 = stablehlo.broadcast_in_dim %93, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %95 = stablehlo.broadcast_in_dim %94, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %96 = stablehlo.add %91, %95 : tensor<64x512x12x64xf32>
    %97 = stablehlo.reshape %arg8 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %98 = stablehlo.dot_general %75, %97, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %99 = stablehlo.reshape %arg7 : (tensor<768xf32>) -> tensor<12x64xf32>
    %100 = stablehlo.broadcast_in_dim %99, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %101 = stablehlo.broadcast_in_dim %100, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %102 = stablehlo.broadcast_in_dim %101, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %103 = stablehlo.add %98, %102 : tensor<64x512x12x64xf32>
    %104 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %105 = stablehlo.compare  GT, %82, %104,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %cst_12 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %106 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %107 = stablehlo.convert %106 : tensor<64x1x512x512xf32>
    %cst_13 = stablehlo.constant dense<-1.000000e+10> : tensor<f32>
    %108 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %109 = stablehlo.convert %108 : tensor<64x1x512x512xf32>
    %110 = stablehlo.select %105, %107, %109 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_14 = stablehlo.constant dense<2530881375> : tensor<ui32>
    %111 = call @_threefry_fold_in(%0, %c_14) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %cst_15 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %112 = stablehlo.sqrt %cst_15 : tensor<f32>
    %113 = stablehlo.convert %112 : tensor<f32>
    %114 = stablehlo.broadcast_in_dim %113, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %115 = stablehlo.divide %89, %114 : tensor<64x512x12x64xf32>
    %116 = stablehlo.dot_general %115, %96, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %117 = stablehlo.broadcast_in_dim %110, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %118 = stablehlo.add %116, %117 : tensor<64x12x512x512xf32>
    %cst_16 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %119 = stablehlo.reduce(%118 init: %cst_16) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %cst_17 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %120 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %121 = stablehlo.maximum %120, %119 : tensor<64x12x512xf32>
    %122 = stablehlo.broadcast_in_dim %121, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %123 = stablehlo.broadcast_in_dim %122, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %124 = stablehlo.subtract %118, %123 : tensor<64x12x512x512xf32>
    %125 = stablehlo.exponential %124 : tensor<64x12x512x512xf32>
    %cst_18 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %126 = stablehlo.reduce(%125 init: %cst_18) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %127 = stablehlo.broadcast_in_dim %126, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %128 = stablehlo.broadcast_in_dim %127, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %129 = stablehlo.divide %125, %128 : tensor<64x12x512x512xf32>
    %130 = stablehlo.multiply %127, %127 : tensor<64x12x512x1xf32>
    %cst_19 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %131 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %132 = stablehlo.divide %131, %130 : tensor<64x12x512x1xf32>
    %133 = call @_bernoulli_70(%111, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %134 = stablehlo.convert %133 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %135 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %136 = stablehlo.divide %134, %135 : tensor<64x12x512x512xf32>
    %137 = stablehlo.multiply %129, %136 : tensor<64x12x512x512xf32>
    %138 = stablehlo.dot_general %103, %137, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %139 = stablehlo.transpose %138, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %140 = stablehlo.reshape %arg10 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %141 = stablehlo.dot_general %139, %140, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %142 = stablehlo.broadcast_in_dim %arg9, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %143 = stablehlo.broadcast_in_dim %142, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %144 = stablehlo.broadcast_in_dim %143, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %145 = stablehlo.add %141, %144 : tensor<64x512x768xf32>
    %c_20 = stablehlo.constant dense<1268671986> : tensor<ui32>
    %146 = call @_threefry_fold_in(%0, %c_20) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %147 = call @_bernoulli(%146, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %148 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %149 = stablehlo.divide %145, %148 : tensor<64x512x768xf32>
    %150 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %151 = stablehlo.select %147, %149, %150 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %152 = stablehlo.add %151, %75 : tensor<64x512x768xf32>
    %153 = stablehlo.multiply %152, %152 : tensor<64x512x768xf32>
    %154 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %155 = stablehlo.multiply %154, %152 : tensor<64x512x768xf32>
    %cst_21 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %156 = stablehlo.reduce(%152 init: %cst_21) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %157 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %158 = stablehlo.divide %156, %157 : tensor<64x512xf32>
    %cst_22 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %159 = stablehlo.reduce(%153 init: %cst_22) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %160 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %161 = stablehlo.divide %159, %160 : tensor<64x512xf32>
    %162 = stablehlo.multiply %158, %158 : tensor<64x512xf32>
    %163 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %164 = stablehlo.multiply %163, %158 : tensor<64x512xf32>
    %165 = stablehlo.subtract %161, %162 : tensor<64x512xf32>
    %166 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %167 = stablehlo.maximum %166, %165 : tensor<64x512xf32>
    %168 = stablehlo.compare  EQ, %165, %167,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %169 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %170 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %171 = stablehlo.select %168, %169, %170 : tensor<64x512xi1>, tensor<64x512xf32>
    %172 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %173 = stablehlo.compare  EQ, %172, %167,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %174 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %175 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %176 = stablehlo.select %173, %174, %175 : tensor<64x512xi1>, tensor<64x512xf32>
    %177 = stablehlo.divide %171, %176 : tensor<64x512xf32>
    %178 = stablehlo.broadcast_in_dim %158, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %179 = stablehlo.broadcast_in_dim %167, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %180 = stablehlo.broadcast_in_dim %178, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %181 = stablehlo.subtract %152, %180 : tensor<64x512x768xf32>
    %182 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %183 = stablehlo.add %179, %182 : tensor<64x512x1xf32>
    %184 = stablehlo.rsqrt %183 : tensor<64x512x1xf32>
    %185 = stablehlo.divide %184, %183 : tensor<64x512x1xf32>
    %186 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %187 = stablehlo.multiply %186, %185 : tensor<64x512x1xf32>
    %188 = stablehlo.reshape %arg12 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %189 = stablehlo.broadcast_in_dim %184, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %190 = stablehlo.broadcast_in_dim %188, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %191 = stablehlo.multiply %189, %190 : tensor<64x512x768xf32>
    %192 = stablehlo.multiply %181, %191 : tensor<64x512x768xf32>
    %193 = stablehlo.reshape %arg11 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %194 = stablehlo.broadcast_in_dim %193, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %195 = stablehlo.add %192, %194 : tensor<64x512x768xf32>
    %196 = stablehlo.dot_general %195, %arg18, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %197 = stablehlo.broadcast_in_dim %arg17, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %198 = stablehlo.broadcast_in_dim %197, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %199 = stablehlo.broadcast_in_dim %198, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %200 = stablehlo.add %196, %199 : tensor<64x512x3072xf32>
    %201 = stablehlo.multiply %200, %200 : tensor<64x512x3072xf32>
    %202 = stablehlo.multiply %201, %200 : tensor<64x512x3072xf32>
    %203 = stablehlo.multiply %200, %200 : tensor<64x512x3072xf32>
    %cst_23 = stablehlo.constant dense<3.000000e+00> : tensor<f32>
    %204 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %205 = stablehlo.multiply %204, %203 : tensor<64x512x3072xf32>
    %cst_24 = stablehlo.constant dense<4.471500e-02> : tensor<f32>
    %206 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %207 = stablehlo.multiply %206, %202 : tensor<64x512x3072xf32>
    %208 = stablehlo.add %200, %207 : tensor<64x512x3072xf32>
    %cst_25 = stablehlo.constant dense<0.797884583> : tensor<f32>
    %209 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %210 = stablehlo.multiply %209, %208 : tensor<64x512x3072xf32>
    %211 = stablehlo.tanh %210 : tensor<64x512x3072xf32>
    %212 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %213 = stablehlo.broadcast_in_dim %212, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %214 = stablehlo.subtract %213, %211 : tensor<64x512x3072xf32>
    %215 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %216 = stablehlo.add %215, %211 : tensor<64x512x3072xf32>
    %cst_26 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %217 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %218 = stablehlo.multiply %217, %216 : tensor<64x512x3072xf32>
    %219 = stablehlo.multiply %200, %218 : tensor<64x512x3072xf32>
    %220 = stablehlo.dot_general %219, %arg14, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %221 = stablehlo.broadcast_in_dim %arg13, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %222 = stablehlo.broadcast_in_dim %221, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %223 = stablehlo.broadcast_in_dim %222, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %224 = stablehlo.add %220, %223 : tensor<64x512x768xf32>
    %c_27 = stablehlo.constant dense<1964414256> : tensor<ui32>
    %225 = call @_threefry_fold_in(%0, %c_27) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %226 = call @_bernoulli_111(%225, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %227 = stablehlo.broadcast_in_dim %226, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %228 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %229 = stablehlo.divide %224, %228 : tensor<64x512x768xf32>
    %230 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %231 = stablehlo.select %227, %229, %230 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %232 = stablehlo.add %231, %195 : tensor<64x512x768xf32>
    %233 = stablehlo.multiply %232, %232 : tensor<64x512x768xf32>
    %234 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %235 = stablehlo.multiply %234, %232 : tensor<64x512x768xf32>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %236 = stablehlo.reduce(%232 init: %cst_28) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %237 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %238 = stablehlo.divide %236, %237 : tensor<64x512xf32>
    %cst_29 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %239 = stablehlo.reduce(%233 init: %cst_29) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %240 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %241 = stablehlo.divide %239, %240 : tensor<64x512xf32>
    %242 = stablehlo.multiply %238, %238 : tensor<64x512xf32>
    %243 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %244 = stablehlo.multiply %243, %238 : tensor<64x512xf32>
    %245 = stablehlo.subtract %241, %242 : tensor<64x512xf32>
    %246 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %247 = stablehlo.maximum %246, %245 : tensor<64x512xf32>
    %248 = stablehlo.compare  EQ, %245, %247,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %249 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %250 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %251 = stablehlo.select %248, %249, %250 : tensor<64x512xi1>, tensor<64x512xf32>
    %252 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %253 = stablehlo.compare  EQ, %252, %247,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %254 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %255 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %256 = stablehlo.select %253, %254, %255 : tensor<64x512xi1>, tensor<64x512xf32>
    %257 = stablehlo.divide %251, %256 : tensor<64x512xf32>
    %258 = stablehlo.broadcast_in_dim %238, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %259 = stablehlo.broadcast_in_dim %247, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %260 = stablehlo.broadcast_in_dim %258, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %261 = stablehlo.subtract %232, %260 : tensor<64x512x768xf32>
    %262 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %263 = stablehlo.add %259, %262 : tensor<64x512x1xf32>
    %264 = stablehlo.rsqrt %263 : tensor<64x512x1xf32>
    %265 = stablehlo.divide %264, %263 : tensor<64x512x1xf32>
    %266 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %267 = stablehlo.multiply %266, %265 : tensor<64x512x1xf32>
    %268 = stablehlo.reshape %arg16 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %269 = stablehlo.broadcast_in_dim %264, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %270 = stablehlo.broadcast_in_dim %268, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %271 = stablehlo.multiply %269, %270 : tensor<64x512x768xf32>
    %272 = stablehlo.multiply %261, %271 : tensor<64x512x768xf32>
    %273 = stablehlo.reshape %arg15 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %274 = stablehlo.broadcast_in_dim %273, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %275 = stablehlo.add %272, %274 : tensor<64x512x768xf32>
    %276 = stablehlo.reshape %arg22 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %277 = stablehlo.dot_general %275, %276, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %278 = stablehlo.reshape %arg21 : (tensor<768xf32>) -> tensor<12x64xf32>
    %279 = stablehlo.broadcast_in_dim %278, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %280 = stablehlo.broadcast_in_dim %279, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %281 = stablehlo.broadcast_in_dim %280, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %282 = stablehlo.add %277, %281 : tensor<64x512x12x64xf32>
    %283 = stablehlo.reshape %arg20 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %284 = stablehlo.dot_general %275, %283, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %285 = stablehlo.reshape %arg19 : (tensor<768xf32>) -> tensor<12x64xf32>
    %286 = stablehlo.broadcast_in_dim %285, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %287 = stablehlo.broadcast_in_dim %286, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %288 = stablehlo.broadcast_in_dim %287, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %289 = stablehlo.add %284, %288 : tensor<64x512x12x64xf32>
    %290 = stablehlo.reshape %arg24 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %291 = stablehlo.dot_general %275, %290, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %292 = stablehlo.reshape %arg23 : (tensor<768xf32>) -> tensor<12x64xf32>
    %293 = stablehlo.broadcast_in_dim %292, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %294 = stablehlo.broadcast_in_dim %293, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %295 = stablehlo.broadcast_in_dim %294, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %296 = stablehlo.add %291, %295 : tensor<64x512x12x64xf32>
    %297 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %298 = stablehlo.compare  GT, %82, %297,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %299 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %300 = stablehlo.convert %299 : tensor<64x1x512x512xf32>
    %301 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %302 = stablehlo.convert %301 : tensor<64x1x512x512xf32>
    %303 = stablehlo.select %298, %300, %302 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_30 = stablehlo.constant dense<2719293418> : tensor<ui32>
    %304 = call @_threefry_fold_in(%0, %c_30) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %305 = stablehlo.sqrt %cst_15 : tensor<f32>
    %306 = stablehlo.convert %305 : tensor<f32>
    %307 = stablehlo.broadcast_in_dim %306, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %308 = stablehlo.divide %282, %307 : tensor<64x512x12x64xf32>
    %309 = stablehlo.dot_general %308, %289, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %310 = stablehlo.broadcast_in_dim %303, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %311 = stablehlo.add %309, %310 : tensor<64x12x512x512xf32>
    %cst_31 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %312 = stablehlo.reduce(%311 init: %cst_31) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %313 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %314 = stablehlo.maximum %313, %312 : tensor<64x12x512xf32>
    %315 = stablehlo.broadcast_in_dim %314, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %316 = stablehlo.broadcast_in_dim %315, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %317 = stablehlo.subtract %311, %316 : tensor<64x12x512x512xf32>
    %318 = stablehlo.exponential %317 : tensor<64x12x512x512xf32>
    %cst_32 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %319 = stablehlo.reduce(%318 init: %cst_32) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %320 = stablehlo.broadcast_in_dim %319, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %321 = stablehlo.broadcast_in_dim %320, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %322 = stablehlo.divide %318, %321 : tensor<64x12x512x512xf32>
    %323 = stablehlo.multiply %320, %320 : tensor<64x12x512x1xf32>
    %cst_33 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %324 = stablehlo.broadcast_in_dim %cst_33, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %325 = stablehlo.divide %324, %323 : tensor<64x12x512x1xf32>
    %326 = call @_bernoulli_70(%304, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %327 = stablehlo.convert %326 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %328 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %329 = stablehlo.divide %327, %328 : tensor<64x12x512x512xf32>
    %330 = stablehlo.multiply %322, %329 : tensor<64x12x512x512xf32>
    %331 = stablehlo.dot_general %296, %330, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %332 = stablehlo.transpose %331, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %333 = stablehlo.reshape %arg26 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %334 = stablehlo.dot_general %332, %333, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %335 = stablehlo.broadcast_in_dim %arg25, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %336 = stablehlo.broadcast_in_dim %335, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %337 = stablehlo.broadcast_in_dim %336, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %338 = stablehlo.add %334, %337 : tensor<64x512x768xf32>
    %c_34 = stablehlo.constant dense<2608215118> : tensor<ui32>
    %339 = call @_threefry_fold_in(%0, %c_34) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %340 = call @_bernoulli(%339, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %341 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %342 = stablehlo.divide %338, %341 : tensor<64x512x768xf32>
    %343 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %344 = stablehlo.select %340, %342, %343 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %345 = stablehlo.add %344, %275 : tensor<64x512x768xf32>
    %346 = stablehlo.multiply %345, %345 : tensor<64x512x768xf32>
    %347 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %348 = stablehlo.multiply %347, %345 : tensor<64x512x768xf32>
    %cst_35 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %349 = stablehlo.reduce(%345 init: %cst_35) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %350 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %351 = stablehlo.divide %349, %350 : tensor<64x512xf32>
    %cst_36 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %352 = stablehlo.reduce(%346 init: %cst_36) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %353 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %354 = stablehlo.divide %352, %353 : tensor<64x512xf32>
    %355 = stablehlo.multiply %351, %351 : tensor<64x512xf32>
    %356 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %357 = stablehlo.multiply %356, %351 : tensor<64x512xf32>
    %358 = stablehlo.subtract %354, %355 : tensor<64x512xf32>
    %359 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %360 = stablehlo.maximum %359, %358 : tensor<64x512xf32>
    %361 = stablehlo.compare  EQ, %358, %360,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %362 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %363 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %364 = stablehlo.select %361, %362, %363 : tensor<64x512xi1>, tensor<64x512xf32>
    %365 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %366 = stablehlo.compare  EQ, %365, %360,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %367 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %368 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %369 = stablehlo.select %366, %367, %368 : tensor<64x512xi1>, tensor<64x512xf32>
    %370 = stablehlo.divide %364, %369 : tensor<64x512xf32>
    %371 = stablehlo.broadcast_in_dim %351, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %372 = stablehlo.broadcast_in_dim %360, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %373 = stablehlo.broadcast_in_dim %371, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %374 = stablehlo.subtract %345, %373 : tensor<64x512x768xf32>
    %375 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %376 = stablehlo.add %372, %375 : tensor<64x512x1xf32>
    %377 = stablehlo.rsqrt %376 : tensor<64x512x1xf32>
    %378 = stablehlo.divide %377, %376 : tensor<64x512x1xf32>
    %379 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %380 = stablehlo.multiply %379, %378 : tensor<64x512x1xf32>
    %381 = stablehlo.reshape %arg28 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %382 = stablehlo.broadcast_in_dim %377, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %383 = stablehlo.broadcast_in_dim %381, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %384 = stablehlo.multiply %382, %383 : tensor<64x512x768xf32>
    %385 = stablehlo.multiply %374, %384 : tensor<64x512x768xf32>
    %386 = stablehlo.reshape %arg27 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %387 = stablehlo.broadcast_in_dim %386, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %388 = stablehlo.add %385, %387 : tensor<64x512x768xf32>
    %389 = stablehlo.dot_general %388, %arg34, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %390 = stablehlo.broadcast_in_dim %arg33, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %391 = stablehlo.broadcast_in_dim %390, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %392 = stablehlo.broadcast_in_dim %391, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %393 = stablehlo.add %389, %392 : tensor<64x512x3072xf32>
    %394 = stablehlo.multiply %393, %393 : tensor<64x512x3072xf32>
    %395 = stablehlo.multiply %394, %393 : tensor<64x512x3072xf32>
    %396 = stablehlo.multiply %393, %393 : tensor<64x512x3072xf32>
    %397 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %398 = stablehlo.multiply %397, %396 : tensor<64x512x3072xf32>
    %399 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %400 = stablehlo.multiply %399, %395 : tensor<64x512x3072xf32>
    %401 = stablehlo.add %393, %400 : tensor<64x512x3072xf32>
    %402 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %403 = stablehlo.multiply %402, %401 : tensor<64x512x3072xf32>
    %404 = stablehlo.tanh %403 : tensor<64x512x3072xf32>
    %405 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %406 = stablehlo.broadcast_in_dim %405, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %407 = stablehlo.subtract %406, %404 : tensor<64x512x3072xf32>
    %408 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %409 = stablehlo.add %408, %404 : tensor<64x512x3072xf32>
    %410 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %411 = stablehlo.multiply %410, %409 : tensor<64x512x3072xf32>
    %412 = stablehlo.multiply %393, %411 : tensor<64x512x3072xf32>
    %413 = stablehlo.dot_general %412, %arg30, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %414 = stablehlo.broadcast_in_dim %arg29, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %415 = stablehlo.broadcast_in_dim %414, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %416 = stablehlo.broadcast_in_dim %415, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %417 = stablehlo.add %413, %416 : tensor<64x512x768xf32>
    %c_37 = stablehlo.constant dense<2710230233> : tensor<ui32>
    %418 = call @_threefry_fold_in(%0, %c_37) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %419 = call @_bernoulli_111(%418, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %420 = stablehlo.broadcast_in_dim %419, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %421 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %422 = stablehlo.divide %417, %421 : tensor<64x512x768xf32>
    %423 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %424 = stablehlo.select %420, %422, %423 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %425 = stablehlo.add %424, %388 : tensor<64x512x768xf32>
    %426 = stablehlo.multiply %425, %425 : tensor<64x512x768xf32>
    %427 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %428 = stablehlo.multiply %427, %425 : tensor<64x512x768xf32>
    %cst_38 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %429 = stablehlo.reduce(%425 init: %cst_38) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %430 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %431 = stablehlo.divide %429, %430 : tensor<64x512xf32>
    %cst_39 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %432 = stablehlo.reduce(%426 init: %cst_39) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %433 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %434 = stablehlo.divide %432, %433 : tensor<64x512xf32>
    %435 = stablehlo.multiply %431, %431 : tensor<64x512xf32>
    %436 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %437 = stablehlo.multiply %436, %431 : tensor<64x512xf32>
    %438 = stablehlo.subtract %434, %435 : tensor<64x512xf32>
    %439 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %440 = stablehlo.maximum %439, %438 : tensor<64x512xf32>
    %441 = stablehlo.compare  EQ, %438, %440,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %442 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %443 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %444 = stablehlo.select %441, %442, %443 : tensor<64x512xi1>, tensor<64x512xf32>
    %445 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %446 = stablehlo.compare  EQ, %445, %440,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %447 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %448 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %449 = stablehlo.select %446, %447, %448 : tensor<64x512xi1>, tensor<64x512xf32>
    %450 = stablehlo.divide %444, %449 : tensor<64x512xf32>
    %451 = stablehlo.broadcast_in_dim %431, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %452 = stablehlo.broadcast_in_dim %440, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %453 = stablehlo.broadcast_in_dim %451, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %454 = stablehlo.subtract %425, %453 : tensor<64x512x768xf32>
    %455 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %456 = stablehlo.add %452, %455 : tensor<64x512x1xf32>
    %457 = stablehlo.rsqrt %456 : tensor<64x512x1xf32>
    %458 = stablehlo.divide %457, %456 : tensor<64x512x1xf32>
    %459 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %460 = stablehlo.multiply %459, %458 : tensor<64x512x1xf32>
    %461 = stablehlo.reshape %arg32 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %462 = stablehlo.broadcast_in_dim %457, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %463 = stablehlo.broadcast_in_dim %461, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %464 = stablehlo.multiply %462, %463 : tensor<64x512x768xf32>
    %465 = stablehlo.multiply %454, %464 : tensor<64x512x768xf32>
    %466 = stablehlo.reshape %arg31 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %467 = stablehlo.broadcast_in_dim %466, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %468 = stablehlo.add %465, %467 : tensor<64x512x768xf32>
    %469 = stablehlo.reshape %arg70 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %470 = stablehlo.dot_general %468, %469, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %471 = stablehlo.reshape %arg69 : (tensor<768xf32>) -> tensor<12x64xf32>
    %472 = stablehlo.broadcast_in_dim %471, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %473 = stablehlo.broadcast_in_dim %472, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %474 = stablehlo.broadcast_in_dim %473, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %475 = stablehlo.add %470, %474 : tensor<64x512x12x64xf32>
    %476 = stablehlo.reshape %arg68 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %477 = stablehlo.dot_general %468, %476, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %478 = stablehlo.reshape %arg67 : (tensor<768xf32>) -> tensor<12x64xf32>
    %479 = stablehlo.broadcast_in_dim %478, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %480 = stablehlo.broadcast_in_dim %479, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %481 = stablehlo.broadcast_in_dim %480, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %482 = stablehlo.add %477, %481 : tensor<64x512x12x64xf32>
    %483 = stablehlo.reshape %arg72 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %484 = stablehlo.dot_general %468, %483, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %485 = stablehlo.reshape %arg71 : (tensor<768xf32>) -> tensor<12x64xf32>
    %486 = stablehlo.broadcast_in_dim %485, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %487 = stablehlo.broadcast_in_dim %486, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %488 = stablehlo.broadcast_in_dim %487, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %489 = stablehlo.add %484, %488 : tensor<64x512x12x64xf32>
    %490 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %491 = stablehlo.compare  GT, %82, %490,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %492 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %493 = stablehlo.convert %492 : tensor<64x1x512x512xf32>
    %494 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %495 = stablehlo.convert %494 : tensor<64x1x512x512xf32>
    %496 = stablehlo.select %491, %493, %495 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_40 = stablehlo.constant dense<4069916713> : tensor<ui32>
    %497 = call @_threefry_fold_in(%0, %c_40) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %498 = stablehlo.sqrt %cst_15 : tensor<f32>
    %499 = stablehlo.convert %498 : tensor<f32>
    %500 = stablehlo.broadcast_in_dim %499, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %501 = stablehlo.divide %475, %500 : tensor<64x512x12x64xf32>
    %502 = stablehlo.dot_general %501, %482, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %503 = stablehlo.broadcast_in_dim %496, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %504 = stablehlo.add %502, %503 : tensor<64x12x512x512xf32>
    %cst_41 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %505 = stablehlo.reduce(%504 init: %cst_41) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %506 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %507 = stablehlo.maximum %506, %505 : tensor<64x12x512xf32>
    %508 = stablehlo.broadcast_in_dim %507, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %509 = stablehlo.broadcast_in_dim %508, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %510 = stablehlo.subtract %504, %509 : tensor<64x12x512x512xf32>
    %511 = stablehlo.exponential %510 : tensor<64x12x512x512xf32>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %512 = stablehlo.reduce(%511 init: %cst_42) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %513 = stablehlo.broadcast_in_dim %512, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %514 = stablehlo.broadcast_in_dim %513, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %515 = stablehlo.divide %511, %514 : tensor<64x12x512x512xf32>
    %516 = stablehlo.multiply %513, %513 : tensor<64x12x512x1xf32>
    %cst_43 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %517 = stablehlo.broadcast_in_dim %cst_43, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %518 = stablehlo.divide %517, %516 : tensor<64x12x512x1xf32>
    %519 = call @_bernoulli_70(%497, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %520 = stablehlo.convert %519 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %521 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %522 = stablehlo.divide %520, %521 : tensor<64x12x512x512xf32>
    %523 = stablehlo.multiply %515, %522 : tensor<64x12x512x512xf32>
    %524 = stablehlo.dot_general %489, %523, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %525 = stablehlo.transpose %524, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %526 = stablehlo.reshape %arg74 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %527 = stablehlo.dot_general %525, %526, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %528 = stablehlo.broadcast_in_dim %arg73, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %529 = stablehlo.broadcast_in_dim %528, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %530 = stablehlo.broadcast_in_dim %529, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %531 = stablehlo.add %527, %530 : tensor<64x512x768xf32>
    %c_44 = stablehlo.constant dense<2440900070> : tensor<ui32>
    %532 = call @_threefry_fold_in(%0, %c_44) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %533 = call @_bernoulli(%532, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %534 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %535 = stablehlo.divide %531, %534 : tensor<64x512x768xf32>
    %536 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %537 = stablehlo.select %533, %535, %536 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %538 = stablehlo.add %537, %468 : tensor<64x512x768xf32>
    %539 = stablehlo.multiply %538, %538 : tensor<64x512x768xf32>
    %540 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %541 = stablehlo.multiply %540, %538 : tensor<64x512x768xf32>
    %cst_45 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %542 = stablehlo.reduce(%538 init: %cst_45) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %543 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %544 = stablehlo.divide %542, %543 : tensor<64x512xf32>
    %cst_46 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %545 = stablehlo.reduce(%539 init: %cst_46) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %546 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %547 = stablehlo.divide %545, %546 : tensor<64x512xf32>
    %548 = stablehlo.multiply %544, %544 : tensor<64x512xf32>
    %549 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %550 = stablehlo.multiply %549, %544 : tensor<64x512xf32>
    %551 = stablehlo.subtract %547, %548 : tensor<64x512xf32>
    %552 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %553 = stablehlo.maximum %552, %551 : tensor<64x512xf32>
    %554 = stablehlo.compare  EQ, %551, %553,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %555 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %556 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %557 = stablehlo.select %554, %555, %556 : tensor<64x512xi1>, tensor<64x512xf32>
    %558 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %559 = stablehlo.compare  EQ, %558, %553,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %560 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %561 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %562 = stablehlo.select %559, %560, %561 : tensor<64x512xi1>, tensor<64x512xf32>
    %563 = stablehlo.divide %557, %562 : tensor<64x512xf32>
    %564 = stablehlo.broadcast_in_dim %544, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %565 = stablehlo.broadcast_in_dim %553, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %566 = stablehlo.broadcast_in_dim %564, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %567 = stablehlo.subtract %538, %566 : tensor<64x512x768xf32>
    %568 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %569 = stablehlo.add %565, %568 : tensor<64x512x1xf32>
    %570 = stablehlo.rsqrt %569 : tensor<64x512x1xf32>
    %571 = stablehlo.divide %570, %569 : tensor<64x512x1xf32>
    %572 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %573 = stablehlo.multiply %572, %571 : tensor<64x512x1xf32>
    %574 = stablehlo.reshape %arg76 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %575 = stablehlo.broadcast_in_dim %570, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %576 = stablehlo.broadcast_in_dim %574, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %577 = stablehlo.multiply %575, %576 : tensor<64x512x768xf32>
    %578 = stablehlo.multiply %567, %577 : tensor<64x512x768xf32>
    %579 = stablehlo.reshape %arg75 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %580 = stablehlo.broadcast_in_dim %579, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %581 = stablehlo.add %578, %580 : tensor<64x512x768xf32>
    %582 = stablehlo.dot_general %581, %arg82, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %583 = stablehlo.broadcast_in_dim %arg81, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %584 = stablehlo.broadcast_in_dim %583, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %585 = stablehlo.broadcast_in_dim %584, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %586 = stablehlo.add %582, %585 : tensor<64x512x3072xf32>
    %587 = stablehlo.multiply %586, %586 : tensor<64x512x3072xf32>
    %588 = stablehlo.multiply %587, %586 : tensor<64x512x3072xf32>
    %589 = stablehlo.multiply %586, %586 : tensor<64x512x3072xf32>
    %590 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %591 = stablehlo.multiply %590, %589 : tensor<64x512x3072xf32>
    %592 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %593 = stablehlo.multiply %592, %588 : tensor<64x512x3072xf32>
    %594 = stablehlo.add %586, %593 : tensor<64x512x3072xf32>
    %595 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %596 = stablehlo.multiply %595, %594 : tensor<64x512x3072xf32>
    %597 = stablehlo.tanh %596 : tensor<64x512x3072xf32>
    %598 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %599 = stablehlo.broadcast_in_dim %598, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %600 = stablehlo.subtract %599, %597 : tensor<64x512x3072xf32>
    %601 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %602 = stablehlo.add %601, %597 : tensor<64x512x3072xf32>
    %603 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %604 = stablehlo.multiply %603, %602 : tensor<64x512x3072xf32>
    %605 = stablehlo.multiply %586, %604 : tensor<64x512x3072xf32>
    %606 = stablehlo.dot_general %605, %arg78, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %607 = stablehlo.broadcast_in_dim %arg77, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %608 = stablehlo.broadcast_in_dim %607, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %609 = stablehlo.broadcast_in_dim %608, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %610 = stablehlo.add %606, %609 : tensor<64x512x768xf32>
    %c_47 = stablehlo.constant dense<2001679006> : tensor<ui32>
    %611 = call @_threefry_fold_in(%0, %c_47) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %612 = call @_bernoulli_111(%611, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %613 = stablehlo.broadcast_in_dim %612, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %614 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %615 = stablehlo.divide %610, %614 : tensor<64x512x768xf32>
    %616 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %617 = stablehlo.select %613, %615, %616 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %618 = stablehlo.add %617, %581 : tensor<64x512x768xf32>
    %619 = stablehlo.multiply %618, %618 : tensor<64x512x768xf32>
    %620 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %621 = stablehlo.multiply %620, %618 : tensor<64x512x768xf32>
    %cst_48 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %622 = stablehlo.reduce(%618 init: %cst_48) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %623 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %624 = stablehlo.divide %622, %623 : tensor<64x512xf32>
    %cst_49 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %625 = stablehlo.reduce(%619 init: %cst_49) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %626 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %627 = stablehlo.divide %625, %626 : tensor<64x512xf32>
    %628 = stablehlo.multiply %624, %624 : tensor<64x512xf32>
    %629 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %630 = stablehlo.multiply %629, %624 : tensor<64x512xf32>
    %631 = stablehlo.subtract %627, %628 : tensor<64x512xf32>
    %632 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %633 = stablehlo.maximum %632, %631 : tensor<64x512xf32>
    %634 = stablehlo.compare  EQ, %631, %633,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %635 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %636 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %637 = stablehlo.select %634, %635, %636 : tensor<64x512xi1>, tensor<64x512xf32>
    %638 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %639 = stablehlo.compare  EQ, %638, %633,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %640 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %641 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %642 = stablehlo.select %639, %640, %641 : tensor<64x512xi1>, tensor<64x512xf32>
    %643 = stablehlo.divide %637, %642 : tensor<64x512xf32>
    %644 = stablehlo.broadcast_in_dim %624, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %645 = stablehlo.broadcast_in_dim %633, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %646 = stablehlo.broadcast_in_dim %644, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %647 = stablehlo.subtract %618, %646 : tensor<64x512x768xf32>
    %648 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %649 = stablehlo.add %645, %648 : tensor<64x512x1xf32>
    %650 = stablehlo.rsqrt %649 : tensor<64x512x1xf32>
    %651 = stablehlo.divide %650, %649 : tensor<64x512x1xf32>
    %652 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %653 = stablehlo.multiply %652, %651 : tensor<64x512x1xf32>
    %654 = stablehlo.reshape %arg80 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %655 = stablehlo.broadcast_in_dim %650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %656 = stablehlo.broadcast_in_dim %654, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %657 = stablehlo.multiply %655, %656 : tensor<64x512x768xf32>
    %658 = stablehlo.multiply %647, %657 : tensor<64x512x768xf32>
    %659 = stablehlo.reshape %arg79 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %660 = stablehlo.broadcast_in_dim %659, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %661 = stablehlo.add %658, %660 : tensor<64x512x768xf32>
    %662 = stablehlo.reshape %arg86 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %663 = stablehlo.dot_general %661, %662, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %664 = stablehlo.reshape %arg85 : (tensor<768xf32>) -> tensor<12x64xf32>
    %665 = stablehlo.broadcast_in_dim %664, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %666 = stablehlo.broadcast_in_dim %665, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %667 = stablehlo.broadcast_in_dim %666, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %668 = stablehlo.add %663, %667 : tensor<64x512x12x64xf32>
    %669 = stablehlo.reshape %arg84 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %670 = stablehlo.dot_general %661, %669, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %671 = stablehlo.reshape %arg83 : (tensor<768xf32>) -> tensor<12x64xf32>
    %672 = stablehlo.broadcast_in_dim %671, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %673 = stablehlo.broadcast_in_dim %672, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %674 = stablehlo.broadcast_in_dim %673, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %675 = stablehlo.add %670, %674 : tensor<64x512x12x64xf32>
    %676 = stablehlo.reshape %arg88 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %677 = stablehlo.dot_general %661, %676, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %678 = stablehlo.reshape %arg87 : (tensor<768xf32>) -> tensor<12x64xf32>
    %679 = stablehlo.broadcast_in_dim %678, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %680 = stablehlo.broadcast_in_dim %679, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %681 = stablehlo.broadcast_in_dim %680, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %682 = stablehlo.add %677, %681 : tensor<64x512x12x64xf32>
    %683 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %684 = stablehlo.compare  GT, %82, %683,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %685 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %686 = stablehlo.convert %685 : tensor<64x1x512x512xf32>
    %687 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %688 = stablehlo.convert %687 : tensor<64x1x512x512xf32>
    %689 = stablehlo.select %684, %686, %688 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_50 = stablehlo.constant dense<1482862066> : tensor<ui32>
    %690 = call @_threefry_fold_in(%0, %c_50) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %691 = stablehlo.sqrt %cst_15 : tensor<f32>
    %692 = stablehlo.convert %691 : tensor<f32>
    %693 = stablehlo.broadcast_in_dim %692, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %694 = stablehlo.divide %668, %693 : tensor<64x512x12x64xf32>
    %695 = stablehlo.dot_general %694, %675, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %696 = stablehlo.broadcast_in_dim %689, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %697 = stablehlo.add %695, %696 : tensor<64x12x512x512xf32>
    %cst_51 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %698 = stablehlo.reduce(%697 init: %cst_51) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %699 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %700 = stablehlo.maximum %699, %698 : tensor<64x12x512xf32>
    %701 = stablehlo.broadcast_in_dim %700, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %702 = stablehlo.broadcast_in_dim %701, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %703 = stablehlo.subtract %697, %702 : tensor<64x12x512x512xf32>
    %704 = stablehlo.exponential %703 : tensor<64x12x512x512xf32>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %705 = stablehlo.reduce(%704 init: %cst_52) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %706 = stablehlo.broadcast_in_dim %705, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %707 = stablehlo.broadcast_in_dim %706, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %708 = stablehlo.divide %704, %707 : tensor<64x12x512x512xf32>
    %709 = stablehlo.multiply %706, %706 : tensor<64x12x512x1xf32>
    %cst_53 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %710 = stablehlo.broadcast_in_dim %cst_53, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %711 = stablehlo.divide %710, %709 : tensor<64x12x512x1xf32>
    %712 = call @_bernoulli_70(%690, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %713 = stablehlo.convert %712 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %714 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %715 = stablehlo.divide %713, %714 : tensor<64x12x512x512xf32>
    %716 = stablehlo.multiply %708, %715 : tensor<64x12x512x512xf32>
    %717 = stablehlo.dot_general %682, %716, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %718 = stablehlo.transpose %717, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %719 = stablehlo.reshape %arg90 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %720 = stablehlo.dot_general %718, %719, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %721 = stablehlo.broadcast_in_dim %arg89, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %722 = stablehlo.broadcast_in_dim %721, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %723 = stablehlo.broadcast_in_dim %722, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %724 = stablehlo.add %720, %723 : tensor<64x512x768xf32>
    %c_54 = stablehlo.constant dense<2121002933> : tensor<ui32>
    %725 = call @_threefry_fold_in(%0, %c_54) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %726 = call @_bernoulli(%725, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %727 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %728 = stablehlo.divide %724, %727 : tensor<64x512x768xf32>
    %729 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %730 = stablehlo.select %726, %728, %729 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %731 = stablehlo.add %730, %661 : tensor<64x512x768xf32>
    %732 = stablehlo.multiply %731, %731 : tensor<64x512x768xf32>
    %733 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %734 = stablehlo.multiply %733, %731 : tensor<64x512x768xf32>
    %cst_55 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %735 = stablehlo.reduce(%731 init: %cst_55) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %736 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %737 = stablehlo.divide %735, %736 : tensor<64x512xf32>
    %cst_56 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %738 = stablehlo.reduce(%732 init: %cst_56) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %739 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %740 = stablehlo.divide %738, %739 : tensor<64x512xf32>
    %741 = stablehlo.multiply %737, %737 : tensor<64x512xf32>
    %742 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %743 = stablehlo.multiply %742, %737 : tensor<64x512xf32>
    %744 = stablehlo.subtract %740, %741 : tensor<64x512xf32>
    %745 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %746 = stablehlo.maximum %745, %744 : tensor<64x512xf32>
    %747 = stablehlo.compare  EQ, %744, %746,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %748 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %749 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %750 = stablehlo.select %747, %748, %749 : tensor<64x512xi1>, tensor<64x512xf32>
    %751 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %752 = stablehlo.compare  EQ, %751, %746,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %753 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %754 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %755 = stablehlo.select %752, %753, %754 : tensor<64x512xi1>, tensor<64x512xf32>
    %756 = stablehlo.divide %750, %755 : tensor<64x512xf32>
    %757 = stablehlo.broadcast_in_dim %737, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %758 = stablehlo.broadcast_in_dim %746, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %759 = stablehlo.broadcast_in_dim %757, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %760 = stablehlo.subtract %731, %759 : tensor<64x512x768xf32>
    %761 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %762 = stablehlo.add %758, %761 : tensor<64x512x1xf32>
    %763 = stablehlo.rsqrt %762 : tensor<64x512x1xf32>
    %764 = stablehlo.divide %763, %762 : tensor<64x512x1xf32>
    %765 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %766 = stablehlo.multiply %765, %764 : tensor<64x512x1xf32>
    %767 = stablehlo.reshape %arg92 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %768 = stablehlo.broadcast_in_dim %763, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %769 = stablehlo.broadcast_in_dim %767, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %770 = stablehlo.multiply %768, %769 : tensor<64x512x768xf32>
    %771 = stablehlo.multiply %760, %770 : tensor<64x512x768xf32>
    %772 = stablehlo.reshape %arg91 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %773 = stablehlo.broadcast_in_dim %772, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %774 = stablehlo.add %771, %773 : tensor<64x512x768xf32>
    %775 = stablehlo.dot_general %774, %arg98, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %776 = stablehlo.broadcast_in_dim %arg97, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %777 = stablehlo.broadcast_in_dim %776, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %778 = stablehlo.broadcast_in_dim %777, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %779 = stablehlo.add %775, %778 : tensor<64x512x3072xf32>
    %780 = stablehlo.multiply %779, %779 : tensor<64x512x3072xf32>
    %781 = stablehlo.multiply %780, %779 : tensor<64x512x3072xf32>
    %782 = stablehlo.multiply %779, %779 : tensor<64x512x3072xf32>
    %783 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %784 = stablehlo.multiply %783, %782 : tensor<64x512x3072xf32>
    %785 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %786 = stablehlo.multiply %785, %781 : tensor<64x512x3072xf32>
    %787 = stablehlo.add %779, %786 : tensor<64x512x3072xf32>
    %788 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %789 = stablehlo.multiply %788, %787 : tensor<64x512x3072xf32>
    %790 = stablehlo.tanh %789 : tensor<64x512x3072xf32>
    %791 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %792 = stablehlo.broadcast_in_dim %791, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %793 = stablehlo.subtract %792, %790 : tensor<64x512x3072xf32>
    %794 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %795 = stablehlo.add %794, %790 : tensor<64x512x3072xf32>
    %796 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %797 = stablehlo.multiply %796, %795 : tensor<64x512x3072xf32>
    %798 = stablehlo.multiply %779, %797 : tensor<64x512x3072xf32>
    %799 = stablehlo.dot_general %798, %arg94, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %800 = stablehlo.broadcast_in_dim %arg93, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %801 = stablehlo.broadcast_in_dim %800, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %802 = stablehlo.broadcast_in_dim %801, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %803 = stablehlo.add %799, %802 : tensor<64x512x768xf32>
    %c_57 = stablehlo.constant dense<338706888> : tensor<ui32>
    %804 = call @_threefry_fold_in(%0, %c_57) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %805 = call @_bernoulli_111(%804, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %806 = stablehlo.broadcast_in_dim %805, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %807 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %808 = stablehlo.divide %803, %807 : tensor<64x512x768xf32>
    %809 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %810 = stablehlo.select %806, %808, %809 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %811 = stablehlo.add %810, %774 : tensor<64x512x768xf32>
    %812 = stablehlo.multiply %811, %811 : tensor<64x512x768xf32>
    %813 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %814 = stablehlo.multiply %813, %811 : tensor<64x512x768xf32>
    %cst_58 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %815 = stablehlo.reduce(%811 init: %cst_58) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %816 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %817 = stablehlo.divide %815, %816 : tensor<64x512xf32>
    %cst_59 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %818 = stablehlo.reduce(%812 init: %cst_59) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %819 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %820 = stablehlo.divide %818, %819 : tensor<64x512xf32>
    %821 = stablehlo.multiply %817, %817 : tensor<64x512xf32>
    %822 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %823 = stablehlo.multiply %822, %817 : tensor<64x512xf32>
    %824 = stablehlo.subtract %820, %821 : tensor<64x512xf32>
    %825 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %826 = stablehlo.maximum %825, %824 : tensor<64x512xf32>
    %827 = stablehlo.compare  EQ, %824, %826,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %828 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %829 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %830 = stablehlo.select %827, %828, %829 : tensor<64x512xi1>, tensor<64x512xf32>
    %831 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %832 = stablehlo.compare  EQ, %831, %826,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %833 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %834 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %835 = stablehlo.select %832, %833, %834 : tensor<64x512xi1>, tensor<64x512xf32>
    %836 = stablehlo.divide %830, %835 : tensor<64x512xf32>
    %837 = stablehlo.broadcast_in_dim %817, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %838 = stablehlo.broadcast_in_dim %826, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %839 = stablehlo.broadcast_in_dim %837, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %840 = stablehlo.subtract %811, %839 : tensor<64x512x768xf32>
    %841 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %842 = stablehlo.add %838, %841 : tensor<64x512x1xf32>
    %843 = stablehlo.rsqrt %842 : tensor<64x512x1xf32>
    %844 = stablehlo.divide %843, %842 : tensor<64x512x1xf32>
    %845 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %846 = stablehlo.multiply %845, %844 : tensor<64x512x1xf32>
    %847 = stablehlo.reshape %arg96 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %848 = stablehlo.broadcast_in_dim %843, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %849 = stablehlo.broadcast_in_dim %847, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %850 = stablehlo.multiply %848, %849 : tensor<64x512x768xf32>
    %851 = stablehlo.multiply %840, %850 : tensor<64x512x768xf32>
    %852 = stablehlo.reshape %arg95 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %853 = stablehlo.broadcast_in_dim %852, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %854 = stablehlo.add %851, %853 : tensor<64x512x768xf32>
    %855 = stablehlo.reshape %arg102 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %856 = stablehlo.dot_general %854, %855, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %857 = stablehlo.reshape %arg101 : (tensor<768xf32>) -> tensor<12x64xf32>
    %858 = stablehlo.broadcast_in_dim %857, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %859 = stablehlo.broadcast_in_dim %858, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %860 = stablehlo.broadcast_in_dim %859, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %861 = stablehlo.add %856, %860 : tensor<64x512x12x64xf32>
    %862 = stablehlo.reshape %arg100 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %863 = stablehlo.dot_general %854, %862, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %864 = stablehlo.reshape %arg99 : (tensor<768xf32>) -> tensor<12x64xf32>
    %865 = stablehlo.broadcast_in_dim %864, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %866 = stablehlo.broadcast_in_dim %865, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %867 = stablehlo.broadcast_in_dim %866, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %868 = stablehlo.add %863, %867 : tensor<64x512x12x64xf32>
    %869 = stablehlo.reshape %arg104 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %870 = stablehlo.dot_general %854, %869, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %871 = stablehlo.reshape %arg103 : (tensor<768xf32>) -> tensor<12x64xf32>
    %872 = stablehlo.broadcast_in_dim %871, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %873 = stablehlo.broadcast_in_dim %872, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %874 = stablehlo.broadcast_in_dim %873, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %875 = stablehlo.add %870, %874 : tensor<64x512x12x64xf32>
    %876 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %877 = stablehlo.compare  GT, %82, %876,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %878 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %879 = stablehlo.convert %878 : tensor<64x1x512x512xf32>
    %880 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %881 = stablehlo.convert %880 : tensor<64x1x512x512xf32>
    %882 = stablehlo.select %877, %879, %881 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_60 = stablehlo.constant dense<1369119635> : tensor<ui32>
    %883 = call @_threefry_fold_in(%0, %c_60) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %884 = stablehlo.sqrt %cst_15 : tensor<f32>
    %885 = stablehlo.convert %884 : tensor<f32>
    %886 = stablehlo.broadcast_in_dim %885, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %887 = stablehlo.divide %861, %886 : tensor<64x512x12x64xf32>
    %888 = stablehlo.dot_general %887, %868, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %889 = stablehlo.broadcast_in_dim %882, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %890 = stablehlo.add %888, %889 : tensor<64x12x512x512xf32>
    %cst_61 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %891 = stablehlo.reduce(%890 init: %cst_61) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %892 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %893 = stablehlo.maximum %892, %891 : tensor<64x12x512xf32>
    %894 = stablehlo.broadcast_in_dim %893, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %895 = stablehlo.broadcast_in_dim %894, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %896 = stablehlo.subtract %890, %895 : tensor<64x12x512x512xf32>
    %897 = stablehlo.exponential %896 : tensor<64x12x512x512xf32>
    %cst_62 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %898 = stablehlo.reduce(%897 init: %cst_62) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %899 = stablehlo.broadcast_in_dim %898, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %900 = stablehlo.broadcast_in_dim %899, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %901 = stablehlo.divide %897, %900 : tensor<64x12x512x512xf32>
    %902 = stablehlo.multiply %899, %899 : tensor<64x12x512x1xf32>
    %cst_63 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %903 = stablehlo.broadcast_in_dim %cst_63, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %904 = stablehlo.divide %903, %902 : tensor<64x12x512x1xf32>
    %905 = call @_bernoulli_70(%883, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %906 = stablehlo.convert %905 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %907 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %908 = stablehlo.divide %906, %907 : tensor<64x12x512x512xf32>
    %909 = stablehlo.multiply %901, %908 : tensor<64x12x512x512xf32>
    %910 = stablehlo.dot_general %875, %909, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %911 = stablehlo.transpose %910, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %912 = stablehlo.reshape %arg106 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %913 = stablehlo.dot_general %911, %912, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %914 = stablehlo.broadcast_in_dim %arg105, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %915 = stablehlo.broadcast_in_dim %914, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %916 = stablehlo.broadcast_in_dim %915, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %917 = stablehlo.add %913, %916 : tensor<64x512x768xf32>
    %c_64 = stablehlo.constant dense<2886391657> : tensor<ui32>
    %918 = call @_threefry_fold_in(%0, %c_64) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %919 = call @_bernoulli(%918, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %920 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %921 = stablehlo.divide %917, %920 : tensor<64x512x768xf32>
    %922 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %923 = stablehlo.select %919, %921, %922 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %924 = stablehlo.add %923, %854 : tensor<64x512x768xf32>
    %925 = stablehlo.multiply %924, %924 : tensor<64x512x768xf32>
    %926 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %927 = stablehlo.multiply %926, %924 : tensor<64x512x768xf32>
    %cst_65 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %928 = stablehlo.reduce(%924 init: %cst_65) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %929 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %930 = stablehlo.divide %928, %929 : tensor<64x512xf32>
    %cst_66 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %931 = stablehlo.reduce(%925 init: %cst_66) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %932 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %933 = stablehlo.divide %931, %932 : tensor<64x512xf32>
    %934 = stablehlo.multiply %930, %930 : tensor<64x512xf32>
    %935 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %936 = stablehlo.multiply %935, %930 : tensor<64x512xf32>
    %937 = stablehlo.subtract %933, %934 : tensor<64x512xf32>
    %938 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %939 = stablehlo.maximum %938, %937 : tensor<64x512xf32>
    %940 = stablehlo.compare  EQ, %937, %939,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %941 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %942 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %943 = stablehlo.select %940, %941, %942 : tensor<64x512xi1>, tensor<64x512xf32>
    %944 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %945 = stablehlo.compare  EQ, %944, %939,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %946 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %947 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %948 = stablehlo.select %945, %946, %947 : tensor<64x512xi1>, tensor<64x512xf32>
    %949 = stablehlo.divide %943, %948 : tensor<64x512xf32>
    %950 = stablehlo.broadcast_in_dim %930, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %951 = stablehlo.broadcast_in_dim %939, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %952 = stablehlo.broadcast_in_dim %950, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %953 = stablehlo.subtract %924, %952 : tensor<64x512x768xf32>
    %954 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %955 = stablehlo.add %951, %954 : tensor<64x512x1xf32>
    %956 = stablehlo.rsqrt %955 : tensor<64x512x1xf32>
    %957 = stablehlo.divide %956, %955 : tensor<64x512x1xf32>
    %958 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %959 = stablehlo.multiply %958, %957 : tensor<64x512x1xf32>
    %960 = stablehlo.reshape %arg108 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %961 = stablehlo.broadcast_in_dim %956, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %962 = stablehlo.broadcast_in_dim %960, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %963 = stablehlo.multiply %961, %962 : tensor<64x512x768xf32>
    %964 = stablehlo.multiply %953, %963 : tensor<64x512x768xf32>
    %965 = stablehlo.reshape %arg107 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %966 = stablehlo.broadcast_in_dim %965, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %967 = stablehlo.add %964, %966 : tensor<64x512x768xf32>
    %968 = stablehlo.dot_general %967, %arg114, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %969 = stablehlo.broadcast_in_dim %arg113, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %970 = stablehlo.broadcast_in_dim %969, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %971 = stablehlo.broadcast_in_dim %970, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %972 = stablehlo.add %968, %971 : tensor<64x512x3072xf32>
    %973 = stablehlo.multiply %972, %972 : tensor<64x512x3072xf32>
    %974 = stablehlo.multiply %973, %972 : tensor<64x512x3072xf32>
    %975 = stablehlo.multiply %972, %972 : tensor<64x512x3072xf32>
    %976 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %977 = stablehlo.multiply %976, %975 : tensor<64x512x3072xf32>
    %978 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %979 = stablehlo.multiply %978, %974 : tensor<64x512x3072xf32>
    %980 = stablehlo.add %972, %979 : tensor<64x512x3072xf32>
    %981 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %982 = stablehlo.multiply %981, %980 : tensor<64x512x3072xf32>
    %983 = stablehlo.tanh %982 : tensor<64x512x3072xf32>
    %984 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %985 = stablehlo.broadcast_in_dim %984, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %986 = stablehlo.subtract %985, %983 : tensor<64x512x3072xf32>
    %987 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %988 = stablehlo.add %987, %983 : tensor<64x512x3072xf32>
    %989 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %990 = stablehlo.multiply %989, %988 : tensor<64x512x3072xf32>
    %991 = stablehlo.multiply %972, %990 : tensor<64x512x3072xf32>
    %992 = stablehlo.dot_general %991, %arg110, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %993 = stablehlo.broadcast_in_dim %arg109, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %994 = stablehlo.broadcast_in_dim %993, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %995 = stablehlo.broadcast_in_dim %994, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %996 = stablehlo.add %992, %995 : tensor<64x512x768xf32>
    %c_67 = stablehlo.constant dense<2209904577> : tensor<ui32>
    %997 = call @_threefry_fold_in(%0, %c_67) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %998 = call @_bernoulli_111(%997, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %999 = stablehlo.broadcast_in_dim %998, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1000 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1001 = stablehlo.divide %996, %1000 : tensor<64x512x768xf32>
    %1002 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1003 = stablehlo.select %999, %1001, %1002 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1004 = stablehlo.add %1003, %967 : tensor<64x512x768xf32>
    %1005 = stablehlo.multiply %1004, %1004 : tensor<64x512x768xf32>
    %1006 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1007 = stablehlo.multiply %1006, %1004 : tensor<64x512x768xf32>
    %cst_68 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1008 = stablehlo.reduce(%1004 init: %cst_68) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1009 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1010 = stablehlo.divide %1008, %1009 : tensor<64x512xf32>
    %cst_69 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1011 = stablehlo.reduce(%1005 init: %cst_69) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1012 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1013 = stablehlo.divide %1011, %1012 : tensor<64x512xf32>
    %1014 = stablehlo.multiply %1010, %1010 : tensor<64x512xf32>
    %1015 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1016 = stablehlo.multiply %1015, %1010 : tensor<64x512xf32>
    %1017 = stablehlo.subtract %1013, %1014 : tensor<64x512xf32>
    %1018 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1019 = stablehlo.maximum %1018, %1017 : tensor<64x512xf32>
    %1020 = stablehlo.compare  EQ, %1017, %1019,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1021 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1022 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1023 = stablehlo.select %1020, %1021, %1022 : tensor<64x512xi1>, tensor<64x512xf32>
    %1024 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1025 = stablehlo.compare  EQ, %1024, %1019,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1026 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1027 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1028 = stablehlo.select %1025, %1026, %1027 : tensor<64x512xi1>, tensor<64x512xf32>
    %1029 = stablehlo.divide %1023, %1028 : tensor<64x512xf32>
    %1030 = stablehlo.broadcast_in_dim %1010, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1031 = stablehlo.broadcast_in_dim %1019, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1032 = stablehlo.broadcast_in_dim %1030, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1033 = stablehlo.subtract %1004, %1032 : tensor<64x512x768xf32>
    %1034 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1035 = stablehlo.add %1031, %1034 : tensor<64x512x1xf32>
    %1036 = stablehlo.rsqrt %1035 : tensor<64x512x1xf32>
    %1037 = stablehlo.divide %1036, %1035 : tensor<64x512x1xf32>
    %1038 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1039 = stablehlo.multiply %1038, %1037 : tensor<64x512x1xf32>
    %1040 = stablehlo.reshape %arg112 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1041 = stablehlo.broadcast_in_dim %1036, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1042 = stablehlo.broadcast_in_dim %1040, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1043 = stablehlo.multiply %1041, %1042 : tensor<64x512x768xf32>
    %1044 = stablehlo.multiply %1033, %1043 : tensor<64x512x768xf32>
    %1045 = stablehlo.reshape %arg111 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1046 = stablehlo.broadcast_in_dim %1045, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1047 = stablehlo.add %1044, %1046 : tensor<64x512x768xf32>
    %1048 = stablehlo.reshape %arg118 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1049 = stablehlo.dot_general %1047, %1048, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1050 = stablehlo.reshape %arg117 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1051 = stablehlo.broadcast_in_dim %1050, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1052 = stablehlo.broadcast_in_dim %1051, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1053 = stablehlo.broadcast_in_dim %1052, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1054 = stablehlo.add %1049, %1053 : tensor<64x512x12x64xf32>
    %1055 = stablehlo.reshape %arg116 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1056 = stablehlo.dot_general %1047, %1055, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1057 = stablehlo.reshape %arg115 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1058 = stablehlo.broadcast_in_dim %1057, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1059 = stablehlo.broadcast_in_dim %1058, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1060 = stablehlo.broadcast_in_dim %1059, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1061 = stablehlo.add %1056, %1060 : tensor<64x512x12x64xf32>
    %1062 = stablehlo.reshape %arg120 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1063 = stablehlo.dot_general %1047, %1062, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1064 = stablehlo.reshape %arg119 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1065 = stablehlo.broadcast_in_dim %1064, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1066 = stablehlo.broadcast_in_dim %1065, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1067 = stablehlo.broadcast_in_dim %1066, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1068 = stablehlo.add %1063, %1067 : tensor<64x512x12x64xf32>
    %1069 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1070 = stablehlo.compare  GT, %82, %1069,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1071 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1072 = stablehlo.convert %1071 : tensor<64x1x512x512xf32>
    %1073 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1074 = stablehlo.convert %1073 : tensor<64x1x512x512xf32>
    %1075 = stablehlo.select %1070, %1072, %1074 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_70 = stablehlo.constant dense<3175365094> : tensor<ui32>
    %1076 = call @_threefry_fold_in(%0, %c_70) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1077 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1078 = stablehlo.convert %1077 : tensor<f32>
    %1079 = stablehlo.broadcast_in_dim %1078, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1080 = stablehlo.divide %1054, %1079 : tensor<64x512x12x64xf32>
    %1081 = stablehlo.dot_general %1080, %1061, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1082 = stablehlo.broadcast_in_dim %1075, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1083 = stablehlo.add %1081, %1082 : tensor<64x12x512x512xf32>
    %cst_71 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1084 = stablehlo.reduce(%1083 init: %cst_71) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1085 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1086 = stablehlo.maximum %1085, %1084 : tensor<64x12x512xf32>
    %1087 = stablehlo.broadcast_in_dim %1086, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1088 = stablehlo.broadcast_in_dim %1087, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1089 = stablehlo.subtract %1083, %1088 : tensor<64x12x512x512xf32>
    %1090 = stablehlo.exponential %1089 : tensor<64x12x512x512xf32>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1091 = stablehlo.reduce(%1090 init: %cst_72) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1092 = stablehlo.broadcast_in_dim %1091, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1093 = stablehlo.broadcast_in_dim %1092, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1094 = stablehlo.divide %1090, %1093 : tensor<64x12x512x512xf32>
    %1095 = stablehlo.multiply %1092, %1092 : tensor<64x12x512x1xf32>
    %cst_73 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1096 = stablehlo.broadcast_in_dim %cst_73, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1097 = stablehlo.divide %1096, %1095 : tensor<64x12x512x1xf32>
    %1098 = call @_bernoulli_70(%1076, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1099 = stablehlo.convert %1098 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1100 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1101 = stablehlo.divide %1099, %1100 : tensor<64x12x512x512xf32>
    %1102 = stablehlo.multiply %1094, %1101 : tensor<64x12x512x512xf32>
    %1103 = stablehlo.dot_general %1068, %1102, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1104 = stablehlo.transpose %1103, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1105 = stablehlo.reshape %arg122 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1106 = stablehlo.dot_general %1104, %1105, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1107 = stablehlo.broadcast_in_dim %arg121, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1108 = stablehlo.broadcast_in_dim %1107, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1109 = stablehlo.broadcast_in_dim %1108, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1110 = stablehlo.add %1106, %1109 : tensor<64x512x768xf32>
    %c_74 = stablehlo.constant dense<1700675584> : tensor<ui32>
    %1111 = call @_threefry_fold_in(%0, %c_74) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1112 = call @_bernoulli(%1111, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1113 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1114 = stablehlo.divide %1110, %1113 : tensor<64x512x768xf32>
    %1115 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1116 = stablehlo.select %1112, %1114, %1115 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1117 = stablehlo.add %1116, %1047 : tensor<64x512x768xf32>
    %1118 = stablehlo.multiply %1117, %1117 : tensor<64x512x768xf32>
    %1119 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1120 = stablehlo.multiply %1119, %1117 : tensor<64x512x768xf32>
    %cst_75 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1121 = stablehlo.reduce(%1117 init: %cst_75) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1122 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1123 = stablehlo.divide %1121, %1122 : tensor<64x512xf32>
    %cst_76 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1124 = stablehlo.reduce(%1118 init: %cst_76) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1125 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1126 = stablehlo.divide %1124, %1125 : tensor<64x512xf32>
    %1127 = stablehlo.multiply %1123, %1123 : tensor<64x512xf32>
    %1128 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1129 = stablehlo.multiply %1128, %1123 : tensor<64x512xf32>
    %1130 = stablehlo.subtract %1126, %1127 : tensor<64x512xf32>
    %1131 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1132 = stablehlo.maximum %1131, %1130 : tensor<64x512xf32>
    %1133 = stablehlo.compare  EQ, %1130, %1132,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1134 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1135 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1136 = stablehlo.select %1133, %1134, %1135 : tensor<64x512xi1>, tensor<64x512xf32>
    %1137 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1138 = stablehlo.compare  EQ, %1137, %1132,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1139 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1140 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1141 = stablehlo.select %1138, %1139, %1140 : tensor<64x512xi1>, tensor<64x512xf32>
    %1142 = stablehlo.divide %1136, %1141 : tensor<64x512xf32>
    %1143 = stablehlo.broadcast_in_dim %1123, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1144 = stablehlo.broadcast_in_dim %1132, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1145 = stablehlo.broadcast_in_dim %1143, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1146 = stablehlo.subtract %1117, %1145 : tensor<64x512x768xf32>
    %1147 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1148 = stablehlo.add %1144, %1147 : tensor<64x512x1xf32>
    %1149 = stablehlo.rsqrt %1148 : tensor<64x512x1xf32>
    %1150 = stablehlo.divide %1149, %1148 : tensor<64x512x1xf32>
    %1151 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1152 = stablehlo.multiply %1151, %1150 : tensor<64x512x1xf32>
    %1153 = stablehlo.reshape %arg124 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1154 = stablehlo.broadcast_in_dim %1149, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1155 = stablehlo.broadcast_in_dim %1153, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1156 = stablehlo.multiply %1154, %1155 : tensor<64x512x768xf32>
    %1157 = stablehlo.multiply %1146, %1156 : tensor<64x512x768xf32>
    %1158 = stablehlo.reshape %arg123 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1159 = stablehlo.broadcast_in_dim %1158, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1160 = stablehlo.add %1157, %1159 : tensor<64x512x768xf32>
    %1161 = stablehlo.dot_general %1160, %arg130, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1162 = stablehlo.broadcast_in_dim %arg129, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1163 = stablehlo.broadcast_in_dim %1162, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1164 = stablehlo.broadcast_in_dim %1163, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1165 = stablehlo.add %1161, %1164 : tensor<64x512x3072xf32>
    %1166 = stablehlo.multiply %1165, %1165 : tensor<64x512x3072xf32>
    %1167 = stablehlo.multiply %1166, %1165 : tensor<64x512x3072xf32>
    %1168 = stablehlo.multiply %1165, %1165 : tensor<64x512x3072xf32>
    %1169 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1170 = stablehlo.multiply %1169, %1168 : tensor<64x512x3072xf32>
    %1171 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1172 = stablehlo.multiply %1171, %1167 : tensor<64x512x3072xf32>
    %1173 = stablehlo.add %1165, %1172 : tensor<64x512x3072xf32>
    %1174 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1175 = stablehlo.multiply %1174, %1173 : tensor<64x512x3072xf32>
    %1176 = stablehlo.tanh %1175 : tensor<64x512x3072xf32>
    %1177 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1178 = stablehlo.broadcast_in_dim %1177, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1179 = stablehlo.subtract %1178, %1176 : tensor<64x512x3072xf32>
    %1180 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1181 = stablehlo.add %1180, %1176 : tensor<64x512x3072xf32>
    %1182 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1183 = stablehlo.multiply %1182, %1181 : tensor<64x512x3072xf32>
    %1184 = stablehlo.multiply %1165, %1183 : tensor<64x512x3072xf32>
    %1185 = stablehlo.dot_general %1184, %arg126, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1186 = stablehlo.broadcast_in_dim %arg125, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1187 = stablehlo.broadcast_in_dim %1186, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1188 = stablehlo.broadcast_in_dim %1187, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1189 = stablehlo.add %1185, %1188 : tensor<64x512x768xf32>
    %c_77 = stablehlo.constant dense<1886289568> : tensor<ui32>
    %1190 = call @_threefry_fold_in(%0, %c_77) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1191 = call @_bernoulli_111(%1190, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1192 = stablehlo.broadcast_in_dim %1191, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1193 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1194 = stablehlo.divide %1189, %1193 : tensor<64x512x768xf32>
    %1195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1196 = stablehlo.select %1192, %1194, %1195 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1197 = stablehlo.add %1196, %1160 : tensor<64x512x768xf32>
    %1198 = stablehlo.multiply %1197, %1197 : tensor<64x512x768xf32>
    %1199 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1200 = stablehlo.multiply %1199, %1197 : tensor<64x512x768xf32>
    %cst_78 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1201 = stablehlo.reduce(%1197 init: %cst_78) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1202 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1203 = stablehlo.divide %1201, %1202 : tensor<64x512xf32>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1204 = stablehlo.reduce(%1198 init: %cst_79) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1205 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1206 = stablehlo.divide %1204, %1205 : tensor<64x512xf32>
    %1207 = stablehlo.multiply %1203, %1203 : tensor<64x512xf32>
    %1208 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1209 = stablehlo.multiply %1208, %1203 : tensor<64x512xf32>
    %1210 = stablehlo.subtract %1206, %1207 : tensor<64x512xf32>
    %1211 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1212 = stablehlo.maximum %1211, %1210 : tensor<64x512xf32>
    %1213 = stablehlo.compare  EQ, %1210, %1212,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1214 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1215 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1216 = stablehlo.select %1213, %1214, %1215 : tensor<64x512xi1>, tensor<64x512xf32>
    %1217 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1218 = stablehlo.compare  EQ, %1217, %1212,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1219 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1220 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1221 = stablehlo.select %1218, %1219, %1220 : tensor<64x512xi1>, tensor<64x512xf32>
    %1222 = stablehlo.divide %1216, %1221 : tensor<64x512xf32>
    %1223 = stablehlo.broadcast_in_dim %1203, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1224 = stablehlo.broadcast_in_dim %1212, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1225 = stablehlo.broadcast_in_dim %1223, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1226 = stablehlo.subtract %1197, %1225 : tensor<64x512x768xf32>
    %1227 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1228 = stablehlo.add %1224, %1227 : tensor<64x512x1xf32>
    %1229 = stablehlo.rsqrt %1228 : tensor<64x512x1xf32>
    %1230 = stablehlo.divide %1229, %1228 : tensor<64x512x1xf32>
    %1231 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1232 = stablehlo.multiply %1231, %1230 : tensor<64x512x1xf32>
    %1233 = stablehlo.reshape %arg128 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1234 = stablehlo.broadcast_in_dim %1229, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1235 = stablehlo.broadcast_in_dim %1233, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1236 = stablehlo.multiply %1234, %1235 : tensor<64x512x768xf32>
    %1237 = stablehlo.multiply %1226, %1236 : tensor<64x512x768xf32>
    %1238 = stablehlo.reshape %arg127 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1239 = stablehlo.broadcast_in_dim %1238, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1240 = stablehlo.add %1237, %1239 : tensor<64x512x768xf32>
    %1241 = stablehlo.reshape %arg134 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1242 = stablehlo.dot_general %1240, %1241, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1243 = stablehlo.reshape %arg133 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1244 = stablehlo.broadcast_in_dim %1243, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1245 = stablehlo.broadcast_in_dim %1244, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1246 = stablehlo.broadcast_in_dim %1245, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1247 = stablehlo.add %1242, %1246 : tensor<64x512x12x64xf32>
    %1248 = stablehlo.reshape %arg132 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1249 = stablehlo.dot_general %1240, %1248, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1250 = stablehlo.reshape %arg131 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1251 = stablehlo.broadcast_in_dim %1250, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1252 = stablehlo.broadcast_in_dim %1251, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1253 = stablehlo.broadcast_in_dim %1252, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1254 = stablehlo.add %1249, %1253 : tensor<64x512x12x64xf32>
    %1255 = stablehlo.reshape %arg136 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1256 = stablehlo.dot_general %1240, %1255, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1257 = stablehlo.reshape %arg135 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1258 = stablehlo.broadcast_in_dim %1257, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1259 = stablehlo.broadcast_in_dim %1258, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1260 = stablehlo.broadcast_in_dim %1259, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1261 = stablehlo.add %1256, %1260 : tensor<64x512x12x64xf32>
    %1262 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1263 = stablehlo.compare  GT, %82, %1262,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1264 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1265 = stablehlo.convert %1264 : tensor<64x1x512x512xf32>
    %1266 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1267 = stablehlo.convert %1266 : tensor<64x1x512x512xf32>
    %1268 = stablehlo.select %1263, %1265, %1267 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_80 = stablehlo.constant dense<837809314> : tensor<ui32>
    %1269 = call @_threefry_fold_in(%0, %c_80) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1270 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1271 = stablehlo.convert %1270 : tensor<f32>
    %1272 = stablehlo.broadcast_in_dim %1271, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1273 = stablehlo.divide %1247, %1272 : tensor<64x512x12x64xf32>
    %1274 = stablehlo.dot_general %1273, %1254, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1275 = stablehlo.broadcast_in_dim %1268, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1276 = stablehlo.add %1274, %1275 : tensor<64x12x512x512xf32>
    %cst_81 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1277 = stablehlo.reduce(%1276 init: %cst_81) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1278 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1279 = stablehlo.maximum %1278, %1277 : tensor<64x12x512xf32>
    %1280 = stablehlo.broadcast_in_dim %1279, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1281 = stablehlo.broadcast_in_dim %1280, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1282 = stablehlo.subtract %1276, %1281 : tensor<64x12x512x512xf32>
    %1283 = stablehlo.exponential %1282 : tensor<64x12x512x512xf32>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1284 = stablehlo.reduce(%1283 init: %cst_82) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1285 = stablehlo.broadcast_in_dim %1284, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1286 = stablehlo.broadcast_in_dim %1285, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1287 = stablehlo.divide %1283, %1286 : tensor<64x12x512x512xf32>
    %1288 = stablehlo.multiply %1285, %1285 : tensor<64x12x512x1xf32>
    %cst_83 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1289 = stablehlo.broadcast_in_dim %cst_83, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1290 = stablehlo.divide %1289, %1288 : tensor<64x12x512x1xf32>
    %1291 = call @_bernoulli_70(%1269, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1292 = stablehlo.convert %1291 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1293 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1294 = stablehlo.divide %1292, %1293 : tensor<64x12x512x512xf32>
    %1295 = stablehlo.multiply %1287, %1294 : tensor<64x12x512x512xf32>
    %1296 = stablehlo.dot_general %1261, %1295, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1297 = stablehlo.transpose %1296, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1298 = stablehlo.reshape %arg138 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1299 = stablehlo.dot_general %1297, %1298, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1300 = stablehlo.broadcast_in_dim %arg137, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1301 = stablehlo.broadcast_in_dim %1300, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1302 = stablehlo.broadcast_in_dim %1301, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1303 = stablehlo.add %1299, %1302 : tensor<64x512x768xf32>
    %c_84 = stablehlo.constant dense<3738706114> : tensor<ui32>
    %1304 = call @_threefry_fold_in(%0, %c_84) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1305 = call @_bernoulli(%1304, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1306 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1307 = stablehlo.divide %1303, %1306 : tensor<64x512x768xf32>
    %1308 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1309 = stablehlo.select %1305, %1307, %1308 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1310 = stablehlo.add %1309, %1240 : tensor<64x512x768xf32>
    %1311 = stablehlo.multiply %1310, %1310 : tensor<64x512x768xf32>
    %1312 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1313 = stablehlo.multiply %1312, %1310 : tensor<64x512x768xf32>
    %cst_85 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1314 = stablehlo.reduce(%1310 init: %cst_85) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1315 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1316 = stablehlo.divide %1314, %1315 : tensor<64x512xf32>
    %cst_86 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1317 = stablehlo.reduce(%1311 init: %cst_86) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1318 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1319 = stablehlo.divide %1317, %1318 : tensor<64x512xf32>
    %1320 = stablehlo.multiply %1316, %1316 : tensor<64x512xf32>
    %1321 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1322 = stablehlo.multiply %1321, %1316 : tensor<64x512xf32>
    %1323 = stablehlo.subtract %1319, %1320 : tensor<64x512xf32>
    %1324 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1325 = stablehlo.maximum %1324, %1323 : tensor<64x512xf32>
    %1326 = stablehlo.compare  EQ, %1323, %1325,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1327 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1328 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1329 = stablehlo.select %1326, %1327, %1328 : tensor<64x512xi1>, tensor<64x512xf32>
    %1330 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1331 = stablehlo.compare  EQ, %1330, %1325,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1332 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1333 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1334 = stablehlo.select %1331, %1332, %1333 : tensor<64x512xi1>, tensor<64x512xf32>
    %1335 = stablehlo.divide %1329, %1334 : tensor<64x512xf32>
    %1336 = stablehlo.broadcast_in_dim %1316, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1337 = stablehlo.broadcast_in_dim %1325, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1338 = stablehlo.broadcast_in_dim %1336, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1339 = stablehlo.subtract %1310, %1338 : tensor<64x512x768xf32>
    %1340 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1341 = stablehlo.add %1337, %1340 : tensor<64x512x1xf32>
    %1342 = stablehlo.rsqrt %1341 : tensor<64x512x1xf32>
    %1343 = stablehlo.divide %1342, %1341 : tensor<64x512x1xf32>
    %1344 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1345 = stablehlo.multiply %1344, %1343 : tensor<64x512x1xf32>
    %1346 = stablehlo.reshape %arg140 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1347 = stablehlo.broadcast_in_dim %1342, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1348 = stablehlo.broadcast_in_dim %1346, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1349 = stablehlo.multiply %1347, %1348 : tensor<64x512x768xf32>
    %1350 = stablehlo.multiply %1339, %1349 : tensor<64x512x768xf32>
    %1351 = stablehlo.reshape %arg139 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1352 = stablehlo.broadcast_in_dim %1351, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1353 = stablehlo.add %1350, %1352 : tensor<64x512x768xf32>
    %1354 = stablehlo.dot_general %1353, %arg146, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1355 = stablehlo.broadcast_in_dim %arg145, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1356 = stablehlo.broadcast_in_dim %1355, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1357 = stablehlo.broadcast_in_dim %1356, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1358 = stablehlo.add %1354, %1357 : tensor<64x512x3072xf32>
    %1359 = stablehlo.multiply %1358, %1358 : tensor<64x512x3072xf32>
    %1360 = stablehlo.multiply %1359, %1358 : tensor<64x512x3072xf32>
    %1361 = stablehlo.multiply %1358, %1358 : tensor<64x512x3072xf32>
    %1362 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1363 = stablehlo.multiply %1362, %1361 : tensor<64x512x3072xf32>
    %1364 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1365 = stablehlo.multiply %1364, %1360 : tensor<64x512x3072xf32>
    %1366 = stablehlo.add %1358, %1365 : tensor<64x512x3072xf32>
    %1367 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1368 = stablehlo.multiply %1367, %1366 : tensor<64x512x3072xf32>
    %1369 = stablehlo.tanh %1368 : tensor<64x512x3072xf32>
    %1370 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1371 = stablehlo.broadcast_in_dim %1370, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1372 = stablehlo.subtract %1371, %1369 : tensor<64x512x3072xf32>
    %1373 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1374 = stablehlo.add %1373, %1369 : tensor<64x512x3072xf32>
    %1375 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1376 = stablehlo.multiply %1375, %1374 : tensor<64x512x3072xf32>
    %1377 = stablehlo.multiply %1358, %1376 : tensor<64x512x3072xf32>
    %1378 = stablehlo.dot_general %1377, %arg142, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1379 = stablehlo.broadcast_in_dim %arg141, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1380 = stablehlo.broadcast_in_dim %1379, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1381 = stablehlo.broadcast_in_dim %1380, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1382 = stablehlo.add %1378, %1381 : tensor<64x512x768xf32>
    %c_87 = stablehlo.constant dense<114600768> : tensor<ui32>
    %1383 = call @_threefry_fold_in(%0, %c_87) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1384 = call @_bernoulli_111(%1383, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1385 = stablehlo.broadcast_in_dim %1384, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1386 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1387 = stablehlo.divide %1382, %1386 : tensor<64x512x768xf32>
    %1388 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1389 = stablehlo.select %1385, %1387, %1388 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1390 = stablehlo.add %1389, %1353 : tensor<64x512x768xf32>
    %1391 = stablehlo.multiply %1390, %1390 : tensor<64x512x768xf32>
    %1392 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1393 = stablehlo.multiply %1392, %1390 : tensor<64x512x768xf32>
    %cst_88 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1394 = stablehlo.reduce(%1390 init: %cst_88) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1395 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1396 = stablehlo.divide %1394, %1395 : tensor<64x512xf32>
    %cst_89 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1397 = stablehlo.reduce(%1391 init: %cst_89) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1398 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1399 = stablehlo.divide %1397, %1398 : tensor<64x512xf32>
    %1400 = stablehlo.multiply %1396, %1396 : tensor<64x512xf32>
    %1401 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1402 = stablehlo.multiply %1401, %1396 : tensor<64x512xf32>
    %1403 = stablehlo.subtract %1399, %1400 : tensor<64x512xf32>
    %1404 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1405 = stablehlo.maximum %1404, %1403 : tensor<64x512xf32>
    %1406 = stablehlo.compare  EQ, %1403, %1405,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1407 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1408 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1409 = stablehlo.select %1406, %1407, %1408 : tensor<64x512xi1>, tensor<64x512xf32>
    %1410 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1411 = stablehlo.compare  EQ, %1410, %1405,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1412 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1413 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1414 = stablehlo.select %1411, %1412, %1413 : tensor<64x512xi1>, tensor<64x512xf32>
    %1415 = stablehlo.divide %1409, %1414 : tensor<64x512xf32>
    %1416 = stablehlo.broadcast_in_dim %1396, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1417 = stablehlo.broadcast_in_dim %1405, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1418 = stablehlo.broadcast_in_dim %1416, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1419 = stablehlo.subtract %1390, %1418 : tensor<64x512x768xf32>
    %1420 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1421 = stablehlo.add %1417, %1420 : tensor<64x512x1xf32>
    %1422 = stablehlo.rsqrt %1421 : tensor<64x512x1xf32>
    %1423 = stablehlo.divide %1422, %1421 : tensor<64x512x1xf32>
    %1424 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1425 = stablehlo.multiply %1424, %1423 : tensor<64x512x1xf32>
    %1426 = stablehlo.reshape %arg144 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1427 = stablehlo.broadcast_in_dim %1422, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1428 = stablehlo.broadcast_in_dim %1426, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1429 = stablehlo.multiply %1427, %1428 : tensor<64x512x768xf32>
    %1430 = stablehlo.multiply %1419, %1429 : tensor<64x512x768xf32>
    %1431 = stablehlo.reshape %arg143 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1432 = stablehlo.broadcast_in_dim %1431, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1433 = stablehlo.add %1430, %1432 : tensor<64x512x768xf32>
    %1434 = stablehlo.reshape %arg150 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1435 = stablehlo.dot_general %1433, %1434, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1436 = stablehlo.reshape %arg149 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1437 = stablehlo.broadcast_in_dim %1436, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1438 = stablehlo.broadcast_in_dim %1437, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1439 = stablehlo.broadcast_in_dim %1438, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1440 = stablehlo.add %1435, %1439 : tensor<64x512x12x64xf32>
    %1441 = stablehlo.reshape %arg148 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1442 = stablehlo.dot_general %1433, %1441, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1443 = stablehlo.reshape %arg147 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1444 = stablehlo.broadcast_in_dim %1443, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1445 = stablehlo.broadcast_in_dim %1444, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1446 = stablehlo.broadcast_in_dim %1445, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1447 = stablehlo.add %1442, %1446 : tensor<64x512x12x64xf32>
    %1448 = stablehlo.reshape %arg152 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1449 = stablehlo.dot_general %1433, %1448, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1450 = stablehlo.reshape %arg151 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1451 = stablehlo.broadcast_in_dim %1450, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1452 = stablehlo.broadcast_in_dim %1451, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1453 = stablehlo.broadcast_in_dim %1452, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1454 = stablehlo.add %1449, %1453 : tensor<64x512x12x64xf32>
    %1455 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1456 = stablehlo.compare  GT, %82, %1455,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1457 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1458 = stablehlo.convert %1457 : tensor<64x1x512x512xf32>
    %1459 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1460 = stablehlo.convert %1459 : tensor<64x1x512x512xf32>
    %1461 = stablehlo.select %1456, %1458, %1460 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_90 = stablehlo.constant dense<2020620089> : tensor<ui32>
    %1462 = call @_threefry_fold_in(%0, %c_90) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1463 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1464 = stablehlo.convert %1463 : tensor<f32>
    %1465 = stablehlo.broadcast_in_dim %1464, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1466 = stablehlo.divide %1440, %1465 : tensor<64x512x12x64xf32>
    %1467 = stablehlo.dot_general %1466, %1447, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1468 = stablehlo.broadcast_in_dim %1461, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1469 = stablehlo.add %1467, %1468 : tensor<64x12x512x512xf32>
    %cst_91 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1470 = stablehlo.reduce(%1469 init: %cst_91) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1471 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1472 = stablehlo.maximum %1471, %1470 : tensor<64x12x512xf32>
    %1473 = stablehlo.broadcast_in_dim %1472, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1474 = stablehlo.broadcast_in_dim %1473, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1475 = stablehlo.subtract %1469, %1474 : tensor<64x12x512x512xf32>
    %1476 = stablehlo.exponential %1475 : tensor<64x12x512x512xf32>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1477 = stablehlo.reduce(%1476 init: %cst_92) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1478 = stablehlo.broadcast_in_dim %1477, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1479 = stablehlo.broadcast_in_dim %1478, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1480 = stablehlo.divide %1476, %1479 : tensor<64x12x512x512xf32>
    %1481 = stablehlo.multiply %1478, %1478 : tensor<64x12x512x1xf32>
    %cst_93 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1482 = stablehlo.broadcast_in_dim %cst_93, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1483 = stablehlo.divide %1482, %1481 : tensor<64x12x512x1xf32>
    %1484 = call @_bernoulli_70(%1462, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1485 = stablehlo.convert %1484 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1486 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1487 = stablehlo.divide %1485, %1486 : tensor<64x12x512x512xf32>
    %1488 = stablehlo.multiply %1480, %1487 : tensor<64x12x512x512xf32>
    %1489 = stablehlo.dot_general %1454, %1488, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1490 = stablehlo.transpose %1489, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1491 = stablehlo.reshape %arg154 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1492 = stablehlo.dot_general %1490, %1491, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1493 = stablehlo.broadcast_in_dim %arg153, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1494 = stablehlo.broadcast_in_dim %1493, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1495 = stablehlo.broadcast_in_dim %1494, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1496 = stablehlo.add %1492, %1495 : tensor<64x512x768xf32>
    %c_94 = stablehlo.constant dense<3357787579> : tensor<ui32>
    %1497 = call @_threefry_fold_in(%0, %c_94) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1498 = call @_bernoulli(%1497, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1499 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1500 = stablehlo.divide %1496, %1499 : tensor<64x512x768xf32>
    %1501 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1502 = stablehlo.select %1498, %1500, %1501 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1503 = stablehlo.add %1502, %1433 : tensor<64x512x768xf32>
    %1504 = stablehlo.multiply %1503, %1503 : tensor<64x512x768xf32>
    %1505 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1506 = stablehlo.multiply %1505, %1503 : tensor<64x512x768xf32>
    %cst_95 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1507 = stablehlo.reduce(%1503 init: %cst_95) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1508 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1509 = stablehlo.divide %1507, %1508 : tensor<64x512xf32>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1510 = stablehlo.reduce(%1504 init: %cst_96) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1511 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1512 = stablehlo.divide %1510, %1511 : tensor<64x512xf32>
    %1513 = stablehlo.multiply %1509, %1509 : tensor<64x512xf32>
    %1514 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1515 = stablehlo.multiply %1514, %1509 : tensor<64x512xf32>
    %1516 = stablehlo.subtract %1512, %1513 : tensor<64x512xf32>
    %1517 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1518 = stablehlo.maximum %1517, %1516 : tensor<64x512xf32>
    %1519 = stablehlo.compare  EQ, %1516, %1518,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1520 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1521 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1522 = stablehlo.select %1519, %1520, %1521 : tensor<64x512xi1>, tensor<64x512xf32>
    %1523 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1524 = stablehlo.compare  EQ, %1523, %1518,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1525 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1526 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1527 = stablehlo.select %1524, %1525, %1526 : tensor<64x512xi1>, tensor<64x512xf32>
    %1528 = stablehlo.divide %1522, %1527 : tensor<64x512xf32>
    %1529 = stablehlo.broadcast_in_dim %1509, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1530 = stablehlo.broadcast_in_dim %1518, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1531 = stablehlo.broadcast_in_dim %1529, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1532 = stablehlo.subtract %1503, %1531 : tensor<64x512x768xf32>
    %1533 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1534 = stablehlo.add %1530, %1533 : tensor<64x512x1xf32>
    %1535 = stablehlo.rsqrt %1534 : tensor<64x512x1xf32>
    %1536 = stablehlo.divide %1535, %1534 : tensor<64x512x1xf32>
    %1537 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1538 = stablehlo.multiply %1537, %1536 : tensor<64x512x1xf32>
    %1539 = stablehlo.reshape %arg156 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1540 = stablehlo.broadcast_in_dim %1535, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1541 = stablehlo.broadcast_in_dim %1539, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1542 = stablehlo.multiply %1540, %1541 : tensor<64x512x768xf32>
    %1543 = stablehlo.multiply %1532, %1542 : tensor<64x512x768xf32>
    %1544 = stablehlo.reshape %arg155 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1545 = stablehlo.broadcast_in_dim %1544, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1546 = stablehlo.add %1543, %1545 : tensor<64x512x768xf32>
    %1547 = stablehlo.dot_general %1546, %arg162, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1548 = stablehlo.broadcast_in_dim %arg161, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1549 = stablehlo.broadcast_in_dim %1548, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1550 = stablehlo.broadcast_in_dim %1549, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1551 = stablehlo.add %1547, %1550 : tensor<64x512x3072xf32>
    %1552 = stablehlo.multiply %1551, %1551 : tensor<64x512x3072xf32>
    %1553 = stablehlo.multiply %1552, %1551 : tensor<64x512x3072xf32>
    %1554 = stablehlo.multiply %1551, %1551 : tensor<64x512x3072xf32>
    %1555 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1556 = stablehlo.multiply %1555, %1554 : tensor<64x512x3072xf32>
    %1557 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1558 = stablehlo.multiply %1557, %1553 : tensor<64x512x3072xf32>
    %1559 = stablehlo.add %1551, %1558 : tensor<64x512x3072xf32>
    %1560 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1561 = stablehlo.multiply %1560, %1559 : tensor<64x512x3072xf32>
    %1562 = stablehlo.tanh %1561 : tensor<64x512x3072xf32>
    %1563 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1564 = stablehlo.broadcast_in_dim %1563, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1565 = stablehlo.subtract %1564, %1562 : tensor<64x512x3072xf32>
    %1566 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1567 = stablehlo.add %1566, %1562 : tensor<64x512x3072xf32>
    %1568 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1569 = stablehlo.multiply %1568, %1567 : tensor<64x512x3072xf32>
    %1570 = stablehlo.multiply %1551, %1569 : tensor<64x512x3072xf32>
    %1571 = stablehlo.dot_general %1570, %arg158, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1572 = stablehlo.broadcast_in_dim %arg157, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1573 = stablehlo.broadcast_in_dim %1572, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1574 = stablehlo.broadcast_in_dim %1573, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1575 = stablehlo.add %1571, %1574 : tensor<64x512x768xf32>
    %c_97 = stablehlo.constant dense<136902650> : tensor<ui32>
    %1576 = call @_threefry_fold_in(%0, %c_97) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1577 = call @_bernoulli_111(%1576, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1578 = stablehlo.broadcast_in_dim %1577, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1579 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1580 = stablehlo.divide %1575, %1579 : tensor<64x512x768xf32>
    %1581 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1582 = stablehlo.select %1578, %1580, %1581 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1583 = stablehlo.add %1582, %1546 : tensor<64x512x768xf32>
    %1584 = stablehlo.multiply %1583, %1583 : tensor<64x512x768xf32>
    %1585 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1586 = stablehlo.multiply %1585, %1583 : tensor<64x512x768xf32>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1587 = stablehlo.reduce(%1583 init: %cst_98) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1588 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1589 = stablehlo.divide %1587, %1588 : tensor<64x512xf32>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1590 = stablehlo.reduce(%1584 init: %cst_99) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1591 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1592 = stablehlo.divide %1590, %1591 : tensor<64x512xf32>
    %1593 = stablehlo.multiply %1589, %1589 : tensor<64x512xf32>
    %1594 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1595 = stablehlo.multiply %1594, %1589 : tensor<64x512xf32>
    %1596 = stablehlo.subtract %1592, %1593 : tensor<64x512xf32>
    %1597 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1598 = stablehlo.maximum %1597, %1596 : tensor<64x512xf32>
    %1599 = stablehlo.compare  EQ, %1596, %1598,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1600 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1601 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1602 = stablehlo.select %1599, %1600, %1601 : tensor<64x512xi1>, tensor<64x512xf32>
    %1603 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1604 = stablehlo.compare  EQ, %1603, %1598,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1605 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1606 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1607 = stablehlo.select %1604, %1605, %1606 : tensor<64x512xi1>, tensor<64x512xf32>
    %1608 = stablehlo.divide %1602, %1607 : tensor<64x512xf32>
    %1609 = stablehlo.broadcast_in_dim %1589, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1610 = stablehlo.broadcast_in_dim %1598, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1611 = stablehlo.broadcast_in_dim %1609, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1612 = stablehlo.subtract %1583, %1611 : tensor<64x512x768xf32>
    %1613 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1614 = stablehlo.add %1610, %1613 : tensor<64x512x1xf32>
    %1615 = stablehlo.rsqrt %1614 : tensor<64x512x1xf32>
    %1616 = stablehlo.divide %1615, %1614 : tensor<64x512x1xf32>
    %1617 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1618 = stablehlo.multiply %1617, %1616 : tensor<64x512x1xf32>
    %1619 = stablehlo.reshape %arg160 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1620 = stablehlo.broadcast_in_dim %1615, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1621 = stablehlo.broadcast_in_dim %1619, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1622 = stablehlo.multiply %1620, %1621 : tensor<64x512x768xf32>
    %1623 = stablehlo.multiply %1612, %1622 : tensor<64x512x768xf32>
    %1624 = stablehlo.reshape %arg159 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1625 = stablehlo.broadcast_in_dim %1624, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1626 = stablehlo.add %1623, %1625 : tensor<64x512x768xf32>
    %1627 = stablehlo.reshape %arg166 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1628 = stablehlo.dot_general %1626, %1627, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1629 = stablehlo.reshape %arg165 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1630 = stablehlo.broadcast_in_dim %1629, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1631 = stablehlo.broadcast_in_dim %1630, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1632 = stablehlo.broadcast_in_dim %1631, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1633 = stablehlo.add %1628, %1632 : tensor<64x512x12x64xf32>
    %1634 = stablehlo.reshape %arg164 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1635 = stablehlo.dot_general %1626, %1634, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1636 = stablehlo.reshape %arg163 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1637 = stablehlo.broadcast_in_dim %1636, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1638 = stablehlo.broadcast_in_dim %1637, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1639 = stablehlo.broadcast_in_dim %1638, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1640 = stablehlo.add %1635, %1639 : tensor<64x512x12x64xf32>
    %1641 = stablehlo.reshape %arg168 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1642 = stablehlo.dot_general %1626, %1641, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1643 = stablehlo.reshape %arg167 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1644 = stablehlo.broadcast_in_dim %1643, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1645 = stablehlo.broadcast_in_dim %1644, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1646 = stablehlo.broadcast_in_dim %1645, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1647 = stablehlo.add %1642, %1646 : tensor<64x512x12x64xf32>
    %1648 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1649 = stablehlo.compare  GT, %82, %1648,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1650 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1651 = stablehlo.convert %1650 : tensor<64x1x512x512xf32>
    %1652 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1653 = stablehlo.convert %1652 : tensor<64x1x512x512xf32>
    %1654 = stablehlo.select %1649, %1651, %1653 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_100 = stablehlo.constant dense<2878700954> : tensor<ui32>
    %1655 = call @_threefry_fold_in(%0, %c_100) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1656 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1657 = stablehlo.convert %1656 : tensor<f32>
    %1658 = stablehlo.broadcast_in_dim %1657, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1659 = stablehlo.divide %1633, %1658 : tensor<64x512x12x64xf32>
    %1660 = stablehlo.dot_general %1659, %1640, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1661 = stablehlo.broadcast_in_dim %1654, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1662 = stablehlo.add %1660, %1661 : tensor<64x12x512x512xf32>
    %cst_101 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1663 = stablehlo.reduce(%1662 init: %cst_101) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1664 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1665 = stablehlo.maximum %1664, %1663 : tensor<64x12x512xf32>
    %1666 = stablehlo.broadcast_in_dim %1665, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1667 = stablehlo.broadcast_in_dim %1666, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1668 = stablehlo.subtract %1662, %1667 : tensor<64x12x512x512xf32>
    %1669 = stablehlo.exponential %1668 : tensor<64x12x512x512xf32>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1670 = stablehlo.reduce(%1669 init: %cst_102) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1671 = stablehlo.broadcast_in_dim %1670, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1672 = stablehlo.broadcast_in_dim %1671, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1673 = stablehlo.divide %1669, %1672 : tensor<64x12x512x512xf32>
    %1674 = stablehlo.multiply %1671, %1671 : tensor<64x12x512x1xf32>
    %cst_103 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1675 = stablehlo.broadcast_in_dim %cst_103, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1676 = stablehlo.divide %1675, %1674 : tensor<64x12x512x1xf32>
    %1677 = call @_bernoulli_70(%1655, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1678 = stablehlo.convert %1677 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1679 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1680 = stablehlo.divide %1678, %1679 : tensor<64x12x512x512xf32>
    %1681 = stablehlo.multiply %1673, %1680 : tensor<64x12x512x512xf32>
    %1682 = stablehlo.dot_general %1647, %1681, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1683 = stablehlo.transpose %1682, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1684 = stablehlo.reshape %arg170 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1685 = stablehlo.dot_general %1683, %1684, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1686 = stablehlo.broadcast_in_dim %arg169, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1687 = stablehlo.broadcast_in_dim %1686, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1688 = stablehlo.broadcast_in_dim %1687, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1689 = stablehlo.add %1685, %1688 : tensor<64x512x768xf32>
    %c_104 = stablehlo.constant dense<3607288244> : tensor<ui32>
    %1690 = call @_threefry_fold_in(%0, %c_104) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1691 = call @_bernoulli(%1690, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1692 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1693 = stablehlo.divide %1689, %1692 : tensor<64x512x768xf32>
    %1694 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1695 = stablehlo.select %1691, %1693, %1694 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1696 = stablehlo.add %1695, %1626 : tensor<64x512x768xf32>
    %1697 = stablehlo.multiply %1696, %1696 : tensor<64x512x768xf32>
    %1698 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1699 = stablehlo.multiply %1698, %1696 : tensor<64x512x768xf32>
    %cst_105 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1700 = stablehlo.reduce(%1696 init: %cst_105) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1701 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1702 = stablehlo.divide %1700, %1701 : tensor<64x512xf32>
    %cst_106 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1703 = stablehlo.reduce(%1697 init: %cst_106) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1704 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1705 = stablehlo.divide %1703, %1704 : tensor<64x512xf32>
    %1706 = stablehlo.multiply %1702, %1702 : tensor<64x512xf32>
    %1707 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1708 = stablehlo.multiply %1707, %1702 : tensor<64x512xf32>
    %1709 = stablehlo.subtract %1705, %1706 : tensor<64x512xf32>
    %1710 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1711 = stablehlo.maximum %1710, %1709 : tensor<64x512xf32>
    %1712 = stablehlo.compare  EQ, %1709, %1711,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1713 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1714 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1715 = stablehlo.select %1712, %1713, %1714 : tensor<64x512xi1>, tensor<64x512xf32>
    %1716 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1717 = stablehlo.compare  EQ, %1716, %1711,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1718 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1719 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1720 = stablehlo.select %1717, %1718, %1719 : tensor<64x512xi1>, tensor<64x512xf32>
    %1721 = stablehlo.divide %1715, %1720 : tensor<64x512xf32>
    %1722 = stablehlo.broadcast_in_dim %1702, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1723 = stablehlo.broadcast_in_dim %1711, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1724 = stablehlo.broadcast_in_dim %1722, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1725 = stablehlo.subtract %1696, %1724 : tensor<64x512x768xf32>
    %1726 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1727 = stablehlo.add %1723, %1726 : tensor<64x512x1xf32>
    %1728 = stablehlo.rsqrt %1727 : tensor<64x512x1xf32>
    %1729 = stablehlo.divide %1728, %1727 : tensor<64x512x1xf32>
    %1730 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1731 = stablehlo.multiply %1730, %1729 : tensor<64x512x1xf32>
    %1732 = stablehlo.reshape %arg172 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1733 = stablehlo.broadcast_in_dim %1728, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1734 = stablehlo.broadcast_in_dim %1732, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1735 = stablehlo.multiply %1733, %1734 : tensor<64x512x768xf32>
    %1736 = stablehlo.multiply %1725, %1735 : tensor<64x512x768xf32>
    %1737 = stablehlo.reshape %arg171 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1738 = stablehlo.broadcast_in_dim %1737, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1739 = stablehlo.add %1736, %1738 : tensor<64x512x768xf32>
    %1740 = stablehlo.dot_general %1739, %arg178, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1741 = stablehlo.broadcast_in_dim %arg177, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1742 = stablehlo.broadcast_in_dim %1741, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1743 = stablehlo.broadcast_in_dim %1742, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1744 = stablehlo.add %1740, %1743 : tensor<64x512x3072xf32>
    %1745 = stablehlo.multiply %1744, %1744 : tensor<64x512x3072xf32>
    %1746 = stablehlo.multiply %1745, %1744 : tensor<64x512x3072xf32>
    %1747 = stablehlo.multiply %1744, %1744 : tensor<64x512x3072xf32>
    %1748 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1749 = stablehlo.multiply %1748, %1747 : tensor<64x512x3072xf32>
    %1750 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1751 = stablehlo.multiply %1750, %1746 : tensor<64x512x3072xf32>
    %1752 = stablehlo.add %1744, %1751 : tensor<64x512x3072xf32>
    %1753 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1754 = stablehlo.multiply %1753, %1752 : tensor<64x512x3072xf32>
    %1755 = stablehlo.tanh %1754 : tensor<64x512x3072xf32>
    %1756 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1757 = stablehlo.broadcast_in_dim %1756, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1758 = stablehlo.subtract %1757, %1755 : tensor<64x512x3072xf32>
    %1759 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1760 = stablehlo.add %1759, %1755 : tensor<64x512x3072xf32>
    %1761 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1762 = stablehlo.multiply %1761, %1760 : tensor<64x512x3072xf32>
    %1763 = stablehlo.multiply %1744, %1762 : tensor<64x512x3072xf32>
    %1764 = stablehlo.dot_general %1763, %arg174, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1765 = stablehlo.broadcast_in_dim %arg173, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1766 = stablehlo.broadcast_in_dim %1765, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1767 = stablehlo.broadcast_in_dim %1766, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1768 = stablehlo.add %1764, %1767 : tensor<64x512x768xf32>
    %c_107 = stablehlo.constant dense<1709333009> : tensor<ui32>
    %1769 = call @_threefry_fold_in(%0, %c_107) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1770 = call @_bernoulli_111(%1769, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1771 = stablehlo.broadcast_in_dim %1770, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1772 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1773 = stablehlo.divide %1768, %1772 : tensor<64x512x768xf32>
    %1774 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1775 = stablehlo.select %1771, %1773, %1774 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1776 = stablehlo.add %1775, %1739 : tensor<64x512x768xf32>
    %1777 = stablehlo.multiply %1776, %1776 : tensor<64x512x768xf32>
    %1778 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1779 = stablehlo.multiply %1778, %1776 : tensor<64x512x768xf32>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1780 = stablehlo.reduce(%1776 init: %cst_108) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1781 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1782 = stablehlo.divide %1780, %1781 : tensor<64x512xf32>
    %cst_109 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1783 = stablehlo.reduce(%1777 init: %cst_109) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1784 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1785 = stablehlo.divide %1783, %1784 : tensor<64x512xf32>
    %1786 = stablehlo.multiply %1782, %1782 : tensor<64x512xf32>
    %1787 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1788 = stablehlo.multiply %1787, %1782 : tensor<64x512xf32>
    %1789 = stablehlo.subtract %1785, %1786 : tensor<64x512xf32>
    %1790 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1791 = stablehlo.maximum %1790, %1789 : tensor<64x512xf32>
    %1792 = stablehlo.compare  EQ, %1789, %1791,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1793 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1794 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1795 = stablehlo.select %1792, %1793, %1794 : tensor<64x512xi1>, tensor<64x512xf32>
    %1796 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1797 = stablehlo.compare  EQ, %1796, %1791,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1798 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1799 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1800 = stablehlo.select %1797, %1798, %1799 : tensor<64x512xi1>, tensor<64x512xf32>
    %1801 = stablehlo.divide %1795, %1800 : tensor<64x512xf32>
    %1802 = stablehlo.broadcast_in_dim %1782, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1803 = stablehlo.broadcast_in_dim %1791, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1804 = stablehlo.broadcast_in_dim %1802, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1805 = stablehlo.subtract %1776, %1804 : tensor<64x512x768xf32>
    %1806 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1807 = stablehlo.add %1803, %1806 : tensor<64x512x1xf32>
    %1808 = stablehlo.rsqrt %1807 : tensor<64x512x1xf32>
    %1809 = stablehlo.divide %1808, %1807 : tensor<64x512x1xf32>
    %1810 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1811 = stablehlo.multiply %1810, %1809 : tensor<64x512x1xf32>
    %1812 = stablehlo.reshape %arg176 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1813 = stablehlo.broadcast_in_dim %1808, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1814 = stablehlo.broadcast_in_dim %1812, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1815 = stablehlo.multiply %1813, %1814 : tensor<64x512x768xf32>
    %1816 = stablehlo.multiply %1805, %1815 : tensor<64x512x768xf32>
    %1817 = stablehlo.reshape %arg175 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1818 = stablehlo.broadcast_in_dim %1817, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1819 = stablehlo.add %1816, %1818 : tensor<64x512x768xf32>
    %1820 = stablehlo.reshape %arg182 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1821 = stablehlo.dot_general %1819, %1820, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1822 = stablehlo.reshape %arg181 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1823 = stablehlo.broadcast_in_dim %1822, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1824 = stablehlo.broadcast_in_dim %1823, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1825 = stablehlo.broadcast_in_dim %1824, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1826 = stablehlo.add %1821, %1825 : tensor<64x512x12x64xf32>
    %1827 = stablehlo.reshape %arg180 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1828 = stablehlo.dot_general %1819, %1827, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1829 = stablehlo.reshape %arg179 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1830 = stablehlo.broadcast_in_dim %1829, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1831 = stablehlo.broadcast_in_dim %1830, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1832 = stablehlo.broadcast_in_dim %1831, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1833 = stablehlo.add %1828, %1832 : tensor<64x512x12x64xf32>
    %1834 = stablehlo.reshape %arg184 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %1835 = stablehlo.dot_general %1819, %1834, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1836 = stablehlo.reshape %arg183 : (tensor<768xf32>) -> tensor<12x64xf32>
    %1837 = stablehlo.broadcast_in_dim %1836, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %1838 = stablehlo.broadcast_in_dim %1837, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %1839 = stablehlo.broadcast_in_dim %1838, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %1840 = stablehlo.add %1835, %1839 : tensor<64x512x12x64xf32>
    %1841 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1842 = stablehlo.compare  GT, %82, %1841,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %1843 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1844 = stablehlo.convert %1843 : tensor<64x1x512x512xf32>
    %1845 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %1846 = stablehlo.convert %1845 : tensor<64x1x512x512xf32>
    %1847 = stablehlo.select %1842, %1844, %1846 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_110 = stablehlo.constant dense<2063106453> : tensor<ui32>
    %1848 = call @_threefry_fold_in(%0, %c_110) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1849 = stablehlo.sqrt %cst_15 : tensor<f32>
    %1850 = stablehlo.convert %1849 : tensor<f32>
    %1851 = stablehlo.broadcast_in_dim %1850, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1852 = stablehlo.divide %1826, %1851 : tensor<64x512x12x64xf32>
    %1853 = stablehlo.dot_general %1852, %1833, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1854 = stablehlo.broadcast_in_dim %1847, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %1855 = stablehlo.add %1853, %1854 : tensor<64x12x512x512xf32>
    %cst_111 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1856 = stablehlo.reduce(%1855 init: %cst_111) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1857 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %1858 = stablehlo.maximum %1857, %1856 : tensor<64x12x512xf32>
    %1859 = stablehlo.broadcast_in_dim %1858, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1860 = stablehlo.broadcast_in_dim %1859, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1861 = stablehlo.subtract %1855, %1860 : tensor<64x12x512x512xf32>
    %1862 = stablehlo.exponential %1861 : tensor<64x12x512x512xf32>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1863 = stablehlo.reduce(%1862 init: %cst_112) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %1864 = stablehlo.broadcast_in_dim %1863, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %1865 = stablehlo.broadcast_in_dim %1864, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %1866 = stablehlo.divide %1862, %1865 : tensor<64x12x512x512xf32>
    %1867 = stablehlo.multiply %1864, %1864 : tensor<64x12x512x1xf32>
    %cst_113 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1868 = stablehlo.broadcast_in_dim %cst_113, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %1869 = stablehlo.divide %1868, %1867 : tensor<64x12x512x1xf32>
    %1870 = call @_bernoulli_70(%1848, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %1871 = stablehlo.convert %1870 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %1872 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %1873 = stablehlo.divide %1871, %1872 : tensor<64x12x512x512xf32>
    %1874 = stablehlo.multiply %1866, %1873 : tensor<64x12x512x512xf32>
    %1875 = stablehlo.dot_general %1840, %1874, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %1876 = stablehlo.transpose %1875, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1877 = stablehlo.reshape %arg186 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %1878 = stablehlo.dot_general %1876, %1877, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %1879 = stablehlo.broadcast_in_dim %arg185, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1880 = stablehlo.broadcast_in_dim %1879, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1881 = stablehlo.broadcast_in_dim %1880, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1882 = stablehlo.add %1878, %1881 : tensor<64x512x768xf32>
    %c_114 = stablehlo.constant dense<4132262148> : tensor<ui32>
    %1883 = call @_threefry_fold_in(%0, %c_114) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1884 = call @_bernoulli(%1883, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %1885 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1886 = stablehlo.divide %1882, %1885 : tensor<64x512x768xf32>
    %1887 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1888 = stablehlo.select %1884, %1886, %1887 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1889 = stablehlo.add %1888, %1819 : tensor<64x512x768xf32>
    %1890 = stablehlo.multiply %1889, %1889 : tensor<64x512x768xf32>
    %1891 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1892 = stablehlo.multiply %1891, %1889 : tensor<64x512x768xf32>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1893 = stablehlo.reduce(%1889 init: %cst_115) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1894 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1895 = stablehlo.divide %1893, %1894 : tensor<64x512xf32>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1896 = stablehlo.reduce(%1890 init: %cst_116) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1897 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1898 = stablehlo.divide %1896, %1897 : tensor<64x512xf32>
    %1899 = stablehlo.multiply %1895, %1895 : tensor<64x512xf32>
    %1900 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1901 = stablehlo.multiply %1900, %1895 : tensor<64x512xf32>
    %1902 = stablehlo.subtract %1898, %1899 : tensor<64x512xf32>
    %1903 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1904 = stablehlo.maximum %1903, %1902 : tensor<64x512xf32>
    %1905 = stablehlo.compare  EQ, %1902, %1904,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1906 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1907 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1908 = stablehlo.select %1905, %1906, %1907 : tensor<64x512xi1>, tensor<64x512xf32>
    %1909 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1910 = stablehlo.compare  EQ, %1909, %1904,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1911 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1912 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1913 = stablehlo.select %1910, %1911, %1912 : tensor<64x512xi1>, tensor<64x512xf32>
    %1914 = stablehlo.divide %1908, %1913 : tensor<64x512xf32>
    %1915 = stablehlo.broadcast_in_dim %1895, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1916 = stablehlo.broadcast_in_dim %1904, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1917 = stablehlo.broadcast_in_dim %1915, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1918 = stablehlo.subtract %1889, %1917 : tensor<64x512x768xf32>
    %1919 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1920 = stablehlo.add %1916, %1919 : tensor<64x512x1xf32>
    %1921 = stablehlo.rsqrt %1920 : tensor<64x512x1xf32>
    %1922 = stablehlo.divide %1921, %1920 : tensor<64x512x1xf32>
    %1923 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1924 = stablehlo.multiply %1923, %1922 : tensor<64x512x1xf32>
    %1925 = stablehlo.reshape %arg188 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1926 = stablehlo.broadcast_in_dim %1921, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1927 = stablehlo.broadcast_in_dim %1925, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1928 = stablehlo.multiply %1926, %1927 : tensor<64x512x768xf32>
    %1929 = stablehlo.multiply %1918, %1928 : tensor<64x512x768xf32>
    %1930 = stablehlo.reshape %arg187 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1931 = stablehlo.broadcast_in_dim %1930, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1932 = stablehlo.add %1929, %1931 : tensor<64x512x768xf32>
    %1933 = stablehlo.dot_general %1932, %arg194, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1934 = stablehlo.broadcast_in_dim %arg193, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %1935 = stablehlo.broadcast_in_dim %1934, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %1936 = stablehlo.broadcast_in_dim %1935, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1937 = stablehlo.add %1933, %1936 : tensor<64x512x3072xf32>
    %1938 = stablehlo.multiply %1937, %1937 : tensor<64x512x3072xf32>
    %1939 = stablehlo.multiply %1938, %1937 : tensor<64x512x3072xf32>
    %1940 = stablehlo.multiply %1937, %1937 : tensor<64x512x3072xf32>
    %1941 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1942 = stablehlo.multiply %1941, %1940 : tensor<64x512x3072xf32>
    %1943 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1944 = stablehlo.multiply %1943, %1939 : tensor<64x512x3072xf32>
    %1945 = stablehlo.add %1937, %1944 : tensor<64x512x3072xf32>
    %1946 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1947 = stablehlo.multiply %1946, %1945 : tensor<64x512x3072xf32>
    %1948 = stablehlo.tanh %1947 : tensor<64x512x3072xf32>
    %1949 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %1950 = stablehlo.broadcast_in_dim %1949, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1951 = stablehlo.subtract %1950, %1948 : tensor<64x512x3072xf32>
    %1952 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1953 = stablehlo.add %1952, %1948 : tensor<64x512x3072xf32>
    %1954 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1955 = stablehlo.multiply %1954, %1953 : tensor<64x512x3072xf32>
    %1956 = stablehlo.multiply %1937, %1955 : tensor<64x512x3072xf32>
    %1957 = stablehlo.dot_general %1956, %arg190, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1958 = stablehlo.broadcast_in_dim %arg189, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %1959 = stablehlo.broadcast_in_dim %1958, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %1960 = stablehlo.broadcast_in_dim %1959, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1961 = stablehlo.add %1957, %1960 : tensor<64x512x768xf32>
    %c_117 = stablehlo.constant dense<1356901351> : tensor<ui32>
    %1962 = call @_threefry_fold_in(%0, %c_117) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %1963 = call @_bernoulli_111(%1962, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %1964 = stablehlo.broadcast_in_dim %1963, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %1965 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1966 = stablehlo.divide %1961, %1965 : tensor<64x512x768xf32>
    %1967 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1968 = stablehlo.select %1964, %1966, %1967 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %1969 = stablehlo.add %1968, %1932 : tensor<64x512x768xf32>
    %1970 = stablehlo.multiply %1969, %1969 : tensor<64x512x768xf32>
    %1971 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1972 = stablehlo.multiply %1971, %1969 : tensor<64x512x768xf32>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1973 = stablehlo.reduce(%1969 init: %cst_118) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1974 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1975 = stablehlo.divide %1973, %1974 : tensor<64x512xf32>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1976 = stablehlo.reduce(%1970 init: %cst_119) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1977 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1978 = stablehlo.divide %1976, %1977 : tensor<64x512xf32>
    %1979 = stablehlo.multiply %1975, %1975 : tensor<64x512xf32>
    %1980 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1981 = stablehlo.multiply %1980, %1975 : tensor<64x512xf32>
    %1982 = stablehlo.subtract %1978, %1979 : tensor<64x512xf32>
    %1983 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1984 = stablehlo.maximum %1983, %1982 : tensor<64x512xf32>
    %1985 = stablehlo.compare  EQ, %1982, %1984,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1986 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1987 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1988 = stablehlo.select %1985, %1986, %1987 : tensor<64x512xi1>, tensor<64x512xf32>
    %1989 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1990 = stablehlo.compare  EQ, %1989, %1984,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %1991 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1992 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1993 = stablehlo.select %1990, %1991, %1992 : tensor<64x512xi1>, tensor<64x512xf32>
    %1994 = stablehlo.divide %1988, %1993 : tensor<64x512xf32>
    %1995 = stablehlo.broadcast_in_dim %1975, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1996 = stablehlo.broadcast_in_dim %1984, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1997 = stablehlo.broadcast_in_dim %1995, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1998 = stablehlo.subtract %1969, %1997 : tensor<64x512x768xf32>
    %1999 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2000 = stablehlo.add %1996, %1999 : tensor<64x512x1xf32>
    %2001 = stablehlo.rsqrt %2000 : tensor<64x512x1xf32>
    %2002 = stablehlo.divide %2001, %2000 : tensor<64x512x1xf32>
    %2003 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2004 = stablehlo.multiply %2003, %2002 : tensor<64x512x1xf32>
    %2005 = stablehlo.reshape %arg192 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2006 = stablehlo.broadcast_in_dim %2001, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2007 = stablehlo.broadcast_in_dim %2005, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2008 = stablehlo.multiply %2006, %2007 : tensor<64x512x768xf32>
    %2009 = stablehlo.multiply %1998, %2008 : tensor<64x512x768xf32>
    %2010 = stablehlo.reshape %arg191 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2011 = stablehlo.broadcast_in_dim %2010, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2012 = stablehlo.add %2009, %2011 : tensor<64x512x768xf32>
    %2013 = stablehlo.reshape %arg38 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2014 = stablehlo.dot_general %2012, %2013, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2015 = stablehlo.reshape %arg37 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2016 = stablehlo.broadcast_in_dim %2015, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2017 = stablehlo.broadcast_in_dim %2016, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2018 = stablehlo.broadcast_in_dim %2017, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2019 = stablehlo.add %2014, %2018 : tensor<64x512x12x64xf32>
    %2020 = stablehlo.reshape %arg36 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2021 = stablehlo.dot_general %2012, %2020, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2022 = stablehlo.reshape %arg35 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2023 = stablehlo.broadcast_in_dim %2022, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2024 = stablehlo.broadcast_in_dim %2023, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2025 = stablehlo.broadcast_in_dim %2024, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2026 = stablehlo.add %2021, %2025 : tensor<64x512x12x64xf32>
    %2027 = stablehlo.reshape %arg40 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2028 = stablehlo.dot_general %2012, %2027, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2029 = stablehlo.reshape %arg39 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2030 = stablehlo.broadcast_in_dim %2029, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2031 = stablehlo.broadcast_in_dim %2030, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2032 = stablehlo.broadcast_in_dim %2031, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2033 = stablehlo.add %2028, %2032 : tensor<64x512x12x64xf32>
    %2034 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2035 = stablehlo.compare  GT, %82, %2034,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %2036 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2037 = stablehlo.convert %2036 : tensor<64x1x512x512xf32>
    %2038 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2039 = stablehlo.convert %2038 : tensor<64x1x512x512xf32>
    %2040 = stablehlo.select %2035, %2037, %2039 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_120 = stablehlo.constant dense<3420478591> : tensor<ui32>
    %2041 = call @_threefry_fold_in(%0, %c_120) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2042 = stablehlo.sqrt %cst_15 : tensor<f32>
    %2043 = stablehlo.convert %2042 : tensor<f32>
    %2044 = stablehlo.broadcast_in_dim %2043, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2045 = stablehlo.divide %2019, %2044 : tensor<64x512x12x64xf32>
    %2046 = stablehlo.dot_general %2045, %2026, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2047 = stablehlo.broadcast_in_dim %2040, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %2048 = stablehlo.add %2046, %2047 : tensor<64x12x512x512xf32>
    %cst_121 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2049 = stablehlo.reduce(%2048 init: %cst_121) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2050 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %2051 = stablehlo.maximum %2050, %2049 : tensor<64x12x512xf32>
    %2052 = stablehlo.broadcast_in_dim %2051, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2053 = stablehlo.broadcast_in_dim %2052, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2054 = stablehlo.subtract %2048, %2053 : tensor<64x12x512x512xf32>
    %2055 = stablehlo.exponential %2054 : tensor<64x12x512x512xf32>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2056 = stablehlo.reduce(%2055 init: %cst_122) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2057 = stablehlo.broadcast_in_dim %2056, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2058 = stablehlo.broadcast_in_dim %2057, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2059 = stablehlo.divide %2055, %2058 : tensor<64x12x512x512xf32>
    %2060 = stablehlo.multiply %2057, %2057 : tensor<64x12x512x1xf32>
    %cst_123 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2061 = stablehlo.broadcast_in_dim %cst_123, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %2062 = stablehlo.divide %2061, %2060 : tensor<64x12x512x1xf32>
    %2063 = call @_bernoulli_70(%2041, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %2064 = stablehlo.convert %2063 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %2065 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2066 = stablehlo.divide %2064, %2065 : tensor<64x12x512x512xf32>
    %2067 = stablehlo.multiply %2059, %2066 : tensor<64x12x512x512xf32>
    %2068 = stablehlo.dot_general %2033, %2067, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2069 = stablehlo.transpose %2068, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2070 = stablehlo.reshape %arg42 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %2071 = stablehlo.dot_general %2069, %2070, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %2072 = stablehlo.broadcast_in_dim %arg41, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2073 = stablehlo.broadcast_in_dim %2072, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2074 = stablehlo.broadcast_in_dim %2073, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2075 = stablehlo.add %2071, %2074 : tensor<64x512x768xf32>
    %c_124 = stablehlo.constant dense<2585465220> : tensor<ui32>
    %2076 = call @_threefry_fold_in(%0, %c_124) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2077 = call @_bernoulli(%2076, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2078 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2079 = stablehlo.divide %2075, %2078 : tensor<64x512x768xf32>
    %2080 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2081 = stablehlo.select %2077, %2079, %2080 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2082 = stablehlo.add %2081, %2012 : tensor<64x512x768xf32>
    %2083 = stablehlo.multiply %2082, %2082 : tensor<64x512x768xf32>
    %2084 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2085 = stablehlo.multiply %2084, %2082 : tensor<64x512x768xf32>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2086 = stablehlo.reduce(%2082 init: %cst_125) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2087 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2088 = stablehlo.divide %2086, %2087 : tensor<64x512xf32>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2089 = stablehlo.reduce(%2083 init: %cst_126) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2090 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2091 = stablehlo.divide %2089, %2090 : tensor<64x512xf32>
    %2092 = stablehlo.multiply %2088, %2088 : tensor<64x512xf32>
    %2093 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2094 = stablehlo.multiply %2093, %2088 : tensor<64x512xf32>
    %2095 = stablehlo.subtract %2091, %2092 : tensor<64x512xf32>
    %2096 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2097 = stablehlo.maximum %2096, %2095 : tensor<64x512xf32>
    %2098 = stablehlo.compare  EQ, %2095, %2097,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2099 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2100 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2101 = stablehlo.select %2098, %2099, %2100 : tensor<64x512xi1>, tensor<64x512xf32>
    %2102 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2103 = stablehlo.compare  EQ, %2102, %2097,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2104 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2105 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2106 = stablehlo.select %2103, %2104, %2105 : tensor<64x512xi1>, tensor<64x512xf32>
    %2107 = stablehlo.divide %2101, %2106 : tensor<64x512xf32>
    %2108 = stablehlo.broadcast_in_dim %2088, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2109 = stablehlo.broadcast_in_dim %2097, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2110 = stablehlo.broadcast_in_dim %2108, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2111 = stablehlo.subtract %2082, %2110 : tensor<64x512x768xf32>
    %2112 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2113 = stablehlo.add %2109, %2112 : tensor<64x512x1xf32>
    %2114 = stablehlo.rsqrt %2113 : tensor<64x512x1xf32>
    %2115 = stablehlo.divide %2114, %2113 : tensor<64x512x1xf32>
    %2116 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2117 = stablehlo.multiply %2116, %2115 : tensor<64x512x1xf32>
    %2118 = stablehlo.reshape %arg44 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2119 = stablehlo.broadcast_in_dim %2114, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2120 = stablehlo.broadcast_in_dim %2118, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2121 = stablehlo.multiply %2119, %2120 : tensor<64x512x768xf32>
    %2122 = stablehlo.multiply %2111, %2121 : tensor<64x512x768xf32>
    %2123 = stablehlo.reshape %arg43 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2124 = stablehlo.broadcast_in_dim %2123, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2125 = stablehlo.add %2122, %2124 : tensor<64x512x768xf32>
    %2126 = stablehlo.dot_general %2125, %arg50, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2127 = stablehlo.broadcast_in_dim %arg49, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %2128 = stablehlo.broadcast_in_dim %2127, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %2129 = stablehlo.broadcast_in_dim %2128, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2130 = stablehlo.add %2126, %2129 : tensor<64x512x3072xf32>
    %2131 = stablehlo.multiply %2130, %2130 : tensor<64x512x3072xf32>
    %2132 = stablehlo.multiply %2131, %2130 : tensor<64x512x3072xf32>
    %2133 = stablehlo.multiply %2130, %2130 : tensor<64x512x3072xf32>
    %2134 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2135 = stablehlo.multiply %2134, %2133 : tensor<64x512x3072xf32>
    %2136 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2137 = stablehlo.multiply %2136, %2132 : tensor<64x512x3072xf32>
    %2138 = stablehlo.add %2130, %2137 : tensor<64x512x3072xf32>
    %2139 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2140 = stablehlo.multiply %2139, %2138 : tensor<64x512x3072xf32>
    %2141 = stablehlo.tanh %2140 : tensor<64x512x3072xf32>
    %2142 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2143 = stablehlo.broadcast_in_dim %2142, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2144 = stablehlo.subtract %2143, %2141 : tensor<64x512x3072xf32>
    %2145 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2146 = stablehlo.add %2145, %2141 : tensor<64x512x3072xf32>
    %2147 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2148 = stablehlo.multiply %2147, %2146 : tensor<64x512x3072xf32>
    %2149 = stablehlo.multiply %2130, %2148 : tensor<64x512x3072xf32>
    %2150 = stablehlo.dot_general %2149, %arg46, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2151 = stablehlo.broadcast_in_dim %arg45, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2152 = stablehlo.broadcast_in_dim %2151, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2153 = stablehlo.broadcast_in_dim %2152, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2154 = stablehlo.add %2150, %2153 : tensor<64x512x768xf32>
    %c_127 = stablehlo.constant dense<211573412> : tensor<ui32>
    %2155 = call @_threefry_fold_in(%0, %c_127) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2156 = call @_bernoulli_111(%2155, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %2157 = stablehlo.broadcast_in_dim %2156, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %2158 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2159 = stablehlo.divide %2154, %2158 : tensor<64x512x768xf32>
    %2160 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2161 = stablehlo.select %2157, %2159, %2160 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2162 = stablehlo.add %2161, %2125 : tensor<64x512x768xf32>
    %2163 = stablehlo.multiply %2162, %2162 : tensor<64x512x768xf32>
    %2164 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2165 = stablehlo.multiply %2164, %2162 : tensor<64x512x768xf32>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2166 = stablehlo.reduce(%2162 init: %cst_128) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2167 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2168 = stablehlo.divide %2166, %2167 : tensor<64x512xf32>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2169 = stablehlo.reduce(%2163 init: %cst_129) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2170 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2171 = stablehlo.divide %2169, %2170 : tensor<64x512xf32>
    %2172 = stablehlo.multiply %2168, %2168 : tensor<64x512xf32>
    %2173 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2174 = stablehlo.multiply %2173, %2168 : tensor<64x512xf32>
    %2175 = stablehlo.subtract %2171, %2172 : tensor<64x512xf32>
    %2176 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2177 = stablehlo.maximum %2176, %2175 : tensor<64x512xf32>
    %2178 = stablehlo.compare  EQ, %2175, %2177,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2179 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2180 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2181 = stablehlo.select %2178, %2179, %2180 : tensor<64x512xi1>, tensor<64x512xf32>
    %2182 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2183 = stablehlo.compare  EQ, %2182, %2177,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2184 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2185 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2186 = stablehlo.select %2183, %2184, %2185 : tensor<64x512xi1>, tensor<64x512xf32>
    %2187 = stablehlo.divide %2181, %2186 : tensor<64x512xf32>
    %2188 = stablehlo.broadcast_in_dim %2168, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2189 = stablehlo.broadcast_in_dim %2177, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2190 = stablehlo.broadcast_in_dim %2188, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2191 = stablehlo.subtract %2162, %2190 : tensor<64x512x768xf32>
    %2192 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2193 = stablehlo.add %2189, %2192 : tensor<64x512x1xf32>
    %2194 = stablehlo.rsqrt %2193 : tensor<64x512x1xf32>
    %2195 = stablehlo.divide %2194, %2193 : tensor<64x512x1xf32>
    %2196 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2197 = stablehlo.multiply %2196, %2195 : tensor<64x512x1xf32>
    %2198 = stablehlo.reshape %arg48 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2199 = stablehlo.broadcast_in_dim %2194, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2200 = stablehlo.broadcast_in_dim %2198, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2201 = stablehlo.multiply %2199, %2200 : tensor<64x512x768xf32>
    %2202 = stablehlo.multiply %2191, %2201 : tensor<64x512x768xf32>
    %2203 = stablehlo.reshape %arg47 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2204 = stablehlo.broadcast_in_dim %2203, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2205 = stablehlo.add %2202, %2204 : tensor<64x512x768xf32>
    %2206 = stablehlo.reshape %arg54 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2207 = stablehlo.dot_general %2205, %2206, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2208 = stablehlo.reshape %arg53 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2209 = stablehlo.broadcast_in_dim %2208, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2210 = stablehlo.broadcast_in_dim %2209, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2211 = stablehlo.broadcast_in_dim %2210, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2212 = stablehlo.add %2207, %2211 : tensor<64x512x12x64xf32>
    %2213 = stablehlo.reshape %arg52 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2214 = stablehlo.dot_general %2205, %2213, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2215 = stablehlo.reshape %arg51 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2216 = stablehlo.broadcast_in_dim %2215, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2217 = stablehlo.broadcast_in_dim %2216, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2218 = stablehlo.broadcast_in_dim %2217, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2219 = stablehlo.add %2214, %2218 : tensor<64x512x12x64xf32>
    %2220 = stablehlo.reshape %arg56 : (tensor<768x768xf32>) -> tensor<768x12x64xf32>
    %2221 = stablehlo.dot_general %2205, %2220, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2222 = stablehlo.reshape %arg55 : (tensor<768xf32>) -> tensor<12x64xf32>
    %2223 = stablehlo.broadcast_in_dim %2222, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %2224 = stablehlo.broadcast_in_dim %2223, dims = [0, 2, 3] : (tensor<1x12x64xf32>) -> tensor<1x1x12x64xf32>
    %2225 = stablehlo.broadcast_in_dim %2224, dims = [0, 1, 2, 3] : (tensor<1x1x12x64xf32>) -> tensor<64x512x12x64xf32>
    %2226 = stablehlo.add %2221, %2225 : tensor<64x512x12x64xf32>
    %2227 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2228 = stablehlo.compare  GT, %82, %2227,  FLOAT : (tensor<64x1x512x512xf32>, tensor<64x1x512x512xf32>) -> tensor<64x1x512x512xi1>
    %2229 = stablehlo.broadcast_in_dim %cst_12, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2230 = stablehlo.convert %2229 : tensor<64x1x512x512xf32>
    %2231 = stablehlo.broadcast_in_dim %cst_13, dims = [] : (tensor<f32>) -> tensor<64x1x512x512xf32>
    %2232 = stablehlo.convert %2231 : tensor<64x1x512x512xf32>
    %2233 = stablehlo.select %2228, %2230, %2232 : tensor<64x1x512x512xi1>, tensor<64x1x512x512xf32>
    %c_130 = stablehlo.constant dense<2546847265> : tensor<ui32>
    %2234 = call @_threefry_fold_in(%0, %c_130) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2235 = stablehlo.sqrt %cst_15 : tensor<f32>
    %2236 = stablehlo.convert %2235 : tensor<f32>
    %2237 = stablehlo.broadcast_in_dim %2236, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2238 = stablehlo.divide %2212, %2237 : tensor<64x512x12x64xf32>
    %2239 = stablehlo.dot_general %2238, %2219, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2240 = stablehlo.broadcast_in_dim %2233, dims = [0, 1, 2, 3] : (tensor<64x1x512x512xf32>) -> tensor<64x12x512x512xf32>
    %2241 = stablehlo.add %2239, %2240 : tensor<64x12x512x512xf32>
    %cst_131 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2242 = stablehlo.reduce(%2241 init: %cst_131) applies stablehlo.maximum across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2243 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x12x512xf32>
    %2244 = stablehlo.maximum %2243, %2242 : tensor<64x12x512xf32>
    %2245 = stablehlo.broadcast_in_dim %2244, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2246 = stablehlo.broadcast_in_dim %2245, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2247 = stablehlo.subtract %2241, %2246 : tensor<64x12x512x512xf32>
    %2248 = stablehlo.exponential %2247 : tensor<64x12x512x512xf32>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2249 = stablehlo.reduce(%2248 init: %cst_132) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2250 = stablehlo.broadcast_in_dim %2249, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2251 = stablehlo.broadcast_in_dim %2250, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2252 = stablehlo.divide %2248, %2251 : tensor<64x12x512x512xf32>
    %2253 = stablehlo.multiply %2250, %2250 : tensor<64x12x512x1xf32>
    %cst_133 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2254 = stablehlo.broadcast_in_dim %cst_133, dims = [] : (tensor<f32>) -> tensor<64x12x512x1xf32>
    %2255 = stablehlo.divide %2254, %2253 : tensor<64x12x512x1xf32>
    %2256 = call @_bernoulli_70(%2234, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x12x512x512xi1>
    %2257 = stablehlo.convert %2256 : (tensor<64x12x512x512xi1>) -> tensor<64x12x512x512xf32>
    %2258 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2259 = stablehlo.divide %2257, %2258 : tensor<64x12x512x512xf32>
    %2260 = stablehlo.multiply %2252, %2259 : tensor<64x12x512x512xf32>
    %2261 = stablehlo.dot_general %2226, %2260, batching_dims = [0, 2] x [0, 1], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2262 = stablehlo.transpose %2261, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2263 = stablehlo.reshape %arg58 : (tensor<768x768xf32>) -> tensor<12x64x768xf32>
    %2264 = stablehlo.dot_general %2262, %2263, contracting_dims = [2, 3] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<12x64x768xf32>) -> tensor<64x512x768xf32>
    %2265 = stablehlo.broadcast_in_dim %arg57, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2266 = stablehlo.broadcast_in_dim %2265, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2267 = stablehlo.broadcast_in_dim %2266, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2268 = stablehlo.add %2264, %2267 : tensor<64x512x768xf32>
    %c_134 = stablehlo.constant dense<2360657618> : tensor<ui32>
    %2269 = call @_threefry_fold_in(%0, %c_134) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2270 = call @_bernoulli(%2269, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x512x768xi1>
    %2271 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2272 = stablehlo.divide %2268, %2271 : tensor<64x512x768xf32>
    %2273 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2274 = stablehlo.select %2270, %2272, %2273 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2275 = stablehlo.add %2274, %2205 : tensor<64x512x768xf32>
    %2276 = stablehlo.multiply %2275, %2275 : tensor<64x512x768xf32>
    %2277 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2278 = stablehlo.multiply %2277, %2275 : tensor<64x512x768xf32>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2279 = stablehlo.reduce(%2275 init: %cst_135) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2280 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2281 = stablehlo.divide %2279, %2280 : tensor<64x512xf32>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2282 = stablehlo.reduce(%2276 init: %cst_136) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2283 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2284 = stablehlo.divide %2282, %2283 : tensor<64x512xf32>
    %2285 = stablehlo.multiply %2281, %2281 : tensor<64x512xf32>
    %2286 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2287 = stablehlo.multiply %2286, %2281 : tensor<64x512xf32>
    %2288 = stablehlo.subtract %2284, %2285 : tensor<64x512xf32>
    %2289 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2290 = stablehlo.maximum %2289, %2288 : tensor<64x512xf32>
    %2291 = stablehlo.compare  EQ, %2288, %2290,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2292 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2293 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2294 = stablehlo.select %2291, %2292, %2293 : tensor<64x512xi1>, tensor<64x512xf32>
    %2295 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2296 = stablehlo.compare  EQ, %2295, %2290,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2297 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2298 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2299 = stablehlo.select %2296, %2297, %2298 : tensor<64x512xi1>, tensor<64x512xf32>
    %2300 = stablehlo.divide %2294, %2299 : tensor<64x512xf32>
    %2301 = stablehlo.broadcast_in_dim %2281, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2302 = stablehlo.broadcast_in_dim %2290, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2303 = stablehlo.broadcast_in_dim %2301, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2304 = stablehlo.subtract %2275, %2303 : tensor<64x512x768xf32>
    %2305 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2306 = stablehlo.add %2302, %2305 : tensor<64x512x1xf32>
    %2307 = stablehlo.rsqrt %2306 : tensor<64x512x1xf32>
    %2308 = stablehlo.divide %2307, %2306 : tensor<64x512x1xf32>
    %2309 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2310 = stablehlo.multiply %2309, %2308 : tensor<64x512x1xf32>
    %2311 = stablehlo.reshape %arg60 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2312 = stablehlo.broadcast_in_dim %2307, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2313 = stablehlo.broadcast_in_dim %2311, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2314 = stablehlo.multiply %2312, %2313 : tensor<64x512x768xf32>
    %2315 = stablehlo.multiply %2304, %2314 : tensor<64x512x768xf32>
    %2316 = stablehlo.reshape %arg59 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2317 = stablehlo.broadcast_in_dim %2316, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2318 = stablehlo.add %2315, %2317 : tensor<64x512x768xf32>
    %2319 = stablehlo.dot_general %2318, %arg66, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %2320 = stablehlo.broadcast_in_dim %arg65, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %2321 = stablehlo.broadcast_in_dim %2320, dims = [0, 2] : (tensor<1x3072xf32>) -> tensor<1x1x3072xf32>
    %2322 = stablehlo.broadcast_in_dim %2321, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %2323 = stablehlo.add %2319, %2322 : tensor<64x512x3072xf32>
    %2324 = stablehlo.multiply %2323, %2323 : tensor<64x512x3072xf32>
    %2325 = stablehlo.multiply %2324, %2323 : tensor<64x512x3072xf32>
    %2326 = stablehlo.multiply %2323, %2323 : tensor<64x512x3072xf32>
    %2327 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2328 = stablehlo.multiply %2327, %2326 : tensor<64x512x3072xf32>
    %2329 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2330 = stablehlo.multiply %2329, %2325 : tensor<64x512x3072xf32>
    %2331 = stablehlo.add %2323, %2330 : tensor<64x512x3072xf32>
    %2332 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2333 = stablehlo.multiply %2332, %2331 : tensor<64x512x3072xf32>
    %2334 = stablehlo.tanh %2333 : tensor<64x512x3072xf32>
    %2335 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2336 = stablehlo.broadcast_in_dim %2335, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2337 = stablehlo.subtract %2336, %2334 : tensor<64x512x3072xf32>
    %2338 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2339 = stablehlo.add %2338, %2334 : tensor<64x512x3072xf32>
    %2340 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2341 = stablehlo.multiply %2340, %2339 : tensor<64x512x3072xf32>
    %2342 = stablehlo.multiply %2323, %2341 : tensor<64x512x3072xf32>
    %2343 = stablehlo.dot_general %2342, %arg62, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %2344 = stablehlo.broadcast_in_dim %arg61, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2345 = stablehlo.broadcast_in_dim %2344, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2346 = stablehlo.broadcast_in_dim %2345, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2347 = stablehlo.add %2343, %2346 : tensor<64x512x768xf32>
    %c_137 = stablehlo.constant dense<216611501> : tensor<ui32>
    %2348 = call @_threefry_fold_in(%0, %c_137) : (tensor<2xui32>, tensor<ui32>) -> tensor<2xui32>
    %2349 = call @_bernoulli_111(%2348, %cst_11) : (tensor<2xui32>, tensor<f32>) -> tensor<64x1x768xi1>
    %2350 = stablehlo.broadcast_in_dim %2349, dims = [0, 1, 2] : (tensor<64x1x768xi1>) -> tensor<64x512x768xi1>
    %2351 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2352 = stablehlo.divide %2347, %2351 : tensor<64x512x768xf32>
    %2353 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2354 = stablehlo.select %2350, %2352, %2353 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2355 = stablehlo.add %2354, %2318 : tensor<64x512x768xf32>
    %2356 = stablehlo.multiply %2355, %2355 : tensor<64x512x768xf32>
    %2357 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2358 = stablehlo.multiply %2357, %2355 : tensor<64x512x768xf32>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2359 = stablehlo.reduce(%2355 init: %cst_138) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2360 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2361 = stablehlo.divide %2359, %2360 : tensor<64x512xf32>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2362 = stablehlo.reduce(%2356 init: %cst_139) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2363 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2364 = stablehlo.divide %2362, %2363 : tensor<64x512xf32>
    %2365 = stablehlo.multiply %2361, %2361 : tensor<64x512xf32>
    %2366 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2367 = stablehlo.multiply %2366, %2361 : tensor<64x512xf32>
    %2368 = stablehlo.subtract %2364, %2365 : tensor<64x512xf32>
    %2369 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2370 = stablehlo.maximum %2369, %2368 : tensor<64x512xf32>
    %2371 = stablehlo.compare  EQ, %2368, %2370,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2372 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2373 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2374 = stablehlo.select %2371, %2372, %2373 : tensor<64x512xi1>, tensor<64x512xf32>
    %2375 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2376 = stablehlo.compare  EQ, %2375, %2370,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2377 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2378 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2379 = stablehlo.select %2376, %2377, %2378 : tensor<64x512xi1>, tensor<64x512xf32>
    %2380 = stablehlo.divide %2374, %2379 : tensor<64x512xf32>
    %2381 = stablehlo.broadcast_in_dim %2361, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2382 = stablehlo.broadcast_in_dim %2370, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2383 = stablehlo.broadcast_in_dim %2381, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2384 = stablehlo.subtract %2355, %2383 : tensor<64x512x768xf32>
    %2385 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2386 = stablehlo.add %2382, %2385 : tensor<64x512x1xf32>
    %2387 = stablehlo.rsqrt %2386 : tensor<64x512x1xf32>
    %2388 = stablehlo.divide %2387, %2386 : tensor<64x512x1xf32>
    %2389 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2390 = stablehlo.multiply %2389, %2388 : tensor<64x512x1xf32>
    %2391 = stablehlo.reshape %arg64 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2392 = stablehlo.broadcast_in_dim %2387, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2393 = stablehlo.broadcast_in_dim %2391, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2394 = stablehlo.multiply %2392, %2393 : tensor<64x512x768xf32>
    %2395 = stablehlo.multiply %2384, %2394 : tensor<64x512x768xf32>
    %2396 = stablehlo.reshape %arg63 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2397 = stablehlo.broadcast_in_dim %2396, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2398 = stablehlo.add %2395, %2397 : tensor<64x512x768xf32>
    %2399 = stablehlo.dot_general %2398, %arg199, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2400 = stablehlo.broadcast_in_dim %arg198, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %2401 = stablehlo.broadcast_in_dim %2400, dims = [0, 2] : (tensor<1x768xf32>) -> tensor<1x1x768xf32>
    %2402 = stablehlo.broadcast_in_dim %2401, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2403 = stablehlo.add %2399, %2402 : tensor<64x512x768xf32>
    %2404 = stablehlo.multiply %2403, %2403 : tensor<64x512x768xf32>
    %2405 = stablehlo.multiply %2404, %2403 : tensor<64x512x768xf32>
    %2406 = stablehlo.multiply %2403, %2403 : tensor<64x512x768xf32>
    %2407 = stablehlo.broadcast_in_dim %cst_23, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2408 = stablehlo.multiply %2407, %2406 : tensor<64x512x768xf32>
    %2409 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2410 = stablehlo.multiply %2409, %2405 : tensor<64x512x768xf32>
    %2411 = stablehlo.add %2403, %2410 : tensor<64x512x768xf32>
    %2412 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2413 = stablehlo.multiply %2412, %2411 : tensor<64x512x768xf32>
    %2414 = stablehlo.tanh %2413 : tensor<64x512x768xf32>
    %2415 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2416 = stablehlo.broadcast_in_dim %2415, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2417 = stablehlo.subtract %2416, %2414 : tensor<64x512x768xf32>
    %2418 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2419 = stablehlo.add %2418, %2414 : tensor<64x512x768xf32>
    %2420 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2421 = stablehlo.multiply %2420, %2419 : tensor<64x512x768xf32>
    %2422 = stablehlo.multiply %2403, %2421 : tensor<64x512x768xf32>
    %2423 = stablehlo.multiply %2422, %2422 : tensor<64x512x768xf32>
    %2424 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2425 = stablehlo.multiply %2424, %2422 : tensor<64x512x768xf32>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2426 = stablehlo.reduce(%2422 init: %cst_140) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2427 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2428 = stablehlo.divide %2426, %2427 : tensor<64x512xf32>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2429 = stablehlo.reduce(%2423 init: %cst_141) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2430 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2431 = stablehlo.divide %2429, %2430 : tensor<64x512xf32>
    %2432 = stablehlo.multiply %2428, %2428 : tensor<64x512xf32>
    %2433 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2434 = stablehlo.multiply %2433, %2428 : tensor<64x512xf32>
    %2435 = stablehlo.subtract %2431, %2432 : tensor<64x512xf32>
    %2436 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2437 = stablehlo.maximum %2436, %2435 : tensor<64x512xf32>
    %2438 = stablehlo.compare  EQ, %2435, %2437,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2439 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2440 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2441 = stablehlo.select %2438, %2439, %2440 : tensor<64x512xi1>, tensor<64x512xf32>
    %2442 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2443 = stablehlo.compare  EQ, %2442, %2437,  FLOAT : (tensor<64x512xf32>, tensor<64x512xf32>) -> tensor<64x512xi1>
    %2444 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2445 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2446 = stablehlo.select %2443, %2444, %2445 : tensor<64x512xi1>, tensor<64x512xf32>
    %2447 = stablehlo.divide %2441, %2446 : tensor<64x512xf32>
    %2448 = stablehlo.broadcast_in_dim %2428, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2449 = stablehlo.broadcast_in_dim %2437, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2450 = stablehlo.broadcast_in_dim %2448, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2451 = stablehlo.subtract %2422, %2450 : tensor<64x512x768xf32>
    %2452 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2453 = stablehlo.add %2449, %2452 : tensor<64x512x1xf32>
    %2454 = stablehlo.rsqrt %2453 : tensor<64x512x1xf32>
    %2455 = stablehlo.divide %2454, %2453 : tensor<64x512x1xf32>
    %2456 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2457 = stablehlo.multiply %2456, %2455 : tensor<64x512x1xf32>
    %2458 = stablehlo.reshape %arg202 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2459 = stablehlo.broadcast_in_dim %2454, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2460 = stablehlo.broadcast_in_dim %2458, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2461 = stablehlo.multiply %2459, %2460 : tensor<64x512x768xf32>
    %2462 = stablehlo.multiply %2451, %2461 : tensor<64x512x768xf32>
    %2463 = stablehlo.reshape %arg201 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2464 = stablehlo.broadcast_in_dim %2463, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2465 = stablehlo.add %2462, %2464 : tensor<64x512x768xf32>
    %2466 = stablehlo.transpose %arg200, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2467 = stablehlo.dot_general %2465, %2466, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x30522xf32>) -> tensor<64x512x30522xf32>
    %2468 = stablehlo.broadcast_in_dim %arg197, dims = [2] : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %2469 = stablehlo.broadcast_in_dim %2468, dims = [0, 1, 2] : (tensor<1x1x30522xf32>) -> tensor<64x512x30522xf32>
    %2470 = stablehlo.add %2467, %2469 : tensor<64x512x30522xf32>
    %c_142 = stablehlo.constant dense<-100> : tensor<i32>
    %2471 = stablehlo.broadcast_in_dim %c_142, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2472 = stablehlo.compare  NE, %arg614, %2471,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_143 = stablehlo.constant dense<0> : tensor<i32>
    %2473 = call @_where(%2472, %arg614, %c_143) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %2474 = call @_where(%2472, %2473, %c_143) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_144 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %2475 = stablehlo.reduce(%2470 init: %cst_144) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2476 = stablehlo.broadcast_in_dim %2475, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2477 = stablehlo.broadcast_in_dim %2476, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2478 = stablehlo.subtract %2470, %2477 : tensor<64x512x30522xf32>
    %2479 = stablehlo.exponential %2478 : tensor<64x512x30522xf32>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2480 = stablehlo.reduce(%2479 init: %cst_145) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2481 = stablehlo.log %2480 : tensor<64x512xf32>
    %2482 = stablehlo.broadcast_in_dim %2474, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %2483:2 = call @take_along_axis(%2478, %2482) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %2484 = stablehlo.slice %2483#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %2485 = stablehlo.reshape %2484 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %2486 = stablehlo.subtract %2481, %2485 : tensor<64x512xf32>
    %2487 = call @_where_159(%2472, %2486, %cst_12) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2488 = stablehlo.reduce(%2487 init: %cst_146) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %2489 = stablehlo.convert %2472 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_147 = stablehlo.constant dense<0> : tensor<i32>
    %2490 = stablehlo.reduce(%2489 init: %c_147) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2491 = call @argmax(%2470) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %2492 = stablehlo.compare  EQ, %2491, %arg614,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %2493 = stablehlo.and %2492, %2472 : tensor<64x512xi1>
    %2494 = stablehlo.convert %2493 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_148 = stablehlo.constant dense<0> : tensor<i32>
    %2495 = stablehlo.reduce(%2494 init: %c_148) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %2496 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<f32>
    %2497 = stablehlo.broadcast_in_dim %2496, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2498 = call @_where_175(%2472, %2497) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %2499 = stablehlo.negate %2498 : tensor<64x512xf32>
    %2500 = stablehlo.broadcast_in_dim %2499, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2501 = stablehlo.pad %2500, %cst_6, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %2502 = call @take_along_axis_176(%2483#1, %2501) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %2503 = stablehlo.divide %2498, %2480 : tensor<64x512xf32>
    %2504 = stablehlo.broadcast_in_dim %2503, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %2505 = stablehlo.multiply %2504, %2479 : tensor<64x512x30522xf32>
    %2506 = stablehlo.add %2502, %2505 : tensor<64x512x30522xf32>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2507 = stablehlo.reduce(%2506 init: %cst_149) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2508 = stablehlo.reshape %2507 : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2509 = stablehlo.reduce(%2508 init: %cst_150) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %2510 = stablehlo.dot_general %2506, %2465, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %2511 = stablehlo.transpose %2510, dims = [1, 0] : (tensor<30522x768xf32>) -> tensor<768x30522xf32>
    %2512 = stablehlo.dot_general %2506, %2466, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<768x30522xf32>) -> tensor<64x512x768xf32>
    %2513 = stablehlo.transpose %2511, dims = [1, 0] : (tensor<768x30522xf32>) -> tensor<30522x768xf32>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2514 = stablehlo.reduce(%2512 init: %cst_151) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2515 = stablehlo.reshape %2514 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2516 = stablehlo.reshape %2515 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2517 = stablehlo.multiply %2451, %2512 : tensor<64x512x768xf32>
    %2518 = stablehlo.multiply %2512, %2461 : tensor<64x512x768xf32>
    %2519 = stablehlo.broadcast_in_dim %2454, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2520 = stablehlo.multiply %2519, %2517 : tensor<64x512x768xf32>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2521 = stablehlo.reduce(%2520 init: %cst_152) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2522 = stablehlo.reshape %2521 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2523 = stablehlo.broadcast_in_dim %2458, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2524 = stablehlo.multiply %2517, %2523 : tensor<64x512x768xf32>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2525 = stablehlo.reduce(%2524 init: %cst_153) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2526 = stablehlo.reshape %2525 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2527 = stablehlo.reshape %2522 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2528 = stablehlo.multiply %2526, %2457 : tensor<64x512x1xf32>
    %2529 = stablehlo.negate %2518 : tensor<64x512x768xf32>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2530 = stablehlo.reduce(%2529 init: %cst_154) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2531 = stablehlo.reshape %2530 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2532 = stablehlo.reduce(%2528 init: %cst_155) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2533 = stablehlo.reduce(%2531 init: %cst_156) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2534 = stablehlo.multiply %2532, %2447 : tensor<64x512xf32>
    %2535 = stablehlo.negate %2534 : tensor<64x512xf32>
    %2536 = stablehlo.multiply %2535, %2434 : tensor<64x512xf32>
    %2537 = stablehlo.add %2533, %2536 : tensor<64x512xf32>
    %2538 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2539 = stablehlo.divide %2534, %2538 : tensor<64x512xf32>
    %2540 = stablehlo.broadcast_in_dim %2539, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2541 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2542 = stablehlo.divide %2537, %2541 : tensor<64x512xf32>
    %2543 = stablehlo.broadcast_in_dim %2542, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2544 = stablehlo.add %2518, %2543 : tensor<64x512x768xf32>
    %2545 = stablehlo.multiply %2540, %2425 : tensor<64x512x768xf32>
    %2546 = stablehlo.add %2544, %2545 : tensor<64x512x768xf32>
    %2547 = stablehlo.multiply %2403, %2546 : tensor<64x512x768xf32>
    %2548 = stablehlo.multiply %2546, %2421 : tensor<64x512x768xf32>
    %2549 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2550 = stablehlo.multiply %2549, %2547 : tensor<64x512x768xf32>
    %2551 = stablehlo.multiply %2550, %2417 : tensor<64x512x768xf32>
    %2552 = stablehlo.multiply %2551, %2414 : tensor<64x512x768xf32>
    %2553 = stablehlo.add %2551, %2552 : tensor<64x512x768xf32>
    %2554 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2555 = stablehlo.multiply %2554, %2553 : tensor<64x512x768xf32>
    %2556 = stablehlo.add %2548, %2555 : tensor<64x512x768xf32>
    %2557 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2558 = stablehlo.multiply %2557, %2555 : tensor<64x512x768xf32>
    %2559 = stablehlo.multiply %2558, %2408 : tensor<64x512x768xf32>
    %2560 = stablehlo.add %2556, %2559 : tensor<64x512x768xf32>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2561 = stablehlo.reduce(%2560 init: %cst_157) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2562 = stablehlo.reshape %2561 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2563 = stablehlo.reduce(%2562 init: %cst_158) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2564 = stablehlo.broadcast_in_dim %2563, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2565 = stablehlo.reduce(%2564 init: %cst_159) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2566 = stablehlo.dot_general %2560, %2398, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2567 = stablehlo.transpose %2566, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2568 = stablehlo.dot_general %2560, %arg199, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2569 = stablehlo.reduce(%2568 init: %cst_160) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2570 = stablehlo.reshape %2569 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2571 = stablehlo.reshape %2570 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2572 = stablehlo.multiply %2384, %2568 : tensor<64x512x768xf32>
    %2573 = stablehlo.multiply %2568, %2394 : tensor<64x512x768xf32>
    %2574 = stablehlo.broadcast_in_dim %2387, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2575 = stablehlo.multiply %2574, %2572 : tensor<64x512x768xf32>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2576 = stablehlo.reduce(%2575 init: %cst_161) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2577 = stablehlo.reshape %2576 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2578 = stablehlo.broadcast_in_dim %2391, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2579 = stablehlo.multiply %2572, %2578 : tensor<64x512x768xf32>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2580 = stablehlo.reduce(%2579 init: %cst_162) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2581 = stablehlo.reshape %2580 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2582 = stablehlo.reshape %2577 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2583 = stablehlo.multiply %2581, %2390 : tensor<64x512x1xf32>
    %2584 = stablehlo.negate %2573 : tensor<64x512x768xf32>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2585 = stablehlo.reduce(%2584 init: %cst_163) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2586 = stablehlo.reshape %2585 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2587 = stablehlo.reduce(%2583 init: %cst_164) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2588 = stablehlo.reduce(%2586 init: %cst_165) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2589 = stablehlo.multiply %2587, %2380 : tensor<64x512xf32>
    %2590 = stablehlo.negate %2589 : tensor<64x512xf32>
    %2591 = stablehlo.multiply %2590, %2367 : tensor<64x512xf32>
    %2592 = stablehlo.add %2588, %2591 : tensor<64x512xf32>
    %2593 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2594 = stablehlo.divide %2589, %2593 : tensor<64x512xf32>
    %2595 = stablehlo.broadcast_in_dim %2594, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2596 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2597 = stablehlo.divide %2592, %2596 : tensor<64x512xf32>
    %2598 = stablehlo.broadcast_in_dim %2597, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2599 = stablehlo.add %2573, %2598 : tensor<64x512x768xf32>
    %2600 = stablehlo.multiply %2595, %2358 : tensor<64x512x768xf32>
    %2601 = stablehlo.add %2599, %2600 : tensor<64x512x768xf32>
    %2602 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2603 = stablehlo.select %2350, %2601, %2602 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2604 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2605 = stablehlo.divide %2603, %2604 : tensor<64x512x768xf32>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2606 = stablehlo.reduce(%2605 init: %cst_166) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2607 = stablehlo.reshape %2606 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2608 = stablehlo.reduce(%2607 init: %cst_167) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2609 = stablehlo.broadcast_in_dim %2608, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2610 = stablehlo.reduce(%2609 init: %cst_168) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2611 = stablehlo.dot_general %2605, %2342, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2612 = stablehlo.transpose %2611, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2613 = stablehlo.dot_general %2605, %arg62, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2614 = stablehlo.multiply %2323, %2613 : tensor<64x512x3072xf32>
    %2615 = stablehlo.multiply %2613, %2341 : tensor<64x512x3072xf32>
    %2616 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2617 = stablehlo.multiply %2616, %2614 : tensor<64x512x3072xf32>
    %2618 = stablehlo.multiply %2617, %2337 : tensor<64x512x3072xf32>
    %2619 = stablehlo.multiply %2618, %2334 : tensor<64x512x3072xf32>
    %2620 = stablehlo.add %2618, %2619 : tensor<64x512x3072xf32>
    %2621 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2622 = stablehlo.multiply %2621, %2620 : tensor<64x512x3072xf32>
    %2623 = stablehlo.add %2615, %2622 : tensor<64x512x3072xf32>
    %2624 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2625 = stablehlo.multiply %2624, %2622 : tensor<64x512x3072xf32>
    %2626 = stablehlo.multiply %2625, %2328 : tensor<64x512x3072xf32>
    %2627 = stablehlo.add %2623, %2626 : tensor<64x512x3072xf32>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2628 = stablehlo.reduce(%2627 init: %cst_169) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2629 = stablehlo.reshape %2628 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2630 = stablehlo.reduce(%2629 init: %cst_170) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2631 = stablehlo.broadcast_in_dim %2630, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2632 = stablehlo.reduce(%2631 init: %cst_171) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2633 = stablehlo.dot_general %2627, %2318, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2634 = stablehlo.transpose %2633, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2635 = stablehlo.dot_general %2627, %arg66, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2636 = stablehlo.add %2601, %2635 : tensor<64x512x768xf32>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2637 = stablehlo.reduce(%2636 init: %cst_172) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2638 = stablehlo.reshape %2637 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2639 = stablehlo.reshape %2638 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2640 = stablehlo.multiply %2304, %2636 : tensor<64x512x768xf32>
    %2641 = stablehlo.multiply %2636, %2314 : tensor<64x512x768xf32>
    %2642 = stablehlo.broadcast_in_dim %2307, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2643 = stablehlo.multiply %2642, %2640 : tensor<64x512x768xf32>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2644 = stablehlo.reduce(%2643 init: %cst_173) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2645 = stablehlo.reshape %2644 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2646 = stablehlo.broadcast_in_dim %2311, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2647 = stablehlo.multiply %2640, %2646 : tensor<64x512x768xf32>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2648 = stablehlo.reduce(%2647 init: %cst_174) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2649 = stablehlo.reshape %2648 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2650 = stablehlo.reshape %2645 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2651 = stablehlo.multiply %2649, %2310 : tensor<64x512x1xf32>
    %2652 = stablehlo.negate %2641 : tensor<64x512x768xf32>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2653 = stablehlo.reduce(%2652 init: %cst_175) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2654 = stablehlo.reshape %2653 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2655 = stablehlo.reduce(%2651 init: %cst_176) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2656 = stablehlo.reduce(%2654 init: %cst_177) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2657 = stablehlo.multiply %2655, %2300 : tensor<64x512xf32>
    %2658 = stablehlo.negate %2657 : tensor<64x512xf32>
    %2659 = stablehlo.multiply %2658, %2287 : tensor<64x512xf32>
    %2660 = stablehlo.add %2656, %2659 : tensor<64x512xf32>
    %2661 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2662 = stablehlo.divide %2657, %2661 : tensor<64x512xf32>
    %2663 = stablehlo.broadcast_in_dim %2662, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2664 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2665 = stablehlo.divide %2660, %2664 : tensor<64x512xf32>
    %2666 = stablehlo.broadcast_in_dim %2665, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2667 = stablehlo.add %2641, %2666 : tensor<64x512x768xf32>
    %2668 = stablehlo.multiply %2663, %2278 : tensor<64x512x768xf32>
    %2669 = stablehlo.add %2667, %2668 : tensor<64x512x768xf32>
    %2670 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2671 = stablehlo.select %2270, %2669, %2670 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2672 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2673 = stablehlo.divide %2671, %2672 : tensor<64x512x768xf32>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2674 = stablehlo.reduce(%2673 init: %cst_178) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2675 = stablehlo.reshape %2674 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2676 = stablehlo.reduce(%2675 init: %cst_179) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2677 = stablehlo.broadcast_in_dim %2676, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2678 = stablehlo.reduce(%2677 init: %cst_180) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2679 = stablehlo.dot_general %2673, %2262, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2680 = stablehlo.transpose %2679, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2681 = stablehlo.dot_general %2673, %2263, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2682 = stablehlo.reshape %2680 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2683 = stablehlo.transpose %2681, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2684 = stablehlo.dot_general %2683, %2226, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2685 = stablehlo.dot_general %2683, %2260, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2686 = stablehlo.transpose %2685, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2687 = stablehlo.multiply %2684, %2259 : tensor<64x12x512x512xf32>
    %2688 = stablehlo.broadcast_in_dim %2255, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2689 = stablehlo.multiply %2687, %2688 : tensor<64x12x512x512xf32>
    %2690 = stablehlo.multiply %2689, %2248 : tensor<64x12x512x512xf32>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2691 = stablehlo.reduce(%2690 init: %cst_181) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2692 = stablehlo.reshape %2691 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2693 = stablehlo.negate %2692 : tensor<64x12x512x1xf32>
    %2694 = stablehlo.broadcast_in_dim %2250, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2695 = stablehlo.divide %2687, %2694 : tensor<64x12x512x512xf32>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2696 = stablehlo.reduce(%2693 init: %cst_182) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2697 = stablehlo.broadcast_in_dim %2696, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2698 = stablehlo.add %2695, %2697 : tensor<64x12x512x512xf32>
    %2699 = stablehlo.multiply %2698, %2248 : tensor<64x12x512x512xf32>
    %2700 = stablehlo.dot_general %2699, %2238, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2701 = stablehlo.transpose %2700, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2702 = stablehlo.dot_general %2699, %2219, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2703 = stablehlo.transpose %2702, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2704 = stablehlo.broadcast_in_dim %2236, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2705 = stablehlo.divide %2703, %2704 : tensor<64x512x12x64xf32>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2706 = stablehlo.reduce(%2686 init: %cst_183) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2707 = stablehlo.reshape %2706 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2708 = stablehlo.reduce(%2707 init: %cst_184) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2709 = stablehlo.broadcast_in_dim %2708, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2710 = stablehlo.reduce(%2709 init: %cst_185) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2711 = stablehlo.reshape %2710 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2712 = stablehlo.dot_general %2686, %2205, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2713 = stablehlo.transpose %2712, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2714 = stablehlo.dot_general %2686, %2220, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2715 = stablehlo.add %2669, %2714 : tensor<64x512x768xf32>
    %2716 = stablehlo.reshape %2713 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2717 = stablehlo.reduce(%2701 init: %cst_186) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2718 = stablehlo.reshape %2717 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2719 = stablehlo.reduce(%2718 init: %cst_187) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2720 = stablehlo.broadcast_in_dim %2719, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2721 = stablehlo.reduce(%2720 init: %cst_188) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2722 = stablehlo.reshape %2721 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2723 = stablehlo.dot_general %2701, %2205, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2724 = stablehlo.transpose %2723, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2725 = stablehlo.dot_general %2701, %2213, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2726 = stablehlo.add %2715, %2725 : tensor<64x512x768xf32>
    %2727 = stablehlo.reshape %2724 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2728 = stablehlo.reduce(%2705 init: %cst_189) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2729 = stablehlo.reshape %2728 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2730 = stablehlo.reduce(%2729 init: %cst_190) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2731 = stablehlo.broadcast_in_dim %2730, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2732 = stablehlo.reduce(%2731 init: %cst_191) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2733 = stablehlo.reshape %2732 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2734 = stablehlo.dot_general %2705, %2205, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2735 = stablehlo.transpose %2734, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2736 = stablehlo.dot_general %2705, %2206, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2737 = stablehlo.add %2726, %2736 : tensor<64x512x768xf32>
    %2738 = stablehlo.reshape %2735 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2739 = stablehlo.reduce(%2737 init: %cst_192) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2740 = stablehlo.reshape %2739 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2741 = stablehlo.reshape %2740 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2742 = stablehlo.multiply %2191, %2737 : tensor<64x512x768xf32>
    %2743 = stablehlo.multiply %2737, %2201 : tensor<64x512x768xf32>
    %2744 = stablehlo.broadcast_in_dim %2194, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2745 = stablehlo.multiply %2744, %2742 : tensor<64x512x768xf32>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2746 = stablehlo.reduce(%2745 init: %cst_193) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2747 = stablehlo.reshape %2746 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2748 = stablehlo.broadcast_in_dim %2198, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2749 = stablehlo.multiply %2742, %2748 : tensor<64x512x768xf32>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2750 = stablehlo.reduce(%2749 init: %cst_194) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2751 = stablehlo.reshape %2750 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2752 = stablehlo.reshape %2747 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2753 = stablehlo.multiply %2751, %2197 : tensor<64x512x1xf32>
    %2754 = stablehlo.negate %2743 : tensor<64x512x768xf32>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2755 = stablehlo.reduce(%2754 init: %cst_195) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2756 = stablehlo.reshape %2755 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2757 = stablehlo.reduce(%2753 init: %cst_196) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2758 = stablehlo.reduce(%2756 init: %cst_197) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2759 = stablehlo.multiply %2757, %2187 : tensor<64x512xf32>
    %2760 = stablehlo.negate %2759 : tensor<64x512xf32>
    %2761 = stablehlo.multiply %2760, %2174 : tensor<64x512xf32>
    %2762 = stablehlo.add %2758, %2761 : tensor<64x512xf32>
    %2763 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2764 = stablehlo.divide %2759, %2763 : tensor<64x512xf32>
    %2765 = stablehlo.broadcast_in_dim %2764, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2766 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2767 = stablehlo.divide %2762, %2766 : tensor<64x512xf32>
    %2768 = stablehlo.broadcast_in_dim %2767, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2769 = stablehlo.add %2743, %2768 : tensor<64x512x768xf32>
    %2770 = stablehlo.multiply %2765, %2165 : tensor<64x512x768xf32>
    %2771 = stablehlo.add %2769, %2770 : tensor<64x512x768xf32>
    %2772 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2773 = stablehlo.select %2157, %2771, %2772 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2774 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2775 = stablehlo.divide %2773, %2774 : tensor<64x512x768xf32>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2776 = stablehlo.reduce(%2775 init: %cst_198) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2777 = stablehlo.reshape %2776 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2778 = stablehlo.reduce(%2777 init: %cst_199) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2779 = stablehlo.broadcast_in_dim %2778, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2780 = stablehlo.reduce(%2779 init: %cst_200) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2781 = stablehlo.dot_general %2775, %2149, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2782 = stablehlo.transpose %2781, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2783 = stablehlo.dot_general %2775, %arg46, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2784 = stablehlo.multiply %2130, %2783 : tensor<64x512x3072xf32>
    %2785 = stablehlo.multiply %2783, %2148 : tensor<64x512x3072xf32>
    %2786 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2787 = stablehlo.multiply %2786, %2784 : tensor<64x512x3072xf32>
    %2788 = stablehlo.multiply %2787, %2144 : tensor<64x512x3072xf32>
    %2789 = stablehlo.multiply %2788, %2141 : tensor<64x512x3072xf32>
    %2790 = stablehlo.add %2788, %2789 : tensor<64x512x3072xf32>
    %2791 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2792 = stablehlo.multiply %2791, %2790 : tensor<64x512x3072xf32>
    %2793 = stablehlo.add %2785, %2792 : tensor<64x512x3072xf32>
    %2794 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2795 = stablehlo.multiply %2794, %2792 : tensor<64x512x3072xf32>
    %2796 = stablehlo.multiply %2795, %2135 : tensor<64x512x3072xf32>
    %2797 = stablehlo.add %2793, %2796 : tensor<64x512x3072xf32>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2798 = stablehlo.reduce(%2797 init: %cst_201) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2799 = stablehlo.reshape %2798 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2800 = stablehlo.reduce(%2799 init: %cst_202) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2801 = stablehlo.broadcast_in_dim %2800, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2802 = stablehlo.reduce(%2801 init: %cst_203) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2803 = stablehlo.dot_general %2797, %2125, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2804 = stablehlo.transpose %2803, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2805 = stablehlo.dot_general %2797, %arg50, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2806 = stablehlo.add %2771, %2805 : tensor<64x512x768xf32>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2807 = stablehlo.reduce(%2806 init: %cst_204) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2808 = stablehlo.reshape %2807 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2809 = stablehlo.reshape %2808 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2810 = stablehlo.multiply %2111, %2806 : tensor<64x512x768xf32>
    %2811 = stablehlo.multiply %2806, %2121 : tensor<64x512x768xf32>
    %2812 = stablehlo.broadcast_in_dim %2114, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2813 = stablehlo.multiply %2812, %2810 : tensor<64x512x768xf32>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2814 = stablehlo.reduce(%2813 init: %cst_205) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2815 = stablehlo.reshape %2814 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2816 = stablehlo.broadcast_in_dim %2118, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2817 = stablehlo.multiply %2810, %2816 : tensor<64x512x768xf32>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2818 = stablehlo.reduce(%2817 init: %cst_206) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2819 = stablehlo.reshape %2818 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2820 = stablehlo.reshape %2815 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2821 = stablehlo.multiply %2819, %2117 : tensor<64x512x1xf32>
    %2822 = stablehlo.negate %2811 : tensor<64x512x768xf32>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2823 = stablehlo.reduce(%2822 init: %cst_207) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2824 = stablehlo.reshape %2823 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2825 = stablehlo.reduce(%2821 init: %cst_208) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2826 = stablehlo.reduce(%2824 init: %cst_209) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2827 = stablehlo.multiply %2825, %2107 : tensor<64x512xf32>
    %2828 = stablehlo.negate %2827 : tensor<64x512xf32>
    %2829 = stablehlo.multiply %2828, %2094 : tensor<64x512xf32>
    %2830 = stablehlo.add %2826, %2829 : tensor<64x512xf32>
    %2831 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2832 = stablehlo.divide %2827, %2831 : tensor<64x512xf32>
    %2833 = stablehlo.broadcast_in_dim %2832, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2834 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2835 = stablehlo.divide %2830, %2834 : tensor<64x512xf32>
    %2836 = stablehlo.broadcast_in_dim %2835, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2837 = stablehlo.add %2811, %2836 : tensor<64x512x768xf32>
    %2838 = stablehlo.multiply %2833, %2085 : tensor<64x512x768xf32>
    %2839 = stablehlo.add %2837, %2838 : tensor<64x512x768xf32>
    %2840 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2841 = stablehlo.select %2077, %2839, %2840 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2842 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2843 = stablehlo.divide %2841, %2842 : tensor<64x512x768xf32>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2844 = stablehlo.reduce(%2843 init: %cst_210) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2845 = stablehlo.reshape %2844 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2846 = stablehlo.reduce(%2845 init: %cst_211) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2847 = stablehlo.broadcast_in_dim %2846, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2848 = stablehlo.reduce(%2847 init: %cst_212) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2849 = stablehlo.dot_general %2843, %2069, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %2850 = stablehlo.transpose %2849, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %2851 = stablehlo.dot_general %2843, %2070, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %2852 = stablehlo.reshape %2850 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %2853 = stablehlo.transpose %2851, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2854 = stablehlo.dot_general %2853, %2033, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2855 = stablehlo.dot_general %2853, %2067, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %2856 = stablehlo.transpose %2855, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2857 = stablehlo.multiply %2854, %2066 : tensor<64x12x512x512xf32>
    %2858 = stablehlo.broadcast_in_dim %2062, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2859 = stablehlo.multiply %2857, %2858 : tensor<64x12x512x512xf32>
    %2860 = stablehlo.multiply %2859, %2055 : tensor<64x12x512x512xf32>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2861 = stablehlo.reduce(%2860 init: %cst_213) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2862 = stablehlo.reshape %2861 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %2863 = stablehlo.negate %2862 : tensor<64x12x512x1xf32>
    %2864 = stablehlo.broadcast_in_dim %2057, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %2865 = stablehlo.divide %2857, %2864 : tensor<64x12x512x512xf32>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2866 = stablehlo.reduce(%2863 init: %cst_214) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %2867 = stablehlo.broadcast_in_dim %2866, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2868 = stablehlo.add %2865, %2867 : tensor<64x12x512x512xf32>
    %2869 = stablehlo.multiply %2868, %2055 : tensor<64x12x512x512xf32>
    %2870 = stablehlo.dot_general %2869, %2045, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2871 = stablehlo.transpose %2870, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2872 = stablehlo.dot_general %2869, %2026, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2873 = stablehlo.transpose %2872, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2874 = stablehlo.broadcast_in_dim %2043, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2875 = stablehlo.divide %2873, %2874 : tensor<64x512x12x64xf32>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2876 = stablehlo.reduce(%2856 init: %cst_215) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2877 = stablehlo.reshape %2876 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2878 = stablehlo.reduce(%2877 init: %cst_216) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2879 = stablehlo.broadcast_in_dim %2878, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2880 = stablehlo.reduce(%2879 init: %cst_217) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2881 = stablehlo.reshape %2880 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2882 = stablehlo.dot_general %2856, %2012, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2883 = stablehlo.transpose %2882, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2884 = stablehlo.dot_general %2856, %2027, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2885 = stablehlo.add %2839, %2884 : tensor<64x512x768xf32>
    %2886 = stablehlo.reshape %2883 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2887 = stablehlo.reduce(%2871 init: %cst_218) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2888 = stablehlo.reshape %2887 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2889 = stablehlo.reduce(%2888 init: %cst_219) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2890 = stablehlo.broadcast_in_dim %2889, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2891 = stablehlo.reduce(%2890 init: %cst_220) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2892 = stablehlo.reshape %2891 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2893 = stablehlo.dot_general %2871, %2012, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2894 = stablehlo.transpose %2893, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2895 = stablehlo.dot_general %2871, %2020, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2896 = stablehlo.add %2885, %2895 : tensor<64x512x768xf32>
    %2897 = stablehlo.reshape %2894 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2898 = stablehlo.reduce(%2875 init: %cst_221) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2899 = stablehlo.reshape %2898 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2900 = stablehlo.reduce(%2899 init: %cst_222) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2901 = stablehlo.broadcast_in_dim %2900, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2902 = stablehlo.reduce(%2901 init: %cst_223) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %2903 = stablehlo.reshape %2902 : (tensor<12x64xf32>) -> tensor<768xf32>
    %2904 = stablehlo.dot_general %2875, %2012, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %2905 = stablehlo.transpose %2904, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %2906 = stablehlo.dot_general %2875, %2013, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %2907 = stablehlo.add %2896, %2906 : tensor<64x512x768xf32>
    %2908 = stablehlo.reshape %2905 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2909 = stablehlo.reduce(%2907 init: %cst_224) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2910 = stablehlo.reshape %2909 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2911 = stablehlo.reshape %2910 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2912 = stablehlo.multiply %1998, %2907 : tensor<64x512x768xf32>
    %2913 = stablehlo.multiply %2907, %2008 : tensor<64x512x768xf32>
    %2914 = stablehlo.broadcast_in_dim %2001, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2915 = stablehlo.multiply %2914, %2912 : tensor<64x512x768xf32>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2916 = stablehlo.reduce(%2915 init: %cst_225) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2917 = stablehlo.reshape %2916 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2918 = stablehlo.broadcast_in_dim %2005, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2919 = stablehlo.multiply %2912, %2918 : tensor<64x512x768xf32>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2920 = stablehlo.reduce(%2919 init: %cst_226) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2921 = stablehlo.reshape %2920 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2922 = stablehlo.reshape %2917 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2923 = stablehlo.multiply %2921, %2004 : tensor<64x512x1xf32>
    %2924 = stablehlo.negate %2913 : tensor<64x512x768xf32>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2925 = stablehlo.reduce(%2924 init: %cst_227) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2926 = stablehlo.reshape %2925 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2927 = stablehlo.reduce(%2923 init: %cst_228) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2928 = stablehlo.reduce(%2926 init: %cst_229) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2929 = stablehlo.multiply %2927, %1994 : tensor<64x512xf32>
    %2930 = stablehlo.negate %2929 : tensor<64x512xf32>
    %2931 = stablehlo.multiply %2930, %1981 : tensor<64x512xf32>
    %2932 = stablehlo.add %2928, %2931 : tensor<64x512xf32>
    %2933 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2934 = stablehlo.divide %2929, %2933 : tensor<64x512xf32>
    %2935 = stablehlo.broadcast_in_dim %2934, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2936 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2937 = stablehlo.divide %2932, %2936 : tensor<64x512xf32>
    %2938 = stablehlo.broadcast_in_dim %2937, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2939 = stablehlo.add %2913, %2938 : tensor<64x512x768xf32>
    %2940 = stablehlo.multiply %2935, %1972 : tensor<64x512x768xf32>
    %2941 = stablehlo.add %2939, %2940 : tensor<64x512x768xf32>
    %2942 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2943 = stablehlo.select %1964, %2941, %2942 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %2944 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2945 = stablehlo.divide %2943, %2944 : tensor<64x512x768xf32>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2946 = stablehlo.reduce(%2945 init: %cst_230) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2947 = stablehlo.reshape %2946 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2948 = stablehlo.reduce(%2947 init: %cst_231) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2949 = stablehlo.broadcast_in_dim %2948, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2950 = stablehlo.reduce(%2949 init: %cst_232) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2951 = stablehlo.dot_general %2945, %1956, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2952 = stablehlo.transpose %2951, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2953 = stablehlo.dot_general %2945, %arg190, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2954 = stablehlo.multiply %1937, %2953 : tensor<64x512x3072xf32>
    %2955 = stablehlo.multiply %2953, %1955 : tensor<64x512x3072xf32>
    %2956 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2957 = stablehlo.multiply %2956, %2954 : tensor<64x512x3072xf32>
    %2958 = stablehlo.multiply %2957, %1951 : tensor<64x512x3072xf32>
    %2959 = stablehlo.multiply %2958, %1948 : tensor<64x512x3072xf32>
    %2960 = stablehlo.add %2958, %2959 : tensor<64x512x3072xf32>
    %2961 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2962 = stablehlo.multiply %2961, %2960 : tensor<64x512x3072xf32>
    %2963 = stablehlo.add %2955, %2962 : tensor<64x512x3072xf32>
    %2964 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2965 = stablehlo.multiply %2964, %2962 : tensor<64x512x3072xf32>
    %2966 = stablehlo.multiply %2965, %1942 : tensor<64x512x3072xf32>
    %2967 = stablehlo.add %2963, %2966 : tensor<64x512x3072xf32>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2968 = stablehlo.reduce(%2967 init: %cst_233) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2969 = stablehlo.reshape %2968 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2970 = stablehlo.reduce(%2969 init: %cst_234) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2971 = stablehlo.broadcast_in_dim %2970, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2972 = stablehlo.reduce(%2971 init: %cst_235) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2973 = stablehlo.dot_general %2967, %1932, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2974 = stablehlo.transpose %2973, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2975 = stablehlo.dot_general %2967, %arg194, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2976 = stablehlo.add %2941, %2975 : tensor<64x512x768xf32>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2977 = stablehlo.reduce(%2976 init: %cst_236) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2978 = stablehlo.reshape %2977 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2979 = stablehlo.reshape %2978 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2980 = stablehlo.multiply %1918, %2976 : tensor<64x512x768xf32>
    %2981 = stablehlo.multiply %2976, %1928 : tensor<64x512x768xf32>
    %2982 = stablehlo.broadcast_in_dim %1921, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2983 = stablehlo.multiply %2982, %2980 : tensor<64x512x768xf32>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2984 = stablehlo.reduce(%2983 init: %cst_237) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2985 = stablehlo.reshape %2984 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %2986 = stablehlo.broadcast_in_dim %1925, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2987 = stablehlo.multiply %2980, %2986 : tensor<64x512x768xf32>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2988 = stablehlo.reduce(%2987 init: %cst_238) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2989 = stablehlo.reshape %2988 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2990 = stablehlo.reshape %2985 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %2991 = stablehlo.multiply %2989, %1924 : tensor<64x512x1xf32>
    %2992 = stablehlo.negate %2981 : tensor<64x512x768xf32>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2993 = stablehlo.reduce(%2992 init: %cst_239) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2994 = stablehlo.reshape %2993 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2995 = stablehlo.reduce(%2991 init: %cst_240) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2996 = stablehlo.reduce(%2994 init: %cst_241) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2997 = stablehlo.multiply %2995, %1914 : tensor<64x512xf32>
    %2998 = stablehlo.negate %2997 : tensor<64x512xf32>
    %2999 = stablehlo.multiply %2998, %1901 : tensor<64x512xf32>
    %3000 = stablehlo.add %2996, %2999 : tensor<64x512xf32>
    %3001 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3002 = stablehlo.divide %2997, %3001 : tensor<64x512xf32>
    %3003 = stablehlo.broadcast_in_dim %3002, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3004 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3005 = stablehlo.divide %3000, %3004 : tensor<64x512xf32>
    %3006 = stablehlo.broadcast_in_dim %3005, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3007 = stablehlo.add %2981, %3006 : tensor<64x512x768xf32>
    %3008 = stablehlo.multiply %3003, %1892 : tensor<64x512x768xf32>
    %3009 = stablehlo.add %3007, %3008 : tensor<64x512x768xf32>
    %3010 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3011 = stablehlo.select %1884, %3009, %3010 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3012 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3013 = stablehlo.divide %3011, %3012 : tensor<64x512x768xf32>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3014 = stablehlo.reduce(%3013 init: %cst_242) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3015 = stablehlo.reshape %3014 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3016 = stablehlo.reduce(%3015 init: %cst_243) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3017 = stablehlo.broadcast_in_dim %3016, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3018 = stablehlo.reduce(%3017 init: %cst_244) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3019 = stablehlo.dot_general %3013, %1876, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3020 = stablehlo.transpose %3019, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3021 = stablehlo.dot_general %3013, %1877, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3022 = stablehlo.reshape %3020 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3023 = stablehlo.transpose %3021, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3024 = stablehlo.dot_general %3023, %1840, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3025 = stablehlo.dot_general %3023, %1874, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3026 = stablehlo.transpose %3025, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3027 = stablehlo.multiply %3024, %1873 : tensor<64x12x512x512xf32>
    %3028 = stablehlo.broadcast_in_dim %1869, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3029 = stablehlo.multiply %3027, %3028 : tensor<64x12x512x512xf32>
    %3030 = stablehlo.multiply %3029, %1862 : tensor<64x12x512x512xf32>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3031 = stablehlo.reduce(%3030 init: %cst_245) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3032 = stablehlo.reshape %3031 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3033 = stablehlo.negate %3032 : tensor<64x12x512x1xf32>
    %3034 = stablehlo.broadcast_in_dim %1864, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3035 = stablehlo.divide %3027, %3034 : tensor<64x12x512x512xf32>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3036 = stablehlo.reduce(%3033 init: %cst_246) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3037 = stablehlo.broadcast_in_dim %3036, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3038 = stablehlo.add %3035, %3037 : tensor<64x12x512x512xf32>
    %3039 = stablehlo.multiply %3038, %1862 : tensor<64x12x512x512xf32>
    %3040 = stablehlo.dot_general %3039, %1852, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3041 = stablehlo.transpose %3040, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3042 = stablehlo.dot_general %3039, %1833, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3043 = stablehlo.transpose %3042, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3044 = stablehlo.broadcast_in_dim %1850, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3045 = stablehlo.divide %3043, %3044 : tensor<64x512x12x64xf32>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3046 = stablehlo.reduce(%3026 init: %cst_247) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3047 = stablehlo.reshape %3046 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3048 = stablehlo.reduce(%3047 init: %cst_248) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3049 = stablehlo.broadcast_in_dim %3048, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3050 = stablehlo.reduce(%3049 init: %cst_249) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3051 = stablehlo.reshape %3050 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3052 = stablehlo.dot_general %3026, %1819, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3053 = stablehlo.transpose %3052, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3054 = stablehlo.dot_general %3026, %1834, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3055 = stablehlo.add %3009, %3054 : tensor<64x512x768xf32>
    %3056 = stablehlo.reshape %3053 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3057 = stablehlo.reduce(%3041 init: %cst_250) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3058 = stablehlo.reshape %3057 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3059 = stablehlo.reduce(%3058 init: %cst_251) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3060 = stablehlo.broadcast_in_dim %3059, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3061 = stablehlo.reduce(%3060 init: %cst_252) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3062 = stablehlo.reshape %3061 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3063 = stablehlo.dot_general %3041, %1819, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3064 = stablehlo.transpose %3063, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3065 = stablehlo.dot_general %3041, %1827, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3066 = stablehlo.add %3055, %3065 : tensor<64x512x768xf32>
    %3067 = stablehlo.reshape %3064 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3068 = stablehlo.reduce(%3045 init: %cst_253) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3069 = stablehlo.reshape %3068 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3070 = stablehlo.reduce(%3069 init: %cst_254) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3071 = stablehlo.broadcast_in_dim %3070, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3072 = stablehlo.reduce(%3071 init: %cst_255) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3073 = stablehlo.reshape %3072 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3074 = stablehlo.dot_general %3045, %1819, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3075 = stablehlo.transpose %3074, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3076 = stablehlo.dot_general %3045, %1820, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3077 = stablehlo.add %3066, %3076 : tensor<64x512x768xf32>
    %3078 = stablehlo.reshape %3075 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3079 = stablehlo.reduce(%3077 init: %cst_256) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3080 = stablehlo.reshape %3079 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3081 = stablehlo.reshape %3080 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3082 = stablehlo.multiply %1805, %3077 : tensor<64x512x768xf32>
    %3083 = stablehlo.multiply %3077, %1815 : tensor<64x512x768xf32>
    %3084 = stablehlo.broadcast_in_dim %1808, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3085 = stablehlo.multiply %3084, %3082 : tensor<64x512x768xf32>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3086 = stablehlo.reduce(%3085 init: %cst_257) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3087 = stablehlo.reshape %3086 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3088 = stablehlo.broadcast_in_dim %1812, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3089 = stablehlo.multiply %3082, %3088 : tensor<64x512x768xf32>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3090 = stablehlo.reduce(%3089 init: %cst_258) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3091 = stablehlo.reshape %3090 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3092 = stablehlo.reshape %3087 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3093 = stablehlo.multiply %3091, %1811 : tensor<64x512x1xf32>
    %3094 = stablehlo.negate %3083 : tensor<64x512x768xf32>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3095 = stablehlo.reduce(%3094 init: %cst_259) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3096 = stablehlo.reshape %3095 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3097 = stablehlo.reduce(%3093 init: %cst_260) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3098 = stablehlo.reduce(%3096 init: %cst_261) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3099 = stablehlo.multiply %3097, %1801 : tensor<64x512xf32>
    %3100 = stablehlo.negate %3099 : tensor<64x512xf32>
    %3101 = stablehlo.multiply %3100, %1788 : tensor<64x512xf32>
    %3102 = stablehlo.add %3098, %3101 : tensor<64x512xf32>
    %3103 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3104 = stablehlo.divide %3099, %3103 : tensor<64x512xf32>
    %3105 = stablehlo.broadcast_in_dim %3104, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3106 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3107 = stablehlo.divide %3102, %3106 : tensor<64x512xf32>
    %3108 = stablehlo.broadcast_in_dim %3107, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3109 = stablehlo.add %3083, %3108 : tensor<64x512x768xf32>
    %3110 = stablehlo.multiply %3105, %1779 : tensor<64x512x768xf32>
    %3111 = stablehlo.add %3109, %3110 : tensor<64x512x768xf32>
    %3112 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3113 = stablehlo.select %1771, %3111, %3112 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3114 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3115 = stablehlo.divide %3113, %3114 : tensor<64x512x768xf32>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3116 = stablehlo.reduce(%3115 init: %cst_262) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3117 = stablehlo.reshape %3116 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3118 = stablehlo.reduce(%3117 init: %cst_263) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3119 = stablehlo.broadcast_in_dim %3118, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3120 = stablehlo.reduce(%3119 init: %cst_264) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3121 = stablehlo.dot_general %3115, %1763, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3122 = stablehlo.transpose %3121, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3123 = stablehlo.dot_general %3115, %arg174, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3124 = stablehlo.multiply %1744, %3123 : tensor<64x512x3072xf32>
    %3125 = stablehlo.multiply %3123, %1762 : tensor<64x512x3072xf32>
    %3126 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3127 = stablehlo.multiply %3126, %3124 : tensor<64x512x3072xf32>
    %3128 = stablehlo.multiply %3127, %1758 : tensor<64x512x3072xf32>
    %3129 = stablehlo.multiply %3128, %1755 : tensor<64x512x3072xf32>
    %3130 = stablehlo.add %3128, %3129 : tensor<64x512x3072xf32>
    %3131 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3132 = stablehlo.multiply %3131, %3130 : tensor<64x512x3072xf32>
    %3133 = stablehlo.add %3125, %3132 : tensor<64x512x3072xf32>
    %3134 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3135 = stablehlo.multiply %3134, %3132 : tensor<64x512x3072xf32>
    %3136 = stablehlo.multiply %3135, %1749 : tensor<64x512x3072xf32>
    %3137 = stablehlo.add %3133, %3136 : tensor<64x512x3072xf32>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3138 = stablehlo.reduce(%3137 init: %cst_265) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3139 = stablehlo.reshape %3138 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3140 = stablehlo.reduce(%3139 init: %cst_266) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3141 = stablehlo.broadcast_in_dim %3140, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3142 = stablehlo.reduce(%3141 init: %cst_267) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3143 = stablehlo.dot_general %3137, %1739, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3144 = stablehlo.transpose %3143, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3145 = stablehlo.dot_general %3137, %arg178, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3146 = stablehlo.add %3111, %3145 : tensor<64x512x768xf32>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3147 = stablehlo.reduce(%3146 init: %cst_268) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3148 = stablehlo.reshape %3147 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3149 = stablehlo.reshape %3148 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3150 = stablehlo.multiply %1725, %3146 : tensor<64x512x768xf32>
    %3151 = stablehlo.multiply %3146, %1735 : tensor<64x512x768xf32>
    %3152 = stablehlo.broadcast_in_dim %1728, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3153 = stablehlo.multiply %3152, %3150 : tensor<64x512x768xf32>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3154 = stablehlo.reduce(%3153 init: %cst_269) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3155 = stablehlo.reshape %3154 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3156 = stablehlo.broadcast_in_dim %1732, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3157 = stablehlo.multiply %3150, %3156 : tensor<64x512x768xf32>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3158 = stablehlo.reduce(%3157 init: %cst_270) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3159 = stablehlo.reshape %3158 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3160 = stablehlo.reshape %3155 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3161 = stablehlo.multiply %3159, %1731 : tensor<64x512x1xf32>
    %3162 = stablehlo.negate %3151 : tensor<64x512x768xf32>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3163 = stablehlo.reduce(%3162 init: %cst_271) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3164 = stablehlo.reshape %3163 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3165 = stablehlo.reduce(%3161 init: %cst_272) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3166 = stablehlo.reduce(%3164 init: %cst_273) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3167 = stablehlo.multiply %3165, %1721 : tensor<64x512xf32>
    %3168 = stablehlo.negate %3167 : tensor<64x512xf32>
    %3169 = stablehlo.multiply %3168, %1708 : tensor<64x512xf32>
    %3170 = stablehlo.add %3166, %3169 : tensor<64x512xf32>
    %3171 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3172 = stablehlo.divide %3167, %3171 : tensor<64x512xf32>
    %3173 = stablehlo.broadcast_in_dim %3172, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3174 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3175 = stablehlo.divide %3170, %3174 : tensor<64x512xf32>
    %3176 = stablehlo.broadcast_in_dim %3175, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3177 = stablehlo.add %3151, %3176 : tensor<64x512x768xf32>
    %3178 = stablehlo.multiply %3173, %1699 : tensor<64x512x768xf32>
    %3179 = stablehlo.add %3177, %3178 : tensor<64x512x768xf32>
    %3180 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3181 = stablehlo.select %1691, %3179, %3180 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3182 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3183 = stablehlo.divide %3181, %3182 : tensor<64x512x768xf32>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3184 = stablehlo.reduce(%3183 init: %cst_274) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3185 = stablehlo.reshape %3184 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3186 = stablehlo.reduce(%3185 init: %cst_275) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3187 = stablehlo.broadcast_in_dim %3186, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3188 = stablehlo.reduce(%3187 init: %cst_276) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3189 = stablehlo.dot_general %3183, %1683, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3190 = stablehlo.transpose %3189, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3191 = stablehlo.dot_general %3183, %1684, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3192 = stablehlo.reshape %3190 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3193 = stablehlo.transpose %3191, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3194 = stablehlo.dot_general %3193, %1647, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3195 = stablehlo.dot_general %3193, %1681, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3196 = stablehlo.transpose %3195, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3197 = stablehlo.multiply %3194, %1680 : tensor<64x12x512x512xf32>
    %3198 = stablehlo.broadcast_in_dim %1676, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3199 = stablehlo.multiply %3197, %3198 : tensor<64x12x512x512xf32>
    %3200 = stablehlo.multiply %3199, %1669 : tensor<64x12x512x512xf32>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3201 = stablehlo.reduce(%3200 init: %cst_277) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3202 = stablehlo.reshape %3201 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3203 = stablehlo.negate %3202 : tensor<64x12x512x1xf32>
    %3204 = stablehlo.broadcast_in_dim %1671, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3205 = stablehlo.divide %3197, %3204 : tensor<64x12x512x512xf32>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3206 = stablehlo.reduce(%3203 init: %cst_278) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3207 = stablehlo.broadcast_in_dim %3206, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3208 = stablehlo.add %3205, %3207 : tensor<64x12x512x512xf32>
    %3209 = stablehlo.multiply %3208, %1669 : tensor<64x12x512x512xf32>
    %3210 = stablehlo.dot_general %3209, %1659, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3211 = stablehlo.transpose %3210, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3212 = stablehlo.dot_general %3209, %1640, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3213 = stablehlo.transpose %3212, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3214 = stablehlo.broadcast_in_dim %1657, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3215 = stablehlo.divide %3213, %3214 : tensor<64x512x12x64xf32>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3216 = stablehlo.reduce(%3196 init: %cst_279) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3217 = stablehlo.reshape %3216 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3218 = stablehlo.reduce(%3217 init: %cst_280) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3219 = stablehlo.broadcast_in_dim %3218, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3220 = stablehlo.reduce(%3219 init: %cst_281) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3221 = stablehlo.reshape %3220 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3222 = stablehlo.dot_general %3196, %1626, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3223 = stablehlo.transpose %3222, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3224 = stablehlo.dot_general %3196, %1641, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3225 = stablehlo.add %3179, %3224 : tensor<64x512x768xf32>
    %3226 = stablehlo.reshape %3223 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3227 = stablehlo.reduce(%3211 init: %cst_282) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3228 = stablehlo.reshape %3227 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3229 = stablehlo.reduce(%3228 init: %cst_283) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3230 = stablehlo.broadcast_in_dim %3229, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3231 = stablehlo.reduce(%3230 init: %cst_284) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3232 = stablehlo.reshape %3231 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3233 = stablehlo.dot_general %3211, %1626, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3234 = stablehlo.transpose %3233, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3235 = stablehlo.dot_general %3211, %1634, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3236 = stablehlo.add %3225, %3235 : tensor<64x512x768xf32>
    %3237 = stablehlo.reshape %3234 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3238 = stablehlo.reduce(%3215 init: %cst_285) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3239 = stablehlo.reshape %3238 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3240 = stablehlo.reduce(%3239 init: %cst_286) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3241 = stablehlo.broadcast_in_dim %3240, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3242 = stablehlo.reduce(%3241 init: %cst_287) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3243 = stablehlo.reshape %3242 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3244 = stablehlo.dot_general %3215, %1626, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3245 = stablehlo.transpose %3244, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3246 = stablehlo.dot_general %3215, %1627, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3247 = stablehlo.add %3236, %3246 : tensor<64x512x768xf32>
    %3248 = stablehlo.reshape %3245 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3249 = stablehlo.reduce(%3247 init: %cst_288) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3250 = stablehlo.reshape %3249 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3251 = stablehlo.reshape %3250 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3252 = stablehlo.multiply %1612, %3247 : tensor<64x512x768xf32>
    %3253 = stablehlo.multiply %3247, %1622 : tensor<64x512x768xf32>
    %3254 = stablehlo.broadcast_in_dim %1615, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3255 = stablehlo.multiply %3254, %3252 : tensor<64x512x768xf32>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3256 = stablehlo.reduce(%3255 init: %cst_289) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3257 = stablehlo.reshape %3256 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3258 = stablehlo.broadcast_in_dim %1619, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3259 = stablehlo.multiply %3252, %3258 : tensor<64x512x768xf32>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3260 = stablehlo.reduce(%3259 init: %cst_290) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3261 = stablehlo.reshape %3260 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3262 = stablehlo.reshape %3257 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3263 = stablehlo.multiply %3261, %1618 : tensor<64x512x1xf32>
    %3264 = stablehlo.negate %3253 : tensor<64x512x768xf32>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3265 = stablehlo.reduce(%3264 init: %cst_291) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3266 = stablehlo.reshape %3265 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3267 = stablehlo.reduce(%3263 init: %cst_292) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3268 = stablehlo.reduce(%3266 init: %cst_293) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3269 = stablehlo.multiply %3267, %1608 : tensor<64x512xf32>
    %3270 = stablehlo.negate %3269 : tensor<64x512xf32>
    %3271 = stablehlo.multiply %3270, %1595 : tensor<64x512xf32>
    %3272 = stablehlo.add %3268, %3271 : tensor<64x512xf32>
    %3273 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3274 = stablehlo.divide %3269, %3273 : tensor<64x512xf32>
    %3275 = stablehlo.broadcast_in_dim %3274, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3276 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3277 = stablehlo.divide %3272, %3276 : tensor<64x512xf32>
    %3278 = stablehlo.broadcast_in_dim %3277, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3279 = stablehlo.add %3253, %3278 : tensor<64x512x768xf32>
    %3280 = stablehlo.multiply %3275, %1586 : tensor<64x512x768xf32>
    %3281 = stablehlo.add %3279, %3280 : tensor<64x512x768xf32>
    %3282 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3283 = stablehlo.select %1578, %3281, %3282 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3284 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3285 = stablehlo.divide %3283, %3284 : tensor<64x512x768xf32>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3286 = stablehlo.reduce(%3285 init: %cst_294) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3287 = stablehlo.reshape %3286 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3288 = stablehlo.reduce(%3287 init: %cst_295) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3289 = stablehlo.broadcast_in_dim %3288, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3290 = stablehlo.reduce(%3289 init: %cst_296) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3291 = stablehlo.dot_general %3285, %1570, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3292 = stablehlo.transpose %3291, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3293 = stablehlo.dot_general %3285, %arg158, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3294 = stablehlo.multiply %1551, %3293 : tensor<64x512x3072xf32>
    %3295 = stablehlo.multiply %3293, %1569 : tensor<64x512x3072xf32>
    %3296 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3297 = stablehlo.multiply %3296, %3294 : tensor<64x512x3072xf32>
    %3298 = stablehlo.multiply %3297, %1565 : tensor<64x512x3072xf32>
    %3299 = stablehlo.multiply %3298, %1562 : tensor<64x512x3072xf32>
    %3300 = stablehlo.add %3298, %3299 : tensor<64x512x3072xf32>
    %3301 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3302 = stablehlo.multiply %3301, %3300 : tensor<64x512x3072xf32>
    %3303 = stablehlo.add %3295, %3302 : tensor<64x512x3072xf32>
    %3304 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3305 = stablehlo.multiply %3304, %3302 : tensor<64x512x3072xf32>
    %3306 = stablehlo.multiply %3305, %1556 : tensor<64x512x3072xf32>
    %3307 = stablehlo.add %3303, %3306 : tensor<64x512x3072xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3308 = stablehlo.reduce(%3307 init: %cst_297) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3309 = stablehlo.reshape %3308 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3310 = stablehlo.reduce(%3309 init: %cst_298) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3311 = stablehlo.broadcast_in_dim %3310, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3312 = stablehlo.reduce(%3311 init: %cst_299) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3313 = stablehlo.dot_general %3307, %1546, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3314 = stablehlo.transpose %3313, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3315 = stablehlo.dot_general %3307, %arg162, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3316 = stablehlo.add %3281, %3315 : tensor<64x512x768xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3317 = stablehlo.reduce(%3316 init: %cst_300) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3318 = stablehlo.reshape %3317 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3319 = stablehlo.reshape %3318 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3320 = stablehlo.multiply %1532, %3316 : tensor<64x512x768xf32>
    %3321 = stablehlo.multiply %3316, %1542 : tensor<64x512x768xf32>
    %3322 = stablehlo.broadcast_in_dim %1535, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3323 = stablehlo.multiply %3322, %3320 : tensor<64x512x768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3324 = stablehlo.reduce(%3323 init: %cst_301) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3325 = stablehlo.reshape %3324 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3326 = stablehlo.broadcast_in_dim %1539, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3327 = stablehlo.multiply %3320, %3326 : tensor<64x512x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3328 = stablehlo.reduce(%3327 init: %cst_302) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3329 = stablehlo.reshape %3328 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3330 = stablehlo.reshape %3325 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3331 = stablehlo.multiply %3329, %1538 : tensor<64x512x1xf32>
    %3332 = stablehlo.negate %3321 : tensor<64x512x768xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3333 = stablehlo.reduce(%3332 init: %cst_303) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3334 = stablehlo.reshape %3333 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3335 = stablehlo.reduce(%3331 init: %cst_304) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3336 = stablehlo.reduce(%3334 init: %cst_305) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3337 = stablehlo.multiply %3335, %1528 : tensor<64x512xf32>
    %3338 = stablehlo.negate %3337 : tensor<64x512xf32>
    %3339 = stablehlo.multiply %3338, %1515 : tensor<64x512xf32>
    %3340 = stablehlo.add %3336, %3339 : tensor<64x512xf32>
    %3341 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3342 = stablehlo.divide %3337, %3341 : tensor<64x512xf32>
    %3343 = stablehlo.broadcast_in_dim %3342, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3344 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3345 = stablehlo.divide %3340, %3344 : tensor<64x512xf32>
    %3346 = stablehlo.broadcast_in_dim %3345, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3347 = stablehlo.add %3321, %3346 : tensor<64x512x768xf32>
    %3348 = stablehlo.multiply %3343, %1506 : tensor<64x512x768xf32>
    %3349 = stablehlo.add %3347, %3348 : tensor<64x512x768xf32>
    %3350 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3351 = stablehlo.select %1498, %3349, %3350 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3352 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3353 = stablehlo.divide %3351, %3352 : tensor<64x512x768xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3354 = stablehlo.reduce(%3353 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3355 = stablehlo.reshape %3354 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3356 = stablehlo.reduce(%3355 init: %cst_307) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3357 = stablehlo.broadcast_in_dim %3356, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3358 = stablehlo.reduce(%3357 init: %cst_308) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3359 = stablehlo.dot_general %3353, %1490, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3360 = stablehlo.transpose %3359, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3361 = stablehlo.dot_general %3353, %1491, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3362 = stablehlo.reshape %3360 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3363 = stablehlo.transpose %3361, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3364 = stablehlo.dot_general %3363, %1454, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3365 = stablehlo.dot_general %3363, %1488, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3366 = stablehlo.transpose %3365, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3367 = stablehlo.multiply %3364, %1487 : tensor<64x12x512x512xf32>
    %3368 = stablehlo.broadcast_in_dim %1483, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3369 = stablehlo.multiply %3367, %3368 : tensor<64x12x512x512xf32>
    %3370 = stablehlo.multiply %3369, %1476 : tensor<64x12x512x512xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3371 = stablehlo.reduce(%3370 init: %cst_309) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3372 = stablehlo.reshape %3371 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3373 = stablehlo.negate %3372 : tensor<64x12x512x1xf32>
    %3374 = stablehlo.broadcast_in_dim %1478, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3375 = stablehlo.divide %3367, %3374 : tensor<64x12x512x512xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3376 = stablehlo.reduce(%3373 init: %cst_310) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3377 = stablehlo.broadcast_in_dim %3376, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3378 = stablehlo.add %3375, %3377 : tensor<64x12x512x512xf32>
    %3379 = stablehlo.multiply %3378, %1476 : tensor<64x12x512x512xf32>
    %3380 = stablehlo.dot_general %3379, %1466, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3381 = stablehlo.transpose %3380, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3382 = stablehlo.dot_general %3379, %1447, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3383 = stablehlo.transpose %3382, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3384 = stablehlo.broadcast_in_dim %1464, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3385 = stablehlo.divide %3383, %3384 : tensor<64x512x12x64xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3386 = stablehlo.reduce(%3366 init: %cst_311) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3387 = stablehlo.reshape %3386 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3388 = stablehlo.reduce(%3387 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3389 = stablehlo.broadcast_in_dim %3388, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3390 = stablehlo.reduce(%3389 init: %cst_313) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3391 = stablehlo.reshape %3390 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3392 = stablehlo.dot_general %3366, %1433, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3393 = stablehlo.transpose %3392, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3394 = stablehlo.dot_general %3366, %1448, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3395 = stablehlo.add %3349, %3394 : tensor<64x512x768xf32>
    %3396 = stablehlo.reshape %3393 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3397 = stablehlo.reduce(%3381 init: %cst_314) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3398 = stablehlo.reshape %3397 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3399 = stablehlo.reduce(%3398 init: %cst_315) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3400 = stablehlo.broadcast_in_dim %3399, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3401 = stablehlo.reduce(%3400 init: %cst_316) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3402 = stablehlo.reshape %3401 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3403 = stablehlo.dot_general %3381, %1433, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3404 = stablehlo.transpose %3403, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3405 = stablehlo.dot_general %3381, %1441, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3406 = stablehlo.add %3395, %3405 : tensor<64x512x768xf32>
    %3407 = stablehlo.reshape %3404 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3408 = stablehlo.reduce(%3385 init: %cst_317) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3409 = stablehlo.reshape %3408 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3410 = stablehlo.reduce(%3409 init: %cst_318) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3411 = stablehlo.broadcast_in_dim %3410, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3412 = stablehlo.reduce(%3411 init: %cst_319) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3413 = stablehlo.reshape %3412 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3414 = stablehlo.dot_general %3385, %1433, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3415 = stablehlo.transpose %3414, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3416 = stablehlo.dot_general %3385, %1434, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3417 = stablehlo.add %3406, %3416 : tensor<64x512x768xf32>
    %3418 = stablehlo.reshape %3415 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3419 = stablehlo.reduce(%3417 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3420 = stablehlo.reshape %3419 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3421 = stablehlo.reshape %3420 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3422 = stablehlo.multiply %1419, %3417 : tensor<64x512x768xf32>
    %3423 = stablehlo.multiply %3417, %1429 : tensor<64x512x768xf32>
    %3424 = stablehlo.broadcast_in_dim %1422, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3425 = stablehlo.multiply %3424, %3422 : tensor<64x512x768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3426 = stablehlo.reduce(%3425 init: %cst_321) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3427 = stablehlo.reshape %3426 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3428 = stablehlo.broadcast_in_dim %1426, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3429 = stablehlo.multiply %3422, %3428 : tensor<64x512x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3430 = stablehlo.reduce(%3429 init: %cst_322) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3431 = stablehlo.reshape %3430 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3432 = stablehlo.reshape %3427 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3433 = stablehlo.multiply %3431, %1425 : tensor<64x512x1xf32>
    %3434 = stablehlo.negate %3423 : tensor<64x512x768xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3435 = stablehlo.reduce(%3434 init: %cst_323) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3436 = stablehlo.reshape %3435 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3437 = stablehlo.reduce(%3433 init: %cst_324) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3438 = stablehlo.reduce(%3436 init: %cst_325) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3439 = stablehlo.multiply %3437, %1415 : tensor<64x512xf32>
    %3440 = stablehlo.negate %3439 : tensor<64x512xf32>
    %3441 = stablehlo.multiply %3440, %1402 : tensor<64x512xf32>
    %3442 = stablehlo.add %3438, %3441 : tensor<64x512xf32>
    %3443 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3444 = stablehlo.divide %3439, %3443 : tensor<64x512xf32>
    %3445 = stablehlo.broadcast_in_dim %3444, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3446 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3447 = stablehlo.divide %3442, %3446 : tensor<64x512xf32>
    %3448 = stablehlo.broadcast_in_dim %3447, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3449 = stablehlo.add %3423, %3448 : tensor<64x512x768xf32>
    %3450 = stablehlo.multiply %3445, %1393 : tensor<64x512x768xf32>
    %3451 = stablehlo.add %3449, %3450 : tensor<64x512x768xf32>
    %3452 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3453 = stablehlo.select %1385, %3451, %3452 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3454 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3455 = stablehlo.divide %3453, %3454 : tensor<64x512x768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3456 = stablehlo.reduce(%3455 init: %cst_326) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3457 = stablehlo.reshape %3456 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3458 = stablehlo.reduce(%3457 init: %cst_327) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3459 = stablehlo.broadcast_in_dim %3458, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3460 = stablehlo.reduce(%3459 init: %cst_328) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3461 = stablehlo.dot_general %3455, %1377, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3462 = stablehlo.transpose %3461, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3463 = stablehlo.dot_general %3455, %arg142, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3464 = stablehlo.multiply %1358, %3463 : tensor<64x512x3072xf32>
    %3465 = stablehlo.multiply %3463, %1376 : tensor<64x512x3072xf32>
    %3466 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3467 = stablehlo.multiply %3466, %3464 : tensor<64x512x3072xf32>
    %3468 = stablehlo.multiply %3467, %1372 : tensor<64x512x3072xf32>
    %3469 = stablehlo.multiply %3468, %1369 : tensor<64x512x3072xf32>
    %3470 = stablehlo.add %3468, %3469 : tensor<64x512x3072xf32>
    %3471 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3472 = stablehlo.multiply %3471, %3470 : tensor<64x512x3072xf32>
    %3473 = stablehlo.add %3465, %3472 : tensor<64x512x3072xf32>
    %3474 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3475 = stablehlo.multiply %3474, %3472 : tensor<64x512x3072xf32>
    %3476 = stablehlo.multiply %3475, %1363 : tensor<64x512x3072xf32>
    %3477 = stablehlo.add %3473, %3476 : tensor<64x512x3072xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3478 = stablehlo.reduce(%3477 init: %cst_329) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3479 = stablehlo.reshape %3478 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3480 = stablehlo.reduce(%3479 init: %cst_330) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3481 = stablehlo.broadcast_in_dim %3480, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3482 = stablehlo.reduce(%3481 init: %cst_331) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3483 = stablehlo.dot_general %3477, %1353, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3484 = stablehlo.transpose %3483, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3485 = stablehlo.dot_general %3477, %arg146, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3486 = stablehlo.add %3451, %3485 : tensor<64x512x768xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3487 = stablehlo.reduce(%3486 init: %cst_332) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3488 = stablehlo.reshape %3487 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3489 = stablehlo.reshape %3488 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3490 = stablehlo.multiply %1339, %3486 : tensor<64x512x768xf32>
    %3491 = stablehlo.multiply %3486, %1349 : tensor<64x512x768xf32>
    %3492 = stablehlo.broadcast_in_dim %1342, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3493 = stablehlo.multiply %3492, %3490 : tensor<64x512x768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3494 = stablehlo.reduce(%3493 init: %cst_333) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3495 = stablehlo.reshape %3494 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3496 = stablehlo.broadcast_in_dim %1346, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3497 = stablehlo.multiply %3490, %3496 : tensor<64x512x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3498 = stablehlo.reduce(%3497 init: %cst_334) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3499 = stablehlo.reshape %3498 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3500 = stablehlo.reshape %3495 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3501 = stablehlo.multiply %3499, %1345 : tensor<64x512x1xf32>
    %3502 = stablehlo.negate %3491 : tensor<64x512x768xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3503 = stablehlo.reduce(%3502 init: %cst_335) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3504 = stablehlo.reshape %3503 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3505 = stablehlo.reduce(%3501 init: %cst_336) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3506 = stablehlo.reduce(%3504 init: %cst_337) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3507 = stablehlo.multiply %3505, %1335 : tensor<64x512xf32>
    %3508 = stablehlo.negate %3507 : tensor<64x512xf32>
    %3509 = stablehlo.multiply %3508, %1322 : tensor<64x512xf32>
    %3510 = stablehlo.add %3506, %3509 : tensor<64x512xf32>
    %3511 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3512 = stablehlo.divide %3507, %3511 : tensor<64x512xf32>
    %3513 = stablehlo.broadcast_in_dim %3512, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3514 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3515 = stablehlo.divide %3510, %3514 : tensor<64x512xf32>
    %3516 = stablehlo.broadcast_in_dim %3515, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3517 = stablehlo.add %3491, %3516 : tensor<64x512x768xf32>
    %3518 = stablehlo.multiply %3513, %1313 : tensor<64x512x768xf32>
    %3519 = stablehlo.add %3517, %3518 : tensor<64x512x768xf32>
    %3520 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3521 = stablehlo.select %1305, %3519, %3520 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3522 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3523 = stablehlo.divide %3521, %3522 : tensor<64x512x768xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3524 = stablehlo.reduce(%3523 init: %cst_338) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3525 = stablehlo.reshape %3524 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3526 = stablehlo.reduce(%3525 init: %cst_339) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3527 = stablehlo.broadcast_in_dim %3526, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3528 = stablehlo.reduce(%3527 init: %cst_340) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3529 = stablehlo.dot_general %3523, %1297, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3530 = stablehlo.transpose %3529, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3531 = stablehlo.dot_general %3523, %1298, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3532 = stablehlo.reshape %3530 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3533 = stablehlo.transpose %3531, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3534 = stablehlo.dot_general %3533, %1261, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3535 = stablehlo.dot_general %3533, %1295, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3536 = stablehlo.transpose %3535, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3537 = stablehlo.multiply %3534, %1294 : tensor<64x12x512x512xf32>
    %3538 = stablehlo.broadcast_in_dim %1290, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3539 = stablehlo.multiply %3537, %3538 : tensor<64x12x512x512xf32>
    %3540 = stablehlo.multiply %3539, %1283 : tensor<64x12x512x512xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3541 = stablehlo.reduce(%3540 init: %cst_341) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3542 = stablehlo.reshape %3541 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3543 = stablehlo.negate %3542 : tensor<64x12x512x1xf32>
    %3544 = stablehlo.broadcast_in_dim %1285, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3545 = stablehlo.divide %3537, %3544 : tensor<64x12x512x512xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3546 = stablehlo.reduce(%3543 init: %cst_342) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3547 = stablehlo.broadcast_in_dim %3546, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3548 = stablehlo.add %3545, %3547 : tensor<64x12x512x512xf32>
    %3549 = stablehlo.multiply %3548, %1283 : tensor<64x12x512x512xf32>
    %3550 = stablehlo.dot_general %3549, %1273, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3551 = stablehlo.transpose %3550, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3552 = stablehlo.dot_general %3549, %1254, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3553 = stablehlo.transpose %3552, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3554 = stablehlo.broadcast_in_dim %1271, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3555 = stablehlo.divide %3553, %3554 : tensor<64x512x12x64xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3556 = stablehlo.reduce(%3536 init: %cst_343) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3557 = stablehlo.reshape %3556 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3558 = stablehlo.reduce(%3557 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3559 = stablehlo.broadcast_in_dim %3558, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3560 = stablehlo.reduce(%3559 init: %cst_345) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3561 = stablehlo.reshape %3560 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3562 = stablehlo.dot_general %3536, %1240, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3563 = stablehlo.transpose %3562, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3564 = stablehlo.dot_general %3536, %1255, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3565 = stablehlo.add %3519, %3564 : tensor<64x512x768xf32>
    %3566 = stablehlo.reshape %3563 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3567 = stablehlo.reduce(%3551 init: %cst_346) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3568 = stablehlo.reshape %3567 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3569 = stablehlo.reduce(%3568 init: %cst_347) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3570 = stablehlo.broadcast_in_dim %3569, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3571 = stablehlo.reduce(%3570 init: %cst_348) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3572 = stablehlo.reshape %3571 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3573 = stablehlo.dot_general %3551, %1240, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3574 = stablehlo.transpose %3573, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3575 = stablehlo.dot_general %3551, %1248, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3576 = stablehlo.add %3565, %3575 : tensor<64x512x768xf32>
    %3577 = stablehlo.reshape %3574 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3578 = stablehlo.reduce(%3555 init: %cst_349) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3579 = stablehlo.reshape %3578 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3580 = stablehlo.reduce(%3579 init: %cst_350) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3581 = stablehlo.broadcast_in_dim %3580, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3582 = stablehlo.reduce(%3581 init: %cst_351) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3583 = stablehlo.reshape %3582 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3584 = stablehlo.dot_general %3555, %1240, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3585 = stablehlo.transpose %3584, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3586 = stablehlo.dot_general %3555, %1241, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3587 = stablehlo.add %3576, %3586 : tensor<64x512x768xf32>
    %3588 = stablehlo.reshape %3585 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3589 = stablehlo.reduce(%3587 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3590 = stablehlo.reshape %3589 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3591 = stablehlo.reshape %3590 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3592 = stablehlo.multiply %1226, %3587 : tensor<64x512x768xf32>
    %3593 = stablehlo.multiply %3587, %1236 : tensor<64x512x768xf32>
    %3594 = stablehlo.broadcast_in_dim %1229, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3595 = stablehlo.multiply %3594, %3592 : tensor<64x512x768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3596 = stablehlo.reduce(%3595 init: %cst_353) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3597 = stablehlo.reshape %3596 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3598 = stablehlo.broadcast_in_dim %1233, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3599 = stablehlo.multiply %3592, %3598 : tensor<64x512x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3600 = stablehlo.reduce(%3599 init: %cst_354) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3601 = stablehlo.reshape %3600 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3602 = stablehlo.reshape %3597 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3603 = stablehlo.multiply %3601, %1232 : tensor<64x512x1xf32>
    %3604 = stablehlo.negate %3593 : tensor<64x512x768xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3605 = stablehlo.reduce(%3604 init: %cst_355) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3606 = stablehlo.reshape %3605 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3607 = stablehlo.reduce(%3603 init: %cst_356) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3608 = stablehlo.reduce(%3606 init: %cst_357) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3609 = stablehlo.multiply %3607, %1222 : tensor<64x512xf32>
    %3610 = stablehlo.negate %3609 : tensor<64x512xf32>
    %3611 = stablehlo.multiply %3610, %1209 : tensor<64x512xf32>
    %3612 = stablehlo.add %3608, %3611 : tensor<64x512xf32>
    %3613 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3614 = stablehlo.divide %3609, %3613 : tensor<64x512xf32>
    %3615 = stablehlo.broadcast_in_dim %3614, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3616 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3617 = stablehlo.divide %3612, %3616 : tensor<64x512xf32>
    %3618 = stablehlo.broadcast_in_dim %3617, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3619 = stablehlo.add %3593, %3618 : tensor<64x512x768xf32>
    %3620 = stablehlo.multiply %3615, %1200 : tensor<64x512x768xf32>
    %3621 = stablehlo.add %3619, %3620 : tensor<64x512x768xf32>
    %3622 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3623 = stablehlo.select %1192, %3621, %3622 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3624 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3625 = stablehlo.divide %3623, %3624 : tensor<64x512x768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3626 = stablehlo.reduce(%3625 init: %cst_358) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3627 = stablehlo.reshape %3626 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3628 = stablehlo.reduce(%3627 init: %cst_359) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3629 = stablehlo.broadcast_in_dim %3628, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3630 = stablehlo.reduce(%3629 init: %cst_360) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3631 = stablehlo.dot_general %3625, %1184, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3632 = stablehlo.transpose %3631, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3633 = stablehlo.dot_general %3625, %arg126, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3634 = stablehlo.multiply %1165, %3633 : tensor<64x512x3072xf32>
    %3635 = stablehlo.multiply %3633, %1183 : tensor<64x512x3072xf32>
    %3636 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3637 = stablehlo.multiply %3636, %3634 : tensor<64x512x3072xf32>
    %3638 = stablehlo.multiply %3637, %1179 : tensor<64x512x3072xf32>
    %3639 = stablehlo.multiply %3638, %1176 : tensor<64x512x3072xf32>
    %3640 = stablehlo.add %3638, %3639 : tensor<64x512x3072xf32>
    %3641 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3642 = stablehlo.multiply %3641, %3640 : tensor<64x512x3072xf32>
    %3643 = stablehlo.add %3635, %3642 : tensor<64x512x3072xf32>
    %3644 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3645 = stablehlo.multiply %3644, %3642 : tensor<64x512x3072xf32>
    %3646 = stablehlo.multiply %3645, %1170 : tensor<64x512x3072xf32>
    %3647 = stablehlo.add %3643, %3646 : tensor<64x512x3072xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3648 = stablehlo.reduce(%3647 init: %cst_361) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3649 = stablehlo.reshape %3648 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3650 = stablehlo.reduce(%3649 init: %cst_362) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3651 = stablehlo.broadcast_in_dim %3650, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3652 = stablehlo.reduce(%3651 init: %cst_363) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3653 = stablehlo.dot_general %3647, %1160, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3654 = stablehlo.transpose %3653, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3655 = stablehlo.dot_general %3647, %arg130, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3656 = stablehlo.add %3621, %3655 : tensor<64x512x768xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3657 = stablehlo.reduce(%3656 init: %cst_364) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3658 = stablehlo.reshape %3657 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3659 = stablehlo.reshape %3658 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3660 = stablehlo.multiply %1146, %3656 : tensor<64x512x768xf32>
    %3661 = stablehlo.multiply %3656, %1156 : tensor<64x512x768xf32>
    %3662 = stablehlo.broadcast_in_dim %1149, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3663 = stablehlo.multiply %3662, %3660 : tensor<64x512x768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3664 = stablehlo.reduce(%3663 init: %cst_365) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3665 = stablehlo.reshape %3664 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3666 = stablehlo.broadcast_in_dim %1153, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3667 = stablehlo.multiply %3660, %3666 : tensor<64x512x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3668 = stablehlo.reduce(%3667 init: %cst_366) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3669 = stablehlo.reshape %3668 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3670 = stablehlo.reshape %3665 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3671 = stablehlo.multiply %3669, %1152 : tensor<64x512x1xf32>
    %3672 = stablehlo.negate %3661 : tensor<64x512x768xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3673 = stablehlo.reduce(%3672 init: %cst_367) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3674 = stablehlo.reshape %3673 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3675 = stablehlo.reduce(%3671 init: %cst_368) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3676 = stablehlo.reduce(%3674 init: %cst_369) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3677 = stablehlo.multiply %3675, %1142 : tensor<64x512xf32>
    %3678 = stablehlo.negate %3677 : tensor<64x512xf32>
    %3679 = stablehlo.multiply %3678, %1129 : tensor<64x512xf32>
    %3680 = stablehlo.add %3676, %3679 : tensor<64x512xf32>
    %3681 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3682 = stablehlo.divide %3677, %3681 : tensor<64x512xf32>
    %3683 = stablehlo.broadcast_in_dim %3682, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3684 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3685 = stablehlo.divide %3680, %3684 : tensor<64x512xf32>
    %3686 = stablehlo.broadcast_in_dim %3685, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3687 = stablehlo.add %3661, %3686 : tensor<64x512x768xf32>
    %3688 = stablehlo.multiply %3683, %1120 : tensor<64x512x768xf32>
    %3689 = stablehlo.add %3687, %3688 : tensor<64x512x768xf32>
    %3690 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3691 = stablehlo.select %1112, %3689, %3690 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3692 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3693 = stablehlo.divide %3691, %3692 : tensor<64x512x768xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3694 = stablehlo.reduce(%3693 init: %cst_370) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3695 = stablehlo.reshape %3694 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3696 = stablehlo.reduce(%3695 init: %cst_371) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3697 = stablehlo.broadcast_in_dim %3696, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3698 = stablehlo.reduce(%3697 init: %cst_372) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3699 = stablehlo.dot_general %3693, %1104, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3700 = stablehlo.transpose %3699, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3701 = stablehlo.dot_general %3693, %1105, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3702 = stablehlo.reshape %3700 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3703 = stablehlo.transpose %3701, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3704 = stablehlo.dot_general %3703, %1068, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3705 = stablehlo.dot_general %3703, %1102, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3706 = stablehlo.transpose %3705, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3707 = stablehlo.multiply %3704, %1101 : tensor<64x12x512x512xf32>
    %3708 = stablehlo.broadcast_in_dim %1097, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3709 = stablehlo.multiply %3707, %3708 : tensor<64x12x512x512xf32>
    %3710 = stablehlo.multiply %3709, %1090 : tensor<64x12x512x512xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3711 = stablehlo.reduce(%3710 init: %cst_373) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3712 = stablehlo.reshape %3711 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3713 = stablehlo.negate %3712 : tensor<64x12x512x1xf32>
    %3714 = stablehlo.broadcast_in_dim %1092, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3715 = stablehlo.divide %3707, %3714 : tensor<64x12x512x512xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3716 = stablehlo.reduce(%3713 init: %cst_374) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3717 = stablehlo.broadcast_in_dim %3716, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3718 = stablehlo.add %3715, %3717 : tensor<64x12x512x512xf32>
    %3719 = stablehlo.multiply %3718, %1090 : tensor<64x12x512x512xf32>
    %3720 = stablehlo.dot_general %3719, %1080, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3721 = stablehlo.transpose %3720, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3722 = stablehlo.dot_general %3719, %1061, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3723 = stablehlo.transpose %3722, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3724 = stablehlo.broadcast_in_dim %1078, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3725 = stablehlo.divide %3723, %3724 : tensor<64x512x12x64xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3726 = stablehlo.reduce(%3706 init: %cst_375) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3727 = stablehlo.reshape %3726 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3728 = stablehlo.reduce(%3727 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3729 = stablehlo.broadcast_in_dim %3728, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3730 = stablehlo.reduce(%3729 init: %cst_377) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3731 = stablehlo.reshape %3730 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3732 = stablehlo.dot_general %3706, %1047, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3733 = stablehlo.transpose %3732, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3734 = stablehlo.dot_general %3706, %1062, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3735 = stablehlo.add %3689, %3734 : tensor<64x512x768xf32>
    %3736 = stablehlo.reshape %3733 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3737 = stablehlo.reduce(%3721 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3738 = stablehlo.reshape %3737 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3739 = stablehlo.reduce(%3738 init: %cst_379) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3740 = stablehlo.broadcast_in_dim %3739, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3741 = stablehlo.reduce(%3740 init: %cst_380) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3742 = stablehlo.reshape %3741 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3743 = stablehlo.dot_general %3721, %1047, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3744 = stablehlo.transpose %3743, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3745 = stablehlo.dot_general %3721, %1055, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3746 = stablehlo.add %3735, %3745 : tensor<64x512x768xf32>
    %3747 = stablehlo.reshape %3744 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3748 = stablehlo.reduce(%3725 init: %cst_381) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3749 = stablehlo.reshape %3748 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3750 = stablehlo.reduce(%3749 init: %cst_382) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3751 = stablehlo.broadcast_in_dim %3750, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3752 = stablehlo.reduce(%3751 init: %cst_383) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3753 = stablehlo.reshape %3752 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3754 = stablehlo.dot_general %3725, %1047, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3755 = stablehlo.transpose %3754, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3756 = stablehlo.dot_general %3725, %1048, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3757 = stablehlo.add %3746, %3756 : tensor<64x512x768xf32>
    %3758 = stablehlo.reshape %3755 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3759 = stablehlo.reduce(%3757 init: %cst_384) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3760 = stablehlo.reshape %3759 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3761 = stablehlo.reshape %3760 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3762 = stablehlo.multiply %1033, %3757 : tensor<64x512x768xf32>
    %3763 = stablehlo.multiply %3757, %1043 : tensor<64x512x768xf32>
    %3764 = stablehlo.broadcast_in_dim %1036, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3765 = stablehlo.multiply %3764, %3762 : tensor<64x512x768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3766 = stablehlo.reduce(%3765 init: %cst_385) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3767 = stablehlo.reshape %3766 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3768 = stablehlo.broadcast_in_dim %1040, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3769 = stablehlo.multiply %3762, %3768 : tensor<64x512x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3770 = stablehlo.reduce(%3769 init: %cst_386) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3771 = stablehlo.reshape %3770 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3772 = stablehlo.reshape %3767 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3773 = stablehlo.multiply %3771, %1039 : tensor<64x512x1xf32>
    %3774 = stablehlo.negate %3763 : tensor<64x512x768xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3775 = stablehlo.reduce(%3774 init: %cst_387) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3776 = stablehlo.reshape %3775 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3777 = stablehlo.reduce(%3773 init: %cst_388) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3778 = stablehlo.reduce(%3776 init: %cst_389) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3779 = stablehlo.multiply %3777, %1029 : tensor<64x512xf32>
    %3780 = stablehlo.negate %3779 : tensor<64x512xf32>
    %3781 = stablehlo.multiply %3780, %1016 : tensor<64x512xf32>
    %3782 = stablehlo.add %3778, %3781 : tensor<64x512xf32>
    %3783 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3784 = stablehlo.divide %3779, %3783 : tensor<64x512xf32>
    %3785 = stablehlo.broadcast_in_dim %3784, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3786 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3787 = stablehlo.divide %3782, %3786 : tensor<64x512xf32>
    %3788 = stablehlo.broadcast_in_dim %3787, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3789 = stablehlo.add %3763, %3788 : tensor<64x512x768xf32>
    %3790 = stablehlo.multiply %3785, %1007 : tensor<64x512x768xf32>
    %3791 = stablehlo.add %3789, %3790 : tensor<64x512x768xf32>
    %3792 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3793 = stablehlo.select %999, %3791, %3792 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3794 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3795 = stablehlo.divide %3793, %3794 : tensor<64x512x768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3796 = stablehlo.reduce(%3795 init: %cst_390) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3797 = stablehlo.reshape %3796 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3798 = stablehlo.reduce(%3797 init: %cst_391) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3799 = stablehlo.broadcast_in_dim %3798, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3800 = stablehlo.reduce(%3799 init: %cst_392) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3801 = stablehlo.dot_general %3795, %991, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3802 = stablehlo.transpose %3801, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3803 = stablehlo.dot_general %3795, %arg110, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3804 = stablehlo.multiply %972, %3803 : tensor<64x512x3072xf32>
    %3805 = stablehlo.multiply %3803, %990 : tensor<64x512x3072xf32>
    %3806 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3807 = stablehlo.multiply %3806, %3804 : tensor<64x512x3072xf32>
    %3808 = stablehlo.multiply %3807, %986 : tensor<64x512x3072xf32>
    %3809 = stablehlo.multiply %3808, %983 : tensor<64x512x3072xf32>
    %3810 = stablehlo.add %3808, %3809 : tensor<64x512x3072xf32>
    %3811 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3812 = stablehlo.multiply %3811, %3810 : tensor<64x512x3072xf32>
    %3813 = stablehlo.add %3805, %3812 : tensor<64x512x3072xf32>
    %3814 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3815 = stablehlo.multiply %3814, %3812 : tensor<64x512x3072xf32>
    %3816 = stablehlo.multiply %3815, %977 : tensor<64x512x3072xf32>
    %3817 = stablehlo.add %3813, %3816 : tensor<64x512x3072xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3818 = stablehlo.reduce(%3817 init: %cst_393) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3819 = stablehlo.reshape %3818 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3820 = stablehlo.reduce(%3819 init: %cst_394) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3821 = stablehlo.broadcast_in_dim %3820, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3822 = stablehlo.reduce(%3821 init: %cst_395) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3823 = stablehlo.dot_general %3817, %967, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3824 = stablehlo.transpose %3823, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3825 = stablehlo.dot_general %3817, %arg114, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3826 = stablehlo.add %3791, %3825 : tensor<64x512x768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3827 = stablehlo.reduce(%3826 init: %cst_396) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3828 = stablehlo.reshape %3827 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3829 = stablehlo.reshape %3828 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3830 = stablehlo.multiply %953, %3826 : tensor<64x512x768xf32>
    %3831 = stablehlo.multiply %3826, %963 : tensor<64x512x768xf32>
    %3832 = stablehlo.broadcast_in_dim %956, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3833 = stablehlo.multiply %3832, %3830 : tensor<64x512x768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3834 = stablehlo.reduce(%3833 init: %cst_397) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3835 = stablehlo.reshape %3834 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3836 = stablehlo.broadcast_in_dim %960, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3837 = stablehlo.multiply %3830, %3836 : tensor<64x512x768xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3838 = stablehlo.reduce(%3837 init: %cst_398) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3839 = stablehlo.reshape %3838 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3840 = stablehlo.reshape %3835 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3841 = stablehlo.multiply %3839, %959 : tensor<64x512x1xf32>
    %3842 = stablehlo.negate %3831 : tensor<64x512x768xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3843 = stablehlo.reduce(%3842 init: %cst_399) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3844 = stablehlo.reshape %3843 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3845 = stablehlo.reduce(%3841 init: %cst_400) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3846 = stablehlo.reduce(%3844 init: %cst_401) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3847 = stablehlo.multiply %3845, %949 : tensor<64x512xf32>
    %3848 = stablehlo.negate %3847 : tensor<64x512xf32>
    %3849 = stablehlo.multiply %3848, %936 : tensor<64x512xf32>
    %3850 = stablehlo.add %3846, %3849 : tensor<64x512xf32>
    %3851 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3852 = stablehlo.divide %3847, %3851 : tensor<64x512xf32>
    %3853 = stablehlo.broadcast_in_dim %3852, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3854 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3855 = stablehlo.divide %3850, %3854 : tensor<64x512xf32>
    %3856 = stablehlo.broadcast_in_dim %3855, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3857 = stablehlo.add %3831, %3856 : tensor<64x512x768xf32>
    %3858 = stablehlo.multiply %3853, %927 : tensor<64x512x768xf32>
    %3859 = stablehlo.add %3857, %3858 : tensor<64x512x768xf32>
    %3860 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3861 = stablehlo.select %919, %3859, %3860 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3862 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3863 = stablehlo.divide %3861, %3862 : tensor<64x512x768xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3864 = stablehlo.reduce(%3863 init: %cst_402) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3865 = stablehlo.reshape %3864 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3866 = stablehlo.reduce(%3865 init: %cst_403) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3867 = stablehlo.broadcast_in_dim %3866, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3868 = stablehlo.reduce(%3867 init: %cst_404) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3869 = stablehlo.dot_general %3863, %911, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %3870 = stablehlo.transpose %3869, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %3871 = stablehlo.dot_general %3863, %912, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %3872 = stablehlo.reshape %3870 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %3873 = stablehlo.transpose %3871, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3874 = stablehlo.dot_general %3873, %875, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3875 = stablehlo.dot_general %3873, %909, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %3876 = stablehlo.transpose %3875, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3877 = stablehlo.multiply %3874, %908 : tensor<64x12x512x512xf32>
    %3878 = stablehlo.broadcast_in_dim %904, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3879 = stablehlo.multiply %3877, %3878 : tensor<64x12x512x512xf32>
    %3880 = stablehlo.multiply %3879, %897 : tensor<64x12x512x512xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3881 = stablehlo.reduce(%3880 init: %cst_405) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3882 = stablehlo.reshape %3881 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %3883 = stablehlo.negate %3882 : tensor<64x12x512x1xf32>
    %3884 = stablehlo.broadcast_in_dim %899, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %3885 = stablehlo.divide %3877, %3884 : tensor<64x12x512x512xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3886 = stablehlo.reduce(%3883 init: %cst_406) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %3887 = stablehlo.broadcast_in_dim %3886, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3888 = stablehlo.add %3885, %3887 : tensor<64x12x512x512xf32>
    %3889 = stablehlo.multiply %3888, %897 : tensor<64x12x512x512xf32>
    %3890 = stablehlo.dot_general %3889, %887, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3891 = stablehlo.transpose %3890, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3892 = stablehlo.dot_general %3889, %868, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3893 = stablehlo.transpose %3892, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3894 = stablehlo.broadcast_in_dim %885, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3895 = stablehlo.divide %3893, %3894 : tensor<64x512x12x64xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3896 = stablehlo.reduce(%3876 init: %cst_407) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3897 = stablehlo.reshape %3896 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3898 = stablehlo.reduce(%3897 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3899 = stablehlo.broadcast_in_dim %3898, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3900 = stablehlo.reduce(%3899 init: %cst_409) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3901 = stablehlo.reshape %3900 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3902 = stablehlo.dot_general %3876, %854, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3903 = stablehlo.transpose %3902, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3904 = stablehlo.dot_general %3876, %869, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3905 = stablehlo.add %3859, %3904 : tensor<64x512x768xf32>
    %3906 = stablehlo.reshape %3903 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3907 = stablehlo.reduce(%3891 init: %cst_410) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3908 = stablehlo.reshape %3907 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3909 = stablehlo.reduce(%3908 init: %cst_411) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3910 = stablehlo.broadcast_in_dim %3909, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3911 = stablehlo.reduce(%3910 init: %cst_412) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3912 = stablehlo.reshape %3911 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3913 = stablehlo.dot_general %3891, %854, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3914 = stablehlo.transpose %3913, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3915 = stablehlo.dot_general %3891, %862, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3916 = stablehlo.add %3905, %3915 : tensor<64x512x768xf32>
    %3917 = stablehlo.reshape %3914 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3918 = stablehlo.reduce(%3895 init: %cst_413) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3919 = stablehlo.reshape %3918 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3920 = stablehlo.reduce(%3919 init: %cst_414) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3921 = stablehlo.broadcast_in_dim %3920, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3922 = stablehlo.reduce(%3921 init: %cst_415) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %3923 = stablehlo.reshape %3922 : (tensor<12x64xf32>) -> tensor<768xf32>
    %3924 = stablehlo.dot_general %3895, %854, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %3925 = stablehlo.transpose %3924, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %3926 = stablehlo.dot_general %3895, %855, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %3927 = stablehlo.add %3916, %3926 : tensor<64x512x768xf32>
    %3928 = stablehlo.reshape %3925 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3929 = stablehlo.reduce(%3927 init: %cst_416) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3930 = stablehlo.reshape %3929 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3931 = stablehlo.reshape %3930 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3932 = stablehlo.multiply %840, %3927 : tensor<64x512x768xf32>
    %3933 = stablehlo.multiply %3927, %850 : tensor<64x512x768xf32>
    %3934 = stablehlo.broadcast_in_dim %843, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3935 = stablehlo.multiply %3934, %3932 : tensor<64x512x768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3936 = stablehlo.reduce(%3935 init: %cst_417) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3937 = stablehlo.reshape %3936 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3938 = stablehlo.broadcast_in_dim %847, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3939 = stablehlo.multiply %3932, %3938 : tensor<64x512x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3940 = stablehlo.reduce(%3939 init: %cst_418) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3941 = stablehlo.reshape %3940 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3942 = stablehlo.reshape %3937 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %3943 = stablehlo.multiply %3941, %846 : tensor<64x512x1xf32>
    %3944 = stablehlo.negate %3933 : tensor<64x512x768xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3945 = stablehlo.reduce(%3944 init: %cst_419) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3946 = stablehlo.reshape %3945 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3947 = stablehlo.reduce(%3943 init: %cst_420) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3948 = stablehlo.reduce(%3946 init: %cst_421) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3949 = stablehlo.multiply %3947, %836 : tensor<64x512xf32>
    %3950 = stablehlo.negate %3949 : tensor<64x512xf32>
    %3951 = stablehlo.multiply %3950, %823 : tensor<64x512xf32>
    %3952 = stablehlo.add %3948, %3951 : tensor<64x512xf32>
    %3953 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3954 = stablehlo.divide %3949, %3953 : tensor<64x512xf32>
    %3955 = stablehlo.broadcast_in_dim %3954, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3956 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %3957 = stablehlo.divide %3952, %3956 : tensor<64x512xf32>
    %3958 = stablehlo.broadcast_in_dim %3957, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3959 = stablehlo.add %3933, %3958 : tensor<64x512x768xf32>
    %3960 = stablehlo.multiply %3955, %814 : tensor<64x512x768xf32>
    %3961 = stablehlo.add %3959, %3960 : tensor<64x512x768xf32>
    %3962 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3963 = stablehlo.select %806, %3961, %3962 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %3964 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %3965 = stablehlo.divide %3963, %3964 : tensor<64x512x768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3966 = stablehlo.reduce(%3965 init: %cst_422) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3967 = stablehlo.reshape %3966 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3968 = stablehlo.reduce(%3967 init: %cst_423) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3969 = stablehlo.broadcast_in_dim %3968, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3970 = stablehlo.reduce(%3969 init: %cst_424) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3971 = stablehlo.dot_general %3965, %798, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3972 = stablehlo.transpose %3971, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3973 = stablehlo.dot_general %3965, %arg94, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3974 = stablehlo.multiply %779, %3973 : tensor<64x512x3072xf32>
    %3975 = stablehlo.multiply %3973, %797 : tensor<64x512x3072xf32>
    %3976 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3977 = stablehlo.multiply %3976, %3974 : tensor<64x512x3072xf32>
    %3978 = stablehlo.multiply %3977, %793 : tensor<64x512x3072xf32>
    %3979 = stablehlo.multiply %3978, %790 : tensor<64x512x3072xf32>
    %3980 = stablehlo.add %3978, %3979 : tensor<64x512x3072xf32>
    %3981 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3982 = stablehlo.multiply %3981, %3980 : tensor<64x512x3072xf32>
    %3983 = stablehlo.add %3975, %3982 : tensor<64x512x3072xf32>
    %3984 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3985 = stablehlo.multiply %3984, %3982 : tensor<64x512x3072xf32>
    %3986 = stablehlo.multiply %3985, %784 : tensor<64x512x3072xf32>
    %3987 = stablehlo.add %3983, %3986 : tensor<64x512x3072xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3988 = stablehlo.reduce(%3987 init: %cst_425) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3989 = stablehlo.reshape %3988 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3990 = stablehlo.reduce(%3989 init: %cst_426) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3991 = stablehlo.broadcast_in_dim %3990, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3992 = stablehlo.reduce(%3991 init: %cst_427) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3993 = stablehlo.dot_general %3987, %774, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3994 = stablehlo.transpose %3993, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3995 = stablehlo.dot_general %3987, %arg98, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3996 = stablehlo.add %3961, %3995 : tensor<64x512x768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3997 = stablehlo.reduce(%3996 init: %cst_428) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3998 = stablehlo.reshape %3997 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %3999 = stablehlo.reshape %3998 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4000 = stablehlo.multiply %760, %3996 : tensor<64x512x768xf32>
    %4001 = stablehlo.multiply %3996, %770 : tensor<64x512x768xf32>
    %4002 = stablehlo.broadcast_in_dim %763, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4003 = stablehlo.multiply %4002, %4000 : tensor<64x512x768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4004 = stablehlo.reduce(%4003 init: %cst_429) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4005 = stablehlo.reshape %4004 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4006 = stablehlo.broadcast_in_dim %767, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4007 = stablehlo.multiply %4000, %4006 : tensor<64x512x768xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4008 = stablehlo.reduce(%4007 init: %cst_430) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4009 = stablehlo.reshape %4008 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4010 = stablehlo.reshape %4005 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4011 = stablehlo.multiply %4009, %766 : tensor<64x512x1xf32>
    %4012 = stablehlo.negate %4001 : tensor<64x512x768xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4013 = stablehlo.reduce(%4012 init: %cst_431) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4014 = stablehlo.reshape %4013 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4015 = stablehlo.reduce(%4011 init: %cst_432) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4016 = stablehlo.reduce(%4014 init: %cst_433) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4017 = stablehlo.multiply %4015, %756 : tensor<64x512xf32>
    %4018 = stablehlo.negate %4017 : tensor<64x512xf32>
    %4019 = stablehlo.multiply %4018, %743 : tensor<64x512xf32>
    %4020 = stablehlo.add %4016, %4019 : tensor<64x512xf32>
    %4021 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4022 = stablehlo.divide %4017, %4021 : tensor<64x512xf32>
    %4023 = stablehlo.broadcast_in_dim %4022, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4024 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4025 = stablehlo.divide %4020, %4024 : tensor<64x512xf32>
    %4026 = stablehlo.broadcast_in_dim %4025, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4027 = stablehlo.add %4001, %4026 : tensor<64x512x768xf32>
    %4028 = stablehlo.multiply %4023, %734 : tensor<64x512x768xf32>
    %4029 = stablehlo.add %4027, %4028 : tensor<64x512x768xf32>
    %4030 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4031 = stablehlo.select %726, %4029, %4030 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4032 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4033 = stablehlo.divide %4031, %4032 : tensor<64x512x768xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4034 = stablehlo.reduce(%4033 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4035 = stablehlo.reshape %4034 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4036 = stablehlo.reduce(%4035 init: %cst_435) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4037 = stablehlo.broadcast_in_dim %4036, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4038 = stablehlo.reduce(%4037 init: %cst_436) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4039 = stablehlo.dot_general %4033, %718, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4040 = stablehlo.transpose %4039, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4041 = stablehlo.dot_general %4033, %719, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4042 = stablehlo.reshape %4040 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4043 = stablehlo.transpose %4041, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4044 = stablehlo.dot_general %4043, %682, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4045 = stablehlo.dot_general %4043, %716, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4046 = stablehlo.transpose %4045, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4047 = stablehlo.multiply %4044, %715 : tensor<64x12x512x512xf32>
    %4048 = stablehlo.broadcast_in_dim %711, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4049 = stablehlo.multiply %4047, %4048 : tensor<64x12x512x512xf32>
    %4050 = stablehlo.multiply %4049, %704 : tensor<64x12x512x512xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4051 = stablehlo.reduce(%4050 init: %cst_437) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4052 = stablehlo.reshape %4051 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4053 = stablehlo.negate %4052 : tensor<64x12x512x1xf32>
    %4054 = stablehlo.broadcast_in_dim %706, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4055 = stablehlo.divide %4047, %4054 : tensor<64x12x512x512xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4056 = stablehlo.reduce(%4053 init: %cst_438) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4057 = stablehlo.broadcast_in_dim %4056, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4058 = stablehlo.add %4055, %4057 : tensor<64x12x512x512xf32>
    %4059 = stablehlo.multiply %4058, %704 : tensor<64x12x512x512xf32>
    %4060 = stablehlo.dot_general %4059, %694, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4061 = stablehlo.transpose %4060, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4062 = stablehlo.dot_general %4059, %675, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4063 = stablehlo.transpose %4062, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4064 = stablehlo.broadcast_in_dim %692, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4065 = stablehlo.divide %4063, %4064 : tensor<64x512x12x64xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4066 = stablehlo.reduce(%4046 init: %cst_439) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4067 = stablehlo.reshape %4066 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4068 = stablehlo.reduce(%4067 init: %cst_440) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4069 = stablehlo.broadcast_in_dim %4068, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4070 = stablehlo.reduce(%4069 init: %cst_441) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4071 = stablehlo.reshape %4070 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4072 = stablehlo.dot_general %4046, %661, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4073 = stablehlo.transpose %4072, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4074 = stablehlo.dot_general %4046, %676, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4075 = stablehlo.add %4029, %4074 : tensor<64x512x768xf32>
    %4076 = stablehlo.reshape %4073 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4077 = stablehlo.reduce(%4061 init: %cst_442) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4078 = stablehlo.reshape %4077 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4079 = stablehlo.reduce(%4078 init: %cst_443) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4080 = stablehlo.broadcast_in_dim %4079, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4081 = stablehlo.reduce(%4080 init: %cst_444) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4082 = stablehlo.reshape %4081 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4083 = stablehlo.dot_general %4061, %661, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4084 = stablehlo.transpose %4083, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4085 = stablehlo.dot_general %4061, %669, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4086 = stablehlo.add %4075, %4085 : tensor<64x512x768xf32>
    %4087 = stablehlo.reshape %4084 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4088 = stablehlo.reduce(%4065 init: %cst_445) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4089 = stablehlo.reshape %4088 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4090 = stablehlo.reduce(%4089 init: %cst_446) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4091 = stablehlo.broadcast_in_dim %4090, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4092 = stablehlo.reduce(%4091 init: %cst_447) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4093 = stablehlo.reshape %4092 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4094 = stablehlo.dot_general %4065, %661, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4095 = stablehlo.transpose %4094, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4096 = stablehlo.dot_general %4065, %662, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4097 = stablehlo.add %4086, %4096 : tensor<64x512x768xf32>
    %4098 = stablehlo.reshape %4095 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4099 = stablehlo.reduce(%4097 init: %cst_448) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4100 = stablehlo.reshape %4099 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4101 = stablehlo.reshape %4100 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4102 = stablehlo.multiply %647, %4097 : tensor<64x512x768xf32>
    %4103 = stablehlo.multiply %4097, %657 : tensor<64x512x768xf32>
    %4104 = stablehlo.broadcast_in_dim %650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4105 = stablehlo.multiply %4104, %4102 : tensor<64x512x768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4106 = stablehlo.reduce(%4105 init: %cst_449) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4107 = stablehlo.reshape %4106 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4108 = stablehlo.broadcast_in_dim %654, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4109 = stablehlo.multiply %4102, %4108 : tensor<64x512x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4110 = stablehlo.reduce(%4109 init: %cst_450) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4111 = stablehlo.reshape %4110 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4112 = stablehlo.reshape %4107 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4113 = stablehlo.multiply %4111, %653 : tensor<64x512x1xf32>
    %4114 = stablehlo.negate %4103 : tensor<64x512x768xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4115 = stablehlo.reduce(%4114 init: %cst_451) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4116 = stablehlo.reshape %4115 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4117 = stablehlo.reduce(%4113 init: %cst_452) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4118 = stablehlo.reduce(%4116 init: %cst_453) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4119 = stablehlo.multiply %4117, %643 : tensor<64x512xf32>
    %4120 = stablehlo.negate %4119 : tensor<64x512xf32>
    %4121 = stablehlo.multiply %4120, %630 : tensor<64x512xf32>
    %4122 = stablehlo.add %4118, %4121 : tensor<64x512xf32>
    %4123 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4124 = stablehlo.divide %4119, %4123 : tensor<64x512xf32>
    %4125 = stablehlo.broadcast_in_dim %4124, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4126 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4127 = stablehlo.divide %4122, %4126 : tensor<64x512xf32>
    %4128 = stablehlo.broadcast_in_dim %4127, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4129 = stablehlo.add %4103, %4128 : tensor<64x512x768xf32>
    %4130 = stablehlo.multiply %4125, %621 : tensor<64x512x768xf32>
    %4131 = stablehlo.add %4129, %4130 : tensor<64x512x768xf32>
    %4132 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4133 = stablehlo.select %613, %4131, %4132 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4134 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4135 = stablehlo.divide %4133, %4134 : tensor<64x512x768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4136 = stablehlo.reduce(%4135 init: %cst_454) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4137 = stablehlo.reshape %4136 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4138 = stablehlo.reduce(%4137 init: %cst_455) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4139 = stablehlo.broadcast_in_dim %4138, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4140 = stablehlo.reduce(%4139 init: %cst_456) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4141 = stablehlo.dot_general %4135, %605, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4142 = stablehlo.transpose %4141, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4143 = stablehlo.dot_general %4135, %arg78, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4144 = stablehlo.multiply %586, %4143 : tensor<64x512x3072xf32>
    %4145 = stablehlo.multiply %4143, %604 : tensor<64x512x3072xf32>
    %4146 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4147 = stablehlo.multiply %4146, %4144 : tensor<64x512x3072xf32>
    %4148 = stablehlo.multiply %4147, %600 : tensor<64x512x3072xf32>
    %4149 = stablehlo.multiply %4148, %597 : tensor<64x512x3072xf32>
    %4150 = stablehlo.add %4148, %4149 : tensor<64x512x3072xf32>
    %4151 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4152 = stablehlo.multiply %4151, %4150 : tensor<64x512x3072xf32>
    %4153 = stablehlo.add %4145, %4152 : tensor<64x512x3072xf32>
    %4154 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4155 = stablehlo.multiply %4154, %4152 : tensor<64x512x3072xf32>
    %4156 = stablehlo.multiply %4155, %591 : tensor<64x512x3072xf32>
    %4157 = stablehlo.add %4153, %4156 : tensor<64x512x3072xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4158 = stablehlo.reduce(%4157 init: %cst_457) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4159 = stablehlo.reshape %4158 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4160 = stablehlo.reduce(%4159 init: %cst_458) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4161 = stablehlo.broadcast_in_dim %4160, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4162 = stablehlo.reduce(%4161 init: %cst_459) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4163 = stablehlo.dot_general %4157, %581, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4164 = stablehlo.transpose %4163, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4165 = stablehlo.dot_general %4157, %arg82, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4166 = stablehlo.add %4131, %4165 : tensor<64x512x768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4167 = stablehlo.reduce(%4166 init: %cst_460) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4168 = stablehlo.reshape %4167 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4169 = stablehlo.reshape %4168 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4170 = stablehlo.multiply %567, %4166 : tensor<64x512x768xf32>
    %4171 = stablehlo.multiply %4166, %577 : tensor<64x512x768xf32>
    %4172 = stablehlo.broadcast_in_dim %570, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4173 = stablehlo.multiply %4172, %4170 : tensor<64x512x768xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4174 = stablehlo.reduce(%4173 init: %cst_461) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4175 = stablehlo.reshape %4174 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4176 = stablehlo.broadcast_in_dim %574, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4177 = stablehlo.multiply %4170, %4176 : tensor<64x512x768xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4178 = stablehlo.reduce(%4177 init: %cst_462) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4179 = stablehlo.reshape %4178 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4180 = stablehlo.reshape %4175 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4181 = stablehlo.multiply %4179, %573 : tensor<64x512x1xf32>
    %4182 = stablehlo.negate %4171 : tensor<64x512x768xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4183 = stablehlo.reduce(%4182 init: %cst_463) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4184 = stablehlo.reshape %4183 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4185 = stablehlo.reduce(%4181 init: %cst_464) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4186 = stablehlo.reduce(%4184 init: %cst_465) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4187 = stablehlo.multiply %4185, %563 : tensor<64x512xf32>
    %4188 = stablehlo.negate %4187 : tensor<64x512xf32>
    %4189 = stablehlo.multiply %4188, %550 : tensor<64x512xf32>
    %4190 = stablehlo.add %4186, %4189 : tensor<64x512xf32>
    %4191 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4192 = stablehlo.divide %4187, %4191 : tensor<64x512xf32>
    %4193 = stablehlo.broadcast_in_dim %4192, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4194 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4195 = stablehlo.divide %4190, %4194 : tensor<64x512xf32>
    %4196 = stablehlo.broadcast_in_dim %4195, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4197 = stablehlo.add %4171, %4196 : tensor<64x512x768xf32>
    %4198 = stablehlo.multiply %4193, %541 : tensor<64x512x768xf32>
    %4199 = stablehlo.add %4197, %4198 : tensor<64x512x768xf32>
    %4200 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4201 = stablehlo.select %533, %4199, %4200 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4202 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4203 = stablehlo.divide %4201, %4202 : tensor<64x512x768xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4204 = stablehlo.reduce(%4203 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4205 = stablehlo.reshape %4204 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4206 = stablehlo.reduce(%4205 init: %cst_467) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4207 = stablehlo.broadcast_in_dim %4206, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4208 = stablehlo.reduce(%4207 init: %cst_468) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4209 = stablehlo.dot_general %4203, %525, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4210 = stablehlo.transpose %4209, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4211 = stablehlo.dot_general %4203, %526, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4212 = stablehlo.reshape %4210 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4213 = stablehlo.transpose %4211, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4214 = stablehlo.dot_general %4213, %489, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4215 = stablehlo.dot_general %4213, %523, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4216 = stablehlo.transpose %4215, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4217 = stablehlo.multiply %4214, %522 : tensor<64x12x512x512xf32>
    %4218 = stablehlo.broadcast_in_dim %518, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4219 = stablehlo.multiply %4217, %4218 : tensor<64x12x512x512xf32>
    %4220 = stablehlo.multiply %4219, %511 : tensor<64x12x512x512xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4221 = stablehlo.reduce(%4220 init: %cst_469) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4222 = stablehlo.reshape %4221 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4223 = stablehlo.negate %4222 : tensor<64x12x512x1xf32>
    %4224 = stablehlo.broadcast_in_dim %513, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4225 = stablehlo.divide %4217, %4224 : tensor<64x12x512x512xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4226 = stablehlo.reduce(%4223 init: %cst_470) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4227 = stablehlo.broadcast_in_dim %4226, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4228 = stablehlo.add %4225, %4227 : tensor<64x12x512x512xf32>
    %4229 = stablehlo.multiply %4228, %511 : tensor<64x12x512x512xf32>
    %4230 = stablehlo.dot_general %4229, %501, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4231 = stablehlo.transpose %4230, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4232 = stablehlo.dot_general %4229, %482, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4233 = stablehlo.transpose %4232, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4234 = stablehlo.broadcast_in_dim %499, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4235 = stablehlo.divide %4233, %4234 : tensor<64x512x12x64xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4236 = stablehlo.reduce(%4216 init: %cst_471) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4237 = stablehlo.reshape %4236 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4238 = stablehlo.reduce(%4237 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4239 = stablehlo.broadcast_in_dim %4238, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4240 = stablehlo.reduce(%4239 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4241 = stablehlo.reshape %4240 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4242 = stablehlo.dot_general %4216, %468, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4243 = stablehlo.transpose %4242, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4244 = stablehlo.dot_general %4216, %483, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4245 = stablehlo.add %4199, %4244 : tensor<64x512x768xf32>
    %4246 = stablehlo.reshape %4243 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4247 = stablehlo.reduce(%4231 init: %cst_474) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4248 = stablehlo.reshape %4247 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4249 = stablehlo.reduce(%4248 init: %cst_475) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4250 = stablehlo.broadcast_in_dim %4249, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4251 = stablehlo.reduce(%4250 init: %cst_476) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4252 = stablehlo.reshape %4251 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4253 = stablehlo.dot_general %4231, %468, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4254 = stablehlo.transpose %4253, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4255 = stablehlo.dot_general %4231, %476, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4256 = stablehlo.add %4245, %4255 : tensor<64x512x768xf32>
    %4257 = stablehlo.reshape %4254 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4258 = stablehlo.reduce(%4235 init: %cst_477) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4259 = stablehlo.reshape %4258 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4260 = stablehlo.reduce(%4259 init: %cst_478) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4261 = stablehlo.broadcast_in_dim %4260, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4262 = stablehlo.reduce(%4261 init: %cst_479) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4263 = stablehlo.reshape %4262 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4264 = stablehlo.dot_general %4235, %468, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4265 = stablehlo.transpose %4264, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4266 = stablehlo.dot_general %4235, %469, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4267 = stablehlo.add %4256, %4266 : tensor<64x512x768xf32>
    %4268 = stablehlo.reshape %4265 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4269 = stablehlo.reduce(%4267 init: %cst_480) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4270 = stablehlo.reshape %4269 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4271 = stablehlo.reshape %4270 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4272 = stablehlo.multiply %454, %4267 : tensor<64x512x768xf32>
    %4273 = stablehlo.multiply %4267, %464 : tensor<64x512x768xf32>
    %4274 = stablehlo.broadcast_in_dim %457, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4275 = stablehlo.multiply %4274, %4272 : tensor<64x512x768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4276 = stablehlo.reduce(%4275 init: %cst_481) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4277 = stablehlo.reshape %4276 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4278 = stablehlo.broadcast_in_dim %461, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4279 = stablehlo.multiply %4272, %4278 : tensor<64x512x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4280 = stablehlo.reduce(%4279 init: %cst_482) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4281 = stablehlo.reshape %4280 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4282 = stablehlo.reshape %4277 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4283 = stablehlo.multiply %4281, %460 : tensor<64x512x1xf32>
    %4284 = stablehlo.negate %4273 : tensor<64x512x768xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4285 = stablehlo.reduce(%4284 init: %cst_483) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4286 = stablehlo.reshape %4285 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4287 = stablehlo.reduce(%4283 init: %cst_484) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4288 = stablehlo.reduce(%4286 init: %cst_485) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4289 = stablehlo.multiply %4287, %450 : tensor<64x512xf32>
    %4290 = stablehlo.negate %4289 : tensor<64x512xf32>
    %4291 = stablehlo.multiply %4290, %437 : tensor<64x512xf32>
    %4292 = stablehlo.add %4288, %4291 : tensor<64x512xf32>
    %4293 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4294 = stablehlo.divide %4289, %4293 : tensor<64x512xf32>
    %4295 = stablehlo.broadcast_in_dim %4294, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4296 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4297 = stablehlo.divide %4292, %4296 : tensor<64x512xf32>
    %4298 = stablehlo.broadcast_in_dim %4297, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4299 = stablehlo.add %4273, %4298 : tensor<64x512x768xf32>
    %4300 = stablehlo.multiply %4295, %428 : tensor<64x512x768xf32>
    %4301 = stablehlo.add %4299, %4300 : tensor<64x512x768xf32>
    %4302 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4303 = stablehlo.select %420, %4301, %4302 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4304 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4305 = stablehlo.divide %4303, %4304 : tensor<64x512x768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4306 = stablehlo.reduce(%4305 init: %cst_486) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4307 = stablehlo.reshape %4306 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4308 = stablehlo.reduce(%4307 init: %cst_487) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4309 = stablehlo.broadcast_in_dim %4308, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4310 = stablehlo.reduce(%4309 init: %cst_488) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4311 = stablehlo.dot_general %4305, %412, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4312 = stablehlo.transpose %4311, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4313 = stablehlo.dot_general %4305, %arg30, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4314 = stablehlo.multiply %393, %4313 : tensor<64x512x3072xf32>
    %4315 = stablehlo.multiply %4313, %411 : tensor<64x512x3072xf32>
    %4316 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4317 = stablehlo.multiply %4316, %4314 : tensor<64x512x3072xf32>
    %4318 = stablehlo.multiply %4317, %407 : tensor<64x512x3072xf32>
    %4319 = stablehlo.multiply %4318, %404 : tensor<64x512x3072xf32>
    %4320 = stablehlo.add %4318, %4319 : tensor<64x512x3072xf32>
    %4321 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4322 = stablehlo.multiply %4321, %4320 : tensor<64x512x3072xf32>
    %4323 = stablehlo.add %4315, %4322 : tensor<64x512x3072xf32>
    %4324 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4325 = stablehlo.multiply %4324, %4322 : tensor<64x512x3072xf32>
    %4326 = stablehlo.multiply %4325, %398 : tensor<64x512x3072xf32>
    %4327 = stablehlo.add %4323, %4326 : tensor<64x512x3072xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4328 = stablehlo.reduce(%4327 init: %cst_489) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4329 = stablehlo.reshape %4328 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4330 = stablehlo.reduce(%4329 init: %cst_490) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4331 = stablehlo.broadcast_in_dim %4330, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4332 = stablehlo.reduce(%4331 init: %cst_491) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4333 = stablehlo.dot_general %4327, %388, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4334 = stablehlo.transpose %4333, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4335 = stablehlo.dot_general %4327, %arg34, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4336 = stablehlo.add %4301, %4335 : tensor<64x512x768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4337 = stablehlo.reduce(%4336 init: %cst_492) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4338 = stablehlo.reshape %4337 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4339 = stablehlo.reshape %4338 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4340 = stablehlo.multiply %374, %4336 : tensor<64x512x768xf32>
    %4341 = stablehlo.multiply %4336, %384 : tensor<64x512x768xf32>
    %4342 = stablehlo.broadcast_in_dim %377, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4343 = stablehlo.multiply %4342, %4340 : tensor<64x512x768xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4344 = stablehlo.reduce(%4343 init: %cst_493) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4345 = stablehlo.reshape %4344 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4346 = stablehlo.broadcast_in_dim %381, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4347 = stablehlo.multiply %4340, %4346 : tensor<64x512x768xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4348 = stablehlo.reduce(%4347 init: %cst_494) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4349 = stablehlo.reshape %4348 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4350 = stablehlo.reshape %4345 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4351 = stablehlo.multiply %4349, %380 : tensor<64x512x1xf32>
    %4352 = stablehlo.negate %4341 : tensor<64x512x768xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4353 = stablehlo.reduce(%4352 init: %cst_495) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4354 = stablehlo.reshape %4353 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4355 = stablehlo.reduce(%4351 init: %cst_496) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4356 = stablehlo.reduce(%4354 init: %cst_497) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4357 = stablehlo.multiply %4355, %370 : tensor<64x512xf32>
    %4358 = stablehlo.negate %4357 : tensor<64x512xf32>
    %4359 = stablehlo.multiply %4358, %357 : tensor<64x512xf32>
    %4360 = stablehlo.add %4356, %4359 : tensor<64x512xf32>
    %4361 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4362 = stablehlo.divide %4357, %4361 : tensor<64x512xf32>
    %4363 = stablehlo.broadcast_in_dim %4362, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4364 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4365 = stablehlo.divide %4360, %4364 : tensor<64x512xf32>
    %4366 = stablehlo.broadcast_in_dim %4365, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4367 = stablehlo.add %4341, %4366 : tensor<64x512x768xf32>
    %4368 = stablehlo.multiply %4363, %348 : tensor<64x512x768xf32>
    %4369 = stablehlo.add %4367, %4368 : tensor<64x512x768xf32>
    %4370 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4371 = stablehlo.select %340, %4369, %4370 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4372 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4373 = stablehlo.divide %4371, %4372 : tensor<64x512x768xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4374 = stablehlo.reduce(%4373 init: %cst_498) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4375 = stablehlo.reshape %4374 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_499 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4376 = stablehlo.reduce(%4375 init: %cst_499) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4377 = stablehlo.broadcast_in_dim %4376, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_500 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4378 = stablehlo.reduce(%4377 init: %cst_500) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4379 = stablehlo.dot_general %4373, %332, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4380 = stablehlo.transpose %4379, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4381 = stablehlo.dot_general %4373, %333, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4382 = stablehlo.reshape %4380 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4383 = stablehlo.transpose %4381, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4384 = stablehlo.dot_general %4383, %296, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4385 = stablehlo.dot_general %4383, %330, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4386 = stablehlo.transpose %4385, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4387 = stablehlo.multiply %4384, %329 : tensor<64x12x512x512xf32>
    %4388 = stablehlo.broadcast_in_dim %325, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4389 = stablehlo.multiply %4387, %4388 : tensor<64x12x512x512xf32>
    %4390 = stablehlo.multiply %4389, %318 : tensor<64x12x512x512xf32>
    %cst_501 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4391 = stablehlo.reduce(%4390 init: %cst_501) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4392 = stablehlo.reshape %4391 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4393 = stablehlo.negate %4392 : tensor<64x12x512x1xf32>
    %4394 = stablehlo.broadcast_in_dim %320, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4395 = stablehlo.divide %4387, %4394 : tensor<64x12x512x512xf32>
    %cst_502 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4396 = stablehlo.reduce(%4393 init: %cst_502) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4397 = stablehlo.broadcast_in_dim %4396, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4398 = stablehlo.add %4395, %4397 : tensor<64x12x512x512xf32>
    %4399 = stablehlo.multiply %4398, %318 : tensor<64x12x512x512xf32>
    %4400 = stablehlo.dot_general %4399, %308, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4401 = stablehlo.transpose %4400, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4402 = stablehlo.dot_general %4399, %289, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4403 = stablehlo.transpose %4402, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4404 = stablehlo.broadcast_in_dim %306, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4405 = stablehlo.divide %4403, %4404 : tensor<64x512x12x64xf32>
    %cst_503 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4406 = stablehlo.reduce(%4386 init: %cst_503) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4407 = stablehlo.reshape %4406 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_504 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4408 = stablehlo.reduce(%4407 init: %cst_504) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4409 = stablehlo.broadcast_in_dim %4408, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_505 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4410 = stablehlo.reduce(%4409 init: %cst_505) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4411 = stablehlo.reshape %4410 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4412 = stablehlo.dot_general %4386, %275, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4413 = stablehlo.transpose %4412, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4414 = stablehlo.dot_general %4386, %290, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4415 = stablehlo.add %4369, %4414 : tensor<64x512x768xf32>
    %4416 = stablehlo.reshape %4413 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_506 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4417 = stablehlo.reduce(%4401 init: %cst_506) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4418 = stablehlo.reshape %4417 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_507 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4419 = stablehlo.reduce(%4418 init: %cst_507) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4420 = stablehlo.broadcast_in_dim %4419, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_508 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4421 = stablehlo.reduce(%4420 init: %cst_508) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4422 = stablehlo.reshape %4421 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4423 = stablehlo.dot_general %4401, %275, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4424 = stablehlo.transpose %4423, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4425 = stablehlo.dot_general %4401, %283, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4426 = stablehlo.add %4415, %4425 : tensor<64x512x768xf32>
    %4427 = stablehlo.reshape %4424 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_509 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4428 = stablehlo.reduce(%4405 init: %cst_509) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4429 = stablehlo.reshape %4428 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_510 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4430 = stablehlo.reduce(%4429 init: %cst_510) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4431 = stablehlo.broadcast_in_dim %4430, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_511 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4432 = stablehlo.reduce(%4431 init: %cst_511) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4433 = stablehlo.reshape %4432 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4434 = stablehlo.dot_general %4405, %275, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4435 = stablehlo.transpose %4434, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4436 = stablehlo.dot_general %4405, %276, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4437 = stablehlo.add %4426, %4436 : tensor<64x512x768xf32>
    %4438 = stablehlo.reshape %4435 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_512 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4439 = stablehlo.reduce(%4437 init: %cst_512) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4440 = stablehlo.reshape %4439 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4441 = stablehlo.reshape %4440 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4442 = stablehlo.multiply %261, %4437 : tensor<64x512x768xf32>
    %4443 = stablehlo.multiply %4437, %271 : tensor<64x512x768xf32>
    %4444 = stablehlo.broadcast_in_dim %264, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4445 = stablehlo.multiply %4444, %4442 : tensor<64x512x768xf32>
    %cst_513 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4446 = stablehlo.reduce(%4445 init: %cst_513) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4447 = stablehlo.reshape %4446 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4448 = stablehlo.broadcast_in_dim %268, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4449 = stablehlo.multiply %4442, %4448 : tensor<64x512x768xf32>
    %cst_514 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4450 = stablehlo.reduce(%4449 init: %cst_514) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4451 = stablehlo.reshape %4450 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4452 = stablehlo.reshape %4447 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4453 = stablehlo.multiply %4451, %267 : tensor<64x512x1xf32>
    %4454 = stablehlo.negate %4443 : tensor<64x512x768xf32>
    %cst_515 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4455 = stablehlo.reduce(%4454 init: %cst_515) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4456 = stablehlo.reshape %4455 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_516 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4457 = stablehlo.reduce(%4453 init: %cst_516) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_517 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4458 = stablehlo.reduce(%4456 init: %cst_517) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4459 = stablehlo.multiply %4457, %257 : tensor<64x512xf32>
    %4460 = stablehlo.negate %4459 : tensor<64x512xf32>
    %4461 = stablehlo.multiply %4460, %244 : tensor<64x512xf32>
    %4462 = stablehlo.add %4458, %4461 : tensor<64x512xf32>
    %4463 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4464 = stablehlo.divide %4459, %4463 : tensor<64x512xf32>
    %4465 = stablehlo.broadcast_in_dim %4464, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4466 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4467 = stablehlo.divide %4462, %4466 : tensor<64x512xf32>
    %4468 = stablehlo.broadcast_in_dim %4467, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4469 = stablehlo.add %4443, %4468 : tensor<64x512x768xf32>
    %4470 = stablehlo.multiply %4465, %235 : tensor<64x512x768xf32>
    %4471 = stablehlo.add %4469, %4470 : tensor<64x512x768xf32>
    %4472 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4473 = stablehlo.select %227, %4471, %4472 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4474 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4475 = stablehlo.divide %4473, %4474 : tensor<64x512x768xf32>
    %cst_518 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4476 = stablehlo.reduce(%4475 init: %cst_518) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4477 = stablehlo.reshape %4476 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_519 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4478 = stablehlo.reduce(%4477 init: %cst_519) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4479 = stablehlo.broadcast_in_dim %4478, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_520 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4480 = stablehlo.reduce(%4479 init: %cst_520) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4481 = stablehlo.dot_general %4475, %219, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %4482 = stablehlo.transpose %4481, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %4483 = stablehlo.dot_general %4475, %arg14, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %4484 = stablehlo.multiply %200, %4483 : tensor<64x512x3072xf32>
    %4485 = stablehlo.multiply %4483, %218 : tensor<64x512x3072xf32>
    %4486 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4487 = stablehlo.multiply %4486, %4484 : tensor<64x512x3072xf32>
    %4488 = stablehlo.multiply %4487, %214 : tensor<64x512x3072xf32>
    %4489 = stablehlo.multiply %4488, %211 : tensor<64x512x3072xf32>
    %4490 = stablehlo.add %4488, %4489 : tensor<64x512x3072xf32>
    %4491 = stablehlo.broadcast_in_dim %cst_25, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4492 = stablehlo.multiply %4491, %4490 : tensor<64x512x3072xf32>
    %4493 = stablehlo.add %4485, %4492 : tensor<64x512x3072xf32>
    %4494 = stablehlo.broadcast_in_dim %cst_24, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %4495 = stablehlo.multiply %4494, %4492 : tensor<64x512x3072xf32>
    %4496 = stablehlo.multiply %4495, %205 : tensor<64x512x3072xf32>
    %4497 = stablehlo.add %4493, %4496 : tensor<64x512x3072xf32>
    %cst_521 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4498 = stablehlo.reduce(%4497 init: %cst_521) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4499 = stablehlo.reshape %4498 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_522 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4500 = stablehlo.reduce(%4499 init: %cst_522) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4501 = stablehlo.broadcast_in_dim %4500, dims = [1] : (tensor<3072xf32>) -> tensor<1x3072xf32>
    %cst_523 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4502 = stablehlo.reduce(%4501 init: %cst_523) applies stablehlo.add across dimensions = [0] : (tensor<1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %4503 = stablehlo.dot_general %4497, %195, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %4504 = stablehlo.transpose %4503, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %4505 = stablehlo.dot_general %4497, %arg18, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %4506 = stablehlo.add %4471, %4505 : tensor<64x512x768xf32>
    %cst_524 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4507 = stablehlo.reduce(%4506 init: %cst_524) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4508 = stablehlo.reshape %4507 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4509 = stablehlo.reshape %4508 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4510 = stablehlo.multiply %181, %4506 : tensor<64x512x768xf32>
    %4511 = stablehlo.multiply %4506, %191 : tensor<64x512x768xf32>
    %4512 = stablehlo.broadcast_in_dim %184, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4513 = stablehlo.multiply %4512, %4510 : tensor<64x512x768xf32>
    %cst_525 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4514 = stablehlo.reduce(%4513 init: %cst_525) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4515 = stablehlo.reshape %4514 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4516 = stablehlo.broadcast_in_dim %188, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4517 = stablehlo.multiply %4510, %4516 : tensor<64x512x768xf32>
    %cst_526 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4518 = stablehlo.reduce(%4517 init: %cst_526) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4519 = stablehlo.reshape %4518 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4520 = stablehlo.reshape %4515 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4521 = stablehlo.multiply %4519, %187 : tensor<64x512x1xf32>
    %4522 = stablehlo.negate %4511 : tensor<64x512x768xf32>
    %cst_527 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4523 = stablehlo.reduce(%4522 init: %cst_527) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4524 = stablehlo.reshape %4523 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_528 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4525 = stablehlo.reduce(%4521 init: %cst_528) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_529 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4526 = stablehlo.reduce(%4524 init: %cst_529) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4527 = stablehlo.multiply %4525, %177 : tensor<64x512xf32>
    %4528 = stablehlo.negate %4527 : tensor<64x512xf32>
    %4529 = stablehlo.multiply %4528, %164 : tensor<64x512xf32>
    %4530 = stablehlo.add %4526, %4529 : tensor<64x512xf32>
    %4531 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4532 = stablehlo.divide %4527, %4531 : tensor<64x512xf32>
    %4533 = stablehlo.broadcast_in_dim %4532, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4534 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4535 = stablehlo.divide %4530, %4534 : tensor<64x512xf32>
    %4536 = stablehlo.broadcast_in_dim %4535, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4537 = stablehlo.add %4511, %4536 : tensor<64x512x768xf32>
    %4538 = stablehlo.multiply %4533, %155 : tensor<64x512x768xf32>
    %4539 = stablehlo.add %4537, %4538 : tensor<64x512x768xf32>
    %4540 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4541 = stablehlo.select %147, %4539, %4540 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4542 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4543 = stablehlo.divide %4541, %4542 : tensor<64x512x768xf32>
    %cst_530 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4544 = stablehlo.reduce(%4543 init: %cst_530) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4545 = stablehlo.reshape %4544 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_531 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4546 = stablehlo.reduce(%4545 init: %cst_531) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4547 = stablehlo.broadcast_in_dim %4546, dims = [1] : (tensor<768xf32>) -> tensor<1x768xf32>
    %cst_532 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4548 = stablehlo.reduce(%4547 init: %cst_532) applies stablehlo.add across dimensions = [0] : (tensor<1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4549 = stablehlo.dot_general %4543, %139, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x12x64xf32>) -> tensor<768x12x64xf32>
    %4550 = stablehlo.transpose %4549, dims = [1, 2, 0] : (tensor<768x12x64xf32>) -> tensor<12x64x768xf32>
    %4551 = stablehlo.dot_general %4543, %140, contracting_dims = [2] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<12x64x768xf32>) -> tensor<64x512x12x64xf32>
    %4552 = stablehlo.reshape %4550 : (tensor<12x64x768xf32>) -> tensor<768x768xf32>
    %4553 = stablehlo.transpose %4551, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %4554 = stablehlo.dot_general %4553, %103, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %4555 = stablehlo.dot_general %4553, %137, batching_dims = [0, 1] x [0, 1], contracting_dims = [3] x [2], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x64x512xf32>
    %4556 = stablehlo.transpose %4555, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %4557 = stablehlo.multiply %4554, %136 : tensor<64x12x512x512xf32>
    %4558 = stablehlo.broadcast_in_dim %132, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4559 = stablehlo.multiply %4557, %4558 : tensor<64x12x512x512xf32>
    %4560 = stablehlo.multiply %4559, %125 : tensor<64x12x512x512xf32>
    %cst_533 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4561 = stablehlo.reduce(%4560 init: %cst_533) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x512xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4562 = stablehlo.reshape %4561 : (tensor<64x12x512xf32>) -> tensor<64x12x512x1xf32>
    %4563 = stablehlo.negate %4562 : tensor<64x12x512x1xf32>
    %4564 = stablehlo.broadcast_in_dim %127, dims = [0, 1, 2, 3] : (tensor<64x12x512x1xf32>) -> tensor<64x12x512x512xf32>
    %4565 = stablehlo.divide %4557, %4564 : tensor<64x12x512x512xf32>
    %cst_534 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4566 = stablehlo.reduce(%4563 init: %cst_534) applies stablehlo.add across dimensions = [3] : (tensor<64x12x512x1xf32>, tensor<f32>) -> tensor<64x12x512xf32>
    %4567 = stablehlo.broadcast_in_dim %4566, dims = [0, 1, 2] : (tensor<64x12x512xf32>) -> tensor<64x12x512x512xf32>
    %4568 = stablehlo.add %4565, %4567 : tensor<64x12x512x512xf32>
    %4569 = stablehlo.multiply %4568, %125 : tensor<64x12x512x512xf32>
    %4570 = stablehlo.dot_general %4569, %115, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4571 = stablehlo.transpose %4570, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4572 = stablehlo.dot_general %4569, %96, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %4573 = stablehlo.transpose %4572, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %4574 = stablehlo.broadcast_in_dim %113, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %4575 = stablehlo.divide %4573, %4574 : tensor<64x512x12x64xf32>
    %cst_535 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4576 = stablehlo.reduce(%4556 init: %cst_535) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4577 = stablehlo.reshape %4576 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_536 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4578 = stablehlo.reduce(%4577 init: %cst_536) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4579 = stablehlo.broadcast_in_dim %4578, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_537 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4580 = stablehlo.reduce(%4579 init: %cst_537) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4581 = stablehlo.reshape %4580 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4582 = stablehlo.dot_general %4556, %75, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4583 = stablehlo.transpose %4582, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4584 = stablehlo.dot_general %4556, %97, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4585 = stablehlo.add %4539, %4584 : tensor<64x512x768xf32>
    %4586 = stablehlo.reshape %4583 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_538 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4587 = stablehlo.reduce(%4571 init: %cst_538) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4588 = stablehlo.reshape %4587 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_539 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4589 = stablehlo.reduce(%4588 init: %cst_539) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4590 = stablehlo.broadcast_in_dim %4589, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_540 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4591 = stablehlo.reduce(%4590 init: %cst_540) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4592 = stablehlo.reshape %4591 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4593 = stablehlo.dot_general %4571, %75, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4594 = stablehlo.transpose %4593, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4595 = stablehlo.dot_general %4571, %90, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4596 = stablehlo.add %4585, %4595 : tensor<64x512x768xf32>
    %4597 = stablehlo.reshape %4594 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %cst_541 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4598 = stablehlo.reduce(%4575 init: %cst_541) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4599 = stablehlo.reshape %4598 : (tensor<12x64xf32>) -> tensor<1x1x12x64xf32>
    %cst_542 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4600 = stablehlo.reduce(%4599 init: %cst_542) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4601 = stablehlo.broadcast_in_dim %4600, dims = [1, 2] : (tensor<12x64xf32>) -> tensor<1x12x64xf32>
    %cst_543 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4602 = stablehlo.reduce(%4601 init: %cst_543) applies stablehlo.add across dimensions = [0] : (tensor<1x12x64xf32>, tensor<f32>) -> tensor<12x64xf32>
    %4603 = stablehlo.reshape %4602 : (tensor<12x64xf32>) -> tensor<768xf32>
    %4604 = stablehlo.dot_general %4575, %75, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x768xf32>) -> tensor<12x64x768xf32>
    %4605 = stablehlo.transpose %4604, dims = [2, 0, 1] : (tensor<12x64x768xf32>) -> tensor<768x12x64xf32>
    %4606 = stablehlo.dot_general %4575, %83, contracting_dims = [2, 3] x [1, 2], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<768x12x64xf32>) -> tensor<64x512x768xf32>
    %4607 = stablehlo.add %4596, %4606 : tensor<64x512x768xf32>
    %4608 = stablehlo.reshape %4605 : (tensor<768x12x64xf32>) -> tensor<768x768xf32>
    %4609 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4610 = stablehlo.select %71, %4607, %4609 : tensor<64x512x768xi1>, tensor<64x512x768xf32>
    %4611 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %4612 = stablehlo.divide %4610, %4611 : tensor<64x512x768xf32>
    %cst_544 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4613 = stablehlo.reduce(%4612 init: %cst_544) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4614 = stablehlo.reshape %4613 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4615 = stablehlo.reshape %4614 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4616 = stablehlo.multiply %55, %4612 : tensor<64x512x768xf32>
    %4617 = stablehlo.multiply %4612, %65 : tensor<64x512x768xf32>
    %4618 = stablehlo.broadcast_in_dim %58, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %4619 = stablehlo.multiply %4618, %4616 : tensor<64x512x768xf32>
    %cst_545 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4620 = stablehlo.reduce(%4619 init: %cst_545) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %4621 = stablehlo.reshape %4620 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %4622 = stablehlo.broadcast_in_dim %62, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %4623 = stablehlo.multiply %4616, %4622 : tensor<64x512x768xf32>
    %cst_546 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4624 = stablehlo.reduce(%4623 init: %cst_546) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4625 = stablehlo.reshape %4624 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %4626 = stablehlo.reshape %4621 : (tensor<1x1x768xf32>) -> tensor<768xf32>
    %4627 = stablehlo.multiply %4625, %61 : tensor<64x512x1xf32>
    %4628 = stablehlo.negate %4617 : tensor<64x512x768xf32>
    %cst_547 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4629 = stablehlo.reduce(%4628 init: %cst_547) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4630 = stablehlo.reshape %4629 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_548 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4631 = stablehlo.reduce(%4627 init: %cst_548) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_549 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4632 = stablehlo.reduce(%4630 init: %cst_549) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4633 = stablehlo.multiply %4631, %51 : tensor<64x512xf32>
    %4634 = stablehlo.negate %4633 : tensor<64x512xf32>
    %4635 = stablehlo.multiply %4634, %38 : tensor<64x512xf32>
    %4636 = stablehlo.add %4632, %4635 : tensor<64x512xf32>
    %4637 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4638 = stablehlo.divide %4633, %4637 : tensor<64x512xf32>
    %4639 = stablehlo.broadcast_in_dim %4638, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4640 = stablehlo.broadcast_in_dim %cst_4, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %4641 = stablehlo.divide %4636, %4640 : tensor<64x512xf32>
    %4642 = stablehlo.broadcast_in_dim %4641, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %4643 = stablehlo.add %4617, %4642 : tensor<64x512x768xf32>
    %4644 = stablehlo.multiply %4639, %29 : tensor<64x512x768xf32>
    %4645 = stablehlo.add %4643, %4644 : tensor<64x512x768xf32>
    %4646 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4647 = "stablehlo.scatter"(%4646, %23, %4645) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11793 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11793 : tensor<f32>
    }) : (tensor<2x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<2x768xf32>
    %4648 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4649 = "stablehlo.scatter"(%4648, %16, %4645) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11793 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11793 : tensor<f32>
    }) : (tensor<512x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<512x768xf32>
    %4650 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4651 = "stablehlo.scatter"(%4650, %9, %4645) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg616: tensor<f32>, %arg617: tensor<f32>):
      %11793 = stablehlo.add %arg616, %arg617 : tensor<f32>
      stablehlo.return %11793 : tensor<f32>
    }) : (tensor<30522x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %4652 = stablehlo.multiply %4649, %4649 : tensor<512x768xf32>
    %cst_550 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4653 = stablehlo.reduce(%4652 init: %cst_550) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %4654 = stablehlo.add %cst_6, %4653 : tensor<f32>
    %4655 = stablehlo.multiply %4647, %4647 : tensor<2x768xf32>
    %cst_551 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4656 = stablehlo.reduce(%4655 init: %cst_551) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %4657 = stablehlo.add %4654, %4656 : tensor<f32>
    %4658 = stablehlo.multiply %4651, %4651 : tensor<30522x768xf32>
    %cst_552 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4659 = stablehlo.reduce(%4658 init: %cst_552) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %4660 = stablehlo.add %4657, %4659 : tensor<f32>
    %4661 = stablehlo.multiply %4592, %4592 : tensor<768xf32>
    %cst_553 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4662 = stablehlo.reduce(%4661 init: %cst_553) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4663 = stablehlo.add %4660, %4662 : tensor<f32>
    %4664 = stablehlo.multiply %4597, %4597 : tensor<768x768xf32>
    %cst_554 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4665 = stablehlo.reduce(%4664 init: %cst_554) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4666 = stablehlo.add %4663, %4665 : tensor<f32>
    %4667 = stablehlo.multiply %4603, %4603 : tensor<768xf32>
    %cst_555 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4668 = stablehlo.reduce(%4667 init: %cst_555) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4669 = stablehlo.add %4666, %4668 : tensor<f32>
    %4670 = stablehlo.multiply %4608, %4608 : tensor<768x768xf32>
    %cst_556 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4671 = stablehlo.reduce(%4670 init: %cst_556) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4672 = stablehlo.add %4669, %4671 : tensor<f32>
    %4673 = stablehlo.multiply %4581, %4581 : tensor<768xf32>
    %cst_557 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4674 = stablehlo.reduce(%4673 init: %cst_557) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4675 = stablehlo.add %4672, %4674 : tensor<f32>
    %4676 = stablehlo.multiply %4586, %4586 : tensor<768x768xf32>
    %cst_558 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4677 = stablehlo.reduce(%4676 init: %cst_558) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4678 = stablehlo.add %4675, %4677 : tensor<f32>
    %4679 = stablehlo.multiply %4548, %4548 : tensor<768xf32>
    %cst_559 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4680 = stablehlo.reduce(%4679 init: %cst_559) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4681 = stablehlo.add %4678, %4680 : tensor<f32>
    %4682 = stablehlo.multiply %4552, %4552 : tensor<768x768xf32>
    %cst_560 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4683 = stablehlo.reduce(%4682 init: %cst_560) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4684 = stablehlo.add %4681, %4683 : tensor<f32>
    %4685 = stablehlo.multiply %4509, %4509 : tensor<768xf32>
    %cst_561 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4686 = stablehlo.reduce(%4685 init: %cst_561) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4687 = stablehlo.add %4684, %4686 : tensor<f32>
    %4688 = stablehlo.multiply %4520, %4520 : tensor<768xf32>
    %cst_562 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4689 = stablehlo.reduce(%4688 init: %cst_562) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4690 = stablehlo.add %4687, %4689 : tensor<f32>
    %4691 = stablehlo.multiply %4480, %4480 : tensor<768xf32>
    %cst_563 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4692 = stablehlo.reduce(%4691 init: %cst_563) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4693 = stablehlo.add %4690, %4692 : tensor<f32>
    %4694 = stablehlo.multiply %4482, %4482 : tensor<3072x768xf32>
    %cst_564 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4695 = stablehlo.reduce(%4694 init: %cst_564) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4696 = stablehlo.add %4693, %4695 : tensor<f32>
    %4697 = stablehlo.multiply %4441, %4441 : tensor<768xf32>
    %cst_565 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4698 = stablehlo.reduce(%4697 init: %cst_565) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4699 = stablehlo.add %4696, %4698 : tensor<f32>
    %4700 = stablehlo.multiply %4452, %4452 : tensor<768xf32>
    %cst_566 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4701 = stablehlo.reduce(%4700 init: %cst_566) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4702 = stablehlo.add %4699, %4701 : tensor<f32>
    %4703 = stablehlo.multiply %4502, %4502 : tensor<3072xf32>
    %cst_567 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4704 = stablehlo.reduce(%4703 init: %cst_567) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4705 = stablehlo.add %4702, %4704 : tensor<f32>
    %4706 = stablehlo.multiply %4504, %4504 : tensor<768x3072xf32>
    %cst_568 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4707 = stablehlo.reduce(%4706 init: %cst_568) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4708 = stablehlo.add %4705, %4707 : tensor<f32>
    %4709 = stablehlo.multiply %4422, %4422 : tensor<768xf32>
    %cst_569 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4710 = stablehlo.reduce(%4709 init: %cst_569) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4711 = stablehlo.add %4708, %4710 : tensor<f32>
    %4712 = stablehlo.multiply %4427, %4427 : tensor<768x768xf32>
    %cst_570 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4713 = stablehlo.reduce(%4712 init: %cst_570) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4714 = stablehlo.add %4711, %4713 : tensor<f32>
    %4715 = stablehlo.multiply %4433, %4433 : tensor<768xf32>
    %cst_571 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4716 = stablehlo.reduce(%4715 init: %cst_571) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4717 = stablehlo.add %4714, %4716 : tensor<f32>
    %4718 = stablehlo.multiply %4438, %4438 : tensor<768x768xf32>
    %cst_572 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4719 = stablehlo.reduce(%4718 init: %cst_572) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4720 = stablehlo.add %4717, %4719 : tensor<f32>
    %4721 = stablehlo.multiply %4411, %4411 : tensor<768xf32>
    %cst_573 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4722 = stablehlo.reduce(%4721 init: %cst_573) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4723 = stablehlo.add %4720, %4722 : tensor<f32>
    %4724 = stablehlo.multiply %4416, %4416 : tensor<768x768xf32>
    %cst_574 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4725 = stablehlo.reduce(%4724 init: %cst_574) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4726 = stablehlo.add %4723, %4725 : tensor<f32>
    %4727 = stablehlo.multiply %4378, %4378 : tensor<768xf32>
    %cst_575 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4728 = stablehlo.reduce(%4727 init: %cst_575) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4729 = stablehlo.add %4726, %4728 : tensor<f32>
    %4730 = stablehlo.multiply %4382, %4382 : tensor<768x768xf32>
    %cst_576 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4731 = stablehlo.reduce(%4730 init: %cst_576) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4732 = stablehlo.add %4729, %4731 : tensor<f32>
    %4733 = stablehlo.multiply %4339, %4339 : tensor<768xf32>
    %cst_577 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4734 = stablehlo.reduce(%4733 init: %cst_577) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4735 = stablehlo.add %4732, %4734 : tensor<f32>
    %4736 = stablehlo.multiply %4350, %4350 : tensor<768xf32>
    %cst_578 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4737 = stablehlo.reduce(%4736 init: %cst_578) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4738 = stablehlo.add %4735, %4737 : tensor<f32>
    %4739 = stablehlo.multiply %4310, %4310 : tensor<768xf32>
    %cst_579 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4740 = stablehlo.reduce(%4739 init: %cst_579) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4741 = stablehlo.add %4738, %4740 : tensor<f32>
    %4742 = stablehlo.multiply %4312, %4312 : tensor<3072x768xf32>
    %cst_580 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4743 = stablehlo.reduce(%4742 init: %cst_580) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4744 = stablehlo.add %4741, %4743 : tensor<f32>
    %4745 = stablehlo.multiply %4271, %4271 : tensor<768xf32>
    %cst_581 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4746 = stablehlo.reduce(%4745 init: %cst_581) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4747 = stablehlo.add %4744, %4746 : tensor<f32>
    %4748 = stablehlo.multiply %4282, %4282 : tensor<768xf32>
    %cst_582 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4749 = stablehlo.reduce(%4748 init: %cst_582) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4750 = stablehlo.add %4747, %4749 : tensor<f32>
    %4751 = stablehlo.multiply %4332, %4332 : tensor<3072xf32>
    %cst_583 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4752 = stablehlo.reduce(%4751 init: %cst_583) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4753 = stablehlo.add %4750, %4752 : tensor<f32>
    %4754 = stablehlo.multiply %4334, %4334 : tensor<768x3072xf32>
    %cst_584 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4755 = stablehlo.reduce(%4754 init: %cst_584) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4756 = stablehlo.add %4753, %4755 : tensor<f32>
    %4757 = stablehlo.multiply %2892, %2892 : tensor<768xf32>
    %cst_585 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4758 = stablehlo.reduce(%4757 init: %cst_585) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4759 = stablehlo.add %4756, %4758 : tensor<f32>
    %4760 = stablehlo.multiply %2897, %2897 : tensor<768x768xf32>
    %cst_586 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4761 = stablehlo.reduce(%4760 init: %cst_586) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4762 = stablehlo.add %4759, %4761 : tensor<f32>
    %4763 = stablehlo.multiply %2903, %2903 : tensor<768xf32>
    %cst_587 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4764 = stablehlo.reduce(%4763 init: %cst_587) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4765 = stablehlo.add %4762, %4764 : tensor<f32>
    %4766 = stablehlo.multiply %2908, %2908 : tensor<768x768xf32>
    %cst_588 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4767 = stablehlo.reduce(%4766 init: %cst_588) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4768 = stablehlo.add %4765, %4767 : tensor<f32>
    %4769 = stablehlo.multiply %2881, %2881 : tensor<768xf32>
    %cst_589 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4770 = stablehlo.reduce(%4769 init: %cst_589) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4771 = stablehlo.add %4768, %4770 : tensor<f32>
    %4772 = stablehlo.multiply %2886, %2886 : tensor<768x768xf32>
    %cst_590 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4773 = stablehlo.reduce(%4772 init: %cst_590) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4774 = stablehlo.add %4771, %4773 : tensor<f32>
    %4775 = stablehlo.multiply %2848, %2848 : tensor<768xf32>
    %cst_591 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4776 = stablehlo.reduce(%4775 init: %cst_591) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4777 = stablehlo.add %4774, %4776 : tensor<f32>
    %4778 = stablehlo.multiply %2852, %2852 : tensor<768x768xf32>
    %cst_592 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4779 = stablehlo.reduce(%4778 init: %cst_592) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4780 = stablehlo.add %4777, %4779 : tensor<f32>
    %4781 = stablehlo.multiply %2809, %2809 : tensor<768xf32>
    %cst_593 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4782 = stablehlo.reduce(%4781 init: %cst_593) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4783 = stablehlo.add %4780, %4782 : tensor<f32>
    %4784 = stablehlo.multiply %2820, %2820 : tensor<768xf32>
    %cst_594 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4785 = stablehlo.reduce(%4784 init: %cst_594) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4786 = stablehlo.add %4783, %4785 : tensor<f32>
    %4787 = stablehlo.multiply %2780, %2780 : tensor<768xf32>
    %cst_595 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4788 = stablehlo.reduce(%4787 init: %cst_595) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4789 = stablehlo.add %4786, %4788 : tensor<f32>
    %4790 = stablehlo.multiply %2782, %2782 : tensor<3072x768xf32>
    %cst_596 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4791 = stablehlo.reduce(%4790 init: %cst_596) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4792 = stablehlo.add %4789, %4791 : tensor<f32>
    %4793 = stablehlo.multiply %2741, %2741 : tensor<768xf32>
    %cst_597 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4794 = stablehlo.reduce(%4793 init: %cst_597) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4795 = stablehlo.add %4792, %4794 : tensor<f32>
    %4796 = stablehlo.multiply %2752, %2752 : tensor<768xf32>
    %cst_598 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4797 = stablehlo.reduce(%4796 init: %cst_598) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4798 = stablehlo.add %4795, %4797 : tensor<f32>
    %4799 = stablehlo.multiply %2802, %2802 : tensor<3072xf32>
    %cst_599 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4800 = stablehlo.reduce(%4799 init: %cst_599) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4801 = stablehlo.add %4798, %4800 : tensor<f32>
    %4802 = stablehlo.multiply %2804, %2804 : tensor<768x3072xf32>
    %cst_600 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4803 = stablehlo.reduce(%4802 init: %cst_600) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4804 = stablehlo.add %4801, %4803 : tensor<f32>
    %4805 = stablehlo.multiply %2722, %2722 : tensor<768xf32>
    %cst_601 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4806 = stablehlo.reduce(%4805 init: %cst_601) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4807 = stablehlo.add %4804, %4806 : tensor<f32>
    %4808 = stablehlo.multiply %2727, %2727 : tensor<768x768xf32>
    %cst_602 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4809 = stablehlo.reduce(%4808 init: %cst_602) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4810 = stablehlo.add %4807, %4809 : tensor<f32>
    %4811 = stablehlo.multiply %2733, %2733 : tensor<768xf32>
    %cst_603 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4812 = stablehlo.reduce(%4811 init: %cst_603) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4813 = stablehlo.add %4810, %4812 : tensor<f32>
    %4814 = stablehlo.multiply %2738, %2738 : tensor<768x768xf32>
    %cst_604 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4815 = stablehlo.reduce(%4814 init: %cst_604) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4816 = stablehlo.add %4813, %4815 : tensor<f32>
    %4817 = stablehlo.multiply %2711, %2711 : tensor<768xf32>
    %cst_605 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4818 = stablehlo.reduce(%4817 init: %cst_605) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4819 = stablehlo.add %4816, %4818 : tensor<f32>
    %4820 = stablehlo.multiply %2716, %2716 : tensor<768x768xf32>
    %cst_606 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4821 = stablehlo.reduce(%4820 init: %cst_606) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4822 = stablehlo.add %4819, %4821 : tensor<f32>
    %4823 = stablehlo.multiply %2678, %2678 : tensor<768xf32>
    %cst_607 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4824 = stablehlo.reduce(%4823 init: %cst_607) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4825 = stablehlo.add %4822, %4824 : tensor<f32>
    %4826 = stablehlo.multiply %2682, %2682 : tensor<768x768xf32>
    %cst_608 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4827 = stablehlo.reduce(%4826 init: %cst_608) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4828 = stablehlo.add %4825, %4827 : tensor<f32>
    %4829 = stablehlo.multiply %2639, %2639 : tensor<768xf32>
    %cst_609 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4830 = stablehlo.reduce(%4829 init: %cst_609) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4831 = stablehlo.add %4828, %4830 : tensor<f32>
    %4832 = stablehlo.multiply %2650, %2650 : tensor<768xf32>
    %cst_610 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4833 = stablehlo.reduce(%4832 init: %cst_610) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4834 = stablehlo.add %4831, %4833 : tensor<f32>
    %4835 = stablehlo.multiply %2610, %2610 : tensor<768xf32>
    %cst_611 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4836 = stablehlo.reduce(%4835 init: %cst_611) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4837 = stablehlo.add %4834, %4836 : tensor<f32>
    %4838 = stablehlo.multiply %2612, %2612 : tensor<3072x768xf32>
    %cst_612 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4839 = stablehlo.reduce(%4838 init: %cst_612) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4840 = stablehlo.add %4837, %4839 : tensor<f32>
    %4841 = stablehlo.multiply %2571, %2571 : tensor<768xf32>
    %cst_613 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4842 = stablehlo.reduce(%4841 init: %cst_613) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4843 = stablehlo.add %4840, %4842 : tensor<f32>
    %4844 = stablehlo.multiply %2582, %2582 : tensor<768xf32>
    %cst_614 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4845 = stablehlo.reduce(%4844 init: %cst_614) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4846 = stablehlo.add %4843, %4845 : tensor<f32>
    %4847 = stablehlo.multiply %2632, %2632 : tensor<3072xf32>
    %cst_615 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4848 = stablehlo.reduce(%4847 init: %cst_615) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4849 = stablehlo.add %4846, %4848 : tensor<f32>
    %4850 = stablehlo.multiply %2634, %2634 : tensor<768x3072xf32>
    %cst_616 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4851 = stablehlo.reduce(%4850 init: %cst_616) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4852 = stablehlo.add %4849, %4851 : tensor<f32>
    %4853 = stablehlo.multiply %4252, %4252 : tensor<768xf32>
    %cst_617 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4854 = stablehlo.reduce(%4853 init: %cst_617) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4855 = stablehlo.add %4852, %4854 : tensor<f32>
    %4856 = stablehlo.multiply %4257, %4257 : tensor<768x768xf32>
    %cst_618 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4857 = stablehlo.reduce(%4856 init: %cst_618) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4858 = stablehlo.add %4855, %4857 : tensor<f32>
    %4859 = stablehlo.multiply %4263, %4263 : tensor<768xf32>
    %cst_619 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4860 = stablehlo.reduce(%4859 init: %cst_619) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4861 = stablehlo.add %4858, %4860 : tensor<f32>
    %4862 = stablehlo.multiply %4268, %4268 : tensor<768x768xf32>
    %cst_620 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4863 = stablehlo.reduce(%4862 init: %cst_620) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4864 = stablehlo.add %4861, %4863 : tensor<f32>
    %4865 = stablehlo.multiply %4241, %4241 : tensor<768xf32>
    %cst_621 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4866 = stablehlo.reduce(%4865 init: %cst_621) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4867 = stablehlo.add %4864, %4866 : tensor<f32>
    %4868 = stablehlo.multiply %4246, %4246 : tensor<768x768xf32>
    %cst_622 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4869 = stablehlo.reduce(%4868 init: %cst_622) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4870 = stablehlo.add %4867, %4869 : tensor<f32>
    %4871 = stablehlo.multiply %4208, %4208 : tensor<768xf32>
    %cst_623 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4872 = stablehlo.reduce(%4871 init: %cst_623) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4873 = stablehlo.add %4870, %4872 : tensor<f32>
    %4874 = stablehlo.multiply %4212, %4212 : tensor<768x768xf32>
    %cst_624 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4875 = stablehlo.reduce(%4874 init: %cst_624) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4876 = stablehlo.add %4873, %4875 : tensor<f32>
    %4877 = stablehlo.multiply %4169, %4169 : tensor<768xf32>
    %cst_625 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4878 = stablehlo.reduce(%4877 init: %cst_625) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4879 = stablehlo.add %4876, %4878 : tensor<f32>
    %4880 = stablehlo.multiply %4180, %4180 : tensor<768xf32>
    %cst_626 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4881 = stablehlo.reduce(%4880 init: %cst_626) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4882 = stablehlo.add %4879, %4881 : tensor<f32>
    %4883 = stablehlo.multiply %4140, %4140 : tensor<768xf32>
    %cst_627 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4884 = stablehlo.reduce(%4883 init: %cst_627) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4885 = stablehlo.add %4882, %4884 : tensor<f32>
    %4886 = stablehlo.multiply %4142, %4142 : tensor<3072x768xf32>
    %cst_628 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4887 = stablehlo.reduce(%4886 init: %cst_628) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4888 = stablehlo.add %4885, %4887 : tensor<f32>
    %4889 = stablehlo.multiply %4101, %4101 : tensor<768xf32>
    %cst_629 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4890 = stablehlo.reduce(%4889 init: %cst_629) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4891 = stablehlo.add %4888, %4890 : tensor<f32>
    %4892 = stablehlo.multiply %4112, %4112 : tensor<768xf32>
    %cst_630 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4893 = stablehlo.reduce(%4892 init: %cst_630) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4894 = stablehlo.add %4891, %4893 : tensor<f32>
    %4895 = stablehlo.multiply %4162, %4162 : tensor<3072xf32>
    %cst_631 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4896 = stablehlo.reduce(%4895 init: %cst_631) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4897 = stablehlo.add %4894, %4896 : tensor<f32>
    %4898 = stablehlo.multiply %4164, %4164 : tensor<768x3072xf32>
    %cst_632 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4899 = stablehlo.reduce(%4898 init: %cst_632) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4900 = stablehlo.add %4897, %4899 : tensor<f32>
    %4901 = stablehlo.multiply %4082, %4082 : tensor<768xf32>
    %cst_633 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4902 = stablehlo.reduce(%4901 init: %cst_633) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4903 = stablehlo.add %4900, %4902 : tensor<f32>
    %4904 = stablehlo.multiply %4087, %4087 : tensor<768x768xf32>
    %cst_634 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4905 = stablehlo.reduce(%4904 init: %cst_634) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4906 = stablehlo.add %4903, %4905 : tensor<f32>
    %4907 = stablehlo.multiply %4093, %4093 : tensor<768xf32>
    %cst_635 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4908 = stablehlo.reduce(%4907 init: %cst_635) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4909 = stablehlo.add %4906, %4908 : tensor<f32>
    %4910 = stablehlo.multiply %4098, %4098 : tensor<768x768xf32>
    %cst_636 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4911 = stablehlo.reduce(%4910 init: %cst_636) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4912 = stablehlo.add %4909, %4911 : tensor<f32>
    %4913 = stablehlo.multiply %4071, %4071 : tensor<768xf32>
    %cst_637 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4914 = stablehlo.reduce(%4913 init: %cst_637) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4915 = stablehlo.add %4912, %4914 : tensor<f32>
    %4916 = stablehlo.multiply %4076, %4076 : tensor<768x768xf32>
    %cst_638 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4917 = stablehlo.reduce(%4916 init: %cst_638) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4918 = stablehlo.add %4915, %4917 : tensor<f32>
    %4919 = stablehlo.multiply %4038, %4038 : tensor<768xf32>
    %cst_639 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4920 = stablehlo.reduce(%4919 init: %cst_639) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4921 = stablehlo.add %4918, %4920 : tensor<f32>
    %4922 = stablehlo.multiply %4042, %4042 : tensor<768x768xf32>
    %cst_640 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4923 = stablehlo.reduce(%4922 init: %cst_640) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4924 = stablehlo.add %4921, %4923 : tensor<f32>
    %4925 = stablehlo.multiply %3999, %3999 : tensor<768xf32>
    %cst_641 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4926 = stablehlo.reduce(%4925 init: %cst_641) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4927 = stablehlo.add %4924, %4926 : tensor<f32>
    %4928 = stablehlo.multiply %4010, %4010 : tensor<768xf32>
    %cst_642 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4929 = stablehlo.reduce(%4928 init: %cst_642) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4930 = stablehlo.add %4927, %4929 : tensor<f32>
    %4931 = stablehlo.multiply %3970, %3970 : tensor<768xf32>
    %cst_643 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4932 = stablehlo.reduce(%4931 init: %cst_643) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4933 = stablehlo.add %4930, %4932 : tensor<f32>
    %4934 = stablehlo.multiply %3972, %3972 : tensor<3072x768xf32>
    %cst_644 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4935 = stablehlo.reduce(%4934 init: %cst_644) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4936 = stablehlo.add %4933, %4935 : tensor<f32>
    %4937 = stablehlo.multiply %3931, %3931 : tensor<768xf32>
    %cst_645 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4938 = stablehlo.reduce(%4937 init: %cst_645) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4939 = stablehlo.add %4936, %4938 : tensor<f32>
    %4940 = stablehlo.multiply %3942, %3942 : tensor<768xf32>
    %cst_646 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4941 = stablehlo.reduce(%4940 init: %cst_646) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4942 = stablehlo.add %4939, %4941 : tensor<f32>
    %4943 = stablehlo.multiply %3992, %3992 : tensor<3072xf32>
    %cst_647 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4944 = stablehlo.reduce(%4943 init: %cst_647) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4945 = stablehlo.add %4942, %4944 : tensor<f32>
    %4946 = stablehlo.multiply %3994, %3994 : tensor<768x3072xf32>
    %cst_648 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4947 = stablehlo.reduce(%4946 init: %cst_648) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4948 = stablehlo.add %4945, %4947 : tensor<f32>
    %4949 = stablehlo.multiply %3912, %3912 : tensor<768xf32>
    %cst_649 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4950 = stablehlo.reduce(%4949 init: %cst_649) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4951 = stablehlo.add %4948, %4950 : tensor<f32>
    %4952 = stablehlo.multiply %3917, %3917 : tensor<768x768xf32>
    %cst_650 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4953 = stablehlo.reduce(%4952 init: %cst_650) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4954 = stablehlo.add %4951, %4953 : tensor<f32>
    %4955 = stablehlo.multiply %3923, %3923 : tensor<768xf32>
    %cst_651 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4956 = stablehlo.reduce(%4955 init: %cst_651) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4957 = stablehlo.add %4954, %4956 : tensor<f32>
    %4958 = stablehlo.multiply %3928, %3928 : tensor<768x768xf32>
    %cst_652 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4959 = stablehlo.reduce(%4958 init: %cst_652) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4960 = stablehlo.add %4957, %4959 : tensor<f32>
    %4961 = stablehlo.multiply %3901, %3901 : tensor<768xf32>
    %cst_653 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4962 = stablehlo.reduce(%4961 init: %cst_653) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4963 = stablehlo.add %4960, %4962 : tensor<f32>
    %4964 = stablehlo.multiply %3906, %3906 : tensor<768x768xf32>
    %cst_654 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4965 = stablehlo.reduce(%4964 init: %cst_654) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4966 = stablehlo.add %4963, %4965 : tensor<f32>
    %4967 = stablehlo.multiply %3868, %3868 : tensor<768xf32>
    %cst_655 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4968 = stablehlo.reduce(%4967 init: %cst_655) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4969 = stablehlo.add %4966, %4968 : tensor<f32>
    %4970 = stablehlo.multiply %3872, %3872 : tensor<768x768xf32>
    %cst_656 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4971 = stablehlo.reduce(%4970 init: %cst_656) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4972 = stablehlo.add %4969, %4971 : tensor<f32>
    %4973 = stablehlo.multiply %3829, %3829 : tensor<768xf32>
    %cst_657 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4974 = stablehlo.reduce(%4973 init: %cst_657) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4975 = stablehlo.add %4972, %4974 : tensor<f32>
    %4976 = stablehlo.multiply %3840, %3840 : tensor<768xf32>
    %cst_658 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4977 = stablehlo.reduce(%4976 init: %cst_658) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4978 = stablehlo.add %4975, %4977 : tensor<f32>
    %4979 = stablehlo.multiply %3800, %3800 : tensor<768xf32>
    %cst_659 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4980 = stablehlo.reduce(%4979 init: %cst_659) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4981 = stablehlo.add %4978, %4980 : tensor<f32>
    %4982 = stablehlo.multiply %3802, %3802 : tensor<3072x768xf32>
    %cst_660 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4983 = stablehlo.reduce(%4982 init: %cst_660) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4984 = stablehlo.add %4981, %4983 : tensor<f32>
    %4985 = stablehlo.multiply %3761, %3761 : tensor<768xf32>
    %cst_661 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4986 = stablehlo.reduce(%4985 init: %cst_661) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4987 = stablehlo.add %4984, %4986 : tensor<f32>
    %4988 = stablehlo.multiply %3772, %3772 : tensor<768xf32>
    %cst_662 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4989 = stablehlo.reduce(%4988 init: %cst_662) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4990 = stablehlo.add %4987, %4989 : tensor<f32>
    %4991 = stablehlo.multiply %3822, %3822 : tensor<3072xf32>
    %cst_663 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4992 = stablehlo.reduce(%4991 init: %cst_663) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4993 = stablehlo.add %4990, %4992 : tensor<f32>
    %4994 = stablehlo.multiply %3824, %3824 : tensor<768x3072xf32>
    %cst_664 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4995 = stablehlo.reduce(%4994 init: %cst_664) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4996 = stablehlo.add %4993, %4995 : tensor<f32>
    %4997 = stablehlo.multiply %3742, %3742 : tensor<768xf32>
    %cst_665 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4998 = stablehlo.reduce(%4997 init: %cst_665) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4999 = stablehlo.add %4996, %4998 : tensor<f32>
    %5000 = stablehlo.multiply %3747, %3747 : tensor<768x768xf32>
    %cst_666 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5001 = stablehlo.reduce(%5000 init: %cst_666) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5002 = stablehlo.add %4999, %5001 : tensor<f32>
    %5003 = stablehlo.multiply %3753, %3753 : tensor<768xf32>
    %cst_667 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5004 = stablehlo.reduce(%5003 init: %cst_667) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5005 = stablehlo.add %5002, %5004 : tensor<f32>
    %5006 = stablehlo.multiply %3758, %3758 : tensor<768x768xf32>
    %cst_668 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5007 = stablehlo.reduce(%5006 init: %cst_668) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5008 = stablehlo.add %5005, %5007 : tensor<f32>
    %5009 = stablehlo.multiply %3731, %3731 : tensor<768xf32>
    %cst_669 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5010 = stablehlo.reduce(%5009 init: %cst_669) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5011 = stablehlo.add %5008, %5010 : tensor<f32>
    %5012 = stablehlo.multiply %3736, %3736 : tensor<768x768xf32>
    %cst_670 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5013 = stablehlo.reduce(%5012 init: %cst_670) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5014 = stablehlo.add %5011, %5013 : tensor<f32>
    %5015 = stablehlo.multiply %3698, %3698 : tensor<768xf32>
    %cst_671 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5016 = stablehlo.reduce(%5015 init: %cst_671) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5017 = stablehlo.add %5014, %5016 : tensor<f32>
    %5018 = stablehlo.multiply %3702, %3702 : tensor<768x768xf32>
    %cst_672 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5019 = stablehlo.reduce(%5018 init: %cst_672) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5020 = stablehlo.add %5017, %5019 : tensor<f32>
    %5021 = stablehlo.multiply %3659, %3659 : tensor<768xf32>
    %cst_673 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5022 = stablehlo.reduce(%5021 init: %cst_673) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5023 = stablehlo.add %5020, %5022 : tensor<f32>
    %5024 = stablehlo.multiply %3670, %3670 : tensor<768xf32>
    %cst_674 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5025 = stablehlo.reduce(%5024 init: %cst_674) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5026 = stablehlo.add %5023, %5025 : tensor<f32>
    %5027 = stablehlo.multiply %3630, %3630 : tensor<768xf32>
    %cst_675 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5028 = stablehlo.reduce(%5027 init: %cst_675) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5029 = stablehlo.add %5026, %5028 : tensor<f32>
    %5030 = stablehlo.multiply %3632, %3632 : tensor<3072x768xf32>
    %cst_676 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5031 = stablehlo.reduce(%5030 init: %cst_676) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5032 = stablehlo.add %5029, %5031 : tensor<f32>
    %5033 = stablehlo.multiply %3591, %3591 : tensor<768xf32>
    %cst_677 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5034 = stablehlo.reduce(%5033 init: %cst_677) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5035 = stablehlo.add %5032, %5034 : tensor<f32>
    %5036 = stablehlo.multiply %3602, %3602 : tensor<768xf32>
    %cst_678 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5037 = stablehlo.reduce(%5036 init: %cst_678) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5038 = stablehlo.add %5035, %5037 : tensor<f32>
    %5039 = stablehlo.multiply %3652, %3652 : tensor<3072xf32>
    %cst_679 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5040 = stablehlo.reduce(%5039 init: %cst_679) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5041 = stablehlo.add %5038, %5040 : tensor<f32>
    %5042 = stablehlo.multiply %3654, %3654 : tensor<768x3072xf32>
    %cst_680 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5043 = stablehlo.reduce(%5042 init: %cst_680) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5044 = stablehlo.add %5041, %5043 : tensor<f32>
    %5045 = stablehlo.multiply %3572, %3572 : tensor<768xf32>
    %cst_681 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5046 = stablehlo.reduce(%5045 init: %cst_681) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5047 = stablehlo.add %5044, %5046 : tensor<f32>
    %5048 = stablehlo.multiply %3577, %3577 : tensor<768x768xf32>
    %cst_682 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5049 = stablehlo.reduce(%5048 init: %cst_682) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5050 = stablehlo.add %5047, %5049 : tensor<f32>
    %5051 = stablehlo.multiply %3583, %3583 : tensor<768xf32>
    %cst_683 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5052 = stablehlo.reduce(%5051 init: %cst_683) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5053 = stablehlo.add %5050, %5052 : tensor<f32>
    %5054 = stablehlo.multiply %3588, %3588 : tensor<768x768xf32>
    %cst_684 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5055 = stablehlo.reduce(%5054 init: %cst_684) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5056 = stablehlo.add %5053, %5055 : tensor<f32>
    %5057 = stablehlo.multiply %3561, %3561 : tensor<768xf32>
    %cst_685 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5058 = stablehlo.reduce(%5057 init: %cst_685) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5059 = stablehlo.add %5056, %5058 : tensor<f32>
    %5060 = stablehlo.multiply %3566, %3566 : tensor<768x768xf32>
    %cst_686 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5061 = stablehlo.reduce(%5060 init: %cst_686) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5062 = stablehlo.add %5059, %5061 : tensor<f32>
    %5063 = stablehlo.multiply %3528, %3528 : tensor<768xf32>
    %cst_687 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5064 = stablehlo.reduce(%5063 init: %cst_687) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5065 = stablehlo.add %5062, %5064 : tensor<f32>
    %5066 = stablehlo.multiply %3532, %3532 : tensor<768x768xf32>
    %cst_688 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5067 = stablehlo.reduce(%5066 init: %cst_688) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5068 = stablehlo.add %5065, %5067 : tensor<f32>
    %5069 = stablehlo.multiply %3489, %3489 : tensor<768xf32>
    %cst_689 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5070 = stablehlo.reduce(%5069 init: %cst_689) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5071 = stablehlo.add %5068, %5070 : tensor<f32>
    %5072 = stablehlo.multiply %3500, %3500 : tensor<768xf32>
    %cst_690 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5073 = stablehlo.reduce(%5072 init: %cst_690) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5074 = stablehlo.add %5071, %5073 : tensor<f32>
    %5075 = stablehlo.multiply %3460, %3460 : tensor<768xf32>
    %cst_691 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5076 = stablehlo.reduce(%5075 init: %cst_691) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5077 = stablehlo.add %5074, %5076 : tensor<f32>
    %5078 = stablehlo.multiply %3462, %3462 : tensor<3072x768xf32>
    %cst_692 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5079 = stablehlo.reduce(%5078 init: %cst_692) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5080 = stablehlo.add %5077, %5079 : tensor<f32>
    %5081 = stablehlo.multiply %3421, %3421 : tensor<768xf32>
    %cst_693 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5082 = stablehlo.reduce(%5081 init: %cst_693) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5083 = stablehlo.add %5080, %5082 : tensor<f32>
    %5084 = stablehlo.multiply %3432, %3432 : tensor<768xf32>
    %cst_694 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5085 = stablehlo.reduce(%5084 init: %cst_694) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5086 = stablehlo.add %5083, %5085 : tensor<f32>
    %5087 = stablehlo.multiply %3482, %3482 : tensor<3072xf32>
    %cst_695 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5088 = stablehlo.reduce(%5087 init: %cst_695) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5089 = stablehlo.add %5086, %5088 : tensor<f32>
    %5090 = stablehlo.multiply %3484, %3484 : tensor<768x3072xf32>
    %cst_696 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5091 = stablehlo.reduce(%5090 init: %cst_696) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5092 = stablehlo.add %5089, %5091 : tensor<f32>
    %5093 = stablehlo.multiply %3402, %3402 : tensor<768xf32>
    %cst_697 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5094 = stablehlo.reduce(%5093 init: %cst_697) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5095 = stablehlo.add %5092, %5094 : tensor<f32>
    %5096 = stablehlo.multiply %3407, %3407 : tensor<768x768xf32>
    %cst_698 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5097 = stablehlo.reduce(%5096 init: %cst_698) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5098 = stablehlo.add %5095, %5097 : tensor<f32>
    %5099 = stablehlo.multiply %3413, %3413 : tensor<768xf32>
    %cst_699 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5100 = stablehlo.reduce(%5099 init: %cst_699) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5101 = stablehlo.add %5098, %5100 : tensor<f32>
    %5102 = stablehlo.multiply %3418, %3418 : tensor<768x768xf32>
    %cst_700 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5103 = stablehlo.reduce(%5102 init: %cst_700) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5104 = stablehlo.add %5101, %5103 : tensor<f32>
    %5105 = stablehlo.multiply %3391, %3391 : tensor<768xf32>
    %cst_701 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5106 = stablehlo.reduce(%5105 init: %cst_701) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5107 = stablehlo.add %5104, %5106 : tensor<f32>
    %5108 = stablehlo.multiply %3396, %3396 : tensor<768x768xf32>
    %cst_702 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5109 = stablehlo.reduce(%5108 init: %cst_702) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5110 = stablehlo.add %5107, %5109 : tensor<f32>
    %5111 = stablehlo.multiply %3358, %3358 : tensor<768xf32>
    %cst_703 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5112 = stablehlo.reduce(%5111 init: %cst_703) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5113 = stablehlo.add %5110, %5112 : tensor<f32>
    %5114 = stablehlo.multiply %3362, %3362 : tensor<768x768xf32>
    %cst_704 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5115 = stablehlo.reduce(%5114 init: %cst_704) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5116 = stablehlo.add %5113, %5115 : tensor<f32>
    %5117 = stablehlo.multiply %3319, %3319 : tensor<768xf32>
    %cst_705 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5118 = stablehlo.reduce(%5117 init: %cst_705) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5119 = stablehlo.add %5116, %5118 : tensor<f32>
    %5120 = stablehlo.multiply %3330, %3330 : tensor<768xf32>
    %cst_706 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5121 = stablehlo.reduce(%5120 init: %cst_706) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5122 = stablehlo.add %5119, %5121 : tensor<f32>
    %5123 = stablehlo.multiply %3290, %3290 : tensor<768xf32>
    %cst_707 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5124 = stablehlo.reduce(%5123 init: %cst_707) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5125 = stablehlo.add %5122, %5124 : tensor<f32>
    %5126 = stablehlo.multiply %3292, %3292 : tensor<3072x768xf32>
    %cst_708 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5127 = stablehlo.reduce(%5126 init: %cst_708) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5128 = stablehlo.add %5125, %5127 : tensor<f32>
    %5129 = stablehlo.multiply %3251, %3251 : tensor<768xf32>
    %cst_709 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5130 = stablehlo.reduce(%5129 init: %cst_709) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5131 = stablehlo.add %5128, %5130 : tensor<f32>
    %5132 = stablehlo.multiply %3262, %3262 : tensor<768xf32>
    %cst_710 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5133 = stablehlo.reduce(%5132 init: %cst_710) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5134 = stablehlo.add %5131, %5133 : tensor<f32>
    %5135 = stablehlo.multiply %3312, %3312 : tensor<3072xf32>
    %cst_711 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5136 = stablehlo.reduce(%5135 init: %cst_711) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5137 = stablehlo.add %5134, %5136 : tensor<f32>
    %5138 = stablehlo.multiply %3314, %3314 : tensor<768x3072xf32>
    %cst_712 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5139 = stablehlo.reduce(%5138 init: %cst_712) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5140 = stablehlo.add %5137, %5139 : tensor<f32>
    %5141 = stablehlo.multiply %3232, %3232 : tensor<768xf32>
    %cst_713 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5142 = stablehlo.reduce(%5141 init: %cst_713) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5143 = stablehlo.add %5140, %5142 : tensor<f32>
    %5144 = stablehlo.multiply %3237, %3237 : tensor<768x768xf32>
    %cst_714 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5145 = stablehlo.reduce(%5144 init: %cst_714) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5146 = stablehlo.add %5143, %5145 : tensor<f32>
    %5147 = stablehlo.multiply %3243, %3243 : tensor<768xf32>
    %cst_715 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5148 = stablehlo.reduce(%5147 init: %cst_715) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5149 = stablehlo.add %5146, %5148 : tensor<f32>
    %5150 = stablehlo.multiply %3248, %3248 : tensor<768x768xf32>
    %cst_716 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5151 = stablehlo.reduce(%5150 init: %cst_716) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5152 = stablehlo.add %5149, %5151 : tensor<f32>
    %5153 = stablehlo.multiply %3221, %3221 : tensor<768xf32>
    %cst_717 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5154 = stablehlo.reduce(%5153 init: %cst_717) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5155 = stablehlo.add %5152, %5154 : tensor<f32>
    %5156 = stablehlo.multiply %3226, %3226 : tensor<768x768xf32>
    %cst_718 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5157 = stablehlo.reduce(%5156 init: %cst_718) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5158 = stablehlo.add %5155, %5157 : tensor<f32>
    %5159 = stablehlo.multiply %3188, %3188 : tensor<768xf32>
    %cst_719 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5160 = stablehlo.reduce(%5159 init: %cst_719) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5161 = stablehlo.add %5158, %5160 : tensor<f32>
    %5162 = stablehlo.multiply %3192, %3192 : tensor<768x768xf32>
    %cst_720 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5163 = stablehlo.reduce(%5162 init: %cst_720) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5164 = stablehlo.add %5161, %5163 : tensor<f32>
    %5165 = stablehlo.multiply %3149, %3149 : tensor<768xf32>
    %cst_721 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5166 = stablehlo.reduce(%5165 init: %cst_721) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5167 = stablehlo.add %5164, %5166 : tensor<f32>
    %5168 = stablehlo.multiply %3160, %3160 : tensor<768xf32>
    %cst_722 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5169 = stablehlo.reduce(%5168 init: %cst_722) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5170 = stablehlo.add %5167, %5169 : tensor<f32>
    %5171 = stablehlo.multiply %3120, %3120 : tensor<768xf32>
    %cst_723 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5172 = stablehlo.reduce(%5171 init: %cst_723) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5173 = stablehlo.add %5170, %5172 : tensor<f32>
    %5174 = stablehlo.multiply %3122, %3122 : tensor<3072x768xf32>
    %cst_724 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5175 = stablehlo.reduce(%5174 init: %cst_724) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5176 = stablehlo.add %5173, %5175 : tensor<f32>
    %5177 = stablehlo.multiply %3081, %3081 : tensor<768xf32>
    %cst_725 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5178 = stablehlo.reduce(%5177 init: %cst_725) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5179 = stablehlo.add %5176, %5178 : tensor<f32>
    %5180 = stablehlo.multiply %3092, %3092 : tensor<768xf32>
    %cst_726 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5181 = stablehlo.reduce(%5180 init: %cst_726) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5182 = stablehlo.add %5179, %5181 : tensor<f32>
    %5183 = stablehlo.multiply %3142, %3142 : tensor<3072xf32>
    %cst_727 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5184 = stablehlo.reduce(%5183 init: %cst_727) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5185 = stablehlo.add %5182, %5184 : tensor<f32>
    %5186 = stablehlo.multiply %3144, %3144 : tensor<768x3072xf32>
    %cst_728 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5187 = stablehlo.reduce(%5186 init: %cst_728) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5188 = stablehlo.add %5185, %5187 : tensor<f32>
    %5189 = stablehlo.multiply %3062, %3062 : tensor<768xf32>
    %cst_729 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5190 = stablehlo.reduce(%5189 init: %cst_729) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5191 = stablehlo.add %5188, %5190 : tensor<f32>
    %5192 = stablehlo.multiply %3067, %3067 : tensor<768x768xf32>
    %cst_730 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5193 = stablehlo.reduce(%5192 init: %cst_730) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5194 = stablehlo.add %5191, %5193 : tensor<f32>
    %5195 = stablehlo.multiply %3073, %3073 : tensor<768xf32>
    %cst_731 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5196 = stablehlo.reduce(%5195 init: %cst_731) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5197 = stablehlo.add %5194, %5196 : tensor<f32>
    %5198 = stablehlo.multiply %3078, %3078 : tensor<768x768xf32>
    %cst_732 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5199 = stablehlo.reduce(%5198 init: %cst_732) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5200 = stablehlo.add %5197, %5199 : tensor<f32>
    %5201 = stablehlo.multiply %3051, %3051 : tensor<768xf32>
    %cst_733 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5202 = stablehlo.reduce(%5201 init: %cst_733) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5203 = stablehlo.add %5200, %5202 : tensor<f32>
    %5204 = stablehlo.multiply %3056, %3056 : tensor<768x768xf32>
    %cst_734 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5205 = stablehlo.reduce(%5204 init: %cst_734) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5206 = stablehlo.add %5203, %5205 : tensor<f32>
    %5207 = stablehlo.multiply %3018, %3018 : tensor<768xf32>
    %cst_735 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5208 = stablehlo.reduce(%5207 init: %cst_735) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5209 = stablehlo.add %5206, %5208 : tensor<f32>
    %5210 = stablehlo.multiply %3022, %3022 : tensor<768x768xf32>
    %cst_736 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5211 = stablehlo.reduce(%5210 init: %cst_736) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5212 = stablehlo.add %5209, %5211 : tensor<f32>
    %5213 = stablehlo.multiply %2979, %2979 : tensor<768xf32>
    %cst_737 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5214 = stablehlo.reduce(%5213 init: %cst_737) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5215 = stablehlo.add %5212, %5214 : tensor<f32>
    %5216 = stablehlo.multiply %2990, %2990 : tensor<768xf32>
    %cst_738 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5217 = stablehlo.reduce(%5216 init: %cst_738) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5218 = stablehlo.add %5215, %5217 : tensor<f32>
    %5219 = stablehlo.multiply %2950, %2950 : tensor<768xf32>
    %cst_739 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5220 = stablehlo.reduce(%5219 init: %cst_739) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5221 = stablehlo.add %5218, %5220 : tensor<f32>
    %5222 = stablehlo.multiply %2952, %2952 : tensor<3072x768xf32>
    %cst_740 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5223 = stablehlo.reduce(%5222 init: %cst_740) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %5224 = stablehlo.add %5221, %5223 : tensor<f32>
    %5225 = stablehlo.multiply %2911, %2911 : tensor<768xf32>
    %cst_741 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5226 = stablehlo.reduce(%5225 init: %cst_741) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5227 = stablehlo.add %5224, %5226 : tensor<f32>
    %5228 = stablehlo.multiply %2922, %2922 : tensor<768xf32>
    %cst_742 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5229 = stablehlo.reduce(%5228 init: %cst_742) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5230 = stablehlo.add %5227, %5229 : tensor<f32>
    %5231 = stablehlo.multiply %2972, %2972 : tensor<3072xf32>
    %cst_743 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5232 = stablehlo.reduce(%5231 init: %cst_743) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %5233 = stablehlo.add %5230, %5232 : tensor<f32>
    %5234 = stablehlo.multiply %2974, %2974 : tensor<768x3072xf32>
    %cst_744 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5235 = stablehlo.reduce(%5234 init: %cst_744) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %5236 = stablehlo.add %5233, %5235 : tensor<f32>
    %5237 = stablehlo.multiply %4615, %4615 : tensor<768xf32>
    %cst_745 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5238 = stablehlo.reduce(%5237 init: %cst_745) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5239 = stablehlo.add %5236, %5238 : tensor<f32>
    %5240 = stablehlo.multiply %4626, %4626 : tensor<768xf32>
    %cst_746 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5241 = stablehlo.reduce(%5240 init: %cst_746) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5242 = stablehlo.add %5239, %5241 : tensor<f32>
    %5243 = stablehlo.multiply %2509, %2509 : tensor<30522xf32>
    %cst_747 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5244 = stablehlo.reduce(%5243 init: %cst_747) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %5245 = stablehlo.add %5242, %5244 : tensor<f32>
    %5246 = stablehlo.multiply %2565, %2565 : tensor<768xf32>
    %cst_748 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5247 = stablehlo.reduce(%5246 init: %cst_748) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5248 = stablehlo.add %5245, %5247 : tensor<f32>
    %5249 = stablehlo.multiply %2567, %2567 : tensor<768x768xf32>
    %cst_749 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5250 = stablehlo.reduce(%5249 init: %cst_749) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %5251 = stablehlo.add %5248, %5250 : tensor<f32>
    %5252 = stablehlo.multiply %2513, %2513 : tensor<30522x768xf32>
    %cst_750 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5253 = stablehlo.reduce(%5252 init: %cst_750) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %5254 = stablehlo.add %5251, %5253 : tensor<f32>
    %5255 = stablehlo.multiply %2516, %2516 : tensor<768xf32>
    %cst_751 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5256 = stablehlo.reduce(%5255 init: %cst_751) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5257 = stablehlo.add %5254, %5256 : tensor<f32>
    %5258 = stablehlo.multiply %2527, %2527 : tensor<768xf32>
    %cst_752 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %5259 = stablehlo.reduce(%5258 init: %cst_752) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %5260 = stablehlo.add %5257, %5259 : tensor<f32>
    %5261 = stablehlo.sqrt %5260 : tensor<f32>
    %5262 = stablehlo.compare  LT, %5261, %cst_7,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %5263 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5264 = stablehlo.divide %4649, %5263 : tensor<512x768xf32>
    %5265 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5266 = stablehlo.multiply %5264, %5265 : tensor<512x768xf32>
    %5267 = stablehlo.select %5262, %4649, %5266 : tensor<i1>, tensor<512x768xf32>
    %5268 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5269 = stablehlo.divide %4647, %5268 : tensor<2x768xf32>
    %5270 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5271 = stablehlo.multiply %5269, %5270 : tensor<2x768xf32>
    %5272 = stablehlo.select %5262, %4647, %5271 : tensor<i1>, tensor<2x768xf32>
    %5273 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5274 = stablehlo.divide %4651, %5273 : tensor<30522x768xf32>
    %5275 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5276 = stablehlo.multiply %5274, %5275 : tensor<30522x768xf32>
    %5277 = stablehlo.select %5262, %4651, %5276 : tensor<i1>, tensor<30522x768xf32>
    %5278 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5279 = stablehlo.divide %4592, %5278 : tensor<768xf32>
    %5280 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5281 = stablehlo.multiply %5279, %5280 : tensor<768xf32>
    %5282 = stablehlo.select %5262, %4592, %5281 : tensor<i1>, tensor<768xf32>
    %5283 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5284 = stablehlo.divide %4597, %5283 : tensor<768x768xf32>
    %5285 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5286 = stablehlo.multiply %5284, %5285 : tensor<768x768xf32>
    %5287 = stablehlo.select %5262, %4597, %5286 : tensor<i1>, tensor<768x768xf32>
    %5288 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5289 = stablehlo.divide %4603, %5288 : tensor<768xf32>
    %5290 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5291 = stablehlo.multiply %5289, %5290 : tensor<768xf32>
    %5292 = stablehlo.select %5262, %4603, %5291 : tensor<i1>, tensor<768xf32>
    %5293 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5294 = stablehlo.divide %4608, %5293 : tensor<768x768xf32>
    %5295 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5296 = stablehlo.multiply %5294, %5295 : tensor<768x768xf32>
    %5297 = stablehlo.select %5262, %4608, %5296 : tensor<i1>, tensor<768x768xf32>
    %5298 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5299 = stablehlo.divide %4581, %5298 : tensor<768xf32>
    %5300 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5301 = stablehlo.multiply %5299, %5300 : tensor<768xf32>
    %5302 = stablehlo.select %5262, %4581, %5301 : tensor<i1>, tensor<768xf32>
    %5303 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5304 = stablehlo.divide %4586, %5303 : tensor<768x768xf32>
    %5305 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5306 = stablehlo.multiply %5304, %5305 : tensor<768x768xf32>
    %5307 = stablehlo.select %5262, %4586, %5306 : tensor<i1>, tensor<768x768xf32>
    %5308 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5309 = stablehlo.divide %4548, %5308 : tensor<768xf32>
    %5310 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5311 = stablehlo.multiply %5309, %5310 : tensor<768xf32>
    %5312 = stablehlo.select %5262, %4548, %5311 : tensor<i1>, tensor<768xf32>
    %5313 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5314 = stablehlo.divide %4552, %5313 : tensor<768x768xf32>
    %5315 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5316 = stablehlo.multiply %5314, %5315 : tensor<768x768xf32>
    %5317 = stablehlo.select %5262, %4552, %5316 : tensor<i1>, tensor<768x768xf32>
    %5318 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5319 = stablehlo.divide %4509, %5318 : tensor<768xf32>
    %5320 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5321 = stablehlo.multiply %5319, %5320 : tensor<768xf32>
    %5322 = stablehlo.select %5262, %4509, %5321 : tensor<i1>, tensor<768xf32>
    %5323 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5324 = stablehlo.divide %4520, %5323 : tensor<768xf32>
    %5325 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5326 = stablehlo.multiply %5324, %5325 : tensor<768xf32>
    %5327 = stablehlo.select %5262, %4520, %5326 : tensor<i1>, tensor<768xf32>
    %5328 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5329 = stablehlo.divide %4480, %5328 : tensor<768xf32>
    %5330 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5331 = stablehlo.multiply %5329, %5330 : tensor<768xf32>
    %5332 = stablehlo.select %5262, %4480, %5331 : tensor<i1>, tensor<768xf32>
    %5333 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5334 = stablehlo.divide %4482, %5333 : tensor<3072x768xf32>
    %5335 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5336 = stablehlo.multiply %5334, %5335 : tensor<3072x768xf32>
    %5337 = stablehlo.select %5262, %4482, %5336 : tensor<i1>, tensor<3072x768xf32>
    %5338 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5339 = stablehlo.divide %4441, %5338 : tensor<768xf32>
    %5340 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5341 = stablehlo.multiply %5339, %5340 : tensor<768xf32>
    %5342 = stablehlo.select %5262, %4441, %5341 : tensor<i1>, tensor<768xf32>
    %5343 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5344 = stablehlo.divide %4452, %5343 : tensor<768xf32>
    %5345 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5346 = stablehlo.multiply %5344, %5345 : tensor<768xf32>
    %5347 = stablehlo.select %5262, %4452, %5346 : tensor<i1>, tensor<768xf32>
    %5348 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5349 = stablehlo.divide %4502, %5348 : tensor<3072xf32>
    %5350 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5351 = stablehlo.multiply %5349, %5350 : tensor<3072xf32>
    %5352 = stablehlo.select %5262, %4502, %5351 : tensor<i1>, tensor<3072xf32>
    %5353 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5354 = stablehlo.divide %4504, %5353 : tensor<768x3072xf32>
    %5355 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5356 = stablehlo.multiply %5354, %5355 : tensor<768x3072xf32>
    %5357 = stablehlo.select %5262, %4504, %5356 : tensor<i1>, tensor<768x3072xf32>
    %5358 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5359 = stablehlo.divide %4422, %5358 : tensor<768xf32>
    %5360 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5361 = stablehlo.multiply %5359, %5360 : tensor<768xf32>
    %5362 = stablehlo.select %5262, %4422, %5361 : tensor<i1>, tensor<768xf32>
    %5363 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5364 = stablehlo.divide %4427, %5363 : tensor<768x768xf32>
    %5365 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5366 = stablehlo.multiply %5364, %5365 : tensor<768x768xf32>
    %5367 = stablehlo.select %5262, %4427, %5366 : tensor<i1>, tensor<768x768xf32>
    %5368 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5369 = stablehlo.divide %4433, %5368 : tensor<768xf32>
    %5370 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5371 = stablehlo.multiply %5369, %5370 : tensor<768xf32>
    %5372 = stablehlo.select %5262, %4433, %5371 : tensor<i1>, tensor<768xf32>
    %5373 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5374 = stablehlo.divide %4438, %5373 : tensor<768x768xf32>
    %5375 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5376 = stablehlo.multiply %5374, %5375 : tensor<768x768xf32>
    %5377 = stablehlo.select %5262, %4438, %5376 : tensor<i1>, tensor<768x768xf32>
    %5378 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5379 = stablehlo.divide %4411, %5378 : tensor<768xf32>
    %5380 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5381 = stablehlo.multiply %5379, %5380 : tensor<768xf32>
    %5382 = stablehlo.select %5262, %4411, %5381 : tensor<i1>, tensor<768xf32>
    %5383 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5384 = stablehlo.divide %4416, %5383 : tensor<768x768xf32>
    %5385 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5386 = stablehlo.multiply %5384, %5385 : tensor<768x768xf32>
    %5387 = stablehlo.select %5262, %4416, %5386 : tensor<i1>, tensor<768x768xf32>
    %5388 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5389 = stablehlo.divide %4378, %5388 : tensor<768xf32>
    %5390 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5391 = stablehlo.multiply %5389, %5390 : tensor<768xf32>
    %5392 = stablehlo.select %5262, %4378, %5391 : tensor<i1>, tensor<768xf32>
    %5393 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5394 = stablehlo.divide %4382, %5393 : tensor<768x768xf32>
    %5395 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5396 = stablehlo.multiply %5394, %5395 : tensor<768x768xf32>
    %5397 = stablehlo.select %5262, %4382, %5396 : tensor<i1>, tensor<768x768xf32>
    %5398 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5399 = stablehlo.divide %4339, %5398 : tensor<768xf32>
    %5400 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5401 = stablehlo.multiply %5399, %5400 : tensor<768xf32>
    %5402 = stablehlo.select %5262, %4339, %5401 : tensor<i1>, tensor<768xf32>
    %5403 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5404 = stablehlo.divide %4350, %5403 : tensor<768xf32>
    %5405 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5406 = stablehlo.multiply %5404, %5405 : tensor<768xf32>
    %5407 = stablehlo.select %5262, %4350, %5406 : tensor<i1>, tensor<768xf32>
    %5408 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5409 = stablehlo.divide %4310, %5408 : tensor<768xf32>
    %5410 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5411 = stablehlo.multiply %5409, %5410 : tensor<768xf32>
    %5412 = stablehlo.select %5262, %4310, %5411 : tensor<i1>, tensor<768xf32>
    %5413 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5414 = stablehlo.divide %4312, %5413 : tensor<3072x768xf32>
    %5415 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5416 = stablehlo.multiply %5414, %5415 : tensor<3072x768xf32>
    %5417 = stablehlo.select %5262, %4312, %5416 : tensor<i1>, tensor<3072x768xf32>
    %5418 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5419 = stablehlo.divide %4271, %5418 : tensor<768xf32>
    %5420 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5421 = stablehlo.multiply %5419, %5420 : tensor<768xf32>
    %5422 = stablehlo.select %5262, %4271, %5421 : tensor<i1>, tensor<768xf32>
    %5423 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5424 = stablehlo.divide %4282, %5423 : tensor<768xf32>
    %5425 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5426 = stablehlo.multiply %5424, %5425 : tensor<768xf32>
    %5427 = stablehlo.select %5262, %4282, %5426 : tensor<i1>, tensor<768xf32>
    %5428 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5429 = stablehlo.divide %4332, %5428 : tensor<3072xf32>
    %5430 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5431 = stablehlo.multiply %5429, %5430 : tensor<3072xf32>
    %5432 = stablehlo.select %5262, %4332, %5431 : tensor<i1>, tensor<3072xf32>
    %5433 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5434 = stablehlo.divide %4334, %5433 : tensor<768x3072xf32>
    %5435 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5436 = stablehlo.multiply %5434, %5435 : tensor<768x3072xf32>
    %5437 = stablehlo.select %5262, %4334, %5436 : tensor<i1>, tensor<768x3072xf32>
    %5438 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5439 = stablehlo.divide %2892, %5438 : tensor<768xf32>
    %5440 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5441 = stablehlo.multiply %5439, %5440 : tensor<768xf32>
    %5442 = stablehlo.select %5262, %2892, %5441 : tensor<i1>, tensor<768xf32>
    %5443 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5444 = stablehlo.divide %2897, %5443 : tensor<768x768xf32>
    %5445 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5446 = stablehlo.multiply %5444, %5445 : tensor<768x768xf32>
    %5447 = stablehlo.select %5262, %2897, %5446 : tensor<i1>, tensor<768x768xf32>
    %5448 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5449 = stablehlo.divide %2903, %5448 : tensor<768xf32>
    %5450 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5451 = stablehlo.multiply %5449, %5450 : tensor<768xf32>
    %5452 = stablehlo.select %5262, %2903, %5451 : tensor<i1>, tensor<768xf32>
    %5453 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5454 = stablehlo.divide %2908, %5453 : tensor<768x768xf32>
    %5455 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5456 = stablehlo.multiply %5454, %5455 : tensor<768x768xf32>
    %5457 = stablehlo.select %5262, %2908, %5456 : tensor<i1>, tensor<768x768xf32>
    %5458 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5459 = stablehlo.divide %2881, %5458 : tensor<768xf32>
    %5460 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5461 = stablehlo.multiply %5459, %5460 : tensor<768xf32>
    %5462 = stablehlo.select %5262, %2881, %5461 : tensor<i1>, tensor<768xf32>
    %5463 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5464 = stablehlo.divide %2886, %5463 : tensor<768x768xf32>
    %5465 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5466 = stablehlo.multiply %5464, %5465 : tensor<768x768xf32>
    %5467 = stablehlo.select %5262, %2886, %5466 : tensor<i1>, tensor<768x768xf32>
    %5468 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5469 = stablehlo.divide %2848, %5468 : tensor<768xf32>
    %5470 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5471 = stablehlo.multiply %5469, %5470 : tensor<768xf32>
    %5472 = stablehlo.select %5262, %2848, %5471 : tensor<i1>, tensor<768xf32>
    %5473 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5474 = stablehlo.divide %2852, %5473 : tensor<768x768xf32>
    %5475 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5476 = stablehlo.multiply %5474, %5475 : tensor<768x768xf32>
    %5477 = stablehlo.select %5262, %2852, %5476 : tensor<i1>, tensor<768x768xf32>
    %5478 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5479 = stablehlo.divide %2809, %5478 : tensor<768xf32>
    %5480 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5481 = stablehlo.multiply %5479, %5480 : tensor<768xf32>
    %5482 = stablehlo.select %5262, %2809, %5481 : tensor<i1>, tensor<768xf32>
    %5483 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5484 = stablehlo.divide %2820, %5483 : tensor<768xf32>
    %5485 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5486 = stablehlo.multiply %5484, %5485 : tensor<768xf32>
    %5487 = stablehlo.select %5262, %2820, %5486 : tensor<i1>, tensor<768xf32>
    %5488 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5489 = stablehlo.divide %2780, %5488 : tensor<768xf32>
    %5490 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5491 = stablehlo.multiply %5489, %5490 : tensor<768xf32>
    %5492 = stablehlo.select %5262, %2780, %5491 : tensor<i1>, tensor<768xf32>
    %5493 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5494 = stablehlo.divide %2782, %5493 : tensor<3072x768xf32>
    %5495 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5496 = stablehlo.multiply %5494, %5495 : tensor<3072x768xf32>
    %5497 = stablehlo.select %5262, %2782, %5496 : tensor<i1>, tensor<3072x768xf32>
    %5498 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5499 = stablehlo.divide %2741, %5498 : tensor<768xf32>
    %5500 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5501 = stablehlo.multiply %5499, %5500 : tensor<768xf32>
    %5502 = stablehlo.select %5262, %2741, %5501 : tensor<i1>, tensor<768xf32>
    %5503 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5504 = stablehlo.divide %2752, %5503 : tensor<768xf32>
    %5505 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5506 = stablehlo.multiply %5504, %5505 : tensor<768xf32>
    %5507 = stablehlo.select %5262, %2752, %5506 : tensor<i1>, tensor<768xf32>
    %5508 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5509 = stablehlo.divide %2802, %5508 : tensor<3072xf32>
    %5510 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5511 = stablehlo.multiply %5509, %5510 : tensor<3072xf32>
    %5512 = stablehlo.select %5262, %2802, %5511 : tensor<i1>, tensor<3072xf32>
    %5513 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5514 = stablehlo.divide %2804, %5513 : tensor<768x3072xf32>
    %5515 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5516 = stablehlo.multiply %5514, %5515 : tensor<768x3072xf32>
    %5517 = stablehlo.select %5262, %2804, %5516 : tensor<i1>, tensor<768x3072xf32>
    %5518 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5519 = stablehlo.divide %2722, %5518 : tensor<768xf32>
    %5520 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5521 = stablehlo.multiply %5519, %5520 : tensor<768xf32>
    %5522 = stablehlo.select %5262, %2722, %5521 : tensor<i1>, tensor<768xf32>
    %5523 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5524 = stablehlo.divide %2727, %5523 : tensor<768x768xf32>
    %5525 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5526 = stablehlo.multiply %5524, %5525 : tensor<768x768xf32>
    %5527 = stablehlo.select %5262, %2727, %5526 : tensor<i1>, tensor<768x768xf32>
    %5528 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5529 = stablehlo.divide %2733, %5528 : tensor<768xf32>
    %5530 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5531 = stablehlo.multiply %5529, %5530 : tensor<768xf32>
    %5532 = stablehlo.select %5262, %2733, %5531 : tensor<i1>, tensor<768xf32>
    %5533 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5534 = stablehlo.divide %2738, %5533 : tensor<768x768xf32>
    %5535 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5536 = stablehlo.multiply %5534, %5535 : tensor<768x768xf32>
    %5537 = stablehlo.select %5262, %2738, %5536 : tensor<i1>, tensor<768x768xf32>
    %5538 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5539 = stablehlo.divide %2711, %5538 : tensor<768xf32>
    %5540 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5541 = stablehlo.multiply %5539, %5540 : tensor<768xf32>
    %5542 = stablehlo.select %5262, %2711, %5541 : tensor<i1>, tensor<768xf32>
    %5543 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5544 = stablehlo.divide %2716, %5543 : tensor<768x768xf32>
    %5545 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5546 = stablehlo.multiply %5544, %5545 : tensor<768x768xf32>
    %5547 = stablehlo.select %5262, %2716, %5546 : tensor<i1>, tensor<768x768xf32>
    %5548 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5549 = stablehlo.divide %2678, %5548 : tensor<768xf32>
    %5550 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5551 = stablehlo.multiply %5549, %5550 : tensor<768xf32>
    %5552 = stablehlo.select %5262, %2678, %5551 : tensor<i1>, tensor<768xf32>
    %5553 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5554 = stablehlo.divide %2682, %5553 : tensor<768x768xf32>
    %5555 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5556 = stablehlo.multiply %5554, %5555 : tensor<768x768xf32>
    %5557 = stablehlo.select %5262, %2682, %5556 : tensor<i1>, tensor<768x768xf32>
    %5558 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5559 = stablehlo.divide %2639, %5558 : tensor<768xf32>
    %5560 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5561 = stablehlo.multiply %5559, %5560 : tensor<768xf32>
    %5562 = stablehlo.select %5262, %2639, %5561 : tensor<i1>, tensor<768xf32>
    %5563 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5564 = stablehlo.divide %2650, %5563 : tensor<768xf32>
    %5565 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5566 = stablehlo.multiply %5564, %5565 : tensor<768xf32>
    %5567 = stablehlo.select %5262, %2650, %5566 : tensor<i1>, tensor<768xf32>
    %5568 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5569 = stablehlo.divide %2610, %5568 : tensor<768xf32>
    %5570 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5571 = stablehlo.multiply %5569, %5570 : tensor<768xf32>
    %5572 = stablehlo.select %5262, %2610, %5571 : tensor<i1>, tensor<768xf32>
    %5573 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5574 = stablehlo.divide %2612, %5573 : tensor<3072x768xf32>
    %5575 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5576 = stablehlo.multiply %5574, %5575 : tensor<3072x768xf32>
    %5577 = stablehlo.select %5262, %2612, %5576 : tensor<i1>, tensor<3072x768xf32>
    %5578 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5579 = stablehlo.divide %2571, %5578 : tensor<768xf32>
    %5580 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5581 = stablehlo.multiply %5579, %5580 : tensor<768xf32>
    %5582 = stablehlo.select %5262, %2571, %5581 : tensor<i1>, tensor<768xf32>
    %5583 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5584 = stablehlo.divide %2582, %5583 : tensor<768xf32>
    %5585 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5586 = stablehlo.multiply %5584, %5585 : tensor<768xf32>
    %5587 = stablehlo.select %5262, %2582, %5586 : tensor<i1>, tensor<768xf32>
    %5588 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5589 = stablehlo.divide %2632, %5588 : tensor<3072xf32>
    %5590 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5591 = stablehlo.multiply %5589, %5590 : tensor<3072xf32>
    %5592 = stablehlo.select %5262, %2632, %5591 : tensor<i1>, tensor<3072xf32>
    %5593 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5594 = stablehlo.divide %2634, %5593 : tensor<768x3072xf32>
    %5595 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5596 = stablehlo.multiply %5594, %5595 : tensor<768x3072xf32>
    %5597 = stablehlo.select %5262, %2634, %5596 : tensor<i1>, tensor<768x3072xf32>
    %5598 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5599 = stablehlo.divide %4252, %5598 : tensor<768xf32>
    %5600 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5601 = stablehlo.multiply %5599, %5600 : tensor<768xf32>
    %5602 = stablehlo.select %5262, %4252, %5601 : tensor<i1>, tensor<768xf32>
    %5603 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5604 = stablehlo.divide %4257, %5603 : tensor<768x768xf32>
    %5605 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5606 = stablehlo.multiply %5604, %5605 : tensor<768x768xf32>
    %5607 = stablehlo.select %5262, %4257, %5606 : tensor<i1>, tensor<768x768xf32>
    %5608 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5609 = stablehlo.divide %4263, %5608 : tensor<768xf32>
    %5610 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5611 = stablehlo.multiply %5609, %5610 : tensor<768xf32>
    %5612 = stablehlo.select %5262, %4263, %5611 : tensor<i1>, tensor<768xf32>
    %5613 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5614 = stablehlo.divide %4268, %5613 : tensor<768x768xf32>
    %5615 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5616 = stablehlo.multiply %5614, %5615 : tensor<768x768xf32>
    %5617 = stablehlo.select %5262, %4268, %5616 : tensor<i1>, tensor<768x768xf32>
    %5618 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5619 = stablehlo.divide %4241, %5618 : tensor<768xf32>
    %5620 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5621 = stablehlo.multiply %5619, %5620 : tensor<768xf32>
    %5622 = stablehlo.select %5262, %4241, %5621 : tensor<i1>, tensor<768xf32>
    %5623 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5624 = stablehlo.divide %4246, %5623 : tensor<768x768xf32>
    %5625 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5626 = stablehlo.multiply %5624, %5625 : tensor<768x768xf32>
    %5627 = stablehlo.select %5262, %4246, %5626 : tensor<i1>, tensor<768x768xf32>
    %5628 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5629 = stablehlo.divide %4208, %5628 : tensor<768xf32>
    %5630 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5631 = stablehlo.multiply %5629, %5630 : tensor<768xf32>
    %5632 = stablehlo.select %5262, %4208, %5631 : tensor<i1>, tensor<768xf32>
    %5633 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5634 = stablehlo.divide %4212, %5633 : tensor<768x768xf32>
    %5635 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5636 = stablehlo.multiply %5634, %5635 : tensor<768x768xf32>
    %5637 = stablehlo.select %5262, %4212, %5636 : tensor<i1>, tensor<768x768xf32>
    %5638 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5639 = stablehlo.divide %4169, %5638 : tensor<768xf32>
    %5640 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5641 = stablehlo.multiply %5639, %5640 : tensor<768xf32>
    %5642 = stablehlo.select %5262, %4169, %5641 : tensor<i1>, tensor<768xf32>
    %5643 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5644 = stablehlo.divide %4180, %5643 : tensor<768xf32>
    %5645 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5646 = stablehlo.multiply %5644, %5645 : tensor<768xf32>
    %5647 = stablehlo.select %5262, %4180, %5646 : tensor<i1>, tensor<768xf32>
    %5648 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5649 = stablehlo.divide %4140, %5648 : tensor<768xf32>
    %5650 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5651 = stablehlo.multiply %5649, %5650 : tensor<768xf32>
    %5652 = stablehlo.select %5262, %4140, %5651 : tensor<i1>, tensor<768xf32>
    %5653 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5654 = stablehlo.divide %4142, %5653 : tensor<3072x768xf32>
    %5655 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5656 = stablehlo.multiply %5654, %5655 : tensor<3072x768xf32>
    %5657 = stablehlo.select %5262, %4142, %5656 : tensor<i1>, tensor<3072x768xf32>
    %5658 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5659 = stablehlo.divide %4101, %5658 : tensor<768xf32>
    %5660 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5661 = stablehlo.multiply %5659, %5660 : tensor<768xf32>
    %5662 = stablehlo.select %5262, %4101, %5661 : tensor<i1>, tensor<768xf32>
    %5663 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5664 = stablehlo.divide %4112, %5663 : tensor<768xf32>
    %5665 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5666 = stablehlo.multiply %5664, %5665 : tensor<768xf32>
    %5667 = stablehlo.select %5262, %4112, %5666 : tensor<i1>, tensor<768xf32>
    %5668 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5669 = stablehlo.divide %4162, %5668 : tensor<3072xf32>
    %5670 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5671 = stablehlo.multiply %5669, %5670 : tensor<3072xf32>
    %5672 = stablehlo.select %5262, %4162, %5671 : tensor<i1>, tensor<3072xf32>
    %5673 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5674 = stablehlo.divide %4164, %5673 : tensor<768x3072xf32>
    %5675 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5676 = stablehlo.multiply %5674, %5675 : tensor<768x3072xf32>
    %5677 = stablehlo.select %5262, %4164, %5676 : tensor<i1>, tensor<768x3072xf32>
    %5678 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5679 = stablehlo.divide %4082, %5678 : tensor<768xf32>
    %5680 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5681 = stablehlo.multiply %5679, %5680 : tensor<768xf32>
    %5682 = stablehlo.select %5262, %4082, %5681 : tensor<i1>, tensor<768xf32>
    %5683 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5684 = stablehlo.divide %4087, %5683 : tensor<768x768xf32>
    %5685 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5686 = stablehlo.multiply %5684, %5685 : tensor<768x768xf32>
    %5687 = stablehlo.select %5262, %4087, %5686 : tensor<i1>, tensor<768x768xf32>
    %5688 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5689 = stablehlo.divide %4093, %5688 : tensor<768xf32>
    %5690 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5691 = stablehlo.multiply %5689, %5690 : tensor<768xf32>
    %5692 = stablehlo.select %5262, %4093, %5691 : tensor<i1>, tensor<768xf32>
    %5693 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5694 = stablehlo.divide %4098, %5693 : tensor<768x768xf32>
    %5695 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5696 = stablehlo.multiply %5694, %5695 : tensor<768x768xf32>
    %5697 = stablehlo.select %5262, %4098, %5696 : tensor<i1>, tensor<768x768xf32>
    %5698 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5699 = stablehlo.divide %4071, %5698 : tensor<768xf32>
    %5700 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5701 = stablehlo.multiply %5699, %5700 : tensor<768xf32>
    %5702 = stablehlo.select %5262, %4071, %5701 : tensor<i1>, tensor<768xf32>
    %5703 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5704 = stablehlo.divide %4076, %5703 : tensor<768x768xf32>
    %5705 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5706 = stablehlo.multiply %5704, %5705 : tensor<768x768xf32>
    %5707 = stablehlo.select %5262, %4076, %5706 : tensor<i1>, tensor<768x768xf32>
    %5708 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5709 = stablehlo.divide %4038, %5708 : tensor<768xf32>
    %5710 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5711 = stablehlo.multiply %5709, %5710 : tensor<768xf32>
    %5712 = stablehlo.select %5262, %4038, %5711 : tensor<i1>, tensor<768xf32>
    %5713 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5714 = stablehlo.divide %4042, %5713 : tensor<768x768xf32>
    %5715 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5716 = stablehlo.multiply %5714, %5715 : tensor<768x768xf32>
    %5717 = stablehlo.select %5262, %4042, %5716 : tensor<i1>, tensor<768x768xf32>
    %5718 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5719 = stablehlo.divide %3999, %5718 : tensor<768xf32>
    %5720 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5721 = stablehlo.multiply %5719, %5720 : tensor<768xf32>
    %5722 = stablehlo.select %5262, %3999, %5721 : tensor<i1>, tensor<768xf32>
    %5723 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5724 = stablehlo.divide %4010, %5723 : tensor<768xf32>
    %5725 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5726 = stablehlo.multiply %5724, %5725 : tensor<768xf32>
    %5727 = stablehlo.select %5262, %4010, %5726 : tensor<i1>, tensor<768xf32>
    %5728 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5729 = stablehlo.divide %3970, %5728 : tensor<768xf32>
    %5730 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5731 = stablehlo.multiply %5729, %5730 : tensor<768xf32>
    %5732 = stablehlo.select %5262, %3970, %5731 : tensor<i1>, tensor<768xf32>
    %5733 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5734 = stablehlo.divide %3972, %5733 : tensor<3072x768xf32>
    %5735 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5736 = stablehlo.multiply %5734, %5735 : tensor<3072x768xf32>
    %5737 = stablehlo.select %5262, %3972, %5736 : tensor<i1>, tensor<3072x768xf32>
    %5738 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5739 = stablehlo.divide %3931, %5738 : tensor<768xf32>
    %5740 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5741 = stablehlo.multiply %5739, %5740 : tensor<768xf32>
    %5742 = stablehlo.select %5262, %3931, %5741 : tensor<i1>, tensor<768xf32>
    %5743 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5744 = stablehlo.divide %3942, %5743 : tensor<768xf32>
    %5745 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5746 = stablehlo.multiply %5744, %5745 : tensor<768xf32>
    %5747 = stablehlo.select %5262, %3942, %5746 : tensor<i1>, tensor<768xf32>
    %5748 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5749 = stablehlo.divide %3992, %5748 : tensor<3072xf32>
    %5750 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5751 = stablehlo.multiply %5749, %5750 : tensor<3072xf32>
    %5752 = stablehlo.select %5262, %3992, %5751 : tensor<i1>, tensor<3072xf32>
    %5753 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5754 = stablehlo.divide %3994, %5753 : tensor<768x3072xf32>
    %5755 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5756 = stablehlo.multiply %5754, %5755 : tensor<768x3072xf32>
    %5757 = stablehlo.select %5262, %3994, %5756 : tensor<i1>, tensor<768x3072xf32>
    %5758 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5759 = stablehlo.divide %3912, %5758 : tensor<768xf32>
    %5760 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5761 = stablehlo.multiply %5759, %5760 : tensor<768xf32>
    %5762 = stablehlo.select %5262, %3912, %5761 : tensor<i1>, tensor<768xf32>
    %5763 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5764 = stablehlo.divide %3917, %5763 : tensor<768x768xf32>
    %5765 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5766 = stablehlo.multiply %5764, %5765 : tensor<768x768xf32>
    %5767 = stablehlo.select %5262, %3917, %5766 : tensor<i1>, tensor<768x768xf32>
    %5768 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5769 = stablehlo.divide %3923, %5768 : tensor<768xf32>
    %5770 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5771 = stablehlo.multiply %5769, %5770 : tensor<768xf32>
    %5772 = stablehlo.select %5262, %3923, %5771 : tensor<i1>, tensor<768xf32>
    %5773 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5774 = stablehlo.divide %3928, %5773 : tensor<768x768xf32>
    %5775 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5776 = stablehlo.multiply %5774, %5775 : tensor<768x768xf32>
    %5777 = stablehlo.select %5262, %3928, %5776 : tensor<i1>, tensor<768x768xf32>
    %5778 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5779 = stablehlo.divide %3901, %5778 : tensor<768xf32>
    %5780 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5781 = stablehlo.multiply %5779, %5780 : tensor<768xf32>
    %5782 = stablehlo.select %5262, %3901, %5781 : tensor<i1>, tensor<768xf32>
    %5783 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5784 = stablehlo.divide %3906, %5783 : tensor<768x768xf32>
    %5785 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5786 = stablehlo.multiply %5784, %5785 : tensor<768x768xf32>
    %5787 = stablehlo.select %5262, %3906, %5786 : tensor<i1>, tensor<768x768xf32>
    %5788 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5789 = stablehlo.divide %3868, %5788 : tensor<768xf32>
    %5790 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5791 = stablehlo.multiply %5789, %5790 : tensor<768xf32>
    %5792 = stablehlo.select %5262, %3868, %5791 : tensor<i1>, tensor<768xf32>
    %5793 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5794 = stablehlo.divide %3872, %5793 : tensor<768x768xf32>
    %5795 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5796 = stablehlo.multiply %5794, %5795 : tensor<768x768xf32>
    %5797 = stablehlo.select %5262, %3872, %5796 : tensor<i1>, tensor<768x768xf32>
    %5798 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5799 = stablehlo.divide %3829, %5798 : tensor<768xf32>
    %5800 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5801 = stablehlo.multiply %5799, %5800 : tensor<768xf32>
    %5802 = stablehlo.select %5262, %3829, %5801 : tensor<i1>, tensor<768xf32>
    %5803 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5804 = stablehlo.divide %3840, %5803 : tensor<768xf32>
    %5805 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5806 = stablehlo.multiply %5804, %5805 : tensor<768xf32>
    %5807 = stablehlo.select %5262, %3840, %5806 : tensor<i1>, tensor<768xf32>
    %5808 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5809 = stablehlo.divide %3800, %5808 : tensor<768xf32>
    %5810 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5811 = stablehlo.multiply %5809, %5810 : tensor<768xf32>
    %5812 = stablehlo.select %5262, %3800, %5811 : tensor<i1>, tensor<768xf32>
    %5813 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5814 = stablehlo.divide %3802, %5813 : tensor<3072x768xf32>
    %5815 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5816 = stablehlo.multiply %5814, %5815 : tensor<3072x768xf32>
    %5817 = stablehlo.select %5262, %3802, %5816 : tensor<i1>, tensor<3072x768xf32>
    %5818 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5819 = stablehlo.divide %3761, %5818 : tensor<768xf32>
    %5820 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5821 = stablehlo.multiply %5819, %5820 : tensor<768xf32>
    %5822 = stablehlo.select %5262, %3761, %5821 : tensor<i1>, tensor<768xf32>
    %5823 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5824 = stablehlo.divide %3772, %5823 : tensor<768xf32>
    %5825 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5826 = stablehlo.multiply %5824, %5825 : tensor<768xf32>
    %5827 = stablehlo.select %5262, %3772, %5826 : tensor<i1>, tensor<768xf32>
    %5828 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5829 = stablehlo.divide %3822, %5828 : tensor<3072xf32>
    %5830 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5831 = stablehlo.multiply %5829, %5830 : tensor<3072xf32>
    %5832 = stablehlo.select %5262, %3822, %5831 : tensor<i1>, tensor<3072xf32>
    %5833 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5834 = stablehlo.divide %3824, %5833 : tensor<768x3072xf32>
    %5835 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5836 = stablehlo.multiply %5834, %5835 : tensor<768x3072xf32>
    %5837 = stablehlo.select %5262, %3824, %5836 : tensor<i1>, tensor<768x3072xf32>
    %5838 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5839 = stablehlo.divide %3742, %5838 : tensor<768xf32>
    %5840 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5841 = stablehlo.multiply %5839, %5840 : tensor<768xf32>
    %5842 = stablehlo.select %5262, %3742, %5841 : tensor<i1>, tensor<768xf32>
    %5843 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5844 = stablehlo.divide %3747, %5843 : tensor<768x768xf32>
    %5845 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5846 = stablehlo.multiply %5844, %5845 : tensor<768x768xf32>
    %5847 = stablehlo.select %5262, %3747, %5846 : tensor<i1>, tensor<768x768xf32>
    %5848 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5849 = stablehlo.divide %3753, %5848 : tensor<768xf32>
    %5850 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5851 = stablehlo.multiply %5849, %5850 : tensor<768xf32>
    %5852 = stablehlo.select %5262, %3753, %5851 : tensor<i1>, tensor<768xf32>
    %5853 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5854 = stablehlo.divide %3758, %5853 : tensor<768x768xf32>
    %5855 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5856 = stablehlo.multiply %5854, %5855 : tensor<768x768xf32>
    %5857 = stablehlo.select %5262, %3758, %5856 : tensor<i1>, tensor<768x768xf32>
    %5858 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5859 = stablehlo.divide %3731, %5858 : tensor<768xf32>
    %5860 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5861 = stablehlo.multiply %5859, %5860 : tensor<768xf32>
    %5862 = stablehlo.select %5262, %3731, %5861 : tensor<i1>, tensor<768xf32>
    %5863 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5864 = stablehlo.divide %3736, %5863 : tensor<768x768xf32>
    %5865 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5866 = stablehlo.multiply %5864, %5865 : tensor<768x768xf32>
    %5867 = stablehlo.select %5262, %3736, %5866 : tensor<i1>, tensor<768x768xf32>
    %5868 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5869 = stablehlo.divide %3698, %5868 : tensor<768xf32>
    %5870 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5871 = stablehlo.multiply %5869, %5870 : tensor<768xf32>
    %5872 = stablehlo.select %5262, %3698, %5871 : tensor<i1>, tensor<768xf32>
    %5873 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5874 = stablehlo.divide %3702, %5873 : tensor<768x768xf32>
    %5875 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5876 = stablehlo.multiply %5874, %5875 : tensor<768x768xf32>
    %5877 = stablehlo.select %5262, %3702, %5876 : tensor<i1>, tensor<768x768xf32>
    %5878 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5879 = stablehlo.divide %3659, %5878 : tensor<768xf32>
    %5880 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5881 = stablehlo.multiply %5879, %5880 : tensor<768xf32>
    %5882 = stablehlo.select %5262, %3659, %5881 : tensor<i1>, tensor<768xf32>
    %5883 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5884 = stablehlo.divide %3670, %5883 : tensor<768xf32>
    %5885 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5886 = stablehlo.multiply %5884, %5885 : tensor<768xf32>
    %5887 = stablehlo.select %5262, %3670, %5886 : tensor<i1>, tensor<768xf32>
    %5888 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5889 = stablehlo.divide %3630, %5888 : tensor<768xf32>
    %5890 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5891 = stablehlo.multiply %5889, %5890 : tensor<768xf32>
    %5892 = stablehlo.select %5262, %3630, %5891 : tensor<i1>, tensor<768xf32>
    %5893 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5894 = stablehlo.divide %3632, %5893 : tensor<3072x768xf32>
    %5895 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5896 = stablehlo.multiply %5894, %5895 : tensor<3072x768xf32>
    %5897 = stablehlo.select %5262, %3632, %5896 : tensor<i1>, tensor<3072x768xf32>
    %5898 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5899 = stablehlo.divide %3591, %5898 : tensor<768xf32>
    %5900 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5901 = stablehlo.multiply %5899, %5900 : tensor<768xf32>
    %5902 = stablehlo.select %5262, %3591, %5901 : tensor<i1>, tensor<768xf32>
    %5903 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5904 = stablehlo.divide %3602, %5903 : tensor<768xf32>
    %5905 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5906 = stablehlo.multiply %5904, %5905 : tensor<768xf32>
    %5907 = stablehlo.select %5262, %3602, %5906 : tensor<i1>, tensor<768xf32>
    %5908 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5909 = stablehlo.divide %3652, %5908 : tensor<3072xf32>
    %5910 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5911 = stablehlo.multiply %5909, %5910 : tensor<3072xf32>
    %5912 = stablehlo.select %5262, %3652, %5911 : tensor<i1>, tensor<3072xf32>
    %5913 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5914 = stablehlo.divide %3654, %5913 : tensor<768x3072xf32>
    %5915 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5916 = stablehlo.multiply %5914, %5915 : tensor<768x3072xf32>
    %5917 = stablehlo.select %5262, %3654, %5916 : tensor<i1>, tensor<768x3072xf32>
    %5918 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5919 = stablehlo.divide %3572, %5918 : tensor<768xf32>
    %5920 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5921 = stablehlo.multiply %5919, %5920 : tensor<768xf32>
    %5922 = stablehlo.select %5262, %3572, %5921 : tensor<i1>, tensor<768xf32>
    %5923 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5924 = stablehlo.divide %3577, %5923 : tensor<768x768xf32>
    %5925 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5926 = stablehlo.multiply %5924, %5925 : tensor<768x768xf32>
    %5927 = stablehlo.select %5262, %3577, %5926 : tensor<i1>, tensor<768x768xf32>
    %5928 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5929 = stablehlo.divide %3583, %5928 : tensor<768xf32>
    %5930 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5931 = stablehlo.multiply %5929, %5930 : tensor<768xf32>
    %5932 = stablehlo.select %5262, %3583, %5931 : tensor<i1>, tensor<768xf32>
    %5933 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5934 = stablehlo.divide %3588, %5933 : tensor<768x768xf32>
    %5935 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5936 = stablehlo.multiply %5934, %5935 : tensor<768x768xf32>
    %5937 = stablehlo.select %5262, %3588, %5936 : tensor<i1>, tensor<768x768xf32>
    %5938 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5939 = stablehlo.divide %3561, %5938 : tensor<768xf32>
    %5940 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5941 = stablehlo.multiply %5939, %5940 : tensor<768xf32>
    %5942 = stablehlo.select %5262, %3561, %5941 : tensor<i1>, tensor<768xf32>
    %5943 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5944 = stablehlo.divide %3566, %5943 : tensor<768x768xf32>
    %5945 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5946 = stablehlo.multiply %5944, %5945 : tensor<768x768xf32>
    %5947 = stablehlo.select %5262, %3566, %5946 : tensor<i1>, tensor<768x768xf32>
    %5948 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5949 = stablehlo.divide %3528, %5948 : tensor<768xf32>
    %5950 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5951 = stablehlo.multiply %5949, %5950 : tensor<768xf32>
    %5952 = stablehlo.select %5262, %3528, %5951 : tensor<i1>, tensor<768xf32>
    %5953 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5954 = stablehlo.divide %3532, %5953 : tensor<768x768xf32>
    %5955 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5956 = stablehlo.multiply %5954, %5955 : tensor<768x768xf32>
    %5957 = stablehlo.select %5262, %3532, %5956 : tensor<i1>, tensor<768x768xf32>
    %5958 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5959 = stablehlo.divide %3489, %5958 : tensor<768xf32>
    %5960 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5961 = stablehlo.multiply %5959, %5960 : tensor<768xf32>
    %5962 = stablehlo.select %5262, %3489, %5961 : tensor<i1>, tensor<768xf32>
    %5963 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5964 = stablehlo.divide %3500, %5963 : tensor<768xf32>
    %5965 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5966 = stablehlo.multiply %5964, %5965 : tensor<768xf32>
    %5967 = stablehlo.select %5262, %3500, %5966 : tensor<i1>, tensor<768xf32>
    %5968 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5969 = stablehlo.divide %3460, %5968 : tensor<768xf32>
    %5970 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5971 = stablehlo.multiply %5969, %5970 : tensor<768xf32>
    %5972 = stablehlo.select %5262, %3460, %5971 : tensor<i1>, tensor<768xf32>
    %5973 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5974 = stablehlo.divide %3462, %5973 : tensor<3072x768xf32>
    %5975 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5976 = stablehlo.multiply %5974, %5975 : tensor<3072x768xf32>
    %5977 = stablehlo.select %5262, %3462, %5976 : tensor<i1>, tensor<3072x768xf32>
    %5978 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5979 = stablehlo.divide %3421, %5978 : tensor<768xf32>
    %5980 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5981 = stablehlo.multiply %5979, %5980 : tensor<768xf32>
    %5982 = stablehlo.select %5262, %3421, %5981 : tensor<i1>, tensor<768xf32>
    %5983 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5984 = stablehlo.divide %3432, %5983 : tensor<768xf32>
    %5985 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5986 = stablehlo.multiply %5984, %5985 : tensor<768xf32>
    %5987 = stablehlo.select %5262, %3432, %5986 : tensor<i1>, tensor<768xf32>
    %5988 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5989 = stablehlo.divide %3482, %5988 : tensor<3072xf32>
    %5990 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5991 = stablehlo.multiply %5989, %5990 : tensor<3072xf32>
    %5992 = stablehlo.select %5262, %3482, %5991 : tensor<i1>, tensor<3072xf32>
    %5993 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5994 = stablehlo.divide %3484, %5993 : tensor<768x3072xf32>
    %5995 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5996 = stablehlo.multiply %5994, %5995 : tensor<768x3072xf32>
    %5997 = stablehlo.select %5262, %3484, %5996 : tensor<i1>, tensor<768x3072xf32>
    %5998 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5999 = stablehlo.divide %3402, %5998 : tensor<768xf32>
    %6000 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6001 = stablehlo.multiply %5999, %6000 : tensor<768xf32>
    %6002 = stablehlo.select %5262, %3402, %6001 : tensor<i1>, tensor<768xf32>
    %6003 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6004 = stablehlo.divide %3407, %6003 : tensor<768x768xf32>
    %6005 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6006 = stablehlo.multiply %6004, %6005 : tensor<768x768xf32>
    %6007 = stablehlo.select %5262, %3407, %6006 : tensor<i1>, tensor<768x768xf32>
    %6008 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6009 = stablehlo.divide %3413, %6008 : tensor<768xf32>
    %6010 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6011 = stablehlo.multiply %6009, %6010 : tensor<768xf32>
    %6012 = stablehlo.select %5262, %3413, %6011 : tensor<i1>, tensor<768xf32>
    %6013 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6014 = stablehlo.divide %3418, %6013 : tensor<768x768xf32>
    %6015 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6016 = stablehlo.multiply %6014, %6015 : tensor<768x768xf32>
    %6017 = stablehlo.select %5262, %3418, %6016 : tensor<i1>, tensor<768x768xf32>
    %6018 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6019 = stablehlo.divide %3391, %6018 : tensor<768xf32>
    %6020 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6021 = stablehlo.multiply %6019, %6020 : tensor<768xf32>
    %6022 = stablehlo.select %5262, %3391, %6021 : tensor<i1>, tensor<768xf32>
    %6023 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6024 = stablehlo.divide %3396, %6023 : tensor<768x768xf32>
    %6025 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6026 = stablehlo.multiply %6024, %6025 : tensor<768x768xf32>
    %6027 = stablehlo.select %5262, %3396, %6026 : tensor<i1>, tensor<768x768xf32>
    %6028 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6029 = stablehlo.divide %3358, %6028 : tensor<768xf32>
    %6030 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6031 = stablehlo.multiply %6029, %6030 : tensor<768xf32>
    %6032 = stablehlo.select %5262, %3358, %6031 : tensor<i1>, tensor<768xf32>
    %6033 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6034 = stablehlo.divide %3362, %6033 : tensor<768x768xf32>
    %6035 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6036 = stablehlo.multiply %6034, %6035 : tensor<768x768xf32>
    %6037 = stablehlo.select %5262, %3362, %6036 : tensor<i1>, tensor<768x768xf32>
    %6038 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6039 = stablehlo.divide %3319, %6038 : tensor<768xf32>
    %6040 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6041 = stablehlo.multiply %6039, %6040 : tensor<768xf32>
    %6042 = stablehlo.select %5262, %3319, %6041 : tensor<i1>, tensor<768xf32>
    %6043 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6044 = stablehlo.divide %3330, %6043 : tensor<768xf32>
    %6045 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6046 = stablehlo.multiply %6044, %6045 : tensor<768xf32>
    %6047 = stablehlo.select %5262, %3330, %6046 : tensor<i1>, tensor<768xf32>
    %6048 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6049 = stablehlo.divide %3290, %6048 : tensor<768xf32>
    %6050 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6051 = stablehlo.multiply %6049, %6050 : tensor<768xf32>
    %6052 = stablehlo.select %5262, %3290, %6051 : tensor<i1>, tensor<768xf32>
    %6053 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6054 = stablehlo.divide %3292, %6053 : tensor<3072x768xf32>
    %6055 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6056 = stablehlo.multiply %6054, %6055 : tensor<3072x768xf32>
    %6057 = stablehlo.select %5262, %3292, %6056 : tensor<i1>, tensor<3072x768xf32>
    %6058 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6059 = stablehlo.divide %3251, %6058 : tensor<768xf32>
    %6060 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6061 = stablehlo.multiply %6059, %6060 : tensor<768xf32>
    %6062 = stablehlo.select %5262, %3251, %6061 : tensor<i1>, tensor<768xf32>
    %6063 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6064 = stablehlo.divide %3262, %6063 : tensor<768xf32>
    %6065 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6066 = stablehlo.multiply %6064, %6065 : tensor<768xf32>
    %6067 = stablehlo.select %5262, %3262, %6066 : tensor<i1>, tensor<768xf32>
    %6068 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6069 = stablehlo.divide %3312, %6068 : tensor<3072xf32>
    %6070 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6071 = stablehlo.multiply %6069, %6070 : tensor<3072xf32>
    %6072 = stablehlo.select %5262, %3312, %6071 : tensor<i1>, tensor<3072xf32>
    %6073 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6074 = stablehlo.divide %3314, %6073 : tensor<768x3072xf32>
    %6075 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6076 = stablehlo.multiply %6074, %6075 : tensor<768x3072xf32>
    %6077 = stablehlo.select %5262, %3314, %6076 : tensor<i1>, tensor<768x3072xf32>
    %6078 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6079 = stablehlo.divide %3232, %6078 : tensor<768xf32>
    %6080 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6081 = stablehlo.multiply %6079, %6080 : tensor<768xf32>
    %6082 = stablehlo.select %5262, %3232, %6081 : tensor<i1>, tensor<768xf32>
    %6083 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6084 = stablehlo.divide %3237, %6083 : tensor<768x768xf32>
    %6085 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6086 = stablehlo.multiply %6084, %6085 : tensor<768x768xf32>
    %6087 = stablehlo.select %5262, %3237, %6086 : tensor<i1>, tensor<768x768xf32>
    %6088 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6089 = stablehlo.divide %3243, %6088 : tensor<768xf32>
    %6090 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6091 = stablehlo.multiply %6089, %6090 : tensor<768xf32>
    %6092 = stablehlo.select %5262, %3243, %6091 : tensor<i1>, tensor<768xf32>
    %6093 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6094 = stablehlo.divide %3248, %6093 : tensor<768x768xf32>
    %6095 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6096 = stablehlo.multiply %6094, %6095 : tensor<768x768xf32>
    %6097 = stablehlo.select %5262, %3248, %6096 : tensor<i1>, tensor<768x768xf32>
    %6098 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6099 = stablehlo.divide %3221, %6098 : tensor<768xf32>
    %6100 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6101 = stablehlo.multiply %6099, %6100 : tensor<768xf32>
    %6102 = stablehlo.select %5262, %3221, %6101 : tensor<i1>, tensor<768xf32>
    %6103 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6104 = stablehlo.divide %3226, %6103 : tensor<768x768xf32>
    %6105 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6106 = stablehlo.multiply %6104, %6105 : tensor<768x768xf32>
    %6107 = stablehlo.select %5262, %3226, %6106 : tensor<i1>, tensor<768x768xf32>
    %6108 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6109 = stablehlo.divide %3188, %6108 : tensor<768xf32>
    %6110 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6111 = stablehlo.multiply %6109, %6110 : tensor<768xf32>
    %6112 = stablehlo.select %5262, %3188, %6111 : tensor<i1>, tensor<768xf32>
    %6113 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6114 = stablehlo.divide %3192, %6113 : tensor<768x768xf32>
    %6115 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6116 = stablehlo.multiply %6114, %6115 : tensor<768x768xf32>
    %6117 = stablehlo.select %5262, %3192, %6116 : tensor<i1>, tensor<768x768xf32>
    %6118 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6119 = stablehlo.divide %3149, %6118 : tensor<768xf32>
    %6120 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6121 = stablehlo.multiply %6119, %6120 : tensor<768xf32>
    %6122 = stablehlo.select %5262, %3149, %6121 : tensor<i1>, tensor<768xf32>
    %6123 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6124 = stablehlo.divide %3160, %6123 : tensor<768xf32>
    %6125 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6126 = stablehlo.multiply %6124, %6125 : tensor<768xf32>
    %6127 = stablehlo.select %5262, %3160, %6126 : tensor<i1>, tensor<768xf32>
    %6128 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6129 = stablehlo.divide %3120, %6128 : tensor<768xf32>
    %6130 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6131 = stablehlo.multiply %6129, %6130 : tensor<768xf32>
    %6132 = stablehlo.select %5262, %3120, %6131 : tensor<i1>, tensor<768xf32>
    %6133 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6134 = stablehlo.divide %3122, %6133 : tensor<3072x768xf32>
    %6135 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6136 = stablehlo.multiply %6134, %6135 : tensor<3072x768xf32>
    %6137 = stablehlo.select %5262, %3122, %6136 : tensor<i1>, tensor<3072x768xf32>
    %6138 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6139 = stablehlo.divide %3081, %6138 : tensor<768xf32>
    %6140 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6141 = stablehlo.multiply %6139, %6140 : tensor<768xf32>
    %6142 = stablehlo.select %5262, %3081, %6141 : tensor<i1>, tensor<768xf32>
    %6143 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6144 = stablehlo.divide %3092, %6143 : tensor<768xf32>
    %6145 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6146 = stablehlo.multiply %6144, %6145 : tensor<768xf32>
    %6147 = stablehlo.select %5262, %3092, %6146 : tensor<i1>, tensor<768xf32>
    %6148 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6149 = stablehlo.divide %3142, %6148 : tensor<3072xf32>
    %6150 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6151 = stablehlo.multiply %6149, %6150 : tensor<3072xf32>
    %6152 = stablehlo.select %5262, %3142, %6151 : tensor<i1>, tensor<3072xf32>
    %6153 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6154 = stablehlo.divide %3144, %6153 : tensor<768x3072xf32>
    %6155 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6156 = stablehlo.multiply %6154, %6155 : tensor<768x3072xf32>
    %6157 = stablehlo.select %5262, %3144, %6156 : tensor<i1>, tensor<768x3072xf32>
    %6158 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6159 = stablehlo.divide %3062, %6158 : tensor<768xf32>
    %6160 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6161 = stablehlo.multiply %6159, %6160 : tensor<768xf32>
    %6162 = stablehlo.select %5262, %3062, %6161 : tensor<i1>, tensor<768xf32>
    %6163 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6164 = stablehlo.divide %3067, %6163 : tensor<768x768xf32>
    %6165 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6166 = stablehlo.multiply %6164, %6165 : tensor<768x768xf32>
    %6167 = stablehlo.select %5262, %3067, %6166 : tensor<i1>, tensor<768x768xf32>
    %6168 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6169 = stablehlo.divide %3073, %6168 : tensor<768xf32>
    %6170 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6171 = stablehlo.multiply %6169, %6170 : tensor<768xf32>
    %6172 = stablehlo.select %5262, %3073, %6171 : tensor<i1>, tensor<768xf32>
    %6173 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6174 = stablehlo.divide %3078, %6173 : tensor<768x768xf32>
    %6175 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6176 = stablehlo.multiply %6174, %6175 : tensor<768x768xf32>
    %6177 = stablehlo.select %5262, %3078, %6176 : tensor<i1>, tensor<768x768xf32>
    %6178 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6179 = stablehlo.divide %3051, %6178 : tensor<768xf32>
    %6180 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6181 = stablehlo.multiply %6179, %6180 : tensor<768xf32>
    %6182 = stablehlo.select %5262, %3051, %6181 : tensor<i1>, tensor<768xf32>
    %6183 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6184 = stablehlo.divide %3056, %6183 : tensor<768x768xf32>
    %6185 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6186 = stablehlo.multiply %6184, %6185 : tensor<768x768xf32>
    %6187 = stablehlo.select %5262, %3056, %6186 : tensor<i1>, tensor<768x768xf32>
    %6188 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6189 = stablehlo.divide %3018, %6188 : tensor<768xf32>
    %6190 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6191 = stablehlo.multiply %6189, %6190 : tensor<768xf32>
    %6192 = stablehlo.select %5262, %3018, %6191 : tensor<i1>, tensor<768xf32>
    %6193 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6194 = stablehlo.divide %3022, %6193 : tensor<768x768xf32>
    %6195 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6196 = stablehlo.multiply %6194, %6195 : tensor<768x768xf32>
    %6197 = stablehlo.select %5262, %3022, %6196 : tensor<i1>, tensor<768x768xf32>
    %6198 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6199 = stablehlo.divide %2979, %6198 : tensor<768xf32>
    %6200 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6201 = stablehlo.multiply %6199, %6200 : tensor<768xf32>
    %6202 = stablehlo.select %5262, %2979, %6201 : tensor<i1>, tensor<768xf32>
    %6203 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6204 = stablehlo.divide %2990, %6203 : tensor<768xf32>
    %6205 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6206 = stablehlo.multiply %6204, %6205 : tensor<768xf32>
    %6207 = stablehlo.select %5262, %2990, %6206 : tensor<i1>, tensor<768xf32>
    %6208 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6209 = stablehlo.divide %2950, %6208 : tensor<768xf32>
    %6210 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6211 = stablehlo.multiply %6209, %6210 : tensor<768xf32>
    %6212 = stablehlo.select %5262, %2950, %6211 : tensor<i1>, tensor<768xf32>
    %6213 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6214 = stablehlo.divide %2952, %6213 : tensor<3072x768xf32>
    %6215 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6216 = stablehlo.multiply %6214, %6215 : tensor<3072x768xf32>
    %6217 = stablehlo.select %5262, %2952, %6216 : tensor<i1>, tensor<3072x768xf32>
    %6218 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6219 = stablehlo.divide %2911, %6218 : tensor<768xf32>
    %6220 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6221 = stablehlo.multiply %6219, %6220 : tensor<768xf32>
    %6222 = stablehlo.select %5262, %2911, %6221 : tensor<i1>, tensor<768xf32>
    %6223 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6224 = stablehlo.divide %2922, %6223 : tensor<768xf32>
    %6225 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6226 = stablehlo.multiply %6224, %6225 : tensor<768xf32>
    %6227 = stablehlo.select %5262, %2922, %6226 : tensor<i1>, tensor<768xf32>
    %6228 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6229 = stablehlo.divide %2972, %6228 : tensor<3072xf32>
    %6230 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6231 = stablehlo.multiply %6229, %6230 : tensor<3072xf32>
    %6232 = stablehlo.select %5262, %2972, %6231 : tensor<i1>, tensor<3072xf32>
    %6233 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6234 = stablehlo.divide %2974, %6233 : tensor<768x3072xf32>
    %6235 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6236 = stablehlo.multiply %6234, %6235 : tensor<768x3072xf32>
    %6237 = stablehlo.select %5262, %2974, %6236 : tensor<i1>, tensor<768x3072xf32>
    %6238 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6239 = stablehlo.divide %4615, %6238 : tensor<768xf32>
    %6240 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6241 = stablehlo.multiply %6239, %6240 : tensor<768xf32>
    %6242 = stablehlo.select %5262, %4615, %6241 : tensor<i1>, tensor<768xf32>
    %6243 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6244 = stablehlo.divide %4626, %6243 : tensor<768xf32>
    %6245 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6246 = stablehlo.multiply %6244, %6245 : tensor<768xf32>
    %6247 = stablehlo.select %5262, %4626, %6246 : tensor<i1>, tensor<768xf32>
    %6248 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6249 = stablehlo.divide %2509, %6248 : tensor<30522xf32>
    %6250 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6251 = stablehlo.multiply %6249, %6250 : tensor<30522xf32>
    %6252 = stablehlo.select %5262, %2509, %6251 : tensor<i1>, tensor<30522xf32>
    %6253 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6254 = stablehlo.divide %2565, %6253 : tensor<768xf32>
    %6255 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6256 = stablehlo.multiply %6254, %6255 : tensor<768xf32>
    %6257 = stablehlo.select %5262, %2565, %6256 : tensor<i1>, tensor<768xf32>
    %6258 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6259 = stablehlo.divide %2567, %6258 : tensor<768x768xf32>
    %6260 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6261 = stablehlo.multiply %6259, %6260 : tensor<768x768xf32>
    %6262 = stablehlo.select %5262, %2567, %6261 : tensor<i1>, tensor<768x768xf32>
    %6263 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6264 = stablehlo.divide %2513, %6263 : tensor<30522x768xf32>
    %6265 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6266 = stablehlo.multiply %6264, %6265 : tensor<30522x768xf32>
    %6267 = stablehlo.select %5262, %2513, %6266 : tensor<i1>, tensor<30522x768xf32>
    %6268 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6269 = stablehlo.divide %2516, %6268 : tensor<768xf32>
    %6270 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6271 = stablehlo.multiply %6269, %6270 : tensor<768xf32>
    %6272 = stablehlo.select %5262, %2516, %6271 : tensor<i1>, tensor<768xf32>
    %6273 = stablehlo.broadcast_in_dim %5261, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6274 = stablehlo.divide %2527, %6273 : tensor<768xf32>
    %6275 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6276 = stablehlo.multiply %6274, %6275 : tensor<768xf32>
    %6277 = stablehlo.select %5262, %2527, %6276 : tensor<i1>, tensor<768xf32>
    %cst_753 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %6278 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6279 = stablehlo.multiply %6278, %5267 : tensor<512x768xf32>
    %6280 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6281 = stablehlo.multiply %6280, %arg204 : tensor<512x768xf32>
    %6282 = stablehlo.add %6279, %6281 : tensor<512x768xf32>
    %6283 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6284 = stablehlo.multiply %6283, %5272 : tensor<2x768xf32>
    %6285 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6286 = stablehlo.multiply %6285, %arg205 : tensor<2x768xf32>
    %6287 = stablehlo.add %6284, %6286 : tensor<2x768xf32>
    %6288 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6289 = stablehlo.multiply %6288, %5277 : tensor<30522x768xf32>
    %6290 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6291 = stablehlo.multiply %6290, %arg206 : tensor<30522x768xf32>
    %6292 = stablehlo.add %6289, %6291 : tensor<30522x768xf32>
    %6293 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6294 = stablehlo.multiply %6293, %5282 : tensor<768xf32>
    %6295 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6296 = stablehlo.multiply %6295, %arg207 : tensor<768xf32>
    %6297 = stablehlo.add %6294, %6296 : tensor<768xf32>
    %6298 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6299 = stablehlo.multiply %6298, %5287 : tensor<768x768xf32>
    %6300 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6301 = stablehlo.multiply %6300, %arg208 : tensor<768x768xf32>
    %6302 = stablehlo.add %6299, %6301 : tensor<768x768xf32>
    %6303 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6304 = stablehlo.multiply %6303, %5292 : tensor<768xf32>
    %6305 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6306 = stablehlo.multiply %6305, %arg209 : tensor<768xf32>
    %6307 = stablehlo.add %6304, %6306 : tensor<768xf32>
    %6308 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6309 = stablehlo.multiply %6308, %5297 : tensor<768x768xf32>
    %6310 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6311 = stablehlo.multiply %6310, %arg210 : tensor<768x768xf32>
    %6312 = stablehlo.add %6309, %6311 : tensor<768x768xf32>
    %6313 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6314 = stablehlo.multiply %6313, %5302 : tensor<768xf32>
    %6315 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6316 = stablehlo.multiply %6315, %arg211 : tensor<768xf32>
    %6317 = stablehlo.add %6314, %6316 : tensor<768xf32>
    %6318 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6319 = stablehlo.multiply %6318, %5307 : tensor<768x768xf32>
    %6320 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6321 = stablehlo.multiply %6320, %arg212 : tensor<768x768xf32>
    %6322 = stablehlo.add %6319, %6321 : tensor<768x768xf32>
    %6323 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6324 = stablehlo.multiply %6323, %5312 : tensor<768xf32>
    %6325 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6326 = stablehlo.multiply %6325, %arg213 : tensor<768xf32>
    %6327 = stablehlo.add %6324, %6326 : tensor<768xf32>
    %6328 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6329 = stablehlo.multiply %6328, %5317 : tensor<768x768xf32>
    %6330 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6331 = stablehlo.multiply %6330, %arg214 : tensor<768x768xf32>
    %6332 = stablehlo.add %6329, %6331 : tensor<768x768xf32>
    %6333 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6334 = stablehlo.multiply %6333, %5322 : tensor<768xf32>
    %6335 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6336 = stablehlo.multiply %6335, %arg215 : tensor<768xf32>
    %6337 = stablehlo.add %6334, %6336 : tensor<768xf32>
    %6338 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6339 = stablehlo.multiply %6338, %5327 : tensor<768xf32>
    %6340 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6341 = stablehlo.multiply %6340, %arg216 : tensor<768xf32>
    %6342 = stablehlo.add %6339, %6341 : tensor<768xf32>
    %6343 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6344 = stablehlo.multiply %6343, %5332 : tensor<768xf32>
    %6345 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6346 = stablehlo.multiply %6345, %arg217 : tensor<768xf32>
    %6347 = stablehlo.add %6344, %6346 : tensor<768xf32>
    %6348 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6349 = stablehlo.multiply %6348, %5337 : tensor<3072x768xf32>
    %6350 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6351 = stablehlo.multiply %6350, %arg218 : tensor<3072x768xf32>
    %6352 = stablehlo.add %6349, %6351 : tensor<3072x768xf32>
    %6353 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6354 = stablehlo.multiply %6353, %5342 : tensor<768xf32>
    %6355 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6356 = stablehlo.multiply %6355, %arg219 : tensor<768xf32>
    %6357 = stablehlo.add %6354, %6356 : tensor<768xf32>
    %6358 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6359 = stablehlo.multiply %6358, %5347 : tensor<768xf32>
    %6360 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6361 = stablehlo.multiply %6360, %arg220 : tensor<768xf32>
    %6362 = stablehlo.add %6359, %6361 : tensor<768xf32>
    %6363 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6364 = stablehlo.multiply %6363, %5352 : tensor<3072xf32>
    %6365 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6366 = stablehlo.multiply %6365, %arg221 : tensor<3072xf32>
    %6367 = stablehlo.add %6364, %6366 : tensor<3072xf32>
    %6368 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6369 = stablehlo.multiply %6368, %5357 : tensor<768x3072xf32>
    %6370 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6371 = stablehlo.multiply %6370, %arg222 : tensor<768x3072xf32>
    %6372 = stablehlo.add %6369, %6371 : tensor<768x3072xf32>
    %6373 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6374 = stablehlo.multiply %6373, %5362 : tensor<768xf32>
    %6375 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6376 = stablehlo.multiply %6375, %arg223 : tensor<768xf32>
    %6377 = stablehlo.add %6374, %6376 : tensor<768xf32>
    %6378 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6379 = stablehlo.multiply %6378, %5367 : tensor<768x768xf32>
    %6380 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6381 = stablehlo.multiply %6380, %arg224 : tensor<768x768xf32>
    %6382 = stablehlo.add %6379, %6381 : tensor<768x768xf32>
    %6383 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6384 = stablehlo.multiply %6383, %5372 : tensor<768xf32>
    %6385 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6386 = stablehlo.multiply %6385, %arg225 : tensor<768xf32>
    %6387 = stablehlo.add %6384, %6386 : tensor<768xf32>
    %6388 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6389 = stablehlo.multiply %6388, %5377 : tensor<768x768xf32>
    %6390 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6391 = stablehlo.multiply %6390, %arg226 : tensor<768x768xf32>
    %6392 = stablehlo.add %6389, %6391 : tensor<768x768xf32>
    %6393 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6394 = stablehlo.multiply %6393, %5382 : tensor<768xf32>
    %6395 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6396 = stablehlo.multiply %6395, %arg227 : tensor<768xf32>
    %6397 = stablehlo.add %6394, %6396 : tensor<768xf32>
    %6398 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6399 = stablehlo.multiply %6398, %5387 : tensor<768x768xf32>
    %6400 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6401 = stablehlo.multiply %6400, %arg228 : tensor<768x768xf32>
    %6402 = stablehlo.add %6399, %6401 : tensor<768x768xf32>
    %6403 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6404 = stablehlo.multiply %6403, %5392 : tensor<768xf32>
    %6405 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6406 = stablehlo.multiply %6405, %arg229 : tensor<768xf32>
    %6407 = stablehlo.add %6404, %6406 : tensor<768xf32>
    %6408 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6409 = stablehlo.multiply %6408, %5397 : tensor<768x768xf32>
    %6410 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6411 = stablehlo.multiply %6410, %arg230 : tensor<768x768xf32>
    %6412 = stablehlo.add %6409, %6411 : tensor<768x768xf32>
    %6413 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6414 = stablehlo.multiply %6413, %5402 : tensor<768xf32>
    %6415 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6416 = stablehlo.multiply %6415, %arg231 : tensor<768xf32>
    %6417 = stablehlo.add %6414, %6416 : tensor<768xf32>
    %6418 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6419 = stablehlo.multiply %6418, %5407 : tensor<768xf32>
    %6420 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6421 = stablehlo.multiply %6420, %arg232 : tensor<768xf32>
    %6422 = stablehlo.add %6419, %6421 : tensor<768xf32>
    %6423 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6424 = stablehlo.multiply %6423, %5412 : tensor<768xf32>
    %6425 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6426 = stablehlo.multiply %6425, %arg233 : tensor<768xf32>
    %6427 = stablehlo.add %6424, %6426 : tensor<768xf32>
    %6428 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6429 = stablehlo.multiply %6428, %5417 : tensor<3072x768xf32>
    %6430 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6431 = stablehlo.multiply %6430, %arg234 : tensor<3072x768xf32>
    %6432 = stablehlo.add %6429, %6431 : tensor<3072x768xf32>
    %6433 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6434 = stablehlo.multiply %6433, %5422 : tensor<768xf32>
    %6435 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6436 = stablehlo.multiply %6435, %arg235 : tensor<768xf32>
    %6437 = stablehlo.add %6434, %6436 : tensor<768xf32>
    %6438 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6439 = stablehlo.multiply %6438, %5427 : tensor<768xf32>
    %6440 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6441 = stablehlo.multiply %6440, %arg236 : tensor<768xf32>
    %6442 = stablehlo.add %6439, %6441 : tensor<768xf32>
    %6443 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6444 = stablehlo.multiply %6443, %5432 : tensor<3072xf32>
    %6445 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6446 = stablehlo.multiply %6445, %arg237 : tensor<3072xf32>
    %6447 = stablehlo.add %6444, %6446 : tensor<3072xf32>
    %6448 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6449 = stablehlo.multiply %6448, %5437 : tensor<768x3072xf32>
    %6450 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6451 = stablehlo.multiply %6450, %arg238 : tensor<768x3072xf32>
    %6452 = stablehlo.add %6449, %6451 : tensor<768x3072xf32>
    %6453 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6454 = stablehlo.multiply %6453, %5442 : tensor<768xf32>
    %6455 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6456 = stablehlo.multiply %6455, %arg239 : tensor<768xf32>
    %6457 = stablehlo.add %6454, %6456 : tensor<768xf32>
    %6458 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6459 = stablehlo.multiply %6458, %5447 : tensor<768x768xf32>
    %6460 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6461 = stablehlo.multiply %6460, %arg240 : tensor<768x768xf32>
    %6462 = stablehlo.add %6459, %6461 : tensor<768x768xf32>
    %6463 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6464 = stablehlo.multiply %6463, %5452 : tensor<768xf32>
    %6465 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6466 = stablehlo.multiply %6465, %arg241 : tensor<768xf32>
    %6467 = stablehlo.add %6464, %6466 : tensor<768xf32>
    %6468 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6469 = stablehlo.multiply %6468, %5457 : tensor<768x768xf32>
    %6470 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6471 = stablehlo.multiply %6470, %arg242 : tensor<768x768xf32>
    %6472 = stablehlo.add %6469, %6471 : tensor<768x768xf32>
    %6473 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6474 = stablehlo.multiply %6473, %5462 : tensor<768xf32>
    %6475 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6476 = stablehlo.multiply %6475, %arg243 : tensor<768xf32>
    %6477 = stablehlo.add %6474, %6476 : tensor<768xf32>
    %6478 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6479 = stablehlo.multiply %6478, %5467 : tensor<768x768xf32>
    %6480 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6481 = stablehlo.multiply %6480, %arg244 : tensor<768x768xf32>
    %6482 = stablehlo.add %6479, %6481 : tensor<768x768xf32>
    %6483 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6484 = stablehlo.multiply %6483, %5472 : tensor<768xf32>
    %6485 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6486 = stablehlo.multiply %6485, %arg245 : tensor<768xf32>
    %6487 = stablehlo.add %6484, %6486 : tensor<768xf32>
    %6488 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6489 = stablehlo.multiply %6488, %5477 : tensor<768x768xf32>
    %6490 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6491 = stablehlo.multiply %6490, %arg246 : tensor<768x768xf32>
    %6492 = stablehlo.add %6489, %6491 : tensor<768x768xf32>
    %6493 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6494 = stablehlo.multiply %6493, %5482 : tensor<768xf32>
    %6495 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6496 = stablehlo.multiply %6495, %arg247 : tensor<768xf32>
    %6497 = stablehlo.add %6494, %6496 : tensor<768xf32>
    %6498 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6499 = stablehlo.multiply %6498, %5487 : tensor<768xf32>
    %6500 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6501 = stablehlo.multiply %6500, %arg248 : tensor<768xf32>
    %6502 = stablehlo.add %6499, %6501 : tensor<768xf32>
    %6503 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6504 = stablehlo.multiply %6503, %5492 : tensor<768xf32>
    %6505 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6506 = stablehlo.multiply %6505, %arg249 : tensor<768xf32>
    %6507 = stablehlo.add %6504, %6506 : tensor<768xf32>
    %6508 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6509 = stablehlo.multiply %6508, %5497 : tensor<3072x768xf32>
    %6510 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6511 = stablehlo.multiply %6510, %arg250 : tensor<3072x768xf32>
    %6512 = stablehlo.add %6509, %6511 : tensor<3072x768xf32>
    %6513 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6514 = stablehlo.multiply %6513, %5502 : tensor<768xf32>
    %6515 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6516 = stablehlo.multiply %6515, %arg251 : tensor<768xf32>
    %6517 = stablehlo.add %6514, %6516 : tensor<768xf32>
    %6518 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6519 = stablehlo.multiply %6518, %5507 : tensor<768xf32>
    %6520 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6521 = stablehlo.multiply %6520, %arg252 : tensor<768xf32>
    %6522 = stablehlo.add %6519, %6521 : tensor<768xf32>
    %6523 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6524 = stablehlo.multiply %6523, %5512 : tensor<3072xf32>
    %6525 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6526 = stablehlo.multiply %6525, %arg253 : tensor<3072xf32>
    %6527 = stablehlo.add %6524, %6526 : tensor<3072xf32>
    %6528 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6529 = stablehlo.multiply %6528, %5517 : tensor<768x3072xf32>
    %6530 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6531 = stablehlo.multiply %6530, %arg254 : tensor<768x3072xf32>
    %6532 = stablehlo.add %6529, %6531 : tensor<768x3072xf32>
    %6533 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6534 = stablehlo.multiply %6533, %5522 : tensor<768xf32>
    %6535 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6536 = stablehlo.multiply %6535, %arg255 : tensor<768xf32>
    %6537 = stablehlo.add %6534, %6536 : tensor<768xf32>
    %6538 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6539 = stablehlo.multiply %6538, %5527 : tensor<768x768xf32>
    %6540 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6541 = stablehlo.multiply %6540, %arg256 : tensor<768x768xf32>
    %6542 = stablehlo.add %6539, %6541 : tensor<768x768xf32>
    %6543 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6544 = stablehlo.multiply %6543, %5532 : tensor<768xf32>
    %6545 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6546 = stablehlo.multiply %6545, %arg257 : tensor<768xf32>
    %6547 = stablehlo.add %6544, %6546 : tensor<768xf32>
    %6548 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6549 = stablehlo.multiply %6548, %5537 : tensor<768x768xf32>
    %6550 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6551 = stablehlo.multiply %6550, %arg258 : tensor<768x768xf32>
    %6552 = stablehlo.add %6549, %6551 : tensor<768x768xf32>
    %6553 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6554 = stablehlo.multiply %6553, %5542 : tensor<768xf32>
    %6555 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6556 = stablehlo.multiply %6555, %arg259 : tensor<768xf32>
    %6557 = stablehlo.add %6554, %6556 : tensor<768xf32>
    %6558 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6559 = stablehlo.multiply %6558, %5547 : tensor<768x768xf32>
    %6560 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6561 = stablehlo.multiply %6560, %arg260 : tensor<768x768xf32>
    %6562 = stablehlo.add %6559, %6561 : tensor<768x768xf32>
    %6563 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6564 = stablehlo.multiply %6563, %5552 : tensor<768xf32>
    %6565 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6566 = stablehlo.multiply %6565, %arg261 : tensor<768xf32>
    %6567 = stablehlo.add %6564, %6566 : tensor<768xf32>
    %6568 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6569 = stablehlo.multiply %6568, %5557 : tensor<768x768xf32>
    %6570 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6571 = stablehlo.multiply %6570, %arg262 : tensor<768x768xf32>
    %6572 = stablehlo.add %6569, %6571 : tensor<768x768xf32>
    %6573 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6574 = stablehlo.multiply %6573, %5562 : tensor<768xf32>
    %6575 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6576 = stablehlo.multiply %6575, %arg263 : tensor<768xf32>
    %6577 = stablehlo.add %6574, %6576 : tensor<768xf32>
    %6578 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6579 = stablehlo.multiply %6578, %5567 : tensor<768xf32>
    %6580 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6581 = stablehlo.multiply %6580, %arg264 : tensor<768xf32>
    %6582 = stablehlo.add %6579, %6581 : tensor<768xf32>
    %6583 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6584 = stablehlo.multiply %6583, %5572 : tensor<768xf32>
    %6585 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6586 = stablehlo.multiply %6585, %arg265 : tensor<768xf32>
    %6587 = stablehlo.add %6584, %6586 : tensor<768xf32>
    %6588 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6589 = stablehlo.multiply %6588, %5577 : tensor<3072x768xf32>
    %6590 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6591 = stablehlo.multiply %6590, %arg266 : tensor<3072x768xf32>
    %6592 = stablehlo.add %6589, %6591 : tensor<3072x768xf32>
    %6593 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6594 = stablehlo.multiply %6593, %5582 : tensor<768xf32>
    %6595 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6596 = stablehlo.multiply %6595, %arg267 : tensor<768xf32>
    %6597 = stablehlo.add %6594, %6596 : tensor<768xf32>
    %6598 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6599 = stablehlo.multiply %6598, %5587 : tensor<768xf32>
    %6600 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6601 = stablehlo.multiply %6600, %arg268 : tensor<768xf32>
    %6602 = stablehlo.add %6599, %6601 : tensor<768xf32>
    %6603 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6604 = stablehlo.multiply %6603, %5592 : tensor<3072xf32>
    %6605 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6606 = stablehlo.multiply %6605, %arg269 : tensor<3072xf32>
    %6607 = stablehlo.add %6604, %6606 : tensor<3072xf32>
    %6608 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6609 = stablehlo.multiply %6608, %5597 : tensor<768x3072xf32>
    %6610 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6611 = stablehlo.multiply %6610, %arg270 : tensor<768x3072xf32>
    %6612 = stablehlo.add %6609, %6611 : tensor<768x3072xf32>
    %6613 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6614 = stablehlo.multiply %6613, %5602 : tensor<768xf32>
    %6615 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6616 = stablehlo.multiply %6615, %arg271 : tensor<768xf32>
    %6617 = stablehlo.add %6614, %6616 : tensor<768xf32>
    %6618 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6619 = stablehlo.multiply %6618, %5607 : tensor<768x768xf32>
    %6620 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6621 = stablehlo.multiply %6620, %arg272 : tensor<768x768xf32>
    %6622 = stablehlo.add %6619, %6621 : tensor<768x768xf32>
    %6623 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6624 = stablehlo.multiply %6623, %5612 : tensor<768xf32>
    %6625 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6626 = stablehlo.multiply %6625, %arg273 : tensor<768xf32>
    %6627 = stablehlo.add %6624, %6626 : tensor<768xf32>
    %6628 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6629 = stablehlo.multiply %6628, %5617 : tensor<768x768xf32>
    %6630 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6631 = stablehlo.multiply %6630, %arg274 : tensor<768x768xf32>
    %6632 = stablehlo.add %6629, %6631 : tensor<768x768xf32>
    %6633 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6634 = stablehlo.multiply %6633, %5622 : tensor<768xf32>
    %6635 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6636 = stablehlo.multiply %6635, %arg275 : tensor<768xf32>
    %6637 = stablehlo.add %6634, %6636 : tensor<768xf32>
    %6638 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6639 = stablehlo.multiply %6638, %5627 : tensor<768x768xf32>
    %6640 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6641 = stablehlo.multiply %6640, %arg276 : tensor<768x768xf32>
    %6642 = stablehlo.add %6639, %6641 : tensor<768x768xf32>
    %6643 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6644 = stablehlo.multiply %6643, %5632 : tensor<768xf32>
    %6645 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6646 = stablehlo.multiply %6645, %arg277 : tensor<768xf32>
    %6647 = stablehlo.add %6644, %6646 : tensor<768xf32>
    %6648 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6649 = stablehlo.multiply %6648, %5637 : tensor<768x768xf32>
    %6650 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6651 = stablehlo.multiply %6650, %arg278 : tensor<768x768xf32>
    %6652 = stablehlo.add %6649, %6651 : tensor<768x768xf32>
    %6653 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6654 = stablehlo.multiply %6653, %5642 : tensor<768xf32>
    %6655 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6656 = stablehlo.multiply %6655, %arg279 : tensor<768xf32>
    %6657 = stablehlo.add %6654, %6656 : tensor<768xf32>
    %6658 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6659 = stablehlo.multiply %6658, %5647 : tensor<768xf32>
    %6660 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6661 = stablehlo.multiply %6660, %arg280 : tensor<768xf32>
    %6662 = stablehlo.add %6659, %6661 : tensor<768xf32>
    %6663 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6664 = stablehlo.multiply %6663, %5652 : tensor<768xf32>
    %6665 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6666 = stablehlo.multiply %6665, %arg281 : tensor<768xf32>
    %6667 = stablehlo.add %6664, %6666 : tensor<768xf32>
    %6668 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6669 = stablehlo.multiply %6668, %5657 : tensor<3072x768xf32>
    %6670 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6671 = stablehlo.multiply %6670, %arg282 : tensor<3072x768xf32>
    %6672 = stablehlo.add %6669, %6671 : tensor<3072x768xf32>
    %6673 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6674 = stablehlo.multiply %6673, %5662 : tensor<768xf32>
    %6675 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6676 = stablehlo.multiply %6675, %arg283 : tensor<768xf32>
    %6677 = stablehlo.add %6674, %6676 : tensor<768xf32>
    %6678 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6679 = stablehlo.multiply %6678, %5667 : tensor<768xf32>
    %6680 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6681 = stablehlo.multiply %6680, %arg284 : tensor<768xf32>
    %6682 = stablehlo.add %6679, %6681 : tensor<768xf32>
    %6683 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6684 = stablehlo.multiply %6683, %5672 : tensor<3072xf32>
    %6685 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6686 = stablehlo.multiply %6685, %arg285 : tensor<3072xf32>
    %6687 = stablehlo.add %6684, %6686 : tensor<3072xf32>
    %6688 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6689 = stablehlo.multiply %6688, %5677 : tensor<768x3072xf32>
    %6690 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6691 = stablehlo.multiply %6690, %arg286 : tensor<768x3072xf32>
    %6692 = stablehlo.add %6689, %6691 : tensor<768x3072xf32>
    %6693 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6694 = stablehlo.multiply %6693, %5682 : tensor<768xf32>
    %6695 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6696 = stablehlo.multiply %6695, %arg287 : tensor<768xf32>
    %6697 = stablehlo.add %6694, %6696 : tensor<768xf32>
    %6698 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6699 = stablehlo.multiply %6698, %5687 : tensor<768x768xf32>
    %6700 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6701 = stablehlo.multiply %6700, %arg288 : tensor<768x768xf32>
    %6702 = stablehlo.add %6699, %6701 : tensor<768x768xf32>
    %6703 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6704 = stablehlo.multiply %6703, %5692 : tensor<768xf32>
    %6705 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6706 = stablehlo.multiply %6705, %arg289 : tensor<768xf32>
    %6707 = stablehlo.add %6704, %6706 : tensor<768xf32>
    %6708 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6709 = stablehlo.multiply %6708, %5697 : tensor<768x768xf32>
    %6710 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6711 = stablehlo.multiply %6710, %arg290 : tensor<768x768xf32>
    %6712 = stablehlo.add %6709, %6711 : tensor<768x768xf32>
    %6713 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6714 = stablehlo.multiply %6713, %5702 : tensor<768xf32>
    %6715 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6716 = stablehlo.multiply %6715, %arg291 : tensor<768xf32>
    %6717 = stablehlo.add %6714, %6716 : tensor<768xf32>
    %6718 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6719 = stablehlo.multiply %6718, %5707 : tensor<768x768xf32>
    %6720 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6721 = stablehlo.multiply %6720, %arg292 : tensor<768x768xf32>
    %6722 = stablehlo.add %6719, %6721 : tensor<768x768xf32>
    %6723 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6724 = stablehlo.multiply %6723, %5712 : tensor<768xf32>
    %6725 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6726 = stablehlo.multiply %6725, %arg293 : tensor<768xf32>
    %6727 = stablehlo.add %6724, %6726 : tensor<768xf32>
    %6728 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6729 = stablehlo.multiply %6728, %5717 : tensor<768x768xf32>
    %6730 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6731 = stablehlo.multiply %6730, %arg294 : tensor<768x768xf32>
    %6732 = stablehlo.add %6729, %6731 : tensor<768x768xf32>
    %6733 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6734 = stablehlo.multiply %6733, %5722 : tensor<768xf32>
    %6735 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6736 = stablehlo.multiply %6735, %arg295 : tensor<768xf32>
    %6737 = stablehlo.add %6734, %6736 : tensor<768xf32>
    %6738 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6739 = stablehlo.multiply %6738, %5727 : tensor<768xf32>
    %6740 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6741 = stablehlo.multiply %6740, %arg296 : tensor<768xf32>
    %6742 = stablehlo.add %6739, %6741 : tensor<768xf32>
    %6743 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6744 = stablehlo.multiply %6743, %5732 : tensor<768xf32>
    %6745 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6746 = stablehlo.multiply %6745, %arg297 : tensor<768xf32>
    %6747 = stablehlo.add %6744, %6746 : tensor<768xf32>
    %6748 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6749 = stablehlo.multiply %6748, %5737 : tensor<3072x768xf32>
    %6750 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6751 = stablehlo.multiply %6750, %arg298 : tensor<3072x768xf32>
    %6752 = stablehlo.add %6749, %6751 : tensor<3072x768xf32>
    %6753 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6754 = stablehlo.multiply %6753, %5742 : tensor<768xf32>
    %6755 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6756 = stablehlo.multiply %6755, %arg299 : tensor<768xf32>
    %6757 = stablehlo.add %6754, %6756 : tensor<768xf32>
    %6758 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6759 = stablehlo.multiply %6758, %5747 : tensor<768xf32>
    %6760 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6761 = stablehlo.multiply %6760, %arg300 : tensor<768xf32>
    %6762 = stablehlo.add %6759, %6761 : tensor<768xf32>
    %6763 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6764 = stablehlo.multiply %6763, %5752 : tensor<3072xf32>
    %6765 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6766 = stablehlo.multiply %6765, %arg301 : tensor<3072xf32>
    %6767 = stablehlo.add %6764, %6766 : tensor<3072xf32>
    %6768 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6769 = stablehlo.multiply %6768, %5757 : tensor<768x3072xf32>
    %6770 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6771 = stablehlo.multiply %6770, %arg302 : tensor<768x3072xf32>
    %6772 = stablehlo.add %6769, %6771 : tensor<768x3072xf32>
    %6773 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6774 = stablehlo.multiply %6773, %5762 : tensor<768xf32>
    %6775 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6776 = stablehlo.multiply %6775, %arg303 : tensor<768xf32>
    %6777 = stablehlo.add %6774, %6776 : tensor<768xf32>
    %6778 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6779 = stablehlo.multiply %6778, %5767 : tensor<768x768xf32>
    %6780 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6781 = stablehlo.multiply %6780, %arg304 : tensor<768x768xf32>
    %6782 = stablehlo.add %6779, %6781 : tensor<768x768xf32>
    %6783 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6784 = stablehlo.multiply %6783, %5772 : tensor<768xf32>
    %6785 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6786 = stablehlo.multiply %6785, %arg305 : tensor<768xf32>
    %6787 = stablehlo.add %6784, %6786 : tensor<768xf32>
    %6788 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6789 = stablehlo.multiply %6788, %5777 : tensor<768x768xf32>
    %6790 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6791 = stablehlo.multiply %6790, %arg306 : tensor<768x768xf32>
    %6792 = stablehlo.add %6789, %6791 : tensor<768x768xf32>
    %6793 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6794 = stablehlo.multiply %6793, %5782 : tensor<768xf32>
    %6795 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6796 = stablehlo.multiply %6795, %arg307 : tensor<768xf32>
    %6797 = stablehlo.add %6794, %6796 : tensor<768xf32>
    %6798 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6799 = stablehlo.multiply %6798, %5787 : tensor<768x768xf32>
    %6800 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6801 = stablehlo.multiply %6800, %arg308 : tensor<768x768xf32>
    %6802 = stablehlo.add %6799, %6801 : tensor<768x768xf32>
    %6803 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6804 = stablehlo.multiply %6803, %5792 : tensor<768xf32>
    %6805 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6806 = stablehlo.multiply %6805, %arg309 : tensor<768xf32>
    %6807 = stablehlo.add %6804, %6806 : tensor<768xf32>
    %6808 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6809 = stablehlo.multiply %6808, %5797 : tensor<768x768xf32>
    %6810 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6811 = stablehlo.multiply %6810, %arg310 : tensor<768x768xf32>
    %6812 = stablehlo.add %6809, %6811 : tensor<768x768xf32>
    %6813 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6814 = stablehlo.multiply %6813, %5802 : tensor<768xf32>
    %6815 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6816 = stablehlo.multiply %6815, %arg311 : tensor<768xf32>
    %6817 = stablehlo.add %6814, %6816 : tensor<768xf32>
    %6818 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6819 = stablehlo.multiply %6818, %5807 : tensor<768xf32>
    %6820 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6821 = stablehlo.multiply %6820, %arg312 : tensor<768xf32>
    %6822 = stablehlo.add %6819, %6821 : tensor<768xf32>
    %6823 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6824 = stablehlo.multiply %6823, %5812 : tensor<768xf32>
    %6825 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6826 = stablehlo.multiply %6825, %arg313 : tensor<768xf32>
    %6827 = stablehlo.add %6824, %6826 : tensor<768xf32>
    %6828 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6829 = stablehlo.multiply %6828, %5817 : tensor<3072x768xf32>
    %6830 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6831 = stablehlo.multiply %6830, %arg314 : tensor<3072x768xf32>
    %6832 = stablehlo.add %6829, %6831 : tensor<3072x768xf32>
    %6833 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6834 = stablehlo.multiply %6833, %5822 : tensor<768xf32>
    %6835 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6836 = stablehlo.multiply %6835, %arg315 : tensor<768xf32>
    %6837 = stablehlo.add %6834, %6836 : tensor<768xf32>
    %6838 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6839 = stablehlo.multiply %6838, %5827 : tensor<768xf32>
    %6840 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6841 = stablehlo.multiply %6840, %arg316 : tensor<768xf32>
    %6842 = stablehlo.add %6839, %6841 : tensor<768xf32>
    %6843 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6844 = stablehlo.multiply %6843, %5832 : tensor<3072xf32>
    %6845 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6846 = stablehlo.multiply %6845, %arg317 : tensor<3072xf32>
    %6847 = stablehlo.add %6844, %6846 : tensor<3072xf32>
    %6848 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6849 = stablehlo.multiply %6848, %5837 : tensor<768x3072xf32>
    %6850 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6851 = stablehlo.multiply %6850, %arg318 : tensor<768x3072xf32>
    %6852 = stablehlo.add %6849, %6851 : tensor<768x3072xf32>
    %6853 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6854 = stablehlo.multiply %6853, %5842 : tensor<768xf32>
    %6855 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6856 = stablehlo.multiply %6855, %arg319 : tensor<768xf32>
    %6857 = stablehlo.add %6854, %6856 : tensor<768xf32>
    %6858 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6859 = stablehlo.multiply %6858, %5847 : tensor<768x768xf32>
    %6860 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6861 = stablehlo.multiply %6860, %arg320 : tensor<768x768xf32>
    %6862 = stablehlo.add %6859, %6861 : tensor<768x768xf32>
    %6863 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6864 = stablehlo.multiply %6863, %5852 : tensor<768xf32>
    %6865 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6866 = stablehlo.multiply %6865, %arg321 : tensor<768xf32>
    %6867 = stablehlo.add %6864, %6866 : tensor<768xf32>
    %6868 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6869 = stablehlo.multiply %6868, %5857 : tensor<768x768xf32>
    %6870 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6871 = stablehlo.multiply %6870, %arg322 : tensor<768x768xf32>
    %6872 = stablehlo.add %6869, %6871 : tensor<768x768xf32>
    %6873 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6874 = stablehlo.multiply %6873, %5862 : tensor<768xf32>
    %6875 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6876 = stablehlo.multiply %6875, %arg323 : tensor<768xf32>
    %6877 = stablehlo.add %6874, %6876 : tensor<768xf32>
    %6878 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6879 = stablehlo.multiply %6878, %5867 : tensor<768x768xf32>
    %6880 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6881 = stablehlo.multiply %6880, %arg324 : tensor<768x768xf32>
    %6882 = stablehlo.add %6879, %6881 : tensor<768x768xf32>
    %6883 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6884 = stablehlo.multiply %6883, %5872 : tensor<768xf32>
    %6885 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6886 = stablehlo.multiply %6885, %arg325 : tensor<768xf32>
    %6887 = stablehlo.add %6884, %6886 : tensor<768xf32>
    %6888 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6889 = stablehlo.multiply %6888, %5877 : tensor<768x768xf32>
    %6890 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6891 = stablehlo.multiply %6890, %arg326 : tensor<768x768xf32>
    %6892 = stablehlo.add %6889, %6891 : tensor<768x768xf32>
    %6893 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6894 = stablehlo.multiply %6893, %5882 : tensor<768xf32>
    %6895 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6896 = stablehlo.multiply %6895, %arg327 : tensor<768xf32>
    %6897 = stablehlo.add %6894, %6896 : tensor<768xf32>
    %6898 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6899 = stablehlo.multiply %6898, %5887 : tensor<768xf32>
    %6900 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6901 = stablehlo.multiply %6900, %arg328 : tensor<768xf32>
    %6902 = stablehlo.add %6899, %6901 : tensor<768xf32>
    %6903 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6904 = stablehlo.multiply %6903, %5892 : tensor<768xf32>
    %6905 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6906 = stablehlo.multiply %6905, %arg329 : tensor<768xf32>
    %6907 = stablehlo.add %6904, %6906 : tensor<768xf32>
    %6908 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6909 = stablehlo.multiply %6908, %5897 : tensor<3072x768xf32>
    %6910 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6911 = stablehlo.multiply %6910, %arg330 : tensor<3072x768xf32>
    %6912 = stablehlo.add %6909, %6911 : tensor<3072x768xf32>
    %6913 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6914 = stablehlo.multiply %6913, %5902 : tensor<768xf32>
    %6915 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6916 = stablehlo.multiply %6915, %arg331 : tensor<768xf32>
    %6917 = stablehlo.add %6914, %6916 : tensor<768xf32>
    %6918 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6919 = stablehlo.multiply %6918, %5907 : tensor<768xf32>
    %6920 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6921 = stablehlo.multiply %6920, %arg332 : tensor<768xf32>
    %6922 = stablehlo.add %6919, %6921 : tensor<768xf32>
    %6923 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6924 = stablehlo.multiply %6923, %5912 : tensor<3072xf32>
    %6925 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6926 = stablehlo.multiply %6925, %arg333 : tensor<3072xf32>
    %6927 = stablehlo.add %6924, %6926 : tensor<3072xf32>
    %6928 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6929 = stablehlo.multiply %6928, %5917 : tensor<768x3072xf32>
    %6930 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6931 = stablehlo.multiply %6930, %arg334 : tensor<768x3072xf32>
    %6932 = stablehlo.add %6929, %6931 : tensor<768x3072xf32>
    %6933 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6934 = stablehlo.multiply %6933, %5922 : tensor<768xf32>
    %6935 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6936 = stablehlo.multiply %6935, %arg335 : tensor<768xf32>
    %6937 = stablehlo.add %6934, %6936 : tensor<768xf32>
    %6938 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6939 = stablehlo.multiply %6938, %5927 : tensor<768x768xf32>
    %6940 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6941 = stablehlo.multiply %6940, %arg336 : tensor<768x768xf32>
    %6942 = stablehlo.add %6939, %6941 : tensor<768x768xf32>
    %6943 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6944 = stablehlo.multiply %6943, %5932 : tensor<768xf32>
    %6945 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6946 = stablehlo.multiply %6945, %arg337 : tensor<768xf32>
    %6947 = stablehlo.add %6944, %6946 : tensor<768xf32>
    %6948 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6949 = stablehlo.multiply %6948, %5937 : tensor<768x768xf32>
    %6950 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6951 = stablehlo.multiply %6950, %arg338 : tensor<768x768xf32>
    %6952 = stablehlo.add %6949, %6951 : tensor<768x768xf32>
    %6953 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6954 = stablehlo.multiply %6953, %5942 : tensor<768xf32>
    %6955 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6956 = stablehlo.multiply %6955, %arg339 : tensor<768xf32>
    %6957 = stablehlo.add %6954, %6956 : tensor<768xf32>
    %6958 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6959 = stablehlo.multiply %6958, %5947 : tensor<768x768xf32>
    %6960 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6961 = stablehlo.multiply %6960, %arg340 : tensor<768x768xf32>
    %6962 = stablehlo.add %6959, %6961 : tensor<768x768xf32>
    %6963 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6964 = stablehlo.multiply %6963, %5952 : tensor<768xf32>
    %6965 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6966 = stablehlo.multiply %6965, %arg341 : tensor<768xf32>
    %6967 = stablehlo.add %6964, %6966 : tensor<768xf32>
    %6968 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6969 = stablehlo.multiply %6968, %5957 : tensor<768x768xf32>
    %6970 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6971 = stablehlo.multiply %6970, %arg342 : tensor<768x768xf32>
    %6972 = stablehlo.add %6969, %6971 : tensor<768x768xf32>
    %6973 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6974 = stablehlo.multiply %6973, %5962 : tensor<768xf32>
    %6975 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6976 = stablehlo.multiply %6975, %arg343 : tensor<768xf32>
    %6977 = stablehlo.add %6974, %6976 : tensor<768xf32>
    %6978 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6979 = stablehlo.multiply %6978, %5967 : tensor<768xf32>
    %6980 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6981 = stablehlo.multiply %6980, %arg344 : tensor<768xf32>
    %6982 = stablehlo.add %6979, %6981 : tensor<768xf32>
    %6983 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6984 = stablehlo.multiply %6983, %5972 : tensor<768xf32>
    %6985 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6986 = stablehlo.multiply %6985, %arg345 : tensor<768xf32>
    %6987 = stablehlo.add %6984, %6986 : tensor<768xf32>
    %6988 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6989 = stablehlo.multiply %6988, %5977 : tensor<3072x768xf32>
    %6990 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6991 = stablehlo.multiply %6990, %arg346 : tensor<3072x768xf32>
    %6992 = stablehlo.add %6989, %6991 : tensor<3072x768xf32>
    %6993 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6994 = stablehlo.multiply %6993, %5982 : tensor<768xf32>
    %6995 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6996 = stablehlo.multiply %6995, %arg347 : tensor<768xf32>
    %6997 = stablehlo.add %6994, %6996 : tensor<768xf32>
    %6998 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6999 = stablehlo.multiply %6998, %5987 : tensor<768xf32>
    %7000 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7001 = stablehlo.multiply %7000, %arg348 : tensor<768xf32>
    %7002 = stablehlo.add %6999, %7001 : tensor<768xf32>
    %7003 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7004 = stablehlo.multiply %7003, %5992 : tensor<3072xf32>
    %7005 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7006 = stablehlo.multiply %7005, %arg349 : tensor<3072xf32>
    %7007 = stablehlo.add %7004, %7006 : tensor<3072xf32>
    %7008 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7009 = stablehlo.multiply %7008, %5997 : tensor<768x3072xf32>
    %7010 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7011 = stablehlo.multiply %7010, %arg350 : tensor<768x3072xf32>
    %7012 = stablehlo.add %7009, %7011 : tensor<768x3072xf32>
    %7013 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7014 = stablehlo.multiply %7013, %6002 : tensor<768xf32>
    %7015 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7016 = stablehlo.multiply %7015, %arg351 : tensor<768xf32>
    %7017 = stablehlo.add %7014, %7016 : tensor<768xf32>
    %7018 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7019 = stablehlo.multiply %7018, %6007 : tensor<768x768xf32>
    %7020 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7021 = stablehlo.multiply %7020, %arg352 : tensor<768x768xf32>
    %7022 = stablehlo.add %7019, %7021 : tensor<768x768xf32>
    %7023 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7024 = stablehlo.multiply %7023, %6012 : tensor<768xf32>
    %7025 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7026 = stablehlo.multiply %7025, %arg353 : tensor<768xf32>
    %7027 = stablehlo.add %7024, %7026 : tensor<768xf32>
    %7028 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7029 = stablehlo.multiply %7028, %6017 : tensor<768x768xf32>
    %7030 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7031 = stablehlo.multiply %7030, %arg354 : tensor<768x768xf32>
    %7032 = stablehlo.add %7029, %7031 : tensor<768x768xf32>
    %7033 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7034 = stablehlo.multiply %7033, %6022 : tensor<768xf32>
    %7035 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7036 = stablehlo.multiply %7035, %arg355 : tensor<768xf32>
    %7037 = stablehlo.add %7034, %7036 : tensor<768xf32>
    %7038 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7039 = stablehlo.multiply %7038, %6027 : tensor<768x768xf32>
    %7040 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7041 = stablehlo.multiply %7040, %arg356 : tensor<768x768xf32>
    %7042 = stablehlo.add %7039, %7041 : tensor<768x768xf32>
    %7043 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7044 = stablehlo.multiply %7043, %6032 : tensor<768xf32>
    %7045 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7046 = stablehlo.multiply %7045, %arg357 : tensor<768xf32>
    %7047 = stablehlo.add %7044, %7046 : tensor<768xf32>
    %7048 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7049 = stablehlo.multiply %7048, %6037 : tensor<768x768xf32>
    %7050 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7051 = stablehlo.multiply %7050, %arg358 : tensor<768x768xf32>
    %7052 = stablehlo.add %7049, %7051 : tensor<768x768xf32>
    %7053 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7054 = stablehlo.multiply %7053, %6042 : tensor<768xf32>
    %7055 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7056 = stablehlo.multiply %7055, %arg359 : tensor<768xf32>
    %7057 = stablehlo.add %7054, %7056 : tensor<768xf32>
    %7058 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7059 = stablehlo.multiply %7058, %6047 : tensor<768xf32>
    %7060 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7061 = stablehlo.multiply %7060, %arg360 : tensor<768xf32>
    %7062 = stablehlo.add %7059, %7061 : tensor<768xf32>
    %7063 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7064 = stablehlo.multiply %7063, %6052 : tensor<768xf32>
    %7065 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7066 = stablehlo.multiply %7065, %arg361 : tensor<768xf32>
    %7067 = stablehlo.add %7064, %7066 : tensor<768xf32>
    %7068 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7069 = stablehlo.multiply %7068, %6057 : tensor<3072x768xf32>
    %7070 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7071 = stablehlo.multiply %7070, %arg362 : tensor<3072x768xf32>
    %7072 = stablehlo.add %7069, %7071 : tensor<3072x768xf32>
    %7073 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7074 = stablehlo.multiply %7073, %6062 : tensor<768xf32>
    %7075 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7076 = stablehlo.multiply %7075, %arg363 : tensor<768xf32>
    %7077 = stablehlo.add %7074, %7076 : tensor<768xf32>
    %7078 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7079 = stablehlo.multiply %7078, %6067 : tensor<768xf32>
    %7080 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7081 = stablehlo.multiply %7080, %arg364 : tensor<768xf32>
    %7082 = stablehlo.add %7079, %7081 : tensor<768xf32>
    %7083 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7084 = stablehlo.multiply %7083, %6072 : tensor<3072xf32>
    %7085 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7086 = stablehlo.multiply %7085, %arg365 : tensor<3072xf32>
    %7087 = stablehlo.add %7084, %7086 : tensor<3072xf32>
    %7088 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7089 = stablehlo.multiply %7088, %6077 : tensor<768x3072xf32>
    %7090 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7091 = stablehlo.multiply %7090, %arg366 : tensor<768x3072xf32>
    %7092 = stablehlo.add %7089, %7091 : tensor<768x3072xf32>
    %7093 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7094 = stablehlo.multiply %7093, %6082 : tensor<768xf32>
    %7095 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7096 = stablehlo.multiply %7095, %arg367 : tensor<768xf32>
    %7097 = stablehlo.add %7094, %7096 : tensor<768xf32>
    %7098 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7099 = stablehlo.multiply %7098, %6087 : tensor<768x768xf32>
    %7100 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7101 = stablehlo.multiply %7100, %arg368 : tensor<768x768xf32>
    %7102 = stablehlo.add %7099, %7101 : tensor<768x768xf32>
    %7103 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7104 = stablehlo.multiply %7103, %6092 : tensor<768xf32>
    %7105 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7106 = stablehlo.multiply %7105, %arg369 : tensor<768xf32>
    %7107 = stablehlo.add %7104, %7106 : tensor<768xf32>
    %7108 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7109 = stablehlo.multiply %7108, %6097 : tensor<768x768xf32>
    %7110 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7111 = stablehlo.multiply %7110, %arg370 : tensor<768x768xf32>
    %7112 = stablehlo.add %7109, %7111 : tensor<768x768xf32>
    %7113 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7114 = stablehlo.multiply %7113, %6102 : tensor<768xf32>
    %7115 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7116 = stablehlo.multiply %7115, %arg371 : tensor<768xf32>
    %7117 = stablehlo.add %7114, %7116 : tensor<768xf32>
    %7118 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7119 = stablehlo.multiply %7118, %6107 : tensor<768x768xf32>
    %7120 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7121 = stablehlo.multiply %7120, %arg372 : tensor<768x768xf32>
    %7122 = stablehlo.add %7119, %7121 : tensor<768x768xf32>
    %7123 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7124 = stablehlo.multiply %7123, %6112 : tensor<768xf32>
    %7125 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7126 = stablehlo.multiply %7125, %arg373 : tensor<768xf32>
    %7127 = stablehlo.add %7124, %7126 : tensor<768xf32>
    %7128 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7129 = stablehlo.multiply %7128, %6117 : tensor<768x768xf32>
    %7130 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7131 = stablehlo.multiply %7130, %arg374 : tensor<768x768xf32>
    %7132 = stablehlo.add %7129, %7131 : tensor<768x768xf32>
    %7133 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7134 = stablehlo.multiply %7133, %6122 : tensor<768xf32>
    %7135 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7136 = stablehlo.multiply %7135, %arg375 : tensor<768xf32>
    %7137 = stablehlo.add %7134, %7136 : tensor<768xf32>
    %7138 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7139 = stablehlo.multiply %7138, %6127 : tensor<768xf32>
    %7140 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7141 = stablehlo.multiply %7140, %arg376 : tensor<768xf32>
    %7142 = stablehlo.add %7139, %7141 : tensor<768xf32>
    %7143 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7144 = stablehlo.multiply %7143, %6132 : tensor<768xf32>
    %7145 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7146 = stablehlo.multiply %7145, %arg377 : tensor<768xf32>
    %7147 = stablehlo.add %7144, %7146 : tensor<768xf32>
    %7148 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7149 = stablehlo.multiply %7148, %6137 : tensor<3072x768xf32>
    %7150 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7151 = stablehlo.multiply %7150, %arg378 : tensor<3072x768xf32>
    %7152 = stablehlo.add %7149, %7151 : tensor<3072x768xf32>
    %7153 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7154 = stablehlo.multiply %7153, %6142 : tensor<768xf32>
    %7155 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7156 = stablehlo.multiply %7155, %arg379 : tensor<768xf32>
    %7157 = stablehlo.add %7154, %7156 : tensor<768xf32>
    %7158 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7159 = stablehlo.multiply %7158, %6147 : tensor<768xf32>
    %7160 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7161 = stablehlo.multiply %7160, %arg380 : tensor<768xf32>
    %7162 = stablehlo.add %7159, %7161 : tensor<768xf32>
    %7163 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7164 = stablehlo.multiply %7163, %6152 : tensor<3072xf32>
    %7165 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7166 = stablehlo.multiply %7165, %arg381 : tensor<3072xf32>
    %7167 = stablehlo.add %7164, %7166 : tensor<3072xf32>
    %7168 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7169 = stablehlo.multiply %7168, %6157 : tensor<768x3072xf32>
    %7170 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7171 = stablehlo.multiply %7170, %arg382 : tensor<768x3072xf32>
    %7172 = stablehlo.add %7169, %7171 : tensor<768x3072xf32>
    %7173 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7174 = stablehlo.multiply %7173, %6162 : tensor<768xf32>
    %7175 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7176 = stablehlo.multiply %7175, %arg383 : tensor<768xf32>
    %7177 = stablehlo.add %7174, %7176 : tensor<768xf32>
    %7178 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7179 = stablehlo.multiply %7178, %6167 : tensor<768x768xf32>
    %7180 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7181 = stablehlo.multiply %7180, %arg384 : tensor<768x768xf32>
    %7182 = stablehlo.add %7179, %7181 : tensor<768x768xf32>
    %7183 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7184 = stablehlo.multiply %7183, %6172 : tensor<768xf32>
    %7185 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7186 = stablehlo.multiply %7185, %arg385 : tensor<768xf32>
    %7187 = stablehlo.add %7184, %7186 : tensor<768xf32>
    %7188 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7189 = stablehlo.multiply %7188, %6177 : tensor<768x768xf32>
    %7190 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7191 = stablehlo.multiply %7190, %arg386 : tensor<768x768xf32>
    %7192 = stablehlo.add %7189, %7191 : tensor<768x768xf32>
    %7193 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7194 = stablehlo.multiply %7193, %6182 : tensor<768xf32>
    %7195 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7196 = stablehlo.multiply %7195, %arg387 : tensor<768xf32>
    %7197 = stablehlo.add %7194, %7196 : tensor<768xf32>
    %7198 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7199 = stablehlo.multiply %7198, %6187 : tensor<768x768xf32>
    %7200 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7201 = stablehlo.multiply %7200, %arg388 : tensor<768x768xf32>
    %7202 = stablehlo.add %7199, %7201 : tensor<768x768xf32>
    %7203 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7204 = stablehlo.multiply %7203, %6192 : tensor<768xf32>
    %7205 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7206 = stablehlo.multiply %7205, %arg389 : tensor<768xf32>
    %7207 = stablehlo.add %7204, %7206 : tensor<768xf32>
    %7208 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7209 = stablehlo.multiply %7208, %6197 : tensor<768x768xf32>
    %7210 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7211 = stablehlo.multiply %7210, %arg390 : tensor<768x768xf32>
    %7212 = stablehlo.add %7209, %7211 : tensor<768x768xf32>
    %7213 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7214 = stablehlo.multiply %7213, %6202 : tensor<768xf32>
    %7215 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7216 = stablehlo.multiply %7215, %arg391 : tensor<768xf32>
    %7217 = stablehlo.add %7214, %7216 : tensor<768xf32>
    %7218 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7219 = stablehlo.multiply %7218, %6207 : tensor<768xf32>
    %7220 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7221 = stablehlo.multiply %7220, %arg392 : tensor<768xf32>
    %7222 = stablehlo.add %7219, %7221 : tensor<768xf32>
    %7223 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7224 = stablehlo.multiply %7223, %6212 : tensor<768xf32>
    %7225 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7226 = stablehlo.multiply %7225, %arg393 : tensor<768xf32>
    %7227 = stablehlo.add %7224, %7226 : tensor<768xf32>
    %7228 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7229 = stablehlo.multiply %7228, %6217 : tensor<3072x768xf32>
    %7230 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7231 = stablehlo.multiply %7230, %arg394 : tensor<3072x768xf32>
    %7232 = stablehlo.add %7229, %7231 : tensor<3072x768xf32>
    %7233 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7234 = stablehlo.multiply %7233, %6222 : tensor<768xf32>
    %7235 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7236 = stablehlo.multiply %7235, %arg395 : tensor<768xf32>
    %7237 = stablehlo.add %7234, %7236 : tensor<768xf32>
    %7238 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7239 = stablehlo.multiply %7238, %6227 : tensor<768xf32>
    %7240 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7241 = stablehlo.multiply %7240, %arg396 : tensor<768xf32>
    %7242 = stablehlo.add %7239, %7241 : tensor<768xf32>
    %7243 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7244 = stablehlo.multiply %7243, %6232 : tensor<3072xf32>
    %7245 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7246 = stablehlo.multiply %7245, %arg397 : tensor<3072xf32>
    %7247 = stablehlo.add %7244, %7246 : tensor<3072xf32>
    %7248 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7249 = stablehlo.multiply %7248, %6237 : tensor<768x3072xf32>
    %7250 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7251 = stablehlo.multiply %7250, %arg398 : tensor<768x3072xf32>
    %7252 = stablehlo.add %7249, %7251 : tensor<768x3072xf32>
    %7253 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7254 = stablehlo.multiply %7253, %6242 : tensor<768xf32>
    %7255 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7256 = stablehlo.multiply %7255, %arg399 : tensor<768xf32>
    %7257 = stablehlo.add %7254, %7256 : tensor<768xf32>
    %7258 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7259 = stablehlo.multiply %7258, %6247 : tensor<768xf32>
    %7260 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7261 = stablehlo.multiply %7260, %arg400 : tensor<768xf32>
    %7262 = stablehlo.add %7259, %7261 : tensor<768xf32>
    %7263 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7264 = stablehlo.multiply %7263, %6252 : tensor<30522xf32>
    %7265 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7266 = stablehlo.multiply %7265, %arg401 : tensor<30522xf32>
    %7267 = stablehlo.add %7264, %7266 : tensor<30522xf32>
    %7268 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7269 = stablehlo.multiply %7268, %6257 : tensor<768xf32>
    %7270 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7271 = stablehlo.multiply %7270, %arg402 : tensor<768xf32>
    %7272 = stablehlo.add %7269, %7271 : tensor<768xf32>
    %7273 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7274 = stablehlo.multiply %7273, %6262 : tensor<768x768xf32>
    %7275 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7276 = stablehlo.multiply %7275, %arg403 : tensor<768x768xf32>
    %7277 = stablehlo.add %7274, %7276 : tensor<768x768xf32>
    %7278 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7279 = stablehlo.multiply %7278, %6267 : tensor<30522x768xf32>
    %7280 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7281 = stablehlo.multiply %7280, %arg404 : tensor<30522x768xf32>
    %7282 = stablehlo.add %7279, %7281 : tensor<30522x768xf32>
    %7283 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7284 = stablehlo.multiply %7283, %6272 : tensor<768xf32>
    %7285 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7286 = stablehlo.multiply %7285, %arg405 : tensor<768xf32>
    %7287 = stablehlo.add %7284, %7286 : tensor<768xf32>
    %7288 = stablehlo.broadcast_in_dim %cst_753, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7289 = stablehlo.multiply %7288, %6277 : tensor<768xf32>
    %7290 = stablehlo.broadcast_in_dim %cst_11, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7291 = stablehlo.multiply %7290, %arg406 : tensor<768xf32>
    %7292 = stablehlo.add %7289, %7291 : tensor<768xf32>
    %7293 = stablehlo.multiply %5267, %5267 : tensor<512x768xf32>
    %cst_754 = stablehlo.constant dense<1.000000e-03> : tensor<f32>
    %7294 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7295 = stablehlo.multiply %7294, %7293 : tensor<512x768xf32>
    %cst_755 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %7296 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7297 = stablehlo.multiply %7296, %arg407 : tensor<512x768xf32>
    %7298 = stablehlo.add %7295, %7297 : tensor<512x768xf32>
    %7299 = stablehlo.multiply %5272, %5272 : tensor<2x768xf32>
    %7300 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7301 = stablehlo.multiply %7300, %7299 : tensor<2x768xf32>
    %7302 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7303 = stablehlo.multiply %7302, %arg408 : tensor<2x768xf32>
    %7304 = stablehlo.add %7301, %7303 : tensor<2x768xf32>
    %7305 = stablehlo.multiply %5277, %5277 : tensor<30522x768xf32>
    %7306 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7307 = stablehlo.multiply %7306, %7305 : tensor<30522x768xf32>
    %7308 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7309 = stablehlo.multiply %7308, %arg409 : tensor<30522x768xf32>
    %7310 = stablehlo.add %7307, %7309 : tensor<30522x768xf32>
    %7311 = stablehlo.multiply %5282, %5282 : tensor<768xf32>
    %7312 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7313 = stablehlo.multiply %7312, %7311 : tensor<768xf32>
    %7314 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7315 = stablehlo.multiply %7314, %arg410 : tensor<768xf32>
    %7316 = stablehlo.add %7313, %7315 : tensor<768xf32>
    %7317 = stablehlo.multiply %5287, %5287 : tensor<768x768xf32>
    %7318 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7319 = stablehlo.multiply %7318, %7317 : tensor<768x768xf32>
    %7320 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7321 = stablehlo.multiply %7320, %arg411 : tensor<768x768xf32>
    %7322 = stablehlo.add %7319, %7321 : tensor<768x768xf32>
    %7323 = stablehlo.multiply %5292, %5292 : tensor<768xf32>
    %7324 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7325 = stablehlo.multiply %7324, %7323 : tensor<768xf32>
    %7326 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7327 = stablehlo.multiply %7326, %arg412 : tensor<768xf32>
    %7328 = stablehlo.add %7325, %7327 : tensor<768xf32>
    %7329 = stablehlo.multiply %5297, %5297 : tensor<768x768xf32>
    %7330 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7331 = stablehlo.multiply %7330, %7329 : tensor<768x768xf32>
    %7332 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7333 = stablehlo.multiply %7332, %arg413 : tensor<768x768xf32>
    %7334 = stablehlo.add %7331, %7333 : tensor<768x768xf32>
    %7335 = stablehlo.multiply %5302, %5302 : tensor<768xf32>
    %7336 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7337 = stablehlo.multiply %7336, %7335 : tensor<768xf32>
    %7338 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7339 = stablehlo.multiply %7338, %arg414 : tensor<768xf32>
    %7340 = stablehlo.add %7337, %7339 : tensor<768xf32>
    %7341 = stablehlo.multiply %5307, %5307 : tensor<768x768xf32>
    %7342 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7343 = stablehlo.multiply %7342, %7341 : tensor<768x768xf32>
    %7344 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7345 = stablehlo.multiply %7344, %arg415 : tensor<768x768xf32>
    %7346 = stablehlo.add %7343, %7345 : tensor<768x768xf32>
    %7347 = stablehlo.multiply %5312, %5312 : tensor<768xf32>
    %7348 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7349 = stablehlo.multiply %7348, %7347 : tensor<768xf32>
    %7350 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7351 = stablehlo.multiply %7350, %arg416 : tensor<768xf32>
    %7352 = stablehlo.add %7349, %7351 : tensor<768xf32>
    %7353 = stablehlo.multiply %5317, %5317 : tensor<768x768xf32>
    %7354 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7355 = stablehlo.multiply %7354, %7353 : tensor<768x768xf32>
    %7356 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7357 = stablehlo.multiply %7356, %arg417 : tensor<768x768xf32>
    %7358 = stablehlo.add %7355, %7357 : tensor<768x768xf32>
    %7359 = stablehlo.multiply %5322, %5322 : tensor<768xf32>
    %7360 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7361 = stablehlo.multiply %7360, %7359 : tensor<768xf32>
    %7362 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7363 = stablehlo.multiply %7362, %arg418 : tensor<768xf32>
    %7364 = stablehlo.add %7361, %7363 : tensor<768xf32>
    %7365 = stablehlo.multiply %5327, %5327 : tensor<768xf32>
    %7366 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7367 = stablehlo.multiply %7366, %7365 : tensor<768xf32>
    %7368 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7369 = stablehlo.multiply %7368, %arg419 : tensor<768xf32>
    %7370 = stablehlo.add %7367, %7369 : tensor<768xf32>
    %7371 = stablehlo.multiply %5332, %5332 : tensor<768xf32>
    %7372 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7373 = stablehlo.multiply %7372, %7371 : tensor<768xf32>
    %7374 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7375 = stablehlo.multiply %7374, %arg420 : tensor<768xf32>
    %7376 = stablehlo.add %7373, %7375 : tensor<768xf32>
    %7377 = stablehlo.multiply %5337, %5337 : tensor<3072x768xf32>
    %7378 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7379 = stablehlo.multiply %7378, %7377 : tensor<3072x768xf32>
    %7380 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7381 = stablehlo.multiply %7380, %arg421 : tensor<3072x768xf32>
    %7382 = stablehlo.add %7379, %7381 : tensor<3072x768xf32>
    %7383 = stablehlo.multiply %5342, %5342 : tensor<768xf32>
    %7384 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7385 = stablehlo.multiply %7384, %7383 : tensor<768xf32>
    %7386 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7387 = stablehlo.multiply %7386, %arg422 : tensor<768xf32>
    %7388 = stablehlo.add %7385, %7387 : tensor<768xf32>
    %7389 = stablehlo.multiply %5347, %5347 : tensor<768xf32>
    %7390 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7391 = stablehlo.multiply %7390, %7389 : tensor<768xf32>
    %7392 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7393 = stablehlo.multiply %7392, %arg423 : tensor<768xf32>
    %7394 = stablehlo.add %7391, %7393 : tensor<768xf32>
    %7395 = stablehlo.multiply %5352, %5352 : tensor<3072xf32>
    %7396 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7397 = stablehlo.multiply %7396, %7395 : tensor<3072xf32>
    %7398 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7399 = stablehlo.multiply %7398, %arg424 : tensor<3072xf32>
    %7400 = stablehlo.add %7397, %7399 : tensor<3072xf32>
    %7401 = stablehlo.multiply %5357, %5357 : tensor<768x3072xf32>
    %7402 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7403 = stablehlo.multiply %7402, %7401 : tensor<768x3072xf32>
    %7404 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7405 = stablehlo.multiply %7404, %arg425 : tensor<768x3072xf32>
    %7406 = stablehlo.add %7403, %7405 : tensor<768x3072xf32>
    %7407 = stablehlo.multiply %5362, %5362 : tensor<768xf32>
    %7408 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7409 = stablehlo.multiply %7408, %7407 : tensor<768xf32>
    %7410 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7411 = stablehlo.multiply %7410, %arg426 : tensor<768xf32>
    %7412 = stablehlo.add %7409, %7411 : tensor<768xf32>
    %7413 = stablehlo.multiply %5367, %5367 : tensor<768x768xf32>
    %7414 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7415 = stablehlo.multiply %7414, %7413 : tensor<768x768xf32>
    %7416 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7417 = stablehlo.multiply %7416, %arg427 : tensor<768x768xf32>
    %7418 = stablehlo.add %7415, %7417 : tensor<768x768xf32>
    %7419 = stablehlo.multiply %5372, %5372 : tensor<768xf32>
    %7420 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7421 = stablehlo.multiply %7420, %7419 : tensor<768xf32>
    %7422 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7423 = stablehlo.multiply %7422, %arg428 : tensor<768xf32>
    %7424 = stablehlo.add %7421, %7423 : tensor<768xf32>
    %7425 = stablehlo.multiply %5377, %5377 : tensor<768x768xf32>
    %7426 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7427 = stablehlo.multiply %7426, %7425 : tensor<768x768xf32>
    %7428 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7429 = stablehlo.multiply %7428, %arg429 : tensor<768x768xf32>
    %7430 = stablehlo.add %7427, %7429 : tensor<768x768xf32>
    %7431 = stablehlo.multiply %5382, %5382 : tensor<768xf32>
    %7432 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7433 = stablehlo.multiply %7432, %7431 : tensor<768xf32>
    %7434 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7435 = stablehlo.multiply %7434, %arg430 : tensor<768xf32>
    %7436 = stablehlo.add %7433, %7435 : tensor<768xf32>
    %7437 = stablehlo.multiply %5387, %5387 : tensor<768x768xf32>
    %7438 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7439 = stablehlo.multiply %7438, %7437 : tensor<768x768xf32>
    %7440 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7441 = stablehlo.multiply %7440, %arg431 : tensor<768x768xf32>
    %7442 = stablehlo.add %7439, %7441 : tensor<768x768xf32>
    %7443 = stablehlo.multiply %5392, %5392 : tensor<768xf32>
    %7444 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7445 = stablehlo.multiply %7444, %7443 : tensor<768xf32>
    %7446 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7447 = stablehlo.multiply %7446, %arg432 : tensor<768xf32>
    %7448 = stablehlo.add %7445, %7447 : tensor<768xf32>
    %7449 = stablehlo.multiply %5397, %5397 : tensor<768x768xf32>
    %7450 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7451 = stablehlo.multiply %7450, %7449 : tensor<768x768xf32>
    %7452 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7453 = stablehlo.multiply %7452, %arg433 : tensor<768x768xf32>
    %7454 = stablehlo.add %7451, %7453 : tensor<768x768xf32>
    %7455 = stablehlo.multiply %5402, %5402 : tensor<768xf32>
    %7456 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7457 = stablehlo.multiply %7456, %7455 : tensor<768xf32>
    %7458 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7459 = stablehlo.multiply %7458, %arg434 : tensor<768xf32>
    %7460 = stablehlo.add %7457, %7459 : tensor<768xf32>
    %7461 = stablehlo.multiply %5407, %5407 : tensor<768xf32>
    %7462 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7463 = stablehlo.multiply %7462, %7461 : tensor<768xf32>
    %7464 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7465 = stablehlo.multiply %7464, %arg435 : tensor<768xf32>
    %7466 = stablehlo.add %7463, %7465 : tensor<768xf32>
    %7467 = stablehlo.multiply %5412, %5412 : tensor<768xf32>
    %7468 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7469 = stablehlo.multiply %7468, %7467 : tensor<768xf32>
    %7470 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7471 = stablehlo.multiply %7470, %arg436 : tensor<768xf32>
    %7472 = stablehlo.add %7469, %7471 : tensor<768xf32>
    %7473 = stablehlo.multiply %5417, %5417 : tensor<3072x768xf32>
    %7474 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7475 = stablehlo.multiply %7474, %7473 : tensor<3072x768xf32>
    %7476 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7477 = stablehlo.multiply %7476, %arg437 : tensor<3072x768xf32>
    %7478 = stablehlo.add %7475, %7477 : tensor<3072x768xf32>
    %7479 = stablehlo.multiply %5422, %5422 : tensor<768xf32>
    %7480 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7481 = stablehlo.multiply %7480, %7479 : tensor<768xf32>
    %7482 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7483 = stablehlo.multiply %7482, %arg438 : tensor<768xf32>
    %7484 = stablehlo.add %7481, %7483 : tensor<768xf32>
    %7485 = stablehlo.multiply %5427, %5427 : tensor<768xf32>
    %7486 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7487 = stablehlo.multiply %7486, %7485 : tensor<768xf32>
    %7488 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7489 = stablehlo.multiply %7488, %arg439 : tensor<768xf32>
    %7490 = stablehlo.add %7487, %7489 : tensor<768xf32>
    %7491 = stablehlo.multiply %5432, %5432 : tensor<3072xf32>
    %7492 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7493 = stablehlo.multiply %7492, %7491 : tensor<3072xf32>
    %7494 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7495 = stablehlo.multiply %7494, %arg440 : tensor<3072xf32>
    %7496 = stablehlo.add %7493, %7495 : tensor<3072xf32>
    %7497 = stablehlo.multiply %5437, %5437 : tensor<768x3072xf32>
    %7498 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7499 = stablehlo.multiply %7498, %7497 : tensor<768x3072xf32>
    %7500 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7501 = stablehlo.multiply %7500, %arg441 : tensor<768x3072xf32>
    %7502 = stablehlo.add %7499, %7501 : tensor<768x3072xf32>
    %7503 = stablehlo.multiply %5442, %5442 : tensor<768xf32>
    %7504 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7505 = stablehlo.multiply %7504, %7503 : tensor<768xf32>
    %7506 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7507 = stablehlo.multiply %7506, %arg442 : tensor<768xf32>
    %7508 = stablehlo.add %7505, %7507 : tensor<768xf32>
    %7509 = stablehlo.multiply %5447, %5447 : tensor<768x768xf32>
    %7510 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7511 = stablehlo.multiply %7510, %7509 : tensor<768x768xf32>
    %7512 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7513 = stablehlo.multiply %7512, %arg443 : tensor<768x768xf32>
    %7514 = stablehlo.add %7511, %7513 : tensor<768x768xf32>
    %7515 = stablehlo.multiply %5452, %5452 : tensor<768xf32>
    %7516 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7517 = stablehlo.multiply %7516, %7515 : tensor<768xf32>
    %7518 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7519 = stablehlo.multiply %7518, %arg444 : tensor<768xf32>
    %7520 = stablehlo.add %7517, %7519 : tensor<768xf32>
    %7521 = stablehlo.multiply %5457, %5457 : tensor<768x768xf32>
    %7522 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7523 = stablehlo.multiply %7522, %7521 : tensor<768x768xf32>
    %7524 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7525 = stablehlo.multiply %7524, %arg445 : tensor<768x768xf32>
    %7526 = stablehlo.add %7523, %7525 : tensor<768x768xf32>
    %7527 = stablehlo.multiply %5462, %5462 : tensor<768xf32>
    %7528 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7529 = stablehlo.multiply %7528, %7527 : tensor<768xf32>
    %7530 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7531 = stablehlo.multiply %7530, %arg446 : tensor<768xf32>
    %7532 = stablehlo.add %7529, %7531 : tensor<768xf32>
    %7533 = stablehlo.multiply %5467, %5467 : tensor<768x768xf32>
    %7534 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7535 = stablehlo.multiply %7534, %7533 : tensor<768x768xf32>
    %7536 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7537 = stablehlo.multiply %7536, %arg447 : tensor<768x768xf32>
    %7538 = stablehlo.add %7535, %7537 : tensor<768x768xf32>
    %7539 = stablehlo.multiply %5472, %5472 : tensor<768xf32>
    %7540 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7541 = stablehlo.multiply %7540, %7539 : tensor<768xf32>
    %7542 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7543 = stablehlo.multiply %7542, %arg448 : tensor<768xf32>
    %7544 = stablehlo.add %7541, %7543 : tensor<768xf32>
    %7545 = stablehlo.multiply %5477, %5477 : tensor<768x768xf32>
    %7546 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7547 = stablehlo.multiply %7546, %7545 : tensor<768x768xf32>
    %7548 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7549 = stablehlo.multiply %7548, %arg449 : tensor<768x768xf32>
    %7550 = stablehlo.add %7547, %7549 : tensor<768x768xf32>
    %7551 = stablehlo.multiply %5482, %5482 : tensor<768xf32>
    %7552 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7553 = stablehlo.multiply %7552, %7551 : tensor<768xf32>
    %7554 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7555 = stablehlo.multiply %7554, %arg450 : tensor<768xf32>
    %7556 = stablehlo.add %7553, %7555 : tensor<768xf32>
    %7557 = stablehlo.multiply %5487, %5487 : tensor<768xf32>
    %7558 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7559 = stablehlo.multiply %7558, %7557 : tensor<768xf32>
    %7560 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7561 = stablehlo.multiply %7560, %arg451 : tensor<768xf32>
    %7562 = stablehlo.add %7559, %7561 : tensor<768xf32>
    %7563 = stablehlo.multiply %5492, %5492 : tensor<768xf32>
    %7564 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7565 = stablehlo.multiply %7564, %7563 : tensor<768xf32>
    %7566 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7567 = stablehlo.multiply %7566, %arg452 : tensor<768xf32>
    %7568 = stablehlo.add %7565, %7567 : tensor<768xf32>
    %7569 = stablehlo.multiply %5497, %5497 : tensor<3072x768xf32>
    %7570 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7571 = stablehlo.multiply %7570, %7569 : tensor<3072x768xf32>
    %7572 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7573 = stablehlo.multiply %7572, %arg453 : tensor<3072x768xf32>
    %7574 = stablehlo.add %7571, %7573 : tensor<3072x768xf32>
    %7575 = stablehlo.multiply %5502, %5502 : tensor<768xf32>
    %7576 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7577 = stablehlo.multiply %7576, %7575 : tensor<768xf32>
    %7578 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7579 = stablehlo.multiply %7578, %arg454 : tensor<768xf32>
    %7580 = stablehlo.add %7577, %7579 : tensor<768xf32>
    %7581 = stablehlo.multiply %5507, %5507 : tensor<768xf32>
    %7582 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7583 = stablehlo.multiply %7582, %7581 : tensor<768xf32>
    %7584 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7585 = stablehlo.multiply %7584, %arg455 : tensor<768xf32>
    %7586 = stablehlo.add %7583, %7585 : tensor<768xf32>
    %7587 = stablehlo.multiply %5512, %5512 : tensor<3072xf32>
    %7588 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7589 = stablehlo.multiply %7588, %7587 : tensor<3072xf32>
    %7590 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7591 = stablehlo.multiply %7590, %arg456 : tensor<3072xf32>
    %7592 = stablehlo.add %7589, %7591 : tensor<3072xf32>
    %7593 = stablehlo.multiply %5517, %5517 : tensor<768x3072xf32>
    %7594 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7595 = stablehlo.multiply %7594, %7593 : tensor<768x3072xf32>
    %7596 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7597 = stablehlo.multiply %7596, %arg457 : tensor<768x3072xf32>
    %7598 = stablehlo.add %7595, %7597 : tensor<768x3072xf32>
    %7599 = stablehlo.multiply %5522, %5522 : tensor<768xf32>
    %7600 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7601 = stablehlo.multiply %7600, %7599 : tensor<768xf32>
    %7602 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7603 = stablehlo.multiply %7602, %arg458 : tensor<768xf32>
    %7604 = stablehlo.add %7601, %7603 : tensor<768xf32>
    %7605 = stablehlo.multiply %5527, %5527 : tensor<768x768xf32>
    %7606 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7607 = stablehlo.multiply %7606, %7605 : tensor<768x768xf32>
    %7608 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7609 = stablehlo.multiply %7608, %arg459 : tensor<768x768xf32>
    %7610 = stablehlo.add %7607, %7609 : tensor<768x768xf32>
    %7611 = stablehlo.multiply %5532, %5532 : tensor<768xf32>
    %7612 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7613 = stablehlo.multiply %7612, %7611 : tensor<768xf32>
    %7614 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7615 = stablehlo.multiply %7614, %arg460 : tensor<768xf32>
    %7616 = stablehlo.add %7613, %7615 : tensor<768xf32>
    %7617 = stablehlo.multiply %5537, %5537 : tensor<768x768xf32>
    %7618 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7619 = stablehlo.multiply %7618, %7617 : tensor<768x768xf32>
    %7620 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7621 = stablehlo.multiply %7620, %arg461 : tensor<768x768xf32>
    %7622 = stablehlo.add %7619, %7621 : tensor<768x768xf32>
    %7623 = stablehlo.multiply %5542, %5542 : tensor<768xf32>
    %7624 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7625 = stablehlo.multiply %7624, %7623 : tensor<768xf32>
    %7626 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7627 = stablehlo.multiply %7626, %arg462 : tensor<768xf32>
    %7628 = stablehlo.add %7625, %7627 : tensor<768xf32>
    %7629 = stablehlo.multiply %5547, %5547 : tensor<768x768xf32>
    %7630 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7631 = stablehlo.multiply %7630, %7629 : tensor<768x768xf32>
    %7632 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7633 = stablehlo.multiply %7632, %arg463 : tensor<768x768xf32>
    %7634 = stablehlo.add %7631, %7633 : tensor<768x768xf32>
    %7635 = stablehlo.multiply %5552, %5552 : tensor<768xf32>
    %7636 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7637 = stablehlo.multiply %7636, %7635 : tensor<768xf32>
    %7638 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7639 = stablehlo.multiply %7638, %arg464 : tensor<768xf32>
    %7640 = stablehlo.add %7637, %7639 : tensor<768xf32>
    %7641 = stablehlo.multiply %5557, %5557 : tensor<768x768xf32>
    %7642 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7643 = stablehlo.multiply %7642, %7641 : tensor<768x768xf32>
    %7644 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7645 = stablehlo.multiply %7644, %arg465 : tensor<768x768xf32>
    %7646 = stablehlo.add %7643, %7645 : tensor<768x768xf32>
    %7647 = stablehlo.multiply %5562, %5562 : tensor<768xf32>
    %7648 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7649 = stablehlo.multiply %7648, %7647 : tensor<768xf32>
    %7650 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7651 = stablehlo.multiply %7650, %arg466 : tensor<768xf32>
    %7652 = stablehlo.add %7649, %7651 : tensor<768xf32>
    %7653 = stablehlo.multiply %5567, %5567 : tensor<768xf32>
    %7654 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7655 = stablehlo.multiply %7654, %7653 : tensor<768xf32>
    %7656 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7657 = stablehlo.multiply %7656, %arg467 : tensor<768xf32>
    %7658 = stablehlo.add %7655, %7657 : tensor<768xf32>
    %7659 = stablehlo.multiply %5572, %5572 : tensor<768xf32>
    %7660 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7661 = stablehlo.multiply %7660, %7659 : tensor<768xf32>
    %7662 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7663 = stablehlo.multiply %7662, %arg468 : tensor<768xf32>
    %7664 = stablehlo.add %7661, %7663 : tensor<768xf32>
    %7665 = stablehlo.multiply %5577, %5577 : tensor<3072x768xf32>
    %7666 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7667 = stablehlo.multiply %7666, %7665 : tensor<3072x768xf32>
    %7668 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7669 = stablehlo.multiply %7668, %arg469 : tensor<3072x768xf32>
    %7670 = stablehlo.add %7667, %7669 : tensor<3072x768xf32>
    %7671 = stablehlo.multiply %5582, %5582 : tensor<768xf32>
    %7672 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7673 = stablehlo.multiply %7672, %7671 : tensor<768xf32>
    %7674 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7675 = stablehlo.multiply %7674, %arg470 : tensor<768xf32>
    %7676 = stablehlo.add %7673, %7675 : tensor<768xf32>
    %7677 = stablehlo.multiply %5587, %5587 : tensor<768xf32>
    %7678 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7679 = stablehlo.multiply %7678, %7677 : tensor<768xf32>
    %7680 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7681 = stablehlo.multiply %7680, %arg471 : tensor<768xf32>
    %7682 = stablehlo.add %7679, %7681 : tensor<768xf32>
    %7683 = stablehlo.multiply %5592, %5592 : tensor<3072xf32>
    %7684 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7685 = stablehlo.multiply %7684, %7683 : tensor<3072xf32>
    %7686 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7687 = stablehlo.multiply %7686, %arg472 : tensor<3072xf32>
    %7688 = stablehlo.add %7685, %7687 : tensor<3072xf32>
    %7689 = stablehlo.multiply %5597, %5597 : tensor<768x3072xf32>
    %7690 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7691 = stablehlo.multiply %7690, %7689 : tensor<768x3072xf32>
    %7692 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7693 = stablehlo.multiply %7692, %arg473 : tensor<768x3072xf32>
    %7694 = stablehlo.add %7691, %7693 : tensor<768x3072xf32>
    %7695 = stablehlo.multiply %5602, %5602 : tensor<768xf32>
    %7696 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7697 = stablehlo.multiply %7696, %7695 : tensor<768xf32>
    %7698 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7699 = stablehlo.multiply %7698, %arg474 : tensor<768xf32>
    %7700 = stablehlo.add %7697, %7699 : tensor<768xf32>
    %7701 = stablehlo.multiply %5607, %5607 : tensor<768x768xf32>
    %7702 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7703 = stablehlo.multiply %7702, %7701 : tensor<768x768xf32>
    %7704 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7705 = stablehlo.multiply %7704, %arg475 : tensor<768x768xf32>
    %7706 = stablehlo.add %7703, %7705 : tensor<768x768xf32>
    %7707 = stablehlo.multiply %5612, %5612 : tensor<768xf32>
    %7708 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7709 = stablehlo.multiply %7708, %7707 : tensor<768xf32>
    %7710 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7711 = stablehlo.multiply %7710, %arg476 : tensor<768xf32>
    %7712 = stablehlo.add %7709, %7711 : tensor<768xf32>
    %7713 = stablehlo.multiply %5617, %5617 : tensor<768x768xf32>
    %7714 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7715 = stablehlo.multiply %7714, %7713 : tensor<768x768xf32>
    %7716 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7717 = stablehlo.multiply %7716, %arg477 : tensor<768x768xf32>
    %7718 = stablehlo.add %7715, %7717 : tensor<768x768xf32>
    %7719 = stablehlo.multiply %5622, %5622 : tensor<768xf32>
    %7720 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7721 = stablehlo.multiply %7720, %7719 : tensor<768xf32>
    %7722 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7723 = stablehlo.multiply %7722, %arg478 : tensor<768xf32>
    %7724 = stablehlo.add %7721, %7723 : tensor<768xf32>
    %7725 = stablehlo.multiply %5627, %5627 : tensor<768x768xf32>
    %7726 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7727 = stablehlo.multiply %7726, %7725 : tensor<768x768xf32>
    %7728 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7729 = stablehlo.multiply %7728, %arg479 : tensor<768x768xf32>
    %7730 = stablehlo.add %7727, %7729 : tensor<768x768xf32>
    %7731 = stablehlo.multiply %5632, %5632 : tensor<768xf32>
    %7732 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7733 = stablehlo.multiply %7732, %7731 : tensor<768xf32>
    %7734 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7735 = stablehlo.multiply %7734, %arg480 : tensor<768xf32>
    %7736 = stablehlo.add %7733, %7735 : tensor<768xf32>
    %7737 = stablehlo.multiply %5637, %5637 : tensor<768x768xf32>
    %7738 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7739 = stablehlo.multiply %7738, %7737 : tensor<768x768xf32>
    %7740 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7741 = stablehlo.multiply %7740, %arg481 : tensor<768x768xf32>
    %7742 = stablehlo.add %7739, %7741 : tensor<768x768xf32>
    %7743 = stablehlo.multiply %5642, %5642 : tensor<768xf32>
    %7744 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7745 = stablehlo.multiply %7744, %7743 : tensor<768xf32>
    %7746 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7747 = stablehlo.multiply %7746, %arg482 : tensor<768xf32>
    %7748 = stablehlo.add %7745, %7747 : tensor<768xf32>
    %7749 = stablehlo.multiply %5647, %5647 : tensor<768xf32>
    %7750 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7751 = stablehlo.multiply %7750, %7749 : tensor<768xf32>
    %7752 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7753 = stablehlo.multiply %7752, %arg483 : tensor<768xf32>
    %7754 = stablehlo.add %7751, %7753 : tensor<768xf32>
    %7755 = stablehlo.multiply %5652, %5652 : tensor<768xf32>
    %7756 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7757 = stablehlo.multiply %7756, %7755 : tensor<768xf32>
    %7758 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7759 = stablehlo.multiply %7758, %arg484 : tensor<768xf32>
    %7760 = stablehlo.add %7757, %7759 : tensor<768xf32>
    %7761 = stablehlo.multiply %5657, %5657 : tensor<3072x768xf32>
    %7762 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7763 = stablehlo.multiply %7762, %7761 : tensor<3072x768xf32>
    %7764 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7765 = stablehlo.multiply %7764, %arg485 : tensor<3072x768xf32>
    %7766 = stablehlo.add %7763, %7765 : tensor<3072x768xf32>
    %7767 = stablehlo.multiply %5662, %5662 : tensor<768xf32>
    %7768 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7769 = stablehlo.multiply %7768, %7767 : tensor<768xf32>
    %7770 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7771 = stablehlo.multiply %7770, %arg486 : tensor<768xf32>
    %7772 = stablehlo.add %7769, %7771 : tensor<768xf32>
    %7773 = stablehlo.multiply %5667, %5667 : tensor<768xf32>
    %7774 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7775 = stablehlo.multiply %7774, %7773 : tensor<768xf32>
    %7776 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7777 = stablehlo.multiply %7776, %arg487 : tensor<768xf32>
    %7778 = stablehlo.add %7775, %7777 : tensor<768xf32>
    %7779 = stablehlo.multiply %5672, %5672 : tensor<3072xf32>
    %7780 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7781 = stablehlo.multiply %7780, %7779 : tensor<3072xf32>
    %7782 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7783 = stablehlo.multiply %7782, %arg488 : tensor<3072xf32>
    %7784 = stablehlo.add %7781, %7783 : tensor<3072xf32>
    %7785 = stablehlo.multiply %5677, %5677 : tensor<768x3072xf32>
    %7786 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7787 = stablehlo.multiply %7786, %7785 : tensor<768x3072xf32>
    %7788 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7789 = stablehlo.multiply %7788, %arg489 : tensor<768x3072xf32>
    %7790 = stablehlo.add %7787, %7789 : tensor<768x3072xf32>
    %7791 = stablehlo.multiply %5682, %5682 : tensor<768xf32>
    %7792 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7793 = stablehlo.multiply %7792, %7791 : tensor<768xf32>
    %7794 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7795 = stablehlo.multiply %7794, %arg490 : tensor<768xf32>
    %7796 = stablehlo.add %7793, %7795 : tensor<768xf32>
    %7797 = stablehlo.multiply %5687, %5687 : tensor<768x768xf32>
    %7798 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7799 = stablehlo.multiply %7798, %7797 : tensor<768x768xf32>
    %7800 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7801 = stablehlo.multiply %7800, %arg491 : tensor<768x768xf32>
    %7802 = stablehlo.add %7799, %7801 : tensor<768x768xf32>
    %7803 = stablehlo.multiply %5692, %5692 : tensor<768xf32>
    %7804 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7805 = stablehlo.multiply %7804, %7803 : tensor<768xf32>
    %7806 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7807 = stablehlo.multiply %7806, %arg492 : tensor<768xf32>
    %7808 = stablehlo.add %7805, %7807 : tensor<768xf32>
    %7809 = stablehlo.multiply %5697, %5697 : tensor<768x768xf32>
    %7810 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7811 = stablehlo.multiply %7810, %7809 : tensor<768x768xf32>
    %7812 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7813 = stablehlo.multiply %7812, %arg493 : tensor<768x768xf32>
    %7814 = stablehlo.add %7811, %7813 : tensor<768x768xf32>
    %7815 = stablehlo.multiply %5702, %5702 : tensor<768xf32>
    %7816 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7817 = stablehlo.multiply %7816, %7815 : tensor<768xf32>
    %7818 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7819 = stablehlo.multiply %7818, %arg494 : tensor<768xf32>
    %7820 = stablehlo.add %7817, %7819 : tensor<768xf32>
    %7821 = stablehlo.multiply %5707, %5707 : tensor<768x768xf32>
    %7822 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7823 = stablehlo.multiply %7822, %7821 : tensor<768x768xf32>
    %7824 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7825 = stablehlo.multiply %7824, %arg495 : tensor<768x768xf32>
    %7826 = stablehlo.add %7823, %7825 : tensor<768x768xf32>
    %7827 = stablehlo.multiply %5712, %5712 : tensor<768xf32>
    %7828 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7829 = stablehlo.multiply %7828, %7827 : tensor<768xf32>
    %7830 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7831 = stablehlo.multiply %7830, %arg496 : tensor<768xf32>
    %7832 = stablehlo.add %7829, %7831 : tensor<768xf32>
    %7833 = stablehlo.multiply %5717, %5717 : tensor<768x768xf32>
    %7834 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7835 = stablehlo.multiply %7834, %7833 : tensor<768x768xf32>
    %7836 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7837 = stablehlo.multiply %7836, %arg497 : tensor<768x768xf32>
    %7838 = stablehlo.add %7835, %7837 : tensor<768x768xf32>
    %7839 = stablehlo.multiply %5722, %5722 : tensor<768xf32>
    %7840 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7841 = stablehlo.multiply %7840, %7839 : tensor<768xf32>
    %7842 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7843 = stablehlo.multiply %7842, %arg498 : tensor<768xf32>
    %7844 = stablehlo.add %7841, %7843 : tensor<768xf32>
    %7845 = stablehlo.multiply %5727, %5727 : tensor<768xf32>
    %7846 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7847 = stablehlo.multiply %7846, %7845 : tensor<768xf32>
    %7848 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7849 = stablehlo.multiply %7848, %arg499 : tensor<768xf32>
    %7850 = stablehlo.add %7847, %7849 : tensor<768xf32>
    %7851 = stablehlo.multiply %5732, %5732 : tensor<768xf32>
    %7852 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7853 = stablehlo.multiply %7852, %7851 : tensor<768xf32>
    %7854 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7855 = stablehlo.multiply %7854, %arg500 : tensor<768xf32>
    %7856 = stablehlo.add %7853, %7855 : tensor<768xf32>
    %7857 = stablehlo.multiply %5737, %5737 : tensor<3072x768xf32>
    %7858 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7859 = stablehlo.multiply %7858, %7857 : tensor<3072x768xf32>
    %7860 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7861 = stablehlo.multiply %7860, %arg501 : tensor<3072x768xf32>
    %7862 = stablehlo.add %7859, %7861 : tensor<3072x768xf32>
    %7863 = stablehlo.multiply %5742, %5742 : tensor<768xf32>
    %7864 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7865 = stablehlo.multiply %7864, %7863 : tensor<768xf32>
    %7866 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7867 = stablehlo.multiply %7866, %arg502 : tensor<768xf32>
    %7868 = stablehlo.add %7865, %7867 : tensor<768xf32>
    %7869 = stablehlo.multiply %5747, %5747 : tensor<768xf32>
    %7870 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7871 = stablehlo.multiply %7870, %7869 : tensor<768xf32>
    %7872 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7873 = stablehlo.multiply %7872, %arg503 : tensor<768xf32>
    %7874 = stablehlo.add %7871, %7873 : tensor<768xf32>
    %7875 = stablehlo.multiply %5752, %5752 : tensor<3072xf32>
    %7876 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7877 = stablehlo.multiply %7876, %7875 : tensor<3072xf32>
    %7878 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7879 = stablehlo.multiply %7878, %arg504 : tensor<3072xf32>
    %7880 = stablehlo.add %7877, %7879 : tensor<3072xf32>
    %7881 = stablehlo.multiply %5757, %5757 : tensor<768x3072xf32>
    %7882 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7883 = stablehlo.multiply %7882, %7881 : tensor<768x3072xf32>
    %7884 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7885 = stablehlo.multiply %7884, %arg505 : tensor<768x3072xf32>
    %7886 = stablehlo.add %7883, %7885 : tensor<768x3072xf32>
    %7887 = stablehlo.multiply %5762, %5762 : tensor<768xf32>
    %7888 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7889 = stablehlo.multiply %7888, %7887 : tensor<768xf32>
    %7890 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7891 = stablehlo.multiply %7890, %arg506 : tensor<768xf32>
    %7892 = stablehlo.add %7889, %7891 : tensor<768xf32>
    %7893 = stablehlo.multiply %5767, %5767 : tensor<768x768xf32>
    %7894 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7895 = stablehlo.multiply %7894, %7893 : tensor<768x768xf32>
    %7896 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7897 = stablehlo.multiply %7896, %arg507 : tensor<768x768xf32>
    %7898 = stablehlo.add %7895, %7897 : tensor<768x768xf32>
    %7899 = stablehlo.multiply %5772, %5772 : tensor<768xf32>
    %7900 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7901 = stablehlo.multiply %7900, %7899 : tensor<768xf32>
    %7902 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7903 = stablehlo.multiply %7902, %arg508 : tensor<768xf32>
    %7904 = stablehlo.add %7901, %7903 : tensor<768xf32>
    %7905 = stablehlo.multiply %5777, %5777 : tensor<768x768xf32>
    %7906 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7907 = stablehlo.multiply %7906, %7905 : tensor<768x768xf32>
    %7908 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7909 = stablehlo.multiply %7908, %arg509 : tensor<768x768xf32>
    %7910 = stablehlo.add %7907, %7909 : tensor<768x768xf32>
    %7911 = stablehlo.multiply %5782, %5782 : tensor<768xf32>
    %7912 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7913 = stablehlo.multiply %7912, %7911 : tensor<768xf32>
    %7914 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7915 = stablehlo.multiply %7914, %arg510 : tensor<768xf32>
    %7916 = stablehlo.add %7913, %7915 : tensor<768xf32>
    %7917 = stablehlo.multiply %5787, %5787 : tensor<768x768xf32>
    %7918 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7919 = stablehlo.multiply %7918, %7917 : tensor<768x768xf32>
    %7920 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7921 = stablehlo.multiply %7920, %arg511 : tensor<768x768xf32>
    %7922 = stablehlo.add %7919, %7921 : tensor<768x768xf32>
    %7923 = stablehlo.multiply %5792, %5792 : tensor<768xf32>
    %7924 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7925 = stablehlo.multiply %7924, %7923 : tensor<768xf32>
    %7926 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7927 = stablehlo.multiply %7926, %arg512 : tensor<768xf32>
    %7928 = stablehlo.add %7925, %7927 : tensor<768xf32>
    %7929 = stablehlo.multiply %5797, %5797 : tensor<768x768xf32>
    %7930 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7931 = stablehlo.multiply %7930, %7929 : tensor<768x768xf32>
    %7932 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7933 = stablehlo.multiply %7932, %arg513 : tensor<768x768xf32>
    %7934 = stablehlo.add %7931, %7933 : tensor<768x768xf32>
    %7935 = stablehlo.multiply %5802, %5802 : tensor<768xf32>
    %7936 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7937 = stablehlo.multiply %7936, %7935 : tensor<768xf32>
    %7938 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7939 = stablehlo.multiply %7938, %arg514 : tensor<768xf32>
    %7940 = stablehlo.add %7937, %7939 : tensor<768xf32>
    %7941 = stablehlo.multiply %5807, %5807 : tensor<768xf32>
    %7942 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7943 = stablehlo.multiply %7942, %7941 : tensor<768xf32>
    %7944 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7945 = stablehlo.multiply %7944, %arg515 : tensor<768xf32>
    %7946 = stablehlo.add %7943, %7945 : tensor<768xf32>
    %7947 = stablehlo.multiply %5812, %5812 : tensor<768xf32>
    %7948 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7949 = stablehlo.multiply %7948, %7947 : tensor<768xf32>
    %7950 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7951 = stablehlo.multiply %7950, %arg516 : tensor<768xf32>
    %7952 = stablehlo.add %7949, %7951 : tensor<768xf32>
    %7953 = stablehlo.multiply %5817, %5817 : tensor<3072x768xf32>
    %7954 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7955 = stablehlo.multiply %7954, %7953 : tensor<3072x768xf32>
    %7956 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7957 = stablehlo.multiply %7956, %arg517 : tensor<3072x768xf32>
    %7958 = stablehlo.add %7955, %7957 : tensor<3072x768xf32>
    %7959 = stablehlo.multiply %5822, %5822 : tensor<768xf32>
    %7960 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7961 = stablehlo.multiply %7960, %7959 : tensor<768xf32>
    %7962 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7963 = stablehlo.multiply %7962, %arg518 : tensor<768xf32>
    %7964 = stablehlo.add %7961, %7963 : tensor<768xf32>
    %7965 = stablehlo.multiply %5827, %5827 : tensor<768xf32>
    %7966 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7967 = stablehlo.multiply %7966, %7965 : tensor<768xf32>
    %7968 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7969 = stablehlo.multiply %7968, %arg519 : tensor<768xf32>
    %7970 = stablehlo.add %7967, %7969 : tensor<768xf32>
    %7971 = stablehlo.multiply %5832, %5832 : tensor<3072xf32>
    %7972 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7973 = stablehlo.multiply %7972, %7971 : tensor<3072xf32>
    %7974 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7975 = stablehlo.multiply %7974, %arg520 : tensor<3072xf32>
    %7976 = stablehlo.add %7973, %7975 : tensor<3072xf32>
    %7977 = stablehlo.multiply %5837, %5837 : tensor<768x3072xf32>
    %7978 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7979 = stablehlo.multiply %7978, %7977 : tensor<768x3072xf32>
    %7980 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7981 = stablehlo.multiply %7980, %arg521 : tensor<768x3072xf32>
    %7982 = stablehlo.add %7979, %7981 : tensor<768x3072xf32>
    %7983 = stablehlo.multiply %5842, %5842 : tensor<768xf32>
    %7984 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7985 = stablehlo.multiply %7984, %7983 : tensor<768xf32>
    %7986 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7987 = stablehlo.multiply %7986, %arg522 : tensor<768xf32>
    %7988 = stablehlo.add %7985, %7987 : tensor<768xf32>
    %7989 = stablehlo.multiply %5847, %5847 : tensor<768x768xf32>
    %7990 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7991 = stablehlo.multiply %7990, %7989 : tensor<768x768xf32>
    %7992 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7993 = stablehlo.multiply %7992, %arg523 : tensor<768x768xf32>
    %7994 = stablehlo.add %7991, %7993 : tensor<768x768xf32>
    %7995 = stablehlo.multiply %5852, %5852 : tensor<768xf32>
    %7996 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7997 = stablehlo.multiply %7996, %7995 : tensor<768xf32>
    %7998 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7999 = stablehlo.multiply %7998, %arg524 : tensor<768xf32>
    %8000 = stablehlo.add %7997, %7999 : tensor<768xf32>
    %8001 = stablehlo.multiply %5857, %5857 : tensor<768x768xf32>
    %8002 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8003 = stablehlo.multiply %8002, %8001 : tensor<768x768xf32>
    %8004 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8005 = stablehlo.multiply %8004, %arg525 : tensor<768x768xf32>
    %8006 = stablehlo.add %8003, %8005 : tensor<768x768xf32>
    %8007 = stablehlo.multiply %5862, %5862 : tensor<768xf32>
    %8008 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8009 = stablehlo.multiply %8008, %8007 : tensor<768xf32>
    %8010 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8011 = stablehlo.multiply %8010, %arg526 : tensor<768xf32>
    %8012 = stablehlo.add %8009, %8011 : tensor<768xf32>
    %8013 = stablehlo.multiply %5867, %5867 : tensor<768x768xf32>
    %8014 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8015 = stablehlo.multiply %8014, %8013 : tensor<768x768xf32>
    %8016 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8017 = stablehlo.multiply %8016, %arg527 : tensor<768x768xf32>
    %8018 = stablehlo.add %8015, %8017 : tensor<768x768xf32>
    %8019 = stablehlo.multiply %5872, %5872 : tensor<768xf32>
    %8020 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8021 = stablehlo.multiply %8020, %8019 : tensor<768xf32>
    %8022 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8023 = stablehlo.multiply %8022, %arg528 : tensor<768xf32>
    %8024 = stablehlo.add %8021, %8023 : tensor<768xf32>
    %8025 = stablehlo.multiply %5877, %5877 : tensor<768x768xf32>
    %8026 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8027 = stablehlo.multiply %8026, %8025 : tensor<768x768xf32>
    %8028 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8029 = stablehlo.multiply %8028, %arg529 : tensor<768x768xf32>
    %8030 = stablehlo.add %8027, %8029 : tensor<768x768xf32>
    %8031 = stablehlo.multiply %5882, %5882 : tensor<768xf32>
    %8032 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8033 = stablehlo.multiply %8032, %8031 : tensor<768xf32>
    %8034 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8035 = stablehlo.multiply %8034, %arg530 : tensor<768xf32>
    %8036 = stablehlo.add %8033, %8035 : tensor<768xf32>
    %8037 = stablehlo.multiply %5887, %5887 : tensor<768xf32>
    %8038 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8039 = stablehlo.multiply %8038, %8037 : tensor<768xf32>
    %8040 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8041 = stablehlo.multiply %8040, %arg531 : tensor<768xf32>
    %8042 = stablehlo.add %8039, %8041 : tensor<768xf32>
    %8043 = stablehlo.multiply %5892, %5892 : tensor<768xf32>
    %8044 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8045 = stablehlo.multiply %8044, %8043 : tensor<768xf32>
    %8046 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8047 = stablehlo.multiply %8046, %arg532 : tensor<768xf32>
    %8048 = stablehlo.add %8045, %8047 : tensor<768xf32>
    %8049 = stablehlo.multiply %5897, %5897 : tensor<3072x768xf32>
    %8050 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8051 = stablehlo.multiply %8050, %8049 : tensor<3072x768xf32>
    %8052 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8053 = stablehlo.multiply %8052, %arg533 : tensor<3072x768xf32>
    %8054 = stablehlo.add %8051, %8053 : tensor<3072x768xf32>
    %8055 = stablehlo.multiply %5902, %5902 : tensor<768xf32>
    %8056 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8057 = stablehlo.multiply %8056, %8055 : tensor<768xf32>
    %8058 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8059 = stablehlo.multiply %8058, %arg534 : tensor<768xf32>
    %8060 = stablehlo.add %8057, %8059 : tensor<768xf32>
    %8061 = stablehlo.multiply %5907, %5907 : tensor<768xf32>
    %8062 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8063 = stablehlo.multiply %8062, %8061 : tensor<768xf32>
    %8064 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8065 = stablehlo.multiply %8064, %arg535 : tensor<768xf32>
    %8066 = stablehlo.add %8063, %8065 : tensor<768xf32>
    %8067 = stablehlo.multiply %5912, %5912 : tensor<3072xf32>
    %8068 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8069 = stablehlo.multiply %8068, %8067 : tensor<3072xf32>
    %8070 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8071 = stablehlo.multiply %8070, %arg536 : tensor<3072xf32>
    %8072 = stablehlo.add %8069, %8071 : tensor<3072xf32>
    %8073 = stablehlo.multiply %5917, %5917 : tensor<768x3072xf32>
    %8074 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8075 = stablehlo.multiply %8074, %8073 : tensor<768x3072xf32>
    %8076 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8077 = stablehlo.multiply %8076, %arg537 : tensor<768x3072xf32>
    %8078 = stablehlo.add %8075, %8077 : tensor<768x3072xf32>
    %8079 = stablehlo.multiply %5922, %5922 : tensor<768xf32>
    %8080 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8081 = stablehlo.multiply %8080, %8079 : tensor<768xf32>
    %8082 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8083 = stablehlo.multiply %8082, %arg538 : tensor<768xf32>
    %8084 = stablehlo.add %8081, %8083 : tensor<768xf32>
    %8085 = stablehlo.multiply %5927, %5927 : tensor<768x768xf32>
    %8086 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8087 = stablehlo.multiply %8086, %8085 : tensor<768x768xf32>
    %8088 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8089 = stablehlo.multiply %8088, %arg539 : tensor<768x768xf32>
    %8090 = stablehlo.add %8087, %8089 : tensor<768x768xf32>
    %8091 = stablehlo.multiply %5932, %5932 : tensor<768xf32>
    %8092 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8093 = stablehlo.multiply %8092, %8091 : tensor<768xf32>
    %8094 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8095 = stablehlo.multiply %8094, %arg540 : tensor<768xf32>
    %8096 = stablehlo.add %8093, %8095 : tensor<768xf32>
    %8097 = stablehlo.multiply %5937, %5937 : tensor<768x768xf32>
    %8098 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8099 = stablehlo.multiply %8098, %8097 : tensor<768x768xf32>
    %8100 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8101 = stablehlo.multiply %8100, %arg541 : tensor<768x768xf32>
    %8102 = stablehlo.add %8099, %8101 : tensor<768x768xf32>
    %8103 = stablehlo.multiply %5942, %5942 : tensor<768xf32>
    %8104 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8105 = stablehlo.multiply %8104, %8103 : tensor<768xf32>
    %8106 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8107 = stablehlo.multiply %8106, %arg542 : tensor<768xf32>
    %8108 = stablehlo.add %8105, %8107 : tensor<768xf32>
    %8109 = stablehlo.multiply %5947, %5947 : tensor<768x768xf32>
    %8110 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8111 = stablehlo.multiply %8110, %8109 : tensor<768x768xf32>
    %8112 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8113 = stablehlo.multiply %8112, %arg543 : tensor<768x768xf32>
    %8114 = stablehlo.add %8111, %8113 : tensor<768x768xf32>
    %8115 = stablehlo.multiply %5952, %5952 : tensor<768xf32>
    %8116 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8117 = stablehlo.multiply %8116, %8115 : tensor<768xf32>
    %8118 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8119 = stablehlo.multiply %8118, %arg544 : tensor<768xf32>
    %8120 = stablehlo.add %8117, %8119 : tensor<768xf32>
    %8121 = stablehlo.multiply %5957, %5957 : tensor<768x768xf32>
    %8122 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8123 = stablehlo.multiply %8122, %8121 : tensor<768x768xf32>
    %8124 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8125 = stablehlo.multiply %8124, %arg545 : tensor<768x768xf32>
    %8126 = stablehlo.add %8123, %8125 : tensor<768x768xf32>
    %8127 = stablehlo.multiply %5962, %5962 : tensor<768xf32>
    %8128 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8129 = stablehlo.multiply %8128, %8127 : tensor<768xf32>
    %8130 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8131 = stablehlo.multiply %8130, %arg546 : tensor<768xf32>
    %8132 = stablehlo.add %8129, %8131 : tensor<768xf32>
    %8133 = stablehlo.multiply %5967, %5967 : tensor<768xf32>
    %8134 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8135 = stablehlo.multiply %8134, %8133 : tensor<768xf32>
    %8136 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8137 = stablehlo.multiply %8136, %arg547 : tensor<768xf32>
    %8138 = stablehlo.add %8135, %8137 : tensor<768xf32>
    %8139 = stablehlo.multiply %5972, %5972 : tensor<768xf32>
    %8140 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8141 = stablehlo.multiply %8140, %8139 : tensor<768xf32>
    %8142 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8143 = stablehlo.multiply %8142, %arg548 : tensor<768xf32>
    %8144 = stablehlo.add %8141, %8143 : tensor<768xf32>
    %8145 = stablehlo.multiply %5977, %5977 : tensor<3072x768xf32>
    %8146 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8147 = stablehlo.multiply %8146, %8145 : tensor<3072x768xf32>
    %8148 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8149 = stablehlo.multiply %8148, %arg549 : tensor<3072x768xf32>
    %8150 = stablehlo.add %8147, %8149 : tensor<3072x768xf32>
    %8151 = stablehlo.multiply %5982, %5982 : tensor<768xf32>
    %8152 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8153 = stablehlo.multiply %8152, %8151 : tensor<768xf32>
    %8154 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8155 = stablehlo.multiply %8154, %arg550 : tensor<768xf32>
    %8156 = stablehlo.add %8153, %8155 : tensor<768xf32>
    %8157 = stablehlo.multiply %5987, %5987 : tensor<768xf32>
    %8158 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8159 = stablehlo.multiply %8158, %8157 : tensor<768xf32>
    %8160 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8161 = stablehlo.multiply %8160, %arg551 : tensor<768xf32>
    %8162 = stablehlo.add %8159, %8161 : tensor<768xf32>
    %8163 = stablehlo.multiply %5992, %5992 : tensor<3072xf32>
    %8164 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8165 = stablehlo.multiply %8164, %8163 : tensor<3072xf32>
    %8166 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8167 = stablehlo.multiply %8166, %arg552 : tensor<3072xf32>
    %8168 = stablehlo.add %8165, %8167 : tensor<3072xf32>
    %8169 = stablehlo.multiply %5997, %5997 : tensor<768x3072xf32>
    %8170 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8171 = stablehlo.multiply %8170, %8169 : tensor<768x3072xf32>
    %8172 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8173 = stablehlo.multiply %8172, %arg553 : tensor<768x3072xf32>
    %8174 = stablehlo.add %8171, %8173 : tensor<768x3072xf32>
    %8175 = stablehlo.multiply %6002, %6002 : tensor<768xf32>
    %8176 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8177 = stablehlo.multiply %8176, %8175 : tensor<768xf32>
    %8178 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8179 = stablehlo.multiply %8178, %arg554 : tensor<768xf32>
    %8180 = stablehlo.add %8177, %8179 : tensor<768xf32>
    %8181 = stablehlo.multiply %6007, %6007 : tensor<768x768xf32>
    %8182 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8183 = stablehlo.multiply %8182, %8181 : tensor<768x768xf32>
    %8184 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8185 = stablehlo.multiply %8184, %arg555 : tensor<768x768xf32>
    %8186 = stablehlo.add %8183, %8185 : tensor<768x768xf32>
    %8187 = stablehlo.multiply %6012, %6012 : tensor<768xf32>
    %8188 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8189 = stablehlo.multiply %8188, %8187 : tensor<768xf32>
    %8190 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8191 = stablehlo.multiply %8190, %arg556 : tensor<768xf32>
    %8192 = stablehlo.add %8189, %8191 : tensor<768xf32>
    %8193 = stablehlo.multiply %6017, %6017 : tensor<768x768xf32>
    %8194 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8195 = stablehlo.multiply %8194, %8193 : tensor<768x768xf32>
    %8196 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8197 = stablehlo.multiply %8196, %arg557 : tensor<768x768xf32>
    %8198 = stablehlo.add %8195, %8197 : tensor<768x768xf32>
    %8199 = stablehlo.multiply %6022, %6022 : tensor<768xf32>
    %8200 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8201 = stablehlo.multiply %8200, %8199 : tensor<768xf32>
    %8202 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8203 = stablehlo.multiply %8202, %arg558 : tensor<768xf32>
    %8204 = stablehlo.add %8201, %8203 : tensor<768xf32>
    %8205 = stablehlo.multiply %6027, %6027 : tensor<768x768xf32>
    %8206 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8207 = stablehlo.multiply %8206, %8205 : tensor<768x768xf32>
    %8208 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8209 = stablehlo.multiply %8208, %arg559 : tensor<768x768xf32>
    %8210 = stablehlo.add %8207, %8209 : tensor<768x768xf32>
    %8211 = stablehlo.multiply %6032, %6032 : tensor<768xf32>
    %8212 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8213 = stablehlo.multiply %8212, %8211 : tensor<768xf32>
    %8214 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8215 = stablehlo.multiply %8214, %arg560 : tensor<768xf32>
    %8216 = stablehlo.add %8213, %8215 : tensor<768xf32>
    %8217 = stablehlo.multiply %6037, %6037 : tensor<768x768xf32>
    %8218 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8219 = stablehlo.multiply %8218, %8217 : tensor<768x768xf32>
    %8220 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8221 = stablehlo.multiply %8220, %arg561 : tensor<768x768xf32>
    %8222 = stablehlo.add %8219, %8221 : tensor<768x768xf32>
    %8223 = stablehlo.multiply %6042, %6042 : tensor<768xf32>
    %8224 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8225 = stablehlo.multiply %8224, %8223 : tensor<768xf32>
    %8226 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8227 = stablehlo.multiply %8226, %arg562 : tensor<768xf32>
    %8228 = stablehlo.add %8225, %8227 : tensor<768xf32>
    %8229 = stablehlo.multiply %6047, %6047 : tensor<768xf32>
    %8230 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8231 = stablehlo.multiply %8230, %8229 : tensor<768xf32>
    %8232 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8233 = stablehlo.multiply %8232, %arg563 : tensor<768xf32>
    %8234 = stablehlo.add %8231, %8233 : tensor<768xf32>
    %8235 = stablehlo.multiply %6052, %6052 : tensor<768xf32>
    %8236 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8237 = stablehlo.multiply %8236, %8235 : tensor<768xf32>
    %8238 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8239 = stablehlo.multiply %8238, %arg564 : tensor<768xf32>
    %8240 = stablehlo.add %8237, %8239 : tensor<768xf32>
    %8241 = stablehlo.multiply %6057, %6057 : tensor<3072x768xf32>
    %8242 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8243 = stablehlo.multiply %8242, %8241 : tensor<3072x768xf32>
    %8244 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8245 = stablehlo.multiply %8244, %arg565 : tensor<3072x768xf32>
    %8246 = stablehlo.add %8243, %8245 : tensor<3072x768xf32>
    %8247 = stablehlo.multiply %6062, %6062 : tensor<768xf32>
    %8248 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8249 = stablehlo.multiply %8248, %8247 : tensor<768xf32>
    %8250 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8251 = stablehlo.multiply %8250, %arg566 : tensor<768xf32>
    %8252 = stablehlo.add %8249, %8251 : tensor<768xf32>
    %8253 = stablehlo.multiply %6067, %6067 : tensor<768xf32>
    %8254 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8255 = stablehlo.multiply %8254, %8253 : tensor<768xf32>
    %8256 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8257 = stablehlo.multiply %8256, %arg567 : tensor<768xf32>
    %8258 = stablehlo.add %8255, %8257 : tensor<768xf32>
    %8259 = stablehlo.multiply %6072, %6072 : tensor<3072xf32>
    %8260 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8261 = stablehlo.multiply %8260, %8259 : tensor<3072xf32>
    %8262 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8263 = stablehlo.multiply %8262, %arg568 : tensor<3072xf32>
    %8264 = stablehlo.add %8261, %8263 : tensor<3072xf32>
    %8265 = stablehlo.multiply %6077, %6077 : tensor<768x3072xf32>
    %8266 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8267 = stablehlo.multiply %8266, %8265 : tensor<768x3072xf32>
    %8268 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8269 = stablehlo.multiply %8268, %arg569 : tensor<768x3072xf32>
    %8270 = stablehlo.add %8267, %8269 : tensor<768x3072xf32>
    %8271 = stablehlo.multiply %6082, %6082 : tensor<768xf32>
    %8272 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8273 = stablehlo.multiply %8272, %8271 : tensor<768xf32>
    %8274 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8275 = stablehlo.multiply %8274, %arg570 : tensor<768xf32>
    %8276 = stablehlo.add %8273, %8275 : tensor<768xf32>
    %8277 = stablehlo.multiply %6087, %6087 : tensor<768x768xf32>
    %8278 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8279 = stablehlo.multiply %8278, %8277 : tensor<768x768xf32>
    %8280 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8281 = stablehlo.multiply %8280, %arg571 : tensor<768x768xf32>
    %8282 = stablehlo.add %8279, %8281 : tensor<768x768xf32>
    %8283 = stablehlo.multiply %6092, %6092 : tensor<768xf32>
    %8284 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8285 = stablehlo.multiply %8284, %8283 : tensor<768xf32>
    %8286 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8287 = stablehlo.multiply %8286, %arg572 : tensor<768xf32>
    %8288 = stablehlo.add %8285, %8287 : tensor<768xf32>
    %8289 = stablehlo.multiply %6097, %6097 : tensor<768x768xf32>
    %8290 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8291 = stablehlo.multiply %8290, %8289 : tensor<768x768xf32>
    %8292 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8293 = stablehlo.multiply %8292, %arg573 : tensor<768x768xf32>
    %8294 = stablehlo.add %8291, %8293 : tensor<768x768xf32>
    %8295 = stablehlo.multiply %6102, %6102 : tensor<768xf32>
    %8296 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8297 = stablehlo.multiply %8296, %8295 : tensor<768xf32>
    %8298 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8299 = stablehlo.multiply %8298, %arg574 : tensor<768xf32>
    %8300 = stablehlo.add %8297, %8299 : tensor<768xf32>
    %8301 = stablehlo.multiply %6107, %6107 : tensor<768x768xf32>
    %8302 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8303 = stablehlo.multiply %8302, %8301 : tensor<768x768xf32>
    %8304 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8305 = stablehlo.multiply %8304, %arg575 : tensor<768x768xf32>
    %8306 = stablehlo.add %8303, %8305 : tensor<768x768xf32>
    %8307 = stablehlo.multiply %6112, %6112 : tensor<768xf32>
    %8308 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8309 = stablehlo.multiply %8308, %8307 : tensor<768xf32>
    %8310 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8311 = stablehlo.multiply %8310, %arg576 : tensor<768xf32>
    %8312 = stablehlo.add %8309, %8311 : tensor<768xf32>
    %8313 = stablehlo.multiply %6117, %6117 : tensor<768x768xf32>
    %8314 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8315 = stablehlo.multiply %8314, %8313 : tensor<768x768xf32>
    %8316 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8317 = stablehlo.multiply %8316, %arg577 : tensor<768x768xf32>
    %8318 = stablehlo.add %8315, %8317 : tensor<768x768xf32>
    %8319 = stablehlo.multiply %6122, %6122 : tensor<768xf32>
    %8320 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8321 = stablehlo.multiply %8320, %8319 : tensor<768xf32>
    %8322 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8323 = stablehlo.multiply %8322, %arg578 : tensor<768xf32>
    %8324 = stablehlo.add %8321, %8323 : tensor<768xf32>
    %8325 = stablehlo.multiply %6127, %6127 : tensor<768xf32>
    %8326 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8327 = stablehlo.multiply %8326, %8325 : tensor<768xf32>
    %8328 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8329 = stablehlo.multiply %8328, %arg579 : tensor<768xf32>
    %8330 = stablehlo.add %8327, %8329 : tensor<768xf32>
    %8331 = stablehlo.multiply %6132, %6132 : tensor<768xf32>
    %8332 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8333 = stablehlo.multiply %8332, %8331 : tensor<768xf32>
    %8334 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8335 = stablehlo.multiply %8334, %arg580 : tensor<768xf32>
    %8336 = stablehlo.add %8333, %8335 : tensor<768xf32>
    %8337 = stablehlo.multiply %6137, %6137 : tensor<3072x768xf32>
    %8338 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8339 = stablehlo.multiply %8338, %8337 : tensor<3072x768xf32>
    %8340 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8341 = stablehlo.multiply %8340, %arg581 : tensor<3072x768xf32>
    %8342 = stablehlo.add %8339, %8341 : tensor<3072x768xf32>
    %8343 = stablehlo.multiply %6142, %6142 : tensor<768xf32>
    %8344 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8345 = stablehlo.multiply %8344, %8343 : tensor<768xf32>
    %8346 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8347 = stablehlo.multiply %8346, %arg582 : tensor<768xf32>
    %8348 = stablehlo.add %8345, %8347 : tensor<768xf32>
    %8349 = stablehlo.multiply %6147, %6147 : tensor<768xf32>
    %8350 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8351 = stablehlo.multiply %8350, %8349 : tensor<768xf32>
    %8352 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8353 = stablehlo.multiply %8352, %arg583 : tensor<768xf32>
    %8354 = stablehlo.add %8351, %8353 : tensor<768xf32>
    %8355 = stablehlo.multiply %6152, %6152 : tensor<3072xf32>
    %8356 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8357 = stablehlo.multiply %8356, %8355 : tensor<3072xf32>
    %8358 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8359 = stablehlo.multiply %8358, %arg584 : tensor<3072xf32>
    %8360 = stablehlo.add %8357, %8359 : tensor<3072xf32>
    %8361 = stablehlo.multiply %6157, %6157 : tensor<768x3072xf32>
    %8362 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8363 = stablehlo.multiply %8362, %8361 : tensor<768x3072xf32>
    %8364 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8365 = stablehlo.multiply %8364, %arg585 : tensor<768x3072xf32>
    %8366 = stablehlo.add %8363, %8365 : tensor<768x3072xf32>
    %8367 = stablehlo.multiply %6162, %6162 : tensor<768xf32>
    %8368 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8369 = stablehlo.multiply %8368, %8367 : tensor<768xf32>
    %8370 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8371 = stablehlo.multiply %8370, %arg586 : tensor<768xf32>
    %8372 = stablehlo.add %8369, %8371 : tensor<768xf32>
    %8373 = stablehlo.multiply %6167, %6167 : tensor<768x768xf32>
    %8374 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8375 = stablehlo.multiply %8374, %8373 : tensor<768x768xf32>
    %8376 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8377 = stablehlo.multiply %8376, %arg587 : tensor<768x768xf32>
    %8378 = stablehlo.add %8375, %8377 : tensor<768x768xf32>
    %8379 = stablehlo.multiply %6172, %6172 : tensor<768xf32>
    %8380 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8381 = stablehlo.multiply %8380, %8379 : tensor<768xf32>
    %8382 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8383 = stablehlo.multiply %8382, %arg588 : tensor<768xf32>
    %8384 = stablehlo.add %8381, %8383 : tensor<768xf32>
    %8385 = stablehlo.multiply %6177, %6177 : tensor<768x768xf32>
    %8386 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8387 = stablehlo.multiply %8386, %8385 : tensor<768x768xf32>
    %8388 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8389 = stablehlo.multiply %8388, %arg589 : tensor<768x768xf32>
    %8390 = stablehlo.add %8387, %8389 : tensor<768x768xf32>
    %8391 = stablehlo.multiply %6182, %6182 : tensor<768xf32>
    %8392 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8393 = stablehlo.multiply %8392, %8391 : tensor<768xf32>
    %8394 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8395 = stablehlo.multiply %8394, %arg590 : tensor<768xf32>
    %8396 = stablehlo.add %8393, %8395 : tensor<768xf32>
    %8397 = stablehlo.multiply %6187, %6187 : tensor<768x768xf32>
    %8398 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8399 = stablehlo.multiply %8398, %8397 : tensor<768x768xf32>
    %8400 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8401 = stablehlo.multiply %8400, %arg591 : tensor<768x768xf32>
    %8402 = stablehlo.add %8399, %8401 : tensor<768x768xf32>
    %8403 = stablehlo.multiply %6192, %6192 : tensor<768xf32>
    %8404 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8405 = stablehlo.multiply %8404, %8403 : tensor<768xf32>
    %8406 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8407 = stablehlo.multiply %8406, %arg592 : tensor<768xf32>
    %8408 = stablehlo.add %8405, %8407 : tensor<768xf32>
    %8409 = stablehlo.multiply %6197, %6197 : tensor<768x768xf32>
    %8410 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8411 = stablehlo.multiply %8410, %8409 : tensor<768x768xf32>
    %8412 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8413 = stablehlo.multiply %8412, %arg593 : tensor<768x768xf32>
    %8414 = stablehlo.add %8411, %8413 : tensor<768x768xf32>
    %8415 = stablehlo.multiply %6202, %6202 : tensor<768xf32>
    %8416 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8417 = stablehlo.multiply %8416, %8415 : tensor<768xf32>
    %8418 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8419 = stablehlo.multiply %8418, %arg594 : tensor<768xf32>
    %8420 = stablehlo.add %8417, %8419 : tensor<768xf32>
    %8421 = stablehlo.multiply %6207, %6207 : tensor<768xf32>
    %8422 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8423 = stablehlo.multiply %8422, %8421 : tensor<768xf32>
    %8424 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8425 = stablehlo.multiply %8424, %arg595 : tensor<768xf32>
    %8426 = stablehlo.add %8423, %8425 : tensor<768xf32>
    %8427 = stablehlo.multiply %6212, %6212 : tensor<768xf32>
    %8428 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8429 = stablehlo.multiply %8428, %8427 : tensor<768xf32>
    %8430 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8431 = stablehlo.multiply %8430, %arg596 : tensor<768xf32>
    %8432 = stablehlo.add %8429, %8431 : tensor<768xf32>
    %8433 = stablehlo.multiply %6217, %6217 : tensor<3072x768xf32>
    %8434 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8435 = stablehlo.multiply %8434, %8433 : tensor<3072x768xf32>
    %8436 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8437 = stablehlo.multiply %8436, %arg597 : tensor<3072x768xf32>
    %8438 = stablehlo.add %8435, %8437 : tensor<3072x768xf32>
    %8439 = stablehlo.multiply %6222, %6222 : tensor<768xf32>
    %8440 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8441 = stablehlo.multiply %8440, %8439 : tensor<768xf32>
    %8442 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8443 = stablehlo.multiply %8442, %arg598 : tensor<768xf32>
    %8444 = stablehlo.add %8441, %8443 : tensor<768xf32>
    %8445 = stablehlo.multiply %6227, %6227 : tensor<768xf32>
    %8446 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8447 = stablehlo.multiply %8446, %8445 : tensor<768xf32>
    %8448 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8449 = stablehlo.multiply %8448, %arg599 : tensor<768xf32>
    %8450 = stablehlo.add %8447, %8449 : tensor<768xf32>
    %8451 = stablehlo.multiply %6232, %6232 : tensor<3072xf32>
    %8452 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8453 = stablehlo.multiply %8452, %8451 : tensor<3072xf32>
    %8454 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8455 = stablehlo.multiply %8454, %arg600 : tensor<3072xf32>
    %8456 = stablehlo.add %8453, %8455 : tensor<3072xf32>
    %8457 = stablehlo.multiply %6237, %6237 : tensor<768x3072xf32>
    %8458 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8459 = stablehlo.multiply %8458, %8457 : tensor<768x3072xf32>
    %8460 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8461 = stablehlo.multiply %8460, %arg601 : tensor<768x3072xf32>
    %8462 = stablehlo.add %8459, %8461 : tensor<768x3072xf32>
    %8463 = stablehlo.multiply %6242, %6242 : tensor<768xf32>
    %8464 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8465 = stablehlo.multiply %8464, %8463 : tensor<768xf32>
    %8466 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8467 = stablehlo.multiply %8466, %arg602 : tensor<768xf32>
    %8468 = stablehlo.add %8465, %8467 : tensor<768xf32>
    %8469 = stablehlo.multiply %6247, %6247 : tensor<768xf32>
    %8470 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8471 = stablehlo.multiply %8470, %8469 : tensor<768xf32>
    %8472 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8473 = stablehlo.multiply %8472, %arg603 : tensor<768xf32>
    %8474 = stablehlo.add %8471, %8473 : tensor<768xf32>
    %8475 = stablehlo.multiply %6252, %6252 : tensor<30522xf32>
    %8476 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8477 = stablehlo.multiply %8476, %8475 : tensor<30522xf32>
    %8478 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8479 = stablehlo.multiply %8478, %arg604 : tensor<30522xf32>
    %8480 = stablehlo.add %8477, %8479 : tensor<30522xf32>
    %8481 = stablehlo.multiply %6257, %6257 : tensor<768xf32>
    %8482 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8483 = stablehlo.multiply %8482, %8481 : tensor<768xf32>
    %8484 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8485 = stablehlo.multiply %8484, %arg605 : tensor<768xf32>
    %8486 = stablehlo.add %8483, %8485 : tensor<768xf32>
    %8487 = stablehlo.multiply %6262, %6262 : tensor<768x768xf32>
    %8488 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8489 = stablehlo.multiply %8488, %8487 : tensor<768x768xf32>
    %8490 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8491 = stablehlo.multiply %8490, %arg606 : tensor<768x768xf32>
    %8492 = stablehlo.add %8489, %8491 : tensor<768x768xf32>
    %8493 = stablehlo.multiply %6267, %6267 : tensor<30522x768xf32>
    %8494 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8495 = stablehlo.multiply %8494, %8493 : tensor<30522x768xf32>
    %8496 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8497 = stablehlo.multiply %8496, %arg607 : tensor<30522x768xf32>
    %8498 = stablehlo.add %8495, %8497 : tensor<30522x768xf32>
    %8499 = stablehlo.multiply %6272, %6272 : tensor<768xf32>
    %8500 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8501 = stablehlo.multiply %8500, %8499 : tensor<768xf32>
    %8502 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8503 = stablehlo.multiply %8502, %arg608 : tensor<768xf32>
    %8504 = stablehlo.add %8501, %8503 : tensor<768xf32>
    %8505 = stablehlo.multiply %6277, %6277 : tensor<768xf32>
    %8506 = stablehlo.broadcast_in_dim %cst_754, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8507 = stablehlo.multiply %8506, %8505 : tensor<768xf32>
    %8508 = stablehlo.broadcast_in_dim %cst_755, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8509 = stablehlo.multiply %8508, %arg609 : tensor<768xf32>
    %8510 = stablehlo.add %8507, %8509 : tensor<768xf32>
    %c_756 = stablehlo.constant dense<2147483647> : tensor<i32>
    %8511 = stablehlo.compare  LT, %arg203, %c_756,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %c_757 = stablehlo.constant dense<1> : tensor<i32>
    %8512 = stablehlo.add %arg203, %c_757 : tensor<i32>
    %8513 = call @_where_334(%8511, %8512, %c_756) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_758 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %8514 = stablehlo.convert %8513 : (tensor<i32>) -> tensor<f32>
    %8515 = stablehlo.power %cst_758, %8514 : tensor<f32>
    %8516 = stablehlo.subtract %cst_7, %8515 : tensor<f32>
    %8517 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8518 = stablehlo.divide %6282, %8517 : tensor<512x768xf32>
    %8519 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8520 = stablehlo.divide %6287, %8519 : tensor<2x768xf32>
    %8521 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8522 = stablehlo.divide %6292, %8521 : tensor<30522x768xf32>
    %8523 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8524 = stablehlo.divide %6297, %8523 : tensor<768xf32>
    %8525 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8526 = stablehlo.divide %6302, %8525 : tensor<768x768xf32>
    %8527 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8528 = stablehlo.divide %6307, %8527 : tensor<768xf32>
    %8529 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8530 = stablehlo.divide %6312, %8529 : tensor<768x768xf32>
    %8531 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8532 = stablehlo.divide %6317, %8531 : tensor<768xf32>
    %8533 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8534 = stablehlo.divide %6322, %8533 : tensor<768x768xf32>
    %8535 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8536 = stablehlo.divide %6327, %8535 : tensor<768xf32>
    %8537 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8538 = stablehlo.divide %6332, %8537 : tensor<768x768xf32>
    %8539 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8540 = stablehlo.divide %6337, %8539 : tensor<768xf32>
    %8541 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8542 = stablehlo.divide %6342, %8541 : tensor<768xf32>
    %8543 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8544 = stablehlo.divide %6347, %8543 : tensor<768xf32>
    %8545 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8546 = stablehlo.divide %6352, %8545 : tensor<3072x768xf32>
    %8547 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8548 = stablehlo.divide %6357, %8547 : tensor<768xf32>
    %8549 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8550 = stablehlo.divide %6362, %8549 : tensor<768xf32>
    %8551 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8552 = stablehlo.divide %6367, %8551 : tensor<3072xf32>
    %8553 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8554 = stablehlo.divide %6372, %8553 : tensor<768x3072xf32>
    %8555 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8556 = stablehlo.divide %6377, %8555 : tensor<768xf32>
    %8557 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8558 = stablehlo.divide %6382, %8557 : tensor<768x768xf32>
    %8559 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8560 = stablehlo.divide %6387, %8559 : tensor<768xf32>
    %8561 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8562 = stablehlo.divide %6392, %8561 : tensor<768x768xf32>
    %8563 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8564 = stablehlo.divide %6397, %8563 : tensor<768xf32>
    %8565 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8566 = stablehlo.divide %6402, %8565 : tensor<768x768xf32>
    %8567 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8568 = stablehlo.divide %6407, %8567 : tensor<768xf32>
    %8569 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8570 = stablehlo.divide %6412, %8569 : tensor<768x768xf32>
    %8571 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8572 = stablehlo.divide %6417, %8571 : tensor<768xf32>
    %8573 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8574 = stablehlo.divide %6422, %8573 : tensor<768xf32>
    %8575 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8576 = stablehlo.divide %6427, %8575 : tensor<768xf32>
    %8577 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8578 = stablehlo.divide %6432, %8577 : tensor<3072x768xf32>
    %8579 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8580 = stablehlo.divide %6437, %8579 : tensor<768xf32>
    %8581 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8582 = stablehlo.divide %6442, %8581 : tensor<768xf32>
    %8583 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8584 = stablehlo.divide %6447, %8583 : tensor<3072xf32>
    %8585 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8586 = stablehlo.divide %6452, %8585 : tensor<768x3072xf32>
    %8587 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8588 = stablehlo.divide %6457, %8587 : tensor<768xf32>
    %8589 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8590 = stablehlo.divide %6462, %8589 : tensor<768x768xf32>
    %8591 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8592 = stablehlo.divide %6467, %8591 : tensor<768xf32>
    %8593 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8594 = stablehlo.divide %6472, %8593 : tensor<768x768xf32>
    %8595 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8596 = stablehlo.divide %6477, %8595 : tensor<768xf32>
    %8597 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8598 = stablehlo.divide %6482, %8597 : tensor<768x768xf32>
    %8599 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8600 = stablehlo.divide %6487, %8599 : tensor<768xf32>
    %8601 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8602 = stablehlo.divide %6492, %8601 : tensor<768x768xf32>
    %8603 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8604 = stablehlo.divide %6497, %8603 : tensor<768xf32>
    %8605 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8606 = stablehlo.divide %6502, %8605 : tensor<768xf32>
    %8607 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8608 = stablehlo.divide %6507, %8607 : tensor<768xf32>
    %8609 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8610 = stablehlo.divide %6512, %8609 : tensor<3072x768xf32>
    %8611 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8612 = stablehlo.divide %6517, %8611 : tensor<768xf32>
    %8613 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8614 = stablehlo.divide %6522, %8613 : tensor<768xf32>
    %8615 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8616 = stablehlo.divide %6527, %8615 : tensor<3072xf32>
    %8617 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8618 = stablehlo.divide %6532, %8617 : tensor<768x3072xf32>
    %8619 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8620 = stablehlo.divide %6537, %8619 : tensor<768xf32>
    %8621 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8622 = stablehlo.divide %6542, %8621 : tensor<768x768xf32>
    %8623 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8624 = stablehlo.divide %6547, %8623 : tensor<768xf32>
    %8625 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8626 = stablehlo.divide %6552, %8625 : tensor<768x768xf32>
    %8627 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8628 = stablehlo.divide %6557, %8627 : tensor<768xf32>
    %8629 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8630 = stablehlo.divide %6562, %8629 : tensor<768x768xf32>
    %8631 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8632 = stablehlo.divide %6567, %8631 : tensor<768xf32>
    %8633 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8634 = stablehlo.divide %6572, %8633 : tensor<768x768xf32>
    %8635 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8636 = stablehlo.divide %6577, %8635 : tensor<768xf32>
    %8637 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8638 = stablehlo.divide %6582, %8637 : tensor<768xf32>
    %8639 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8640 = stablehlo.divide %6587, %8639 : tensor<768xf32>
    %8641 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8642 = stablehlo.divide %6592, %8641 : tensor<3072x768xf32>
    %8643 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8644 = stablehlo.divide %6597, %8643 : tensor<768xf32>
    %8645 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8646 = stablehlo.divide %6602, %8645 : tensor<768xf32>
    %8647 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8648 = stablehlo.divide %6607, %8647 : tensor<3072xf32>
    %8649 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8650 = stablehlo.divide %6612, %8649 : tensor<768x3072xf32>
    %8651 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8652 = stablehlo.divide %6617, %8651 : tensor<768xf32>
    %8653 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8654 = stablehlo.divide %6622, %8653 : tensor<768x768xf32>
    %8655 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8656 = stablehlo.divide %6627, %8655 : tensor<768xf32>
    %8657 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8658 = stablehlo.divide %6632, %8657 : tensor<768x768xf32>
    %8659 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8660 = stablehlo.divide %6637, %8659 : tensor<768xf32>
    %8661 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8662 = stablehlo.divide %6642, %8661 : tensor<768x768xf32>
    %8663 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8664 = stablehlo.divide %6647, %8663 : tensor<768xf32>
    %8665 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8666 = stablehlo.divide %6652, %8665 : tensor<768x768xf32>
    %8667 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8668 = stablehlo.divide %6657, %8667 : tensor<768xf32>
    %8669 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8670 = stablehlo.divide %6662, %8669 : tensor<768xf32>
    %8671 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8672 = stablehlo.divide %6667, %8671 : tensor<768xf32>
    %8673 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8674 = stablehlo.divide %6672, %8673 : tensor<3072x768xf32>
    %8675 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8676 = stablehlo.divide %6677, %8675 : tensor<768xf32>
    %8677 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8678 = stablehlo.divide %6682, %8677 : tensor<768xf32>
    %8679 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8680 = stablehlo.divide %6687, %8679 : tensor<3072xf32>
    %8681 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8682 = stablehlo.divide %6692, %8681 : tensor<768x3072xf32>
    %8683 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8684 = stablehlo.divide %6697, %8683 : tensor<768xf32>
    %8685 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8686 = stablehlo.divide %6702, %8685 : tensor<768x768xf32>
    %8687 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8688 = stablehlo.divide %6707, %8687 : tensor<768xf32>
    %8689 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8690 = stablehlo.divide %6712, %8689 : tensor<768x768xf32>
    %8691 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8692 = stablehlo.divide %6717, %8691 : tensor<768xf32>
    %8693 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8694 = stablehlo.divide %6722, %8693 : tensor<768x768xf32>
    %8695 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8696 = stablehlo.divide %6727, %8695 : tensor<768xf32>
    %8697 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8698 = stablehlo.divide %6732, %8697 : tensor<768x768xf32>
    %8699 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8700 = stablehlo.divide %6737, %8699 : tensor<768xf32>
    %8701 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8702 = stablehlo.divide %6742, %8701 : tensor<768xf32>
    %8703 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8704 = stablehlo.divide %6747, %8703 : tensor<768xf32>
    %8705 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8706 = stablehlo.divide %6752, %8705 : tensor<3072x768xf32>
    %8707 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8708 = stablehlo.divide %6757, %8707 : tensor<768xf32>
    %8709 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8710 = stablehlo.divide %6762, %8709 : tensor<768xf32>
    %8711 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8712 = stablehlo.divide %6767, %8711 : tensor<3072xf32>
    %8713 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8714 = stablehlo.divide %6772, %8713 : tensor<768x3072xf32>
    %8715 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8716 = stablehlo.divide %6777, %8715 : tensor<768xf32>
    %8717 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8718 = stablehlo.divide %6782, %8717 : tensor<768x768xf32>
    %8719 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8720 = stablehlo.divide %6787, %8719 : tensor<768xf32>
    %8721 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8722 = stablehlo.divide %6792, %8721 : tensor<768x768xf32>
    %8723 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8724 = stablehlo.divide %6797, %8723 : tensor<768xf32>
    %8725 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8726 = stablehlo.divide %6802, %8725 : tensor<768x768xf32>
    %8727 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8728 = stablehlo.divide %6807, %8727 : tensor<768xf32>
    %8729 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8730 = stablehlo.divide %6812, %8729 : tensor<768x768xf32>
    %8731 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8732 = stablehlo.divide %6817, %8731 : tensor<768xf32>
    %8733 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8734 = stablehlo.divide %6822, %8733 : tensor<768xf32>
    %8735 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8736 = stablehlo.divide %6827, %8735 : tensor<768xf32>
    %8737 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8738 = stablehlo.divide %6832, %8737 : tensor<3072x768xf32>
    %8739 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8740 = stablehlo.divide %6837, %8739 : tensor<768xf32>
    %8741 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8742 = stablehlo.divide %6842, %8741 : tensor<768xf32>
    %8743 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8744 = stablehlo.divide %6847, %8743 : tensor<3072xf32>
    %8745 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8746 = stablehlo.divide %6852, %8745 : tensor<768x3072xf32>
    %8747 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8748 = stablehlo.divide %6857, %8747 : tensor<768xf32>
    %8749 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8750 = stablehlo.divide %6862, %8749 : tensor<768x768xf32>
    %8751 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8752 = stablehlo.divide %6867, %8751 : tensor<768xf32>
    %8753 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8754 = stablehlo.divide %6872, %8753 : tensor<768x768xf32>
    %8755 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8756 = stablehlo.divide %6877, %8755 : tensor<768xf32>
    %8757 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8758 = stablehlo.divide %6882, %8757 : tensor<768x768xf32>
    %8759 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8760 = stablehlo.divide %6887, %8759 : tensor<768xf32>
    %8761 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8762 = stablehlo.divide %6892, %8761 : tensor<768x768xf32>
    %8763 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8764 = stablehlo.divide %6897, %8763 : tensor<768xf32>
    %8765 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8766 = stablehlo.divide %6902, %8765 : tensor<768xf32>
    %8767 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8768 = stablehlo.divide %6907, %8767 : tensor<768xf32>
    %8769 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8770 = stablehlo.divide %6912, %8769 : tensor<3072x768xf32>
    %8771 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8772 = stablehlo.divide %6917, %8771 : tensor<768xf32>
    %8773 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8774 = stablehlo.divide %6922, %8773 : tensor<768xf32>
    %8775 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8776 = stablehlo.divide %6927, %8775 : tensor<3072xf32>
    %8777 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8778 = stablehlo.divide %6932, %8777 : tensor<768x3072xf32>
    %8779 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8780 = stablehlo.divide %6937, %8779 : tensor<768xf32>
    %8781 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8782 = stablehlo.divide %6942, %8781 : tensor<768x768xf32>
    %8783 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8784 = stablehlo.divide %6947, %8783 : tensor<768xf32>
    %8785 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8786 = stablehlo.divide %6952, %8785 : tensor<768x768xf32>
    %8787 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8788 = stablehlo.divide %6957, %8787 : tensor<768xf32>
    %8789 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8790 = stablehlo.divide %6962, %8789 : tensor<768x768xf32>
    %8791 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8792 = stablehlo.divide %6967, %8791 : tensor<768xf32>
    %8793 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8794 = stablehlo.divide %6972, %8793 : tensor<768x768xf32>
    %8795 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8796 = stablehlo.divide %6977, %8795 : tensor<768xf32>
    %8797 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8798 = stablehlo.divide %6982, %8797 : tensor<768xf32>
    %8799 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8800 = stablehlo.divide %6987, %8799 : tensor<768xf32>
    %8801 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8802 = stablehlo.divide %6992, %8801 : tensor<3072x768xf32>
    %8803 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8804 = stablehlo.divide %6997, %8803 : tensor<768xf32>
    %8805 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8806 = stablehlo.divide %7002, %8805 : tensor<768xf32>
    %8807 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8808 = stablehlo.divide %7007, %8807 : tensor<3072xf32>
    %8809 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8810 = stablehlo.divide %7012, %8809 : tensor<768x3072xf32>
    %8811 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8812 = stablehlo.divide %7017, %8811 : tensor<768xf32>
    %8813 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8814 = stablehlo.divide %7022, %8813 : tensor<768x768xf32>
    %8815 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8816 = stablehlo.divide %7027, %8815 : tensor<768xf32>
    %8817 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8818 = stablehlo.divide %7032, %8817 : tensor<768x768xf32>
    %8819 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8820 = stablehlo.divide %7037, %8819 : tensor<768xf32>
    %8821 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8822 = stablehlo.divide %7042, %8821 : tensor<768x768xf32>
    %8823 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8824 = stablehlo.divide %7047, %8823 : tensor<768xf32>
    %8825 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8826 = stablehlo.divide %7052, %8825 : tensor<768x768xf32>
    %8827 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8828 = stablehlo.divide %7057, %8827 : tensor<768xf32>
    %8829 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8830 = stablehlo.divide %7062, %8829 : tensor<768xf32>
    %8831 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8832 = stablehlo.divide %7067, %8831 : tensor<768xf32>
    %8833 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8834 = stablehlo.divide %7072, %8833 : tensor<3072x768xf32>
    %8835 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8836 = stablehlo.divide %7077, %8835 : tensor<768xf32>
    %8837 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8838 = stablehlo.divide %7082, %8837 : tensor<768xf32>
    %8839 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8840 = stablehlo.divide %7087, %8839 : tensor<3072xf32>
    %8841 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8842 = stablehlo.divide %7092, %8841 : tensor<768x3072xf32>
    %8843 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8844 = stablehlo.divide %7097, %8843 : tensor<768xf32>
    %8845 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8846 = stablehlo.divide %7102, %8845 : tensor<768x768xf32>
    %8847 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8848 = stablehlo.divide %7107, %8847 : tensor<768xf32>
    %8849 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8850 = stablehlo.divide %7112, %8849 : tensor<768x768xf32>
    %8851 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8852 = stablehlo.divide %7117, %8851 : tensor<768xf32>
    %8853 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8854 = stablehlo.divide %7122, %8853 : tensor<768x768xf32>
    %8855 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8856 = stablehlo.divide %7127, %8855 : tensor<768xf32>
    %8857 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8858 = stablehlo.divide %7132, %8857 : tensor<768x768xf32>
    %8859 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8860 = stablehlo.divide %7137, %8859 : tensor<768xf32>
    %8861 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8862 = stablehlo.divide %7142, %8861 : tensor<768xf32>
    %8863 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8864 = stablehlo.divide %7147, %8863 : tensor<768xf32>
    %8865 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8866 = stablehlo.divide %7152, %8865 : tensor<3072x768xf32>
    %8867 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8868 = stablehlo.divide %7157, %8867 : tensor<768xf32>
    %8869 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8870 = stablehlo.divide %7162, %8869 : tensor<768xf32>
    %8871 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8872 = stablehlo.divide %7167, %8871 : tensor<3072xf32>
    %8873 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8874 = stablehlo.divide %7172, %8873 : tensor<768x3072xf32>
    %8875 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8876 = stablehlo.divide %7177, %8875 : tensor<768xf32>
    %8877 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8878 = stablehlo.divide %7182, %8877 : tensor<768x768xf32>
    %8879 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8880 = stablehlo.divide %7187, %8879 : tensor<768xf32>
    %8881 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8882 = stablehlo.divide %7192, %8881 : tensor<768x768xf32>
    %8883 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8884 = stablehlo.divide %7197, %8883 : tensor<768xf32>
    %8885 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8886 = stablehlo.divide %7202, %8885 : tensor<768x768xf32>
    %8887 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8888 = stablehlo.divide %7207, %8887 : tensor<768xf32>
    %8889 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8890 = stablehlo.divide %7212, %8889 : tensor<768x768xf32>
    %8891 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8892 = stablehlo.divide %7217, %8891 : tensor<768xf32>
    %8893 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8894 = stablehlo.divide %7222, %8893 : tensor<768xf32>
    %8895 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8896 = stablehlo.divide %7227, %8895 : tensor<768xf32>
    %8897 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8898 = stablehlo.divide %7232, %8897 : tensor<3072x768xf32>
    %8899 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8900 = stablehlo.divide %7237, %8899 : tensor<768xf32>
    %8901 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8902 = stablehlo.divide %7242, %8901 : tensor<768xf32>
    %8903 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8904 = stablehlo.divide %7247, %8903 : tensor<3072xf32>
    %8905 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8906 = stablehlo.divide %7252, %8905 : tensor<768x3072xf32>
    %8907 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8908 = stablehlo.divide %7257, %8907 : tensor<768xf32>
    %8909 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8910 = stablehlo.divide %7262, %8909 : tensor<768xf32>
    %8911 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8912 = stablehlo.divide %7267, %8911 : tensor<30522xf32>
    %8913 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8914 = stablehlo.divide %7272, %8913 : tensor<768xf32>
    %8915 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8916 = stablehlo.divide %7277, %8915 : tensor<768x768xf32>
    %8917 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8918 = stablehlo.divide %7282, %8917 : tensor<30522x768xf32>
    %8919 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8920 = stablehlo.divide %7287, %8919 : tensor<768xf32>
    %8921 = stablehlo.broadcast_in_dim %8516, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8922 = stablehlo.divide %7292, %8921 : tensor<768xf32>
    %cst_759 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %8923 = stablehlo.convert %8513 : (tensor<i32>) -> tensor<f32>
    %8924 = stablehlo.power %cst_759, %8923 : tensor<f32>
    %8925 = stablehlo.subtract %cst_7, %8924 : tensor<f32>
    %8926 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8927 = stablehlo.divide %7298, %8926 : tensor<512x768xf32>
    %8928 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8929 = stablehlo.divide %7304, %8928 : tensor<2x768xf32>
    %8930 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8931 = stablehlo.divide %7310, %8930 : tensor<30522x768xf32>
    %8932 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8933 = stablehlo.divide %7316, %8932 : tensor<768xf32>
    %8934 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8935 = stablehlo.divide %7322, %8934 : tensor<768x768xf32>
    %8936 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8937 = stablehlo.divide %7328, %8936 : tensor<768xf32>
    %8938 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8939 = stablehlo.divide %7334, %8938 : tensor<768x768xf32>
    %8940 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8941 = stablehlo.divide %7340, %8940 : tensor<768xf32>
    %8942 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8943 = stablehlo.divide %7346, %8942 : tensor<768x768xf32>
    %8944 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8945 = stablehlo.divide %7352, %8944 : tensor<768xf32>
    %8946 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8947 = stablehlo.divide %7358, %8946 : tensor<768x768xf32>
    %8948 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8949 = stablehlo.divide %7364, %8948 : tensor<768xf32>
    %8950 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8951 = stablehlo.divide %7370, %8950 : tensor<768xf32>
    %8952 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8953 = stablehlo.divide %7376, %8952 : tensor<768xf32>
    %8954 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8955 = stablehlo.divide %7382, %8954 : tensor<3072x768xf32>
    %8956 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8957 = stablehlo.divide %7388, %8956 : tensor<768xf32>
    %8958 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8959 = stablehlo.divide %7394, %8958 : tensor<768xf32>
    %8960 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8961 = stablehlo.divide %7400, %8960 : tensor<3072xf32>
    %8962 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8963 = stablehlo.divide %7406, %8962 : tensor<768x3072xf32>
    %8964 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8965 = stablehlo.divide %7412, %8964 : tensor<768xf32>
    %8966 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8967 = stablehlo.divide %7418, %8966 : tensor<768x768xf32>
    %8968 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8969 = stablehlo.divide %7424, %8968 : tensor<768xf32>
    %8970 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8971 = stablehlo.divide %7430, %8970 : tensor<768x768xf32>
    %8972 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8973 = stablehlo.divide %7436, %8972 : tensor<768xf32>
    %8974 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8975 = stablehlo.divide %7442, %8974 : tensor<768x768xf32>
    %8976 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8977 = stablehlo.divide %7448, %8976 : tensor<768xf32>
    %8978 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8979 = stablehlo.divide %7454, %8978 : tensor<768x768xf32>
    %8980 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8981 = stablehlo.divide %7460, %8980 : tensor<768xf32>
    %8982 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8983 = stablehlo.divide %7466, %8982 : tensor<768xf32>
    %8984 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8985 = stablehlo.divide %7472, %8984 : tensor<768xf32>
    %8986 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8987 = stablehlo.divide %7478, %8986 : tensor<3072x768xf32>
    %8988 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8989 = stablehlo.divide %7484, %8988 : tensor<768xf32>
    %8990 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8991 = stablehlo.divide %7490, %8990 : tensor<768xf32>
    %8992 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8993 = stablehlo.divide %7496, %8992 : tensor<3072xf32>
    %8994 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8995 = stablehlo.divide %7502, %8994 : tensor<768x3072xf32>
    %8996 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8997 = stablehlo.divide %7508, %8996 : tensor<768xf32>
    %8998 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8999 = stablehlo.divide %7514, %8998 : tensor<768x768xf32>
    %9000 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9001 = stablehlo.divide %7520, %9000 : tensor<768xf32>
    %9002 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9003 = stablehlo.divide %7526, %9002 : tensor<768x768xf32>
    %9004 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9005 = stablehlo.divide %7532, %9004 : tensor<768xf32>
    %9006 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9007 = stablehlo.divide %7538, %9006 : tensor<768x768xf32>
    %9008 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9009 = stablehlo.divide %7544, %9008 : tensor<768xf32>
    %9010 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9011 = stablehlo.divide %7550, %9010 : tensor<768x768xf32>
    %9012 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9013 = stablehlo.divide %7556, %9012 : tensor<768xf32>
    %9014 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9015 = stablehlo.divide %7562, %9014 : tensor<768xf32>
    %9016 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9017 = stablehlo.divide %7568, %9016 : tensor<768xf32>
    %9018 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9019 = stablehlo.divide %7574, %9018 : tensor<3072x768xf32>
    %9020 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9021 = stablehlo.divide %7580, %9020 : tensor<768xf32>
    %9022 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9023 = stablehlo.divide %7586, %9022 : tensor<768xf32>
    %9024 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9025 = stablehlo.divide %7592, %9024 : tensor<3072xf32>
    %9026 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9027 = stablehlo.divide %7598, %9026 : tensor<768x3072xf32>
    %9028 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9029 = stablehlo.divide %7604, %9028 : tensor<768xf32>
    %9030 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9031 = stablehlo.divide %7610, %9030 : tensor<768x768xf32>
    %9032 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9033 = stablehlo.divide %7616, %9032 : tensor<768xf32>
    %9034 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9035 = stablehlo.divide %7622, %9034 : tensor<768x768xf32>
    %9036 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9037 = stablehlo.divide %7628, %9036 : tensor<768xf32>
    %9038 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9039 = stablehlo.divide %7634, %9038 : tensor<768x768xf32>
    %9040 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9041 = stablehlo.divide %7640, %9040 : tensor<768xf32>
    %9042 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9043 = stablehlo.divide %7646, %9042 : tensor<768x768xf32>
    %9044 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9045 = stablehlo.divide %7652, %9044 : tensor<768xf32>
    %9046 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9047 = stablehlo.divide %7658, %9046 : tensor<768xf32>
    %9048 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9049 = stablehlo.divide %7664, %9048 : tensor<768xf32>
    %9050 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9051 = stablehlo.divide %7670, %9050 : tensor<3072x768xf32>
    %9052 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9053 = stablehlo.divide %7676, %9052 : tensor<768xf32>
    %9054 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9055 = stablehlo.divide %7682, %9054 : tensor<768xf32>
    %9056 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9057 = stablehlo.divide %7688, %9056 : tensor<3072xf32>
    %9058 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9059 = stablehlo.divide %7694, %9058 : tensor<768x3072xf32>
    %9060 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9061 = stablehlo.divide %7700, %9060 : tensor<768xf32>
    %9062 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9063 = stablehlo.divide %7706, %9062 : tensor<768x768xf32>
    %9064 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9065 = stablehlo.divide %7712, %9064 : tensor<768xf32>
    %9066 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9067 = stablehlo.divide %7718, %9066 : tensor<768x768xf32>
    %9068 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9069 = stablehlo.divide %7724, %9068 : tensor<768xf32>
    %9070 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9071 = stablehlo.divide %7730, %9070 : tensor<768x768xf32>
    %9072 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9073 = stablehlo.divide %7736, %9072 : tensor<768xf32>
    %9074 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9075 = stablehlo.divide %7742, %9074 : tensor<768x768xf32>
    %9076 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9077 = stablehlo.divide %7748, %9076 : tensor<768xf32>
    %9078 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9079 = stablehlo.divide %7754, %9078 : tensor<768xf32>
    %9080 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9081 = stablehlo.divide %7760, %9080 : tensor<768xf32>
    %9082 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9083 = stablehlo.divide %7766, %9082 : tensor<3072x768xf32>
    %9084 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9085 = stablehlo.divide %7772, %9084 : tensor<768xf32>
    %9086 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9087 = stablehlo.divide %7778, %9086 : tensor<768xf32>
    %9088 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9089 = stablehlo.divide %7784, %9088 : tensor<3072xf32>
    %9090 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9091 = stablehlo.divide %7790, %9090 : tensor<768x3072xf32>
    %9092 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9093 = stablehlo.divide %7796, %9092 : tensor<768xf32>
    %9094 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9095 = stablehlo.divide %7802, %9094 : tensor<768x768xf32>
    %9096 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9097 = stablehlo.divide %7808, %9096 : tensor<768xf32>
    %9098 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9099 = stablehlo.divide %7814, %9098 : tensor<768x768xf32>
    %9100 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9101 = stablehlo.divide %7820, %9100 : tensor<768xf32>
    %9102 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9103 = stablehlo.divide %7826, %9102 : tensor<768x768xf32>
    %9104 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9105 = stablehlo.divide %7832, %9104 : tensor<768xf32>
    %9106 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9107 = stablehlo.divide %7838, %9106 : tensor<768x768xf32>
    %9108 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9109 = stablehlo.divide %7844, %9108 : tensor<768xf32>
    %9110 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9111 = stablehlo.divide %7850, %9110 : tensor<768xf32>
    %9112 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9113 = stablehlo.divide %7856, %9112 : tensor<768xf32>
    %9114 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9115 = stablehlo.divide %7862, %9114 : tensor<3072x768xf32>
    %9116 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9117 = stablehlo.divide %7868, %9116 : tensor<768xf32>
    %9118 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9119 = stablehlo.divide %7874, %9118 : tensor<768xf32>
    %9120 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9121 = stablehlo.divide %7880, %9120 : tensor<3072xf32>
    %9122 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9123 = stablehlo.divide %7886, %9122 : tensor<768x3072xf32>
    %9124 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9125 = stablehlo.divide %7892, %9124 : tensor<768xf32>
    %9126 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9127 = stablehlo.divide %7898, %9126 : tensor<768x768xf32>
    %9128 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9129 = stablehlo.divide %7904, %9128 : tensor<768xf32>
    %9130 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9131 = stablehlo.divide %7910, %9130 : tensor<768x768xf32>
    %9132 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9133 = stablehlo.divide %7916, %9132 : tensor<768xf32>
    %9134 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9135 = stablehlo.divide %7922, %9134 : tensor<768x768xf32>
    %9136 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9137 = stablehlo.divide %7928, %9136 : tensor<768xf32>
    %9138 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9139 = stablehlo.divide %7934, %9138 : tensor<768x768xf32>
    %9140 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9141 = stablehlo.divide %7940, %9140 : tensor<768xf32>
    %9142 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9143 = stablehlo.divide %7946, %9142 : tensor<768xf32>
    %9144 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9145 = stablehlo.divide %7952, %9144 : tensor<768xf32>
    %9146 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9147 = stablehlo.divide %7958, %9146 : tensor<3072x768xf32>
    %9148 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9149 = stablehlo.divide %7964, %9148 : tensor<768xf32>
    %9150 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9151 = stablehlo.divide %7970, %9150 : tensor<768xf32>
    %9152 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9153 = stablehlo.divide %7976, %9152 : tensor<3072xf32>
    %9154 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9155 = stablehlo.divide %7982, %9154 : tensor<768x3072xf32>
    %9156 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9157 = stablehlo.divide %7988, %9156 : tensor<768xf32>
    %9158 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9159 = stablehlo.divide %7994, %9158 : tensor<768x768xf32>
    %9160 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9161 = stablehlo.divide %8000, %9160 : tensor<768xf32>
    %9162 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9163 = stablehlo.divide %8006, %9162 : tensor<768x768xf32>
    %9164 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9165 = stablehlo.divide %8012, %9164 : tensor<768xf32>
    %9166 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9167 = stablehlo.divide %8018, %9166 : tensor<768x768xf32>
    %9168 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9169 = stablehlo.divide %8024, %9168 : tensor<768xf32>
    %9170 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9171 = stablehlo.divide %8030, %9170 : tensor<768x768xf32>
    %9172 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9173 = stablehlo.divide %8036, %9172 : tensor<768xf32>
    %9174 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9175 = stablehlo.divide %8042, %9174 : tensor<768xf32>
    %9176 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9177 = stablehlo.divide %8048, %9176 : tensor<768xf32>
    %9178 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9179 = stablehlo.divide %8054, %9178 : tensor<3072x768xf32>
    %9180 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9181 = stablehlo.divide %8060, %9180 : tensor<768xf32>
    %9182 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9183 = stablehlo.divide %8066, %9182 : tensor<768xf32>
    %9184 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9185 = stablehlo.divide %8072, %9184 : tensor<3072xf32>
    %9186 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9187 = stablehlo.divide %8078, %9186 : tensor<768x3072xf32>
    %9188 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9189 = stablehlo.divide %8084, %9188 : tensor<768xf32>
    %9190 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9191 = stablehlo.divide %8090, %9190 : tensor<768x768xf32>
    %9192 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9193 = stablehlo.divide %8096, %9192 : tensor<768xf32>
    %9194 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9195 = stablehlo.divide %8102, %9194 : tensor<768x768xf32>
    %9196 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9197 = stablehlo.divide %8108, %9196 : tensor<768xf32>
    %9198 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9199 = stablehlo.divide %8114, %9198 : tensor<768x768xf32>
    %9200 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9201 = stablehlo.divide %8120, %9200 : tensor<768xf32>
    %9202 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9203 = stablehlo.divide %8126, %9202 : tensor<768x768xf32>
    %9204 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9205 = stablehlo.divide %8132, %9204 : tensor<768xf32>
    %9206 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9207 = stablehlo.divide %8138, %9206 : tensor<768xf32>
    %9208 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9209 = stablehlo.divide %8144, %9208 : tensor<768xf32>
    %9210 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9211 = stablehlo.divide %8150, %9210 : tensor<3072x768xf32>
    %9212 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9213 = stablehlo.divide %8156, %9212 : tensor<768xf32>
    %9214 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9215 = stablehlo.divide %8162, %9214 : tensor<768xf32>
    %9216 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9217 = stablehlo.divide %8168, %9216 : tensor<3072xf32>
    %9218 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9219 = stablehlo.divide %8174, %9218 : tensor<768x3072xf32>
    %9220 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9221 = stablehlo.divide %8180, %9220 : tensor<768xf32>
    %9222 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9223 = stablehlo.divide %8186, %9222 : tensor<768x768xf32>
    %9224 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9225 = stablehlo.divide %8192, %9224 : tensor<768xf32>
    %9226 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9227 = stablehlo.divide %8198, %9226 : tensor<768x768xf32>
    %9228 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9229 = stablehlo.divide %8204, %9228 : tensor<768xf32>
    %9230 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9231 = stablehlo.divide %8210, %9230 : tensor<768x768xf32>
    %9232 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9233 = stablehlo.divide %8216, %9232 : tensor<768xf32>
    %9234 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9235 = stablehlo.divide %8222, %9234 : tensor<768x768xf32>
    %9236 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9237 = stablehlo.divide %8228, %9236 : tensor<768xf32>
    %9238 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9239 = stablehlo.divide %8234, %9238 : tensor<768xf32>
    %9240 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9241 = stablehlo.divide %8240, %9240 : tensor<768xf32>
    %9242 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9243 = stablehlo.divide %8246, %9242 : tensor<3072x768xf32>
    %9244 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9245 = stablehlo.divide %8252, %9244 : tensor<768xf32>
    %9246 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9247 = stablehlo.divide %8258, %9246 : tensor<768xf32>
    %9248 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9249 = stablehlo.divide %8264, %9248 : tensor<3072xf32>
    %9250 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9251 = stablehlo.divide %8270, %9250 : tensor<768x3072xf32>
    %9252 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9253 = stablehlo.divide %8276, %9252 : tensor<768xf32>
    %9254 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9255 = stablehlo.divide %8282, %9254 : tensor<768x768xf32>
    %9256 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9257 = stablehlo.divide %8288, %9256 : tensor<768xf32>
    %9258 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9259 = stablehlo.divide %8294, %9258 : tensor<768x768xf32>
    %9260 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9261 = stablehlo.divide %8300, %9260 : tensor<768xf32>
    %9262 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9263 = stablehlo.divide %8306, %9262 : tensor<768x768xf32>
    %9264 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9265 = stablehlo.divide %8312, %9264 : tensor<768xf32>
    %9266 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9267 = stablehlo.divide %8318, %9266 : tensor<768x768xf32>
    %9268 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9269 = stablehlo.divide %8324, %9268 : tensor<768xf32>
    %9270 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9271 = stablehlo.divide %8330, %9270 : tensor<768xf32>
    %9272 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9273 = stablehlo.divide %8336, %9272 : tensor<768xf32>
    %9274 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9275 = stablehlo.divide %8342, %9274 : tensor<3072x768xf32>
    %9276 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9277 = stablehlo.divide %8348, %9276 : tensor<768xf32>
    %9278 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9279 = stablehlo.divide %8354, %9278 : tensor<768xf32>
    %9280 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9281 = stablehlo.divide %8360, %9280 : tensor<3072xf32>
    %9282 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9283 = stablehlo.divide %8366, %9282 : tensor<768x3072xf32>
    %9284 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9285 = stablehlo.divide %8372, %9284 : tensor<768xf32>
    %9286 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9287 = stablehlo.divide %8378, %9286 : tensor<768x768xf32>
    %9288 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9289 = stablehlo.divide %8384, %9288 : tensor<768xf32>
    %9290 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9291 = stablehlo.divide %8390, %9290 : tensor<768x768xf32>
    %9292 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9293 = stablehlo.divide %8396, %9292 : tensor<768xf32>
    %9294 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9295 = stablehlo.divide %8402, %9294 : tensor<768x768xf32>
    %9296 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9297 = stablehlo.divide %8408, %9296 : tensor<768xf32>
    %9298 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9299 = stablehlo.divide %8414, %9298 : tensor<768x768xf32>
    %9300 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9301 = stablehlo.divide %8420, %9300 : tensor<768xf32>
    %9302 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9303 = stablehlo.divide %8426, %9302 : tensor<768xf32>
    %9304 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9305 = stablehlo.divide %8432, %9304 : tensor<768xf32>
    %9306 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9307 = stablehlo.divide %8438, %9306 : tensor<3072x768xf32>
    %9308 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9309 = stablehlo.divide %8444, %9308 : tensor<768xf32>
    %9310 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9311 = stablehlo.divide %8450, %9310 : tensor<768xf32>
    %9312 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9313 = stablehlo.divide %8456, %9312 : tensor<3072xf32>
    %9314 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9315 = stablehlo.divide %8462, %9314 : tensor<768x3072xf32>
    %9316 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9317 = stablehlo.divide %8468, %9316 : tensor<768xf32>
    %9318 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9319 = stablehlo.divide %8474, %9318 : tensor<768xf32>
    %9320 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %9321 = stablehlo.divide %8480, %9320 : tensor<30522xf32>
    %9322 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9323 = stablehlo.divide %8486, %9322 : tensor<768xf32>
    %9324 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9325 = stablehlo.divide %8492, %9324 : tensor<768x768xf32>
    %9326 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9327 = stablehlo.divide %8498, %9326 : tensor<30522x768xf32>
    %9328 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9329 = stablehlo.divide %8504, %9328 : tensor<768xf32>
    %9330 = stablehlo.broadcast_in_dim %8925, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9331 = stablehlo.divide %8510, %9330 : tensor<768xf32>
    %9332 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %9333 = stablehlo.add %8927, %9332 : tensor<512x768xf32>
    %9334 = stablehlo.sqrt %9333 : tensor<512x768xf32>
    %cst_760 = stablehlo.constant dense<9.99999993E-9> : tensor<f32>
    %9335 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %9336 = stablehlo.add %9334, %9335 : tensor<512x768xf32>
    %9337 = stablehlo.divide %8518, %9336 : tensor<512x768xf32>
    %9338 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %9339 = stablehlo.add %8929, %9338 : tensor<2x768xf32>
    %9340 = stablehlo.sqrt %9339 : tensor<2x768xf32>
    %9341 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %9342 = stablehlo.add %9340, %9341 : tensor<2x768xf32>
    %9343 = stablehlo.divide %8520, %9342 : tensor<2x768xf32>
    %9344 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9345 = stablehlo.add %8931, %9344 : tensor<30522x768xf32>
    %9346 = stablehlo.sqrt %9345 : tensor<30522x768xf32>
    %9347 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9348 = stablehlo.add %9346, %9347 : tensor<30522x768xf32>
    %9349 = stablehlo.divide %8522, %9348 : tensor<30522x768xf32>
    %9350 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9351 = stablehlo.add %8933, %9350 : tensor<768xf32>
    %9352 = stablehlo.sqrt %9351 : tensor<768xf32>
    %9353 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9354 = stablehlo.add %9352, %9353 : tensor<768xf32>
    %9355 = stablehlo.divide %8524, %9354 : tensor<768xf32>
    %9356 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9357 = stablehlo.add %8935, %9356 : tensor<768x768xf32>
    %9358 = stablehlo.sqrt %9357 : tensor<768x768xf32>
    %9359 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9360 = stablehlo.add %9358, %9359 : tensor<768x768xf32>
    %9361 = stablehlo.divide %8526, %9360 : tensor<768x768xf32>
    %9362 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9363 = stablehlo.add %8937, %9362 : tensor<768xf32>
    %9364 = stablehlo.sqrt %9363 : tensor<768xf32>
    %9365 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9366 = stablehlo.add %9364, %9365 : tensor<768xf32>
    %9367 = stablehlo.divide %8528, %9366 : tensor<768xf32>
    %9368 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9369 = stablehlo.add %8939, %9368 : tensor<768x768xf32>
    %9370 = stablehlo.sqrt %9369 : tensor<768x768xf32>
    %9371 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9372 = stablehlo.add %9370, %9371 : tensor<768x768xf32>
    %9373 = stablehlo.divide %8530, %9372 : tensor<768x768xf32>
    %9374 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9375 = stablehlo.add %8941, %9374 : tensor<768xf32>
    %9376 = stablehlo.sqrt %9375 : tensor<768xf32>
    %9377 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9378 = stablehlo.add %9376, %9377 : tensor<768xf32>
    %9379 = stablehlo.divide %8532, %9378 : tensor<768xf32>
    %9380 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9381 = stablehlo.add %8943, %9380 : tensor<768x768xf32>
    %9382 = stablehlo.sqrt %9381 : tensor<768x768xf32>
    %9383 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9384 = stablehlo.add %9382, %9383 : tensor<768x768xf32>
    %9385 = stablehlo.divide %8534, %9384 : tensor<768x768xf32>
    %9386 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9387 = stablehlo.add %8945, %9386 : tensor<768xf32>
    %9388 = stablehlo.sqrt %9387 : tensor<768xf32>
    %9389 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9390 = stablehlo.add %9388, %9389 : tensor<768xf32>
    %9391 = stablehlo.divide %8536, %9390 : tensor<768xf32>
    %9392 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9393 = stablehlo.add %8947, %9392 : tensor<768x768xf32>
    %9394 = stablehlo.sqrt %9393 : tensor<768x768xf32>
    %9395 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9396 = stablehlo.add %9394, %9395 : tensor<768x768xf32>
    %9397 = stablehlo.divide %8538, %9396 : tensor<768x768xf32>
    %9398 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9399 = stablehlo.add %8949, %9398 : tensor<768xf32>
    %9400 = stablehlo.sqrt %9399 : tensor<768xf32>
    %9401 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9402 = stablehlo.add %9400, %9401 : tensor<768xf32>
    %9403 = stablehlo.divide %8540, %9402 : tensor<768xf32>
    %9404 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9405 = stablehlo.add %8951, %9404 : tensor<768xf32>
    %9406 = stablehlo.sqrt %9405 : tensor<768xf32>
    %9407 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9408 = stablehlo.add %9406, %9407 : tensor<768xf32>
    %9409 = stablehlo.divide %8542, %9408 : tensor<768xf32>
    %9410 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9411 = stablehlo.add %8953, %9410 : tensor<768xf32>
    %9412 = stablehlo.sqrt %9411 : tensor<768xf32>
    %9413 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9414 = stablehlo.add %9412, %9413 : tensor<768xf32>
    %9415 = stablehlo.divide %8544, %9414 : tensor<768xf32>
    %9416 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9417 = stablehlo.add %8955, %9416 : tensor<3072x768xf32>
    %9418 = stablehlo.sqrt %9417 : tensor<3072x768xf32>
    %9419 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9420 = stablehlo.add %9418, %9419 : tensor<3072x768xf32>
    %9421 = stablehlo.divide %8546, %9420 : tensor<3072x768xf32>
    %9422 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9423 = stablehlo.add %8957, %9422 : tensor<768xf32>
    %9424 = stablehlo.sqrt %9423 : tensor<768xf32>
    %9425 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9426 = stablehlo.add %9424, %9425 : tensor<768xf32>
    %9427 = stablehlo.divide %8548, %9426 : tensor<768xf32>
    %9428 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9429 = stablehlo.add %8959, %9428 : tensor<768xf32>
    %9430 = stablehlo.sqrt %9429 : tensor<768xf32>
    %9431 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9432 = stablehlo.add %9430, %9431 : tensor<768xf32>
    %9433 = stablehlo.divide %8550, %9432 : tensor<768xf32>
    %9434 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9435 = stablehlo.add %8961, %9434 : tensor<3072xf32>
    %9436 = stablehlo.sqrt %9435 : tensor<3072xf32>
    %9437 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9438 = stablehlo.add %9436, %9437 : tensor<3072xf32>
    %9439 = stablehlo.divide %8552, %9438 : tensor<3072xf32>
    %9440 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9441 = stablehlo.add %8963, %9440 : tensor<768x3072xf32>
    %9442 = stablehlo.sqrt %9441 : tensor<768x3072xf32>
    %9443 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9444 = stablehlo.add %9442, %9443 : tensor<768x3072xf32>
    %9445 = stablehlo.divide %8554, %9444 : tensor<768x3072xf32>
    %9446 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9447 = stablehlo.add %8965, %9446 : tensor<768xf32>
    %9448 = stablehlo.sqrt %9447 : tensor<768xf32>
    %9449 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9450 = stablehlo.add %9448, %9449 : tensor<768xf32>
    %9451 = stablehlo.divide %8556, %9450 : tensor<768xf32>
    %9452 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9453 = stablehlo.add %8967, %9452 : tensor<768x768xf32>
    %9454 = stablehlo.sqrt %9453 : tensor<768x768xf32>
    %9455 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9456 = stablehlo.add %9454, %9455 : tensor<768x768xf32>
    %9457 = stablehlo.divide %8558, %9456 : tensor<768x768xf32>
    %9458 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9459 = stablehlo.add %8969, %9458 : tensor<768xf32>
    %9460 = stablehlo.sqrt %9459 : tensor<768xf32>
    %9461 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9462 = stablehlo.add %9460, %9461 : tensor<768xf32>
    %9463 = stablehlo.divide %8560, %9462 : tensor<768xf32>
    %9464 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9465 = stablehlo.add %8971, %9464 : tensor<768x768xf32>
    %9466 = stablehlo.sqrt %9465 : tensor<768x768xf32>
    %9467 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9468 = stablehlo.add %9466, %9467 : tensor<768x768xf32>
    %9469 = stablehlo.divide %8562, %9468 : tensor<768x768xf32>
    %9470 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9471 = stablehlo.add %8973, %9470 : tensor<768xf32>
    %9472 = stablehlo.sqrt %9471 : tensor<768xf32>
    %9473 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9474 = stablehlo.add %9472, %9473 : tensor<768xf32>
    %9475 = stablehlo.divide %8564, %9474 : tensor<768xf32>
    %9476 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9477 = stablehlo.add %8975, %9476 : tensor<768x768xf32>
    %9478 = stablehlo.sqrt %9477 : tensor<768x768xf32>
    %9479 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9480 = stablehlo.add %9478, %9479 : tensor<768x768xf32>
    %9481 = stablehlo.divide %8566, %9480 : tensor<768x768xf32>
    %9482 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9483 = stablehlo.add %8977, %9482 : tensor<768xf32>
    %9484 = stablehlo.sqrt %9483 : tensor<768xf32>
    %9485 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9486 = stablehlo.add %9484, %9485 : tensor<768xf32>
    %9487 = stablehlo.divide %8568, %9486 : tensor<768xf32>
    %9488 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9489 = stablehlo.add %8979, %9488 : tensor<768x768xf32>
    %9490 = stablehlo.sqrt %9489 : tensor<768x768xf32>
    %9491 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9492 = stablehlo.add %9490, %9491 : tensor<768x768xf32>
    %9493 = stablehlo.divide %8570, %9492 : tensor<768x768xf32>
    %9494 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9495 = stablehlo.add %8981, %9494 : tensor<768xf32>
    %9496 = stablehlo.sqrt %9495 : tensor<768xf32>
    %9497 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9498 = stablehlo.add %9496, %9497 : tensor<768xf32>
    %9499 = stablehlo.divide %8572, %9498 : tensor<768xf32>
    %9500 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9501 = stablehlo.add %8983, %9500 : tensor<768xf32>
    %9502 = stablehlo.sqrt %9501 : tensor<768xf32>
    %9503 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9504 = stablehlo.add %9502, %9503 : tensor<768xf32>
    %9505 = stablehlo.divide %8574, %9504 : tensor<768xf32>
    %9506 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9507 = stablehlo.add %8985, %9506 : tensor<768xf32>
    %9508 = stablehlo.sqrt %9507 : tensor<768xf32>
    %9509 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9510 = stablehlo.add %9508, %9509 : tensor<768xf32>
    %9511 = stablehlo.divide %8576, %9510 : tensor<768xf32>
    %9512 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9513 = stablehlo.add %8987, %9512 : tensor<3072x768xf32>
    %9514 = stablehlo.sqrt %9513 : tensor<3072x768xf32>
    %9515 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9516 = stablehlo.add %9514, %9515 : tensor<3072x768xf32>
    %9517 = stablehlo.divide %8578, %9516 : tensor<3072x768xf32>
    %9518 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9519 = stablehlo.add %8989, %9518 : tensor<768xf32>
    %9520 = stablehlo.sqrt %9519 : tensor<768xf32>
    %9521 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9522 = stablehlo.add %9520, %9521 : tensor<768xf32>
    %9523 = stablehlo.divide %8580, %9522 : tensor<768xf32>
    %9524 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9525 = stablehlo.add %8991, %9524 : tensor<768xf32>
    %9526 = stablehlo.sqrt %9525 : tensor<768xf32>
    %9527 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9528 = stablehlo.add %9526, %9527 : tensor<768xf32>
    %9529 = stablehlo.divide %8582, %9528 : tensor<768xf32>
    %9530 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9531 = stablehlo.add %8993, %9530 : tensor<3072xf32>
    %9532 = stablehlo.sqrt %9531 : tensor<3072xf32>
    %9533 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9534 = stablehlo.add %9532, %9533 : tensor<3072xf32>
    %9535 = stablehlo.divide %8584, %9534 : tensor<3072xf32>
    %9536 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9537 = stablehlo.add %8995, %9536 : tensor<768x3072xf32>
    %9538 = stablehlo.sqrt %9537 : tensor<768x3072xf32>
    %9539 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9540 = stablehlo.add %9538, %9539 : tensor<768x3072xf32>
    %9541 = stablehlo.divide %8586, %9540 : tensor<768x3072xf32>
    %9542 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9543 = stablehlo.add %8997, %9542 : tensor<768xf32>
    %9544 = stablehlo.sqrt %9543 : tensor<768xf32>
    %9545 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9546 = stablehlo.add %9544, %9545 : tensor<768xf32>
    %9547 = stablehlo.divide %8588, %9546 : tensor<768xf32>
    %9548 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9549 = stablehlo.add %8999, %9548 : tensor<768x768xf32>
    %9550 = stablehlo.sqrt %9549 : tensor<768x768xf32>
    %9551 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9552 = stablehlo.add %9550, %9551 : tensor<768x768xf32>
    %9553 = stablehlo.divide %8590, %9552 : tensor<768x768xf32>
    %9554 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9555 = stablehlo.add %9001, %9554 : tensor<768xf32>
    %9556 = stablehlo.sqrt %9555 : tensor<768xf32>
    %9557 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9558 = stablehlo.add %9556, %9557 : tensor<768xf32>
    %9559 = stablehlo.divide %8592, %9558 : tensor<768xf32>
    %9560 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9561 = stablehlo.add %9003, %9560 : tensor<768x768xf32>
    %9562 = stablehlo.sqrt %9561 : tensor<768x768xf32>
    %9563 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9564 = stablehlo.add %9562, %9563 : tensor<768x768xf32>
    %9565 = stablehlo.divide %8594, %9564 : tensor<768x768xf32>
    %9566 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9567 = stablehlo.add %9005, %9566 : tensor<768xf32>
    %9568 = stablehlo.sqrt %9567 : tensor<768xf32>
    %9569 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9570 = stablehlo.add %9568, %9569 : tensor<768xf32>
    %9571 = stablehlo.divide %8596, %9570 : tensor<768xf32>
    %9572 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9573 = stablehlo.add %9007, %9572 : tensor<768x768xf32>
    %9574 = stablehlo.sqrt %9573 : tensor<768x768xf32>
    %9575 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9576 = stablehlo.add %9574, %9575 : tensor<768x768xf32>
    %9577 = stablehlo.divide %8598, %9576 : tensor<768x768xf32>
    %9578 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9579 = stablehlo.add %9009, %9578 : tensor<768xf32>
    %9580 = stablehlo.sqrt %9579 : tensor<768xf32>
    %9581 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9582 = stablehlo.add %9580, %9581 : tensor<768xf32>
    %9583 = stablehlo.divide %8600, %9582 : tensor<768xf32>
    %9584 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9585 = stablehlo.add %9011, %9584 : tensor<768x768xf32>
    %9586 = stablehlo.sqrt %9585 : tensor<768x768xf32>
    %9587 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9588 = stablehlo.add %9586, %9587 : tensor<768x768xf32>
    %9589 = stablehlo.divide %8602, %9588 : tensor<768x768xf32>
    %9590 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9591 = stablehlo.add %9013, %9590 : tensor<768xf32>
    %9592 = stablehlo.sqrt %9591 : tensor<768xf32>
    %9593 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9594 = stablehlo.add %9592, %9593 : tensor<768xf32>
    %9595 = stablehlo.divide %8604, %9594 : tensor<768xf32>
    %9596 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9597 = stablehlo.add %9015, %9596 : tensor<768xf32>
    %9598 = stablehlo.sqrt %9597 : tensor<768xf32>
    %9599 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9600 = stablehlo.add %9598, %9599 : tensor<768xf32>
    %9601 = stablehlo.divide %8606, %9600 : tensor<768xf32>
    %9602 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9603 = stablehlo.add %9017, %9602 : tensor<768xf32>
    %9604 = stablehlo.sqrt %9603 : tensor<768xf32>
    %9605 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9606 = stablehlo.add %9604, %9605 : tensor<768xf32>
    %9607 = stablehlo.divide %8608, %9606 : tensor<768xf32>
    %9608 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9609 = stablehlo.add %9019, %9608 : tensor<3072x768xf32>
    %9610 = stablehlo.sqrt %9609 : tensor<3072x768xf32>
    %9611 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9612 = stablehlo.add %9610, %9611 : tensor<3072x768xf32>
    %9613 = stablehlo.divide %8610, %9612 : tensor<3072x768xf32>
    %9614 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9615 = stablehlo.add %9021, %9614 : tensor<768xf32>
    %9616 = stablehlo.sqrt %9615 : tensor<768xf32>
    %9617 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9618 = stablehlo.add %9616, %9617 : tensor<768xf32>
    %9619 = stablehlo.divide %8612, %9618 : tensor<768xf32>
    %9620 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9621 = stablehlo.add %9023, %9620 : tensor<768xf32>
    %9622 = stablehlo.sqrt %9621 : tensor<768xf32>
    %9623 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9624 = stablehlo.add %9622, %9623 : tensor<768xf32>
    %9625 = stablehlo.divide %8614, %9624 : tensor<768xf32>
    %9626 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9627 = stablehlo.add %9025, %9626 : tensor<3072xf32>
    %9628 = stablehlo.sqrt %9627 : tensor<3072xf32>
    %9629 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9630 = stablehlo.add %9628, %9629 : tensor<3072xf32>
    %9631 = stablehlo.divide %8616, %9630 : tensor<3072xf32>
    %9632 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9633 = stablehlo.add %9027, %9632 : tensor<768x3072xf32>
    %9634 = stablehlo.sqrt %9633 : tensor<768x3072xf32>
    %9635 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9636 = stablehlo.add %9634, %9635 : tensor<768x3072xf32>
    %9637 = stablehlo.divide %8618, %9636 : tensor<768x3072xf32>
    %9638 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9639 = stablehlo.add %9029, %9638 : tensor<768xf32>
    %9640 = stablehlo.sqrt %9639 : tensor<768xf32>
    %9641 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9642 = stablehlo.add %9640, %9641 : tensor<768xf32>
    %9643 = stablehlo.divide %8620, %9642 : tensor<768xf32>
    %9644 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9645 = stablehlo.add %9031, %9644 : tensor<768x768xf32>
    %9646 = stablehlo.sqrt %9645 : tensor<768x768xf32>
    %9647 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9648 = stablehlo.add %9646, %9647 : tensor<768x768xf32>
    %9649 = stablehlo.divide %8622, %9648 : tensor<768x768xf32>
    %9650 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9651 = stablehlo.add %9033, %9650 : tensor<768xf32>
    %9652 = stablehlo.sqrt %9651 : tensor<768xf32>
    %9653 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9654 = stablehlo.add %9652, %9653 : tensor<768xf32>
    %9655 = stablehlo.divide %8624, %9654 : tensor<768xf32>
    %9656 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9657 = stablehlo.add %9035, %9656 : tensor<768x768xf32>
    %9658 = stablehlo.sqrt %9657 : tensor<768x768xf32>
    %9659 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9660 = stablehlo.add %9658, %9659 : tensor<768x768xf32>
    %9661 = stablehlo.divide %8626, %9660 : tensor<768x768xf32>
    %9662 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9663 = stablehlo.add %9037, %9662 : tensor<768xf32>
    %9664 = stablehlo.sqrt %9663 : tensor<768xf32>
    %9665 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9666 = stablehlo.add %9664, %9665 : tensor<768xf32>
    %9667 = stablehlo.divide %8628, %9666 : tensor<768xf32>
    %9668 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9669 = stablehlo.add %9039, %9668 : tensor<768x768xf32>
    %9670 = stablehlo.sqrt %9669 : tensor<768x768xf32>
    %9671 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9672 = stablehlo.add %9670, %9671 : tensor<768x768xf32>
    %9673 = stablehlo.divide %8630, %9672 : tensor<768x768xf32>
    %9674 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9675 = stablehlo.add %9041, %9674 : tensor<768xf32>
    %9676 = stablehlo.sqrt %9675 : tensor<768xf32>
    %9677 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9678 = stablehlo.add %9676, %9677 : tensor<768xf32>
    %9679 = stablehlo.divide %8632, %9678 : tensor<768xf32>
    %9680 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9681 = stablehlo.add %9043, %9680 : tensor<768x768xf32>
    %9682 = stablehlo.sqrt %9681 : tensor<768x768xf32>
    %9683 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9684 = stablehlo.add %9682, %9683 : tensor<768x768xf32>
    %9685 = stablehlo.divide %8634, %9684 : tensor<768x768xf32>
    %9686 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9687 = stablehlo.add %9045, %9686 : tensor<768xf32>
    %9688 = stablehlo.sqrt %9687 : tensor<768xf32>
    %9689 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9690 = stablehlo.add %9688, %9689 : tensor<768xf32>
    %9691 = stablehlo.divide %8636, %9690 : tensor<768xf32>
    %9692 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9693 = stablehlo.add %9047, %9692 : tensor<768xf32>
    %9694 = stablehlo.sqrt %9693 : tensor<768xf32>
    %9695 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9696 = stablehlo.add %9694, %9695 : tensor<768xf32>
    %9697 = stablehlo.divide %8638, %9696 : tensor<768xf32>
    %9698 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9699 = stablehlo.add %9049, %9698 : tensor<768xf32>
    %9700 = stablehlo.sqrt %9699 : tensor<768xf32>
    %9701 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9702 = stablehlo.add %9700, %9701 : tensor<768xf32>
    %9703 = stablehlo.divide %8640, %9702 : tensor<768xf32>
    %9704 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9705 = stablehlo.add %9051, %9704 : tensor<3072x768xf32>
    %9706 = stablehlo.sqrt %9705 : tensor<3072x768xf32>
    %9707 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9708 = stablehlo.add %9706, %9707 : tensor<3072x768xf32>
    %9709 = stablehlo.divide %8642, %9708 : tensor<3072x768xf32>
    %9710 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9711 = stablehlo.add %9053, %9710 : tensor<768xf32>
    %9712 = stablehlo.sqrt %9711 : tensor<768xf32>
    %9713 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9714 = stablehlo.add %9712, %9713 : tensor<768xf32>
    %9715 = stablehlo.divide %8644, %9714 : tensor<768xf32>
    %9716 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9717 = stablehlo.add %9055, %9716 : tensor<768xf32>
    %9718 = stablehlo.sqrt %9717 : tensor<768xf32>
    %9719 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9720 = stablehlo.add %9718, %9719 : tensor<768xf32>
    %9721 = stablehlo.divide %8646, %9720 : tensor<768xf32>
    %9722 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9723 = stablehlo.add %9057, %9722 : tensor<3072xf32>
    %9724 = stablehlo.sqrt %9723 : tensor<3072xf32>
    %9725 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9726 = stablehlo.add %9724, %9725 : tensor<3072xf32>
    %9727 = stablehlo.divide %8648, %9726 : tensor<3072xf32>
    %9728 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9729 = stablehlo.add %9059, %9728 : tensor<768x3072xf32>
    %9730 = stablehlo.sqrt %9729 : tensor<768x3072xf32>
    %9731 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9732 = stablehlo.add %9730, %9731 : tensor<768x3072xf32>
    %9733 = stablehlo.divide %8650, %9732 : tensor<768x3072xf32>
    %9734 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9735 = stablehlo.add %9061, %9734 : tensor<768xf32>
    %9736 = stablehlo.sqrt %9735 : tensor<768xf32>
    %9737 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9738 = stablehlo.add %9736, %9737 : tensor<768xf32>
    %9739 = stablehlo.divide %8652, %9738 : tensor<768xf32>
    %9740 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9741 = stablehlo.add %9063, %9740 : tensor<768x768xf32>
    %9742 = stablehlo.sqrt %9741 : tensor<768x768xf32>
    %9743 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9744 = stablehlo.add %9742, %9743 : tensor<768x768xf32>
    %9745 = stablehlo.divide %8654, %9744 : tensor<768x768xf32>
    %9746 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9747 = stablehlo.add %9065, %9746 : tensor<768xf32>
    %9748 = stablehlo.sqrt %9747 : tensor<768xf32>
    %9749 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9750 = stablehlo.add %9748, %9749 : tensor<768xf32>
    %9751 = stablehlo.divide %8656, %9750 : tensor<768xf32>
    %9752 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9753 = stablehlo.add %9067, %9752 : tensor<768x768xf32>
    %9754 = stablehlo.sqrt %9753 : tensor<768x768xf32>
    %9755 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9756 = stablehlo.add %9754, %9755 : tensor<768x768xf32>
    %9757 = stablehlo.divide %8658, %9756 : tensor<768x768xf32>
    %9758 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9759 = stablehlo.add %9069, %9758 : tensor<768xf32>
    %9760 = stablehlo.sqrt %9759 : tensor<768xf32>
    %9761 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9762 = stablehlo.add %9760, %9761 : tensor<768xf32>
    %9763 = stablehlo.divide %8660, %9762 : tensor<768xf32>
    %9764 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9765 = stablehlo.add %9071, %9764 : tensor<768x768xf32>
    %9766 = stablehlo.sqrt %9765 : tensor<768x768xf32>
    %9767 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9768 = stablehlo.add %9766, %9767 : tensor<768x768xf32>
    %9769 = stablehlo.divide %8662, %9768 : tensor<768x768xf32>
    %9770 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9771 = stablehlo.add %9073, %9770 : tensor<768xf32>
    %9772 = stablehlo.sqrt %9771 : tensor<768xf32>
    %9773 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9774 = stablehlo.add %9772, %9773 : tensor<768xf32>
    %9775 = stablehlo.divide %8664, %9774 : tensor<768xf32>
    %9776 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9777 = stablehlo.add %9075, %9776 : tensor<768x768xf32>
    %9778 = stablehlo.sqrt %9777 : tensor<768x768xf32>
    %9779 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9780 = stablehlo.add %9778, %9779 : tensor<768x768xf32>
    %9781 = stablehlo.divide %8666, %9780 : tensor<768x768xf32>
    %9782 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9783 = stablehlo.add %9077, %9782 : tensor<768xf32>
    %9784 = stablehlo.sqrt %9783 : tensor<768xf32>
    %9785 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9786 = stablehlo.add %9784, %9785 : tensor<768xf32>
    %9787 = stablehlo.divide %8668, %9786 : tensor<768xf32>
    %9788 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9789 = stablehlo.add %9079, %9788 : tensor<768xf32>
    %9790 = stablehlo.sqrt %9789 : tensor<768xf32>
    %9791 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9792 = stablehlo.add %9790, %9791 : tensor<768xf32>
    %9793 = stablehlo.divide %8670, %9792 : tensor<768xf32>
    %9794 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9795 = stablehlo.add %9081, %9794 : tensor<768xf32>
    %9796 = stablehlo.sqrt %9795 : tensor<768xf32>
    %9797 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9798 = stablehlo.add %9796, %9797 : tensor<768xf32>
    %9799 = stablehlo.divide %8672, %9798 : tensor<768xf32>
    %9800 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9801 = stablehlo.add %9083, %9800 : tensor<3072x768xf32>
    %9802 = stablehlo.sqrt %9801 : tensor<3072x768xf32>
    %9803 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9804 = stablehlo.add %9802, %9803 : tensor<3072x768xf32>
    %9805 = stablehlo.divide %8674, %9804 : tensor<3072x768xf32>
    %9806 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9807 = stablehlo.add %9085, %9806 : tensor<768xf32>
    %9808 = stablehlo.sqrt %9807 : tensor<768xf32>
    %9809 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9810 = stablehlo.add %9808, %9809 : tensor<768xf32>
    %9811 = stablehlo.divide %8676, %9810 : tensor<768xf32>
    %9812 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9813 = stablehlo.add %9087, %9812 : tensor<768xf32>
    %9814 = stablehlo.sqrt %9813 : tensor<768xf32>
    %9815 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9816 = stablehlo.add %9814, %9815 : tensor<768xf32>
    %9817 = stablehlo.divide %8678, %9816 : tensor<768xf32>
    %9818 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9819 = stablehlo.add %9089, %9818 : tensor<3072xf32>
    %9820 = stablehlo.sqrt %9819 : tensor<3072xf32>
    %9821 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9822 = stablehlo.add %9820, %9821 : tensor<3072xf32>
    %9823 = stablehlo.divide %8680, %9822 : tensor<3072xf32>
    %9824 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9825 = stablehlo.add %9091, %9824 : tensor<768x3072xf32>
    %9826 = stablehlo.sqrt %9825 : tensor<768x3072xf32>
    %9827 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9828 = stablehlo.add %9826, %9827 : tensor<768x3072xf32>
    %9829 = stablehlo.divide %8682, %9828 : tensor<768x3072xf32>
    %9830 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9831 = stablehlo.add %9093, %9830 : tensor<768xf32>
    %9832 = stablehlo.sqrt %9831 : tensor<768xf32>
    %9833 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9834 = stablehlo.add %9832, %9833 : tensor<768xf32>
    %9835 = stablehlo.divide %8684, %9834 : tensor<768xf32>
    %9836 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9837 = stablehlo.add %9095, %9836 : tensor<768x768xf32>
    %9838 = stablehlo.sqrt %9837 : tensor<768x768xf32>
    %9839 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9840 = stablehlo.add %9838, %9839 : tensor<768x768xf32>
    %9841 = stablehlo.divide %8686, %9840 : tensor<768x768xf32>
    %9842 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9843 = stablehlo.add %9097, %9842 : tensor<768xf32>
    %9844 = stablehlo.sqrt %9843 : tensor<768xf32>
    %9845 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9846 = stablehlo.add %9844, %9845 : tensor<768xf32>
    %9847 = stablehlo.divide %8688, %9846 : tensor<768xf32>
    %9848 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9849 = stablehlo.add %9099, %9848 : tensor<768x768xf32>
    %9850 = stablehlo.sqrt %9849 : tensor<768x768xf32>
    %9851 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9852 = stablehlo.add %9850, %9851 : tensor<768x768xf32>
    %9853 = stablehlo.divide %8690, %9852 : tensor<768x768xf32>
    %9854 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9855 = stablehlo.add %9101, %9854 : tensor<768xf32>
    %9856 = stablehlo.sqrt %9855 : tensor<768xf32>
    %9857 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9858 = stablehlo.add %9856, %9857 : tensor<768xf32>
    %9859 = stablehlo.divide %8692, %9858 : tensor<768xf32>
    %9860 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9861 = stablehlo.add %9103, %9860 : tensor<768x768xf32>
    %9862 = stablehlo.sqrt %9861 : tensor<768x768xf32>
    %9863 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9864 = stablehlo.add %9862, %9863 : tensor<768x768xf32>
    %9865 = stablehlo.divide %8694, %9864 : tensor<768x768xf32>
    %9866 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9867 = stablehlo.add %9105, %9866 : tensor<768xf32>
    %9868 = stablehlo.sqrt %9867 : tensor<768xf32>
    %9869 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9870 = stablehlo.add %9868, %9869 : tensor<768xf32>
    %9871 = stablehlo.divide %8696, %9870 : tensor<768xf32>
    %9872 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9873 = stablehlo.add %9107, %9872 : tensor<768x768xf32>
    %9874 = stablehlo.sqrt %9873 : tensor<768x768xf32>
    %9875 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9876 = stablehlo.add %9874, %9875 : tensor<768x768xf32>
    %9877 = stablehlo.divide %8698, %9876 : tensor<768x768xf32>
    %9878 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9879 = stablehlo.add %9109, %9878 : tensor<768xf32>
    %9880 = stablehlo.sqrt %9879 : tensor<768xf32>
    %9881 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9882 = stablehlo.add %9880, %9881 : tensor<768xf32>
    %9883 = stablehlo.divide %8700, %9882 : tensor<768xf32>
    %9884 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9885 = stablehlo.add %9111, %9884 : tensor<768xf32>
    %9886 = stablehlo.sqrt %9885 : tensor<768xf32>
    %9887 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9888 = stablehlo.add %9886, %9887 : tensor<768xf32>
    %9889 = stablehlo.divide %8702, %9888 : tensor<768xf32>
    %9890 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9891 = stablehlo.add %9113, %9890 : tensor<768xf32>
    %9892 = stablehlo.sqrt %9891 : tensor<768xf32>
    %9893 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9894 = stablehlo.add %9892, %9893 : tensor<768xf32>
    %9895 = stablehlo.divide %8704, %9894 : tensor<768xf32>
    %9896 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9897 = stablehlo.add %9115, %9896 : tensor<3072x768xf32>
    %9898 = stablehlo.sqrt %9897 : tensor<3072x768xf32>
    %9899 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9900 = stablehlo.add %9898, %9899 : tensor<3072x768xf32>
    %9901 = stablehlo.divide %8706, %9900 : tensor<3072x768xf32>
    %9902 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9903 = stablehlo.add %9117, %9902 : tensor<768xf32>
    %9904 = stablehlo.sqrt %9903 : tensor<768xf32>
    %9905 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9906 = stablehlo.add %9904, %9905 : tensor<768xf32>
    %9907 = stablehlo.divide %8708, %9906 : tensor<768xf32>
    %9908 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9909 = stablehlo.add %9119, %9908 : tensor<768xf32>
    %9910 = stablehlo.sqrt %9909 : tensor<768xf32>
    %9911 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9912 = stablehlo.add %9910, %9911 : tensor<768xf32>
    %9913 = stablehlo.divide %8710, %9912 : tensor<768xf32>
    %9914 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9915 = stablehlo.add %9121, %9914 : tensor<3072xf32>
    %9916 = stablehlo.sqrt %9915 : tensor<3072xf32>
    %9917 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9918 = stablehlo.add %9916, %9917 : tensor<3072xf32>
    %9919 = stablehlo.divide %8712, %9918 : tensor<3072xf32>
    %9920 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9921 = stablehlo.add %9123, %9920 : tensor<768x3072xf32>
    %9922 = stablehlo.sqrt %9921 : tensor<768x3072xf32>
    %9923 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9924 = stablehlo.add %9922, %9923 : tensor<768x3072xf32>
    %9925 = stablehlo.divide %8714, %9924 : tensor<768x3072xf32>
    %9926 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9927 = stablehlo.add %9125, %9926 : tensor<768xf32>
    %9928 = stablehlo.sqrt %9927 : tensor<768xf32>
    %9929 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9930 = stablehlo.add %9928, %9929 : tensor<768xf32>
    %9931 = stablehlo.divide %8716, %9930 : tensor<768xf32>
    %9932 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9933 = stablehlo.add %9127, %9932 : tensor<768x768xf32>
    %9934 = stablehlo.sqrt %9933 : tensor<768x768xf32>
    %9935 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9936 = stablehlo.add %9934, %9935 : tensor<768x768xf32>
    %9937 = stablehlo.divide %8718, %9936 : tensor<768x768xf32>
    %9938 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9939 = stablehlo.add %9129, %9938 : tensor<768xf32>
    %9940 = stablehlo.sqrt %9939 : tensor<768xf32>
    %9941 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9942 = stablehlo.add %9940, %9941 : tensor<768xf32>
    %9943 = stablehlo.divide %8720, %9942 : tensor<768xf32>
    %9944 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9945 = stablehlo.add %9131, %9944 : tensor<768x768xf32>
    %9946 = stablehlo.sqrt %9945 : tensor<768x768xf32>
    %9947 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9948 = stablehlo.add %9946, %9947 : tensor<768x768xf32>
    %9949 = stablehlo.divide %8722, %9948 : tensor<768x768xf32>
    %9950 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9951 = stablehlo.add %9133, %9950 : tensor<768xf32>
    %9952 = stablehlo.sqrt %9951 : tensor<768xf32>
    %9953 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9954 = stablehlo.add %9952, %9953 : tensor<768xf32>
    %9955 = stablehlo.divide %8724, %9954 : tensor<768xf32>
    %9956 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9957 = stablehlo.add %9135, %9956 : tensor<768x768xf32>
    %9958 = stablehlo.sqrt %9957 : tensor<768x768xf32>
    %9959 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9960 = stablehlo.add %9958, %9959 : tensor<768x768xf32>
    %9961 = stablehlo.divide %8726, %9960 : tensor<768x768xf32>
    %9962 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9963 = stablehlo.add %9137, %9962 : tensor<768xf32>
    %9964 = stablehlo.sqrt %9963 : tensor<768xf32>
    %9965 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9966 = stablehlo.add %9964, %9965 : tensor<768xf32>
    %9967 = stablehlo.divide %8728, %9966 : tensor<768xf32>
    %9968 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9969 = stablehlo.add %9139, %9968 : tensor<768x768xf32>
    %9970 = stablehlo.sqrt %9969 : tensor<768x768xf32>
    %9971 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9972 = stablehlo.add %9970, %9971 : tensor<768x768xf32>
    %9973 = stablehlo.divide %8730, %9972 : tensor<768x768xf32>
    %9974 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9975 = stablehlo.add %9141, %9974 : tensor<768xf32>
    %9976 = stablehlo.sqrt %9975 : tensor<768xf32>
    %9977 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9978 = stablehlo.add %9976, %9977 : tensor<768xf32>
    %9979 = stablehlo.divide %8732, %9978 : tensor<768xf32>
    %9980 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9981 = stablehlo.add %9143, %9980 : tensor<768xf32>
    %9982 = stablehlo.sqrt %9981 : tensor<768xf32>
    %9983 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9984 = stablehlo.add %9982, %9983 : tensor<768xf32>
    %9985 = stablehlo.divide %8734, %9984 : tensor<768xf32>
    %9986 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9987 = stablehlo.add %9145, %9986 : tensor<768xf32>
    %9988 = stablehlo.sqrt %9987 : tensor<768xf32>
    %9989 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9990 = stablehlo.add %9988, %9989 : tensor<768xf32>
    %9991 = stablehlo.divide %8736, %9990 : tensor<768xf32>
    %9992 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9993 = stablehlo.add %9147, %9992 : tensor<3072x768xf32>
    %9994 = stablehlo.sqrt %9993 : tensor<3072x768xf32>
    %9995 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9996 = stablehlo.add %9994, %9995 : tensor<3072x768xf32>
    %9997 = stablehlo.divide %8738, %9996 : tensor<3072x768xf32>
    %9998 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9999 = stablehlo.add %9149, %9998 : tensor<768xf32>
    %10000 = stablehlo.sqrt %9999 : tensor<768xf32>
    %10001 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10002 = stablehlo.add %10000, %10001 : tensor<768xf32>
    %10003 = stablehlo.divide %8740, %10002 : tensor<768xf32>
    %10004 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10005 = stablehlo.add %9151, %10004 : tensor<768xf32>
    %10006 = stablehlo.sqrt %10005 : tensor<768xf32>
    %10007 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10008 = stablehlo.add %10006, %10007 : tensor<768xf32>
    %10009 = stablehlo.divide %8742, %10008 : tensor<768xf32>
    %10010 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10011 = stablehlo.add %9153, %10010 : tensor<3072xf32>
    %10012 = stablehlo.sqrt %10011 : tensor<3072xf32>
    %10013 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10014 = stablehlo.add %10012, %10013 : tensor<3072xf32>
    %10015 = stablehlo.divide %8744, %10014 : tensor<3072xf32>
    %10016 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10017 = stablehlo.add %9155, %10016 : tensor<768x3072xf32>
    %10018 = stablehlo.sqrt %10017 : tensor<768x3072xf32>
    %10019 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10020 = stablehlo.add %10018, %10019 : tensor<768x3072xf32>
    %10021 = stablehlo.divide %8746, %10020 : tensor<768x3072xf32>
    %10022 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10023 = stablehlo.add %9157, %10022 : tensor<768xf32>
    %10024 = stablehlo.sqrt %10023 : tensor<768xf32>
    %10025 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10026 = stablehlo.add %10024, %10025 : tensor<768xf32>
    %10027 = stablehlo.divide %8748, %10026 : tensor<768xf32>
    %10028 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10029 = stablehlo.add %9159, %10028 : tensor<768x768xf32>
    %10030 = stablehlo.sqrt %10029 : tensor<768x768xf32>
    %10031 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10032 = stablehlo.add %10030, %10031 : tensor<768x768xf32>
    %10033 = stablehlo.divide %8750, %10032 : tensor<768x768xf32>
    %10034 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10035 = stablehlo.add %9161, %10034 : tensor<768xf32>
    %10036 = stablehlo.sqrt %10035 : tensor<768xf32>
    %10037 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10038 = stablehlo.add %10036, %10037 : tensor<768xf32>
    %10039 = stablehlo.divide %8752, %10038 : tensor<768xf32>
    %10040 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10041 = stablehlo.add %9163, %10040 : tensor<768x768xf32>
    %10042 = stablehlo.sqrt %10041 : tensor<768x768xf32>
    %10043 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10044 = stablehlo.add %10042, %10043 : tensor<768x768xf32>
    %10045 = stablehlo.divide %8754, %10044 : tensor<768x768xf32>
    %10046 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10047 = stablehlo.add %9165, %10046 : tensor<768xf32>
    %10048 = stablehlo.sqrt %10047 : tensor<768xf32>
    %10049 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10050 = stablehlo.add %10048, %10049 : tensor<768xf32>
    %10051 = stablehlo.divide %8756, %10050 : tensor<768xf32>
    %10052 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10053 = stablehlo.add %9167, %10052 : tensor<768x768xf32>
    %10054 = stablehlo.sqrt %10053 : tensor<768x768xf32>
    %10055 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10056 = stablehlo.add %10054, %10055 : tensor<768x768xf32>
    %10057 = stablehlo.divide %8758, %10056 : tensor<768x768xf32>
    %10058 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10059 = stablehlo.add %9169, %10058 : tensor<768xf32>
    %10060 = stablehlo.sqrt %10059 : tensor<768xf32>
    %10061 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10062 = stablehlo.add %10060, %10061 : tensor<768xf32>
    %10063 = stablehlo.divide %8760, %10062 : tensor<768xf32>
    %10064 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10065 = stablehlo.add %9171, %10064 : tensor<768x768xf32>
    %10066 = stablehlo.sqrt %10065 : tensor<768x768xf32>
    %10067 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10068 = stablehlo.add %10066, %10067 : tensor<768x768xf32>
    %10069 = stablehlo.divide %8762, %10068 : tensor<768x768xf32>
    %10070 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10071 = stablehlo.add %9173, %10070 : tensor<768xf32>
    %10072 = stablehlo.sqrt %10071 : tensor<768xf32>
    %10073 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10074 = stablehlo.add %10072, %10073 : tensor<768xf32>
    %10075 = stablehlo.divide %8764, %10074 : tensor<768xf32>
    %10076 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10077 = stablehlo.add %9175, %10076 : tensor<768xf32>
    %10078 = stablehlo.sqrt %10077 : tensor<768xf32>
    %10079 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10080 = stablehlo.add %10078, %10079 : tensor<768xf32>
    %10081 = stablehlo.divide %8766, %10080 : tensor<768xf32>
    %10082 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10083 = stablehlo.add %9177, %10082 : tensor<768xf32>
    %10084 = stablehlo.sqrt %10083 : tensor<768xf32>
    %10085 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10086 = stablehlo.add %10084, %10085 : tensor<768xf32>
    %10087 = stablehlo.divide %8768, %10086 : tensor<768xf32>
    %10088 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10089 = stablehlo.add %9179, %10088 : tensor<3072x768xf32>
    %10090 = stablehlo.sqrt %10089 : tensor<3072x768xf32>
    %10091 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10092 = stablehlo.add %10090, %10091 : tensor<3072x768xf32>
    %10093 = stablehlo.divide %8770, %10092 : tensor<3072x768xf32>
    %10094 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10095 = stablehlo.add %9181, %10094 : tensor<768xf32>
    %10096 = stablehlo.sqrt %10095 : tensor<768xf32>
    %10097 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10098 = stablehlo.add %10096, %10097 : tensor<768xf32>
    %10099 = stablehlo.divide %8772, %10098 : tensor<768xf32>
    %10100 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10101 = stablehlo.add %9183, %10100 : tensor<768xf32>
    %10102 = stablehlo.sqrt %10101 : tensor<768xf32>
    %10103 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10104 = stablehlo.add %10102, %10103 : tensor<768xf32>
    %10105 = stablehlo.divide %8774, %10104 : tensor<768xf32>
    %10106 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10107 = stablehlo.add %9185, %10106 : tensor<3072xf32>
    %10108 = stablehlo.sqrt %10107 : tensor<3072xf32>
    %10109 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10110 = stablehlo.add %10108, %10109 : tensor<3072xf32>
    %10111 = stablehlo.divide %8776, %10110 : tensor<3072xf32>
    %10112 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10113 = stablehlo.add %9187, %10112 : tensor<768x3072xf32>
    %10114 = stablehlo.sqrt %10113 : tensor<768x3072xf32>
    %10115 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10116 = stablehlo.add %10114, %10115 : tensor<768x3072xf32>
    %10117 = stablehlo.divide %8778, %10116 : tensor<768x3072xf32>
    %10118 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10119 = stablehlo.add %9189, %10118 : tensor<768xf32>
    %10120 = stablehlo.sqrt %10119 : tensor<768xf32>
    %10121 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10122 = stablehlo.add %10120, %10121 : tensor<768xf32>
    %10123 = stablehlo.divide %8780, %10122 : tensor<768xf32>
    %10124 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10125 = stablehlo.add %9191, %10124 : tensor<768x768xf32>
    %10126 = stablehlo.sqrt %10125 : tensor<768x768xf32>
    %10127 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10128 = stablehlo.add %10126, %10127 : tensor<768x768xf32>
    %10129 = stablehlo.divide %8782, %10128 : tensor<768x768xf32>
    %10130 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10131 = stablehlo.add %9193, %10130 : tensor<768xf32>
    %10132 = stablehlo.sqrt %10131 : tensor<768xf32>
    %10133 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10134 = stablehlo.add %10132, %10133 : tensor<768xf32>
    %10135 = stablehlo.divide %8784, %10134 : tensor<768xf32>
    %10136 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10137 = stablehlo.add %9195, %10136 : tensor<768x768xf32>
    %10138 = stablehlo.sqrt %10137 : tensor<768x768xf32>
    %10139 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10140 = stablehlo.add %10138, %10139 : tensor<768x768xf32>
    %10141 = stablehlo.divide %8786, %10140 : tensor<768x768xf32>
    %10142 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10143 = stablehlo.add %9197, %10142 : tensor<768xf32>
    %10144 = stablehlo.sqrt %10143 : tensor<768xf32>
    %10145 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10146 = stablehlo.add %10144, %10145 : tensor<768xf32>
    %10147 = stablehlo.divide %8788, %10146 : tensor<768xf32>
    %10148 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10149 = stablehlo.add %9199, %10148 : tensor<768x768xf32>
    %10150 = stablehlo.sqrt %10149 : tensor<768x768xf32>
    %10151 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10152 = stablehlo.add %10150, %10151 : tensor<768x768xf32>
    %10153 = stablehlo.divide %8790, %10152 : tensor<768x768xf32>
    %10154 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10155 = stablehlo.add %9201, %10154 : tensor<768xf32>
    %10156 = stablehlo.sqrt %10155 : tensor<768xf32>
    %10157 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10158 = stablehlo.add %10156, %10157 : tensor<768xf32>
    %10159 = stablehlo.divide %8792, %10158 : tensor<768xf32>
    %10160 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10161 = stablehlo.add %9203, %10160 : tensor<768x768xf32>
    %10162 = stablehlo.sqrt %10161 : tensor<768x768xf32>
    %10163 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10164 = stablehlo.add %10162, %10163 : tensor<768x768xf32>
    %10165 = stablehlo.divide %8794, %10164 : tensor<768x768xf32>
    %10166 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10167 = stablehlo.add %9205, %10166 : tensor<768xf32>
    %10168 = stablehlo.sqrt %10167 : tensor<768xf32>
    %10169 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10170 = stablehlo.add %10168, %10169 : tensor<768xf32>
    %10171 = stablehlo.divide %8796, %10170 : tensor<768xf32>
    %10172 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10173 = stablehlo.add %9207, %10172 : tensor<768xf32>
    %10174 = stablehlo.sqrt %10173 : tensor<768xf32>
    %10175 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10176 = stablehlo.add %10174, %10175 : tensor<768xf32>
    %10177 = stablehlo.divide %8798, %10176 : tensor<768xf32>
    %10178 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10179 = stablehlo.add %9209, %10178 : tensor<768xf32>
    %10180 = stablehlo.sqrt %10179 : tensor<768xf32>
    %10181 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10182 = stablehlo.add %10180, %10181 : tensor<768xf32>
    %10183 = stablehlo.divide %8800, %10182 : tensor<768xf32>
    %10184 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10185 = stablehlo.add %9211, %10184 : tensor<3072x768xf32>
    %10186 = stablehlo.sqrt %10185 : tensor<3072x768xf32>
    %10187 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10188 = stablehlo.add %10186, %10187 : tensor<3072x768xf32>
    %10189 = stablehlo.divide %8802, %10188 : tensor<3072x768xf32>
    %10190 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10191 = stablehlo.add %9213, %10190 : tensor<768xf32>
    %10192 = stablehlo.sqrt %10191 : tensor<768xf32>
    %10193 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10194 = stablehlo.add %10192, %10193 : tensor<768xf32>
    %10195 = stablehlo.divide %8804, %10194 : tensor<768xf32>
    %10196 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10197 = stablehlo.add %9215, %10196 : tensor<768xf32>
    %10198 = stablehlo.sqrt %10197 : tensor<768xf32>
    %10199 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10200 = stablehlo.add %10198, %10199 : tensor<768xf32>
    %10201 = stablehlo.divide %8806, %10200 : tensor<768xf32>
    %10202 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10203 = stablehlo.add %9217, %10202 : tensor<3072xf32>
    %10204 = stablehlo.sqrt %10203 : tensor<3072xf32>
    %10205 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10206 = stablehlo.add %10204, %10205 : tensor<3072xf32>
    %10207 = stablehlo.divide %8808, %10206 : tensor<3072xf32>
    %10208 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10209 = stablehlo.add %9219, %10208 : tensor<768x3072xf32>
    %10210 = stablehlo.sqrt %10209 : tensor<768x3072xf32>
    %10211 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10212 = stablehlo.add %10210, %10211 : tensor<768x3072xf32>
    %10213 = stablehlo.divide %8810, %10212 : tensor<768x3072xf32>
    %10214 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10215 = stablehlo.add %9221, %10214 : tensor<768xf32>
    %10216 = stablehlo.sqrt %10215 : tensor<768xf32>
    %10217 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10218 = stablehlo.add %10216, %10217 : tensor<768xf32>
    %10219 = stablehlo.divide %8812, %10218 : tensor<768xf32>
    %10220 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10221 = stablehlo.add %9223, %10220 : tensor<768x768xf32>
    %10222 = stablehlo.sqrt %10221 : tensor<768x768xf32>
    %10223 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10224 = stablehlo.add %10222, %10223 : tensor<768x768xf32>
    %10225 = stablehlo.divide %8814, %10224 : tensor<768x768xf32>
    %10226 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10227 = stablehlo.add %9225, %10226 : tensor<768xf32>
    %10228 = stablehlo.sqrt %10227 : tensor<768xf32>
    %10229 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10230 = stablehlo.add %10228, %10229 : tensor<768xf32>
    %10231 = stablehlo.divide %8816, %10230 : tensor<768xf32>
    %10232 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10233 = stablehlo.add %9227, %10232 : tensor<768x768xf32>
    %10234 = stablehlo.sqrt %10233 : tensor<768x768xf32>
    %10235 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10236 = stablehlo.add %10234, %10235 : tensor<768x768xf32>
    %10237 = stablehlo.divide %8818, %10236 : tensor<768x768xf32>
    %10238 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10239 = stablehlo.add %9229, %10238 : tensor<768xf32>
    %10240 = stablehlo.sqrt %10239 : tensor<768xf32>
    %10241 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10242 = stablehlo.add %10240, %10241 : tensor<768xf32>
    %10243 = stablehlo.divide %8820, %10242 : tensor<768xf32>
    %10244 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10245 = stablehlo.add %9231, %10244 : tensor<768x768xf32>
    %10246 = stablehlo.sqrt %10245 : tensor<768x768xf32>
    %10247 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10248 = stablehlo.add %10246, %10247 : tensor<768x768xf32>
    %10249 = stablehlo.divide %8822, %10248 : tensor<768x768xf32>
    %10250 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10251 = stablehlo.add %9233, %10250 : tensor<768xf32>
    %10252 = stablehlo.sqrt %10251 : tensor<768xf32>
    %10253 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10254 = stablehlo.add %10252, %10253 : tensor<768xf32>
    %10255 = stablehlo.divide %8824, %10254 : tensor<768xf32>
    %10256 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10257 = stablehlo.add %9235, %10256 : tensor<768x768xf32>
    %10258 = stablehlo.sqrt %10257 : tensor<768x768xf32>
    %10259 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10260 = stablehlo.add %10258, %10259 : tensor<768x768xf32>
    %10261 = stablehlo.divide %8826, %10260 : tensor<768x768xf32>
    %10262 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10263 = stablehlo.add %9237, %10262 : tensor<768xf32>
    %10264 = stablehlo.sqrt %10263 : tensor<768xf32>
    %10265 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10266 = stablehlo.add %10264, %10265 : tensor<768xf32>
    %10267 = stablehlo.divide %8828, %10266 : tensor<768xf32>
    %10268 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10269 = stablehlo.add %9239, %10268 : tensor<768xf32>
    %10270 = stablehlo.sqrt %10269 : tensor<768xf32>
    %10271 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10272 = stablehlo.add %10270, %10271 : tensor<768xf32>
    %10273 = stablehlo.divide %8830, %10272 : tensor<768xf32>
    %10274 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10275 = stablehlo.add %9241, %10274 : tensor<768xf32>
    %10276 = stablehlo.sqrt %10275 : tensor<768xf32>
    %10277 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10278 = stablehlo.add %10276, %10277 : tensor<768xf32>
    %10279 = stablehlo.divide %8832, %10278 : tensor<768xf32>
    %10280 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10281 = stablehlo.add %9243, %10280 : tensor<3072x768xf32>
    %10282 = stablehlo.sqrt %10281 : tensor<3072x768xf32>
    %10283 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10284 = stablehlo.add %10282, %10283 : tensor<3072x768xf32>
    %10285 = stablehlo.divide %8834, %10284 : tensor<3072x768xf32>
    %10286 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10287 = stablehlo.add %9245, %10286 : tensor<768xf32>
    %10288 = stablehlo.sqrt %10287 : tensor<768xf32>
    %10289 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10290 = stablehlo.add %10288, %10289 : tensor<768xf32>
    %10291 = stablehlo.divide %8836, %10290 : tensor<768xf32>
    %10292 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10293 = stablehlo.add %9247, %10292 : tensor<768xf32>
    %10294 = stablehlo.sqrt %10293 : tensor<768xf32>
    %10295 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10296 = stablehlo.add %10294, %10295 : tensor<768xf32>
    %10297 = stablehlo.divide %8838, %10296 : tensor<768xf32>
    %10298 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10299 = stablehlo.add %9249, %10298 : tensor<3072xf32>
    %10300 = stablehlo.sqrt %10299 : tensor<3072xf32>
    %10301 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10302 = stablehlo.add %10300, %10301 : tensor<3072xf32>
    %10303 = stablehlo.divide %8840, %10302 : tensor<3072xf32>
    %10304 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10305 = stablehlo.add %9251, %10304 : tensor<768x3072xf32>
    %10306 = stablehlo.sqrt %10305 : tensor<768x3072xf32>
    %10307 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10308 = stablehlo.add %10306, %10307 : tensor<768x3072xf32>
    %10309 = stablehlo.divide %8842, %10308 : tensor<768x3072xf32>
    %10310 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10311 = stablehlo.add %9253, %10310 : tensor<768xf32>
    %10312 = stablehlo.sqrt %10311 : tensor<768xf32>
    %10313 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10314 = stablehlo.add %10312, %10313 : tensor<768xf32>
    %10315 = stablehlo.divide %8844, %10314 : tensor<768xf32>
    %10316 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10317 = stablehlo.add %9255, %10316 : tensor<768x768xf32>
    %10318 = stablehlo.sqrt %10317 : tensor<768x768xf32>
    %10319 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10320 = stablehlo.add %10318, %10319 : tensor<768x768xf32>
    %10321 = stablehlo.divide %8846, %10320 : tensor<768x768xf32>
    %10322 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10323 = stablehlo.add %9257, %10322 : tensor<768xf32>
    %10324 = stablehlo.sqrt %10323 : tensor<768xf32>
    %10325 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10326 = stablehlo.add %10324, %10325 : tensor<768xf32>
    %10327 = stablehlo.divide %8848, %10326 : tensor<768xf32>
    %10328 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10329 = stablehlo.add %9259, %10328 : tensor<768x768xf32>
    %10330 = stablehlo.sqrt %10329 : tensor<768x768xf32>
    %10331 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10332 = stablehlo.add %10330, %10331 : tensor<768x768xf32>
    %10333 = stablehlo.divide %8850, %10332 : tensor<768x768xf32>
    %10334 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10335 = stablehlo.add %9261, %10334 : tensor<768xf32>
    %10336 = stablehlo.sqrt %10335 : tensor<768xf32>
    %10337 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10338 = stablehlo.add %10336, %10337 : tensor<768xf32>
    %10339 = stablehlo.divide %8852, %10338 : tensor<768xf32>
    %10340 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10341 = stablehlo.add %9263, %10340 : tensor<768x768xf32>
    %10342 = stablehlo.sqrt %10341 : tensor<768x768xf32>
    %10343 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10344 = stablehlo.add %10342, %10343 : tensor<768x768xf32>
    %10345 = stablehlo.divide %8854, %10344 : tensor<768x768xf32>
    %10346 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10347 = stablehlo.add %9265, %10346 : tensor<768xf32>
    %10348 = stablehlo.sqrt %10347 : tensor<768xf32>
    %10349 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10350 = stablehlo.add %10348, %10349 : tensor<768xf32>
    %10351 = stablehlo.divide %8856, %10350 : tensor<768xf32>
    %10352 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10353 = stablehlo.add %9267, %10352 : tensor<768x768xf32>
    %10354 = stablehlo.sqrt %10353 : tensor<768x768xf32>
    %10355 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10356 = stablehlo.add %10354, %10355 : tensor<768x768xf32>
    %10357 = stablehlo.divide %8858, %10356 : tensor<768x768xf32>
    %10358 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10359 = stablehlo.add %9269, %10358 : tensor<768xf32>
    %10360 = stablehlo.sqrt %10359 : tensor<768xf32>
    %10361 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10362 = stablehlo.add %10360, %10361 : tensor<768xf32>
    %10363 = stablehlo.divide %8860, %10362 : tensor<768xf32>
    %10364 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10365 = stablehlo.add %9271, %10364 : tensor<768xf32>
    %10366 = stablehlo.sqrt %10365 : tensor<768xf32>
    %10367 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10368 = stablehlo.add %10366, %10367 : tensor<768xf32>
    %10369 = stablehlo.divide %8862, %10368 : tensor<768xf32>
    %10370 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10371 = stablehlo.add %9273, %10370 : tensor<768xf32>
    %10372 = stablehlo.sqrt %10371 : tensor<768xf32>
    %10373 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10374 = stablehlo.add %10372, %10373 : tensor<768xf32>
    %10375 = stablehlo.divide %8864, %10374 : tensor<768xf32>
    %10376 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10377 = stablehlo.add %9275, %10376 : tensor<3072x768xf32>
    %10378 = stablehlo.sqrt %10377 : tensor<3072x768xf32>
    %10379 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10380 = stablehlo.add %10378, %10379 : tensor<3072x768xf32>
    %10381 = stablehlo.divide %8866, %10380 : tensor<3072x768xf32>
    %10382 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10383 = stablehlo.add %9277, %10382 : tensor<768xf32>
    %10384 = stablehlo.sqrt %10383 : tensor<768xf32>
    %10385 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10386 = stablehlo.add %10384, %10385 : tensor<768xf32>
    %10387 = stablehlo.divide %8868, %10386 : tensor<768xf32>
    %10388 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10389 = stablehlo.add %9279, %10388 : tensor<768xf32>
    %10390 = stablehlo.sqrt %10389 : tensor<768xf32>
    %10391 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10392 = stablehlo.add %10390, %10391 : tensor<768xf32>
    %10393 = stablehlo.divide %8870, %10392 : tensor<768xf32>
    %10394 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10395 = stablehlo.add %9281, %10394 : tensor<3072xf32>
    %10396 = stablehlo.sqrt %10395 : tensor<3072xf32>
    %10397 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10398 = stablehlo.add %10396, %10397 : tensor<3072xf32>
    %10399 = stablehlo.divide %8872, %10398 : tensor<3072xf32>
    %10400 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10401 = stablehlo.add %9283, %10400 : tensor<768x3072xf32>
    %10402 = stablehlo.sqrt %10401 : tensor<768x3072xf32>
    %10403 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10404 = stablehlo.add %10402, %10403 : tensor<768x3072xf32>
    %10405 = stablehlo.divide %8874, %10404 : tensor<768x3072xf32>
    %10406 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10407 = stablehlo.add %9285, %10406 : tensor<768xf32>
    %10408 = stablehlo.sqrt %10407 : tensor<768xf32>
    %10409 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10410 = stablehlo.add %10408, %10409 : tensor<768xf32>
    %10411 = stablehlo.divide %8876, %10410 : tensor<768xf32>
    %10412 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10413 = stablehlo.add %9287, %10412 : tensor<768x768xf32>
    %10414 = stablehlo.sqrt %10413 : tensor<768x768xf32>
    %10415 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10416 = stablehlo.add %10414, %10415 : tensor<768x768xf32>
    %10417 = stablehlo.divide %8878, %10416 : tensor<768x768xf32>
    %10418 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10419 = stablehlo.add %9289, %10418 : tensor<768xf32>
    %10420 = stablehlo.sqrt %10419 : tensor<768xf32>
    %10421 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10422 = stablehlo.add %10420, %10421 : tensor<768xf32>
    %10423 = stablehlo.divide %8880, %10422 : tensor<768xf32>
    %10424 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10425 = stablehlo.add %9291, %10424 : tensor<768x768xf32>
    %10426 = stablehlo.sqrt %10425 : tensor<768x768xf32>
    %10427 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10428 = stablehlo.add %10426, %10427 : tensor<768x768xf32>
    %10429 = stablehlo.divide %8882, %10428 : tensor<768x768xf32>
    %10430 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10431 = stablehlo.add %9293, %10430 : tensor<768xf32>
    %10432 = stablehlo.sqrt %10431 : tensor<768xf32>
    %10433 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10434 = stablehlo.add %10432, %10433 : tensor<768xf32>
    %10435 = stablehlo.divide %8884, %10434 : tensor<768xf32>
    %10436 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10437 = stablehlo.add %9295, %10436 : tensor<768x768xf32>
    %10438 = stablehlo.sqrt %10437 : tensor<768x768xf32>
    %10439 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10440 = stablehlo.add %10438, %10439 : tensor<768x768xf32>
    %10441 = stablehlo.divide %8886, %10440 : tensor<768x768xf32>
    %10442 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10443 = stablehlo.add %9297, %10442 : tensor<768xf32>
    %10444 = stablehlo.sqrt %10443 : tensor<768xf32>
    %10445 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10446 = stablehlo.add %10444, %10445 : tensor<768xf32>
    %10447 = stablehlo.divide %8888, %10446 : tensor<768xf32>
    %10448 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10449 = stablehlo.add %9299, %10448 : tensor<768x768xf32>
    %10450 = stablehlo.sqrt %10449 : tensor<768x768xf32>
    %10451 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10452 = stablehlo.add %10450, %10451 : tensor<768x768xf32>
    %10453 = stablehlo.divide %8890, %10452 : tensor<768x768xf32>
    %10454 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10455 = stablehlo.add %9301, %10454 : tensor<768xf32>
    %10456 = stablehlo.sqrt %10455 : tensor<768xf32>
    %10457 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10458 = stablehlo.add %10456, %10457 : tensor<768xf32>
    %10459 = stablehlo.divide %8892, %10458 : tensor<768xf32>
    %10460 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10461 = stablehlo.add %9303, %10460 : tensor<768xf32>
    %10462 = stablehlo.sqrt %10461 : tensor<768xf32>
    %10463 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10464 = stablehlo.add %10462, %10463 : tensor<768xf32>
    %10465 = stablehlo.divide %8894, %10464 : tensor<768xf32>
    %10466 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10467 = stablehlo.add %9305, %10466 : tensor<768xf32>
    %10468 = stablehlo.sqrt %10467 : tensor<768xf32>
    %10469 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10470 = stablehlo.add %10468, %10469 : tensor<768xf32>
    %10471 = stablehlo.divide %8896, %10470 : tensor<768xf32>
    %10472 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10473 = stablehlo.add %9307, %10472 : tensor<3072x768xf32>
    %10474 = stablehlo.sqrt %10473 : tensor<3072x768xf32>
    %10475 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10476 = stablehlo.add %10474, %10475 : tensor<3072x768xf32>
    %10477 = stablehlo.divide %8898, %10476 : tensor<3072x768xf32>
    %10478 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10479 = stablehlo.add %9309, %10478 : tensor<768xf32>
    %10480 = stablehlo.sqrt %10479 : tensor<768xf32>
    %10481 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10482 = stablehlo.add %10480, %10481 : tensor<768xf32>
    %10483 = stablehlo.divide %8900, %10482 : tensor<768xf32>
    %10484 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10485 = stablehlo.add %9311, %10484 : tensor<768xf32>
    %10486 = stablehlo.sqrt %10485 : tensor<768xf32>
    %10487 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10488 = stablehlo.add %10486, %10487 : tensor<768xf32>
    %10489 = stablehlo.divide %8902, %10488 : tensor<768xf32>
    %10490 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10491 = stablehlo.add %9313, %10490 : tensor<3072xf32>
    %10492 = stablehlo.sqrt %10491 : tensor<3072xf32>
    %10493 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10494 = stablehlo.add %10492, %10493 : tensor<3072xf32>
    %10495 = stablehlo.divide %8904, %10494 : tensor<3072xf32>
    %10496 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10497 = stablehlo.add %9315, %10496 : tensor<768x3072xf32>
    %10498 = stablehlo.sqrt %10497 : tensor<768x3072xf32>
    %10499 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10500 = stablehlo.add %10498, %10499 : tensor<768x3072xf32>
    %10501 = stablehlo.divide %8906, %10500 : tensor<768x3072xf32>
    %10502 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10503 = stablehlo.add %9317, %10502 : tensor<768xf32>
    %10504 = stablehlo.sqrt %10503 : tensor<768xf32>
    %10505 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10506 = stablehlo.add %10504, %10505 : tensor<768xf32>
    %10507 = stablehlo.divide %8908, %10506 : tensor<768xf32>
    %10508 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10509 = stablehlo.add %9319, %10508 : tensor<768xf32>
    %10510 = stablehlo.sqrt %10509 : tensor<768xf32>
    %10511 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10512 = stablehlo.add %10510, %10511 : tensor<768xf32>
    %10513 = stablehlo.divide %8910, %10512 : tensor<768xf32>
    %10514 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10515 = stablehlo.add %9321, %10514 : tensor<30522xf32>
    %10516 = stablehlo.sqrt %10515 : tensor<30522xf32>
    %10517 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10518 = stablehlo.add %10516, %10517 : tensor<30522xf32>
    %10519 = stablehlo.divide %8912, %10518 : tensor<30522xf32>
    %10520 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10521 = stablehlo.add %9323, %10520 : tensor<768xf32>
    %10522 = stablehlo.sqrt %10521 : tensor<768xf32>
    %10523 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10524 = stablehlo.add %10522, %10523 : tensor<768xf32>
    %10525 = stablehlo.divide %8914, %10524 : tensor<768xf32>
    %10526 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10527 = stablehlo.add %9325, %10526 : tensor<768x768xf32>
    %10528 = stablehlo.sqrt %10527 : tensor<768x768xf32>
    %10529 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10530 = stablehlo.add %10528, %10529 : tensor<768x768xf32>
    %10531 = stablehlo.divide %8916, %10530 : tensor<768x768xf32>
    %10532 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10533 = stablehlo.add %9327, %10532 : tensor<30522x768xf32>
    %10534 = stablehlo.sqrt %10533 : tensor<30522x768xf32>
    %10535 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10536 = stablehlo.add %10534, %10535 : tensor<30522x768xf32>
    %10537 = stablehlo.divide %8918, %10536 : tensor<30522x768xf32>
    %10538 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10539 = stablehlo.add %9329, %10538 : tensor<768xf32>
    %10540 = stablehlo.sqrt %10539 : tensor<768xf32>
    %10541 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10542 = stablehlo.add %10540, %10541 : tensor<768xf32>
    %10543 = stablehlo.divide %8920, %10542 : tensor<768xf32>
    %10544 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10545 = stablehlo.add %9331, %10544 : tensor<768xf32>
    %10546 = stablehlo.sqrt %10545 : tensor<768xf32>
    %10547 = stablehlo.broadcast_in_dim %cst_760, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10548 = stablehlo.add %10546, %10547 : tensor<768xf32>
    %10549 = stablehlo.divide %8922, %10548 : tensor<768xf32>
    %cst_761 = stablehlo.constant dense<0.00999999977> : tensor<f32>
    %10550 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10551 = stablehlo.multiply %10550, %arg0 : tensor<512x768xf32>
    %10552 = stablehlo.add %9337, %10551 : tensor<512x768xf32>
    %10553 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10554 = stablehlo.multiply %10553, %arg1 : tensor<2x768xf32>
    %10555 = stablehlo.add %9343, %10554 : tensor<2x768xf32>
    %10556 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10557 = stablehlo.multiply %10556, %arg2 : tensor<30522x768xf32>
    %10558 = stablehlo.add %9349, %10557 : tensor<30522x768xf32>
    %10559 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10560 = stablehlo.multiply %10559, %arg3 : tensor<768xf32>
    %10561 = stablehlo.add %9355, %10560 : tensor<768xf32>
    %10562 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10563 = stablehlo.multiply %10562, %arg4 : tensor<768x768xf32>
    %10564 = stablehlo.add %9361, %10563 : tensor<768x768xf32>
    %10565 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10566 = stablehlo.multiply %10565, %arg5 : tensor<768xf32>
    %10567 = stablehlo.add %9367, %10566 : tensor<768xf32>
    %10568 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10569 = stablehlo.multiply %10568, %arg6 : tensor<768x768xf32>
    %10570 = stablehlo.add %9373, %10569 : tensor<768x768xf32>
    %10571 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10572 = stablehlo.multiply %10571, %arg7 : tensor<768xf32>
    %10573 = stablehlo.add %9379, %10572 : tensor<768xf32>
    %10574 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10575 = stablehlo.multiply %10574, %arg8 : tensor<768x768xf32>
    %10576 = stablehlo.add %9385, %10575 : tensor<768x768xf32>
    %10577 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10578 = stablehlo.multiply %10577, %arg9 : tensor<768xf32>
    %10579 = stablehlo.add %9391, %10578 : tensor<768xf32>
    %10580 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10581 = stablehlo.multiply %10580, %arg10 : tensor<768x768xf32>
    %10582 = stablehlo.add %9397, %10581 : tensor<768x768xf32>
    %10583 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10584 = stablehlo.multiply %10583, %arg11 : tensor<768xf32>
    %10585 = stablehlo.add %9403, %10584 : tensor<768xf32>
    %10586 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10587 = stablehlo.multiply %10586, %arg12 : tensor<768xf32>
    %10588 = stablehlo.add %9409, %10587 : tensor<768xf32>
    %10589 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10590 = stablehlo.multiply %10589, %arg13 : tensor<768xf32>
    %10591 = stablehlo.add %9415, %10590 : tensor<768xf32>
    %10592 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10593 = stablehlo.multiply %10592, %arg14 : tensor<3072x768xf32>
    %10594 = stablehlo.add %9421, %10593 : tensor<3072x768xf32>
    %10595 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10596 = stablehlo.multiply %10595, %arg15 : tensor<768xf32>
    %10597 = stablehlo.add %9427, %10596 : tensor<768xf32>
    %10598 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10599 = stablehlo.multiply %10598, %arg16 : tensor<768xf32>
    %10600 = stablehlo.add %9433, %10599 : tensor<768xf32>
    %10601 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10602 = stablehlo.multiply %10601, %arg17 : tensor<3072xf32>
    %10603 = stablehlo.add %9439, %10602 : tensor<3072xf32>
    %10604 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10605 = stablehlo.multiply %10604, %arg18 : tensor<768x3072xf32>
    %10606 = stablehlo.add %9445, %10605 : tensor<768x3072xf32>
    %10607 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10608 = stablehlo.multiply %10607, %arg19 : tensor<768xf32>
    %10609 = stablehlo.add %9451, %10608 : tensor<768xf32>
    %10610 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10611 = stablehlo.multiply %10610, %arg20 : tensor<768x768xf32>
    %10612 = stablehlo.add %9457, %10611 : tensor<768x768xf32>
    %10613 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10614 = stablehlo.multiply %10613, %arg21 : tensor<768xf32>
    %10615 = stablehlo.add %9463, %10614 : tensor<768xf32>
    %10616 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10617 = stablehlo.multiply %10616, %arg22 : tensor<768x768xf32>
    %10618 = stablehlo.add %9469, %10617 : tensor<768x768xf32>
    %10619 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10620 = stablehlo.multiply %10619, %arg23 : tensor<768xf32>
    %10621 = stablehlo.add %9475, %10620 : tensor<768xf32>
    %10622 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10623 = stablehlo.multiply %10622, %arg24 : tensor<768x768xf32>
    %10624 = stablehlo.add %9481, %10623 : tensor<768x768xf32>
    %10625 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10626 = stablehlo.multiply %10625, %arg25 : tensor<768xf32>
    %10627 = stablehlo.add %9487, %10626 : tensor<768xf32>
    %10628 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10629 = stablehlo.multiply %10628, %arg26 : tensor<768x768xf32>
    %10630 = stablehlo.add %9493, %10629 : tensor<768x768xf32>
    %10631 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10632 = stablehlo.multiply %10631, %arg27 : tensor<768xf32>
    %10633 = stablehlo.add %9499, %10632 : tensor<768xf32>
    %10634 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10635 = stablehlo.multiply %10634, %arg28 : tensor<768xf32>
    %10636 = stablehlo.add %9505, %10635 : tensor<768xf32>
    %10637 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10638 = stablehlo.multiply %10637, %arg29 : tensor<768xf32>
    %10639 = stablehlo.add %9511, %10638 : tensor<768xf32>
    %10640 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10641 = stablehlo.multiply %10640, %arg30 : tensor<3072x768xf32>
    %10642 = stablehlo.add %9517, %10641 : tensor<3072x768xf32>
    %10643 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10644 = stablehlo.multiply %10643, %arg31 : tensor<768xf32>
    %10645 = stablehlo.add %9523, %10644 : tensor<768xf32>
    %10646 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10647 = stablehlo.multiply %10646, %arg32 : tensor<768xf32>
    %10648 = stablehlo.add %9529, %10647 : tensor<768xf32>
    %10649 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10650 = stablehlo.multiply %10649, %arg33 : tensor<3072xf32>
    %10651 = stablehlo.add %9535, %10650 : tensor<3072xf32>
    %10652 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10653 = stablehlo.multiply %10652, %arg34 : tensor<768x3072xf32>
    %10654 = stablehlo.add %9541, %10653 : tensor<768x3072xf32>
    %10655 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10656 = stablehlo.multiply %10655, %arg35 : tensor<768xf32>
    %10657 = stablehlo.add %9547, %10656 : tensor<768xf32>
    %10658 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10659 = stablehlo.multiply %10658, %arg36 : tensor<768x768xf32>
    %10660 = stablehlo.add %9553, %10659 : tensor<768x768xf32>
    %10661 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10662 = stablehlo.multiply %10661, %arg37 : tensor<768xf32>
    %10663 = stablehlo.add %9559, %10662 : tensor<768xf32>
    %10664 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10665 = stablehlo.multiply %10664, %arg38 : tensor<768x768xf32>
    %10666 = stablehlo.add %9565, %10665 : tensor<768x768xf32>
    %10667 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10668 = stablehlo.multiply %10667, %arg39 : tensor<768xf32>
    %10669 = stablehlo.add %9571, %10668 : tensor<768xf32>
    %10670 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10671 = stablehlo.multiply %10670, %arg40 : tensor<768x768xf32>
    %10672 = stablehlo.add %9577, %10671 : tensor<768x768xf32>
    %10673 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10674 = stablehlo.multiply %10673, %arg41 : tensor<768xf32>
    %10675 = stablehlo.add %9583, %10674 : tensor<768xf32>
    %10676 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10677 = stablehlo.multiply %10676, %arg42 : tensor<768x768xf32>
    %10678 = stablehlo.add %9589, %10677 : tensor<768x768xf32>
    %10679 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10680 = stablehlo.multiply %10679, %arg43 : tensor<768xf32>
    %10681 = stablehlo.add %9595, %10680 : tensor<768xf32>
    %10682 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10683 = stablehlo.multiply %10682, %arg44 : tensor<768xf32>
    %10684 = stablehlo.add %9601, %10683 : tensor<768xf32>
    %10685 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10686 = stablehlo.multiply %10685, %arg45 : tensor<768xf32>
    %10687 = stablehlo.add %9607, %10686 : tensor<768xf32>
    %10688 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10689 = stablehlo.multiply %10688, %arg46 : tensor<3072x768xf32>
    %10690 = stablehlo.add %9613, %10689 : tensor<3072x768xf32>
    %10691 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10692 = stablehlo.multiply %10691, %arg47 : tensor<768xf32>
    %10693 = stablehlo.add %9619, %10692 : tensor<768xf32>
    %10694 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10695 = stablehlo.multiply %10694, %arg48 : tensor<768xf32>
    %10696 = stablehlo.add %9625, %10695 : tensor<768xf32>
    %10697 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10698 = stablehlo.multiply %10697, %arg49 : tensor<3072xf32>
    %10699 = stablehlo.add %9631, %10698 : tensor<3072xf32>
    %10700 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10701 = stablehlo.multiply %10700, %arg50 : tensor<768x3072xf32>
    %10702 = stablehlo.add %9637, %10701 : tensor<768x3072xf32>
    %10703 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10704 = stablehlo.multiply %10703, %arg51 : tensor<768xf32>
    %10705 = stablehlo.add %9643, %10704 : tensor<768xf32>
    %10706 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10707 = stablehlo.multiply %10706, %arg52 : tensor<768x768xf32>
    %10708 = stablehlo.add %9649, %10707 : tensor<768x768xf32>
    %10709 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10710 = stablehlo.multiply %10709, %arg53 : tensor<768xf32>
    %10711 = stablehlo.add %9655, %10710 : tensor<768xf32>
    %10712 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10713 = stablehlo.multiply %10712, %arg54 : tensor<768x768xf32>
    %10714 = stablehlo.add %9661, %10713 : tensor<768x768xf32>
    %10715 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10716 = stablehlo.multiply %10715, %arg55 : tensor<768xf32>
    %10717 = stablehlo.add %9667, %10716 : tensor<768xf32>
    %10718 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10719 = stablehlo.multiply %10718, %arg56 : tensor<768x768xf32>
    %10720 = stablehlo.add %9673, %10719 : tensor<768x768xf32>
    %10721 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10722 = stablehlo.multiply %10721, %arg57 : tensor<768xf32>
    %10723 = stablehlo.add %9679, %10722 : tensor<768xf32>
    %10724 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10725 = stablehlo.multiply %10724, %arg58 : tensor<768x768xf32>
    %10726 = stablehlo.add %9685, %10725 : tensor<768x768xf32>
    %10727 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10728 = stablehlo.multiply %10727, %arg59 : tensor<768xf32>
    %10729 = stablehlo.add %9691, %10728 : tensor<768xf32>
    %10730 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10731 = stablehlo.multiply %10730, %arg60 : tensor<768xf32>
    %10732 = stablehlo.add %9697, %10731 : tensor<768xf32>
    %10733 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10734 = stablehlo.multiply %10733, %arg61 : tensor<768xf32>
    %10735 = stablehlo.add %9703, %10734 : tensor<768xf32>
    %10736 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10737 = stablehlo.multiply %10736, %arg62 : tensor<3072x768xf32>
    %10738 = stablehlo.add %9709, %10737 : tensor<3072x768xf32>
    %10739 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10740 = stablehlo.multiply %10739, %arg63 : tensor<768xf32>
    %10741 = stablehlo.add %9715, %10740 : tensor<768xf32>
    %10742 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10743 = stablehlo.multiply %10742, %arg64 : tensor<768xf32>
    %10744 = stablehlo.add %9721, %10743 : tensor<768xf32>
    %10745 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10746 = stablehlo.multiply %10745, %arg65 : tensor<3072xf32>
    %10747 = stablehlo.add %9727, %10746 : tensor<3072xf32>
    %10748 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10749 = stablehlo.multiply %10748, %arg66 : tensor<768x3072xf32>
    %10750 = stablehlo.add %9733, %10749 : tensor<768x3072xf32>
    %10751 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10752 = stablehlo.multiply %10751, %arg67 : tensor<768xf32>
    %10753 = stablehlo.add %9739, %10752 : tensor<768xf32>
    %10754 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10755 = stablehlo.multiply %10754, %arg68 : tensor<768x768xf32>
    %10756 = stablehlo.add %9745, %10755 : tensor<768x768xf32>
    %10757 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10758 = stablehlo.multiply %10757, %arg69 : tensor<768xf32>
    %10759 = stablehlo.add %9751, %10758 : tensor<768xf32>
    %10760 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10761 = stablehlo.multiply %10760, %arg70 : tensor<768x768xf32>
    %10762 = stablehlo.add %9757, %10761 : tensor<768x768xf32>
    %10763 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10764 = stablehlo.multiply %10763, %arg71 : tensor<768xf32>
    %10765 = stablehlo.add %9763, %10764 : tensor<768xf32>
    %10766 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10767 = stablehlo.multiply %10766, %arg72 : tensor<768x768xf32>
    %10768 = stablehlo.add %9769, %10767 : tensor<768x768xf32>
    %10769 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10770 = stablehlo.multiply %10769, %arg73 : tensor<768xf32>
    %10771 = stablehlo.add %9775, %10770 : tensor<768xf32>
    %10772 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10773 = stablehlo.multiply %10772, %arg74 : tensor<768x768xf32>
    %10774 = stablehlo.add %9781, %10773 : tensor<768x768xf32>
    %10775 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10776 = stablehlo.multiply %10775, %arg75 : tensor<768xf32>
    %10777 = stablehlo.add %9787, %10776 : tensor<768xf32>
    %10778 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10779 = stablehlo.multiply %10778, %arg76 : tensor<768xf32>
    %10780 = stablehlo.add %9793, %10779 : tensor<768xf32>
    %10781 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10782 = stablehlo.multiply %10781, %arg77 : tensor<768xf32>
    %10783 = stablehlo.add %9799, %10782 : tensor<768xf32>
    %10784 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10785 = stablehlo.multiply %10784, %arg78 : tensor<3072x768xf32>
    %10786 = stablehlo.add %9805, %10785 : tensor<3072x768xf32>
    %10787 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10788 = stablehlo.multiply %10787, %arg79 : tensor<768xf32>
    %10789 = stablehlo.add %9811, %10788 : tensor<768xf32>
    %10790 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10791 = stablehlo.multiply %10790, %arg80 : tensor<768xf32>
    %10792 = stablehlo.add %9817, %10791 : tensor<768xf32>
    %10793 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10794 = stablehlo.multiply %10793, %arg81 : tensor<3072xf32>
    %10795 = stablehlo.add %9823, %10794 : tensor<3072xf32>
    %10796 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10797 = stablehlo.multiply %10796, %arg82 : tensor<768x3072xf32>
    %10798 = stablehlo.add %9829, %10797 : tensor<768x3072xf32>
    %10799 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10800 = stablehlo.multiply %10799, %arg83 : tensor<768xf32>
    %10801 = stablehlo.add %9835, %10800 : tensor<768xf32>
    %10802 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10803 = stablehlo.multiply %10802, %arg84 : tensor<768x768xf32>
    %10804 = stablehlo.add %9841, %10803 : tensor<768x768xf32>
    %10805 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10806 = stablehlo.multiply %10805, %arg85 : tensor<768xf32>
    %10807 = stablehlo.add %9847, %10806 : tensor<768xf32>
    %10808 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10809 = stablehlo.multiply %10808, %arg86 : tensor<768x768xf32>
    %10810 = stablehlo.add %9853, %10809 : tensor<768x768xf32>
    %10811 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10812 = stablehlo.multiply %10811, %arg87 : tensor<768xf32>
    %10813 = stablehlo.add %9859, %10812 : tensor<768xf32>
    %10814 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10815 = stablehlo.multiply %10814, %arg88 : tensor<768x768xf32>
    %10816 = stablehlo.add %9865, %10815 : tensor<768x768xf32>
    %10817 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10818 = stablehlo.multiply %10817, %arg89 : tensor<768xf32>
    %10819 = stablehlo.add %9871, %10818 : tensor<768xf32>
    %10820 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10821 = stablehlo.multiply %10820, %arg90 : tensor<768x768xf32>
    %10822 = stablehlo.add %9877, %10821 : tensor<768x768xf32>
    %10823 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10824 = stablehlo.multiply %10823, %arg91 : tensor<768xf32>
    %10825 = stablehlo.add %9883, %10824 : tensor<768xf32>
    %10826 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10827 = stablehlo.multiply %10826, %arg92 : tensor<768xf32>
    %10828 = stablehlo.add %9889, %10827 : tensor<768xf32>
    %10829 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10830 = stablehlo.multiply %10829, %arg93 : tensor<768xf32>
    %10831 = stablehlo.add %9895, %10830 : tensor<768xf32>
    %10832 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10833 = stablehlo.multiply %10832, %arg94 : tensor<3072x768xf32>
    %10834 = stablehlo.add %9901, %10833 : tensor<3072x768xf32>
    %10835 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10836 = stablehlo.multiply %10835, %arg95 : tensor<768xf32>
    %10837 = stablehlo.add %9907, %10836 : tensor<768xf32>
    %10838 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10839 = stablehlo.multiply %10838, %arg96 : tensor<768xf32>
    %10840 = stablehlo.add %9913, %10839 : tensor<768xf32>
    %10841 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10842 = stablehlo.multiply %10841, %arg97 : tensor<3072xf32>
    %10843 = stablehlo.add %9919, %10842 : tensor<3072xf32>
    %10844 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10845 = stablehlo.multiply %10844, %arg98 : tensor<768x3072xf32>
    %10846 = stablehlo.add %9925, %10845 : tensor<768x3072xf32>
    %10847 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10848 = stablehlo.multiply %10847, %arg99 : tensor<768xf32>
    %10849 = stablehlo.add %9931, %10848 : tensor<768xf32>
    %10850 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10851 = stablehlo.multiply %10850, %arg100 : tensor<768x768xf32>
    %10852 = stablehlo.add %9937, %10851 : tensor<768x768xf32>
    %10853 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10854 = stablehlo.multiply %10853, %arg101 : tensor<768xf32>
    %10855 = stablehlo.add %9943, %10854 : tensor<768xf32>
    %10856 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10857 = stablehlo.multiply %10856, %arg102 : tensor<768x768xf32>
    %10858 = stablehlo.add %9949, %10857 : tensor<768x768xf32>
    %10859 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10860 = stablehlo.multiply %10859, %arg103 : tensor<768xf32>
    %10861 = stablehlo.add %9955, %10860 : tensor<768xf32>
    %10862 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10863 = stablehlo.multiply %10862, %arg104 : tensor<768x768xf32>
    %10864 = stablehlo.add %9961, %10863 : tensor<768x768xf32>
    %10865 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10866 = stablehlo.multiply %10865, %arg105 : tensor<768xf32>
    %10867 = stablehlo.add %9967, %10866 : tensor<768xf32>
    %10868 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10869 = stablehlo.multiply %10868, %arg106 : tensor<768x768xf32>
    %10870 = stablehlo.add %9973, %10869 : tensor<768x768xf32>
    %10871 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10872 = stablehlo.multiply %10871, %arg107 : tensor<768xf32>
    %10873 = stablehlo.add %9979, %10872 : tensor<768xf32>
    %10874 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10875 = stablehlo.multiply %10874, %arg108 : tensor<768xf32>
    %10876 = stablehlo.add %9985, %10875 : tensor<768xf32>
    %10877 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10878 = stablehlo.multiply %10877, %arg109 : tensor<768xf32>
    %10879 = stablehlo.add %9991, %10878 : tensor<768xf32>
    %10880 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10881 = stablehlo.multiply %10880, %arg110 : tensor<3072x768xf32>
    %10882 = stablehlo.add %9997, %10881 : tensor<3072x768xf32>
    %10883 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10884 = stablehlo.multiply %10883, %arg111 : tensor<768xf32>
    %10885 = stablehlo.add %10003, %10884 : tensor<768xf32>
    %10886 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10887 = stablehlo.multiply %10886, %arg112 : tensor<768xf32>
    %10888 = stablehlo.add %10009, %10887 : tensor<768xf32>
    %10889 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10890 = stablehlo.multiply %10889, %arg113 : tensor<3072xf32>
    %10891 = stablehlo.add %10015, %10890 : tensor<3072xf32>
    %10892 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10893 = stablehlo.multiply %10892, %arg114 : tensor<768x3072xf32>
    %10894 = stablehlo.add %10021, %10893 : tensor<768x3072xf32>
    %10895 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10896 = stablehlo.multiply %10895, %arg115 : tensor<768xf32>
    %10897 = stablehlo.add %10027, %10896 : tensor<768xf32>
    %10898 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10899 = stablehlo.multiply %10898, %arg116 : tensor<768x768xf32>
    %10900 = stablehlo.add %10033, %10899 : tensor<768x768xf32>
    %10901 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10902 = stablehlo.multiply %10901, %arg117 : tensor<768xf32>
    %10903 = stablehlo.add %10039, %10902 : tensor<768xf32>
    %10904 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10905 = stablehlo.multiply %10904, %arg118 : tensor<768x768xf32>
    %10906 = stablehlo.add %10045, %10905 : tensor<768x768xf32>
    %10907 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10908 = stablehlo.multiply %10907, %arg119 : tensor<768xf32>
    %10909 = stablehlo.add %10051, %10908 : tensor<768xf32>
    %10910 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10911 = stablehlo.multiply %10910, %arg120 : tensor<768x768xf32>
    %10912 = stablehlo.add %10057, %10911 : tensor<768x768xf32>
    %10913 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10914 = stablehlo.multiply %10913, %arg121 : tensor<768xf32>
    %10915 = stablehlo.add %10063, %10914 : tensor<768xf32>
    %10916 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10917 = stablehlo.multiply %10916, %arg122 : tensor<768x768xf32>
    %10918 = stablehlo.add %10069, %10917 : tensor<768x768xf32>
    %10919 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10920 = stablehlo.multiply %10919, %arg123 : tensor<768xf32>
    %10921 = stablehlo.add %10075, %10920 : tensor<768xf32>
    %10922 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10923 = stablehlo.multiply %10922, %arg124 : tensor<768xf32>
    %10924 = stablehlo.add %10081, %10923 : tensor<768xf32>
    %10925 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10926 = stablehlo.multiply %10925, %arg125 : tensor<768xf32>
    %10927 = stablehlo.add %10087, %10926 : tensor<768xf32>
    %10928 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10929 = stablehlo.multiply %10928, %arg126 : tensor<3072x768xf32>
    %10930 = stablehlo.add %10093, %10929 : tensor<3072x768xf32>
    %10931 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10932 = stablehlo.multiply %10931, %arg127 : tensor<768xf32>
    %10933 = stablehlo.add %10099, %10932 : tensor<768xf32>
    %10934 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10935 = stablehlo.multiply %10934, %arg128 : tensor<768xf32>
    %10936 = stablehlo.add %10105, %10935 : tensor<768xf32>
    %10937 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10938 = stablehlo.multiply %10937, %arg129 : tensor<3072xf32>
    %10939 = stablehlo.add %10111, %10938 : tensor<3072xf32>
    %10940 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10941 = stablehlo.multiply %10940, %arg130 : tensor<768x3072xf32>
    %10942 = stablehlo.add %10117, %10941 : tensor<768x3072xf32>
    %10943 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10944 = stablehlo.multiply %10943, %arg131 : tensor<768xf32>
    %10945 = stablehlo.add %10123, %10944 : tensor<768xf32>
    %10946 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10947 = stablehlo.multiply %10946, %arg132 : tensor<768x768xf32>
    %10948 = stablehlo.add %10129, %10947 : tensor<768x768xf32>
    %10949 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10950 = stablehlo.multiply %10949, %arg133 : tensor<768xf32>
    %10951 = stablehlo.add %10135, %10950 : tensor<768xf32>
    %10952 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10953 = stablehlo.multiply %10952, %arg134 : tensor<768x768xf32>
    %10954 = stablehlo.add %10141, %10953 : tensor<768x768xf32>
    %10955 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10956 = stablehlo.multiply %10955, %arg135 : tensor<768xf32>
    %10957 = stablehlo.add %10147, %10956 : tensor<768xf32>
    %10958 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10959 = stablehlo.multiply %10958, %arg136 : tensor<768x768xf32>
    %10960 = stablehlo.add %10153, %10959 : tensor<768x768xf32>
    %10961 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10962 = stablehlo.multiply %10961, %arg137 : tensor<768xf32>
    %10963 = stablehlo.add %10159, %10962 : tensor<768xf32>
    %10964 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10965 = stablehlo.multiply %10964, %arg138 : tensor<768x768xf32>
    %10966 = stablehlo.add %10165, %10965 : tensor<768x768xf32>
    %10967 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10968 = stablehlo.multiply %10967, %arg139 : tensor<768xf32>
    %10969 = stablehlo.add %10171, %10968 : tensor<768xf32>
    %10970 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10971 = stablehlo.multiply %10970, %arg140 : tensor<768xf32>
    %10972 = stablehlo.add %10177, %10971 : tensor<768xf32>
    %10973 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10974 = stablehlo.multiply %10973, %arg141 : tensor<768xf32>
    %10975 = stablehlo.add %10183, %10974 : tensor<768xf32>
    %10976 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10977 = stablehlo.multiply %10976, %arg142 : tensor<3072x768xf32>
    %10978 = stablehlo.add %10189, %10977 : tensor<3072x768xf32>
    %10979 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10980 = stablehlo.multiply %10979, %arg143 : tensor<768xf32>
    %10981 = stablehlo.add %10195, %10980 : tensor<768xf32>
    %10982 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10983 = stablehlo.multiply %10982, %arg144 : tensor<768xf32>
    %10984 = stablehlo.add %10201, %10983 : tensor<768xf32>
    %10985 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10986 = stablehlo.multiply %10985, %arg145 : tensor<3072xf32>
    %10987 = stablehlo.add %10207, %10986 : tensor<3072xf32>
    %10988 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10989 = stablehlo.multiply %10988, %arg146 : tensor<768x3072xf32>
    %10990 = stablehlo.add %10213, %10989 : tensor<768x3072xf32>
    %10991 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10992 = stablehlo.multiply %10991, %arg147 : tensor<768xf32>
    %10993 = stablehlo.add %10219, %10992 : tensor<768xf32>
    %10994 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10995 = stablehlo.multiply %10994, %arg148 : tensor<768x768xf32>
    %10996 = stablehlo.add %10225, %10995 : tensor<768x768xf32>
    %10997 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10998 = stablehlo.multiply %10997, %arg149 : tensor<768xf32>
    %10999 = stablehlo.add %10231, %10998 : tensor<768xf32>
    %11000 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11001 = stablehlo.multiply %11000, %arg150 : tensor<768x768xf32>
    %11002 = stablehlo.add %10237, %11001 : tensor<768x768xf32>
    %11003 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11004 = stablehlo.multiply %11003, %arg151 : tensor<768xf32>
    %11005 = stablehlo.add %10243, %11004 : tensor<768xf32>
    %11006 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11007 = stablehlo.multiply %11006, %arg152 : tensor<768x768xf32>
    %11008 = stablehlo.add %10249, %11007 : tensor<768x768xf32>
    %11009 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11010 = stablehlo.multiply %11009, %arg153 : tensor<768xf32>
    %11011 = stablehlo.add %10255, %11010 : tensor<768xf32>
    %11012 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11013 = stablehlo.multiply %11012, %arg154 : tensor<768x768xf32>
    %11014 = stablehlo.add %10261, %11013 : tensor<768x768xf32>
    %11015 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11016 = stablehlo.multiply %11015, %arg155 : tensor<768xf32>
    %11017 = stablehlo.add %10267, %11016 : tensor<768xf32>
    %11018 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11019 = stablehlo.multiply %11018, %arg156 : tensor<768xf32>
    %11020 = stablehlo.add %10273, %11019 : tensor<768xf32>
    %11021 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11022 = stablehlo.multiply %11021, %arg157 : tensor<768xf32>
    %11023 = stablehlo.add %10279, %11022 : tensor<768xf32>
    %11024 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11025 = stablehlo.multiply %11024, %arg158 : tensor<3072x768xf32>
    %11026 = stablehlo.add %10285, %11025 : tensor<3072x768xf32>
    %11027 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11028 = stablehlo.multiply %11027, %arg159 : tensor<768xf32>
    %11029 = stablehlo.add %10291, %11028 : tensor<768xf32>
    %11030 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11031 = stablehlo.multiply %11030, %arg160 : tensor<768xf32>
    %11032 = stablehlo.add %10297, %11031 : tensor<768xf32>
    %11033 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11034 = stablehlo.multiply %11033, %arg161 : tensor<3072xf32>
    %11035 = stablehlo.add %10303, %11034 : tensor<3072xf32>
    %11036 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11037 = stablehlo.multiply %11036, %arg162 : tensor<768x3072xf32>
    %11038 = stablehlo.add %10309, %11037 : tensor<768x3072xf32>
    %11039 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11040 = stablehlo.multiply %11039, %arg163 : tensor<768xf32>
    %11041 = stablehlo.add %10315, %11040 : tensor<768xf32>
    %11042 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11043 = stablehlo.multiply %11042, %arg164 : tensor<768x768xf32>
    %11044 = stablehlo.add %10321, %11043 : tensor<768x768xf32>
    %11045 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11046 = stablehlo.multiply %11045, %arg165 : tensor<768xf32>
    %11047 = stablehlo.add %10327, %11046 : tensor<768xf32>
    %11048 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11049 = stablehlo.multiply %11048, %arg166 : tensor<768x768xf32>
    %11050 = stablehlo.add %10333, %11049 : tensor<768x768xf32>
    %11051 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11052 = stablehlo.multiply %11051, %arg167 : tensor<768xf32>
    %11053 = stablehlo.add %10339, %11052 : tensor<768xf32>
    %11054 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11055 = stablehlo.multiply %11054, %arg168 : tensor<768x768xf32>
    %11056 = stablehlo.add %10345, %11055 : tensor<768x768xf32>
    %11057 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11058 = stablehlo.multiply %11057, %arg169 : tensor<768xf32>
    %11059 = stablehlo.add %10351, %11058 : tensor<768xf32>
    %11060 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11061 = stablehlo.multiply %11060, %arg170 : tensor<768x768xf32>
    %11062 = stablehlo.add %10357, %11061 : tensor<768x768xf32>
    %11063 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11064 = stablehlo.multiply %11063, %arg171 : tensor<768xf32>
    %11065 = stablehlo.add %10363, %11064 : tensor<768xf32>
    %11066 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11067 = stablehlo.multiply %11066, %arg172 : tensor<768xf32>
    %11068 = stablehlo.add %10369, %11067 : tensor<768xf32>
    %11069 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11070 = stablehlo.multiply %11069, %arg173 : tensor<768xf32>
    %11071 = stablehlo.add %10375, %11070 : tensor<768xf32>
    %11072 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11073 = stablehlo.multiply %11072, %arg174 : tensor<3072x768xf32>
    %11074 = stablehlo.add %10381, %11073 : tensor<3072x768xf32>
    %11075 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11076 = stablehlo.multiply %11075, %arg175 : tensor<768xf32>
    %11077 = stablehlo.add %10387, %11076 : tensor<768xf32>
    %11078 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11079 = stablehlo.multiply %11078, %arg176 : tensor<768xf32>
    %11080 = stablehlo.add %10393, %11079 : tensor<768xf32>
    %11081 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11082 = stablehlo.multiply %11081, %arg177 : tensor<3072xf32>
    %11083 = stablehlo.add %10399, %11082 : tensor<3072xf32>
    %11084 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11085 = stablehlo.multiply %11084, %arg178 : tensor<768x3072xf32>
    %11086 = stablehlo.add %10405, %11085 : tensor<768x3072xf32>
    %11087 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11088 = stablehlo.multiply %11087, %arg179 : tensor<768xf32>
    %11089 = stablehlo.add %10411, %11088 : tensor<768xf32>
    %11090 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11091 = stablehlo.multiply %11090, %arg180 : tensor<768x768xf32>
    %11092 = stablehlo.add %10417, %11091 : tensor<768x768xf32>
    %11093 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11094 = stablehlo.multiply %11093, %arg181 : tensor<768xf32>
    %11095 = stablehlo.add %10423, %11094 : tensor<768xf32>
    %11096 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11097 = stablehlo.multiply %11096, %arg182 : tensor<768x768xf32>
    %11098 = stablehlo.add %10429, %11097 : tensor<768x768xf32>
    %11099 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11100 = stablehlo.multiply %11099, %arg183 : tensor<768xf32>
    %11101 = stablehlo.add %10435, %11100 : tensor<768xf32>
    %11102 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11103 = stablehlo.multiply %11102, %arg184 : tensor<768x768xf32>
    %11104 = stablehlo.add %10441, %11103 : tensor<768x768xf32>
    %11105 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11106 = stablehlo.multiply %11105, %arg185 : tensor<768xf32>
    %11107 = stablehlo.add %10447, %11106 : tensor<768xf32>
    %11108 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11109 = stablehlo.multiply %11108, %arg186 : tensor<768x768xf32>
    %11110 = stablehlo.add %10453, %11109 : tensor<768x768xf32>
    %11111 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11112 = stablehlo.multiply %11111, %arg187 : tensor<768xf32>
    %11113 = stablehlo.add %10459, %11112 : tensor<768xf32>
    %11114 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11115 = stablehlo.multiply %11114, %arg188 : tensor<768xf32>
    %11116 = stablehlo.add %10465, %11115 : tensor<768xf32>
    %11117 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11118 = stablehlo.multiply %11117, %arg189 : tensor<768xf32>
    %11119 = stablehlo.add %10471, %11118 : tensor<768xf32>
    %11120 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11121 = stablehlo.multiply %11120, %arg190 : tensor<3072x768xf32>
    %11122 = stablehlo.add %10477, %11121 : tensor<3072x768xf32>
    %11123 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11124 = stablehlo.multiply %11123, %arg191 : tensor<768xf32>
    %11125 = stablehlo.add %10483, %11124 : tensor<768xf32>
    %11126 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11127 = stablehlo.multiply %11126, %arg192 : tensor<768xf32>
    %11128 = stablehlo.add %10489, %11127 : tensor<768xf32>
    %11129 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11130 = stablehlo.multiply %11129, %arg193 : tensor<3072xf32>
    %11131 = stablehlo.add %10495, %11130 : tensor<3072xf32>
    %11132 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11133 = stablehlo.multiply %11132, %arg194 : tensor<768x3072xf32>
    %11134 = stablehlo.add %10501, %11133 : tensor<768x3072xf32>
    %11135 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11136 = stablehlo.multiply %11135, %arg195 : tensor<768xf32>
    %11137 = stablehlo.add %10507, %11136 : tensor<768xf32>
    %11138 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11139 = stablehlo.multiply %11138, %arg196 : tensor<768xf32>
    %11140 = stablehlo.add %10513, %11139 : tensor<768xf32>
    %11141 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11142 = stablehlo.multiply %11141, %arg197 : tensor<30522xf32>
    %11143 = stablehlo.add %10519, %11142 : tensor<30522xf32>
    %11144 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11145 = stablehlo.multiply %11144, %arg198 : tensor<768xf32>
    %11146 = stablehlo.add %10525, %11145 : tensor<768xf32>
    %11147 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11148 = stablehlo.multiply %11147, %arg199 : tensor<768x768xf32>
    %11149 = stablehlo.add %10531, %11148 : tensor<768x768xf32>
    %11150 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11151 = stablehlo.multiply %11150, %arg200 : tensor<30522x768xf32>
    %11152 = stablehlo.add %10537, %11151 : tensor<30522x768xf32>
    %11153 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11154 = stablehlo.multiply %11153, %arg201 : tensor<768xf32>
    %11155 = stablehlo.add %10543, %11154 : tensor<768xf32>
    %11156 = stablehlo.broadcast_in_dim %cst_761, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11157 = stablehlo.multiply %11156, %arg202 : tensor<768xf32>
    %11158 = stablehlo.add %10549, %11157 : tensor<768xf32>
    %11159 = stablehlo.subtract %arg610, %c : tensor<i32>
    %c_762 = stablehlo.constant dense<1000> : tensor<i32>
    %11160 = call @clip(%11159, %c_143, %c_762) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11161 = stablehlo.convert %11160 : (tensor<i32>) -> tensor<f32>
    %cst_763 = stablehlo.constant dense<1.000000e+03> : tensor<f32>
    %11162 = stablehlo.divide %11161, %cst_763 : tensor<f32>
    %11163 = stablehlo.subtract %cst_7, %11162 : tensor<f32>
    %cst_764 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %11164 = stablehlo.multiply %cst_764, %11163 : tensor<f32>
    %cst_765 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %11165 = stablehlo.add %11164, %cst_765 : tensor<f32>
    %c_766 = stablehlo.constant dense<1000> : tensor<i32>
    %11166 = stablehlo.compare  LT, %arg610, %c_766,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11167 = stablehlo.subtract %arg610, %c_766 : tensor<i32>
    %11168 = stablehlo.convert %11167 : (tensor<i32>) -> tensor<f32>
    %cst_767 = stablehlo.constant dense<9.000000e+03> : tensor<f32>
    %11169 = stablehlo.minimum %11168, %cst_767 : tensor<f32>
    %cst_768 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %11170 = stablehlo.multiply %cst_768, %11169 : tensor<f32>
    %11171 = stablehlo.divide %11170, %cst_767 : tensor<f32>
    %11172 = stablehlo.cosine %11171 : tensor<f32>
    %cst_769 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %11173 = stablehlo.add %cst_769, %11172 : tensor<f32>
    %cst_770 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %11174 = stablehlo.multiply %cst_770, %11173 : tensor<f32>
    %11175 = stablehlo.power %11174, %cst_769 : tensor<f32>
    %11176 = stablehlo.multiply %cst_769, %11175 : tensor<f32>
    %11177 = stablehlo.add %11176, %cst_12 : tensor<f32>
    %cst_771 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %11178 = stablehlo.multiply %cst_771, %11177 : tensor<f32>
    %11179 = call @_where_384(%11166, %11165, %11178) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_772 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %11180 = stablehlo.multiply %cst_772, %11179 : tensor<f32>
    %11181 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %11182 = stablehlo.multiply %11181, %10552 : tensor<512x768xf32>
    %11183 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %11184 = stablehlo.multiply %11183, %10555 : tensor<2x768xf32>
    %11185 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11186 = stablehlo.multiply %11185, %10558 : tensor<30522x768xf32>
    %11187 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11188 = stablehlo.multiply %11187, %10561 : tensor<768xf32>
    %11189 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11190 = stablehlo.multiply %11189, %10564 : tensor<768x768xf32>
    %11191 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11192 = stablehlo.multiply %11191, %10567 : tensor<768xf32>
    %11193 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11194 = stablehlo.multiply %11193, %10570 : tensor<768x768xf32>
    %11195 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11196 = stablehlo.multiply %11195, %10573 : tensor<768xf32>
    %11197 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11198 = stablehlo.multiply %11197, %10576 : tensor<768x768xf32>
    %11199 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11200 = stablehlo.multiply %11199, %10579 : tensor<768xf32>
    %11201 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11202 = stablehlo.multiply %11201, %10582 : tensor<768x768xf32>
    %11203 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11204 = stablehlo.multiply %11203, %10585 : tensor<768xf32>
    %11205 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11206 = stablehlo.multiply %11205, %10588 : tensor<768xf32>
    %11207 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11208 = stablehlo.multiply %11207, %10591 : tensor<768xf32>
    %11209 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11210 = stablehlo.multiply %11209, %10594 : tensor<3072x768xf32>
    %11211 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11212 = stablehlo.multiply %11211, %10597 : tensor<768xf32>
    %11213 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11214 = stablehlo.multiply %11213, %10600 : tensor<768xf32>
    %11215 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11216 = stablehlo.multiply %11215, %10603 : tensor<3072xf32>
    %11217 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11218 = stablehlo.multiply %11217, %10606 : tensor<768x3072xf32>
    %11219 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11220 = stablehlo.multiply %11219, %10609 : tensor<768xf32>
    %11221 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11222 = stablehlo.multiply %11221, %10612 : tensor<768x768xf32>
    %11223 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11224 = stablehlo.multiply %11223, %10615 : tensor<768xf32>
    %11225 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11226 = stablehlo.multiply %11225, %10618 : tensor<768x768xf32>
    %11227 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11228 = stablehlo.multiply %11227, %10621 : tensor<768xf32>
    %11229 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11230 = stablehlo.multiply %11229, %10624 : tensor<768x768xf32>
    %11231 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11232 = stablehlo.multiply %11231, %10627 : tensor<768xf32>
    %11233 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11234 = stablehlo.multiply %11233, %10630 : tensor<768x768xf32>
    %11235 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11236 = stablehlo.multiply %11235, %10633 : tensor<768xf32>
    %11237 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11238 = stablehlo.multiply %11237, %10636 : tensor<768xf32>
    %11239 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11240 = stablehlo.multiply %11239, %10639 : tensor<768xf32>
    %11241 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11242 = stablehlo.multiply %11241, %10642 : tensor<3072x768xf32>
    %11243 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11244 = stablehlo.multiply %11243, %10645 : tensor<768xf32>
    %11245 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11246 = stablehlo.multiply %11245, %10648 : tensor<768xf32>
    %11247 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11248 = stablehlo.multiply %11247, %10651 : tensor<3072xf32>
    %11249 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11250 = stablehlo.multiply %11249, %10654 : tensor<768x3072xf32>
    %11251 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11252 = stablehlo.multiply %11251, %10657 : tensor<768xf32>
    %11253 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11254 = stablehlo.multiply %11253, %10660 : tensor<768x768xf32>
    %11255 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11256 = stablehlo.multiply %11255, %10663 : tensor<768xf32>
    %11257 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11258 = stablehlo.multiply %11257, %10666 : tensor<768x768xf32>
    %11259 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11260 = stablehlo.multiply %11259, %10669 : tensor<768xf32>
    %11261 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11262 = stablehlo.multiply %11261, %10672 : tensor<768x768xf32>
    %11263 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11264 = stablehlo.multiply %11263, %10675 : tensor<768xf32>
    %11265 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11266 = stablehlo.multiply %11265, %10678 : tensor<768x768xf32>
    %11267 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11268 = stablehlo.multiply %11267, %10681 : tensor<768xf32>
    %11269 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11270 = stablehlo.multiply %11269, %10684 : tensor<768xf32>
    %11271 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11272 = stablehlo.multiply %11271, %10687 : tensor<768xf32>
    %11273 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11274 = stablehlo.multiply %11273, %10690 : tensor<3072x768xf32>
    %11275 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11276 = stablehlo.multiply %11275, %10693 : tensor<768xf32>
    %11277 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11278 = stablehlo.multiply %11277, %10696 : tensor<768xf32>
    %11279 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11280 = stablehlo.multiply %11279, %10699 : tensor<3072xf32>
    %11281 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11282 = stablehlo.multiply %11281, %10702 : tensor<768x3072xf32>
    %11283 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11284 = stablehlo.multiply %11283, %10705 : tensor<768xf32>
    %11285 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11286 = stablehlo.multiply %11285, %10708 : tensor<768x768xf32>
    %11287 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11288 = stablehlo.multiply %11287, %10711 : tensor<768xf32>
    %11289 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11290 = stablehlo.multiply %11289, %10714 : tensor<768x768xf32>
    %11291 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11292 = stablehlo.multiply %11291, %10717 : tensor<768xf32>
    %11293 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11294 = stablehlo.multiply %11293, %10720 : tensor<768x768xf32>
    %11295 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11296 = stablehlo.multiply %11295, %10723 : tensor<768xf32>
    %11297 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11298 = stablehlo.multiply %11297, %10726 : tensor<768x768xf32>
    %11299 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11300 = stablehlo.multiply %11299, %10729 : tensor<768xf32>
    %11301 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11302 = stablehlo.multiply %11301, %10732 : tensor<768xf32>
    %11303 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11304 = stablehlo.multiply %11303, %10735 : tensor<768xf32>
    %11305 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11306 = stablehlo.multiply %11305, %10738 : tensor<3072x768xf32>
    %11307 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11308 = stablehlo.multiply %11307, %10741 : tensor<768xf32>
    %11309 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11310 = stablehlo.multiply %11309, %10744 : tensor<768xf32>
    %11311 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11312 = stablehlo.multiply %11311, %10747 : tensor<3072xf32>
    %11313 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11314 = stablehlo.multiply %11313, %10750 : tensor<768x3072xf32>
    %11315 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11316 = stablehlo.multiply %11315, %10753 : tensor<768xf32>
    %11317 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11318 = stablehlo.multiply %11317, %10756 : tensor<768x768xf32>
    %11319 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11320 = stablehlo.multiply %11319, %10759 : tensor<768xf32>
    %11321 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11322 = stablehlo.multiply %11321, %10762 : tensor<768x768xf32>
    %11323 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11324 = stablehlo.multiply %11323, %10765 : tensor<768xf32>
    %11325 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11326 = stablehlo.multiply %11325, %10768 : tensor<768x768xf32>
    %11327 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11328 = stablehlo.multiply %11327, %10771 : tensor<768xf32>
    %11329 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11330 = stablehlo.multiply %11329, %10774 : tensor<768x768xf32>
    %11331 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11332 = stablehlo.multiply %11331, %10777 : tensor<768xf32>
    %11333 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11334 = stablehlo.multiply %11333, %10780 : tensor<768xf32>
    %11335 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11336 = stablehlo.multiply %11335, %10783 : tensor<768xf32>
    %11337 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11338 = stablehlo.multiply %11337, %10786 : tensor<3072x768xf32>
    %11339 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11340 = stablehlo.multiply %11339, %10789 : tensor<768xf32>
    %11341 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11342 = stablehlo.multiply %11341, %10792 : tensor<768xf32>
    %11343 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11344 = stablehlo.multiply %11343, %10795 : tensor<3072xf32>
    %11345 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11346 = stablehlo.multiply %11345, %10798 : tensor<768x3072xf32>
    %11347 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11348 = stablehlo.multiply %11347, %10801 : tensor<768xf32>
    %11349 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11350 = stablehlo.multiply %11349, %10804 : tensor<768x768xf32>
    %11351 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11352 = stablehlo.multiply %11351, %10807 : tensor<768xf32>
    %11353 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11354 = stablehlo.multiply %11353, %10810 : tensor<768x768xf32>
    %11355 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11356 = stablehlo.multiply %11355, %10813 : tensor<768xf32>
    %11357 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11358 = stablehlo.multiply %11357, %10816 : tensor<768x768xf32>
    %11359 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11360 = stablehlo.multiply %11359, %10819 : tensor<768xf32>
    %11361 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11362 = stablehlo.multiply %11361, %10822 : tensor<768x768xf32>
    %11363 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11364 = stablehlo.multiply %11363, %10825 : tensor<768xf32>
    %11365 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11366 = stablehlo.multiply %11365, %10828 : tensor<768xf32>
    %11367 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11368 = stablehlo.multiply %11367, %10831 : tensor<768xf32>
    %11369 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11370 = stablehlo.multiply %11369, %10834 : tensor<3072x768xf32>
    %11371 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11372 = stablehlo.multiply %11371, %10837 : tensor<768xf32>
    %11373 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11374 = stablehlo.multiply %11373, %10840 : tensor<768xf32>
    %11375 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11376 = stablehlo.multiply %11375, %10843 : tensor<3072xf32>
    %11377 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11378 = stablehlo.multiply %11377, %10846 : tensor<768x3072xf32>
    %11379 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11380 = stablehlo.multiply %11379, %10849 : tensor<768xf32>
    %11381 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11382 = stablehlo.multiply %11381, %10852 : tensor<768x768xf32>
    %11383 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11384 = stablehlo.multiply %11383, %10855 : tensor<768xf32>
    %11385 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11386 = stablehlo.multiply %11385, %10858 : tensor<768x768xf32>
    %11387 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11388 = stablehlo.multiply %11387, %10861 : tensor<768xf32>
    %11389 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11390 = stablehlo.multiply %11389, %10864 : tensor<768x768xf32>
    %11391 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11392 = stablehlo.multiply %11391, %10867 : tensor<768xf32>
    %11393 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11394 = stablehlo.multiply %11393, %10870 : tensor<768x768xf32>
    %11395 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11396 = stablehlo.multiply %11395, %10873 : tensor<768xf32>
    %11397 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11398 = stablehlo.multiply %11397, %10876 : tensor<768xf32>
    %11399 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11400 = stablehlo.multiply %11399, %10879 : tensor<768xf32>
    %11401 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11402 = stablehlo.multiply %11401, %10882 : tensor<3072x768xf32>
    %11403 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11404 = stablehlo.multiply %11403, %10885 : tensor<768xf32>
    %11405 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11406 = stablehlo.multiply %11405, %10888 : tensor<768xf32>
    %11407 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11408 = stablehlo.multiply %11407, %10891 : tensor<3072xf32>
    %11409 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11410 = stablehlo.multiply %11409, %10894 : tensor<768x3072xf32>
    %11411 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11412 = stablehlo.multiply %11411, %10897 : tensor<768xf32>
    %11413 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11414 = stablehlo.multiply %11413, %10900 : tensor<768x768xf32>
    %11415 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11416 = stablehlo.multiply %11415, %10903 : tensor<768xf32>
    %11417 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11418 = stablehlo.multiply %11417, %10906 : tensor<768x768xf32>
    %11419 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11420 = stablehlo.multiply %11419, %10909 : tensor<768xf32>
    %11421 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11422 = stablehlo.multiply %11421, %10912 : tensor<768x768xf32>
    %11423 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11424 = stablehlo.multiply %11423, %10915 : tensor<768xf32>
    %11425 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11426 = stablehlo.multiply %11425, %10918 : tensor<768x768xf32>
    %11427 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11428 = stablehlo.multiply %11427, %10921 : tensor<768xf32>
    %11429 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11430 = stablehlo.multiply %11429, %10924 : tensor<768xf32>
    %11431 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11432 = stablehlo.multiply %11431, %10927 : tensor<768xf32>
    %11433 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11434 = stablehlo.multiply %11433, %10930 : tensor<3072x768xf32>
    %11435 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11436 = stablehlo.multiply %11435, %10933 : tensor<768xf32>
    %11437 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11438 = stablehlo.multiply %11437, %10936 : tensor<768xf32>
    %11439 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11440 = stablehlo.multiply %11439, %10939 : tensor<3072xf32>
    %11441 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11442 = stablehlo.multiply %11441, %10942 : tensor<768x3072xf32>
    %11443 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11444 = stablehlo.multiply %11443, %10945 : tensor<768xf32>
    %11445 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11446 = stablehlo.multiply %11445, %10948 : tensor<768x768xf32>
    %11447 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11448 = stablehlo.multiply %11447, %10951 : tensor<768xf32>
    %11449 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11450 = stablehlo.multiply %11449, %10954 : tensor<768x768xf32>
    %11451 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11452 = stablehlo.multiply %11451, %10957 : tensor<768xf32>
    %11453 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11454 = stablehlo.multiply %11453, %10960 : tensor<768x768xf32>
    %11455 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11456 = stablehlo.multiply %11455, %10963 : tensor<768xf32>
    %11457 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11458 = stablehlo.multiply %11457, %10966 : tensor<768x768xf32>
    %11459 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11460 = stablehlo.multiply %11459, %10969 : tensor<768xf32>
    %11461 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11462 = stablehlo.multiply %11461, %10972 : tensor<768xf32>
    %11463 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11464 = stablehlo.multiply %11463, %10975 : tensor<768xf32>
    %11465 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11466 = stablehlo.multiply %11465, %10978 : tensor<3072x768xf32>
    %11467 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11468 = stablehlo.multiply %11467, %10981 : tensor<768xf32>
    %11469 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11470 = stablehlo.multiply %11469, %10984 : tensor<768xf32>
    %11471 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11472 = stablehlo.multiply %11471, %10987 : tensor<3072xf32>
    %11473 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11474 = stablehlo.multiply %11473, %10990 : tensor<768x3072xf32>
    %11475 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11476 = stablehlo.multiply %11475, %10993 : tensor<768xf32>
    %11477 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11478 = stablehlo.multiply %11477, %10996 : tensor<768x768xf32>
    %11479 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11480 = stablehlo.multiply %11479, %10999 : tensor<768xf32>
    %11481 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11482 = stablehlo.multiply %11481, %11002 : tensor<768x768xf32>
    %11483 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11484 = stablehlo.multiply %11483, %11005 : tensor<768xf32>
    %11485 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11486 = stablehlo.multiply %11485, %11008 : tensor<768x768xf32>
    %11487 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11488 = stablehlo.multiply %11487, %11011 : tensor<768xf32>
    %11489 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11490 = stablehlo.multiply %11489, %11014 : tensor<768x768xf32>
    %11491 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11492 = stablehlo.multiply %11491, %11017 : tensor<768xf32>
    %11493 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11494 = stablehlo.multiply %11493, %11020 : tensor<768xf32>
    %11495 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11496 = stablehlo.multiply %11495, %11023 : tensor<768xf32>
    %11497 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11498 = stablehlo.multiply %11497, %11026 : tensor<3072x768xf32>
    %11499 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11500 = stablehlo.multiply %11499, %11029 : tensor<768xf32>
    %11501 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11502 = stablehlo.multiply %11501, %11032 : tensor<768xf32>
    %11503 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11504 = stablehlo.multiply %11503, %11035 : tensor<3072xf32>
    %11505 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11506 = stablehlo.multiply %11505, %11038 : tensor<768x3072xf32>
    %11507 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11508 = stablehlo.multiply %11507, %11041 : tensor<768xf32>
    %11509 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11510 = stablehlo.multiply %11509, %11044 : tensor<768x768xf32>
    %11511 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11512 = stablehlo.multiply %11511, %11047 : tensor<768xf32>
    %11513 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11514 = stablehlo.multiply %11513, %11050 : tensor<768x768xf32>
    %11515 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11516 = stablehlo.multiply %11515, %11053 : tensor<768xf32>
    %11517 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11518 = stablehlo.multiply %11517, %11056 : tensor<768x768xf32>
    %11519 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11520 = stablehlo.multiply %11519, %11059 : tensor<768xf32>
    %11521 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11522 = stablehlo.multiply %11521, %11062 : tensor<768x768xf32>
    %11523 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11524 = stablehlo.multiply %11523, %11065 : tensor<768xf32>
    %11525 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11526 = stablehlo.multiply %11525, %11068 : tensor<768xf32>
    %11527 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11528 = stablehlo.multiply %11527, %11071 : tensor<768xf32>
    %11529 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11530 = stablehlo.multiply %11529, %11074 : tensor<3072x768xf32>
    %11531 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11532 = stablehlo.multiply %11531, %11077 : tensor<768xf32>
    %11533 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11534 = stablehlo.multiply %11533, %11080 : tensor<768xf32>
    %11535 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11536 = stablehlo.multiply %11535, %11083 : tensor<3072xf32>
    %11537 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11538 = stablehlo.multiply %11537, %11086 : tensor<768x3072xf32>
    %11539 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11540 = stablehlo.multiply %11539, %11089 : tensor<768xf32>
    %11541 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11542 = stablehlo.multiply %11541, %11092 : tensor<768x768xf32>
    %11543 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11544 = stablehlo.multiply %11543, %11095 : tensor<768xf32>
    %11545 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11546 = stablehlo.multiply %11545, %11098 : tensor<768x768xf32>
    %11547 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11548 = stablehlo.multiply %11547, %11101 : tensor<768xf32>
    %11549 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11550 = stablehlo.multiply %11549, %11104 : tensor<768x768xf32>
    %11551 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11552 = stablehlo.multiply %11551, %11107 : tensor<768xf32>
    %11553 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11554 = stablehlo.multiply %11553, %11110 : tensor<768x768xf32>
    %11555 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11556 = stablehlo.multiply %11555, %11113 : tensor<768xf32>
    %11557 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11558 = stablehlo.multiply %11557, %11116 : tensor<768xf32>
    %11559 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11560 = stablehlo.multiply %11559, %11119 : tensor<768xf32>
    %11561 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %11562 = stablehlo.multiply %11561, %11122 : tensor<3072x768xf32>
    %11563 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11564 = stablehlo.multiply %11563, %11125 : tensor<768xf32>
    %11565 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11566 = stablehlo.multiply %11565, %11128 : tensor<768xf32>
    %11567 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %11568 = stablehlo.multiply %11567, %11131 : tensor<3072xf32>
    %11569 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %11570 = stablehlo.multiply %11569, %11134 : tensor<768x3072xf32>
    %11571 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11572 = stablehlo.multiply %11571, %11137 : tensor<768xf32>
    %11573 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11574 = stablehlo.multiply %11573, %11140 : tensor<768xf32>
    %11575 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %11576 = stablehlo.multiply %11575, %11143 : tensor<30522xf32>
    %11577 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11578 = stablehlo.multiply %11577, %11146 : tensor<768xf32>
    %11579 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %11580 = stablehlo.multiply %11579, %11149 : tensor<768x768xf32>
    %11581 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %11582 = stablehlo.multiply %11581, %11152 : tensor<30522x768xf32>
    %11583 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11584 = stablehlo.multiply %11583, %11155 : tensor<768xf32>
    %11585 = stablehlo.broadcast_in_dim %11180, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %11586 = stablehlo.multiply %11585, %11158 : tensor<768xf32>
    %11587 = stablehlo.compare  LT, %arg610, %c_756,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %11588 = stablehlo.add %arg610, %c_757 : tensor<i32>
    %11589 = call @_where_334(%11587, %11588, %c_756) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %11590 = stablehlo.add %arg0, %11182 : tensor<512x768xf32>
    %11591 = stablehlo.add %arg1, %11184 : tensor<2x768xf32>
    %11592 = stablehlo.add %arg2, %11186 : tensor<30522x768xf32>
    %11593 = stablehlo.add %arg3, %11188 : tensor<768xf32>
    %11594 = stablehlo.add %arg4, %11190 : tensor<768x768xf32>
    %11595 = stablehlo.add %arg5, %11192 : tensor<768xf32>
    %11596 = stablehlo.add %arg6, %11194 : tensor<768x768xf32>
    %11597 = stablehlo.add %arg7, %11196 : tensor<768xf32>
    %11598 = stablehlo.add %arg8, %11198 : tensor<768x768xf32>
    %11599 = stablehlo.add %arg9, %11200 : tensor<768xf32>
    %11600 = stablehlo.add %arg10, %11202 : tensor<768x768xf32>
    %11601 = stablehlo.add %arg11, %11204 : tensor<768xf32>
    %11602 = stablehlo.add %arg12, %11206 : tensor<768xf32>
    %11603 = stablehlo.add %arg13, %11208 : tensor<768xf32>
    %11604 = stablehlo.add %arg14, %11210 : tensor<3072x768xf32>
    %11605 = stablehlo.add %arg15, %11212 : tensor<768xf32>
    %11606 = stablehlo.add %arg16, %11214 : tensor<768xf32>
    %11607 = stablehlo.add %arg17, %11216 : tensor<3072xf32>
    %11608 = stablehlo.add %arg18, %11218 : tensor<768x3072xf32>
    %11609 = stablehlo.add %arg19, %11220 : tensor<768xf32>
    %11610 = stablehlo.add %arg20, %11222 : tensor<768x768xf32>
    %11611 = stablehlo.add %arg21, %11224 : tensor<768xf32>
    %11612 = stablehlo.add %arg22, %11226 : tensor<768x768xf32>
    %11613 = stablehlo.add %arg23, %11228 : tensor<768xf32>
    %11614 = stablehlo.add %arg24, %11230 : tensor<768x768xf32>
    %11615 = stablehlo.add %arg25, %11232 : tensor<768xf32>
    %11616 = stablehlo.add %arg26, %11234 : tensor<768x768xf32>
    %11617 = stablehlo.add %arg27, %11236 : tensor<768xf32>
    %11618 = stablehlo.add %arg28, %11238 : tensor<768xf32>
    %11619 = stablehlo.add %arg29, %11240 : tensor<768xf32>
    %11620 = stablehlo.add %arg30, %11242 : tensor<3072x768xf32>
    %11621 = stablehlo.add %arg31, %11244 : tensor<768xf32>
    %11622 = stablehlo.add %arg32, %11246 : tensor<768xf32>
    %11623 = stablehlo.add %arg33, %11248 : tensor<3072xf32>
    %11624 = stablehlo.add %arg34, %11250 : tensor<768x3072xf32>
    %11625 = stablehlo.add %arg35, %11252 : tensor<768xf32>
    %11626 = stablehlo.add %arg36, %11254 : tensor<768x768xf32>
    %11627 = stablehlo.add %arg37, %11256 : tensor<768xf32>
    %11628 = stablehlo.add %arg38, %11258 : tensor<768x768xf32>
    %11629 = stablehlo.add %arg39, %11260 : tensor<768xf32>
    %11630 = stablehlo.add %arg40, %11262 : tensor<768x768xf32>
    %11631 = stablehlo.add %arg41, %11264 : tensor<768xf32>
    %11632 = stablehlo.add %arg42, %11266 : tensor<768x768xf32>
    %11633 = stablehlo.add %arg43, %11268 : tensor<768xf32>
    %11634 = stablehlo.add %arg44, %11270 : tensor<768xf32>
    %11635 = stablehlo.add %arg45, %11272 : tensor<768xf32>
    %11636 = stablehlo.add %arg46, %11274 : tensor<3072x768xf32>
    %11637 = stablehlo.add %arg47, %11276 : tensor<768xf32>
    %11638 = stablehlo.add %arg48, %11278 : tensor<768xf32>
    %11639 = stablehlo.add %arg49, %11280 : tensor<3072xf32>
    %11640 = stablehlo.add %arg50, %11282 : tensor<768x3072xf32>
    %11641 = stablehlo.add %arg51, %11284 : tensor<768xf32>
    %11642 = stablehlo.add %arg52, %11286 : tensor<768x768xf32>
    %11643 = stablehlo.add %arg53, %11288 : tensor<768xf32>
    %11644 = stablehlo.add %arg54, %11290 : tensor<768x768xf32>
    %11645 = stablehlo.add %arg55, %11292 : tensor<768xf32>
    %11646 = stablehlo.add %arg56, %11294 : tensor<768x768xf32>
    %11647 = stablehlo.add %arg57, %11296 : tensor<768xf32>
    %11648 = stablehlo.add %arg58, %11298 : tensor<768x768xf32>
    %11649 = stablehlo.add %arg59, %11300 : tensor<768xf32>
    %11650 = stablehlo.add %arg60, %11302 : tensor<768xf32>
    %11651 = stablehlo.add %arg61, %11304 : tensor<768xf32>
    %11652 = stablehlo.add %arg62, %11306 : tensor<3072x768xf32>
    %11653 = stablehlo.add %arg63, %11308 : tensor<768xf32>
    %11654 = stablehlo.add %arg64, %11310 : tensor<768xf32>
    %11655 = stablehlo.add %arg65, %11312 : tensor<3072xf32>
    %11656 = stablehlo.add %arg66, %11314 : tensor<768x3072xf32>
    %11657 = stablehlo.add %arg67, %11316 : tensor<768xf32>
    %11658 = stablehlo.add %arg68, %11318 : tensor<768x768xf32>
    %11659 = stablehlo.add %arg69, %11320 : tensor<768xf32>
    %11660 = stablehlo.add %arg70, %11322 : tensor<768x768xf32>
    %11661 = stablehlo.add %arg71, %11324 : tensor<768xf32>
    %11662 = stablehlo.add %arg72, %11326 : tensor<768x768xf32>
    %11663 = stablehlo.add %arg73, %11328 : tensor<768xf32>
    %11664 = stablehlo.add %arg74, %11330 : tensor<768x768xf32>
    %11665 = stablehlo.add %arg75, %11332 : tensor<768xf32>
    %11666 = stablehlo.add %arg76, %11334 : tensor<768xf32>
    %11667 = stablehlo.add %arg77, %11336 : tensor<768xf32>
    %11668 = stablehlo.add %arg78, %11338 : tensor<3072x768xf32>
    %11669 = stablehlo.add %arg79, %11340 : tensor<768xf32>
    %11670 = stablehlo.add %arg80, %11342 : tensor<768xf32>
    %11671 = stablehlo.add %arg81, %11344 : tensor<3072xf32>
    %11672 = stablehlo.add %arg82, %11346 : tensor<768x3072xf32>
    %11673 = stablehlo.add %arg83, %11348 : tensor<768xf32>
    %11674 = stablehlo.add %arg84, %11350 : tensor<768x768xf32>
    %11675 = stablehlo.add %arg85, %11352 : tensor<768xf32>
    %11676 = stablehlo.add %arg86, %11354 : tensor<768x768xf32>
    %11677 = stablehlo.add %arg87, %11356 : tensor<768xf32>
    %11678 = stablehlo.add %arg88, %11358 : tensor<768x768xf32>
    %11679 = stablehlo.add %arg89, %11360 : tensor<768xf32>
    %11680 = stablehlo.add %arg90, %11362 : tensor<768x768xf32>
    %11681 = stablehlo.add %arg91, %11364 : tensor<768xf32>
    %11682 = stablehlo.add %arg92, %11366 : tensor<768xf32>
    %11683 = stablehlo.add %arg93, %11368 : tensor<768xf32>
    %11684 = stablehlo.add %arg94, %11370 : tensor<3072x768xf32>
    %11685 = stablehlo.add %arg95, %11372 : tensor<768xf32>
    %11686 = stablehlo.add %arg96, %11374 : tensor<768xf32>
    %11687 = stablehlo.add %arg97, %11376 : tensor<3072xf32>
    %11688 = stablehlo.add %arg98, %11378 : tensor<768x3072xf32>
    %11689 = stablehlo.add %arg99, %11380 : tensor<768xf32>
    %11690 = stablehlo.add %arg100, %11382 : tensor<768x768xf32>
    %11691 = stablehlo.add %arg101, %11384 : tensor<768xf32>
    %11692 = stablehlo.add %arg102, %11386 : tensor<768x768xf32>
    %11693 = stablehlo.add %arg103, %11388 : tensor<768xf32>
    %11694 = stablehlo.add %arg104, %11390 : tensor<768x768xf32>
    %11695 = stablehlo.add %arg105, %11392 : tensor<768xf32>
    %11696 = stablehlo.add %arg106, %11394 : tensor<768x768xf32>
    %11697 = stablehlo.add %arg107, %11396 : tensor<768xf32>
    %11698 = stablehlo.add %arg108, %11398 : tensor<768xf32>
    %11699 = stablehlo.add %arg109, %11400 : tensor<768xf32>
    %11700 = stablehlo.add %arg110, %11402 : tensor<3072x768xf32>
    %11701 = stablehlo.add %arg111, %11404 : tensor<768xf32>
    %11702 = stablehlo.add %arg112, %11406 : tensor<768xf32>
    %11703 = stablehlo.add %arg113, %11408 : tensor<3072xf32>
    %11704 = stablehlo.add %arg114, %11410 : tensor<768x3072xf32>
    %11705 = stablehlo.add %arg115, %11412 : tensor<768xf32>
    %11706 = stablehlo.add %arg116, %11414 : tensor<768x768xf32>
    %11707 = stablehlo.add %arg117, %11416 : tensor<768xf32>
    %11708 = stablehlo.add %arg118, %11418 : tensor<768x768xf32>
    %11709 = stablehlo.add %arg119, %11420 : tensor<768xf32>
    %11710 = stablehlo.add %arg120, %11422 : tensor<768x768xf32>
    %11711 = stablehlo.add %arg121, %11424 : tensor<768xf32>
    %11712 = stablehlo.add %arg122, %11426 : tensor<768x768xf32>
    %11713 = stablehlo.add %arg123, %11428 : tensor<768xf32>
    %11714 = stablehlo.add %arg124, %11430 : tensor<768xf32>
    %11715 = stablehlo.add %arg125, %11432 : tensor<768xf32>
    %11716 = stablehlo.add %arg126, %11434 : tensor<3072x768xf32>
    %11717 = stablehlo.add %arg127, %11436 : tensor<768xf32>
    %11718 = stablehlo.add %arg128, %11438 : tensor<768xf32>
    %11719 = stablehlo.add %arg129, %11440 : tensor<3072xf32>
    %11720 = stablehlo.add %arg130, %11442 : tensor<768x3072xf32>
    %11721 = stablehlo.add %arg131, %11444 : tensor<768xf32>
    %11722 = stablehlo.add %arg132, %11446 : tensor<768x768xf32>
    %11723 = stablehlo.add %arg133, %11448 : tensor<768xf32>
    %11724 = stablehlo.add %arg134, %11450 : tensor<768x768xf32>
    %11725 = stablehlo.add %arg135, %11452 : tensor<768xf32>
    %11726 = stablehlo.add %arg136, %11454 : tensor<768x768xf32>
    %11727 = stablehlo.add %arg137, %11456 : tensor<768xf32>
    %11728 = stablehlo.add %arg138, %11458 : tensor<768x768xf32>
    %11729 = stablehlo.add %arg139, %11460 : tensor<768xf32>
    %11730 = stablehlo.add %arg140, %11462 : tensor<768xf32>
    %11731 = stablehlo.add %arg141, %11464 : tensor<768xf32>
    %11732 = stablehlo.add %arg142, %11466 : tensor<3072x768xf32>
    %11733 = stablehlo.add %arg143, %11468 : tensor<768xf32>
    %11734 = stablehlo.add %arg144, %11470 : tensor<768xf32>
    %11735 = stablehlo.add %arg145, %11472 : tensor<3072xf32>
    %11736 = stablehlo.add %arg146, %11474 : tensor<768x3072xf32>
    %11737 = stablehlo.add %arg147, %11476 : tensor<768xf32>
    %11738 = stablehlo.add %arg148, %11478 : tensor<768x768xf32>
    %11739 = stablehlo.add %arg149, %11480 : tensor<768xf32>
    %11740 = stablehlo.add %arg150, %11482 : tensor<768x768xf32>
    %11741 = stablehlo.add %arg151, %11484 : tensor<768xf32>
    %11742 = stablehlo.add %arg152, %11486 : tensor<768x768xf32>
    %11743 = stablehlo.add %arg153, %11488 : tensor<768xf32>
    %11744 = stablehlo.add %arg154, %11490 : tensor<768x768xf32>
    %11745 = stablehlo.add %arg155, %11492 : tensor<768xf32>
    %11746 = stablehlo.add %arg156, %11494 : tensor<768xf32>
    %11747 = stablehlo.add %arg157, %11496 : tensor<768xf32>
    %11748 = stablehlo.add %arg158, %11498 : tensor<3072x768xf32>
    %11749 = stablehlo.add %arg159, %11500 : tensor<768xf32>
    %11750 = stablehlo.add %arg160, %11502 : tensor<768xf32>
    %11751 = stablehlo.add %arg161, %11504 : tensor<3072xf32>
    %11752 = stablehlo.add %arg162, %11506 : tensor<768x3072xf32>
    %11753 = stablehlo.add %arg163, %11508 : tensor<768xf32>
    %11754 = stablehlo.add %arg164, %11510 : tensor<768x768xf32>
    %11755 = stablehlo.add %arg165, %11512 : tensor<768xf32>
    %11756 = stablehlo.add %arg166, %11514 : tensor<768x768xf32>
    %11757 = stablehlo.add %arg167, %11516 : tensor<768xf32>
    %11758 = stablehlo.add %arg168, %11518 : tensor<768x768xf32>
    %11759 = stablehlo.add %arg169, %11520 : tensor<768xf32>
    %11760 = stablehlo.add %arg170, %11522 : tensor<768x768xf32>
    %11761 = stablehlo.add %arg171, %11524 : tensor<768xf32>
    %11762 = stablehlo.add %arg172, %11526 : tensor<768xf32>
    %11763 = stablehlo.add %arg173, %11528 : tensor<768xf32>
    %11764 = stablehlo.add %arg174, %11530 : tensor<3072x768xf32>
    %11765 = stablehlo.add %arg175, %11532 : tensor<768xf32>
    %11766 = stablehlo.add %arg176, %11534 : tensor<768xf32>
    %11767 = stablehlo.add %arg177, %11536 : tensor<3072xf32>
    %11768 = stablehlo.add %arg178, %11538 : tensor<768x3072xf32>
    %11769 = stablehlo.add %arg179, %11540 : tensor<768xf32>
    %11770 = stablehlo.add %arg180, %11542 : tensor<768x768xf32>
    %11771 = stablehlo.add %arg181, %11544 : tensor<768xf32>
    %11772 = stablehlo.add %arg182, %11546 : tensor<768x768xf32>
    %11773 = stablehlo.add %arg183, %11548 : tensor<768xf32>
    %11774 = stablehlo.add %arg184, %11550 : tensor<768x768xf32>
    %11775 = stablehlo.add %arg185, %11552 : tensor<768xf32>
    %11776 = stablehlo.add %arg186, %11554 : tensor<768x768xf32>
    %11777 = stablehlo.add %arg187, %11556 : tensor<768xf32>
    %11778 = stablehlo.add %arg188, %11558 : tensor<768xf32>
    %11779 = stablehlo.add %arg189, %11560 : tensor<768xf32>
    %11780 = stablehlo.add %arg190, %11562 : tensor<3072x768xf32>
    %11781 = stablehlo.add %arg191, %11564 : tensor<768xf32>
    %11782 = stablehlo.add %arg192, %11566 : tensor<768xf32>
    %11783 = stablehlo.add %arg193, %11568 : tensor<3072xf32>
    %11784 = stablehlo.add %arg194, %11570 : tensor<768x3072xf32>
    %11785 = stablehlo.add %arg195, %11572 : tensor<768xf32>
    %11786 = stablehlo.add %arg196, %11574 : tensor<768xf32>
    %11787 = stablehlo.add %arg197, %11576 : tensor<30522xf32>
    %11788 = stablehlo.add %arg198, %11578 : tensor<768xf32>
    %11789 = stablehlo.add %arg199, %11580 : tensor<768x768xf32>
    %11790 = stablehlo.add %arg200, %11582 : tensor<30522x768xf32>
    %11791 = stablehlo.add %arg201, %11584 : tensor<768xf32>
    %11792 = stablehlo.add %arg202, %11586 : tensor<768xf32>
    return %11590, %11591, %11592, %11593, %11594, %11595, %11596, %11597, %11598, %11599, %11600, %11601, %11602, %11603, %11604, %11605, %11606, %11607, %11608, %11609, %11610, %11611, %11612, %11613, %11614, %11615, %11616, %11617, %11618, %11619, %11620, %11621, %11622, %11623, %11624, %11625, %11626, %11627, %11628, %11629, %11630, %11631, %11632, %11633, %11634, %11635, %11636, %11637, %11638, %11639, %11640, %11641, %11642, %11643, %11644, %11645, %11646, %11647, %11648, %11649, %11650, %11651, %11652, %11653, %11654, %11655, %11656, %11657, %11658, %11659, %11660, %11661, %11662, %11663, %11664, %11665, %11666, %11667, %11668, %11669, %11670, %11671, %11672, %11673, %11674, %11675, %11676, %11677, %11678, %11679, %11680, %11681, %11682, %11683, %11684, %11685, %11686, %11687, %11688, %11689, %11690, %11691, %11692, %11693, %11694, %11695, %11696, %11697, %11698, %11699, %11700, %11701, %11702, %11703, %11704, %11705, %11706, %11707, %11708, %11709, %11710, %11711, %11712, %11713, %11714, %11715, %11716, %11717, %11718, %11719, %11720, %11721, %11722, %11723, %11724, %11725, %11726, %11727, %11728, %11729, %11730, %11731, %11732, %11733, %11734, %11735, %11736, %11737, %11738, %11739, %11740, %11741, %11742, %11743, %11744, %11745, %11746, %11747, %11748, %11749, %11750, %11751, %11752, %11753, %11754, %11755, %11756, %11757, %11758, %11759, %11760, %11761, %11762, %11763, %11764, %11765, %11766, %11767, %11768, %11769, %11770, %11771, %11772, %11773, %11774, %11775, %11776, %11777, %11778, %11779, %11780, %11781, %11782, %11783, %11784, %11785, %11786, %11787, %11788, %11789, %11790, %11791, %11792, %8513, %6282, %6287, %6292, %6297, %6302, %6307, %6312, %6317, %6322, %6327, %6332, %6337, %6342, %6347, %6352, %6357, %6362, %6367, %6372, %6377, %6382, %6387, %6392, %6397, %6402, %6407, %6412, %6417, %6422, %6427, %6432, %6437, %6442, %6447, %6452, %6457, %6462, %6467, %6472, %6477, %6482, %6487, %6492, %6497, %6502, %6507, %6512, %6517, %6522, %6527, %6532, %6537, %6542, %6547, %6552, %6557, %6562, %6567, %6572, %6577, %6582, %6587, %6592, %6597, %6602, %6607, %6612, %6617, %6622, %6627, %6632, %6637, %6642, %6647, %6652, %6657, %6662, %6667, %6672, %6677, %6682, %6687, %6692, %6697, %6702, %6707, %6712, %6717, %6722, %6727, %6732, %6737, %6742, %6747, %6752, %6757, %6762, %6767, %6772, %6777, %6782, %6787, %6792, %6797, %6802, %6807, %6812, %6817, %6822, %6827, %6832, %6837, %6842, %6847, %6852, %6857, %6862, %6867, %6872, %6877, %6882, %6887, %6892, %6897, %6902, %6907, %6912, %6917, %6922, %6927, %6932, %6937, %6942, %6947, %6952, %6957, %6962, %6967, %6972, %6977, %6982, %6987, %6992, %6997, %7002, %7007, %7012, %7017, %7022, %7027, %7032, %7037, %7042, %7047, %7052, %7057, %7062, %7067, %7072, %7077, %7082, %7087, %7092, %7097, %7102, %7107, %7112, %7117, %7122, %7127, %7132, %7137, %7142, %7147, %7152, %7157, %7162, %7167, %7172, %7177, %7182, %7187, %7192, %7197, %7202, %7207, %7212, %7217, %7222, %7227, %7232, %7237, %7242, %7247, %7252, %7257, %7262, %7267, %7272, %7277, %7282, %7287, %7292, %7298, %7304, %7310, %7316, %7322, %7328, %7334, %7340, %7346, %7352, %7358, %7364, %7370, %7376, %7382, %7388, %7394, %7400, %7406, %7412, %7418, %7424, %7430, %7436, %7442, %7448, %7454, %7460, %7466, %7472, %7478, %7484, %7490, %7496, %7502, %7508, %7514, %7520, %7526, %7532, %7538, %7544, %7550, %7556, %7562, %7568, %7574, %7580, %7586, %7592, %7598, %7604, %7610, %7616, %7622, %7628, %7634, %7640, %7646, %7652, %7658, %7664, %7670, %7676, %7682, %7688, %7694, %7700, %7706, %7712, %7718, %7724, %7730, %7736, %7742, %7748, %7754, %7760, %7766, %7772, %7778, %7784, %7790, %7796, %7802, %7808, %7814, %7820, %7826, %7832, %7838, %7844, %7850, %7856, %7862, %7868, %7874, %7880, %7886, %7892, %7898, %7904, %7910, %7916, %7922, %7928, %7934, %7940, %7946, %7952, %7958, %7964, %7970, %7976, %7982, %7988, %7994, %8000, %8006, %8012, %8018, %8024, %8030, %8036, %8042, %8048, %8054, %8060, %8066, %8072, %8078, %8084, %8090, %8096, %8102, %8108, %8114, %8120, %8126, %8132, %8138, %8144, %8150, %8156, %8162, %8168, %8174, %8180, %8186, %8192, %8198, %8204, %8210, %8216, %8222, %8228, %8234, %8240, %8246, %8252, %8258, %8264, %8270, %8276, %8282, %8288, %8294, %8300, %8306, %8312, %8318, %8324, %8330, %8336, %8342, %8348, %8354, %8360, %8366, %8372, %8378, %8384, %8390, %8396, %8402, %8408, %8414, %8420, %8426, %8432, %8438, %8444, %8450, %8456, %8462, %8468, %8474, %8480, %8486, %8492, %8498, %8504, %8510, %11589, %2495, %2490, %2488, %2490, %2490 : tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<30522x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_threefry_fold_in(%arg0: tensor<2xui32>, %arg1: tensor<ui32>) -> tensor<2xui32> {
    %c = stablehlo.constant dense<32> : tensor<ui32>
    %0 = stablehlo.shift_right_logical %arg1, %c : tensor<ui32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %c_0 = stablehlo.constant dense<4294967295> : tensor<ui32>
    %2 = stablehlo.and %arg1, %c_0 : tensor<ui32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %4 = stablehlo.concatenate %1, %3, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    %5 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %6 = stablehlo.reshape %5 : (tensor<1xui32>) -> tensor<ui32>
    %7 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %8 = stablehlo.reshape %7 : (tensor<1xui32>) -> tensor<ui32>
    %9 = stablehlo.slice %4 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %10 = stablehlo.slice %4 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %11:2 = call @threefry2x32(%6, %8, %9, %10) : (tensor<ui32>, tensor<ui32>, tensor<1xui32>, tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>)
    %12 = stablehlo.concatenate %11#0, %11#1, dim = 0 : (tensor<1xui32>, tensor<1xui32>) -> tensor<2xui32>
    return %12 : tensor<2xui32>
  }
  func.func private @threefry2x32(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<1xui32>, %arg3: tensor<1xui32>) -> (tensor<1xui32>, tensor<1xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<1xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<1xui32>
    %6 = stablehlo.add %3, %5 : tensor<1xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<1xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<1xui32>
    %11 = stablehlo.or %8, %10 : tensor<1xui32>
    %12 = stablehlo.xor %6, %11 : tensor<1xui32>
    %13 = stablehlo.add %6, %12 : tensor<1xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<1xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<1xui32>
    %18 = stablehlo.or %15, %17 : tensor<1xui32>
    %19 = stablehlo.xor %13, %18 : tensor<1xui32>
    %20 = stablehlo.add %13, %19 : tensor<1xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<1xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<1xui32>
    %25 = stablehlo.or %22, %24 : tensor<1xui32>
    %26 = stablehlo.xor %20, %25 : tensor<1xui32>
    %27 = stablehlo.add %20, %26 : tensor<1xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<1xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<1xui32>
    %32 = stablehlo.or %29, %31 : tensor<1xui32>
    %33 = stablehlo.xor %27, %32 : tensor<1xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %35 = stablehlo.add %27, %34 : tensor<1xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %37 = stablehlo.add %33, %36 : tensor<1xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %39 = stablehlo.add %37, %38 : tensor<1xui32>
    %40 = stablehlo.add %35, %39 : tensor<1xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<1xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<1xui32>
    %45 = stablehlo.or %42, %44 : tensor<1xui32>
    %46 = stablehlo.xor %40, %45 : tensor<1xui32>
    %47 = stablehlo.add %40, %46 : tensor<1xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<1xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<1xui32>
    %52 = stablehlo.or %49, %51 : tensor<1xui32>
    %53 = stablehlo.xor %47, %52 : tensor<1xui32>
    %54 = stablehlo.add %47, %53 : tensor<1xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<1xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<1xui32>
    %59 = stablehlo.or %56, %58 : tensor<1xui32>
    %60 = stablehlo.xor %54, %59 : tensor<1xui32>
    %61 = stablehlo.add %54, %60 : tensor<1xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<1xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<1xui32>
    %66 = stablehlo.or %63, %65 : tensor<1xui32>
    %67 = stablehlo.xor %61, %66 : tensor<1xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %69 = stablehlo.add %61, %68 : tensor<1xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %71 = stablehlo.add %67, %70 : tensor<1xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %73 = stablehlo.add %71, %72 : tensor<1xui32>
    %74 = stablehlo.add %69, %73 : tensor<1xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<1xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<1xui32>
    %79 = stablehlo.or %76, %78 : tensor<1xui32>
    %80 = stablehlo.xor %74, %79 : tensor<1xui32>
    %81 = stablehlo.add %74, %80 : tensor<1xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<1xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<1xui32>
    %86 = stablehlo.or %83, %85 : tensor<1xui32>
    %87 = stablehlo.xor %81, %86 : tensor<1xui32>
    %88 = stablehlo.add %81, %87 : tensor<1xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<1xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<1xui32>
    %93 = stablehlo.or %90, %92 : tensor<1xui32>
    %94 = stablehlo.xor %88, %93 : tensor<1xui32>
    %95 = stablehlo.add %88, %94 : tensor<1xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<1xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<1xui32>
    %100 = stablehlo.or %97, %99 : tensor<1xui32>
    %101 = stablehlo.xor %95, %100 : tensor<1xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %103 = stablehlo.add %95, %102 : tensor<1xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %105 = stablehlo.add %101, %104 : tensor<1xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %107 = stablehlo.add %105, %106 : tensor<1xui32>
    %108 = stablehlo.add %103, %107 : tensor<1xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<1xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<1xui32>
    %113 = stablehlo.or %110, %112 : tensor<1xui32>
    %114 = stablehlo.xor %108, %113 : tensor<1xui32>
    %115 = stablehlo.add %108, %114 : tensor<1xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<1xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<1xui32>
    %120 = stablehlo.or %117, %119 : tensor<1xui32>
    %121 = stablehlo.xor %115, %120 : tensor<1xui32>
    %122 = stablehlo.add %115, %121 : tensor<1xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<1xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<1xui32>
    %127 = stablehlo.or %124, %126 : tensor<1xui32>
    %128 = stablehlo.xor %122, %127 : tensor<1xui32>
    %129 = stablehlo.add %122, %128 : tensor<1xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<1xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<1xui32>
    %134 = stablehlo.or %131, %133 : tensor<1xui32>
    %135 = stablehlo.xor %129, %134 : tensor<1xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %137 = stablehlo.add %129, %136 : tensor<1xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %139 = stablehlo.add %135, %138 : tensor<1xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %141 = stablehlo.add %139, %140 : tensor<1xui32>
    %142 = stablehlo.add %137, %141 : tensor<1xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<1xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<1xui32>
    %147 = stablehlo.or %144, %146 : tensor<1xui32>
    %148 = stablehlo.xor %142, %147 : tensor<1xui32>
    %149 = stablehlo.add %142, %148 : tensor<1xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<1xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<1xui32>
    %154 = stablehlo.or %151, %153 : tensor<1xui32>
    %155 = stablehlo.xor %149, %154 : tensor<1xui32>
    %156 = stablehlo.add %149, %155 : tensor<1xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<1xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<1xui32>
    %161 = stablehlo.or %158, %160 : tensor<1xui32>
    %162 = stablehlo.xor %156, %161 : tensor<1xui32>
    %163 = stablehlo.add %156, %162 : tensor<1xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<1xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<1xui32>
    %168 = stablehlo.or %165, %167 : tensor<1xui32>
    %169 = stablehlo.xor %163, %168 : tensor<1xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %171 = stablehlo.add %163, %170 : tensor<1xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %173 = stablehlo.add %169, %172 : tensor<1xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<1xui32>
    %175 = stablehlo.add %173, %174 : tensor<1xui32>
    return %171, %175 : tensor<1xui32>, tensor<1xui32>
  }
  func.func private @_bernoulli(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x512x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x512x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<64x512x768xi1>
    return %2 : tensor<64x512x768xi1>
  }
  func.func private @_uniform(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x512x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x512x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x512x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x512x768xui64>
    %c = stablehlo.constant dense<393216> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x512x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x512x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x512x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x512x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x512x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x512x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x512x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x512x768xui64>) -> tensor<64x512x768xui32>
    %23:2 = call @threefry2x32_30(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x512x768xui32>, tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x512x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x512x768xui32>) -> tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x512x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x512x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x512x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x512x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x512x768xf32>
    return %38 : tensor<64x512x768xf32>
  }
  func.func private @threefry2x32_30(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x512x768xui32>, %arg3: tensor<64x512x768xui32>) -> (tensor<64x512x768xui32>, tensor<64x512x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x512x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x512x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x512x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x512x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x512x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x512x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x512x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x512x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x512x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x512x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x512x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x512x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x512x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x512x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x512x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x512x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x512x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x512x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x512x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x512x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x512x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x512x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x512x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x512x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x512x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x512x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x512x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x512x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x512x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x512x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x512x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x512x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x512x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x512x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x512x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x512x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x512x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x512x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x512x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x512x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x512x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x512x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x512x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x512x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x512x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x512x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x512x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x512x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x512x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x512x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x512x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x512x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x512x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x512x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x512x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x512x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x512x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x512x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x512x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x512x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x512x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x512x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x512x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x512x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x512x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x512x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x512x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x512x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x512x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x512x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x512x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x512x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x512x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x512x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x512x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x512x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x512x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x512x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x512x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x512x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x512x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x512x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x512x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x512x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x512x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x512x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x512x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x512x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x512x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x512x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x512x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x512x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x512x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x512x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x512x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x512x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x512x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x512x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x512x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x512x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x512x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x512x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x512x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x512x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x512x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x512x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x512x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x512x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x512x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x512x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x512x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x512x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x512x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x512x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x512x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x512x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x512x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x512x768xui32>
    return %171, %175 : tensor<64x512x768xui32>, tensor<64x512x768xui32>
  }
  func.func private @_bernoulli_70(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x12x512x512xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_71(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x12x512x512xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x12x512x512xf32>, tensor<64x12x512x512xf32>) -> tensor<64x12x512x512xi1>
    return %2 : tensor<64x12x512x512xi1>
  }
  func.func private @_uniform_71(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x12x512x512xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x12x512x512xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x12x512x512xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x12x512x512xui64>
    %11 = stablehlo.iota dim = 3 : tensor<64x12x512x512xui64>
    %c = stablehlo.constant dense<3145728> : tensor<ui64>
    %12 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %13 = stablehlo.multiply %12, %8 : tensor<64x12x512x512xui64>
    %c_0 = stablehlo.constant dense<262144> : tensor<ui64>
    %14 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %15 = stablehlo.multiply %14, %9 : tensor<64x12x512x512xui64>
    %c_1 = stablehlo.constant dense<512> : tensor<ui64>
    %16 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %17 = stablehlo.multiply %16, %10 : tensor<64x12x512x512xui64>
    %c_2 = stablehlo.constant dense<1> : tensor<ui64>
    %18 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %19 = stablehlo.multiply %18, %11 : tensor<64x12x512x512xui64>
    %20 = stablehlo.add %13, %15 : tensor<64x12x512x512xui64>
    %21 = stablehlo.add %20, %17 : tensor<64x12x512x512xui64>
    %22 = stablehlo.add %21, %19 : tensor<64x12x512x512xui64>
    %c_3 = stablehlo.constant dense<32> : tensor<ui64>
    %23 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui64>) -> tensor<64x12x512x512xui64>
    %24 = stablehlo.shift_right_logical %22, %23 : tensor<64x12x512x512xui64>
    %25 = stablehlo.convert %22 : (tensor<64x12x512x512xui64>) -> tensor<64x12x512x512xui32>
    %26 = stablehlo.convert %24 : (tensor<64x12x512x512xui64>) -> tensor<64x12x512x512xui32>
    %27:2 = call @threefry2x32_75(%5, %7, %26, %25) : (tensor<ui32>, tensor<ui32>, tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>) -> (tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>)
    %28 = stablehlo.xor %27#0, %27#1 : tensor<64x12x512x512xui32>
    %c_4 = stablehlo.constant dense<9> : tensor<ui32>
    %29 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %30 = stablehlo.shift_right_logical %28, %29 : tensor<64x12x512x512xui32>
    %c_5 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %31 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %32 = stablehlo.or %30, %31 : tensor<64x12x512x512xui32>
    %33 = stablehlo.bitcast_convert %32 : (tensor<64x12x512x512xui32>) -> tensor<64x12x512x512xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x12x512x512xf32>
    %35 = stablehlo.subtract %33, %34 : tensor<64x12x512x512xf32>
    %36 = stablehlo.subtract %3, %2 : tensor<1x1x1x1xf32>
    %37 = stablehlo.broadcast_in_dim %36, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %38 = stablehlo.multiply %35, %37 : tensor<64x12x512x512xf32>
    %39 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %40 = stablehlo.add %38, %39 : tensor<64x12x512x512xf32>
    %41 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xf32>) -> tensor<64x12x512x512xf32>
    %42 = stablehlo.maximum %41, %40 : tensor<64x12x512x512xf32>
    return %42 : tensor<64x12x512x512xf32>
  }
  func.func private @threefry2x32_75(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x12x512x512xui32>, %arg3: tensor<64x12x512x512xui32>) -> (tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x12x512x512xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x12x512x512xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x12x512x512xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x12x512x512xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x12x512x512xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x12x512x512xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x12x512x512xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x12x512x512xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x12x512x512xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x12x512x512xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x12x512x512xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x12x512x512xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x12x512x512xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x12x512x512xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x12x512x512xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x12x512x512xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x12x512x512xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x12x512x512xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x12x512x512xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x12x512x512xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x12x512x512xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x12x512x512xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x12x512x512xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x12x512x512xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x12x512x512xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x12x512x512xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x12x512x512xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x12x512x512xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x12x512x512xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x12x512x512xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x12x512x512xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x12x512x512xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x12x512x512xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x12x512x512xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x12x512x512xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x12x512x512xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x12x512x512xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x12x512x512xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x12x512x512xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x12x512x512xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x12x512x512xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x12x512x512xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x12x512x512xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x12x512x512xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x12x512x512xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x12x512x512xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x12x512x512xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x12x512x512xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x12x512x512xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x12x512x512xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x12x512x512xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x12x512x512xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x12x512x512xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x12x512x512xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x12x512x512xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x12x512x512xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x12x512x512xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x12x512x512xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x12x512x512xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x12x512x512xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x12x512x512xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x12x512x512xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x12x512x512xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x12x512x512xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x12x512x512xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x12x512x512xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x12x512x512xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x12x512x512xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x12x512x512xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x12x512x512xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x12x512x512xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x12x512x512xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x12x512x512xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x12x512x512xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x12x512x512xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x12x512x512xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x12x512x512xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x12x512x512xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x12x512x512xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x12x512x512xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x12x512x512xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x12x512x512xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x12x512x512xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x12x512x512xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x12x512x512xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x12x512x512xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x12x512x512xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x12x512x512xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x12x512x512xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x12x512x512xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x12x512x512xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x12x512x512xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x12x512x512xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x12x512x512xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x12x512x512xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x12x512x512xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x12x512x512xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x12x512x512xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x12x512x512xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x12x512x512xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x12x512x512xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x12x512x512xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x12x512x512xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x12x512x512xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x12x512x512xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x12x512x512xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x12x512x512xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x12x512x512xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x12x512x512xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x12x512x512xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x12x512x512xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x12x512x512xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x12x512x512xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x12x512x512xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x12x512x512xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x12x512x512xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x12x512x512xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x12x512x512xui32>
    return %171, %175 : tensor<64x12x512x512xui32>, tensor<64x12x512x512xui32>
  }
  func.func private @_bernoulli_111(%arg0: tensor<2xui32>, %arg1: tensor<f32>) -> tensor<64x1x768xi1> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %0 = call @_uniform_112(%arg0, %cst, %cst_0) : (tensor<2xui32>, tensor<f32>, tensor<f32>) -> tensor<64x1x768xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x1x768xf32>
    %2 = stablehlo.compare  LT, %0, %1,  FLOAT : (tensor<64x1x768xf32>, tensor<64x1x768xf32>) -> tensor<64x1x768xi1>
    return %2 : tensor<64x1x768xi1>
  }
  func.func private @_uniform_112(%arg0: tensor<2xui32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<64x1x768xf32> {
    %0 = stablehlo.convert %arg1 : tensor<f32>
    %1 = stablehlo.convert %arg2 : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %3 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<f32>) -> tensor<1x1x1xf32>
    %4 = stablehlo.slice %arg0 [0:1] : (tensor<2xui32>) -> tensor<1xui32>
    %5 = stablehlo.reshape %4 : (tensor<1xui32>) -> tensor<ui32>
    %6 = stablehlo.slice %arg0 [1:2] : (tensor<2xui32>) -> tensor<1xui32>
    %7 = stablehlo.reshape %6 : (tensor<1xui32>) -> tensor<ui32>
    %8 = stablehlo.iota dim = 0 : tensor<64x1x768xui64>
    %9 = stablehlo.iota dim = 1 : tensor<64x1x768xui64>
    %10 = stablehlo.iota dim = 2 : tensor<64x1x768xui64>
    %c = stablehlo.constant dense<768> : tensor<ui64>
    %11 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %12 = stablehlo.multiply %11, %8 : tensor<64x1x768xui64>
    %c_0 = stablehlo.constant dense<768> : tensor<ui64>
    %13 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %14 = stablehlo.multiply %13, %9 : tensor<64x1x768xui64>
    %c_1 = stablehlo.constant dense<1> : tensor<ui64>
    %15 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %16 = stablehlo.multiply %15, %10 : tensor<64x1x768xui64>
    %17 = stablehlo.add %12, %14 : tensor<64x1x768xui64>
    %18 = stablehlo.add %17, %16 : tensor<64x1x768xui64>
    %c_2 = stablehlo.constant dense<32> : tensor<ui64>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui64>) -> tensor<64x1x768xui64>
    %20 = stablehlo.shift_right_logical %18, %19 : tensor<64x1x768xui64>
    %21 = stablehlo.convert %18 : (tensor<64x1x768xui64>) -> tensor<64x1x768xui32>
    %22 = stablehlo.convert %20 : (tensor<64x1x768xui64>) -> tensor<64x1x768xui32>
    %23:2 = call @threefry2x32_115(%5, %7, %22, %21) : (tensor<ui32>, tensor<ui32>, tensor<64x1x768xui32>, tensor<64x1x768xui32>) -> (tensor<64x1x768xui32>, tensor<64x1x768xui32>)
    %24 = stablehlo.xor %23#0, %23#1 : tensor<64x1x768xui32>
    %c_3 = stablehlo.constant dense<9> : tensor<ui32>
    %25 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %26 = stablehlo.shift_right_logical %24, %25 : tensor<64x1x768xui32>
    %c_4 = stablehlo.constant dense<1065353216> : tensor<ui32>
    %27 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %28 = stablehlo.or %26, %27 : tensor<64x1x768xui32>
    %29 = stablehlo.bitcast_convert %28 : (tensor<64x1x768xui32>) -> tensor<64x1x768xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %30 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x1x768xf32>
    %31 = stablehlo.subtract %29, %30 : tensor<64x1x768xf32>
    %32 = stablehlo.subtract %3, %2 : tensor<1x1x1xf32>
    %33 = stablehlo.broadcast_in_dim %32, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %34 = stablehlo.multiply %31, %33 : tensor<64x1x768xf32>
    %35 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %36 = stablehlo.add %34, %35 : tensor<64x1x768xf32>
    %37 = stablehlo.broadcast_in_dim %2, dims = [0, 1, 2] : (tensor<1x1x1xf32>) -> tensor<64x1x768xf32>
    %38 = stablehlo.maximum %37, %36 : tensor<64x1x768xf32>
    return %38 : tensor<64x1x768xf32>
  }
  func.func private @threefry2x32_115(%arg0: tensor<ui32>, %arg1: tensor<ui32>, %arg2: tensor<64x1x768xui32>, %arg3: tensor<64x1x768xui32>) -> (tensor<64x1x768xui32>, tensor<64x1x768xui32>) {
    %0 = stablehlo.xor %arg0, %arg1 : tensor<ui32>
    %c = stablehlo.constant dense<466688986> : tensor<ui32>
    %1 = stablehlo.xor %0, %c : tensor<ui32>
    %2 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %3 = stablehlo.add %arg2, %2 : tensor<64x1x768xui32>
    %4 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %5 = stablehlo.add %arg3, %4 : tensor<64x1x768xui32>
    %6 = stablehlo.add %3, %5 : tensor<64x1x768xui32>
    %c_0 = stablehlo.constant dense<13> : tensor<ui32>
    %7 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %8 = stablehlo.shift_left %5, %7 : tensor<64x1x768xui32>
    %c_1 = stablehlo.constant dense<19> : tensor<ui32>
    %9 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %10 = stablehlo.shift_right_logical %5, %9 : tensor<64x1x768xui32>
    %11 = stablehlo.or %8, %10 : tensor<64x1x768xui32>
    %12 = stablehlo.xor %6, %11 : tensor<64x1x768xui32>
    %13 = stablehlo.add %6, %12 : tensor<64x1x768xui32>
    %c_2 = stablehlo.constant dense<15> : tensor<ui32>
    %14 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %15 = stablehlo.shift_left %12, %14 : tensor<64x1x768xui32>
    %c_3 = stablehlo.constant dense<17> : tensor<ui32>
    %16 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %17 = stablehlo.shift_right_logical %12, %16 : tensor<64x1x768xui32>
    %18 = stablehlo.or %15, %17 : tensor<64x1x768xui32>
    %19 = stablehlo.xor %13, %18 : tensor<64x1x768xui32>
    %20 = stablehlo.add %13, %19 : tensor<64x1x768xui32>
    %c_4 = stablehlo.constant dense<26> : tensor<ui32>
    %21 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %22 = stablehlo.shift_left %19, %21 : tensor<64x1x768xui32>
    %c_5 = stablehlo.constant dense<6> : tensor<ui32>
    %23 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %24 = stablehlo.shift_right_logical %19, %23 : tensor<64x1x768xui32>
    %25 = stablehlo.or %22, %24 : tensor<64x1x768xui32>
    %26 = stablehlo.xor %20, %25 : tensor<64x1x768xui32>
    %27 = stablehlo.add %20, %26 : tensor<64x1x768xui32>
    %28 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %29 = stablehlo.shift_left %26, %28 : tensor<64x1x768xui32>
    %30 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %31 = stablehlo.shift_right_logical %26, %30 : tensor<64x1x768xui32>
    %32 = stablehlo.or %29, %31 : tensor<64x1x768xui32>
    %33 = stablehlo.xor %27, %32 : tensor<64x1x768xui32>
    %34 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %35 = stablehlo.add %27, %34 : tensor<64x1x768xui32>
    %36 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %37 = stablehlo.add %33, %36 : tensor<64x1x768xui32>
    %c_6 = stablehlo.constant dense<1> : tensor<ui32>
    %38 = stablehlo.broadcast_in_dim %c_6, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %39 = stablehlo.add %37, %38 : tensor<64x1x768xui32>
    %40 = stablehlo.add %35, %39 : tensor<64x1x768xui32>
    %41 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %42 = stablehlo.shift_left %39, %41 : tensor<64x1x768xui32>
    %43 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %44 = stablehlo.shift_right_logical %39, %43 : tensor<64x1x768xui32>
    %45 = stablehlo.or %42, %44 : tensor<64x1x768xui32>
    %46 = stablehlo.xor %40, %45 : tensor<64x1x768xui32>
    %47 = stablehlo.add %40, %46 : tensor<64x1x768xui32>
    %c_7 = stablehlo.constant dense<29> : tensor<ui32>
    %48 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %49 = stablehlo.shift_left %46, %48 : tensor<64x1x768xui32>
    %c_8 = stablehlo.constant dense<3> : tensor<ui32>
    %50 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %51 = stablehlo.shift_right_logical %46, %50 : tensor<64x1x768xui32>
    %52 = stablehlo.or %49, %51 : tensor<64x1x768xui32>
    %53 = stablehlo.xor %47, %52 : tensor<64x1x768xui32>
    %54 = stablehlo.add %47, %53 : tensor<64x1x768xui32>
    %c_9 = stablehlo.constant dense<16> : tensor<ui32>
    %55 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %56 = stablehlo.shift_left %53, %55 : tensor<64x1x768xui32>
    %57 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %58 = stablehlo.shift_right_logical %53, %57 : tensor<64x1x768xui32>
    %59 = stablehlo.or %56, %58 : tensor<64x1x768xui32>
    %60 = stablehlo.xor %54, %59 : tensor<64x1x768xui32>
    %61 = stablehlo.add %54, %60 : tensor<64x1x768xui32>
    %c_10 = stablehlo.constant dense<24> : tensor<ui32>
    %62 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %63 = stablehlo.shift_left %60, %62 : tensor<64x1x768xui32>
    %c_11 = stablehlo.constant dense<8> : tensor<ui32>
    %64 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %65 = stablehlo.shift_right_logical %60, %64 : tensor<64x1x768xui32>
    %66 = stablehlo.or %63, %65 : tensor<64x1x768xui32>
    %67 = stablehlo.xor %61, %66 : tensor<64x1x768xui32>
    %68 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %69 = stablehlo.add %61, %68 : tensor<64x1x768xui32>
    %70 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %71 = stablehlo.add %67, %70 : tensor<64x1x768xui32>
    %c_12 = stablehlo.constant dense<2> : tensor<ui32>
    %72 = stablehlo.broadcast_in_dim %c_12, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %73 = stablehlo.add %71, %72 : tensor<64x1x768xui32>
    %74 = stablehlo.add %69, %73 : tensor<64x1x768xui32>
    %75 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %76 = stablehlo.shift_left %73, %75 : tensor<64x1x768xui32>
    %77 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %78 = stablehlo.shift_right_logical %73, %77 : tensor<64x1x768xui32>
    %79 = stablehlo.or %76, %78 : tensor<64x1x768xui32>
    %80 = stablehlo.xor %74, %79 : tensor<64x1x768xui32>
    %81 = stablehlo.add %74, %80 : tensor<64x1x768xui32>
    %82 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %83 = stablehlo.shift_left %80, %82 : tensor<64x1x768xui32>
    %84 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %85 = stablehlo.shift_right_logical %80, %84 : tensor<64x1x768xui32>
    %86 = stablehlo.or %83, %85 : tensor<64x1x768xui32>
    %87 = stablehlo.xor %81, %86 : tensor<64x1x768xui32>
    %88 = stablehlo.add %81, %87 : tensor<64x1x768xui32>
    %89 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %90 = stablehlo.shift_left %87, %89 : tensor<64x1x768xui32>
    %91 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %92 = stablehlo.shift_right_logical %87, %91 : tensor<64x1x768xui32>
    %93 = stablehlo.or %90, %92 : tensor<64x1x768xui32>
    %94 = stablehlo.xor %88, %93 : tensor<64x1x768xui32>
    %95 = stablehlo.add %88, %94 : tensor<64x1x768xui32>
    %96 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %97 = stablehlo.shift_left %94, %96 : tensor<64x1x768xui32>
    %98 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %99 = stablehlo.shift_right_logical %94, %98 : tensor<64x1x768xui32>
    %100 = stablehlo.or %97, %99 : tensor<64x1x768xui32>
    %101 = stablehlo.xor %95, %100 : tensor<64x1x768xui32>
    %102 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %103 = stablehlo.add %95, %102 : tensor<64x1x768xui32>
    %104 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %105 = stablehlo.add %101, %104 : tensor<64x1x768xui32>
    %106 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %107 = stablehlo.add %105, %106 : tensor<64x1x768xui32>
    %108 = stablehlo.add %103, %107 : tensor<64x1x768xui32>
    %109 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %110 = stablehlo.shift_left %107, %109 : tensor<64x1x768xui32>
    %111 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %112 = stablehlo.shift_right_logical %107, %111 : tensor<64x1x768xui32>
    %113 = stablehlo.or %110, %112 : tensor<64x1x768xui32>
    %114 = stablehlo.xor %108, %113 : tensor<64x1x768xui32>
    %115 = stablehlo.add %108, %114 : tensor<64x1x768xui32>
    %116 = stablehlo.broadcast_in_dim %c_7, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %117 = stablehlo.shift_left %114, %116 : tensor<64x1x768xui32>
    %118 = stablehlo.broadcast_in_dim %c_8, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %119 = stablehlo.shift_right_logical %114, %118 : tensor<64x1x768xui32>
    %120 = stablehlo.or %117, %119 : tensor<64x1x768xui32>
    %121 = stablehlo.xor %115, %120 : tensor<64x1x768xui32>
    %122 = stablehlo.add %115, %121 : tensor<64x1x768xui32>
    %123 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %124 = stablehlo.shift_left %121, %123 : tensor<64x1x768xui32>
    %125 = stablehlo.broadcast_in_dim %c_9, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %126 = stablehlo.shift_right_logical %121, %125 : tensor<64x1x768xui32>
    %127 = stablehlo.or %124, %126 : tensor<64x1x768xui32>
    %128 = stablehlo.xor %122, %127 : tensor<64x1x768xui32>
    %129 = stablehlo.add %122, %128 : tensor<64x1x768xui32>
    %130 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %131 = stablehlo.shift_left %128, %130 : tensor<64x1x768xui32>
    %132 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %133 = stablehlo.shift_right_logical %128, %132 : tensor<64x1x768xui32>
    %134 = stablehlo.or %131, %133 : tensor<64x1x768xui32>
    %135 = stablehlo.xor %129, %134 : tensor<64x1x768xui32>
    %136 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %137 = stablehlo.add %129, %136 : tensor<64x1x768xui32>
    %138 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %139 = stablehlo.add %135, %138 : tensor<64x1x768xui32>
    %c_13 = stablehlo.constant dense<4> : tensor<ui32>
    %140 = stablehlo.broadcast_in_dim %c_13, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %141 = stablehlo.add %139, %140 : tensor<64x1x768xui32>
    %142 = stablehlo.add %137, %141 : tensor<64x1x768xui32>
    %143 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %144 = stablehlo.shift_left %141, %143 : tensor<64x1x768xui32>
    %145 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %146 = stablehlo.shift_right_logical %141, %145 : tensor<64x1x768xui32>
    %147 = stablehlo.or %144, %146 : tensor<64x1x768xui32>
    %148 = stablehlo.xor %142, %147 : tensor<64x1x768xui32>
    %149 = stablehlo.add %142, %148 : tensor<64x1x768xui32>
    %150 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %151 = stablehlo.shift_left %148, %150 : tensor<64x1x768xui32>
    %152 = stablehlo.broadcast_in_dim %c_3, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %153 = stablehlo.shift_right_logical %148, %152 : tensor<64x1x768xui32>
    %154 = stablehlo.or %151, %153 : tensor<64x1x768xui32>
    %155 = stablehlo.xor %149, %154 : tensor<64x1x768xui32>
    %156 = stablehlo.add %149, %155 : tensor<64x1x768xui32>
    %157 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %158 = stablehlo.shift_left %155, %157 : tensor<64x1x768xui32>
    %159 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %160 = stablehlo.shift_right_logical %155, %159 : tensor<64x1x768xui32>
    %161 = stablehlo.or %158, %160 : tensor<64x1x768xui32>
    %162 = stablehlo.xor %156, %161 : tensor<64x1x768xui32>
    %163 = stablehlo.add %156, %162 : tensor<64x1x768xui32>
    %164 = stablehlo.broadcast_in_dim %c_5, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %165 = stablehlo.shift_left %162, %164 : tensor<64x1x768xui32>
    %166 = stablehlo.broadcast_in_dim %c_4, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %167 = stablehlo.shift_right_logical %162, %166 : tensor<64x1x768xui32>
    %168 = stablehlo.or %165, %167 : tensor<64x1x768xui32>
    %169 = stablehlo.xor %163, %168 : tensor<64x1x768xui32>
    %170 = stablehlo.broadcast_in_dim %1, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %171 = stablehlo.add %163, %170 : tensor<64x1x768xui32>
    %172 = stablehlo.broadcast_in_dim %arg0, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %173 = stablehlo.add %169, %172 : tensor<64x1x768xui32>
    %c_14 = stablehlo.constant dense<5> : tensor<ui32>
    %174 = stablehlo.broadcast_in_dim %c_14, dims = [] : (tensor<ui32>) -> tensor<64x1x768xui32>
    %175 = stablehlo.add %173, %174 : tensor<64x1x768xui32>
    return %171, %175 : tensor<64x1x768xui32>, tensor<64x1x768xui32>
  }
  func.func private @_where(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_159(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_175(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_176(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_where_334(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_384(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
