module @jit__step attributes {mhlo.num_partitions = 4 : i32, mhlo.num_replicas = 1 : i32} {
  sdy.mesh @mesh = <["dp"=4]>
  func.func public @main(%arg0: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg1: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg2: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg3: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg4: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg5: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg6: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg7: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg8: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg9: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg10: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg11: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg12: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg13: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg14: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg15: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg16: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg17: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg18: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg19: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg20: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg21: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg22: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg23: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg24: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg25: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg26: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg27: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg28: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg29: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg30: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg31: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg32: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg33: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg34: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg35: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg36: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg37: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg38: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg39: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg40: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg41: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg42: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg43: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg44: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg45: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg46: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg47: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg48: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg49: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg50: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg51: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg52: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg53: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg54: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg55: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg56: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg57: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg58: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg59: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg60: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg61: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg62: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg63: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg64: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg65: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg66: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg67: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg68: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg69: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg70: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg71: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg72: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg73: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg74: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg75: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg76: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg77: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg78: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg79: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg80: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg81: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg82: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg83: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg84: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg85: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg86: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg87: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg88: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg89: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg90: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg91: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg92: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg93: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg94: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg95: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg96: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg97: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg98: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg99: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg100: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg101: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg102: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg103: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg104: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg105: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg106: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg107: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg108: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg109: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg110: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg111: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg112: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg113: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg114: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg115: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg116: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg117: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg118: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg119: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg120: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg121: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg122: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg123: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg124: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg125: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg126: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg127: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg128: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg129: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg130: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg131: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg132: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg133: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg134: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg135: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg136: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg137: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg138: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg139: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg140: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg141: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg142: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg143: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg144: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg145: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg146: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg147: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg148: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg149: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg150: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg151: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg152: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg153: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg154: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg155: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg156: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg157: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg158: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg159: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg160: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg161: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg162: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg163: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg164: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg165: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg166: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg167: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg168: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg169: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg170: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg171: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg172: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg173: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg174: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg175: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg176: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg177: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg178: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg179: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg180: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg181: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg182: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg183: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg184: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg185: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg186: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg187: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg188: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg189: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg190: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg191: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg192: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg193: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg194: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg195: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg196: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg197: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg198: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg199: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg200: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg201: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg202: tensor<i32>, %arg203: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg204: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg205: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg206: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg207: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg208: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg209: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg210: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg211: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg212: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg213: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg214: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg215: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg216: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg217: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg218: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg219: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg220: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg221: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg222: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg223: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg224: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg225: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg226: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg227: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg228: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg229: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg230: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg231: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg232: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg233: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg234: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg235: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg236: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg237: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg238: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg239: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg240: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg241: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg242: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg243: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg244: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg245: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg246: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg247: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg248: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg249: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg250: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg251: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg252: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg253: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg254: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg255: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg256: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg257: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg258: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg259: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg260: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg261: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg262: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg263: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg264: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg265: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg266: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg267: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg268: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg269: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg270: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg271: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg272: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg273: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg274: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg275: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg276: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg277: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg278: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg279: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg280: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg281: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg282: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg283: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg284: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg285: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg286: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg287: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg288: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg289: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg290: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg291: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg292: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg293: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg294: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg295: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg296: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg297: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg298: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg299: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg300: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg301: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg302: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg303: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg304: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg305: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg306: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg307: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg308: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg309: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg310: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg311: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg312: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg313: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg314: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg315: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg316: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg317: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg318: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg319: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg320: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg321: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg322: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg323: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg324: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg325: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg326: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg327: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg328: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg329: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg330: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg331: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg332: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg333: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg334: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg335: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg336: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg337: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg338: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg339: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg340: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg341: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg342: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg343: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg344: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg345: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg346: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg347: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg348: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg349: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg350: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg351: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg352: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg353: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg354: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg355: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg356: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg357: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg358: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg359: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg360: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg361: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg362: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg363: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg364: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg365: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg366: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg367: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg368: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg369: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg370: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg371: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg372: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg373: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg374: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg375: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg376: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg377: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg378: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg379: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg380: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg381: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg382: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg383: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg384: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg385: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg386: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg387: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg388: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg389: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg390: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg391: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg392: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg393: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg394: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg395: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg396: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg397: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg398: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg399: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg400: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg401: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg402: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg403: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg404: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg405: tensor<30522x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg406: tensor<512x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg407: tensor<2x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg408: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg409: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg410: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg411: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg412: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg413: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg414: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg415: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg416: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg417: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg418: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg419: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg420: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg421: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg422: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg423: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg424: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg425: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg426: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg427: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg428: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg429: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg430: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg431: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg432: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg433: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg434: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg435: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg436: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg437: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg438: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg439: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg440: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg441: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg442: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg443: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg444: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg445: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg446: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg447: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg448: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg449: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg450: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg451: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg452: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg453: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg454: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg455: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg456: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg457: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg458: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg459: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg460: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg461: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg462: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg463: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg464: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg465: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg466: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg467: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg468: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg469: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg470: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg471: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg472: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg473: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg474: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg475: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg476: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg477: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg478: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg479: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg480: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg481: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg482: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg483: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg484: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg485: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg486: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg487: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg488: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg489: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg490: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg491: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg492: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg493: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg494: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg495: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg496: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg497: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg498: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg499: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg500: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg501: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg502: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg503: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg504: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg505: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg506: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg507: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg508: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg509: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg510: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg511: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg512: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg513: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg514: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg515: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg516: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg517: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg518: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg519: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg520: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg521: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg522: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg523: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg524: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg525: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg526: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg527: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg528: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg529: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg530: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg531: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg532: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg533: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg534: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg535: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg536: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg537: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg538: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg539: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg540: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg541: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg542: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg543: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg544: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg545: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg546: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg547: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg548: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg549: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg550: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg551: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg552: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg553: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg554: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg555: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg556: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg557: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg558: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg559: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg560: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg561: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg562: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg563: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg564: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg565: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg566: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg567: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg568: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg569: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg570: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg571: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg572: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg573: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg574: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg575: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg576: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg577: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg578: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg579: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg580: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg581: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg582: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg583: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg584: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg585: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg586: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg587: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg588: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg589: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg590: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg591: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg592: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg593: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg594: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg595: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg596: tensor<3072x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg597: tensor<3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg598: tensor<768x3072xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg599: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg600: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg601: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg602: tensor<768x768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}, {}]>}, %arg603: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg604: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg605: tensor<768xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg606: tensor<30522xf32> {sdy.sharding = #sdy.sharding<@mesh, [{}]>}, %arg607: tensor<i32>, %arg608: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg609: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg610: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}, %arg611: tensor<64x512xi32> {sdy.sharding = #sdy.sharding<@mesh, [{"dp"}, {}]>}) -> (tensor<i32> {jax.result_info = "result[0]"}, tensor<30522x768xf32> {jax.result_info = "result[1][0].bert.embeddings.word_embeddings.weight.value"}, tensor<512x768xf32> {jax.result_info = "result[1][0].bert.embeddings.position_embeddings.weight.value"}, tensor<2x768xf32> {jax.result_info = "result[1][0].bert.embeddings.token_type_embeddings.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.embeddings.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[0].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[1].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[2].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[3].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[4].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[5].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[6].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[7].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[8].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[9].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[10].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].bert.encoder.layer[11].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][0].cls.predictions.transform.LayerNorm.bias.value"}, tensor<30522xf32> {jax.result_info = "result[1][0].cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][0].count"}, tensor<30522x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.word_embeddings.weight.value"}, tensor<512x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.position_embeddings.weight.value"}, tensor<2x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.token_type_embeddings.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.embeddings.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[0].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[1].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[2].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[3].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[4].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[5].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[6].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[7].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[8].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[9].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[10].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.bert.encoder.layer[11].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.transform.LayerNorm.bias.value"}, tensor<30522xf32> {jax.result_info = "result[1][1].opt_state[1][0].mu.cls.predictions.bias"}, tensor<30522x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.word_embeddings.weight.value"}, tensor<512x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.position_embeddings.weight.value"}, tensor<2x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.token_type_embeddings.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.embeddings.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[0].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[1].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[2].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[3].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[4].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[5].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[6].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[7].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[8].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[9].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[10].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.query.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.value.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.self.key.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].attention.output.LayerNorm.bias.value"}, tensor<3072x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.weight.value"}, tensor<3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].intermediate.dense.bias.value"}, tensor<768x3072xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.bert.encoder.layer[11].output.LayerNorm.bias.value"}, tensor<768x768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.dense.bias.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.weight.value"}, tensor<768xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.transform.LayerNorm.bias.value"}, tensor<30522xf32> {jax.result_info = "result[1][1].opt_state[1][0].nu.cls.predictions.bias"}, tensor<i32> {jax.result_info = "result[1][1].opt_state[1][2].count"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['acc'][1]"}, tensor<f32> {jax.result_info = "result[1][2]['loss'][0]"}, tensor<i32> {jax.result_info = "result[1][2]['loss'][1]"}, tensor<i32> {jax.result_info = "result[1][2]['total_token']"}) {
    %0 = stablehlo.iota dim = 0 : tensor<512xi32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [1] : (tensor<512xi32>) -> tensor<1x512xi32>
    %2 = stablehlo.broadcast_in_dim %1, dims = [0, 1] : (tensor<1x512xi32>) -> tensor<64x512xi32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %3 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %4 = stablehlo.compare  LT, %arg608, %3,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %5 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %6 = stablehlo.add %arg608, %5 : tensor<64x512xi32>
    %7 = stablehlo.select %4, %6, %arg608 : tensor<64x512xi1>, tensor<64x512xi32>
    %8 = stablehlo.broadcast_in_dim %7, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %9 = "stablehlo.gather"(%arg0, %8) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<30522x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %10 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %11 = stablehlo.compare  LT, %2, %10,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_1 = stablehlo.constant dense<512> : tensor<i32>
    %12 = stablehlo.broadcast_in_dim %c_1, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %13 = stablehlo.add %2, %12 : tensor<64x512xi32>
    %14 = stablehlo.select %11, %13, %2 : tensor<64x512xi1>, tensor<64x512xi32>
    %15 = stablehlo.broadcast_in_dim %14, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %16 = "stablehlo.gather"(%arg1, %15) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<512x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %17 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %18 = stablehlo.compare  LT, %arg610, %17,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %c_2 = stablehlo.constant dense<2> : tensor<i32>
    %19 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %20 = stablehlo.add %arg610, %19 : tensor<64x512xi32>
    %21 = stablehlo.select %18, %20, %arg610 : tensor<64x512xi1>, tensor<64x512xi32>
    %22 = stablehlo.broadcast_in_dim %21, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %23 = "stablehlo.gather"(%arg2, %22) <{dimension_numbers = #stablehlo.gather<offset_dims = [2], collapsed_slice_dims = [0], start_index_map = [0], index_vector_dim = 2>, indices_are_sorted = false, slice_sizes = array<i64: 1, 768>}> : (tensor<2x768xf32>, tensor<64x512x1xi32>) -> tensor<64x512x768xf32>
    %24 = stablehlo.add %9, %23 : tensor<64x512x768xf32>
    %25 = stablehlo.add %24, %16 : tensor<64x512x768xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %26 = stablehlo.reduce(%25 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %27 = stablehlo.broadcast_in_dim %26, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_3 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %28 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %29 = stablehlo.divide %27, %28 : tensor<64x512x1xf32>
    %c_4 = stablehlo.constant dense<0> : tensor<i32>
    %30:4 = call @_var(%25, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %cst_5 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %31 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %32 = stablehlo.maximum %30#0, %31 : tensor<64x512x1xf32>
    %33 = stablehlo.compare  EQ, %30#0, %32,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %cst_6 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %34 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %35 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %36 = stablehlo.select %33, %34, %35 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %37 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %38 = stablehlo.compare  EQ, %37, %32,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %cst_7 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %39 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %40 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %41 = stablehlo.select %38, %39, %40 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %42 = stablehlo.divide %36, %41 : tensor<64x512x1xf32>
    %cst_8 = stablehlo.constant dense<9.99999996E-13> : tensor<f32>
    %43 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %44 = stablehlo.add %32, %43 : tensor<64x512x1xf32>
    %45 = stablehlo.rsqrt %44 : tensor<64x512x1xf32>
    %46 = stablehlo.divide %45, %44 : tensor<64x512x1xf32>
    %cst_9 = stablehlo.constant dense<-5.000000e-01> : tensor<f32>
    %47 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %48 = stablehlo.multiply %47, %46 : tensor<64x512x1xf32>
    %49 = stablehlo.broadcast_in_dim %29, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %50 = stablehlo.subtract %25, %49 : tensor<64x512x768xf32>
    %51 = stablehlo.broadcast_in_dim %45, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %52 = stablehlo.multiply %50, %51 : tensor<64x512x768xf32>
    %53 = stablehlo.broadcast_in_dim %arg3, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %54 = stablehlo.broadcast_in_dim %53, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %55 = stablehlo.multiply %54, %52 : tensor<64x512x768xf32>
    %56 = stablehlo.broadcast_in_dim %arg4, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %57 = stablehlo.broadcast_in_dim %56, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %58 = stablehlo.add %55, %57 : tensor<64x512x768xf32>
    %c_10 = stablehlo.constant dense<true> : tensor<i1>
    %59 = stablehlo.broadcast_in_dim %c_10, dims = [] : (tensor<i1>) -> tensor<512xi1>
    %60 = stablehlo.broadcast_in_dim %59, dims = [1] : (tensor<512xi1>) -> tensor<512x512xi1>
    %61 = stablehlo.broadcast_in_dim %60, dims = [1, 2] : (tensor<512x512xi1>) -> tensor<64x512x512xi1>
    %62 = stablehlo.broadcast_in_dim %arg609, dims = [0, 2] : (tensor<64x512xi32>) -> tensor<64x1x512xi32>
    %63 = stablehlo.convert %61 : (tensor<64x512x512xi1>) -> tensor<64x512x512xi32>
    %64 = stablehlo.broadcast_in_dim %62, dims = [0, 1, 2] : (tensor<64x1x512xi32>) -> tensor<64x512x512xi32>
    %65 = stablehlo.and %63, %64 : tensor<64x512x512xi32>
    %c_11 = stablehlo.constant dense<0> : tensor<i32>
    %66 = stablehlo.broadcast_in_dim %c_11, dims = [] : (tensor<i32>) -> tensor<64x512x512xi32>
    %67 = stablehlo.compare  NE, %65, %66,  SIGNED : (tensor<64x512x512xi32>, tensor<64x512x512xi32>) -> tensor<64x512x512xi1>
    %68 = stablehlo.convert %67 : tensor<64x512x512xi1>
    %69 = stablehlo.transpose %arg5, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %70 = stablehlo.dot_general %58, %69, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %71 = stablehlo.broadcast_in_dim %arg6, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %72 = stablehlo.broadcast_in_dim %71, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %73 = stablehlo.add %70, %72 : tensor<64x512x768xf32>
    %74 = stablehlo.transpose %arg9, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %75 = stablehlo.dot_general %58, %74, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %76 = stablehlo.broadcast_in_dim %arg10, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %77 = stablehlo.broadcast_in_dim %76, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %78 = stablehlo.add %75, %77 : tensor<64x512x768xf32>
    %79 = stablehlo.transpose %arg7, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %80 = stablehlo.dot_general %58, %79, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %81 = stablehlo.broadcast_in_dim %arg8, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %82 = stablehlo.broadcast_in_dim %81, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %83 = stablehlo.add %80, %82 : tensor<64x512x768xf32>
    %84 = stablehlo.reshape %73 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %85 = stablehlo.reshape %78 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %86 = stablehlo.reshape %83 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %87 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %cst_12 = stablehlo.constant dense<6.400000e+01> : tensor<f32>
    %88 = stablehlo.sqrt %cst_12 : tensor<f32>
    %89 = stablehlo.convert %88 : tensor<f32>
    %90 = stablehlo.broadcast_in_dim %89, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %91 = stablehlo.divide %84, %90 : tensor<64x512x12x64xf32>
    %92 = stablehlo.dot_general %85, %91, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %93 = stablehlo.transpose %92, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %cst_13 = stablehlo.constant dense<-3.40282347E+38> : tensor<f32>
    %94:2 = call @_where_33(%87, %93, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_14 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %95 = stablehlo.reduce(%94#0 init: %cst_14) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %cst_15 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %96 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %97 = stablehlo.maximum %96, %95 : tensor<64x512x12xf32>
    %98 = stablehlo.broadcast_in_dim %97, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %99 = stablehlo.broadcast_in_dim %98, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %100 = stablehlo.subtract %94#0, %99 : tensor<64x512x12x512xf32>
    %101 = stablehlo.exponential %100 : tensor<64x512x12x512xf32>
    %cst_16 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %102 = stablehlo.reduce(%101 init: %cst_16) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %103 = stablehlo.broadcast_in_dim %102, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %104 = stablehlo.broadcast_in_dim %103, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %105 = stablehlo.divide %101, %104 : tensor<64x512x12x512xf32>
    %106 = stablehlo.multiply %103, %103 : tensor<64x512x12x1xf32>
    %cst_17 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %107 = stablehlo.broadcast_in_dim %cst_17, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %108 = stablehlo.divide %107, %106 : tensor<64x512x12x1xf32>
    %109 = stablehlo.dot_general %86, %105, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %110 = stablehlo.transpose %109, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %111 = stablehlo.reshape %110 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %112 = stablehlo.transpose %arg11, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %113 = stablehlo.dot_general %111, %112, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %114 = stablehlo.broadcast_in_dim %arg12, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %115 = stablehlo.broadcast_in_dim %114, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %116 = stablehlo.add %113, %115 : tensor<64x512x768xf32>
    %117 = stablehlo.add %116, %58 : tensor<64x512x768xf32>
    %cst_18 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %118 = stablehlo.reduce(%117 init: %cst_18) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %119 = stablehlo.broadcast_in_dim %118, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %120 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %121 = stablehlo.divide %119, %120 : tensor<64x512x1xf32>
    %122:4 = call @_var(%117, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %123 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %124 = stablehlo.maximum %122#0, %123 : tensor<64x512x1xf32>
    %125 = stablehlo.compare  EQ, %122#0, %124,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %126 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %127 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %128 = stablehlo.select %125, %126, %127 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %129 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %130 = stablehlo.compare  EQ, %129, %124,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %131 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %132 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %133 = stablehlo.select %130, %131, %132 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %134 = stablehlo.divide %128, %133 : tensor<64x512x1xf32>
    %135 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %136 = stablehlo.add %124, %135 : tensor<64x512x1xf32>
    %137 = stablehlo.rsqrt %136 : tensor<64x512x1xf32>
    %138 = stablehlo.divide %137, %136 : tensor<64x512x1xf32>
    %139 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %140 = stablehlo.multiply %139, %138 : tensor<64x512x1xf32>
    %141 = stablehlo.broadcast_in_dim %121, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %142 = stablehlo.subtract %117, %141 : tensor<64x512x768xf32>
    %143 = stablehlo.broadcast_in_dim %137, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %144 = stablehlo.multiply %142, %143 : tensor<64x512x768xf32>
    %145 = stablehlo.broadcast_in_dim %arg13, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %146 = stablehlo.broadcast_in_dim %145, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %147 = stablehlo.multiply %146, %144 : tensor<64x512x768xf32>
    %148 = stablehlo.broadcast_in_dim %arg14, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %149 = stablehlo.broadcast_in_dim %148, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %150 = stablehlo.add %147, %149 : tensor<64x512x768xf32>
    %151 = stablehlo.transpose %arg15, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %152 = stablehlo.dot_general %150, %151, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %153 = stablehlo.broadcast_in_dim %arg16, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %154 = stablehlo.broadcast_in_dim %153, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %155 = stablehlo.add %152, %154 : tensor<64x512x3072xf32>
    %156 = stablehlo.multiply %155, %155 : tensor<64x512x3072xf32>
    %157 = stablehlo.multiply %156, %155 : tensor<64x512x3072xf32>
    %158 = stablehlo.multiply %155, %155 : tensor<64x512x3072xf32>
    %cst_19 = stablehlo.constant dense<3.000000e+00> : tensor<f32>
    %159 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %160 = stablehlo.multiply %159, %158 : tensor<64x512x3072xf32>
    %cst_20 = stablehlo.constant dense<4.471500e-02> : tensor<f32>
    %161 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %162 = stablehlo.multiply %161, %157 : tensor<64x512x3072xf32>
    %163 = stablehlo.add %155, %162 : tensor<64x512x3072xf32>
    %cst_21 = stablehlo.constant dense<0.797884583> : tensor<f32>
    %164 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %165 = stablehlo.multiply %164, %163 : tensor<64x512x3072xf32>
    %166 = stablehlo.tanh %165 : tensor<64x512x3072xf32>
    %167 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %168 = stablehlo.broadcast_in_dim %167, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %169 = stablehlo.subtract %168, %166 : tensor<64x512x3072xf32>
    %170 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %171 = stablehlo.add %170, %166 : tensor<64x512x3072xf32>
    %cst_22 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %172 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %173 = stablehlo.multiply %172, %171 : tensor<64x512x3072xf32>
    %174 = stablehlo.multiply %155, %173 : tensor<64x512x3072xf32>
    %175 = stablehlo.transpose %arg17, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %176 = stablehlo.dot_general %174, %175, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %177 = stablehlo.broadcast_in_dim %arg18, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %178 = stablehlo.broadcast_in_dim %177, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %179 = stablehlo.add %176, %178 : tensor<64x512x768xf32>
    %180 = stablehlo.add %179, %150 : tensor<64x512x768xf32>
    %cst_23 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %181 = stablehlo.reduce(%180 init: %cst_23) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %182 = stablehlo.broadcast_in_dim %181, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %183 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %184 = stablehlo.divide %182, %183 : tensor<64x512x1xf32>
    %185:4 = call @_var(%180, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %186 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %187 = stablehlo.maximum %185#0, %186 : tensor<64x512x1xf32>
    %188 = stablehlo.compare  EQ, %185#0, %187,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %189 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %190 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %191 = stablehlo.select %188, %189, %190 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %192 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %193 = stablehlo.compare  EQ, %192, %187,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %194 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %195 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %196 = stablehlo.select %193, %194, %195 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %197 = stablehlo.divide %191, %196 : tensor<64x512x1xf32>
    %198 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %199 = stablehlo.add %187, %198 : tensor<64x512x1xf32>
    %200 = stablehlo.rsqrt %199 : tensor<64x512x1xf32>
    %201 = stablehlo.divide %200, %199 : tensor<64x512x1xf32>
    %202 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %203 = stablehlo.multiply %202, %201 : tensor<64x512x1xf32>
    %204 = stablehlo.broadcast_in_dim %184, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %205 = stablehlo.subtract %180, %204 : tensor<64x512x768xf32>
    %206 = stablehlo.broadcast_in_dim %200, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %207 = stablehlo.multiply %205, %206 : tensor<64x512x768xf32>
    %208 = stablehlo.broadcast_in_dim %arg19, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %209 = stablehlo.broadcast_in_dim %208, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %210 = stablehlo.multiply %209, %207 : tensor<64x512x768xf32>
    %211 = stablehlo.broadcast_in_dim %arg20, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %212 = stablehlo.broadcast_in_dim %211, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %213 = stablehlo.add %210, %212 : tensor<64x512x768xf32>
    %214 = stablehlo.transpose %arg21, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %215 = stablehlo.dot_general %213, %214, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %216 = stablehlo.broadcast_in_dim %arg22, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %217 = stablehlo.broadcast_in_dim %216, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %218 = stablehlo.add %215, %217 : tensor<64x512x768xf32>
    %219 = stablehlo.transpose %arg25, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %220 = stablehlo.dot_general %213, %219, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %221 = stablehlo.broadcast_in_dim %arg26, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %222 = stablehlo.broadcast_in_dim %221, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %223 = stablehlo.add %220, %222 : tensor<64x512x768xf32>
    %224 = stablehlo.transpose %arg23, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %225 = stablehlo.dot_general %213, %224, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %226 = stablehlo.broadcast_in_dim %arg24, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %227 = stablehlo.broadcast_in_dim %226, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %228 = stablehlo.add %225, %227 : tensor<64x512x768xf32>
    %229 = stablehlo.reshape %218 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %230 = stablehlo.reshape %223 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %231 = stablehlo.reshape %228 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %232 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %233 = stablehlo.sqrt %cst_12 : tensor<f32>
    %234 = stablehlo.convert %233 : tensor<f32>
    %235 = stablehlo.broadcast_in_dim %234, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %236 = stablehlo.divide %229, %235 : tensor<64x512x12x64xf32>
    %237 = stablehlo.dot_general %230, %236, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %238 = stablehlo.transpose %237, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %239:2 = call @_where_33(%232, %238, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_24 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %240 = stablehlo.reduce(%239#0 init: %cst_24) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %241 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %242 = stablehlo.maximum %241, %240 : tensor<64x512x12xf32>
    %243 = stablehlo.broadcast_in_dim %242, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %244 = stablehlo.broadcast_in_dim %243, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %245 = stablehlo.subtract %239#0, %244 : tensor<64x512x12x512xf32>
    %246 = stablehlo.exponential %245 : tensor<64x512x12x512xf32>
    %cst_25 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %247 = stablehlo.reduce(%246 init: %cst_25) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %248 = stablehlo.broadcast_in_dim %247, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %249 = stablehlo.broadcast_in_dim %248, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %250 = stablehlo.divide %246, %249 : tensor<64x512x12x512xf32>
    %251 = stablehlo.multiply %248, %248 : tensor<64x512x12x1xf32>
    %cst_26 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %252 = stablehlo.broadcast_in_dim %cst_26, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %253 = stablehlo.divide %252, %251 : tensor<64x512x12x1xf32>
    %254 = stablehlo.dot_general %231, %250, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %255 = stablehlo.transpose %254, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %256 = stablehlo.reshape %255 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %257 = stablehlo.transpose %arg27, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %258 = stablehlo.dot_general %256, %257, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %259 = stablehlo.broadcast_in_dim %arg28, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %260 = stablehlo.broadcast_in_dim %259, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %261 = stablehlo.add %258, %260 : tensor<64x512x768xf32>
    %262 = stablehlo.add %261, %213 : tensor<64x512x768xf32>
    %cst_27 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %263 = stablehlo.reduce(%262 init: %cst_27) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %264 = stablehlo.broadcast_in_dim %263, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %265 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %266 = stablehlo.divide %264, %265 : tensor<64x512x1xf32>
    %267:4 = call @_var(%262, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %268 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %269 = stablehlo.maximum %267#0, %268 : tensor<64x512x1xf32>
    %270 = stablehlo.compare  EQ, %267#0, %269,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %271 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %272 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %273 = stablehlo.select %270, %271, %272 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %274 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %275 = stablehlo.compare  EQ, %274, %269,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %276 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %277 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %278 = stablehlo.select %275, %276, %277 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %279 = stablehlo.divide %273, %278 : tensor<64x512x1xf32>
    %280 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %281 = stablehlo.add %269, %280 : tensor<64x512x1xf32>
    %282 = stablehlo.rsqrt %281 : tensor<64x512x1xf32>
    %283 = stablehlo.divide %282, %281 : tensor<64x512x1xf32>
    %284 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %285 = stablehlo.multiply %284, %283 : tensor<64x512x1xf32>
    %286 = stablehlo.broadcast_in_dim %266, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %287 = stablehlo.subtract %262, %286 : tensor<64x512x768xf32>
    %288 = stablehlo.broadcast_in_dim %282, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %289 = stablehlo.multiply %287, %288 : tensor<64x512x768xf32>
    %290 = stablehlo.broadcast_in_dim %arg29, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %291 = stablehlo.broadcast_in_dim %290, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %292 = stablehlo.multiply %291, %289 : tensor<64x512x768xf32>
    %293 = stablehlo.broadcast_in_dim %arg30, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %294 = stablehlo.broadcast_in_dim %293, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %295 = stablehlo.add %292, %294 : tensor<64x512x768xf32>
    %296 = stablehlo.transpose %arg31, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %297 = stablehlo.dot_general %295, %296, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %298 = stablehlo.broadcast_in_dim %arg32, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %299 = stablehlo.broadcast_in_dim %298, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %300 = stablehlo.add %297, %299 : tensor<64x512x3072xf32>
    %301 = stablehlo.multiply %300, %300 : tensor<64x512x3072xf32>
    %302 = stablehlo.multiply %301, %300 : tensor<64x512x3072xf32>
    %303 = stablehlo.multiply %300, %300 : tensor<64x512x3072xf32>
    %304 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %305 = stablehlo.multiply %304, %303 : tensor<64x512x3072xf32>
    %306 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %307 = stablehlo.multiply %306, %302 : tensor<64x512x3072xf32>
    %308 = stablehlo.add %300, %307 : tensor<64x512x3072xf32>
    %309 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %310 = stablehlo.multiply %309, %308 : tensor<64x512x3072xf32>
    %311 = stablehlo.tanh %310 : tensor<64x512x3072xf32>
    %312 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %313 = stablehlo.broadcast_in_dim %312, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %314 = stablehlo.subtract %313, %311 : tensor<64x512x3072xf32>
    %315 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %316 = stablehlo.add %315, %311 : tensor<64x512x3072xf32>
    %317 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %318 = stablehlo.multiply %317, %316 : tensor<64x512x3072xf32>
    %319 = stablehlo.multiply %300, %318 : tensor<64x512x3072xf32>
    %320 = stablehlo.transpose %arg33, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %321 = stablehlo.dot_general %319, %320, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %322 = stablehlo.broadcast_in_dim %arg34, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %323 = stablehlo.broadcast_in_dim %322, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %324 = stablehlo.add %321, %323 : tensor<64x512x768xf32>
    %325 = stablehlo.add %324, %295 : tensor<64x512x768xf32>
    %cst_28 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %326 = stablehlo.reduce(%325 init: %cst_28) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %327 = stablehlo.broadcast_in_dim %326, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %328 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %329 = stablehlo.divide %327, %328 : tensor<64x512x1xf32>
    %330:4 = call @_var(%325, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %331 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %332 = stablehlo.maximum %330#0, %331 : tensor<64x512x1xf32>
    %333 = stablehlo.compare  EQ, %330#0, %332,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %334 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %335 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %336 = stablehlo.select %333, %334, %335 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %337 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %338 = stablehlo.compare  EQ, %337, %332,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %339 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %340 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %341 = stablehlo.select %338, %339, %340 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %342 = stablehlo.divide %336, %341 : tensor<64x512x1xf32>
    %343 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %344 = stablehlo.add %332, %343 : tensor<64x512x1xf32>
    %345 = stablehlo.rsqrt %344 : tensor<64x512x1xf32>
    %346 = stablehlo.divide %345, %344 : tensor<64x512x1xf32>
    %347 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %348 = stablehlo.multiply %347, %346 : tensor<64x512x1xf32>
    %349 = stablehlo.broadcast_in_dim %329, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %350 = stablehlo.subtract %325, %349 : tensor<64x512x768xf32>
    %351 = stablehlo.broadcast_in_dim %345, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %352 = stablehlo.multiply %350, %351 : tensor<64x512x768xf32>
    %353 = stablehlo.broadcast_in_dim %arg35, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %354 = stablehlo.broadcast_in_dim %353, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %355 = stablehlo.multiply %354, %352 : tensor<64x512x768xf32>
    %356 = stablehlo.broadcast_in_dim %arg36, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %357 = stablehlo.broadcast_in_dim %356, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %358 = stablehlo.add %355, %357 : tensor<64x512x768xf32>
    %359 = stablehlo.transpose %arg37, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %360 = stablehlo.dot_general %358, %359, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %361 = stablehlo.broadcast_in_dim %arg38, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %362 = stablehlo.broadcast_in_dim %361, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %363 = stablehlo.add %360, %362 : tensor<64x512x768xf32>
    %364 = stablehlo.transpose %arg41, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %365 = stablehlo.dot_general %358, %364, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %366 = stablehlo.broadcast_in_dim %arg42, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %367 = stablehlo.broadcast_in_dim %366, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %368 = stablehlo.add %365, %367 : tensor<64x512x768xf32>
    %369 = stablehlo.transpose %arg39, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %370 = stablehlo.dot_general %358, %369, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %371 = stablehlo.broadcast_in_dim %arg40, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %372 = stablehlo.broadcast_in_dim %371, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %373 = stablehlo.add %370, %372 : tensor<64x512x768xf32>
    %374 = stablehlo.reshape %363 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %375 = stablehlo.reshape %368 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %376 = stablehlo.reshape %373 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %377 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %378 = stablehlo.sqrt %cst_12 : tensor<f32>
    %379 = stablehlo.convert %378 : tensor<f32>
    %380 = stablehlo.broadcast_in_dim %379, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %381 = stablehlo.divide %374, %380 : tensor<64x512x12x64xf32>
    %382 = stablehlo.dot_general %375, %381, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %383 = stablehlo.transpose %382, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %384:2 = call @_where_33(%377, %383, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_29 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %385 = stablehlo.reduce(%384#0 init: %cst_29) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %386 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %387 = stablehlo.maximum %386, %385 : tensor<64x512x12xf32>
    %388 = stablehlo.broadcast_in_dim %387, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %389 = stablehlo.broadcast_in_dim %388, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %390 = stablehlo.subtract %384#0, %389 : tensor<64x512x12x512xf32>
    %391 = stablehlo.exponential %390 : tensor<64x512x12x512xf32>
    %cst_30 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %392 = stablehlo.reduce(%391 init: %cst_30) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %393 = stablehlo.broadcast_in_dim %392, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %394 = stablehlo.broadcast_in_dim %393, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %395 = stablehlo.divide %391, %394 : tensor<64x512x12x512xf32>
    %396 = stablehlo.multiply %393, %393 : tensor<64x512x12x1xf32>
    %cst_31 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %397 = stablehlo.broadcast_in_dim %cst_31, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %398 = stablehlo.divide %397, %396 : tensor<64x512x12x1xf32>
    %399 = stablehlo.dot_general %376, %395, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %400 = stablehlo.transpose %399, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %401 = stablehlo.reshape %400 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %402 = stablehlo.transpose %arg43, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %403 = stablehlo.dot_general %401, %402, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %404 = stablehlo.broadcast_in_dim %arg44, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %405 = stablehlo.broadcast_in_dim %404, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %406 = stablehlo.add %403, %405 : tensor<64x512x768xf32>
    %407 = stablehlo.add %406, %358 : tensor<64x512x768xf32>
    %cst_32 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %408 = stablehlo.reduce(%407 init: %cst_32) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %409 = stablehlo.broadcast_in_dim %408, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %410 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %411 = stablehlo.divide %409, %410 : tensor<64x512x1xf32>
    %412:4 = call @_var(%407, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %413 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %414 = stablehlo.maximum %412#0, %413 : tensor<64x512x1xf32>
    %415 = stablehlo.compare  EQ, %412#0, %414,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %416 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %417 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %418 = stablehlo.select %415, %416, %417 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %419 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %420 = stablehlo.compare  EQ, %419, %414,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %421 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %422 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %423 = stablehlo.select %420, %421, %422 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %424 = stablehlo.divide %418, %423 : tensor<64x512x1xf32>
    %425 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %426 = stablehlo.add %414, %425 : tensor<64x512x1xf32>
    %427 = stablehlo.rsqrt %426 : tensor<64x512x1xf32>
    %428 = stablehlo.divide %427, %426 : tensor<64x512x1xf32>
    %429 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %430 = stablehlo.multiply %429, %428 : tensor<64x512x1xf32>
    %431 = stablehlo.broadcast_in_dim %411, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %432 = stablehlo.subtract %407, %431 : tensor<64x512x768xf32>
    %433 = stablehlo.broadcast_in_dim %427, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %434 = stablehlo.multiply %432, %433 : tensor<64x512x768xf32>
    %435 = stablehlo.broadcast_in_dim %arg45, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %436 = stablehlo.broadcast_in_dim %435, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %437 = stablehlo.multiply %436, %434 : tensor<64x512x768xf32>
    %438 = stablehlo.broadcast_in_dim %arg46, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %439 = stablehlo.broadcast_in_dim %438, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %440 = stablehlo.add %437, %439 : tensor<64x512x768xf32>
    %441 = stablehlo.transpose %arg47, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %442 = stablehlo.dot_general %440, %441, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %443 = stablehlo.broadcast_in_dim %arg48, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %444 = stablehlo.broadcast_in_dim %443, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %445 = stablehlo.add %442, %444 : tensor<64x512x3072xf32>
    %446 = stablehlo.multiply %445, %445 : tensor<64x512x3072xf32>
    %447 = stablehlo.multiply %446, %445 : tensor<64x512x3072xf32>
    %448 = stablehlo.multiply %445, %445 : tensor<64x512x3072xf32>
    %449 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %450 = stablehlo.multiply %449, %448 : tensor<64x512x3072xf32>
    %451 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %452 = stablehlo.multiply %451, %447 : tensor<64x512x3072xf32>
    %453 = stablehlo.add %445, %452 : tensor<64x512x3072xf32>
    %454 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %455 = stablehlo.multiply %454, %453 : tensor<64x512x3072xf32>
    %456 = stablehlo.tanh %455 : tensor<64x512x3072xf32>
    %457 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %458 = stablehlo.broadcast_in_dim %457, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %459 = stablehlo.subtract %458, %456 : tensor<64x512x3072xf32>
    %460 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %461 = stablehlo.add %460, %456 : tensor<64x512x3072xf32>
    %462 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %463 = stablehlo.multiply %462, %461 : tensor<64x512x3072xf32>
    %464 = stablehlo.multiply %445, %463 : tensor<64x512x3072xf32>
    %465 = stablehlo.transpose %arg49, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %466 = stablehlo.dot_general %464, %465, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %467 = stablehlo.broadcast_in_dim %arg50, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %468 = stablehlo.broadcast_in_dim %467, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %469 = stablehlo.add %466, %468 : tensor<64x512x768xf32>
    %470 = stablehlo.add %469, %440 : tensor<64x512x768xf32>
    %cst_33 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %471 = stablehlo.reduce(%470 init: %cst_33) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %472 = stablehlo.broadcast_in_dim %471, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %473 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %474 = stablehlo.divide %472, %473 : tensor<64x512x1xf32>
    %475:4 = call @_var(%470, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %476 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %477 = stablehlo.maximum %475#0, %476 : tensor<64x512x1xf32>
    %478 = stablehlo.compare  EQ, %475#0, %477,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %479 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %480 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %481 = stablehlo.select %478, %479, %480 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %482 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %483 = stablehlo.compare  EQ, %482, %477,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %484 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %485 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %486 = stablehlo.select %483, %484, %485 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %487 = stablehlo.divide %481, %486 : tensor<64x512x1xf32>
    %488 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %489 = stablehlo.add %477, %488 : tensor<64x512x1xf32>
    %490 = stablehlo.rsqrt %489 : tensor<64x512x1xf32>
    %491 = stablehlo.divide %490, %489 : tensor<64x512x1xf32>
    %492 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %493 = stablehlo.multiply %492, %491 : tensor<64x512x1xf32>
    %494 = stablehlo.broadcast_in_dim %474, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %495 = stablehlo.subtract %470, %494 : tensor<64x512x768xf32>
    %496 = stablehlo.broadcast_in_dim %490, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %497 = stablehlo.multiply %495, %496 : tensor<64x512x768xf32>
    %498 = stablehlo.broadcast_in_dim %arg51, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %499 = stablehlo.broadcast_in_dim %498, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %500 = stablehlo.multiply %499, %497 : tensor<64x512x768xf32>
    %501 = stablehlo.broadcast_in_dim %arg52, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %502 = stablehlo.broadcast_in_dim %501, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %503 = stablehlo.add %500, %502 : tensor<64x512x768xf32>
    %504 = stablehlo.transpose %arg53, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %505 = stablehlo.dot_general %503, %504, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %506 = stablehlo.broadcast_in_dim %arg54, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %507 = stablehlo.broadcast_in_dim %506, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %508 = stablehlo.add %505, %507 : tensor<64x512x768xf32>
    %509 = stablehlo.transpose %arg57, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %510 = stablehlo.dot_general %503, %509, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %511 = stablehlo.broadcast_in_dim %arg58, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %512 = stablehlo.broadcast_in_dim %511, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %513 = stablehlo.add %510, %512 : tensor<64x512x768xf32>
    %514 = stablehlo.transpose %arg55, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %515 = stablehlo.dot_general %503, %514, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %516 = stablehlo.broadcast_in_dim %arg56, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %517 = stablehlo.broadcast_in_dim %516, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %518 = stablehlo.add %515, %517 : tensor<64x512x768xf32>
    %519 = stablehlo.reshape %508 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %520 = stablehlo.reshape %513 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %521 = stablehlo.reshape %518 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %522 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %523 = stablehlo.sqrt %cst_12 : tensor<f32>
    %524 = stablehlo.convert %523 : tensor<f32>
    %525 = stablehlo.broadcast_in_dim %524, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %526 = stablehlo.divide %519, %525 : tensor<64x512x12x64xf32>
    %527 = stablehlo.dot_general %520, %526, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %528 = stablehlo.transpose %527, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %529:2 = call @_where_33(%522, %528, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_34 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %530 = stablehlo.reduce(%529#0 init: %cst_34) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %531 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %532 = stablehlo.maximum %531, %530 : tensor<64x512x12xf32>
    %533 = stablehlo.broadcast_in_dim %532, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %534 = stablehlo.broadcast_in_dim %533, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %535 = stablehlo.subtract %529#0, %534 : tensor<64x512x12x512xf32>
    %536 = stablehlo.exponential %535 : tensor<64x512x12x512xf32>
    %cst_35 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %537 = stablehlo.reduce(%536 init: %cst_35) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %538 = stablehlo.broadcast_in_dim %537, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %539 = stablehlo.broadcast_in_dim %538, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %540 = stablehlo.divide %536, %539 : tensor<64x512x12x512xf32>
    %541 = stablehlo.multiply %538, %538 : tensor<64x512x12x1xf32>
    %cst_36 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %542 = stablehlo.broadcast_in_dim %cst_36, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %543 = stablehlo.divide %542, %541 : tensor<64x512x12x1xf32>
    %544 = stablehlo.dot_general %521, %540, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %545 = stablehlo.transpose %544, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %546 = stablehlo.reshape %545 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %547 = stablehlo.transpose %arg59, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %548 = stablehlo.dot_general %546, %547, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %549 = stablehlo.broadcast_in_dim %arg60, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %550 = stablehlo.broadcast_in_dim %549, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %551 = stablehlo.add %548, %550 : tensor<64x512x768xf32>
    %552 = stablehlo.add %551, %503 : tensor<64x512x768xf32>
    %cst_37 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %553 = stablehlo.reduce(%552 init: %cst_37) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %554 = stablehlo.broadcast_in_dim %553, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %555 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %556 = stablehlo.divide %554, %555 : tensor<64x512x1xf32>
    %557:4 = call @_var(%552, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %558 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %559 = stablehlo.maximum %557#0, %558 : tensor<64x512x1xf32>
    %560 = stablehlo.compare  EQ, %557#0, %559,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %561 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %562 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %563 = stablehlo.select %560, %561, %562 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %564 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %565 = stablehlo.compare  EQ, %564, %559,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %566 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %567 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %568 = stablehlo.select %565, %566, %567 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %569 = stablehlo.divide %563, %568 : tensor<64x512x1xf32>
    %570 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %571 = stablehlo.add %559, %570 : tensor<64x512x1xf32>
    %572 = stablehlo.rsqrt %571 : tensor<64x512x1xf32>
    %573 = stablehlo.divide %572, %571 : tensor<64x512x1xf32>
    %574 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %575 = stablehlo.multiply %574, %573 : tensor<64x512x1xf32>
    %576 = stablehlo.broadcast_in_dim %556, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %577 = stablehlo.subtract %552, %576 : tensor<64x512x768xf32>
    %578 = stablehlo.broadcast_in_dim %572, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %579 = stablehlo.multiply %577, %578 : tensor<64x512x768xf32>
    %580 = stablehlo.broadcast_in_dim %arg61, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %581 = stablehlo.broadcast_in_dim %580, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %582 = stablehlo.multiply %581, %579 : tensor<64x512x768xf32>
    %583 = stablehlo.broadcast_in_dim %arg62, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %584 = stablehlo.broadcast_in_dim %583, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %585 = stablehlo.add %582, %584 : tensor<64x512x768xf32>
    %586 = stablehlo.transpose %arg63, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %587 = stablehlo.dot_general %585, %586, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %588 = stablehlo.broadcast_in_dim %arg64, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %589 = stablehlo.broadcast_in_dim %588, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %590 = stablehlo.add %587, %589 : tensor<64x512x3072xf32>
    %591 = stablehlo.multiply %590, %590 : tensor<64x512x3072xf32>
    %592 = stablehlo.multiply %591, %590 : tensor<64x512x3072xf32>
    %593 = stablehlo.multiply %590, %590 : tensor<64x512x3072xf32>
    %594 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %595 = stablehlo.multiply %594, %593 : tensor<64x512x3072xf32>
    %596 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %597 = stablehlo.multiply %596, %592 : tensor<64x512x3072xf32>
    %598 = stablehlo.add %590, %597 : tensor<64x512x3072xf32>
    %599 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %600 = stablehlo.multiply %599, %598 : tensor<64x512x3072xf32>
    %601 = stablehlo.tanh %600 : tensor<64x512x3072xf32>
    %602 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %603 = stablehlo.broadcast_in_dim %602, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %604 = stablehlo.subtract %603, %601 : tensor<64x512x3072xf32>
    %605 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %606 = stablehlo.add %605, %601 : tensor<64x512x3072xf32>
    %607 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %608 = stablehlo.multiply %607, %606 : tensor<64x512x3072xf32>
    %609 = stablehlo.multiply %590, %608 : tensor<64x512x3072xf32>
    %610 = stablehlo.transpose %arg65, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %611 = stablehlo.dot_general %609, %610, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %612 = stablehlo.broadcast_in_dim %arg66, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %613 = stablehlo.broadcast_in_dim %612, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %614 = stablehlo.add %611, %613 : tensor<64x512x768xf32>
    %615 = stablehlo.add %614, %585 : tensor<64x512x768xf32>
    %cst_38 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %616 = stablehlo.reduce(%615 init: %cst_38) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %617 = stablehlo.broadcast_in_dim %616, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %618 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %619 = stablehlo.divide %617, %618 : tensor<64x512x1xf32>
    %620:4 = call @_var(%615, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %621 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %622 = stablehlo.maximum %620#0, %621 : tensor<64x512x1xf32>
    %623 = stablehlo.compare  EQ, %620#0, %622,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %624 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %625 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %626 = stablehlo.select %623, %624, %625 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %627 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %628 = stablehlo.compare  EQ, %627, %622,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %629 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %630 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %631 = stablehlo.select %628, %629, %630 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %632 = stablehlo.divide %626, %631 : tensor<64x512x1xf32>
    %633 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %634 = stablehlo.add %622, %633 : tensor<64x512x1xf32>
    %635 = stablehlo.rsqrt %634 : tensor<64x512x1xf32>
    %636 = stablehlo.divide %635, %634 : tensor<64x512x1xf32>
    %637 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %638 = stablehlo.multiply %637, %636 : tensor<64x512x1xf32>
    %639 = stablehlo.broadcast_in_dim %619, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %640 = stablehlo.subtract %615, %639 : tensor<64x512x768xf32>
    %641 = stablehlo.broadcast_in_dim %635, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %642 = stablehlo.multiply %640, %641 : tensor<64x512x768xf32>
    %643 = stablehlo.broadcast_in_dim %arg67, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %644 = stablehlo.broadcast_in_dim %643, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %645 = stablehlo.multiply %644, %642 : tensor<64x512x768xf32>
    %646 = stablehlo.broadcast_in_dim %arg68, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %647 = stablehlo.broadcast_in_dim %646, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %648 = stablehlo.add %645, %647 : tensor<64x512x768xf32>
    %649 = stablehlo.transpose %arg69, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %650 = stablehlo.dot_general %648, %649, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %651 = stablehlo.broadcast_in_dim %arg70, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %652 = stablehlo.broadcast_in_dim %651, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %653 = stablehlo.add %650, %652 : tensor<64x512x768xf32>
    %654 = stablehlo.transpose %arg73, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %655 = stablehlo.dot_general %648, %654, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %656 = stablehlo.broadcast_in_dim %arg74, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %657 = stablehlo.broadcast_in_dim %656, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %658 = stablehlo.add %655, %657 : tensor<64x512x768xf32>
    %659 = stablehlo.transpose %arg71, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %660 = stablehlo.dot_general %648, %659, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %661 = stablehlo.broadcast_in_dim %arg72, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %662 = stablehlo.broadcast_in_dim %661, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %663 = stablehlo.add %660, %662 : tensor<64x512x768xf32>
    %664 = stablehlo.reshape %653 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %665 = stablehlo.reshape %658 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %666 = stablehlo.reshape %663 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %667 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %668 = stablehlo.sqrt %cst_12 : tensor<f32>
    %669 = stablehlo.convert %668 : tensor<f32>
    %670 = stablehlo.broadcast_in_dim %669, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %671 = stablehlo.divide %664, %670 : tensor<64x512x12x64xf32>
    %672 = stablehlo.dot_general %665, %671, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %673 = stablehlo.transpose %672, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %674:2 = call @_where_33(%667, %673, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_39 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %675 = stablehlo.reduce(%674#0 init: %cst_39) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %676 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %677 = stablehlo.maximum %676, %675 : tensor<64x512x12xf32>
    %678 = stablehlo.broadcast_in_dim %677, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %679 = stablehlo.broadcast_in_dim %678, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %680 = stablehlo.subtract %674#0, %679 : tensor<64x512x12x512xf32>
    %681 = stablehlo.exponential %680 : tensor<64x512x12x512xf32>
    %cst_40 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %682 = stablehlo.reduce(%681 init: %cst_40) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %683 = stablehlo.broadcast_in_dim %682, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %684 = stablehlo.broadcast_in_dim %683, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %685 = stablehlo.divide %681, %684 : tensor<64x512x12x512xf32>
    %686 = stablehlo.multiply %683, %683 : tensor<64x512x12x1xf32>
    %cst_41 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %687 = stablehlo.broadcast_in_dim %cst_41, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %688 = stablehlo.divide %687, %686 : tensor<64x512x12x1xf32>
    %689 = stablehlo.dot_general %666, %685, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %690 = stablehlo.transpose %689, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %691 = stablehlo.reshape %690 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %692 = stablehlo.transpose %arg75, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %693 = stablehlo.dot_general %691, %692, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %694 = stablehlo.broadcast_in_dim %arg76, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %695 = stablehlo.broadcast_in_dim %694, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %696 = stablehlo.add %693, %695 : tensor<64x512x768xf32>
    %697 = stablehlo.add %696, %648 : tensor<64x512x768xf32>
    %cst_42 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %698 = stablehlo.reduce(%697 init: %cst_42) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %699 = stablehlo.broadcast_in_dim %698, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %700 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %701 = stablehlo.divide %699, %700 : tensor<64x512x1xf32>
    %702:4 = call @_var(%697, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %703 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %704 = stablehlo.maximum %702#0, %703 : tensor<64x512x1xf32>
    %705 = stablehlo.compare  EQ, %702#0, %704,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %706 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %707 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %708 = stablehlo.select %705, %706, %707 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %709 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %710 = stablehlo.compare  EQ, %709, %704,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %711 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %712 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %713 = stablehlo.select %710, %711, %712 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %714 = stablehlo.divide %708, %713 : tensor<64x512x1xf32>
    %715 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %716 = stablehlo.add %704, %715 : tensor<64x512x1xf32>
    %717 = stablehlo.rsqrt %716 : tensor<64x512x1xf32>
    %718 = stablehlo.divide %717, %716 : tensor<64x512x1xf32>
    %719 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %720 = stablehlo.multiply %719, %718 : tensor<64x512x1xf32>
    %721 = stablehlo.broadcast_in_dim %701, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %722 = stablehlo.subtract %697, %721 : tensor<64x512x768xf32>
    %723 = stablehlo.broadcast_in_dim %717, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %724 = stablehlo.multiply %722, %723 : tensor<64x512x768xf32>
    %725 = stablehlo.broadcast_in_dim %arg77, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %726 = stablehlo.broadcast_in_dim %725, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %727 = stablehlo.multiply %726, %724 : tensor<64x512x768xf32>
    %728 = stablehlo.broadcast_in_dim %arg78, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %729 = stablehlo.broadcast_in_dim %728, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %730 = stablehlo.add %727, %729 : tensor<64x512x768xf32>
    %731 = stablehlo.transpose %arg79, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %732 = stablehlo.dot_general %730, %731, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %733 = stablehlo.broadcast_in_dim %arg80, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %734 = stablehlo.broadcast_in_dim %733, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %735 = stablehlo.add %732, %734 : tensor<64x512x3072xf32>
    %736 = stablehlo.multiply %735, %735 : tensor<64x512x3072xf32>
    %737 = stablehlo.multiply %736, %735 : tensor<64x512x3072xf32>
    %738 = stablehlo.multiply %735, %735 : tensor<64x512x3072xf32>
    %739 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %740 = stablehlo.multiply %739, %738 : tensor<64x512x3072xf32>
    %741 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %742 = stablehlo.multiply %741, %737 : tensor<64x512x3072xf32>
    %743 = stablehlo.add %735, %742 : tensor<64x512x3072xf32>
    %744 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %745 = stablehlo.multiply %744, %743 : tensor<64x512x3072xf32>
    %746 = stablehlo.tanh %745 : tensor<64x512x3072xf32>
    %747 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %748 = stablehlo.broadcast_in_dim %747, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %749 = stablehlo.subtract %748, %746 : tensor<64x512x3072xf32>
    %750 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %751 = stablehlo.add %750, %746 : tensor<64x512x3072xf32>
    %752 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %753 = stablehlo.multiply %752, %751 : tensor<64x512x3072xf32>
    %754 = stablehlo.multiply %735, %753 : tensor<64x512x3072xf32>
    %755 = stablehlo.transpose %arg81, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %756 = stablehlo.dot_general %754, %755, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %757 = stablehlo.broadcast_in_dim %arg82, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %758 = stablehlo.broadcast_in_dim %757, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %759 = stablehlo.add %756, %758 : tensor<64x512x768xf32>
    %760 = stablehlo.add %759, %730 : tensor<64x512x768xf32>
    %cst_43 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %761 = stablehlo.reduce(%760 init: %cst_43) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %762 = stablehlo.broadcast_in_dim %761, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %763 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %764 = stablehlo.divide %762, %763 : tensor<64x512x1xf32>
    %765:4 = call @_var(%760, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %766 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %767 = stablehlo.maximum %765#0, %766 : tensor<64x512x1xf32>
    %768 = stablehlo.compare  EQ, %765#0, %767,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %769 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %770 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %771 = stablehlo.select %768, %769, %770 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %772 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %773 = stablehlo.compare  EQ, %772, %767,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %774 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %775 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %776 = stablehlo.select %773, %774, %775 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %777 = stablehlo.divide %771, %776 : tensor<64x512x1xf32>
    %778 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %779 = stablehlo.add %767, %778 : tensor<64x512x1xf32>
    %780 = stablehlo.rsqrt %779 : tensor<64x512x1xf32>
    %781 = stablehlo.divide %780, %779 : tensor<64x512x1xf32>
    %782 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %783 = stablehlo.multiply %782, %781 : tensor<64x512x1xf32>
    %784 = stablehlo.broadcast_in_dim %764, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %785 = stablehlo.subtract %760, %784 : tensor<64x512x768xf32>
    %786 = stablehlo.broadcast_in_dim %780, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %787 = stablehlo.multiply %785, %786 : tensor<64x512x768xf32>
    %788 = stablehlo.broadcast_in_dim %arg83, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %789 = stablehlo.broadcast_in_dim %788, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %790 = stablehlo.multiply %789, %787 : tensor<64x512x768xf32>
    %791 = stablehlo.broadcast_in_dim %arg84, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %792 = stablehlo.broadcast_in_dim %791, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %793 = stablehlo.add %790, %792 : tensor<64x512x768xf32>
    %794 = stablehlo.transpose %arg85, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %795 = stablehlo.dot_general %793, %794, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %796 = stablehlo.broadcast_in_dim %arg86, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %797 = stablehlo.broadcast_in_dim %796, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %798 = stablehlo.add %795, %797 : tensor<64x512x768xf32>
    %799 = stablehlo.transpose %arg89, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %800 = stablehlo.dot_general %793, %799, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %801 = stablehlo.broadcast_in_dim %arg90, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %802 = stablehlo.broadcast_in_dim %801, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %803 = stablehlo.add %800, %802 : tensor<64x512x768xf32>
    %804 = stablehlo.transpose %arg87, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %805 = stablehlo.dot_general %793, %804, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %806 = stablehlo.broadcast_in_dim %arg88, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %807 = stablehlo.broadcast_in_dim %806, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %808 = stablehlo.add %805, %807 : tensor<64x512x768xf32>
    %809 = stablehlo.reshape %798 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %810 = stablehlo.reshape %803 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %811 = stablehlo.reshape %808 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %812 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %813 = stablehlo.sqrt %cst_12 : tensor<f32>
    %814 = stablehlo.convert %813 : tensor<f32>
    %815 = stablehlo.broadcast_in_dim %814, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %816 = stablehlo.divide %809, %815 : tensor<64x512x12x64xf32>
    %817 = stablehlo.dot_general %810, %816, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %818 = stablehlo.transpose %817, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %819:2 = call @_where_33(%812, %818, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_44 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %820 = stablehlo.reduce(%819#0 init: %cst_44) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %821 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %822 = stablehlo.maximum %821, %820 : tensor<64x512x12xf32>
    %823 = stablehlo.broadcast_in_dim %822, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %824 = stablehlo.broadcast_in_dim %823, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %825 = stablehlo.subtract %819#0, %824 : tensor<64x512x12x512xf32>
    %826 = stablehlo.exponential %825 : tensor<64x512x12x512xf32>
    %cst_45 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %827 = stablehlo.reduce(%826 init: %cst_45) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %828 = stablehlo.broadcast_in_dim %827, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %829 = stablehlo.broadcast_in_dim %828, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %830 = stablehlo.divide %826, %829 : tensor<64x512x12x512xf32>
    %831 = stablehlo.multiply %828, %828 : tensor<64x512x12x1xf32>
    %cst_46 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %832 = stablehlo.broadcast_in_dim %cst_46, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %833 = stablehlo.divide %832, %831 : tensor<64x512x12x1xf32>
    %834 = stablehlo.dot_general %811, %830, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %835 = stablehlo.transpose %834, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %836 = stablehlo.reshape %835 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %837 = stablehlo.transpose %arg91, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %838 = stablehlo.dot_general %836, %837, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %839 = stablehlo.broadcast_in_dim %arg92, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %840 = stablehlo.broadcast_in_dim %839, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %841 = stablehlo.add %838, %840 : tensor<64x512x768xf32>
    %842 = stablehlo.add %841, %793 : tensor<64x512x768xf32>
    %cst_47 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %843 = stablehlo.reduce(%842 init: %cst_47) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %844 = stablehlo.broadcast_in_dim %843, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %845 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %846 = stablehlo.divide %844, %845 : tensor<64x512x1xf32>
    %847:4 = call @_var(%842, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %848 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %849 = stablehlo.maximum %847#0, %848 : tensor<64x512x1xf32>
    %850 = stablehlo.compare  EQ, %847#0, %849,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %851 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %852 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %853 = stablehlo.select %850, %851, %852 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %854 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %855 = stablehlo.compare  EQ, %854, %849,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %856 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %857 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %858 = stablehlo.select %855, %856, %857 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %859 = stablehlo.divide %853, %858 : tensor<64x512x1xf32>
    %860 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %861 = stablehlo.add %849, %860 : tensor<64x512x1xf32>
    %862 = stablehlo.rsqrt %861 : tensor<64x512x1xf32>
    %863 = stablehlo.divide %862, %861 : tensor<64x512x1xf32>
    %864 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %865 = stablehlo.multiply %864, %863 : tensor<64x512x1xf32>
    %866 = stablehlo.broadcast_in_dim %846, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %867 = stablehlo.subtract %842, %866 : tensor<64x512x768xf32>
    %868 = stablehlo.broadcast_in_dim %862, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %869 = stablehlo.multiply %867, %868 : tensor<64x512x768xf32>
    %870 = stablehlo.broadcast_in_dim %arg93, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %871 = stablehlo.broadcast_in_dim %870, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %872 = stablehlo.multiply %871, %869 : tensor<64x512x768xf32>
    %873 = stablehlo.broadcast_in_dim %arg94, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %874 = stablehlo.broadcast_in_dim %873, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %875 = stablehlo.add %872, %874 : tensor<64x512x768xf32>
    %876 = stablehlo.transpose %arg95, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %877 = stablehlo.dot_general %875, %876, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %878 = stablehlo.broadcast_in_dim %arg96, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %879 = stablehlo.broadcast_in_dim %878, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %880 = stablehlo.add %877, %879 : tensor<64x512x3072xf32>
    %881 = stablehlo.multiply %880, %880 : tensor<64x512x3072xf32>
    %882 = stablehlo.multiply %881, %880 : tensor<64x512x3072xf32>
    %883 = stablehlo.multiply %880, %880 : tensor<64x512x3072xf32>
    %884 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %885 = stablehlo.multiply %884, %883 : tensor<64x512x3072xf32>
    %886 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %887 = stablehlo.multiply %886, %882 : tensor<64x512x3072xf32>
    %888 = stablehlo.add %880, %887 : tensor<64x512x3072xf32>
    %889 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %890 = stablehlo.multiply %889, %888 : tensor<64x512x3072xf32>
    %891 = stablehlo.tanh %890 : tensor<64x512x3072xf32>
    %892 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %893 = stablehlo.broadcast_in_dim %892, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %894 = stablehlo.subtract %893, %891 : tensor<64x512x3072xf32>
    %895 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %896 = stablehlo.add %895, %891 : tensor<64x512x3072xf32>
    %897 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %898 = stablehlo.multiply %897, %896 : tensor<64x512x3072xf32>
    %899 = stablehlo.multiply %880, %898 : tensor<64x512x3072xf32>
    %900 = stablehlo.transpose %arg97, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %901 = stablehlo.dot_general %899, %900, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %902 = stablehlo.broadcast_in_dim %arg98, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %903 = stablehlo.broadcast_in_dim %902, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %904 = stablehlo.add %901, %903 : tensor<64x512x768xf32>
    %905 = stablehlo.add %904, %875 : tensor<64x512x768xf32>
    %cst_48 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %906 = stablehlo.reduce(%905 init: %cst_48) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %907 = stablehlo.broadcast_in_dim %906, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %908 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %909 = stablehlo.divide %907, %908 : tensor<64x512x1xf32>
    %910:4 = call @_var(%905, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %911 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %912 = stablehlo.maximum %910#0, %911 : tensor<64x512x1xf32>
    %913 = stablehlo.compare  EQ, %910#0, %912,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %914 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %915 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %916 = stablehlo.select %913, %914, %915 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %917 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %918 = stablehlo.compare  EQ, %917, %912,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %919 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %920 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %921 = stablehlo.select %918, %919, %920 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %922 = stablehlo.divide %916, %921 : tensor<64x512x1xf32>
    %923 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %924 = stablehlo.add %912, %923 : tensor<64x512x1xf32>
    %925 = stablehlo.rsqrt %924 : tensor<64x512x1xf32>
    %926 = stablehlo.divide %925, %924 : tensor<64x512x1xf32>
    %927 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %928 = stablehlo.multiply %927, %926 : tensor<64x512x1xf32>
    %929 = stablehlo.broadcast_in_dim %909, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %930 = stablehlo.subtract %905, %929 : tensor<64x512x768xf32>
    %931 = stablehlo.broadcast_in_dim %925, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %932 = stablehlo.multiply %930, %931 : tensor<64x512x768xf32>
    %933 = stablehlo.broadcast_in_dim %arg99, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %934 = stablehlo.broadcast_in_dim %933, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %935 = stablehlo.multiply %934, %932 : tensor<64x512x768xf32>
    %936 = stablehlo.broadcast_in_dim %arg100, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %937 = stablehlo.broadcast_in_dim %936, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %938 = stablehlo.add %935, %937 : tensor<64x512x768xf32>
    %939 = stablehlo.transpose %arg101, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %940 = stablehlo.dot_general %938, %939, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %941 = stablehlo.broadcast_in_dim %arg102, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %942 = stablehlo.broadcast_in_dim %941, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %943 = stablehlo.add %940, %942 : tensor<64x512x768xf32>
    %944 = stablehlo.transpose %arg105, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %945 = stablehlo.dot_general %938, %944, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %946 = stablehlo.broadcast_in_dim %arg106, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %947 = stablehlo.broadcast_in_dim %946, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %948 = stablehlo.add %945, %947 : tensor<64x512x768xf32>
    %949 = stablehlo.transpose %arg103, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %950 = stablehlo.dot_general %938, %949, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %951 = stablehlo.broadcast_in_dim %arg104, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %952 = stablehlo.broadcast_in_dim %951, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %953 = stablehlo.add %950, %952 : tensor<64x512x768xf32>
    %954 = stablehlo.reshape %943 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %955 = stablehlo.reshape %948 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %956 = stablehlo.reshape %953 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %957 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %958 = stablehlo.sqrt %cst_12 : tensor<f32>
    %959 = stablehlo.convert %958 : tensor<f32>
    %960 = stablehlo.broadcast_in_dim %959, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %961 = stablehlo.divide %954, %960 : tensor<64x512x12x64xf32>
    %962 = stablehlo.dot_general %955, %961, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %963 = stablehlo.transpose %962, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %964:2 = call @_where_33(%957, %963, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_49 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %965 = stablehlo.reduce(%964#0 init: %cst_49) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %966 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %967 = stablehlo.maximum %966, %965 : tensor<64x512x12xf32>
    %968 = stablehlo.broadcast_in_dim %967, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %969 = stablehlo.broadcast_in_dim %968, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %970 = stablehlo.subtract %964#0, %969 : tensor<64x512x12x512xf32>
    %971 = stablehlo.exponential %970 : tensor<64x512x12x512xf32>
    %cst_50 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %972 = stablehlo.reduce(%971 init: %cst_50) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %973 = stablehlo.broadcast_in_dim %972, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %974 = stablehlo.broadcast_in_dim %973, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %975 = stablehlo.divide %971, %974 : tensor<64x512x12x512xf32>
    %976 = stablehlo.multiply %973, %973 : tensor<64x512x12x1xf32>
    %cst_51 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %977 = stablehlo.broadcast_in_dim %cst_51, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %978 = stablehlo.divide %977, %976 : tensor<64x512x12x1xf32>
    %979 = stablehlo.dot_general %956, %975, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %980 = stablehlo.transpose %979, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %981 = stablehlo.reshape %980 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %982 = stablehlo.transpose %arg107, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %983 = stablehlo.dot_general %981, %982, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %984 = stablehlo.broadcast_in_dim %arg108, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %985 = stablehlo.broadcast_in_dim %984, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %986 = stablehlo.add %983, %985 : tensor<64x512x768xf32>
    %987 = stablehlo.add %986, %938 : tensor<64x512x768xf32>
    %cst_52 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %988 = stablehlo.reduce(%987 init: %cst_52) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %989 = stablehlo.broadcast_in_dim %988, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %990 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %991 = stablehlo.divide %989, %990 : tensor<64x512x1xf32>
    %992:4 = call @_var(%987, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %993 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %994 = stablehlo.maximum %992#0, %993 : tensor<64x512x1xf32>
    %995 = stablehlo.compare  EQ, %992#0, %994,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %996 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %997 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %998 = stablehlo.select %995, %996, %997 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %999 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1000 = stablehlo.compare  EQ, %999, %994,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1001 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1002 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1003 = stablehlo.select %1000, %1001, %1002 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1004 = stablehlo.divide %998, %1003 : tensor<64x512x1xf32>
    %1005 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1006 = stablehlo.add %994, %1005 : tensor<64x512x1xf32>
    %1007 = stablehlo.rsqrt %1006 : tensor<64x512x1xf32>
    %1008 = stablehlo.divide %1007, %1006 : tensor<64x512x1xf32>
    %1009 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1010 = stablehlo.multiply %1009, %1008 : tensor<64x512x1xf32>
    %1011 = stablehlo.broadcast_in_dim %991, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1012 = stablehlo.subtract %987, %1011 : tensor<64x512x768xf32>
    %1013 = stablehlo.broadcast_in_dim %1007, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1014 = stablehlo.multiply %1012, %1013 : tensor<64x512x768xf32>
    %1015 = stablehlo.broadcast_in_dim %arg109, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1016 = stablehlo.broadcast_in_dim %1015, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1017 = stablehlo.multiply %1016, %1014 : tensor<64x512x768xf32>
    %1018 = stablehlo.broadcast_in_dim %arg110, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1019 = stablehlo.broadcast_in_dim %1018, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1020 = stablehlo.add %1017, %1019 : tensor<64x512x768xf32>
    %1021 = stablehlo.transpose %arg111, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1022 = stablehlo.dot_general %1020, %1021, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1023 = stablehlo.broadcast_in_dim %arg112, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1024 = stablehlo.broadcast_in_dim %1023, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1025 = stablehlo.add %1022, %1024 : tensor<64x512x3072xf32>
    %1026 = stablehlo.multiply %1025, %1025 : tensor<64x512x3072xf32>
    %1027 = stablehlo.multiply %1026, %1025 : tensor<64x512x3072xf32>
    %1028 = stablehlo.multiply %1025, %1025 : tensor<64x512x3072xf32>
    %1029 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1030 = stablehlo.multiply %1029, %1028 : tensor<64x512x3072xf32>
    %1031 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1032 = stablehlo.multiply %1031, %1027 : tensor<64x512x3072xf32>
    %1033 = stablehlo.add %1025, %1032 : tensor<64x512x3072xf32>
    %1034 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1035 = stablehlo.multiply %1034, %1033 : tensor<64x512x3072xf32>
    %1036 = stablehlo.tanh %1035 : tensor<64x512x3072xf32>
    %1037 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1038 = stablehlo.broadcast_in_dim %1037, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1039 = stablehlo.subtract %1038, %1036 : tensor<64x512x3072xf32>
    %1040 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1041 = stablehlo.add %1040, %1036 : tensor<64x512x3072xf32>
    %1042 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1043 = stablehlo.multiply %1042, %1041 : tensor<64x512x3072xf32>
    %1044 = stablehlo.multiply %1025, %1043 : tensor<64x512x3072xf32>
    %1045 = stablehlo.transpose %arg113, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1046 = stablehlo.dot_general %1044, %1045, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1047 = stablehlo.broadcast_in_dim %arg114, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1048 = stablehlo.broadcast_in_dim %1047, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1049 = stablehlo.add %1046, %1048 : tensor<64x512x768xf32>
    %1050 = stablehlo.add %1049, %1020 : tensor<64x512x768xf32>
    %cst_53 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1051 = stablehlo.reduce(%1050 init: %cst_53) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1052 = stablehlo.broadcast_in_dim %1051, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1053 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1054 = stablehlo.divide %1052, %1053 : tensor<64x512x1xf32>
    %1055:4 = call @_var(%1050, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1056 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1057 = stablehlo.maximum %1055#0, %1056 : tensor<64x512x1xf32>
    %1058 = stablehlo.compare  EQ, %1055#0, %1057,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1059 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1060 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1061 = stablehlo.select %1058, %1059, %1060 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1062 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1063 = stablehlo.compare  EQ, %1062, %1057,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1064 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1065 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1066 = stablehlo.select %1063, %1064, %1065 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1067 = stablehlo.divide %1061, %1066 : tensor<64x512x1xf32>
    %1068 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1069 = stablehlo.add %1057, %1068 : tensor<64x512x1xf32>
    %1070 = stablehlo.rsqrt %1069 : tensor<64x512x1xf32>
    %1071 = stablehlo.divide %1070, %1069 : tensor<64x512x1xf32>
    %1072 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1073 = stablehlo.multiply %1072, %1071 : tensor<64x512x1xf32>
    %1074 = stablehlo.broadcast_in_dim %1054, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1075 = stablehlo.subtract %1050, %1074 : tensor<64x512x768xf32>
    %1076 = stablehlo.broadcast_in_dim %1070, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1077 = stablehlo.multiply %1075, %1076 : tensor<64x512x768xf32>
    %1078 = stablehlo.broadcast_in_dim %arg115, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1079 = stablehlo.broadcast_in_dim %1078, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1080 = stablehlo.multiply %1079, %1077 : tensor<64x512x768xf32>
    %1081 = stablehlo.broadcast_in_dim %arg116, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1082 = stablehlo.broadcast_in_dim %1081, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1083 = stablehlo.add %1080, %1082 : tensor<64x512x768xf32>
    %1084 = stablehlo.transpose %arg117, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1085 = stablehlo.dot_general %1083, %1084, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1086 = stablehlo.broadcast_in_dim %arg118, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1087 = stablehlo.broadcast_in_dim %1086, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1088 = stablehlo.add %1085, %1087 : tensor<64x512x768xf32>
    %1089 = stablehlo.transpose %arg121, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1090 = stablehlo.dot_general %1083, %1089, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1091 = stablehlo.broadcast_in_dim %arg122, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1092 = stablehlo.broadcast_in_dim %1091, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1093 = stablehlo.add %1090, %1092 : tensor<64x512x768xf32>
    %1094 = stablehlo.transpose %arg119, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1095 = stablehlo.dot_general %1083, %1094, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1096 = stablehlo.broadcast_in_dim %arg120, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1097 = stablehlo.broadcast_in_dim %1096, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1098 = stablehlo.add %1095, %1097 : tensor<64x512x768xf32>
    %1099 = stablehlo.reshape %1088 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1100 = stablehlo.reshape %1093 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1101 = stablehlo.reshape %1098 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1102 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1103 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1104 = stablehlo.convert %1103 : tensor<f32>
    %1105 = stablehlo.broadcast_in_dim %1104, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1106 = stablehlo.divide %1099, %1105 : tensor<64x512x12x64xf32>
    %1107 = stablehlo.dot_general %1100, %1106, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1108 = stablehlo.transpose %1107, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1109:2 = call @_where_33(%1102, %1108, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_54 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1110 = stablehlo.reduce(%1109#0 init: %cst_54) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1111 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1112 = stablehlo.maximum %1111, %1110 : tensor<64x512x12xf32>
    %1113 = stablehlo.broadcast_in_dim %1112, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1114 = stablehlo.broadcast_in_dim %1113, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1115 = stablehlo.subtract %1109#0, %1114 : tensor<64x512x12x512xf32>
    %1116 = stablehlo.exponential %1115 : tensor<64x512x12x512xf32>
    %cst_55 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1117 = stablehlo.reduce(%1116 init: %cst_55) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1118 = stablehlo.broadcast_in_dim %1117, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1119 = stablehlo.broadcast_in_dim %1118, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1120 = stablehlo.divide %1116, %1119 : tensor<64x512x12x512xf32>
    %1121 = stablehlo.multiply %1118, %1118 : tensor<64x512x12x1xf32>
    %cst_56 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1122 = stablehlo.broadcast_in_dim %cst_56, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1123 = stablehlo.divide %1122, %1121 : tensor<64x512x12x1xf32>
    %1124 = stablehlo.dot_general %1101, %1120, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1125 = stablehlo.transpose %1124, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1126 = stablehlo.reshape %1125 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1127 = stablehlo.transpose %arg123, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1128 = stablehlo.dot_general %1126, %1127, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1129 = stablehlo.broadcast_in_dim %arg124, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1130 = stablehlo.broadcast_in_dim %1129, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1131 = stablehlo.add %1128, %1130 : tensor<64x512x768xf32>
    %1132 = stablehlo.add %1131, %1083 : tensor<64x512x768xf32>
    %cst_57 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1133 = stablehlo.reduce(%1132 init: %cst_57) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1134 = stablehlo.broadcast_in_dim %1133, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1135 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1136 = stablehlo.divide %1134, %1135 : tensor<64x512x1xf32>
    %1137:4 = call @_var(%1132, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1138 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1139 = stablehlo.maximum %1137#0, %1138 : tensor<64x512x1xf32>
    %1140 = stablehlo.compare  EQ, %1137#0, %1139,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1141 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1142 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1143 = stablehlo.select %1140, %1141, %1142 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1144 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1145 = stablehlo.compare  EQ, %1144, %1139,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1146 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1147 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1148 = stablehlo.select %1145, %1146, %1147 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1149 = stablehlo.divide %1143, %1148 : tensor<64x512x1xf32>
    %1150 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1151 = stablehlo.add %1139, %1150 : tensor<64x512x1xf32>
    %1152 = stablehlo.rsqrt %1151 : tensor<64x512x1xf32>
    %1153 = stablehlo.divide %1152, %1151 : tensor<64x512x1xf32>
    %1154 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1155 = stablehlo.multiply %1154, %1153 : tensor<64x512x1xf32>
    %1156 = stablehlo.broadcast_in_dim %1136, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1157 = stablehlo.subtract %1132, %1156 : tensor<64x512x768xf32>
    %1158 = stablehlo.broadcast_in_dim %1152, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1159 = stablehlo.multiply %1157, %1158 : tensor<64x512x768xf32>
    %1160 = stablehlo.broadcast_in_dim %arg125, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1161 = stablehlo.broadcast_in_dim %1160, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1162 = stablehlo.multiply %1161, %1159 : tensor<64x512x768xf32>
    %1163 = stablehlo.broadcast_in_dim %arg126, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1164 = stablehlo.broadcast_in_dim %1163, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1165 = stablehlo.add %1162, %1164 : tensor<64x512x768xf32>
    %1166 = stablehlo.transpose %arg127, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1167 = stablehlo.dot_general %1165, %1166, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1168 = stablehlo.broadcast_in_dim %arg128, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1169 = stablehlo.broadcast_in_dim %1168, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1170 = stablehlo.add %1167, %1169 : tensor<64x512x3072xf32>
    %1171 = stablehlo.multiply %1170, %1170 : tensor<64x512x3072xf32>
    %1172 = stablehlo.multiply %1171, %1170 : tensor<64x512x3072xf32>
    %1173 = stablehlo.multiply %1170, %1170 : tensor<64x512x3072xf32>
    %1174 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1175 = stablehlo.multiply %1174, %1173 : tensor<64x512x3072xf32>
    %1176 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1177 = stablehlo.multiply %1176, %1172 : tensor<64x512x3072xf32>
    %1178 = stablehlo.add %1170, %1177 : tensor<64x512x3072xf32>
    %1179 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1180 = stablehlo.multiply %1179, %1178 : tensor<64x512x3072xf32>
    %1181 = stablehlo.tanh %1180 : tensor<64x512x3072xf32>
    %1182 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1183 = stablehlo.broadcast_in_dim %1182, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1184 = stablehlo.subtract %1183, %1181 : tensor<64x512x3072xf32>
    %1185 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1186 = stablehlo.add %1185, %1181 : tensor<64x512x3072xf32>
    %1187 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1188 = stablehlo.multiply %1187, %1186 : tensor<64x512x3072xf32>
    %1189 = stablehlo.multiply %1170, %1188 : tensor<64x512x3072xf32>
    %1190 = stablehlo.transpose %arg129, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1191 = stablehlo.dot_general %1189, %1190, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1192 = stablehlo.broadcast_in_dim %arg130, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1193 = stablehlo.broadcast_in_dim %1192, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1194 = stablehlo.add %1191, %1193 : tensor<64x512x768xf32>
    %1195 = stablehlo.add %1194, %1165 : tensor<64x512x768xf32>
    %cst_58 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1196 = stablehlo.reduce(%1195 init: %cst_58) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1197 = stablehlo.broadcast_in_dim %1196, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1198 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1199 = stablehlo.divide %1197, %1198 : tensor<64x512x1xf32>
    %1200:4 = call @_var(%1195, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1201 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1202 = stablehlo.maximum %1200#0, %1201 : tensor<64x512x1xf32>
    %1203 = stablehlo.compare  EQ, %1200#0, %1202,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1204 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1205 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1206 = stablehlo.select %1203, %1204, %1205 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1207 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1208 = stablehlo.compare  EQ, %1207, %1202,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1209 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1210 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1211 = stablehlo.select %1208, %1209, %1210 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1212 = stablehlo.divide %1206, %1211 : tensor<64x512x1xf32>
    %1213 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1214 = stablehlo.add %1202, %1213 : tensor<64x512x1xf32>
    %1215 = stablehlo.rsqrt %1214 : tensor<64x512x1xf32>
    %1216 = stablehlo.divide %1215, %1214 : tensor<64x512x1xf32>
    %1217 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1218 = stablehlo.multiply %1217, %1216 : tensor<64x512x1xf32>
    %1219 = stablehlo.broadcast_in_dim %1199, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1220 = stablehlo.subtract %1195, %1219 : tensor<64x512x768xf32>
    %1221 = stablehlo.broadcast_in_dim %1215, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1222 = stablehlo.multiply %1220, %1221 : tensor<64x512x768xf32>
    %1223 = stablehlo.broadcast_in_dim %arg131, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1224 = stablehlo.broadcast_in_dim %1223, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1225 = stablehlo.multiply %1224, %1222 : tensor<64x512x768xf32>
    %1226 = stablehlo.broadcast_in_dim %arg132, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1227 = stablehlo.broadcast_in_dim %1226, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1228 = stablehlo.add %1225, %1227 : tensor<64x512x768xf32>
    %1229 = stablehlo.transpose %arg133, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1230 = stablehlo.dot_general %1228, %1229, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1231 = stablehlo.broadcast_in_dim %arg134, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1232 = stablehlo.broadcast_in_dim %1231, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1233 = stablehlo.add %1230, %1232 : tensor<64x512x768xf32>
    %1234 = stablehlo.transpose %arg137, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1235 = stablehlo.dot_general %1228, %1234, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1236 = stablehlo.broadcast_in_dim %arg138, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1237 = stablehlo.broadcast_in_dim %1236, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1238 = stablehlo.add %1235, %1237 : tensor<64x512x768xf32>
    %1239 = stablehlo.transpose %arg135, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1240 = stablehlo.dot_general %1228, %1239, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1241 = stablehlo.broadcast_in_dim %arg136, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1242 = stablehlo.broadcast_in_dim %1241, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1243 = stablehlo.add %1240, %1242 : tensor<64x512x768xf32>
    %1244 = stablehlo.reshape %1233 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1245 = stablehlo.reshape %1238 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1246 = stablehlo.reshape %1243 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1247 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1248 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1249 = stablehlo.convert %1248 : tensor<f32>
    %1250 = stablehlo.broadcast_in_dim %1249, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1251 = stablehlo.divide %1244, %1250 : tensor<64x512x12x64xf32>
    %1252 = stablehlo.dot_general %1245, %1251, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1253 = stablehlo.transpose %1252, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1254:2 = call @_where_33(%1247, %1253, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_59 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1255 = stablehlo.reduce(%1254#0 init: %cst_59) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1256 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1257 = stablehlo.maximum %1256, %1255 : tensor<64x512x12xf32>
    %1258 = stablehlo.broadcast_in_dim %1257, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1259 = stablehlo.broadcast_in_dim %1258, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1260 = stablehlo.subtract %1254#0, %1259 : tensor<64x512x12x512xf32>
    %1261 = stablehlo.exponential %1260 : tensor<64x512x12x512xf32>
    %cst_60 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1262 = stablehlo.reduce(%1261 init: %cst_60) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1263 = stablehlo.broadcast_in_dim %1262, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1264 = stablehlo.broadcast_in_dim %1263, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1265 = stablehlo.divide %1261, %1264 : tensor<64x512x12x512xf32>
    %1266 = stablehlo.multiply %1263, %1263 : tensor<64x512x12x1xf32>
    %cst_61 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1267 = stablehlo.broadcast_in_dim %cst_61, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1268 = stablehlo.divide %1267, %1266 : tensor<64x512x12x1xf32>
    %1269 = stablehlo.dot_general %1246, %1265, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1270 = stablehlo.transpose %1269, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1271 = stablehlo.reshape %1270 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1272 = stablehlo.transpose %arg139, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1273 = stablehlo.dot_general %1271, %1272, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1274 = stablehlo.broadcast_in_dim %arg140, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1275 = stablehlo.broadcast_in_dim %1274, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1276 = stablehlo.add %1273, %1275 : tensor<64x512x768xf32>
    %1277 = stablehlo.add %1276, %1228 : tensor<64x512x768xf32>
    %cst_62 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1278 = stablehlo.reduce(%1277 init: %cst_62) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1279 = stablehlo.broadcast_in_dim %1278, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1280 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1281 = stablehlo.divide %1279, %1280 : tensor<64x512x1xf32>
    %1282:4 = call @_var(%1277, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1283 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1284 = stablehlo.maximum %1282#0, %1283 : tensor<64x512x1xf32>
    %1285 = stablehlo.compare  EQ, %1282#0, %1284,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1286 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1287 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1288 = stablehlo.select %1285, %1286, %1287 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1289 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1290 = stablehlo.compare  EQ, %1289, %1284,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1291 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1292 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1293 = stablehlo.select %1290, %1291, %1292 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1294 = stablehlo.divide %1288, %1293 : tensor<64x512x1xf32>
    %1295 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1296 = stablehlo.add %1284, %1295 : tensor<64x512x1xf32>
    %1297 = stablehlo.rsqrt %1296 : tensor<64x512x1xf32>
    %1298 = stablehlo.divide %1297, %1296 : tensor<64x512x1xf32>
    %1299 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1300 = stablehlo.multiply %1299, %1298 : tensor<64x512x1xf32>
    %1301 = stablehlo.broadcast_in_dim %1281, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1302 = stablehlo.subtract %1277, %1301 : tensor<64x512x768xf32>
    %1303 = stablehlo.broadcast_in_dim %1297, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1304 = stablehlo.multiply %1302, %1303 : tensor<64x512x768xf32>
    %1305 = stablehlo.broadcast_in_dim %arg141, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1306 = stablehlo.broadcast_in_dim %1305, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1307 = stablehlo.multiply %1306, %1304 : tensor<64x512x768xf32>
    %1308 = stablehlo.broadcast_in_dim %arg142, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1309 = stablehlo.broadcast_in_dim %1308, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1310 = stablehlo.add %1307, %1309 : tensor<64x512x768xf32>
    %1311 = stablehlo.transpose %arg143, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1312 = stablehlo.dot_general %1310, %1311, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1313 = stablehlo.broadcast_in_dim %arg144, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1314 = stablehlo.broadcast_in_dim %1313, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1315 = stablehlo.add %1312, %1314 : tensor<64x512x3072xf32>
    %1316 = stablehlo.multiply %1315, %1315 : tensor<64x512x3072xf32>
    %1317 = stablehlo.multiply %1316, %1315 : tensor<64x512x3072xf32>
    %1318 = stablehlo.multiply %1315, %1315 : tensor<64x512x3072xf32>
    %1319 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1320 = stablehlo.multiply %1319, %1318 : tensor<64x512x3072xf32>
    %1321 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1322 = stablehlo.multiply %1321, %1317 : tensor<64x512x3072xf32>
    %1323 = stablehlo.add %1315, %1322 : tensor<64x512x3072xf32>
    %1324 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1325 = stablehlo.multiply %1324, %1323 : tensor<64x512x3072xf32>
    %1326 = stablehlo.tanh %1325 : tensor<64x512x3072xf32>
    %1327 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1328 = stablehlo.broadcast_in_dim %1327, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1329 = stablehlo.subtract %1328, %1326 : tensor<64x512x3072xf32>
    %1330 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1331 = stablehlo.add %1330, %1326 : tensor<64x512x3072xf32>
    %1332 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1333 = stablehlo.multiply %1332, %1331 : tensor<64x512x3072xf32>
    %1334 = stablehlo.multiply %1315, %1333 : tensor<64x512x3072xf32>
    %1335 = stablehlo.transpose %arg145, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1336 = stablehlo.dot_general %1334, %1335, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1337 = stablehlo.broadcast_in_dim %arg146, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1338 = stablehlo.broadcast_in_dim %1337, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1339 = stablehlo.add %1336, %1338 : tensor<64x512x768xf32>
    %1340 = stablehlo.add %1339, %1310 : tensor<64x512x768xf32>
    %cst_63 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1341 = stablehlo.reduce(%1340 init: %cst_63) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1342 = stablehlo.broadcast_in_dim %1341, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1343 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1344 = stablehlo.divide %1342, %1343 : tensor<64x512x1xf32>
    %1345:4 = call @_var(%1340, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1346 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1347 = stablehlo.maximum %1345#0, %1346 : tensor<64x512x1xf32>
    %1348 = stablehlo.compare  EQ, %1345#0, %1347,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1349 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1350 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1351 = stablehlo.select %1348, %1349, %1350 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1352 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1353 = stablehlo.compare  EQ, %1352, %1347,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1354 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1355 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1356 = stablehlo.select %1353, %1354, %1355 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1357 = stablehlo.divide %1351, %1356 : tensor<64x512x1xf32>
    %1358 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1359 = stablehlo.add %1347, %1358 : tensor<64x512x1xf32>
    %1360 = stablehlo.rsqrt %1359 : tensor<64x512x1xf32>
    %1361 = stablehlo.divide %1360, %1359 : tensor<64x512x1xf32>
    %1362 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1363 = stablehlo.multiply %1362, %1361 : tensor<64x512x1xf32>
    %1364 = stablehlo.broadcast_in_dim %1344, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1365 = stablehlo.subtract %1340, %1364 : tensor<64x512x768xf32>
    %1366 = stablehlo.broadcast_in_dim %1360, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1367 = stablehlo.multiply %1365, %1366 : tensor<64x512x768xf32>
    %1368 = stablehlo.broadcast_in_dim %arg147, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1369 = stablehlo.broadcast_in_dim %1368, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1370 = stablehlo.multiply %1369, %1367 : tensor<64x512x768xf32>
    %1371 = stablehlo.broadcast_in_dim %arg148, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1372 = stablehlo.broadcast_in_dim %1371, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1373 = stablehlo.add %1370, %1372 : tensor<64x512x768xf32>
    %1374 = stablehlo.transpose %arg149, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1375 = stablehlo.dot_general %1373, %1374, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1376 = stablehlo.broadcast_in_dim %arg150, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1377 = stablehlo.broadcast_in_dim %1376, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1378 = stablehlo.add %1375, %1377 : tensor<64x512x768xf32>
    %1379 = stablehlo.transpose %arg153, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1380 = stablehlo.dot_general %1373, %1379, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1381 = stablehlo.broadcast_in_dim %arg154, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1382 = stablehlo.broadcast_in_dim %1381, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1383 = stablehlo.add %1380, %1382 : tensor<64x512x768xf32>
    %1384 = stablehlo.transpose %arg151, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1385 = stablehlo.dot_general %1373, %1384, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1386 = stablehlo.broadcast_in_dim %arg152, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1387 = stablehlo.broadcast_in_dim %1386, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1388 = stablehlo.add %1385, %1387 : tensor<64x512x768xf32>
    %1389 = stablehlo.reshape %1378 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1390 = stablehlo.reshape %1383 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1391 = stablehlo.reshape %1388 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1392 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1393 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1394 = stablehlo.convert %1393 : tensor<f32>
    %1395 = stablehlo.broadcast_in_dim %1394, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1396 = stablehlo.divide %1389, %1395 : tensor<64x512x12x64xf32>
    %1397 = stablehlo.dot_general %1390, %1396, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1398 = stablehlo.transpose %1397, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1399:2 = call @_where_33(%1392, %1398, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_64 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1400 = stablehlo.reduce(%1399#0 init: %cst_64) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1401 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1402 = stablehlo.maximum %1401, %1400 : tensor<64x512x12xf32>
    %1403 = stablehlo.broadcast_in_dim %1402, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1404 = stablehlo.broadcast_in_dim %1403, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1405 = stablehlo.subtract %1399#0, %1404 : tensor<64x512x12x512xf32>
    %1406 = stablehlo.exponential %1405 : tensor<64x512x12x512xf32>
    %cst_65 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1407 = stablehlo.reduce(%1406 init: %cst_65) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1408 = stablehlo.broadcast_in_dim %1407, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1409 = stablehlo.broadcast_in_dim %1408, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1410 = stablehlo.divide %1406, %1409 : tensor<64x512x12x512xf32>
    %1411 = stablehlo.multiply %1408, %1408 : tensor<64x512x12x1xf32>
    %cst_66 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1412 = stablehlo.broadcast_in_dim %cst_66, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1413 = stablehlo.divide %1412, %1411 : tensor<64x512x12x1xf32>
    %1414 = stablehlo.dot_general %1391, %1410, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1415 = stablehlo.transpose %1414, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1416 = stablehlo.reshape %1415 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1417 = stablehlo.transpose %arg155, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1418 = stablehlo.dot_general %1416, %1417, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1419 = stablehlo.broadcast_in_dim %arg156, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1420 = stablehlo.broadcast_in_dim %1419, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1421 = stablehlo.add %1418, %1420 : tensor<64x512x768xf32>
    %1422 = stablehlo.add %1421, %1373 : tensor<64x512x768xf32>
    %cst_67 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1423 = stablehlo.reduce(%1422 init: %cst_67) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1424 = stablehlo.broadcast_in_dim %1423, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1425 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1426 = stablehlo.divide %1424, %1425 : tensor<64x512x1xf32>
    %1427:4 = call @_var(%1422, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1428 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1429 = stablehlo.maximum %1427#0, %1428 : tensor<64x512x1xf32>
    %1430 = stablehlo.compare  EQ, %1427#0, %1429,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1431 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1432 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1433 = stablehlo.select %1430, %1431, %1432 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1434 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1435 = stablehlo.compare  EQ, %1434, %1429,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1436 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1437 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1438 = stablehlo.select %1435, %1436, %1437 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1439 = stablehlo.divide %1433, %1438 : tensor<64x512x1xf32>
    %1440 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1441 = stablehlo.add %1429, %1440 : tensor<64x512x1xf32>
    %1442 = stablehlo.rsqrt %1441 : tensor<64x512x1xf32>
    %1443 = stablehlo.divide %1442, %1441 : tensor<64x512x1xf32>
    %1444 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1445 = stablehlo.multiply %1444, %1443 : tensor<64x512x1xf32>
    %1446 = stablehlo.broadcast_in_dim %1426, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1447 = stablehlo.subtract %1422, %1446 : tensor<64x512x768xf32>
    %1448 = stablehlo.broadcast_in_dim %1442, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1449 = stablehlo.multiply %1447, %1448 : tensor<64x512x768xf32>
    %1450 = stablehlo.broadcast_in_dim %arg157, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1451 = stablehlo.broadcast_in_dim %1450, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1452 = stablehlo.multiply %1451, %1449 : tensor<64x512x768xf32>
    %1453 = stablehlo.broadcast_in_dim %arg158, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1454 = stablehlo.broadcast_in_dim %1453, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1455 = stablehlo.add %1452, %1454 : tensor<64x512x768xf32>
    %1456 = stablehlo.transpose %arg159, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1457 = stablehlo.dot_general %1455, %1456, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1458 = stablehlo.broadcast_in_dim %arg160, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1459 = stablehlo.broadcast_in_dim %1458, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1460 = stablehlo.add %1457, %1459 : tensor<64x512x3072xf32>
    %1461 = stablehlo.multiply %1460, %1460 : tensor<64x512x3072xf32>
    %1462 = stablehlo.multiply %1461, %1460 : tensor<64x512x3072xf32>
    %1463 = stablehlo.multiply %1460, %1460 : tensor<64x512x3072xf32>
    %1464 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1465 = stablehlo.multiply %1464, %1463 : tensor<64x512x3072xf32>
    %1466 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1467 = stablehlo.multiply %1466, %1462 : tensor<64x512x3072xf32>
    %1468 = stablehlo.add %1460, %1467 : tensor<64x512x3072xf32>
    %1469 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1470 = stablehlo.multiply %1469, %1468 : tensor<64x512x3072xf32>
    %1471 = stablehlo.tanh %1470 : tensor<64x512x3072xf32>
    %1472 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1473 = stablehlo.broadcast_in_dim %1472, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1474 = stablehlo.subtract %1473, %1471 : tensor<64x512x3072xf32>
    %1475 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1476 = stablehlo.add %1475, %1471 : tensor<64x512x3072xf32>
    %1477 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1478 = stablehlo.multiply %1477, %1476 : tensor<64x512x3072xf32>
    %1479 = stablehlo.multiply %1460, %1478 : tensor<64x512x3072xf32>
    %1480 = stablehlo.transpose %arg161, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1481 = stablehlo.dot_general %1479, %1480, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1482 = stablehlo.broadcast_in_dim %arg162, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1483 = stablehlo.broadcast_in_dim %1482, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1484 = stablehlo.add %1481, %1483 : tensor<64x512x768xf32>
    %1485 = stablehlo.add %1484, %1455 : tensor<64x512x768xf32>
    %cst_68 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1486 = stablehlo.reduce(%1485 init: %cst_68) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1487 = stablehlo.broadcast_in_dim %1486, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1488 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1489 = stablehlo.divide %1487, %1488 : tensor<64x512x1xf32>
    %1490:4 = call @_var(%1485, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1491 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1492 = stablehlo.maximum %1490#0, %1491 : tensor<64x512x1xf32>
    %1493 = stablehlo.compare  EQ, %1490#0, %1492,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1494 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1495 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1496 = stablehlo.select %1493, %1494, %1495 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1497 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1498 = stablehlo.compare  EQ, %1497, %1492,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1499 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1500 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1501 = stablehlo.select %1498, %1499, %1500 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1502 = stablehlo.divide %1496, %1501 : tensor<64x512x1xf32>
    %1503 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1504 = stablehlo.add %1492, %1503 : tensor<64x512x1xf32>
    %1505 = stablehlo.rsqrt %1504 : tensor<64x512x1xf32>
    %1506 = stablehlo.divide %1505, %1504 : tensor<64x512x1xf32>
    %1507 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1508 = stablehlo.multiply %1507, %1506 : tensor<64x512x1xf32>
    %1509 = stablehlo.broadcast_in_dim %1489, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1510 = stablehlo.subtract %1485, %1509 : tensor<64x512x768xf32>
    %1511 = stablehlo.broadcast_in_dim %1505, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1512 = stablehlo.multiply %1510, %1511 : tensor<64x512x768xf32>
    %1513 = stablehlo.broadcast_in_dim %arg163, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1514 = stablehlo.broadcast_in_dim %1513, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1515 = stablehlo.multiply %1514, %1512 : tensor<64x512x768xf32>
    %1516 = stablehlo.broadcast_in_dim %arg164, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1517 = stablehlo.broadcast_in_dim %1516, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1518 = stablehlo.add %1515, %1517 : tensor<64x512x768xf32>
    %1519 = stablehlo.transpose %arg165, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1520 = stablehlo.dot_general %1518, %1519, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1521 = stablehlo.broadcast_in_dim %arg166, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1522 = stablehlo.broadcast_in_dim %1521, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1523 = stablehlo.add %1520, %1522 : tensor<64x512x768xf32>
    %1524 = stablehlo.transpose %arg169, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1525 = stablehlo.dot_general %1518, %1524, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1526 = stablehlo.broadcast_in_dim %arg170, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1527 = stablehlo.broadcast_in_dim %1526, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1528 = stablehlo.add %1525, %1527 : tensor<64x512x768xf32>
    %1529 = stablehlo.transpose %arg167, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1530 = stablehlo.dot_general %1518, %1529, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1531 = stablehlo.broadcast_in_dim %arg168, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1532 = stablehlo.broadcast_in_dim %1531, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1533 = stablehlo.add %1530, %1532 : tensor<64x512x768xf32>
    %1534 = stablehlo.reshape %1523 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1535 = stablehlo.reshape %1528 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1536 = stablehlo.reshape %1533 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1537 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1538 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1539 = stablehlo.convert %1538 : tensor<f32>
    %1540 = stablehlo.broadcast_in_dim %1539, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1541 = stablehlo.divide %1534, %1540 : tensor<64x512x12x64xf32>
    %1542 = stablehlo.dot_general %1535, %1541, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1543 = stablehlo.transpose %1542, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1544:2 = call @_where_33(%1537, %1543, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_69 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1545 = stablehlo.reduce(%1544#0 init: %cst_69) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1546 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1547 = stablehlo.maximum %1546, %1545 : tensor<64x512x12xf32>
    %1548 = stablehlo.broadcast_in_dim %1547, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1549 = stablehlo.broadcast_in_dim %1548, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1550 = stablehlo.subtract %1544#0, %1549 : tensor<64x512x12x512xf32>
    %1551 = stablehlo.exponential %1550 : tensor<64x512x12x512xf32>
    %cst_70 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1552 = stablehlo.reduce(%1551 init: %cst_70) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1553 = stablehlo.broadcast_in_dim %1552, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1554 = stablehlo.broadcast_in_dim %1553, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1555 = stablehlo.divide %1551, %1554 : tensor<64x512x12x512xf32>
    %1556 = stablehlo.multiply %1553, %1553 : tensor<64x512x12x1xf32>
    %cst_71 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1557 = stablehlo.broadcast_in_dim %cst_71, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1558 = stablehlo.divide %1557, %1556 : tensor<64x512x12x1xf32>
    %1559 = stablehlo.dot_general %1536, %1555, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1560 = stablehlo.transpose %1559, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1561 = stablehlo.reshape %1560 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1562 = stablehlo.transpose %arg171, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1563 = stablehlo.dot_general %1561, %1562, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1564 = stablehlo.broadcast_in_dim %arg172, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1565 = stablehlo.broadcast_in_dim %1564, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1566 = stablehlo.add %1563, %1565 : tensor<64x512x768xf32>
    %1567 = stablehlo.add %1566, %1518 : tensor<64x512x768xf32>
    %cst_72 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1568 = stablehlo.reduce(%1567 init: %cst_72) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1569 = stablehlo.broadcast_in_dim %1568, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1570 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1571 = stablehlo.divide %1569, %1570 : tensor<64x512x1xf32>
    %1572:4 = call @_var(%1567, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1573 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1574 = stablehlo.maximum %1572#0, %1573 : tensor<64x512x1xf32>
    %1575 = stablehlo.compare  EQ, %1572#0, %1574,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1576 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1577 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1578 = stablehlo.select %1575, %1576, %1577 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1579 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1580 = stablehlo.compare  EQ, %1579, %1574,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1581 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1582 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1583 = stablehlo.select %1580, %1581, %1582 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1584 = stablehlo.divide %1578, %1583 : tensor<64x512x1xf32>
    %1585 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1586 = stablehlo.add %1574, %1585 : tensor<64x512x1xf32>
    %1587 = stablehlo.rsqrt %1586 : tensor<64x512x1xf32>
    %1588 = stablehlo.divide %1587, %1586 : tensor<64x512x1xf32>
    %1589 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1590 = stablehlo.multiply %1589, %1588 : tensor<64x512x1xf32>
    %1591 = stablehlo.broadcast_in_dim %1571, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1592 = stablehlo.subtract %1567, %1591 : tensor<64x512x768xf32>
    %1593 = stablehlo.broadcast_in_dim %1587, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1594 = stablehlo.multiply %1592, %1593 : tensor<64x512x768xf32>
    %1595 = stablehlo.broadcast_in_dim %arg173, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1596 = stablehlo.broadcast_in_dim %1595, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1597 = stablehlo.multiply %1596, %1594 : tensor<64x512x768xf32>
    %1598 = stablehlo.broadcast_in_dim %arg174, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1599 = stablehlo.broadcast_in_dim %1598, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1600 = stablehlo.add %1597, %1599 : tensor<64x512x768xf32>
    %1601 = stablehlo.transpose %arg175, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1602 = stablehlo.dot_general %1600, %1601, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1603 = stablehlo.broadcast_in_dim %arg176, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1604 = stablehlo.broadcast_in_dim %1603, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1605 = stablehlo.add %1602, %1604 : tensor<64x512x3072xf32>
    %1606 = stablehlo.multiply %1605, %1605 : tensor<64x512x3072xf32>
    %1607 = stablehlo.multiply %1606, %1605 : tensor<64x512x3072xf32>
    %1608 = stablehlo.multiply %1605, %1605 : tensor<64x512x3072xf32>
    %1609 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1610 = stablehlo.multiply %1609, %1608 : tensor<64x512x3072xf32>
    %1611 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1612 = stablehlo.multiply %1611, %1607 : tensor<64x512x3072xf32>
    %1613 = stablehlo.add %1605, %1612 : tensor<64x512x3072xf32>
    %1614 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1615 = stablehlo.multiply %1614, %1613 : tensor<64x512x3072xf32>
    %1616 = stablehlo.tanh %1615 : tensor<64x512x3072xf32>
    %1617 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1618 = stablehlo.broadcast_in_dim %1617, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1619 = stablehlo.subtract %1618, %1616 : tensor<64x512x3072xf32>
    %1620 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1621 = stablehlo.add %1620, %1616 : tensor<64x512x3072xf32>
    %1622 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1623 = stablehlo.multiply %1622, %1621 : tensor<64x512x3072xf32>
    %1624 = stablehlo.multiply %1605, %1623 : tensor<64x512x3072xf32>
    %1625 = stablehlo.transpose %arg177, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1626 = stablehlo.dot_general %1624, %1625, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1627 = stablehlo.broadcast_in_dim %arg178, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1628 = stablehlo.broadcast_in_dim %1627, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1629 = stablehlo.add %1626, %1628 : tensor<64x512x768xf32>
    %1630 = stablehlo.add %1629, %1600 : tensor<64x512x768xf32>
    %cst_73 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1631 = stablehlo.reduce(%1630 init: %cst_73) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1632 = stablehlo.broadcast_in_dim %1631, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1633 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1634 = stablehlo.divide %1632, %1633 : tensor<64x512x1xf32>
    %1635:4 = call @_var(%1630, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1636 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1637 = stablehlo.maximum %1635#0, %1636 : tensor<64x512x1xf32>
    %1638 = stablehlo.compare  EQ, %1635#0, %1637,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1639 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1640 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1641 = stablehlo.select %1638, %1639, %1640 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1642 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1643 = stablehlo.compare  EQ, %1642, %1637,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1644 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1645 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1646 = stablehlo.select %1643, %1644, %1645 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1647 = stablehlo.divide %1641, %1646 : tensor<64x512x1xf32>
    %1648 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1649 = stablehlo.add %1637, %1648 : tensor<64x512x1xf32>
    %1650 = stablehlo.rsqrt %1649 : tensor<64x512x1xf32>
    %1651 = stablehlo.divide %1650, %1649 : tensor<64x512x1xf32>
    %1652 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1653 = stablehlo.multiply %1652, %1651 : tensor<64x512x1xf32>
    %1654 = stablehlo.broadcast_in_dim %1634, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1655 = stablehlo.subtract %1630, %1654 : tensor<64x512x768xf32>
    %1656 = stablehlo.broadcast_in_dim %1650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1657 = stablehlo.multiply %1655, %1656 : tensor<64x512x768xf32>
    %1658 = stablehlo.broadcast_in_dim %arg179, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1659 = stablehlo.broadcast_in_dim %1658, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1660 = stablehlo.multiply %1659, %1657 : tensor<64x512x768xf32>
    %1661 = stablehlo.broadcast_in_dim %arg180, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1662 = stablehlo.broadcast_in_dim %1661, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1663 = stablehlo.add %1660, %1662 : tensor<64x512x768xf32>
    %1664 = stablehlo.transpose %arg181, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1665 = stablehlo.dot_general %1663, %1664, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1666 = stablehlo.broadcast_in_dim %arg182, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1667 = stablehlo.broadcast_in_dim %1666, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1668 = stablehlo.add %1665, %1667 : tensor<64x512x768xf32>
    %1669 = stablehlo.transpose %arg185, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1670 = stablehlo.dot_general %1663, %1669, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1671 = stablehlo.broadcast_in_dim %arg186, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1672 = stablehlo.broadcast_in_dim %1671, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1673 = stablehlo.add %1670, %1672 : tensor<64x512x768xf32>
    %1674 = stablehlo.transpose %arg183, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1675 = stablehlo.dot_general %1663, %1674, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1676 = stablehlo.broadcast_in_dim %arg184, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1677 = stablehlo.broadcast_in_dim %1676, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1678 = stablehlo.add %1675, %1677 : tensor<64x512x768xf32>
    %1679 = stablehlo.reshape %1668 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1680 = stablehlo.reshape %1673 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1681 = stablehlo.reshape %1678 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %1682 = stablehlo.broadcast_in_dim %68, dims = [0, 1, 3] : (tensor<64x512x512xi1>) -> tensor<64x512x1x512xi1>
    %1683 = stablehlo.sqrt %cst_12 : tensor<f32>
    %1684 = stablehlo.convert %1683 : tensor<f32>
    %1685 = stablehlo.broadcast_in_dim %1684, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %1686 = stablehlo.divide %1679, %1685 : tensor<64x512x12x64xf32>
    %1687 = stablehlo.dot_general %1680, %1686, batching_dims = [0, 2] x [0, 2], contracting_dims = [3] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %1688 = stablehlo.transpose %1687, dims = [0, 3, 1, 2] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %1689:2 = call @_where_33(%1682, %1688, %cst_13) : (tensor<64x512x1x512xi1>, tensor<64x512x12x512xf32>, tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>)
    %cst_74 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1690 = stablehlo.reduce(%1689#0 init: %cst_74) applies stablehlo.maximum across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1691 = stablehlo.broadcast_in_dim %cst_15, dims = [] : (tensor<f32>) -> tensor<64x512x12xf32>
    %1692 = stablehlo.maximum %1691, %1690 : tensor<64x512x12xf32>
    %1693 = stablehlo.broadcast_in_dim %1692, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1694 = stablehlo.broadcast_in_dim %1693, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1695 = stablehlo.subtract %1689#0, %1694 : tensor<64x512x12x512xf32>
    %1696 = stablehlo.exponential %1695 : tensor<64x512x12x512xf32>
    %cst_75 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1697 = stablehlo.reduce(%1696 init: %cst_75) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %1698 = stablehlo.broadcast_in_dim %1697, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %1699 = stablehlo.broadcast_in_dim %1698, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %1700 = stablehlo.divide %1696, %1699 : tensor<64x512x12x512xf32>
    %1701 = stablehlo.multiply %1698, %1698 : tensor<64x512x12x1xf32>
    %cst_76 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %1702 = stablehlo.broadcast_in_dim %cst_76, dims = [] : (tensor<f32>) -> tensor<64x512x12x1xf32>
    %1703 = stablehlo.divide %1702, %1701 : tensor<64x512x12x1xf32>
    %1704 = stablehlo.dot_general %1681, %1700, batching_dims = [0, 2] x [0, 2], contracting_dims = [1] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x512x12x64xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %1705 = stablehlo.transpose %1704, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %1706 = stablehlo.reshape %1705 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %1707 = stablehlo.transpose %arg187, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1708 = stablehlo.dot_general %1706, %1707, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1709 = stablehlo.broadcast_in_dim %arg188, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1710 = stablehlo.broadcast_in_dim %1709, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1711 = stablehlo.add %1708, %1710 : tensor<64x512x768xf32>
    %1712 = stablehlo.add %1711, %1663 : tensor<64x512x768xf32>
    %cst_77 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1713 = stablehlo.reduce(%1712 init: %cst_77) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1714 = stablehlo.broadcast_in_dim %1713, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1715 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1716 = stablehlo.divide %1714, %1715 : tensor<64x512x1xf32>
    %1717:4 = call @_var(%1712, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1718 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1719 = stablehlo.maximum %1717#0, %1718 : tensor<64x512x1xf32>
    %1720 = stablehlo.compare  EQ, %1717#0, %1719,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1721 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1722 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1723 = stablehlo.select %1720, %1721, %1722 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1724 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1725 = stablehlo.compare  EQ, %1724, %1719,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1726 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1727 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1728 = stablehlo.select %1725, %1726, %1727 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1729 = stablehlo.divide %1723, %1728 : tensor<64x512x1xf32>
    %1730 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1731 = stablehlo.add %1719, %1730 : tensor<64x512x1xf32>
    %1732 = stablehlo.rsqrt %1731 : tensor<64x512x1xf32>
    %1733 = stablehlo.divide %1732, %1731 : tensor<64x512x1xf32>
    %1734 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1735 = stablehlo.multiply %1734, %1733 : tensor<64x512x1xf32>
    %1736 = stablehlo.broadcast_in_dim %1716, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1737 = stablehlo.subtract %1712, %1736 : tensor<64x512x768xf32>
    %1738 = stablehlo.broadcast_in_dim %1732, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1739 = stablehlo.multiply %1737, %1738 : tensor<64x512x768xf32>
    %1740 = stablehlo.broadcast_in_dim %arg189, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1741 = stablehlo.broadcast_in_dim %1740, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1742 = stablehlo.multiply %1741, %1739 : tensor<64x512x768xf32>
    %1743 = stablehlo.broadcast_in_dim %arg190, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1744 = stablehlo.broadcast_in_dim %1743, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1745 = stablehlo.add %1742, %1744 : tensor<64x512x768xf32>
    %1746 = stablehlo.transpose %arg191, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1747 = stablehlo.dot_general %1745, %1746, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x3072xf32>) -> tensor<64x512x3072xf32>
    %1748 = stablehlo.broadcast_in_dim %arg192, dims = [2] : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %1749 = stablehlo.broadcast_in_dim %1748, dims = [0, 1, 2] : (tensor<1x1x3072xf32>) -> tensor<64x512x3072xf32>
    %1750 = stablehlo.add %1747, %1749 : tensor<64x512x3072xf32>
    %1751 = stablehlo.multiply %1750, %1750 : tensor<64x512x3072xf32>
    %1752 = stablehlo.multiply %1751, %1750 : tensor<64x512x3072xf32>
    %1753 = stablehlo.multiply %1750, %1750 : tensor<64x512x3072xf32>
    %1754 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1755 = stablehlo.multiply %1754, %1753 : tensor<64x512x3072xf32>
    %1756 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1757 = stablehlo.multiply %1756, %1752 : tensor<64x512x3072xf32>
    %1758 = stablehlo.add %1750, %1757 : tensor<64x512x3072xf32>
    %1759 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1760 = stablehlo.multiply %1759, %1758 : tensor<64x512x3072xf32>
    %1761 = stablehlo.tanh %1760 : tensor<64x512x3072xf32>
    %1762 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1763 = stablehlo.broadcast_in_dim %1762, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1764 = stablehlo.subtract %1763, %1761 : tensor<64x512x3072xf32>
    %1765 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1766 = stablehlo.add %1765, %1761 : tensor<64x512x3072xf32>
    %1767 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1768 = stablehlo.multiply %1767, %1766 : tensor<64x512x3072xf32>
    %1769 = stablehlo.multiply %1750, %1768 : tensor<64x512x3072xf32>
    %1770 = stablehlo.transpose %arg193, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1771 = stablehlo.dot_general %1769, %1770, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<3072x768xf32>) -> tensor<64x512x768xf32>
    %1772 = stablehlo.broadcast_in_dim %arg194, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1773 = stablehlo.broadcast_in_dim %1772, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1774 = stablehlo.add %1771, %1773 : tensor<64x512x768xf32>
    %1775 = stablehlo.add %1774, %1745 : tensor<64x512x768xf32>
    %cst_78 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1776 = stablehlo.reduce(%1775 init: %cst_78) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1777 = stablehlo.broadcast_in_dim %1776, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1778 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1779 = stablehlo.divide %1777, %1778 : tensor<64x512x1xf32>
    %1780:4 = call @_var(%1775, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1781 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1782 = stablehlo.maximum %1780#0, %1781 : tensor<64x512x1xf32>
    %1783 = stablehlo.compare  EQ, %1780#0, %1782,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1784 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1785 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1786 = stablehlo.select %1783, %1784, %1785 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1787 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1788 = stablehlo.compare  EQ, %1787, %1782,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1789 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1790 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1791 = stablehlo.select %1788, %1789, %1790 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1792 = stablehlo.divide %1786, %1791 : tensor<64x512x1xf32>
    %1793 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1794 = stablehlo.add %1782, %1793 : tensor<64x512x1xf32>
    %1795 = stablehlo.rsqrt %1794 : tensor<64x512x1xf32>
    %1796 = stablehlo.divide %1795, %1794 : tensor<64x512x1xf32>
    %1797 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1798 = stablehlo.multiply %1797, %1796 : tensor<64x512x1xf32>
    %1799 = stablehlo.broadcast_in_dim %1779, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1800 = stablehlo.subtract %1775, %1799 : tensor<64x512x768xf32>
    %1801 = stablehlo.broadcast_in_dim %1795, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1802 = stablehlo.multiply %1800, %1801 : tensor<64x512x768xf32>
    %1803 = stablehlo.broadcast_in_dim %arg195, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1804 = stablehlo.broadcast_in_dim %1803, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1805 = stablehlo.multiply %1804, %1802 : tensor<64x512x768xf32>
    %1806 = stablehlo.broadcast_in_dim %arg196, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1807 = stablehlo.broadcast_in_dim %1806, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1808 = stablehlo.add %1805, %1807 : tensor<64x512x768xf32>
    %1809 = stablehlo.transpose %arg197, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1810 = stablehlo.dot_general %1808, %1809, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1811 = stablehlo.broadcast_in_dim %arg198, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1812 = stablehlo.broadcast_in_dim %1811, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1813 = stablehlo.add %1810, %1812 : tensor<64x512x768xf32>
    %1814 = stablehlo.multiply %1813, %1813 : tensor<64x512x768xf32>
    %1815 = stablehlo.multiply %1814, %1813 : tensor<64x512x768xf32>
    %1816 = stablehlo.multiply %1813, %1813 : tensor<64x512x768xf32>
    %1817 = stablehlo.broadcast_in_dim %cst_19, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1818 = stablehlo.multiply %1817, %1816 : tensor<64x512x768xf32>
    %1819 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1820 = stablehlo.multiply %1819, %1815 : tensor<64x512x768xf32>
    %1821 = stablehlo.add %1813, %1820 : tensor<64x512x768xf32>
    %1822 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1823 = stablehlo.multiply %1822, %1821 : tensor<64x512x768xf32>
    %1824 = stablehlo.tanh %1823 : tensor<64x512x768xf32>
    %1825 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1826 = stablehlo.broadcast_in_dim %1825, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1827 = stablehlo.subtract %1826, %1824 : tensor<64x512x768xf32>
    %1828 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1829 = stablehlo.add %1828, %1824 : tensor<64x512x768xf32>
    %1830 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1831 = stablehlo.multiply %1830, %1829 : tensor<64x512x768xf32>
    %1832 = stablehlo.multiply %1813, %1831 : tensor<64x512x768xf32>
    %cst_79 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1833 = stablehlo.reduce(%1832 init: %cst_79) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1834 = stablehlo.broadcast_in_dim %1833, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1835 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1836 = stablehlo.divide %1834, %1835 : tensor<64x512x1xf32>
    %1837:4 = call @_var(%1832, %c_4) : (tensor<64x512x768xf32>, tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>)
    %1838 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1839 = stablehlo.maximum %1837#0, %1838 : tensor<64x512x1xf32>
    %1840 = stablehlo.compare  EQ, %1837#0, %1839,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1841 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1842 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1843 = stablehlo.select %1840, %1841, %1842 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1844 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1845 = stablehlo.compare  EQ, %1844, %1839,  FLOAT : (tensor<64x512x1xf32>, tensor<64x512x1xf32>) -> tensor<64x512x1xi1>
    %1846 = stablehlo.broadcast_in_dim %cst_7, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1847 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1848 = stablehlo.select %1845, %1846, %1847 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    %1849 = stablehlo.divide %1843, %1848 : tensor<64x512x1xf32>
    %1850 = stablehlo.broadcast_in_dim %cst_8, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1851 = stablehlo.add %1839, %1850 : tensor<64x512x1xf32>
    %1852 = stablehlo.rsqrt %1851 : tensor<64x512x1xf32>
    %1853 = stablehlo.divide %1852, %1851 : tensor<64x512x1xf32>
    %1854 = stablehlo.broadcast_in_dim %cst_9, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1855 = stablehlo.multiply %1854, %1853 : tensor<64x512x1xf32>
    %1856 = stablehlo.broadcast_in_dim %1836, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1857 = stablehlo.subtract %1832, %1856 : tensor<64x512x768xf32>
    %1858 = stablehlo.broadcast_in_dim %1852, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1859 = stablehlo.multiply %1857, %1858 : tensor<64x512x768xf32>
    %1860 = stablehlo.broadcast_in_dim %arg199, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1861 = stablehlo.broadcast_in_dim %1860, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1862 = stablehlo.multiply %1861, %1859 : tensor<64x512x768xf32>
    %1863 = stablehlo.broadcast_in_dim %arg200, dims = [2] : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %1864 = stablehlo.broadcast_in_dim %1863, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1865 = stablehlo.add %1862, %1864 : tensor<64x512x768xf32>
    %1866 = stablehlo.dot_general %1865, %arg0, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<30522x768xf32>) -> tensor<64x512x30522xf32>
    %1867 = stablehlo.broadcast_in_dim %arg201, dims = [2] : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %1868 = stablehlo.broadcast_in_dim %1867, dims = [0, 1, 2] : (tensor<1x1x30522xf32>) -> tensor<64x512x30522xf32>
    %1869 = stablehlo.add %1866, %1868 : tensor<64x512x30522xf32>
    %c_80 = stablehlo.constant dense<-100> : tensor<i32>
    %1870 = stablehlo.broadcast_in_dim %c_80, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %1871 = stablehlo.compare  NE, %arg611, %1870,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %1872 = call @_where_71(%1871, %arg611, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %1873 = call @_where_71(%1871, %1872, %c_4) : (tensor<64x512xi1>, tensor<64x512xi32>, tensor<i32>) -> tensor<64x512xi32>
    %cst_81 = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %1874 = stablehlo.reduce(%1869 init: %cst_81) applies stablehlo.maximum across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1875 = stablehlo.broadcast_in_dim %1874, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1876 = stablehlo.broadcast_in_dim %1875, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %1877 = stablehlo.subtract %1869, %1876 : tensor<64x512x30522xf32>
    %1878 = stablehlo.exponential %1877 : tensor<64x512x30522xf32>
    %cst_82 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1879 = stablehlo.reduce(%1878 init: %cst_82) applies stablehlo.add across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1880 = stablehlo.log %1879 : tensor<64x512xf32>
    %1881 = stablehlo.broadcast_in_dim %1873, dims = [0, 1] : (tensor<64x512xi32>) -> tensor<64x512x1xi32>
    %1882:2 = call @take_along_axis(%1877, %1881) : (tensor<64x512x30522xf32>, tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>)
    %1883 = stablehlo.slice %1882#0 [0:64, 0:512, 0:1] : (tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %1884 = stablehlo.reshape %1883 : (tensor<64x512x1xf32>) -> tensor<64x512xf32>
    %1885 = stablehlo.subtract %1880, %1884 : tensor<64x512xf32>
    %cst_83 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1886 = call @_where_88(%1871, %1885, %cst_83) : (tensor<64x512xi1>, tensor<64x512xf32>, tensor<f32>) -> tensor<64x512xf32>
    %cst_84 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1887 = stablehlo.reduce(%1886 init: %cst_84) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xf32>, tensor<f32>) -> tensor<f32>
    %1888 = stablehlo.convert %1871 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_85 = stablehlo.constant dense<0> : tensor<i32>
    %1889 = stablehlo.reduce(%1888 init: %c_85) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %1890 = call @argmax(%1869) : (tensor<64x512x30522xf32>) -> tensor<64x512xi32>
    %1891 = stablehlo.compare  EQ, %1890, %arg611,  SIGNED : (tensor<64x512xi32>, tensor<64x512xi32>) -> tensor<64x512xi1>
    %1892 = stablehlo.and %1891, %1871 : tensor<64x512xi1>
    %1893 = stablehlo.convert %1892 : (tensor<64x512xi1>) -> tensor<64x512xi32>
    %c_86 = stablehlo.constant dense<0> : tensor<i32>
    %1894 = stablehlo.reduce(%1893 init: %c_86) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512xi32>, tensor<i32>) -> tensor<i32>
    %1895 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<f32>
    %1896 = stablehlo.broadcast_in_dim %1895, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1897 = call @_where_104(%1871, %1896) : (tensor<64x512xi1>, tensor<64x512xf32>) -> tensor<64x512xf32>
    %1898 = stablehlo.negate %1897 : tensor<64x512xf32>
    %1899 = stablehlo.broadcast_in_dim %1898, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1900 = stablehlo.pad %1899, %cst_5, low = [0, 0, 0], high = [0, 0, 0], interior = [0, 0, 0] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    %1901 = call @take_along_axis_105(%1882#1, %1900) : (tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    %1902 = stablehlo.divide %1897, %1879 : tensor<64x512xf32>
    %1903 = stablehlo.broadcast_in_dim %1902, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x30522xf32>
    %1904 = stablehlo.multiply %1903, %1878 : tensor<64x512x30522xf32>
    %1905 = stablehlo.add %1901, %1904 : tensor<64x512x30522xf32>
    %cst_87 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1906 = stablehlo.reduce(%1905 init: %cst_87) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %1907 = stablehlo.reshape %1906 : (tensor<30522xf32>) -> tensor<1x1x30522xf32>
    %cst_88 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1908 = stablehlo.reduce(%1907 init: %cst_88) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x30522xf32>, tensor<f32>) -> tensor<30522xf32>
    %1909 = stablehlo.dot_general %1905, %1865, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %1910 = stablehlo.dot_general %1905, %arg0, contracting_dims = [2] x [0], precision = [DEFAULT, DEFAULT] : (tensor<64x512x30522xf32>, tensor<30522x768xf32>) -> tensor<64x512x768xf32>
    %cst_89 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1911 = stablehlo.reduce(%1910 init: %cst_89) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1912 = stablehlo.reshape %1911 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_90 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1913 = stablehlo.reduce(%1912 init: %cst_90) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1914 = stablehlo.broadcast_in_dim %1860, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1915 = stablehlo.multiply %1914, %1910 : tensor<64x512x768xf32>
    %1916 = stablehlo.multiply %1910, %1859 : tensor<64x512x768xf32>
    %cst_91 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1917 = stablehlo.reduce(%1916 init: %cst_91) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1918 = stablehlo.reshape %1917 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_92 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1919 = stablehlo.reduce(%1918 init: %cst_92) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1920 = stablehlo.multiply %1857, %1915 : tensor<64x512x768xf32>
    %cst_93 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1921 = stablehlo.reduce(%1920 init: %cst_93) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1922 = stablehlo.reshape %1921 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1923 = stablehlo.broadcast_in_dim %1852, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1924 = stablehlo.multiply %1915, %1923 : tensor<64x512x768xf32>
    %1925 = stablehlo.negate %1924 : tensor<64x512x768xf32>
    %cst_94 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1926 = stablehlo.reduce(%1925 init: %cst_94) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1927 = stablehlo.reshape %1926 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1928 = stablehlo.multiply %1922, %1855 : tensor<64x512x1xf32>
    %1929 = stablehlo.multiply %1928, %1849 : tensor<64x512x1xf32>
    %1930 = call @_var_122(%1837#1, %1837#2, %1837#3, %1929) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1931 = stablehlo.add %1924, %1930 : tensor<64x512x768xf32>
    %1932 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1933 = stablehlo.divide %1927, %1932 : tensor<64x512x1xf32>
    %cst_95 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1934 = stablehlo.reduce(%1933 init: %cst_95) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1935 = stablehlo.broadcast_in_dim %1934, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %1936 = stablehlo.add %1931, %1935 : tensor<64x512x768xf32>
    %1937 = stablehlo.multiply %1813, %1936 : tensor<64x512x768xf32>
    %1938 = stablehlo.multiply %1936, %1831 : tensor<64x512x768xf32>
    %1939 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1940 = stablehlo.multiply %1939, %1937 : tensor<64x512x768xf32>
    %1941 = stablehlo.multiply %1940, %1827 : tensor<64x512x768xf32>
    %1942 = stablehlo.multiply %1941, %1824 : tensor<64x512x768xf32>
    %1943 = stablehlo.add %1941, %1942 : tensor<64x512x768xf32>
    %1944 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1945 = stablehlo.multiply %1944, %1943 : tensor<64x512x768xf32>
    %1946 = stablehlo.add %1938, %1945 : tensor<64x512x768xf32>
    %1947 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %1948 = stablehlo.multiply %1947, %1945 : tensor<64x512x768xf32>
    %1949 = stablehlo.multiply %1948, %1818 : tensor<64x512x768xf32>
    %1950 = stablehlo.add %1946, %1949 : tensor<64x512x768xf32>
    %cst_96 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1951 = stablehlo.reduce(%1950 init: %cst_96) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1952 = stablehlo.reshape %1951 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_97 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1953 = stablehlo.reduce(%1952 init: %cst_97) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1954 = stablehlo.dot_general %1950, %1808, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %1955 = stablehlo.transpose %1954, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %1956 = stablehlo.dot_general %1950, %1809, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %1957 = stablehlo.transpose %1955, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_98 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1958 = stablehlo.reduce(%1956 init: %cst_98) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1959 = stablehlo.reshape %1958 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_99 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1960 = stablehlo.reduce(%1959 init: %cst_99) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1961 = stablehlo.broadcast_in_dim %1803, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %1962 = stablehlo.multiply %1961, %1956 : tensor<64x512x768xf32>
    %1963 = stablehlo.multiply %1956, %1802 : tensor<64x512x768xf32>
    %cst_100 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1964 = stablehlo.reduce(%1963 init: %cst_100) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1965 = stablehlo.reshape %1964 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_101 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1966 = stablehlo.reduce(%1965 init: %cst_101) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1967 = stablehlo.multiply %1800, %1962 : tensor<64x512x768xf32>
    %cst_102 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1968 = stablehlo.reduce(%1967 init: %cst_102) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1969 = stablehlo.reshape %1968 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1970 = stablehlo.broadcast_in_dim %1795, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1971 = stablehlo.multiply %1962, %1970 : tensor<64x512x768xf32>
    %1972 = stablehlo.negate %1971 : tensor<64x512x768xf32>
    %cst_103 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1973 = stablehlo.reduce(%1972 init: %cst_103) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1974 = stablehlo.reshape %1973 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %1975 = stablehlo.multiply %1969, %1798 : tensor<64x512x1xf32>
    %1976 = stablehlo.multiply %1975, %1792 : tensor<64x512x1xf32>
    %1977 = call @_var_122(%1780#1, %1780#2, %1780#3, %1976) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %1978 = stablehlo.add %1971, %1977 : tensor<64x512x768xf32>
    %1979 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1980 = stablehlo.divide %1974, %1979 : tensor<64x512x1xf32>
    %cst_104 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1981 = stablehlo.reduce(%1980 init: %cst_104) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1982 = stablehlo.broadcast_in_dim %1981, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %1983 = stablehlo.add %1978, %1982 : tensor<64x512x768xf32>
    %cst_105 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1984 = stablehlo.reduce(%1983 init: %cst_105) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1985 = stablehlo.reshape %1984 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_106 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %1986 = stablehlo.reduce(%1985 init: %cst_106) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %1987 = stablehlo.dot_general %1983, %1769, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %1988 = stablehlo.transpose %1987, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %1989 = stablehlo.dot_general %1983, %1770, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %1990 = stablehlo.transpose %1988, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %1991 = stablehlo.multiply %1750, %1989 : tensor<64x512x3072xf32>
    %1992 = stablehlo.multiply %1989, %1768 : tensor<64x512x3072xf32>
    %1993 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1994 = stablehlo.multiply %1993, %1991 : tensor<64x512x3072xf32>
    %1995 = stablehlo.multiply %1994, %1764 : tensor<64x512x3072xf32>
    %1996 = stablehlo.multiply %1995, %1761 : tensor<64x512x3072xf32>
    %1997 = stablehlo.add %1995, %1996 : tensor<64x512x3072xf32>
    %1998 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %1999 = stablehlo.multiply %1998, %1997 : tensor<64x512x3072xf32>
    %2000 = stablehlo.add %1992, %1999 : tensor<64x512x3072xf32>
    %2001 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2002 = stablehlo.multiply %2001, %1999 : tensor<64x512x3072xf32>
    %2003 = stablehlo.multiply %2002, %1755 : tensor<64x512x3072xf32>
    %2004 = stablehlo.add %2000, %2003 : tensor<64x512x3072xf32>
    %cst_107 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2005 = stablehlo.reduce(%2004 init: %cst_107) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2006 = stablehlo.reshape %2005 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_108 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2007 = stablehlo.reduce(%2006 init: %cst_108) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2008 = stablehlo.dot_general %2004, %1745, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2009 = stablehlo.transpose %2008, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2010 = stablehlo.dot_general %2004, %1746, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2011 = stablehlo.add %1983, %2010 : tensor<64x512x768xf32>
    %2012 = stablehlo.transpose %2009, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_109 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2013 = stablehlo.reduce(%2011 init: %cst_109) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2014 = stablehlo.reshape %2013 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_110 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2015 = stablehlo.reduce(%2014 init: %cst_110) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2016 = stablehlo.broadcast_in_dim %1740, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2017 = stablehlo.multiply %2016, %2011 : tensor<64x512x768xf32>
    %2018 = stablehlo.multiply %2011, %1739 : tensor<64x512x768xf32>
    %cst_111 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2019 = stablehlo.reduce(%2018 init: %cst_111) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2020 = stablehlo.reshape %2019 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_112 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2021 = stablehlo.reduce(%2020 init: %cst_112) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2022 = stablehlo.multiply %1737, %2017 : tensor<64x512x768xf32>
    %cst_113 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2023 = stablehlo.reduce(%2022 init: %cst_113) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2024 = stablehlo.reshape %2023 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2025 = stablehlo.broadcast_in_dim %1732, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2026 = stablehlo.multiply %2017, %2025 : tensor<64x512x768xf32>
    %2027 = stablehlo.negate %2026 : tensor<64x512x768xf32>
    %cst_114 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2028 = stablehlo.reduce(%2027 init: %cst_114) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2029 = stablehlo.reshape %2028 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2030 = stablehlo.multiply %2024, %1735 : tensor<64x512x1xf32>
    %2031 = stablehlo.multiply %2030, %1729 : tensor<64x512x1xf32>
    %2032 = call @_var_122(%1717#1, %1717#2, %1717#3, %2031) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2033 = stablehlo.add %2026, %2032 : tensor<64x512x768xf32>
    %2034 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2035 = stablehlo.divide %2029, %2034 : tensor<64x512x1xf32>
    %cst_115 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2036 = stablehlo.reduce(%2035 init: %cst_115) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2037 = stablehlo.broadcast_in_dim %2036, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2038 = stablehlo.add %2033, %2037 : tensor<64x512x768xf32>
    %cst_116 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2039 = stablehlo.reduce(%2038 init: %cst_116) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2040 = stablehlo.reshape %2039 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_117 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2041 = stablehlo.reduce(%2040 init: %cst_117) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2042 = stablehlo.dot_general %2038, %1706, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2043 = stablehlo.transpose %2042, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2044 = stablehlo.dot_general %2038, %1707, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2045 = stablehlo.transpose %2043, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2046 = stablehlo.reshape %2044 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2047 = stablehlo.transpose %2046, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2048 = stablehlo.dot_general %2047, %1681, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2049 = stablehlo.transpose %2048, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2050 = stablehlo.dot_general %2047, %1700, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2051 = stablehlo.transpose %2050, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2052 = stablehlo.broadcast_in_dim %1703, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2053 = stablehlo.multiply %2049, %2052 : tensor<64x512x12x512xf32>
    %2054 = stablehlo.multiply %2053, %1696 : tensor<64x512x12x512xf32>
    %cst_118 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2055 = stablehlo.reduce(%2054 init: %cst_118) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2056 = stablehlo.reshape %2055 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2057 = stablehlo.negate %2056 : tensor<64x512x12x1xf32>
    %2058 = stablehlo.broadcast_in_dim %1698, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2059 = stablehlo.divide %2049, %2058 : tensor<64x512x12x512xf32>
    %cst_119 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2060 = stablehlo.reduce(%2057 init: %cst_119) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2061 = stablehlo.broadcast_in_dim %2060, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2062 = stablehlo.add %2059, %2061 : tensor<64x512x12x512xf32>
    %2063 = stablehlo.multiply %2062, %1696 : tensor<64x512x12x512xf32>
    %2064 = call @_where_149(%1689#1, %2063) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2065 = stablehlo.transpose %2064, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2066 = stablehlo.dot_general %2065, %1680, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2067 = stablehlo.transpose %2066, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2068 = stablehlo.dot_general %2065, %1686, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2069 = stablehlo.transpose %2068, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2070 = stablehlo.broadcast_in_dim %1684, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2071 = stablehlo.divide %2067, %2070 : tensor<64x512x12x64xf32>
    %2072 = stablehlo.reshape %2051 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2073 = stablehlo.reshape %2069 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2074 = stablehlo.reshape %2071 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_120 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2075 = stablehlo.reduce(%2072 init: %cst_120) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2076 = stablehlo.reshape %2075 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_121 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2077 = stablehlo.reduce(%2076 init: %cst_121) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2078 = stablehlo.dot_general %2072, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2079 = stablehlo.transpose %2078, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2080 = stablehlo.dot_general %2072, %1674, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2081 = stablehlo.add %2038, %2080 : tensor<64x512x768xf32>
    %2082 = stablehlo.transpose %2079, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_122 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2083 = stablehlo.reduce(%2073 init: %cst_122) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2084 = stablehlo.reshape %2083 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_123 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2085 = stablehlo.reduce(%2084 init: %cst_123) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2086 = stablehlo.dot_general %2073, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2087 = stablehlo.transpose %2086, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2088 = stablehlo.dot_general %2073, %1669, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2089 = stablehlo.add %2081, %2088 : tensor<64x512x768xf32>
    %2090 = stablehlo.transpose %2087, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_124 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2091 = stablehlo.reduce(%2074 init: %cst_124) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2092 = stablehlo.reshape %2091 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_125 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2093 = stablehlo.reduce(%2092 init: %cst_125) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2094 = stablehlo.dot_general %2074, %1663, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2095 = stablehlo.transpose %2094, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2096 = stablehlo.dot_general %2074, %1664, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2097 = stablehlo.add %2089, %2096 : tensor<64x512x768xf32>
    %2098 = stablehlo.transpose %2095, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_126 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2099 = stablehlo.reduce(%2097 init: %cst_126) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2100 = stablehlo.reshape %2099 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_127 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2101 = stablehlo.reduce(%2100 init: %cst_127) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2102 = stablehlo.broadcast_in_dim %1658, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2103 = stablehlo.multiply %2102, %2097 : tensor<64x512x768xf32>
    %2104 = stablehlo.multiply %2097, %1657 : tensor<64x512x768xf32>
    %cst_128 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2105 = stablehlo.reduce(%2104 init: %cst_128) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2106 = stablehlo.reshape %2105 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_129 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2107 = stablehlo.reduce(%2106 init: %cst_129) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2108 = stablehlo.multiply %1655, %2103 : tensor<64x512x768xf32>
    %cst_130 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2109 = stablehlo.reduce(%2108 init: %cst_130) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2110 = stablehlo.reshape %2109 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2111 = stablehlo.broadcast_in_dim %1650, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2112 = stablehlo.multiply %2103, %2111 : tensor<64x512x768xf32>
    %2113 = stablehlo.negate %2112 : tensor<64x512x768xf32>
    %cst_131 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2114 = stablehlo.reduce(%2113 init: %cst_131) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2115 = stablehlo.reshape %2114 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2116 = stablehlo.multiply %2110, %1653 : tensor<64x512x1xf32>
    %2117 = stablehlo.multiply %2116, %1647 : tensor<64x512x1xf32>
    %2118 = call @_var_122(%1635#1, %1635#2, %1635#3, %2117) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2119 = stablehlo.add %2112, %2118 : tensor<64x512x768xf32>
    %2120 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2121 = stablehlo.divide %2115, %2120 : tensor<64x512x1xf32>
    %cst_132 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2122 = stablehlo.reduce(%2121 init: %cst_132) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2123 = stablehlo.broadcast_in_dim %2122, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2124 = stablehlo.add %2119, %2123 : tensor<64x512x768xf32>
    %cst_133 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2125 = stablehlo.reduce(%2124 init: %cst_133) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2126 = stablehlo.reshape %2125 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_134 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2127 = stablehlo.reduce(%2126 init: %cst_134) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2128 = stablehlo.dot_general %2124, %1624, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2129 = stablehlo.transpose %2128, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2130 = stablehlo.dot_general %2124, %1625, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2131 = stablehlo.transpose %2129, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2132 = stablehlo.multiply %1605, %2130 : tensor<64x512x3072xf32>
    %2133 = stablehlo.multiply %2130, %1623 : tensor<64x512x3072xf32>
    %2134 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2135 = stablehlo.multiply %2134, %2132 : tensor<64x512x3072xf32>
    %2136 = stablehlo.multiply %2135, %1619 : tensor<64x512x3072xf32>
    %2137 = stablehlo.multiply %2136, %1616 : tensor<64x512x3072xf32>
    %2138 = stablehlo.add %2136, %2137 : tensor<64x512x3072xf32>
    %2139 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2140 = stablehlo.multiply %2139, %2138 : tensor<64x512x3072xf32>
    %2141 = stablehlo.add %2133, %2140 : tensor<64x512x3072xf32>
    %2142 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2143 = stablehlo.multiply %2142, %2140 : tensor<64x512x3072xf32>
    %2144 = stablehlo.multiply %2143, %1610 : tensor<64x512x3072xf32>
    %2145 = stablehlo.add %2141, %2144 : tensor<64x512x3072xf32>
    %cst_135 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2146 = stablehlo.reduce(%2145 init: %cst_135) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2147 = stablehlo.reshape %2146 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_136 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2148 = stablehlo.reduce(%2147 init: %cst_136) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2149 = stablehlo.dot_general %2145, %1600, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2150 = stablehlo.transpose %2149, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2151 = stablehlo.dot_general %2145, %1601, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2152 = stablehlo.add %2124, %2151 : tensor<64x512x768xf32>
    %2153 = stablehlo.transpose %2150, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_137 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2154 = stablehlo.reduce(%2152 init: %cst_137) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2155 = stablehlo.reshape %2154 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_138 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2156 = stablehlo.reduce(%2155 init: %cst_138) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2157 = stablehlo.broadcast_in_dim %1595, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2158 = stablehlo.multiply %2157, %2152 : tensor<64x512x768xf32>
    %2159 = stablehlo.multiply %2152, %1594 : tensor<64x512x768xf32>
    %cst_139 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2160 = stablehlo.reduce(%2159 init: %cst_139) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2161 = stablehlo.reshape %2160 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_140 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2162 = stablehlo.reduce(%2161 init: %cst_140) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2163 = stablehlo.multiply %1592, %2158 : tensor<64x512x768xf32>
    %cst_141 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2164 = stablehlo.reduce(%2163 init: %cst_141) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2165 = stablehlo.reshape %2164 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2166 = stablehlo.broadcast_in_dim %1587, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2167 = stablehlo.multiply %2158, %2166 : tensor<64x512x768xf32>
    %2168 = stablehlo.negate %2167 : tensor<64x512x768xf32>
    %cst_142 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2169 = stablehlo.reduce(%2168 init: %cst_142) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2170 = stablehlo.reshape %2169 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2171 = stablehlo.multiply %2165, %1590 : tensor<64x512x1xf32>
    %2172 = stablehlo.multiply %2171, %1584 : tensor<64x512x1xf32>
    %2173 = call @_var_122(%1572#1, %1572#2, %1572#3, %2172) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2174 = stablehlo.add %2167, %2173 : tensor<64x512x768xf32>
    %2175 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2176 = stablehlo.divide %2170, %2175 : tensor<64x512x1xf32>
    %cst_143 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2177 = stablehlo.reduce(%2176 init: %cst_143) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2178 = stablehlo.broadcast_in_dim %2177, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2179 = stablehlo.add %2174, %2178 : tensor<64x512x768xf32>
    %cst_144 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2180 = stablehlo.reduce(%2179 init: %cst_144) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2181 = stablehlo.reshape %2180 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_145 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2182 = stablehlo.reduce(%2181 init: %cst_145) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2183 = stablehlo.dot_general %2179, %1561, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2184 = stablehlo.transpose %2183, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2185 = stablehlo.dot_general %2179, %1562, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2186 = stablehlo.transpose %2184, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2187 = stablehlo.reshape %2185 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2188 = stablehlo.transpose %2187, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2189 = stablehlo.dot_general %2188, %1536, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2190 = stablehlo.transpose %2189, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2191 = stablehlo.dot_general %2188, %1555, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2192 = stablehlo.transpose %2191, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2193 = stablehlo.broadcast_in_dim %1558, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2194 = stablehlo.multiply %2190, %2193 : tensor<64x512x12x512xf32>
    %2195 = stablehlo.multiply %2194, %1551 : tensor<64x512x12x512xf32>
    %cst_146 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2196 = stablehlo.reduce(%2195 init: %cst_146) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2197 = stablehlo.reshape %2196 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2198 = stablehlo.negate %2197 : tensor<64x512x12x1xf32>
    %2199 = stablehlo.broadcast_in_dim %1553, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2200 = stablehlo.divide %2190, %2199 : tensor<64x512x12x512xf32>
    %cst_147 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2201 = stablehlo.reduce(%2198 init: %cst_147) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2202 = stablehlo.broadcast_in_dim %2201, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2203 = stablehlo.add %2200, %2202 : tensor<64x512x12x512xf32>
    %2204 = stablehlo.multiply %2203, %1551 : tensor<64x512x12x512xf32>
    %2205 = call @_where_149(%1544#1, %2204) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2206 = stablehlo.transpose %2205, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2207 = stablehlo.dot_general %2206, %1535, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2208 = stablehlo.transpose %2207, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2209 = stablehlo.dot_general %2206, %1541, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2210 = stablehlo.transpose %2209, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2211 = stablehlo.broadcast_in_dim %1539, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2212 = stablehlo.divide %2208, %2211 : tensor<64x512x12x64xf32>
    %2213 = stablehlo.reshape %2192 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2214 = stablehlo.reshape %2210 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2215 = stablehlo.reshape %2212 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_148 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2216 = stablehlo.reduce(%2213 init: %cst_148) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2217 = stablehlo.reshape %2216 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_149 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2218 = stablehlo.reduce(%2217 init: %cst_149) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2219 = stablehlo.dot_general %2213, %1518, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2220 = stablehlo.transpose %2219, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2221 = stablehlo.dot_general %2213, %1529, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2222 = stablehlo.add %2179, %2221 : tensor<64x512x768xf32>
    %2223 = stablehlo.transpose %2220, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_150 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2224 = stablehlo.reduce(%2214 init: %cst_150) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2225 = stablehlo.reshape %2224 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_151 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2226 = stablehlo.reduce(%2225 init: %cst_151) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2227 = stablehlo.dot_general %2214, %1518, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2228 = stablehlo.transpose %2227, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2229 = stablehlo.dot_general %2214, %1524, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2230 = stablehlo.add %2222, %2229 : tensor<64x512x768xf32>
    %2231 = stablehlo.transpose %2228, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_152 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2232 = stablehlo.reduce(%2215 init: %cst_152) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2233 = stablehlo.reshape %2232 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_153 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2234 = stablehlo.reduce(%2233 init: %cst_153) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2235 = stablehlo.dot_general %2215, %1518, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2236 = stablehlo.transpose %2235, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2237 = stablehlo.dot_general %2215, %1519, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2238 = stablehlo.add %2230, %2237 : tensor<64x512x768xf32>
    %2239 = stablehlo.transpose %2236, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_154 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2240 = stablehlo.reduce(%2238 init: %cst_154) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2241 = stablehlo.reshape %2240 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_155 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2242 = stablehlo.reduce(%2241 init: %cst_155) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2243 = stablehlo.broadcast_in_dim %1513, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2244 = stablehlo.multiply %2243, %2238 : tensor<64x512x768xf32>
    %2245 = stablehlo.multiply %2238, %1512 : tensor<64x512x768xf32>
    %cst_156 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2246 = stablehlo.reduce(%2245 init: %cst_156) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2247 = stablehlo.reshape %2246 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_157 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2248 = stablehlo.reduce(%2247 init: %cst_157) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2249 = stablehlo.multiply %1510, %2244 : tensor<64x512x768xf32>
    %cst_158 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2250 = stablehlo.reduce(%2249 init: %cst_158) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2251 = stablehlo.reshape %2250 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2252 = stablehlo.broadcast_in_dim %1505, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2253 = stablehlo.multiply %2244, %2252 : tensor<64x512x768xf32>
    %2254 = stablehlo.negate %2253 : tensor<64x512x768xf32>
    %cst_159 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2255 = stablehlo.reduce(%2254 init: %cst_159) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2256 = stablehlo.reshape %2255 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2257 = stablehlo.multiply %2251, %1508 : tensor<64x512x1xf32>
    %2258 = stablehlo.multiply %2257, %1502 : tensor<64x512x1xf32>
    %2259 = call @_var_122(%1490#1, %1490#2, %1490#3, %2258) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2260 = stablehlo.add %2253, %2259 : tensor<64x512x768xf32>
    %2261 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2262 = stablehlo.divide %2256, %2261 : tensor<64x512x1xf32>
    %cst_160 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2263 = stablehlo.reduce(%2262 init: %cst_160) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2264 = stablehlo.broadcast_in_dim %2263, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2265 = stablehlo.add %2260, %2264 : tensor<64x512x768xf32>
    %cst_161 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2266 = stablehlo.reduce(%2265 init: %cst_161) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2267 = stablehlo.reshape %2266 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_162 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2268 = stablehlo.reduce(%2267 init: %cst_162) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2269 = stablehlo.dot_general %2265, %1479, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2270 = stablehlo.transpose %2269, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2271 = stablehlo.dot_general %2265, %1480, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2272 = stablehlo.transpose %2270, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2273 = stablehlo.multiply %1460, %2271 : tensor<64x512x3072xf32>
    %2274 = stablehlo.multiply %2271, %1478 : tensor<64x512x3072xf32>
    %2275 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2276 = stablehlo.multiply %2275, %2273 : tensor<64x512x3072xf32>
    %2277 = stablehlo.multiply %2276, %1474 : tensor<64x512x3072xf32>
    %2278 = stablehlo.multiply %2277, %1471 : tensor<64x512x3072xf32>
    %2279 = stablehlo.add %2277, %2278 : tensor<64x512x3072xf32>
    %2280 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2281 = stablehlo.multiply %2280, %2279 : tensor<64x512x3072xf32>
    %2282 = stablehlo.add %2274, %2281 : tensor<64x512x3072xf32>
    %2283 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2284 = stablehlo.multiply %2283, %2281 : tensor<64x512x3072xf32>
    %2285 = stablehlo.multiply %2284, %1465 : tensor<64x512x3072xf32>
    %2286 = stablehlo.add %2282, %2285 : tensor<64x512x3072xf32>
    %cst_163 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2287 = stablehlo.reduce(%2286 init: %cst_163) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2288 = stablehlo.reshape %2287 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_164 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2289 = stablehlo.reduce(%2288 init: %cst_164) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2290 = stablehlo.dot_general %2286, %1455, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2291 = stablehlo.transpose %2290, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2292 = stablehlo.dot_general %2286, %1456, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2293 = stablehlo.add %2265, %2292 : tensor<64x512x768xf32>
    %2294 = stablehlo.transpose %2291, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_165 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2295 = stablehlo.reduce(%2293 init: %cst_165) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2296 = stablehlo.reshape %2295 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_166 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2297 = stablehlo.reduce(%2296 init: %cst_166) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2298 = stablehlo.broadcast_in_dim %1450, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2299 = stablehlo.multiply %2298, %2293 : tensor<64x512x768xf32>
    %2300 = stablehlo.multiply %2293, %1449 : tensor<64x512x768xf32>
    %cst_167 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2301 = stablehlo.reduce(%2300 init: %cst_167) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2302 = stablehlo.reshape %2301 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_168 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2303 = stablehlo.reduce(%2302 init: %cst_168) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2304 = stablehlo.multiply %1447, %2299 : tensor<64x512x768xf32>
    %cst_169 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2305 = stablehlo.reduce(%2304 init: %cst_169) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2306 = stablehlo.reshape %2305 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2307 = stablehlo.broadcast_in_dim %1442, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2308 = stablehlo.multiply %2299, %2307 : tensor<64x512x768xf32>
    %2309 = stablehlo.negate %2308 : tensor<64x512x768xf32>
    %cst_170 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2310 = stablehlo.reduce(%2309 init: %cst_170) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2311 = stablehlo.reshape %2310 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2312 = stablehlo.multiply %2306, %1445 : tensor<64x512x1xf32>
    %2313 = stablehlo.multiply %2312, %1439 : tensor<64x512x1xf32>
    %2314 = call @_var_122(%1427#1, %1427#2, %1427#3, %2313) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2315 = stablehlo.add %2308, %2314 : tensor<64x512x768xf32>
    %2316 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2317 = stablehlo.divide %2311, %2316 : tensor<64x512x1xf32>
    %cst_171 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2318 = stablehlo.reduce(%2317 init: %cst_171) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2319 = stablehlo.broadcast_in_dim %2318, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2320 = stablehlo.add %2315, %2319 : tensor<64x512x768xf32>
    %cst_172 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2321 = stablehlo.reduce(%2320 init: %cst_172) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2322 = stablehlo.reshape %2321 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_173 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2323 = stablehlo.reduce(%2322 init: %cst_173) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2324 = stablehlo.dot_general %2320, %1416, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2325 = stablehlo.transpose %2324, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2326 = stablehlo.dot_general %2320, %1417, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2327 = stablehlo.transpose %2325, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2328 = stablehlo.reshape %2326 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2329 = stablehlo.transpose %2328, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2330 = stablehlo.dot_general %2329, %1391, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2331 = stablehlo.transpose %2330, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2332 = stablehlo.dot_general %2329, %1410, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2333 = stablehlo.transpose %2332, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2334 = stablehlo.broadcast_in_dim %1413, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2335 = stablehlo.multiply %2331, %2334 : tensor<64x512x12x512xf32>
    %2336 = stablehlo.multiply %2335, %1406 : tensor<64x512x12x512xf32>
    %cst_174 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2337 = stablehlo.reduce(%2336 init: %cst_174) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2338 = stablehlo.reshape %2337 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2339 = stablehlo.negate %2338 : tensor<64x512x12x1xf32>
    %2340 = stablehlo.broadcast_in_dim %1408, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2341 = stablehlo.divide %2331, %2340 : tensor<64x512x12x512xf32>
    %cst_175 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2342 = stablehlo.reduce(%2339 init: %cst_175) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2343 = stablehlo.broadcast_in_dim %2342, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2344 = stablehlo.add %2341, %2343 : tensor<64x512x12x512xf32>
    %2345 = stablehlo.multiply %2344, %1406 : tensor<64x512x12x512xf32>
    %2346 = call @_where_149(%1399#1, %2345) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2347 = stablehlo.transpose %2346, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2348 = stablehlo.dot_general %2347, %1390, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2349 = stablehlo.transpose %2348, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2350 = stablehlo.dot_general %2347, %1396, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2351 = stablehlo.transpose %2350, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2352 = stablehlo.broadcast_in_dim %1394, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2353 = stablehlo.divide %2349, %2352 : tensor<64x512x12x64xf32>
    %2354 = stablehlo.reshape %2333 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2355 = stablehlo.reshape %2351 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2356 = stablehlo.reshape %2353 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_176 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2357 = stablehlo.reduce(%2354 init: %cst_176) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2358 = stablehlo.reshape %2357 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_177 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2359 = stablehlo.reduce(%2358 init: %cst_177) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2360 = stablehlo.dot_general %2354, %1373, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2361 = stablehlo.transpose %2360, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2362 = stablehlo.dot_general %2354, %1384, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2363 = stablehlo.add %2320, %2362 : tensor<64x512x768xf32>
    %2364 = stablehlo.transpose %2361, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_178 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2365 = stablehlo.reduce(%2355 init: %cst_178) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2366 = stablehlo.reshape %2365 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_179 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2367 = stablehlo.reduce(%2366 init: %cst_179) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2368 = stablehlo.dot_general %2355, %1373, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2369 = stablehlo.transpose %2368, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2370 = stablehlo.dot_general %2355, %1379, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2371 = stablehlo.add %2363, %2370 : tensor<64x512x768xf32>
    %2372 = stablehlo.transpose %2369, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_180 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2373 = stablehlo.reduce(%2356 init: %cst_180) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2374 = stablehlo.reshape %2373 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_181 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2375 = stablehlo.reduce(%2374 init: %cst_181) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2376 = stablehlo.dot_general %2356, %1373, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2377 = stablehlo.transpose %2376, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2378 = stablehlo.dot_general %2356, %1374, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2379 = stablehlo.add %2371, %2378 : tensor<64x512x768xf32>
    %2380 = stablehlo.transpose %2377, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_182 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2381 = stablehlo.reduce(%2379 init: %cst_182) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2382 = stablehlo.reshape %2381 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_183 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2383 = stablehlo.reduce(%2382 init: %cst_183) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2384 = stablehlo.broadcast_in_dim %1368, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2385 = stablehlo.multiply %2384, %2379 : tensor<64x512x768xf32>
    %2386 = stablehlo.multiply %2379, %1367 : tensor<64x512x768xf32>
    %cst_184 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2387 = stablehlo.reduce(%2386 init: %cst_184) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2388 = stablehlo.reshape %2387 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_185 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2389 = stablehlo.reduce(%2388 init: %cst_185) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2390 = stablehlo.multiply %1365, %2385 : tensor<64x512x768xf32>
    %cst_186 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2391 = stablehlo.reduce(%2390 init: %cst_186) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2392 = stablehlo.reshape %2391 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2393 = stablehlo.broadcast_in_dim %1360, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2394 = stablehlo.multiply %2385, %2393 : tensor<64x512x768xf32>
    %2395 = stablehlo.negate %2394 : tensor<64x512x768xf32>
    %cst_187 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2396 = stablehlo.reduce(%2395 init: %cst_187) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2397 = stablehlo.reshape %2396 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2398 = stablehlo.multiply %2392, %1363 : tensor<64x512x1xf32>
    %2399 = stablehlo.multiply %2398, %1357 : tensor<64x512x1xf32>
    %2400 = call @_var_122(%1345#1, %1345#2, %1345#3, %2399) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2401 = stablehlo.add %2394, %2400 : tensor<64x512x768xf32>
    %2402 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2403 = stablehlo.divide %2397, %2402 : tensor<64x512x1xf32>
    %cst_188 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2404 = stablehlo.reduce(%2403 init: %cst_188) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2405 = stablehlo.broadcast_in_dim %2404, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2406 = stablehlo.add %2401, %2405 : tensor<64x512x768xf32>
    %cst_189 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2407 = stablehlo.reduce(%2406 init: %cst_189) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2408 = stablehlo.reshape %2407 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_190 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2409 = stablehlo.reduce(%2408 init: %cst_190) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2410 = stablehlo.dot_general %2406, %1334, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2411 = stablehlo.transpose %2410, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2412 = stablehlo.dot_general %2406, %1335, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2413 = stablehlo.transpose %2411, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2414 = stablehlo.multiply %1315, %2412 : tensor<64x512x3072xf32>
    %2415 = stablehlo.multiply %2412, %1333 : tensor<64x512x3072xf32>
    %2416 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2417 = stablehlo.multiply %2416, %2414 : tensor<64x512x3072xf32>
    %2418 = stablehlo.multiply %2417, %1329 : tensor<64x512x3072xf32>
    %2419 = stablehlo.multiply %2418, %1326 : tensor<64x512x3072xf32>
    %2420 = stablehlo.add %2418, %2419 : tensor<64x512x3072xf32>
    %2421 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2422 = stablehlo.multiply %2421, %2420 : tensor<64x512x3072xf32>
    %2423 = stablehlo.add %2415, %2422 : tensor<64x512x3072xf32>
    %2424 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2425 = stablehlo.multiply %2424, %2422 : tensor<64x512x3072xf32>
    %2426 = stablehlo.multiply %2425, %1320 : tensor<64x512x3072xf32>
    %2427 = stablehlo.add %2423, %2426 : tensor<64x512x3072xf32>
    %cst_191 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2428 = stablehlo.reduce(%2427 init: %cst_191) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2429 = stablehlo.reshape %2428 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_192 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2430 = stablehlo.reduce(%2429 init: %cst_192) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2431 = stablehlo.dot_general %2427, %1310, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2432 = stablehlo.transpose %2431, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2433 = stablehlo.dot_general %2427, %1311, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2434 = stablehlo.add %2406, %2433 : tensor<64x512x768xf32>
    %2435 = stablehlo.transpose %2432, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_193 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2436 = stablehlo.reduce(%2434 init: %cst_193) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2437 = stablehlo.reshape %2436 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_194 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2438 = stablehlo.reduce(%2437 init: %cst_194) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2439 = stablehlo.broadcast_in_dim %1305, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2440 = stablehlo.multiply %2439, %2434 : tensor<64x512x768xf32>
    %2441 = stablehlo.multiply %2434, %1304 : tensor<64x512x768xf32>
    %cst_195 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2442 = stablehlo.reduce(%2441 init: %cst_195) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2443 = stablehlo.reshape %2442 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_196 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2444 = stablehlo.reduce(%2443 init: %cst_196) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2445 = stablehlo.multiply %1302, %2440 : tensor<64x512x768xf32>
    %cst_197 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2446 = stablehlo.reduce(%2445 init: %cst_197) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2447 = stablehlo.reshape %2446 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2448 = stablehlo.broadcast_in_dim %1297, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2449 = stablehlo.multiply %2440, %2448 : tensor<64x512x768xf32>
    %2450 = stablehlo.negate %2449 : tensor<64x512x768xf32>
    %cst_198 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2451 = stablehlo.reduce(%2450 init: %cst_198) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2452 = stablehlo.reshape %2451 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2453 = stablehlo.multiply %2447, %1300 : tensor<64x512x1xf32>
    %2454 = stablehlo.multiply %2453, %1294 : tensor<64x512x1xf32>
    %2455 = call @_var_122(%1282#1, %1282#2, %1282#3, %2454) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2456 = stablehlo.add %2449, %2455 : tensor<64x512x768xf32>
    %2457 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2458 = stablehlo.divide %2452, %2457 : tensor<64x512x1xf32>
    %cst_199 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2459 = stablehlo.reduce(%2458 init: %cst_199) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2460 = stablehlo.broadcast_in_dim %2459, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2461 = stablehlo.add %2456, %2460 : tensor<64x512x768xf32>
    %cst_200 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2462 = stablehlo.reduce(%2461 init: %cst_200) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2463 = stablehlo.reshape %2462 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_201 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2464 = stablehlo.reduce(%2463 init: %cst_201) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2465 = stablehlo.dot_general %2461, %1271, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2466 = stablehlo.transpose %2465, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2467 = stablehlo.dot_general %2461, %1272, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2468 = stablehlo.transpose %2466, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2469 = stablehlo.reshape %2467 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2470 = stablehlo.transpose %2469, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2471 = stablehlo.dot_general %2470, %1246, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2472 = stablehlo.transpose %2471, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2473 = stablehlo.dot_general %2470, %1265, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2474 = stablehlo.transpose %2473, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2475 = stablehlo.broadcast_in_dim %1268, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2476 = stablehlo.multiply %2472, %2475 : tensor<64x512x12x512xf32>
    %2477 = stablehlo.multiply %2476, %1261 : tensor<64x512x12x512xf32>
    %cst_202 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2478 = stablehlo.reduce(%2477 init: %cst_202) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2479 = stablehlo.reshape %2478 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2480 = stablehlo.negate %2479 : tensor<64x512x12x1xf32>
    %2481 = stablehlo.broadcast_in_dim %1263, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2482 = stablehlo.divide %2472, %2481 : tensor<64x512x12x512xf32>
    %cst_203 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2483 = stablehlo.reduce(%2480 init: %cst_203) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2484 = stablehlo.broadcast_in_dim %2483, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2485 = stablehlo.add %2482, %2484 : tensor<64x512x12x512xf32>
    %2486 = stablehlo.multiply %2485, %1261 : tensor<64x512x12x512xf32>
    %2487 = call @_where_149(%1254#1, %2486) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2488 = stablehlo.transpose %2487, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2489 = stablehlo.dot_general %2488, %1245, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2490 = stablehlo.transpose %2489, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2491 = stablehlo.dot_general %2488, %1251, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2492 = stablehlo.transpose %2491, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2493 = stablehlo.broadcast_in_dim %1249, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2494 = stablehlo.divide %2490, %2493 : tensor<64x512x12x64xf32>
    %2495 = stablehlo.reshape %2474 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2496 = stablehlo.reshape %2492 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2497 = stablehlo.reshape %2494 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_204 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2498 = stablehlo.reduce(%2495 init: %cst_204) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2499 = stablehlo.reshape %2498 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_205 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2500 = stablehlo.reduce(%2499 init: %cst_205) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2501 = stablehlo.dot_general %2495, %1228, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2502 = stablehlo.transpose %2501, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2503 = stablehlo.dot_general %2495, %1239, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2504 = stablehlo.add %2461, %2503 : tensor<64x512x768xf32>
    %2505 = stablehlo.transpose %2502, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_206 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2506 = stablehlo.reduce(%2496 init: %cst_206) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2507 = stablehlo.reshape %2506 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_207 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2508 = stablehlo.reduce(%2507 init: %cst_207) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2509 = stablehlo.dot_general %2496, %1228, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2510 = stablehlo.transpose %2509, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2511 = stablehlo.dot_general %2496, %1234, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2512 = stablehlo.add %2504, %2511 : tensor<64x512x768xf32>
    %2513 = stablehlo.transpose %2510, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_208 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2514 = stablehlo.reduce(%2497 init: %cst_208) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2515 = stablehlo.reshape %2514 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_209 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2516 = stablehlo.reduce(%2515 init: %cst_209) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2517 = stablehlo.dot_general %2497, %1228, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2518 = stablehlo.transpose %2517, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2519 = stablehlo.dot_general %2497, %1229, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2520 = stablehlo.add %2512, %2519 : tensor<64x512x768xf32>
    %2521 = stablehlo.transpose %2518, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_210 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2522 = stablehlo.reduce(%2520 init: %cst_210) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2523 = stablehlo.reshape %2522 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_211 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2524 = stablehlo.reduce(%2523 init: %cst_211) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2525 = stablehlo.broadcast_in_dim %1223, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2526 = stablehlo.multiply %2525, %2520 : tensor<64x512x768xf32>
    %2527 = stablehlo.multiply %2520, %1222 : tensor<64x512x768xf32>
    %cst_212 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2528 = stablehlo.reduce(%2527 init: %cst_212) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2529 = stablehlo.reshape %2528 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_213 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2530 = stablehlo.reduce(%2529 init: %cst_213) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2531 = stablehlo.multiply %1220, %2526 : tensor<64x512x768xf32>
    %cst_214 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2532 = stablehlo.reduce(%2531 init: %cst_214) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2533 = stablehlo.reshape %2532 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2534 = stablehlo.broadcast_in_dim %1215, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2535 = stablehlo.multiply %2526, %2534 : tensor<64x512x768xf32>
    %2536 = stablehlo.negate %2535 : tensor<64x512x768xf32>
    %cst_215 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2537 = stablehlo.reduce(%2536 init: %cst_215) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2538 = stablehlo.reshape %2537 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2539 = stablehlo.multiply %2533, %1218 : tensor<64x512x1xf32>
    %2540 = stablehlo.multiply %2539, %1212 : tensor<64x512x1xf32>
    %2541 = call @_var_122(%1200#1, %1200#2, %1200#3, %2540) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2542 = stablehlo.add %2535, %2541 : tensor<64x512x768xf32>
    %2543 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2544 = stablehlo.divide %2538, %2543 : tensor<64x512x1xf32>
    %cst_216 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2545 = stablehlo.reduce(%2544 init: %cst_216) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2546 = stablehlo.broadcast_in_dim %2545, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2547 = stablehlo.add %2542, %2546 : tensor<64x512x768xf32>
    %cst_217 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2548 = stablehlo.reduce(%2547 init: %cst_217) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2549 = stablehlo.reshape %2548 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_218 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2550 = stablehlo.reduce(%2549 init: %cst_218) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2551 = stablehlo.dot_general %2547, %1189, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2552 = stablehlo.transpose %2551, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2553 = stablehlo.dot_general %2547, %1190, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2554 = stablehlo.transpose %2552, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2555 = stablehlo.multiply %1170, %2553 : tensor<64x512x3072xf32>
    %2556 = stablehlo.multiply %2553, %1188 : tensor<64x512x3072xf32>
    %2557 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2558 = stablehlo.multiply %2557, %2555 : tensor<64x512x3072xf32>
    %2559 = stablehlo.multiply %2558, %1184 : tensor<64x512x3072xf32>
    %2560 = stablehlo.multiply %2559, %1181 : tensor<64x512x3072xf32>
    %2561 = stablehlo.add %2559, %2560 : tensor<64x512x3072xf32>
    %2562 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2563 = stablehlo.multiply %2562, %2561 : tensor<64x512x3072xf32>
    %2564 = stablehlo.add %2556, %2563 : tensor<64x512x3072xf32>
    %2565 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2566 = stablehlo.multiply %2565, %2563 : tensor<64x512x3072xf32>
    %2567 = stablehlo.multiply %2566, %1175 : tensor<64x512x3072xf32>
    %2568 = stablehlo.add %2564, %2567 : tensor<64x512x3072xf32>
    %cst_219 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2569 = stablehlo.reduce(%2568 init: %cst_219) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2570 = stablehlo.reshape %2569 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_220 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2571 = stablehlo.reduce(%2570 init: %cst_220) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2572 = stablehlo.dot_general %2568, %1165, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2573 = stablehlo.transpose %2572, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2574 = stablehlo.dot_general %2568, %1166, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2575 = stablehlo.add %2547, %2574 : tensor<64x512x768xf32>
    %2576 = stablehlo.transpose %2573, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_221 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2577 = stablehlo.reduce(%2575 init: %cst_221) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2578 = stablehlo.reshape %2577 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_222 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2579 = stablehlo.reduce(%2578 init: %cst_222) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2580 = stablehlo.broadcast_in_dim %1160, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2581 = stablehlo.multiply %2580, %2575 : tensor<64x512x768xf32>
    %2582 = stablehlo.multiply %2575, %1159 : tensor<64x512x768xf32>
    %cst_223 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2583 = stablehlo.reduce(%2582 init: %cst_223) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2584 = stablehlo.reshape %2583 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_224 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2585 = stablehlo.reduce(%2584 init: %cst_224) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2586 = stablehlo.multiply %1157, %2581 : tensor<64x512x768xf32>
    %cst_225 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2587 = stablehlo.reduce(%2586 init: %cst_225) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2588 = stablehlo.reshape %2587 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2589 = stablehlo.broadcast_in_dim %1152, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2590 = stablehlo.multiply %2581, %2589 : tensor<64x512x768xf32>
    %2591 = stablehlo.negate %2590 : tensor<64x512x768xf32>
    %cst_226 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2592 = stablehlo.reduce(%2591 init: %cst_226) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2593 = stablehlo.reshape %2592 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2594 = stablehlo.multiply %2588, %1155 : tensor<64x512x1xf32>
    %2595 = stablehlo.multiply %2594, %1149 : tensor<64x512x1xf32>
    %2596 = call @_var_122(%1137#1, %1137#2, %1137#3, %2595) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2597 = stablehlo.add %2590, %2596 : tensor<64x512x768xf32>
    %2598 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2599 = stablehlo.divide %2593, %2598 : tensor<64x512x1xf32>
    %cst_227 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2600 = stablehlo.reduce(%2599 init: %cst_227) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2601 = stablehlo.broadcast_in_dim %2600, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2602 = stablehlo.add %2597, %2601 : tensor<64x512x768xf32>
    %cst_228 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2603 = stablehlo.reduce(%2602 init: %cst_228) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2604 = stablehlo.reshape %2603 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_229 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2605 = stablehlo.reduce(%2604 init: %cst_229) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2606 = stablehlo.dot_general %2602, %1126, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2607 = stablehlo.transpose %2606, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2608 = stablehlo.dot_general %2602, %1127, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2609 = stablehlo.transpose %2607, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2610 = stablehlo.reshape %2608 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2611 = stablehlo.transpose %2610, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2612 = stablehlo.dot_general %2611, %1101, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2613 = stablehlo.transpose %2612, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2614 = stablehlo.dot_general %2611, %1120, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2615 = stablehlo.transpose %2614, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2616 = stablehlo.broadcast_in_dim %1123, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2617 = stablehlo.multiply %2613, %2616 : tensor<64x512x12x512xf32>
    %2618 = stablehlo.multiply %2617, %1116 : tensor<64x512x12x512xf32>
    %cst_230 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2619 = stablehlo.reduce(%2618 init: %cst_230) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2620 = stablehlo.reshape %2619 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2621 = stablehlo.negate %2620 : tensor<64x512x12x1xf32>
    %2622 = stablehlo.broadcast_in_dim %1118, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2623 = stablehlo.divide %2613, %2622 : tensor<64x512x12x512xf32>
    %cst_231 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2624 = stablehlo.reduce(%2621 init: %cst_231) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2625 = stablehlo.broadcast_in_dim %2624, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2626 = stablehlo.add %2623, %2625 : tensor<64x512x12x512xf32>
    %2627 = stablehlo.multiply %2626, %1116 : tensor<64x512x12x512xf32>
    %2628 = call @_where_149(%1109#1, %2627) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2629 = stablehlo.transpose %2628, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2630 = stablehlo.dot_general %2629, %1100, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2631 = stablehlo.transpose %2630, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2632 = stablehlo.dot_general %2629, %1106, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2633 = stablehlo.transpose %2632, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2634 = stablehlo.broadcast_in_dim %1104, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2635 = stablehlo.divide %2631, %2634 : tensor<64x512x12x64xf32>
    %2636 = stablehlo.reshape %2615 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2637 = stablehlo.reshape %2633 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2638 = stablehlo.reshape %2635 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_232 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2639 = stablehlo.reduce(%2636 init: %cst_232) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2640 = stablehlo.reshape %2639 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_233 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2641 = stablehlo.reduce(%2640 init: %cst_233) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2642 = stablehlo.dot_general %2636, %1083, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2643 = stablehlo.transpose %2642, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2644 = stablehlo.dot_general %2636, %1094, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2645 = stablehlo.add %2602, %2644 : tensor<64x512x768xf32>
    %2646 = stablehlo.transpose %2643, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_234 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2647 = stablehlo.reduce(%2637 init: %cst_234) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2648 = stablehlo.reshape %2647 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_235 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2649 = stablehlo.reduce(%2648 init: %cst_235) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2650 = stablehlo.dot_general %2637, %1083, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2651 = stablehlo.transpose %2650, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2652 = stablehlo.dot_general %2637, %1089, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2653 = stablehlo.add %2645, %2652 : tensor<64x512x768xf32>
    %2654 = stablehlo.transpose %2651, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_236 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2655 = stablehlo.reduce(%2638 init: %cst_236) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2656 = stablehlo.reshape %2655 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_237 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2657 = stablehlo.reduce(%2656 init: %cst_237) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2658 = stablehlo.dot_general %2638, %1083, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2659 = stablehlo.transpose %2658, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2660 = stablehlo.dot_general %2638, %1084, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2661 = stablehlo.add %2653, %2660 : tensor<64x512x768xf32>
    %2662 = stablehlo.transpose %2659, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_238 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2663 = stablehlo.reduce(%2661 init: %cst_238) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2664 = stablehlo.reshape %2663 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_239 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2665 = stablehlo.reduce(%2664 init: %cst_239) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2666 = stablehlo.broadcast_in_dim %1078, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2667 = stablehlo.multiply %2666, %2661 : tensor<64x512x768xf32>
    %2668 = stablehlo.multiply %2661, %1077 : tensor<64x512x768xf32>
    %cst_240 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2669 = stablehlo.reduce(%2668 init: %cst_240) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2670 = stablehlo.reshape %2669 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_241 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2671 = stablehlo.reduce(%2670 init: %cst_241) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2672 = stablehlo.multiply %1075, %2667 : tensor<64x512x768xf32>
    %cst_242 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2673 = stablehlo.reduce(%2672 init: %cst_242) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2674 = stablehlo.reshape %2673 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2675 = stablehlo.broadcast_in_dim %1070, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2676 = stablehlo.multiply %2667, %2675 : tensor<64x512x768xf32>
    %2677 = stablehlo.negate %2676 : tensor<64x512x768xf32>
    %cst_243 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2678 = stablehlo.reduce(%2677 init: %cst_243) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2679 = stablehlo.reshape %2678 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2680 = stablehlo.multiply %2674, %1073 : tensor<64x512x1xf32>
    %2681 = stablehlo.multiply %2680, %1067 : tensor<64x512x1xf32>
    %2682 = call @_var_122(%1055#1, %1055#2, %1055#3, %2681) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2683 = stablehlo.add %2676, %2682 : tensor<64x512x768xf32>
    %2684 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2685 = stablehlo.divide %2679, %2684 : tensor<64x512x1xf32>
    %cst_244 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2686 = stablehlo.reduce(%2685 init: %cst_244) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2687 = stablehlo.broadcast_in_dim %2686, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2688 = stablehlo.add %2683, %2687 : tensor<64x512x768xf32>
    %cst_245 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2689 = stablehlo.reduce(%2688 init: %cst_245) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2690 = stablehlo.reshape %2689 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_246 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2691 = stablehlo.reduce(%2690 init: %cst_246) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2692 = stablehlo.dot_general %2688, %1044, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2693 = stablehlo.transpose %2692, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2694 = stablehlo.dot_general %2688, %1045, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2695 = stablehlo.transpose %2693, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2696 = stablehlo.multiply %1025, %2694 : tensor<64x512x3072xf32>
    %2697 = stablehlo.multiply %2694, %1043 : tensor<64x512x3072xf32>
    %2698 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2699 = stablehlo.multiply %2698, %2696 : tensor<64x512x3072xf32>
    %2700 = stablehlo.multiply %2699, %1039 : tensor<64x512x3072xf32>
    %2701 = stablehlo.multiply %2700, %1036 : tensor<64x512x3072xf32>
    %2702 = stablehlo.add %2700, %2701 : tensor<64x512x3072xf32>
    %2703 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2704 = stablehlo.multiply %2703, %2702 : tensor<64x512x3072xf32>
    %2705 = stablehlo.add %2697, %2704 : tensor<64x512x3072xf32>
    %2706 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2707 = stablehlo.multiply %2706, %2704 : tensor<64x512x3072xf32>
    %2708 = stablehlo.multiply %2707, %1030 : tensor<64x512x3072xf32>
    %2709 = stablehlo.add %2705, %2708 : tensor<64x512x3072xf32>
    %cst_247 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2710 = stablehlo.reduce(%2709 init: %cst_247) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2711 = stablehlo.reshape %2710 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_248 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2712 = stablehlo.reduce(%2711 init: %cst_248) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2713 = stablehlo.dot_general %2709, %1020, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2714 = stablehlo.transpose %2713, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2715 = stablehlo.dot_general %2709, %1021, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2716 = stablehlo.add %2688, %2715 : tensor<64x512x768xf32>
    %2717 = stablehlo.transpose %2714, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_249 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2718 = stablehlo.reduce(%2716 init: %cst_249) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2719 = stablehlo.reshape %2718 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_250 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2720 = stablehlo.reduce(%2719 init: %cst_250) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2721 = stablehlo.broadcast_in_dim %1015, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2722 = stablehlo.multiply %2721, %2716 : tensor<64x512x768xf32>
    %2723 = stablehlo.multiply %2716, %1014 : tensor<64x512x768xf32>
    %cst_251 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2724 = stablehlo.reduce(%2723 init: %cst_251) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2725 = stablehlo.reshape %2724 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_252 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2726 = stablehlo.reduce(%2725 init: %cst_252) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2727 = stablehlo.multiply %1012, %2722 : tensor<64x512x768xf32>
    %cst_253 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2728 = stablehlo.reduce(%2727 init: %cst_253) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2729 = stablehlo.reshape %2728 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2730 = stablehlo.broadcast_in_dim %1007, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2731 = stablehlo.multiply %2722, %2730 : tensor<64x512x768xf32>
    %2732 = stablehlo.negate %2731 : tensor<64x512x768xf32>
    %cst_254 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2733 = stablehlo.reduce(%2732 init: %cst_254) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2734 = stablehlo.reshape %2733 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2735 = stablehlo.multiply %2729, %1010 : tensor<64x512x1xf32>
    %2736 = stablehlo.multiply %2735, %1004 : tensor<64x512x1xf32>
    %2737 = call @_var_122(%992#1, %992#2, %992#3, %2736) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2738 = stablehlo.add %2731, %2737 : tensor<64x512x768xf32>
    %2739 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2740 = stablehlo.divide %2734, %2739 : tensor<64x512x1xf32>
    %cst_255 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2741 = stablehlo.reduce(%2740 init: %cst_255) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2742 = stablehlo.broadcast_in_dim %2741, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2743 = stablehlo.add %2738, %2742 : tensor<64x512x768xf32>
    %cst_256 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2744 = stablehlo.reduce(%2743 init: %cst_256) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2745 = stablehlo.reshape %2744 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_257 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2746 = stablehlo.reduce(%2745 init: %cst_257) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2747 = stablehlo.dot_general %2743, %981, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2748 = stablehlo.transpose %2747, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2749 = stablehlo.dot_general %2743, %982, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2750 = stablehlo.transpose %2748, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2751 = stablehlo.reshape %2749 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2752 = stablehlo.transpose %2751, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2753 = stablehlo.dot_general %2752, %956, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2754 = stablehlo.transpose %2753, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2755 = stablehlo.dot_general %2752, %975, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2756 = stablehlo.transpose %2755, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2757 = stablehlo.broadcast_in_dim %978, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2758 = stablehlo.multiply %2754, %2757 : tensor<64x512x12x512xf32>
    %2759 = stablehlo.multiply %2758, %971 : tensor<64x512x12x512xf32>
    %cst_258 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2760 = stablehlo.reduce(%2759 init: %cst_258) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2761 = stablehlo.reshape %2760 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2762 = stablehlo.negate %2761 : tensor<64x512x12x1xf32>
    %2763 = stablehlo.broadcast_in_dim %973, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2764 = stablehlo.divide %2754, %2763 : tensor<64x512x12x512xf32>
    %cst_259 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2765 = stablehlo.reduce(%2762 init: %cst_259) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2766 = stablehlo.broadcast_in_dim %2765, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2767 = stablehlo.add %2764, %2766 : tensor<64x512x12x512xf32>
    %2768 = stablehlo.multiply %2767, %971 : tensor<64x512x12x512xf32>
    %2769 = call @_where_149(%964#1, %2768) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2770 = stablehlo.transpose %2769, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2771 = stablehlo.dot_general %2770, %955, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2772 = stablehlo.transpose %2771, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2773 = stablehlo.dot_general %2770, %961, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2774 = stablehlo.transpose %2773, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2775 = stablehlo.broadcast_in_dim %959, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2776 = stablehlo.divide %2772, %2775 : tensor<64x512x12x64xf32>
    %2777 = stablehlo.reshape %2756 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2778 = stablehlo.reshape %2774 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2779 = stablehlo.reshape %2776 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_260 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2780 = stablehlo.reduce(%2777 init: %cst_260) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2781 = stablehlo.reshape %2780 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_261 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2782 = stablehlo.reduce(%2781 init: %cst_261) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2783 = stablehlo.dot_general %2777, %938, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2784 = stablehlo.transpose %2783, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2785 = stablehlo.dot_general %2777, %949, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2786 = stablehlo.add %2743, %2785 : tensor<64x512x768xf32>
    %2787 = stablehlo.transpose %2784, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_262 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2788 = stablehlo.reduce(%2778 init: %cst_262) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2789 = stablehlo.reshape %2788 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_263 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2790 = stablehlo.reduce(%2789 init: %cst_263) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2791 = stablehlo.dot_general %2778, %938, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2792 = stablehlo.transpose %2791, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2793 = stablehlo.dot_general %2778, %944, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2794 = stablehlo.add %2786, %2793 : tensor<64x512x768xf32>
    %2795 = stablehlo.transpose %2792, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_264 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2796 = stablehlo.reduce(%2779 init: %cst_264) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2797 = stablehlo.reshape %2796 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_265 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2798 = stablehlo.reduce(%2797 init: %cst_265) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2799 = stablehlo.dot_general %2779, %938, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2800 = stablehlo.transpose %2799, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2801 = stablehlo.dot_general %2779, %939, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2802 = stablehlo.add %2794, %2801 : tensor<64x512x768xf32>
    %2803 = stablehlo.transpose %2800, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_266 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2804 = stablehlo.reduce(%2802 init: %cst_266) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2805 = stablehlo.reshape %2804 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_267 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2806 = stablehlo.reduce(%2805 init: %cst_267) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2807 = stablehlo.broadcast_in_dim %933, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2808 = stablehlo.multiply %2807, %2802 : tensor<64x512x768xf32>
    %2809 = stablehlo.multiply %2802, %932 : tensor<64x512x768xf32>
    %cst_268 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2810 = stablehlo.reduce(%2809 init: %cst_268) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2811 = stablehlo.reshape %2810 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_269 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2812 = stablehlo.reduce(%2811 init: %cst_269) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2813 = stablehlo.multiply %930, %2808 : tensor<64x512x768xf32>
    %cst_270 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2814 = stablehlo.reduce(%2813 init: %cst_270) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2815 = stablehlo.reshape %2814 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2816 = stablehlo.broadcast_in_dim %925, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2817 = stablehlo.multiply %2808, %2816 : tensor<64x512x768xf32>
    %2818 = stablehlo.negate %2817 : tensor<64x512x768xf32>
    %cst_271 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2819 = stablehlo.reduce(%2818 init: %cst_271) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2820 = stablehlo.reshape %2819 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2821 = stablehlo.multiply %2815, %928 : tensor<64x512x1xf32>
    %2822 = stablehlo.multiply %2821, %922 : tensor<64x512x1xf32>
    %2823 = call @_var_122(%910#1, %910#2, %910#3, %2822) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2824 = stablehlo.add %2817, %2823 : tensor<64x512x768xf32>
    %2825 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2826 = stablehlo.divide %2820, %2825 : tensor<64x512x1xf32>
    %cst_272 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2827 = stablehlo.reduce(%2826 init: %cst_272) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2828 = stablehlo.broadcast_in_dim %2827, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2829 = stablehlo.add %2824, %2828 : tensor<64x512x768xf32>
    %cst_273 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2830 = stablehlo.reduce(%2829 init: %cst_273) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2831 = stablehlo.reshape %2830 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_274 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2832 = stablehlo.reduce(%2831 init: %cst_274) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2833 = stablehlo.dot_general %2829, %899, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2834 = stablehlo.transpose %2833, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2835 = stablehlo.dot_general %2829, %900, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2836 = stablehlo.transpose %2834, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2837 = stablehlo.multiply %880, %2835 : tensor<64x512x3072xf32>
    %2838 = stablehlo.multiply %2835, %898 : tensor<64x512x3072xf32>
    %2839 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2840 = stablehlo.multiply %2839, %2837 : tensor<64x512x3072xf32>
    %2841 = stablehlo.multiply %2840, %894 : tensor<64x512x3072xf32>
    %2842 = stablehlo.multiply %2841, %891 : tensor<64x512x3072xf32>
    %2843 = stablehlo.add %2841, %2842 : tensor<64x512x3072xf32>
    %2844 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2845 = stablehlo.multiply %2844, %2843 : tensor<64x512x3072xf32>
    %2846 = stablehlo.add %2838, %2845 : tensor<64x512x3072xf32>
    %2847 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2848 = stablehlo.multiply %2847, %2845 : tensor<64x512x3072xf32>
    %2849 = stablehlo.multiply %2848, %885 : tensor<64x512x3072xf32>
    %2850 = stablehlo.add %2846, %2849 : tensor<64x512x3072xf32>
    %cst_275 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2851 = stablehlo.reduce(%2850 init: %cst_275) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2852 = stablehlo.reshape %2851 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_276 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2853 = stablehlo.reduce(%2852 init: %cst_276) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2854 = stablehlo.dot_general %2850, %875, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2855 = stablehlo.transpose %2854, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2856 = stablehlo.dot_general %2850, %876, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2857 = stablehlo.add %2829, %2856 : tensor<64x512x768xf32>
    %2858 = stablehlo.transpose %2855, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_277 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2859 = stablehlo.reduce(%2857 init: %cst_277) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2860 = stablehlo.reshape %2859 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_278 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2861 = stablehlo.reduce(%2860 init: %cst_278) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2862 = stablehlo.broadcast_in_dim %870, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2863 = stablehlo.multiply %2862, %2857 : tensor<64x512x768xf32>
    %2864 = stablehlo.multiply %2857, %869 : tensor<64x512x768xf32>
    %cst_279 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2865 = stablehlo.reduce(%2864 init: %cst_279) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2866 = stablehlo.reshape %2865 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_280 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2867 = stablehlo.reduce(%2866 init: %cst_280) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2868 = stablehlo.multiply %867, %2863 : tensor<64x512x768xf32>
    %cst_281 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2869 = stablehlo.reduce(%2868 init: %cst_281) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2870 = stablehlo.reshape %2869 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2871 = stablehlo.broadcast_in_dim %862, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2872 = stablehlo.multiply %2863, %2871 : tensor<64x512x768xf32>
    %2873 = stablehlo.negate %2872 : tensor<64x512x768xf32>
    %cst_282 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2874 = stablehlo.reduce(%2873 init: %cst_282) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2875 = stablehlo.reshape %2874 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2876 = stablehlo.multiply %2870, %865 : tensor<64x512x1xf32>
    %2877 = stablehlo.multiply %2876, %859 : tensor<64x512x1xf32>
    %2878 = call @_var_122(%847#1, %847#2, %847#3, %2877) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2879 = stablehlo.add %2872, %2878 : tensor<64x512x768xf32>
    %2880 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2881 = stablehlo.divide %2875, %2880 : tensor<64x512x1xf32>
    %cst_283 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2882 = stablehlo.reduce(%2881 init: %cst_283) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2883 = stablehlo.broadcast_in_dim %2882, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2884 = stablehlo.add %2879, %2883 : tensor<64x512x768xf32>
    %cst_284 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2885 = stablehlo.reduce(%2884 init: %cst_284) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2886 = stablehlo.reshape %2885 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_285 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2887 = stablehlo.reduce(%2886 init: %cst_285) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2888 = stablehlo.dot_general %2884, %836, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2889 = stablehlo.transpose %2888, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2890 = stablehlo.dot_general %2884, %837, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2891 = stablehlo.transpose %2889, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2892 = stablehlo.reshape %2890 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %2893 = stablehlo.transpose %2892, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %2894 = stablehlo.dot_general %2893, %811, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %2895 = stablehlo.transpose %2894, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %2896 = stablehlo.dot_general %2893, %830, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %2897 = stablehlo.transpose %2896, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %2898 = stablehlo.broadcast_in_dim %833, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2899 = stablehlo.multiply %2895, %2898 : tensor<64x512x12x512xf32>
    %2900 = stablehlo.multiply %2899, %826 : tensor<64x512x12x512xf32>
    %cst_286 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2901 = stablehlo.reduce(%2900 init: %cst_286) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2902 = stablehlo.reshape %2901 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %2903 = stablehlo.negate %2902 : tensor<64x512x12x1xf32>
    %2904 = stablehlo.broadcast_in_dim %828, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %2905 = stablehlo.divide %2895, %2904 : tensor<64x512x12x512xf32>
    %cst_287 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2906 = stablehlo.reduce(%2903 init: %cst_287) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %2907 = stablehlo.broadcast_in_dim %2906, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %2908 = stablehlo.add %2905, %2907 : tensor<64x512x12x512xf32>
    %2909 = stablehlo.multiply %2908, %826 : tensor<64x512x12x512xf32>
    %2910 = call @_where_149(%819#1, %2909) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %2911 = stablehlo.transpose %2910, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %2912 = stablehlo.dot_general %2911, %810, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2913 = stablehlo.transpose %2912, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2914 = stablehlo.dot_general %2911, %816, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %2915 = stablehlo.transpose %2914, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %2916 = stablehlo.broadcast_in_dim %814, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %2917 = stablehlo.divide %2913, %2916 : tensor<64x512x12x64xf32>
    %2918 = stablehlo.reshape %2897 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2919 = stablehlo.reshape %2915 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %2920 = stablehlo.reshape %2917 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_288 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2921 = stablehlo.reduce(%2918 init: %cst_288) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2922 = stablehlo.reshape %2921 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_289 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2923 = stablehlo.reduce(%2922 init: %cst_289) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2924 = stablehlo.dot_general %2918, %793, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2925 = stablehlo.transpose %2924, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2926 = stablehlo.dot_general %2918, %804, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2927 = stablehlo.add %2884, %2926 : tensor<64x512x768xf32>
    %2928 = stablehlo.transpose %2925, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_290 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2929 = stablehlo.reduce(%2919 init: %cst_290) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2930 = stablehlo.reshape %2929 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_291 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2931 = stablehlo.reduce(%2930 init: %cst_291) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2932 = stablehlo.dot_general %2919, %793, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2933 = stablehlo.transpose %2932, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2934 = stablehlo.dot_general %2919, %799, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2935 = stablehlo.add %2927, %2934 : tensor<64x512x768xf32>
    %2936 = stablehlo.transpose %2933, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_292 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2937 = stablehlo.reduce(%2920 init: %cst_292) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2938 = stablehlo.reshape %2937 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_293 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2939 = stablehlo.reduce(%2938 init: %cst_293) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2940 = stablehlo.dot_general %2920, %793, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %2941 = stablehlo.transpose %2940, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %2942 = stablehlo.dot_general %2920, %794, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %2943 = stablehlo.add %2935, %2942 : tensor<64x512x768xf32>
    %2944 = stablehlo.transpose %2941, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_294 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2945 = stablehlo.reduce(%2943 init: %cst_294) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2946 = stablehlo.reshape %2945 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_295 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2947 = stablehlo.reduce(%2946 init: %cst_295) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2948 = stablehlo.broadcast_in_dim %788, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %2949 = stablehlo.multiply %2948, %2943 : tensor<64x512x768xf32>
    %2950 = stablehlo.multiply %2943, %787 : tensor<64x512x768xf32>
    %cst_296 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2951 = stablehlo.reduce(%2950 init: %cst_296) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2952 = stablehlo.reshape %2951 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_297 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2953 = stablehlo.reduce(%2952 init: %cst_297) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2954 = stablehlo.multiply %785, %2949 : tensor<64x512x768xf32>
    %cst_298 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2955 = stablehlo.reduce(%2954 init: %cst_298) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2956 = stablehlo.reshape %2955 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2957 = stablehlo.broadcast_in_dim %780, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2958 = stablehlo.multiply %2949, %2957 : tensor<64x512x768xf32>
    %2959 = stablehlo.negate %2958 : tensor<64x512x768xf32>
    %cst_299 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2960 = stablehlo.reduce(%2959 init: %cst_299) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2961 = stablehlo.reshape %2960 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %2962 = stablehlo.multiply %2956, %783 : tensor<64x512x1xf32>
    %2963 = stablehlo.multiply %2962, %777 : tensor<64x512x1xf32>
    %2964 = call @_var_122(%765#1, %765#2, %765#3, %2963) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %2965 = stablehlo.add %2958, %2964 : tensor<64x512x768xf32>
    %2966 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2967 = stablehlo.divide %2961, %2966 : tensor<64x512x1xf32>
    %cst_300 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2968 = stablehlo.reduce(%2967 init: %cst_300) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %2969 = stablehlo.broadcast_in_dim %2968, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %2970 = stablehlo.add %2965, %2969 : tensor<64x512x768xf32>
    %cst_301 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2971 = stablehlo.reduce(%2970 init: %cst_301) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2972 = stablehlo.reshape %2971 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_302 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2973 = stablehlo.reduce(%2972 init: %cst_302) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %2974 = stablehlo.dot_general %2970, %754, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %2975 = stablehlo.transpose %2974, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %2976 = stablehlo.dot_general %2970, %755, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %2977 = stablehlo.transpose %2975, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2978 = stablehlo.multiply %735, %2976 : tensor<64x512x3072xf32>
    %2979 = stablehlo.multiply %2976, %753 : tensor<64x512x3072xf32>
    %2980 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2981 = stablehlo.multiply %2980, %2978 : tensor<64x512x3072xf32>
    %2982 = stablehlo.multiply %2981, %749 : tensor<64x512x3072xf32>
    %2983 = stablehlo.multiply %2982, %746 : tensor<64x512x3072xf32>
    %2984 = stablehlo.add %2982, %2983 : tensor<64x512x3072xf32>
    %2985 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2986 = stablehlo.multiply %2985, %2984 : tensor<64x512x3072xf32>
    %2987 = stablehlo.add %2979, %2986 : tensor<64x512x3072xf32>
    %2988 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %2989 = stablehlo.multiply %2988, %2986 : tensor<64x512x3072xf32>
    %2990 = stablehlo.multiply %2989, %740 : tensor<64x512x3072xf32>
    %2991 = stablehlo.add %2987, %2990 : tensor<64x512x3072xf32>
    %cst_303 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2992 = stablehlo.reduce(%2991 init: %cst_303) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2993 = stablehlo.reshape %2992 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_304 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %2994 = stablehlo.reduce(%2993 init: %cst_304) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %2995 = stablehlo.dot_general %2991, %730, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %2996 = stablehlo.transpose %2995, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %2997 = stablehlo.dot_general %2991, %731, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %2998 = stablehlo.add %2970, %2997 : tensor<64x512x768xf32>
    %2999 = stablehlo.transpose %2996, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_305 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3000 = stablehlo.reduce(%2998 init: %cst_305) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3001 = stablehlo.reshape %3000 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_306 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3002 = stablehlo.reduce(%3001 init: %cst_306) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3003 = stablehlo.broadcast_in_dim %725, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3004 = stablehlo.multiply %3003, %2998 : tensor<64x512x768xf32>
    %3005 = stablehlo.multiply %2998, %724 : tensor<64x512x768xf32>
    %cst_307 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3006 = stablehlo.reduce(%3005 init: %cst_307) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3007 = stablehlo.reshape %3006 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_308 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3008 = stablehlo.reduce(%3007 init: %cst_308) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3009 = stablehlo.multiply %722, %3004 : tensor<64x512x768xf32>
    %cst_309 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3010 = stablehlo.reduce(%3009 init: %cst_309) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3011 = stablehlo.reshape %3010 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3012 = stablehlo.broadcast_in_dim %717, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3013 = stablehlo.multiply %3004, %3012 : tensor<64x512x768xf32>
    %3014 = stablehlo.negate %3013 : tensor<64x512x768xf32>
    %cst_310 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3015 = stablehlo.reduce(%3014 init: %cst_310) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3016 = stablehlo.reshape %3015 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3017 = stablehlo.multiply %3011, %720 : tensor<64x512x1xf32>
    %3018 = stablehlo.multiply %3017, %714 : tensor<64x512x1xf32>
    %3019 = call @_var_122(%702#1, %702#2, %702#3, %3018) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3020 = stablehlo.add %3013, %3019 : tensor<64x512x768xf32>
    %3021 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3022 = stablehlo.divide %3016, %3021 : tensor<64x512x1xf32>
    %cst_311 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3023 = stablehlo.reduce(%3022 init: %cst_311) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3024 = stablehlo.broadcast_in_dim %3023, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3025 = stablehlo.add %3020, %3024 : tensor<64x512x768xf32>
    %cst_312 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3026 = stablehlo.reduce(%3025 init: %cst_312) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3027 = stablehlo.reshape %3026 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_313 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3028 = stablehlo.reduce(%3027 init: %cst_313) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3029 = stablehlo.dot_general %3025, %691, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3030 = stablehlo.transpose %3029, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3031 = stablehlo.dot_general %3025, %692, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3032 = stablehlo.transpose %3030, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3033 = stablehlo.reshape %3031 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3034 = stablehlo.transpose %3033, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3035 = stablehlo.dot_general %3034, %666, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3036 = stablehlo.transpose %3035, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3037 = stablehlo.dot_general %3034, %685, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3038 = stablehlo.transpose %3037, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3039 = stablehlo.broadcast_in_dim %688, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3040 = stablehlo.multiply %3036, %3039 : tensor<64x512x12x512xf32>
    %3041 = stablehlo.multiply %3040, %681 : tensor<64x512x12x512xf32>
    %cst_314 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3042 = stablehlo.reduce(%3041 init: %cst_314) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3043 = stablehlo.reshape %3042 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3044 = stablehlo.negate %3043 : tensor<64x512x12x1xf32>
    %3045 = stablehlo.broadcast_in_dim %683, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3046 = stablehlo.divide %3036, %3045 : tensor<64x512x12x512xf32>
    %cst_315 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3047 = stablehlo.reduce(%3044 init: %cst_315) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3048 = stablehlo.broadcast_in_dim %3047, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3049 = stablehlo.add %3046, %3048 : tensor<64x512x12x512xf32>
    %3050 = stablehlo.multiply %3049, %681 : tensor<64x512x12x512xf32>
    %3051 = call @_where_149(%674#1, %3050) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3052 = stablehlo.transpose %3051, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3053 = stablehlo.dot_general %3052, %665, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3054 = stablehlo.transpose %3053, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3055 = stablehlo.dot_general %3052, %671, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3056 = stablehlo.transpose %3055, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3057 = stablehlo.broadcast_in_dim %669, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3058 = stablehlo.divide %3054, %3057 : tensor<64x512x12x64xf32>
    %3059 = stablehlo.reshape %3038 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3060 = stablehlo.reshape %3056 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3061 = stablehlo.reshape %3058 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_316 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3062 = stablehlo.reduce(%3059 init: %cst_316) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3063 = stablehlo.reshape %3062 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_317 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3064 = stablehlo.reduce(%3063 init: %cst_317) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3065 = stablehlo.dot_general %3059, %648, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3066 = stablehlo.transpose %3065, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3067 = stablehlo.dot_general %3059, %659, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3068 = stablehlo.add %3025, %3067 : tensor<64x512x768xf32>
    %3069 = stablehlo.transpose %3066, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_318 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3070 = stablehlo.reduce(%3060 init: %cst_318) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3071 = stablehlo.reshape %3070 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_319 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3072 = stablehlo.reduce(%3071 init: %cst_319) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3073 = stablehlo.dot_general %3060, %648, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3074 = stablehlo.transpose %3073, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3075 = stablehlo.dot_general %3060, %654, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3076 = stablehlo.add %3068, %3075 : tensor<64x512x768xf32>
    %3077 = stablehlo.transpose %3074, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_320 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3078 = stablehlo.reduce(%3061 init: %cst_320) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3079 = stablehlo.reshape %3078 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_321 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3080 = stablehlo.reduce(%3079 init: %cst_321) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3081 = stablehlo.dot_general %3061, %648, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3082 = stablehlo.transpose %3081, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3083 = stablehlo.dot_general %3061, %649, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3084 = stablehlo.add %3076, %3083 : tensor<64x512x768xf32>
    %3085 = stablehlo.transpose %3082, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_322 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3086 = stablehlo.reduce(%3084 init: %cst_322) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3087 = stablehlo.reshape %3086 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_323 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3088 = stablehlo.reduce(%3087 init: %cst_323) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3089 = stablehlo.broadcast_in_dim %643, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3090 = stablehlo.multiply %3089, %3084 : tensor<64x512x768xf32>
    %3091 = stablehlo.multiply %3084, %642 : tensor<64x512x768xf32>
    %cst_324 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3092 = stablehlo.reduce(%3091 init: %cst_324) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3093 = stablehlo.reshape %3092 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_325 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3094 = stablehlo.reduce(%3093 init: %cst_325) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3095 = stablehlo.multiply %640, %3090 : tensor<64x512x768xf32>
    %cst_326 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3096 = stablehlo.reduce(%3095 init: %cst_326) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3097 = stablehlo.reshape %3096 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3098 = stablehlo.broadcast_in_dim %635, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3099 = stablehlo.multiply %3090, %3098 : tensor<64x512x768xf32>
    %3100 = stablehlo.negate %3099 : tensor<64x512x768xf32>
    %cst_327 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3101 = stablehlo.reduce(%3100 init: %cst_327) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3102 = stablehlo.reshape %3101 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3103 = stablehlo.multiply %3097, %638 : tensor<64x512x1xf32>
    %3104 = stablehlo.multiply %3103, %632 : tensor<64x512x1xf32>
    %3105 = call @_var_122(%620#1, %620#2, %620#3, %3104) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3106 = stablehlo.add %3099, %3105 : tensor<64x512x768xf32>
    %3107 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3108 = stablehlo.divide %3102, %3107 : tensor<64x512x1xf32>
    %cst_328 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3109 = stablehlo.reduce(%3108 init: %cst_328) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3110 = stablehlo.broadcast_in_dim %3109, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3111 = stablehlo.add %3106, %3110 : tensor<64x512x768xf32>
    %cst_329 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3112 = stablehlo.reduce(%3111 init: %cst_329) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3113 = stablehlo.reshape %3112 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_330 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3114 = stablehlo.reduce(%3113 init: %cst_330) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3115 = stablehlo.dot_general %3111, %609, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3116 = stablehlo.transpose %3115, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3117 = stablehlo.dot_general %3111, %610, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3118 = stablehlo.transpose %3116, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3119 = stablehlo.multiply %590, %3117 : tensor<64x512x3072xf32>
    %3120 = stablehlo.multiply %3117, %608 : tensor<64x512x3072xf32>
    %3121 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3122 = stablehlo.multiply %3121, %3119 : tensor<64x512x3072xf32>
    %3123 = stablehlo.multiply %3122, %604 : tensor<64x512x3072xf32>
    %3124 = stablehlo.multiply %3123, %601 : tensor<64x512x3072xf32>
    %3125 = stablehlo.add %3123, %3124 : tensor<64x512x3072xf32>
    %3126 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3127 = stablehlo.multiply %3126, %3125 : tensor<64x512x3072xf32>
    %3128 = stablehlo.add %3120, %3127 : tensor<64x512x3072xf32>
    %3129 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3130 = stablehlo.multiply %3129, %3127 : tensor<64x512x3072xf32>
    %3131 = stablehlo.multiply %3130, %595 : tensor<64x512x3072xf32>
    %3132 = stablehlo.add %3128, %3131 : tensor<64x512x3072xf32>
    %cst_331 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3133 = stablehlo.reduce(%3132 init: %cst_331) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3134 = stablehlo.reshape %3133 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_332 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3135 = stablehlo.reduce(%3134 init: %cst_332) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3136 = stablehlo.dot_general %3132, %585, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3137 = stablehlo.transpose %3136, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3138 = stablehlo.dot_general %3132, %586, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3139 = stablehlo.add %3111, %3138 : tensor<64x512x768xf32>
    %3140 = stablehlo.transpose %3137, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_333 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3141 = stablehlo.reduce(%3139 init: %cst_333) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3142 = stablehlo.reshape %3141 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_334 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3143 = stablehlo.reduce(%3142 init: %cst_334) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3144 = stablehlo.broadcast_in_dim %580, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3145 = stablehlo.multiply %3144, %3139 : tensor<64x512x768xf32>
    %3146 = stablehlo.multiply %3139, %579 : tensor<64x512x768xf32>
    %cst_335 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3147 = stablehlo.reduce(%3146 init: %cst_335) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3148 = stablehlo.reshape %3147 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_336 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3149 = stablehlo.reduce(%3148 init: %cst_336) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3150 = stablehlo.multiply %577, %3145 : tensor<64x512x768xf32>
    %cst_337 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3151 = stablehlo.reduce(%3150 init: %cst_337) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3152 = stablehlo.reshape %3151 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3153 = stablehlo.broadcast_in_dim %572, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3154 = stablehlo.multiply %3145, %3153 : tensor<64x512x768xf32>
    %3155 = stablehlo.negate %3154 : tensor<64x512x768xf32>
    %cst_338 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3156 = stablehlo.reduce(%3155 init: %cst_338) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3157 = stablehlo.reshape %3156 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3158 = stablehlo.multiply %3152, %575 : tensor<64x512x1xf32>
    %3159 = stablehlo.multiply %3158, %569 : tensor<64x512x1xf32>
    %3160 = call @_var_122(%557#1, %557#2, %557#3, %3159) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3161 = stablehlo.add %3154, %3160 : tensor<64x512x768xf32>
    %3162 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3163 = stablehlo.divide %3157, %3162 : tensor<64x512x1xf32>
    %cst_339 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3164 = stablehlo.reduce(%3163 init: %cst_339) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3165 = stablehlo.broadcast_in_dim %3164, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3166 = stablehlo.add %3161, %3165 : tensor<64x512x768xf32>
    %cst_340 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3167 = stablehlo.reduce(%3166 init: %cst_340) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3168 = stablehlo.reshape %3167 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_341 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3169 = stablehlo.reduce(%3168 init: %cst_341) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3170 = stablehlo.dot_general %3166, %546, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3171 = stablehlo.transpose %3170, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3172 = stablehlo.dot_general %3166, %547, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3173 = stablehlo.transpose %3171, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3174 = stablehlo.reshape %3172 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3175 = stablehlo.transpose %3174, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3176 = stablehlo.dot_general %3175, %521, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3177 = stablehlo.transpose %3176, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3178 = stablehlo.dot_general %3175, %540, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3179 = stablehlo.transpose %3178, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3180 = stablehlo.broadcast_in_dim %543, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3181 = stablehlo.multiply %3177, %3180 : tensor<64x512x12x512xf32>
    %3182 = stablehlo.multiply %3181, %536 : tensor<64x512x12x512xf32>
    %cst_342 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3183 = stablehlo.reduce(%3182 init: %cst_342) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3184 = stablehlo.reshape %3183 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3185 = stablehlo.negate %3184 : tensor<64x512x12x1xf32>
    %3186 = stablehlo.broadcast_in_dim %538, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3187 = stablehlo.divide %3177, %3186 : tensor<64x512x12x512xf32>
    %cst_343 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3188 = stablehlo.reduce(%3185 init: %cst_343) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3189 = stablehlo.broadcast_in_dim %3188, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3190 = stablehlo.add %3187, %3189 : tensor<64x512x12x512xf32>
    %3191 = stablehlo.multiply %3190, %536 : tensor<64x512x12x512xf32>
    %3192 = call @_where_149(%529#1, %3191) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3193 = stablehlo.transpose %3192, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3194 = stablehlo.dot_general %3193, %520, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3195 = stablehlo.transpose %3194, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3196 = stablehlo.dot_general %3193, %526, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3197 = stablehlo.transpose %3196, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3198 = stablehlo.broadcast_in_dim %524, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3199 = stablehlo.divide %3195, %3198 : tensor<64x512x12x64xf32>
    %3200 = stablehlo.reshape %3179 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3201 = stablehlo.reshape %3197 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3202 = stablehlo.reshape %3199 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_344 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3203 = stablehlo.reduce(%3200 init: %cst_344) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3204 = stablehlo.reshape %3203 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_345 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3205 = stablehlo.reduce(%3204 init: %cst_345) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3206 = stablehlo.dot_general %3200, %503, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3207 = stablehlo.transpose %3206, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3208 = stablehlo.dot_general %3200, %514, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3209 = stablehlo.add %3166, %3208 : tensor<64x512x768xf32>
    %3210 = stablehlo.transpose %3207, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_346 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3211 = stablehlo.reduce(%3201 init: %cst_346) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3212 = stablehlo.reshape %3211 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_347 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3213 = stablehlo.reduce(%3212 init: %cst_347) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3214 = stablehlo.dot_general %3201, %503, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3215 = stablehlo.transpose %3214, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3216 = stablehlo.dot_general %3201, %509, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3217 = stablehlo.add %3209, %3216 : tensor<64x512x768xf32>
    %3218 = stablehlo.transpose %3215, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_348 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3219 = stablehlo.reduce(%3202 init: %cst_348) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3220 = stablehlo.reshape %3219 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_349 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3221 = stablehlo.reduce(%3220 init: %cst_349) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3222 = stablehlo.dot_general %3202, %503, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3223 = stablehlo.transpose %3222, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3224 = stablehlo.dot_general %3202, %504, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3225 = stablehlo.add %3217, %3224 : tensor<64x512x768xf32>
    %3226 = stablehlo.transpose %3223, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_350 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3227 = stablehlo.reduce(%3225 init: %cst_350) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3228 = stablehlo.reshape %3227 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_351 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3229 = stablehlo.reduce(%3228 init: %cst_351) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3230 = stablehlo.broadcast_in_dim %498, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3231 = stablehlo.multiply %3230, %3225 : tensor<64x512x768xf32>
    %3232 = stablehlo.multiply %3225, %497 : tensor<64x512x768xf32>
    %cst_352 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3233 = stablehlo.reduce(%3232 init: %cst_352) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3234 = stablehlo.reshape %3233 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_353 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3235 = stablehlo.reduce(%3234 init: %cst_353) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3236 = stablehlo.multiply %495, %3231 : tensor<64x512x768xf32>
    %cst_354 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3237 = stablehlo.reduce(%3236 init: %cst_354) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3238 = stablehlo.reshape %3237 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3239 = stablehlo.broadcast_in_dim %490, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3240 = stablehlo.multiply %3231, %3239 : tensor<64x512x768xf32>
    %3241 = stablehlo.negate %3240 : tensor<64x512x768xf32>
    %cst_355 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3242 = stablehlo.reduce(%3241 init: %cst_355) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3243 = stablehlo.reshape %3242 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3244 = stablehlo.multiply %3238, %493 : tensor<64x512x1xf32>
    %3245 = stablehlo.multiply %3244, %487 : tensor<64x512x1xf32>
    %3246 = call @_var_122(%475#1, %475#2, %475#3, %3245) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3247 = stablehlo.add %3240, %3246 : tensor<64x512x768xf32>
    %3248 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3249 = stablehlo.divide %3243, %3248 : tensor<64x512x1xf32>
    %cst_356 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3250 = stablehlo.reduce(%3249 init: %cst_356) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3251 = stablehlo.broadcast_in_dim %3250, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3252 = stablehlo.add %3247, %3251 : tensor<64x512x768xf32>
    %cst_357 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3253 = stablehlo.reduce(%3252 init: %cst_357) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3254 = stablehlo.reshape %3253 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_358 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3255 = stablehlo.reduce(%3254 init: %cst_358) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3256 = stablehlo.dot_general %3252, %464, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3257 = stablehlo.transpose %3256, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3258 = stablehlo.dot_general %3252, %465, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3259 = stablehlo.transpose %3257, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3260 = stablehlo.multiply %445, %3258 : tensor<64x512x3072xf32>
    %3261 = stablehlo.multiply %3258, %463 : tensor<64x512x3072xf32>
    %3262 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3263 = stablehlo.multiply %3262, %3260 : tensor<64x512x3072xf32>
    %3264 = stablehlo.multiply %3263, %459 : tensor<64x512x3072xf32>
    %3265 = stablehlo.multiply %3264, %456 : tensor<64x512x3072xf32>
    %3266 = stablehlo.add %3264, %3265 : tensor<64x512x3072xf32>
    %3267 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3268 = stablehlo.multiply %3267, %3266 : tensor<64x512x3072xf32>
    %3269 = stablehlo.add %3261, %3268 : tensor<64x512x3072xf32>
    %3270 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3271 = stablehlo.multiply %3270, %3268 : tensor<64x512x3072xf32>
    %3272 = stablehlo.multiply %3271, %450 : tensor<64x512x3072xf32>
    %3273 = stablehlo.add %3269, %3272 : tensor<64x512x3072xf32>
    %cst_359 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3274 = stablehlo.reduce(%3273 init: %cst_359) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3275 = stablehlo.reshape %3274 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_360 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3276 = stablehlo.reduce(%3275 init: %cst_360) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3277 = stablehlo.dot_general %3273, %440, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3278 = stablehlo.transpose %3277, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3279 = stablehlo.dot_general %3273, %441, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3280 = stablehlo.add %3252, %3279 : tensor<64x512x768xf32>
    %3281 = stablehlo.transpose %3278, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_361 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3282 = stablehlo.reduce(%3280 init: %cst_361) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3283 = stablehlo.reshape %3282 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_362 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3284 = stablehlo.reduce(%3283 init: %cst_362) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3285 = stablehlo.broadcast_in_dim %435, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3286 = stablehlo.multiply %3285, %3280 : tensor<64x512x768xf32>
    %3287 = stablehlo.multiply %3280, %434 : tensor<64x512x768xf32>
    %cst_363 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3288 = stablehlo.reduce(%3287 init: %cst_363) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3289 = stablehlo.reshape %3288 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_364 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3290 = stablehlo.reduce(%3289 init: %cst_364) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3291 = stablehlo.multiply %432, %3286 : tensor<64x512x768xf32>
    %cst_365 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3292 = stablehlo.reduce(%3291 init: %cst_365) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3293 = stablehlo.reshape %3292 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3294 = stablehlo.broadcast_in_dim %427, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3295 = stablehlo.multiply %3286, %3294 : tensor<64x512x768xf32>
    %3296 = stablehlo.negate %3295 : tensor<64x512x768xf32>
    %cst_366 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3297 = stablehlo.reduce(%3296 init: %cst_366) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3298 = stablehlo.reshape %3297 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3299 = stablehlo.multiply %3293, %430 : tensor<64x512x1xf32>
    %3300 = stablehlo.multiply %3299, %424 : tensor<64x512x1xf32>
    %3301 = call @_var_122(%412#1, %412#2, %412#3, %3300) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3302 = stablehlo.add %3295, %3301 : tensor<64x512x768xf32>
    %3303 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3304 = stablehlo.divide %3298, %3303 : tensor<64x512x1xf32>
    %cst_367 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3305 = stablehlo.reduce(%3304 init: %cst_367) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3306 = stablehlo.broadcast_in_dim %3305, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3307 = stablehlo.add %3302, %3306 : tensor<64x512x768xf32>
    %cst_368 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3308 = stablehlo.reduce(%3307 init: %cst_368) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3309 = stablehlo.reshape %3308 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_369 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3310 = stablehlo.reduce(%3309 init: %cst_369) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3311 = stablehlo.dot_general %3307, %401, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3312 = stablehlo.transpose %3311, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3313 = stablehlo.dot_general %3307, %402, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3314 = stablehlo.transpose %3312, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3315 = stablehlo.reshape %3313 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3316 = stablehlo.transpose %3315, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3317 = stablehlo.dot_general %3316, %376, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3318 = stablehlo.transpose %3317, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3319 = stablehlo.dot_general %3316, %395, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3320 = stablehlo.transpose %3319, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3321 = stablehlo.broadcast_in_dim %398, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3322 = stablehlo.multiply %3318, %3321 : tensor<64x512x12x512xf32>
    %3323 = stablehlo.multiply %3322, %391 : tensor<64x512x12x512xf32>
    %cst_370 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3324 = stablehlo.reduce(%3323 init: %cst_370) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3325 = stablehlo.reshape %3324 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3326 = stablehlo.negate %3325 : tensor<64x512x12x1xf32>
    %3327 = stablehlo.broadcast_in_dim %393, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3328 = stablehlo.divide %3318, %3327 : tensor<64x512x12x512xf32>
    %cst_371 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3329 = stablehlo.reduce(%3326 init: %cst_371) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3330 = stablehlo.broadcast_in_dim %3329, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3331 = stablehlo.add %3328, %3330 : tensor<64x512x12x512xf32>
    %3332 = stablehlo.multiply %3331, %391 : tensor<64x512x12x512xf32>
    %3333 = call @_where_149(%384#1, %3332) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3334 = stablehlo.transpose %3333, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3335 = stablehlo.dot_general %3334, %375, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3336 = stablehlo.transpose %3335, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3337 = stablehlo.dot_general %3334, %381, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3338 = stablehlo.transpose %3337, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3339 = stablehlo.broadcast_in_dim %379, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3340 = stablehlo.divide %3336, %3339 : tensor<64x512x12x64xf32>
    %3341 = stablehlo.reshape %3320 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3342 = stablehlo.reshape %3338 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3343 = stablehlo.reshape %3340 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_372 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3344 = stablehlo.reduce(%3341 init: %cst_372) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3345 = stablehlo.reshape %3344 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_373 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3346 = stablehlo.reduce(%3345 init: %cst_373) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3347 = stablehlo.dot_general %3341, %358, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3348 = stablehlo.transpose %3347, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3349 = stablehlo.dot_general %3341, %369, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3350 = stablehlo.add %3307, %3349 : tensor<64x512x768xf32>
    %3351 = stablehlo.transpose %3348, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_374 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3352 = stablehlo.reduce(%3342 init: %cst_374) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3353 = stablehlo.reshape %3352 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_375 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3354 = stablehlo.reduce(%3353 init: %cst_375) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3355 = stablehlo.dot_general %3342, %358, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3356 = stablehlo.transpose %3355, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3357 = stablehlo.dot_general %3342, %364, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3358 = stablehlo.add %3350, %3357 : tensor<64x512x768xf32>
    %3359 = stablehlo.transpose %3356, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_376 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3360 = stablehlo.reduce(%3343 init: %cst_376) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3361 = stablehlo.reshape %3360 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_377 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3362 = stablehlo.reduce(%3361 init: %cst_377) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3363 = stablehlo.dot_general %3343, %358, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3364 = stablehlo.transpose %3363, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3365 = stablehlo.dot_general %3343, %359, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3366 = stablehlo.add %3358, %3365 : tensor<64x512x768xf32>
    %3367 = stablehlo.transpose %3364, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_378 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3368 = stablehlo.reduce(%3366 init: %cst_378) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3369 = stablehlo.reshape %3368 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_379 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3370 = stablehlo.reduce(%3369 init: %cst_379) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3371 = stablehlo.broadcast_in_dim %353, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3372 = stablehlo.multiply %3371, %3366 : tensor<64x512x768xf32>
    %3373 = stablehlo.multiply %3366, %352 : tensor<64x512x768xf32>
    %cst_380 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3374 = stablehlo.reduce(%3373 init: %cst_380) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3375 = stablehlo.reshape %3374 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_381 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3376 = stablehlo.reduce(%3375 init: %cst_381) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3377 = stablehlo.multiply %350, %3372 : tensor<64x512x768xf32>
    %cst_382 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3378 = stablehlo.reduce(%3377 init: %cst_382) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3379 = stablehlo.reshape %3378 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3380 = stablehlo.broadcast_in_dim %345, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3381 = stablehlo.multiply %3372, %3380 : tensor<64x512x768xf32>
    %3382 = stablehlo.negate %3381 : tensor<64x512x768xf32>
    %cst_383 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3383 = stablehlo.reduce(%3382 init: %cst_383) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3384 = stablehlo.reshape %3383 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3385 = stablehlo.multiply %3379, %348 : tensor<64x512x1xf32>
    %3386 = stablehlo.multiply %3385, %342 : tensor<64x512x1xf32>
    %3387 = call @_var_122(%330#1, %330#2, %330#3, %3386) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3388 = stablehlo.add %3381, %3387 : tensor<64x512x768xf32>
    %3389 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3390 = stablehlo.divide %3384, %3389 : tensor<64x512x1xf32>
    %cst_384 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3391 = stablehlo.reduce(%3390 init: %cst_384) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3392 = stablehlo.broadcast_in_dim %3391, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3393 = stablehlo.add %3388, %3392 : tensor<64x512x768xf32>
    %cst_385 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3394 = stablehlo.reduce(%3393 init: %cst_385) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3395 = stablehlo.reshape %3394 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_386 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3396 = stablehlo.reduce(%3395 init: %cst_386) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3397 = stablehlo.dot_general %3393, %319, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3398 = stablehlo.transpose %3397, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3399 = stablehlo.dot_general %3393, %320, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3400 = stablehlo.transpose %3398, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3401 = stablehlo.multiply %300, %3399 : tensor<64x512x3072xf32>
    %3402 = stablehlo.multiply %3399, %318 : tensor<64x512x3072xf32>
    %3403 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3404 = stablehlo.multiply %3403, %3401 : tensor<64x512x3072xf32>
    %3405 = stablehlo.multiply %3404, %314 : tensor<64x512x3072xf32>
    %3406 = stablehlo.multiply %3405, %311 : tensor<64x512x3072xf32>
    %3407 = stablehlo.add %3405, %3406 : tensor<64x512x3072xf32>
    %3408 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3409 = stablehlo.multiply %3408, %3407 : tensor<64x512x3072xf32>
    %3410 = stablehlo.add %3402, %3409 : tensor<64x512x3072xf32>
    %3411 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3412 = stablehlo.multiply %3411, %3409 : tensor<64x512x3072xf32>
    %3413 = stablehlo.multiply %3412, %305 : tensor<64x512x3072xf32>
    %3414 = stablehlo.add %3410, %3413 : tensor<64x512x3072xf32>
    %cst_387 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3415 = stablehlo.reduce(%3414 init: %cst_387) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3416 = stablehlo.reshape %3415 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_388 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3417 = stablehlo.reduce(%3416 init: %cst_388) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3418 = stablehlo.dot_general %3414, %295, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3419 = stablehlo.transpose %3418, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3420 = stablehlo.dot_general %3414, %296, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3421 = stablehlo.add %3393, %3420 : tensor<64x512x768xf32>
    %3422 = stablehlo.transpose %3419, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_389 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3423 = stablehlo.reduce(%3421 init: %cst_389) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3424 = stablehlo.reshape %3423 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_390 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3425 = stablehlo.reduce(%3424 init: %cst_390) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3426 = stablehlo.broadcast_in_dim %290, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3427 = stablehlo.multiply %3426, %3421 : tensor<64x512x768xf32>
    %3428 = stablehlo.multiply %3421, %289 : tensor<64x512x768xf32>
    %cst_391 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3429 = stablehlo.reduce(%3428 init: %cst_391) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3430 = stablehlo.reshape %3429 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_392 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3431 = stablehlo.reduce(%3430 init: %cst_392) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3432 = stablehlo.multiply %287, %3427 : tensor<64x512x768xf32>
    %cst_393 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3433 = stablehlo.reduce(%3432 init: %cst_393) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3434 = stablehlo.reshape %3433 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3435 = stablehlo.broadcast_in_dim %282, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3436 = stablehlo.multiply %3427, %3435 : tensor<64x512x768xf32>
    %3437 = stablehlo.negate %3436 : tensor<64x512x768xf32>
    %cst_394 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3438 = stablehlo.reduce(%3437 init: %cst_394) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3439 = stablehlo.reshape %3438 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3440 = stablehlo.multiply %3434, %285 : tensor<64x512x1xf32>
    %3441 = stablehlo.multiply %3440, %279 : tensor<64x512x1xf32>
    %3442 = call @_var_122(%267#1, %267#2, %267#3, %3441) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3443 = stablehlo.add %3436, %3442 : tensor<64x512x768xf32>
    %3444 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3445 = stablehlo.divide %3439, %3444 : tensor<64x512x1xf32>
    %cst_395 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3446 = stablehlo.reduce(%3445 init: %cst_395) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3447 = stablehlo.broadcast_in_dim %3446, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3448 = stablehlo.add %3443, %3447 : tensor<64x512x768xf32>
    %cst_396 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3449 = stablehlo.reduce(%3448 init: %cst_396) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3450 = stablehlo.reshape %3449 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_397 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3451 = stablehlo.reduce(%3450 init: %cst_397) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3452 = stablehlo.dot_general %3448, %256, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3453 = stablehlo.transpose %3452, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3454 = stablehlo.dot_general %3448, %257, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3455 = stablehlo.transpose %3453, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3456 = stablehlo.reshape %3454 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3457 = stablehlo.transpose %3456, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3458 = stablehlo.dot_general %3457, %231, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3459 = stablehlo.transpose %3458, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3460 = stablehlo.dot_general %3457, %250, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3461 = stablehlo.transpose %3460, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3462 = stablehlo.broadcast_in_dim %253, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3463 = stablehlo.multiply %3459, %3462 : tensor<64x512x12x512xf32>
    %3464 = stablehlo.multiply %3463, %246 : tensor<64x512x12x512xf32>
    %cst_398 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3465 = stablehlo.reduce(%3464 init: %cst_398) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3466 = stablehlo.reshape %3465 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3467 = stablehlo.negate %3466 : tensor<64x512x12x1xf32>
    %3468 = stablehlo.broadcast_in_dim %248, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3469 = stablehlo.divide %3459, %3468 : tensor<64x512x12x512xf32>
    %cst_399 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3470 = stablehlo.reduce(%3467 init: %cst_399) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3471 = stablehlo.broadcast_in_dim %3470, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3472 = stablehlo.add %3469, %3471 : tensor<64x512x12x512xf32>
    %3473 = stablehlo.multiply %3472, %246 : tensor<64x512x12x512xf32>
    %3474 = call @_where_149(%239#1, %3473) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3475 = stablehlo.transpose %3474, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3476 = stablehlo.dot_general %3475, %230, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3477 = stablehlo.transpose %3476, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3478 = stablehlo.dot_general %3475, %236, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3479 = stablehlo.transpose %3478, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3480 = stablehlo.broadcast_in_dim %234, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3481 = stablehlo.divide %3477, %3480 : tensor<64x512x12x64xf32>
    %3482 = stablehlo.reshape %3461 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3483 = stablehlo.reshape %3479 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3484 = stablehlo.reshape %3481 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_400 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3485 = stablehlo.reduce(%3482 init: %cst_400) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3486 = stablehlo.reshape %3485 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_401 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3487 = stablehlo.reduce(%3486 init: %cst_401) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3488 = stablehlo.dot_general %3482, %213, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3489 = stablehlo.transpose %3488, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3490 = stablehlo.dot_general %3482, %224, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3491 = stablehlo.add %3448, %3490 : tensor<64x512x768xf32>
    %3492 = stablehlo.transpose %3489, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_402 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3493 = stablehlo.reduce(%3483 init: %cst_402) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3494 = stablehlo.reshape %3493 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_403 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3495 = stablehlo.reduce(%3494 init: %cst_403) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3496 = stablehlo.dot_general %3483, %213, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3497 = stablehlo.transpose %3496, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3498 = stablehlo.dot_general %3483, %219, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3499 = stablehlo.add %3491, %3498 : tensor<64x512x768xf32>
    %3500 = stablehlo.transpose %3497, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_404 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3501 = stablehlo.reduce(%3484 init: %cst_404) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3502 = stablehlo.reshape %3501 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_405 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3503 = stablehlo.reduce(%3502 init: %cst_405) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3504 = stablehlo.dot_general %3484, %213, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3505 = stablehlo.transpose %3504, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3506 = stablehlo.dot_general %3484, %214, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3507 = stablehlo.add %3499, %3506 : tensor<64x512x768xf32>
    %3508 = stablehlo.transpose %3505, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_406 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3509 = stablehlo.reduce(%3507 init: %cst_406) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3510 = stablehlo.reshape %3509 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_407 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3511 = stablehlo.reduce(%3510 init: %cst_407) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3512 = stablehlo.broadcast_in_dim %208, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3513 = stablehlo.multiply %3512, %3507 : tensor<64x512x768xf32>
    %3514 = stablehlo.multiply %3507, %207 : tensor<64x512x768xf32>
    %cst_408 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3515 = stablehlo.reduce(%3514 init: %cst_408) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3516 = stablehlo.reshape %3515 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_409 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3517 = stablehlo.reduce(%3516 init: %cst_409) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3518 = stablehlo.multiply %205, %3513 : tensor<64x512x768xf32>
    %cst_410 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3519 = stablehlo.reduce(%3518 init: %cst_410) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3520 = stablehlo.reshape %3519 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3521 = stablehlo.broadcast_in_dim %200, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3522 = stablehlo.multiply %3513, %3521 : tensor<64x512x768xf32>
    %3523 = stablehlo.negate %3522 : tensor<64x512x768xf32>
    %cst_411 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3524 = stablehlo.reduce(%3523 init: %cst_411) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3525 = stablehlo.reshape %3524 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3526 = stablehlo.multiply %3520, %203 : tensor<64x512x1xf32>
    %3527 = stablehlo.multiply %3526, %197 : tensor<64x512x1xf32>
    %3528 = call @_var_122(%185#1, %185#2, %185#3, %3527) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3529 = stablehlo.add %3522, %3528 : tensor<64x512x768xf32>
    %3530 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3531 = stablehlo.divide %3525, %3530 : tensor<64x512x1xf32>
    %cst_412 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3532 = stablehlo.reduce(%3531 init: %cst_412) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3533 = stablehlo.broadcast_in_dim %3532, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3534 = stablehlo.add %3529, %3533 : tensor<64x512x768xf32>
    %cst_413 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3535 = stablehlo.reduce(%3534 init: %cst_413) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3536 = stablehlo.reshape %3535 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_414 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3537 = stablehlo.reduce(%3536 init: %cst_414) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3538 = stablehlo.dot_general %3534, %174, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x3072xf32>) -> tensor<768x3072xf32>
    %3539 = stablehlo.transpose %3538, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %3540 = stablehlo.dot_general %3534, %175, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<3072x768xf32>) -> tensor<64x512x3072xf32>
    %3541 = stablehlo.transpose %3539, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3542 = stablehlo.multiply %155, %3540 : tensor<64x512x3072xf32>
    %3543 = stablehlo.multiply %3540, %173 : tensor<64x512x3072xf32>
    %3544 = stablehlo.broadcast_in_dim %cst_22, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3545 = stablehlo.multiply %3544, %3542 : tensor<64x512x3072xf32>
    %3546 = stablehlo.multiply %3545, %169 : tensor<64x512x3072xf32>
    %3547 = stablehlo.multiply %3546, %166 : tensor<64x512x3072xf32>
    %3548 = stablehlo.add %3546, %3547 : tensor<64x512x3072xf32>
    %3549 = stablehlo.broadcast_in_dim %cst_21, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3550 = stablehlo.multiply %3549, %3548 : tensor<64x512x3072xf32>
    %3551 = stablehlo.add %3543, %3550 : tensor<64x512x3072xf32>
    %3552 = stablehlo.broadcast_in_dim %cst_20, dims = [] : (tensor<f32>) -> tensor<64x512x3072xf32>
    %3553 = stablehlo.multiply %3552, %3550 : tensor<64x512x3072xf32>
    %3554 = stablehlo.multiply %3553, %160 : tensor<64x512x3072xf32>
    %3555 = stablehlo.add %3551, %3554 : tensor<64x512x3072xf32>
    %cst_415 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3556 = stablehlo.reduce(%3555 init: %cst_415) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3557 = stablehlo.reshape %3556 : (tensor<3072xf32>) -> tensor<1x1x3072xf32>
    %cst_416 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3558 = stablehlo.reduce(%3557 init: %cst_416) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x3072xf32>, tensor<f32>) -> tensor<3072xf32>
    %3559 = stablehlo.dot_general %3555, %150, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<64x512x768xf32>) -> tensor<3072x768xf32>
    %3560 = stablehlo.transpose %3559, dims = [1, 0] : (tensor<3072x768xf32>) -> tensor<768x3072xf32>
    %3561 = stablehlo.dot_general %3555, %151, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x3072xf32>, tensor<768x3072xf32>) -> tensor<64x512x768xf32>
    %3562 = stablehlo.add %3534, %3561 : tensor<64x512x768xf32>
    %3563 = stablehlo.transpose %3560, dims = [1, 0] : (tensor<768x3072xf32>) -> tensor<3072x768xf32>
    %cst_417 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3564 = stablehlo.reduce(%3562 init: %cst_417) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3565 = stablehlo.reshape %3564 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_418 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3566 = stablehlo.reduce(%3565 init: %cst_418) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3567 = stablehlo.broadcast_in_dim %145, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3568 = stablehlo.multiply %3567, %3562 : tensor<64x512x768xf32>
    %3569 = stablehlo.multiply %3562, %144 : tensor<64x512x768xf32>
    %cst_419 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3570 = stablehlo.reduce(%3569 init: %cst_419) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3571 = stablehlo.reshape %3570 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_420 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3572 = stablehlo.reduce(%3571 init: %cst_420) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3573 = stablehlo.multiply %142, %3568 : tensor<64x512x768xf32>
    %cst_421 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3574 = stablehlo.reduce(%3573 init: %cst_421) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3575 = stablehlo.reshape %3574 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3576 = stablehlo.broadcast_in_dim %137, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3577 = stablehlo.multiply %3568, %3576 : tensor<64x512x768xf32>
    %3578 = stablehlo.negate %3577 : tensor<64x512x768xf32>
    %cst_422 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3579 = stablehlo.reduce(%3578 init: %cst_422) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3580 = stablehlo.reshape %3579 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3581 = stablehlo.multiply %3575, %140 : tensor<64x512x1xf32>
    %3582 = stablehlo.multiply %3581, %134 : tensor<64x512x1xf32>
    %3583 = call @_var_122(%122#1, %122#2, %122#3, %3582) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3584 = stablehlo.add %3577, %3583 : tensor<64x512x768xf32>
    %3585 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3586 = stablehlo.divide %3580, %3585 : tensor<64x512x1xf32>
    %cst_423 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3587 = stablehlo.reduce(%3586 init: %cst_423) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3588 = stablehlo.broadcast_in_dim %3587, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3589 = stablehlo.add %3584, %3588 : tensor<64x512x768xf32>
    %cst_424 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3590 = stablehlo.reduce(%3589 init: %cst_424) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3591 = stablehlo.reshape %3590 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_425 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3592 = stablehlo.reduce(%3591 init: %cst_425) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3593 = stablehlo.dot_general %3589, %111, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3594 = stablehlo.transpose %3593, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3595 = stablehlo.dot_general %3589, %112, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3596 = stablehlo.transpose %3594, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3597 = stablehlo.reshape %3595 : (tensor<64x512x768xf32>) -> tensor<64x512x12x64xf32>
    %3598 = stablehlo.transpose %3597, dims = [0, 2, 3, 1] : (tensor<64x512x12x64xf32>) -> tensor<64x12x64x512xf32>
    %3599 = stablehlo.dot_general %3598, %86, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [3], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x512xf32>
    %3600 = stablehlo.transpose %3599, dims = [0, 2, 1, 3] : (tensor<64x12x512x512xf32>) -> tensor<64x512x12x512xf32>
    %3601 = stablehlo.dot_general %3598, %105, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x64x512xf32>, tensor<64x512x12x512xf32>) -> tensor<64x12x64x512xf32>
    %3602 = stablehlo.transpose %3601, dims = [0, 3, 1, 2] : (tensor<64x12x64x512xf32>) -> tensor<64x512x12x64xf32>
    %3603 = stablehlo.broadcast_in_dim %108, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3604 = stablehlo.multiply %3600, %3603 : tensor<64x512x12x512xf32>
    %3605 = stablehlo.multiply %3604, %101 : tensor<64x512x12x512xf32>
    %cst_426 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3606 = stablehlo.reduce(%3605 init: %cst_426) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x512xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3607 = stablehlo.reshape %3606 : (tensor<64x512x12xf32>) -> tensor<64x512x12x1xf32>
    %3608 = stablehlo.negate %3607 : tensor<64x512x12x1xf32>
    %3609 = stablehlo.broadcast_in_dim %103, dims = [0, 1, 2, 3] : (tensor<64x512x12x1xf32>) -> tensor<64x512x12x512xf32>
    %3610 = stablehlo.divide %3600, %3609 : tensor<64x512x12x512xf32>
    %cst_427 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3611 = stablehlo.reduce(%3608 init: %cst_427) applies stablehlo.add across dimensions = [3] : (tensor<64x512x12x1xf32>, tensor<f32>) -> tensor<64x512x12xf32>
    %3612 = stablehlo.broadcast_in_dim %3611, dims = [0, 1, 2] : (tensor<64x512x12xf32>) -> tensor<64x512x12x512xf32>
    %3613 = stablehlo.add %3610, %3612 : tensor<64x512x12x512xf32>
    %3614 = stablehlo.multiply %3613, %101 : tensor<64x512x12x512xf32>
    %3615 = call @_where_149(%94#1, %3614) : (tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32>
    %3616 = stablehlo.transpose %3615, dims = [0, 2, 3, 1] : (tensor<64x512x12x512xf32>) -> tensor<64x12x512x512xf32>
    %3617 = stablehlo.dot_general %3616, %85, batching_dims = [0, 1] x [0, 2], contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3618 = stablehlo.transpose %3617, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3619 = stablehlo.dot_general %3616, %91, batching_dims = [0, 1] x [0, 2], contracting_dims = [3] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x12x512x512xf32>, tensor<64x512x12x64xf32>) -> tensor<64x12x512x64xf32>
    %3620 = stablehlo.transpose %3619, dims = [0, 2, 1, 3] : (tensor<64x12x512x64xf32>) -> tensor<64x512x12x64xf32>
    %3621 = stablehlo.broadcast_in_dim %89, dims = [] : (tensor<f32>) -> tensor<64x512x12x64xf32>
    %3622 = stablehlo.divide %3618, %3621 : tensor<64x512x12x64xf32>
    %3623 = stablehlo.reshape %3602 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3624 = stablehlo.reshape %3620 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %3625 = stablehlo.reshape %3622 : (tensor<64x512x12x64xf32>) -> tensor<64x512x768xf32>
    %cst_428 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3626 = stablehlo.reduce(%3623 init: %cst_428) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3627 = stablehlo.reshape %3626 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_429 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3628 = stablehlo.reduce(%3627 init: %cst_429) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3629 = stablehlo.dot_general %3623, %58, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3630 = stablehlo.transpose %3629, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3631 = stablehlo.dot_general %3623, %79, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3632 = stablehlo.add %3589, %3631 : tensor<64x512x768xf32>
    %3633 = stablehlo.transpose %3630, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_430 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3634 = stablehlo.reduce(%3624 init: %cst_430) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3635 = stablehlo.reshape %3634 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_431 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3636 = stablehlo.reduce(%3635 init: %cst_431) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3637 = stablehlo.dot_general %3624, %58, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3638 = stablehlo.transpose %3637, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3639 = stablehlo.dot_general %3624, %74, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3640 = stablehlo.add %3632, %3639 : tensor<64x512x768xf32>
    %3641 = stablehlo.transpose %3638, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_432 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3642 = stablehlo.reduce(%3625 init: %cst_432) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3643 = stablehlo.reshape %3642 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_433 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3644 = stablehlo.reduce(%3643 init: %cst_433) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3645 = stablehlo.dot_general %3625, %58, contracting_dims = [0, 1] x [0, 1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<64x512x768xf32>) -> tensor<768x768xf32>
    %3646 = stablehlo.transpose %3645, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %3647 = stablehlo.dot_general %3625, %69, contracting_dims = [2] x [1], precision = [DEFAULT, DEFAULT] : (tensor<64x512x768xf32>, tensor<768x768xf32>) -> tensor<64x512x768xf32>
    %3648 = stablehlo.add %3640, %3647 : tensor<64x512x768xf32>
    %3649 = stablehlo.transpose %3646, dims = [1, 0] : (tensor<768x768xf32>) -> tensor<768x768xf32>
    %cst_434 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3650 = stablehlo.reduce(%3648 init: %cst_434) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3651 = stablehlo.reshape %3650 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_435 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3652 = stablehlo.reduce(%3651 init: %cst_435) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3653 = stablehlo.broadcast_in_dim %53, dims = [0, 1, 2] : (tensor<1x1x768xf32>) -> tensor<64x512x768xf32>
    %3654 = stablehlo.multiply %3653, %3648 : tensor<64x512x768xf32>
    %3655 = stablehlo.multiply %3648, %52 : tensor<64x512x768xf32>
    %cst_436 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3656 = stablehlo.reduce(%3655 init: %cst_436) applies stablehlo.add across dimensions = [0, 1] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3657 = stablehlo.reshape %3656 : (tensor<768xf32>) -> tensor<1x1x768xf32>
    %cst_437 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3658 = stablehlo.reduce(%3657 init: %cst_437) applies stablehlo.add across dimensions = [0, 1] : (tensor<1x1x768xf32>, tensor<f32>) -> tensor<768xf32>
    %3659 = stablehlo.multiply %50, %3654 : tensor<64x512x768xf32>
    %cst_438 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3660 = stablehlo.reduce(%3659 init: %cst_438) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3661 = stablehlo.reshape %3660 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3662 = stablehlo.broadcast_in_dim %45, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3663 = stablehlo.multiply %3654, %3662 : tensor<64x512x768xf32>
    %3664 = stablehlo.negate %3663 : tensor<64x512x768xf32>
    %cst_439 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3665 = stablehlo.reduce(%3664 init: %cst_439) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3666 = stablehlo.reshape %3665 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %3667 = stablehlo.multiply %3661, %48 : tensor<64x512x1xf32>
    %3668 = stablehlo.multiply %3667, %42 : tensor<64x512x1xf32>
    %3669 = call @_var_122(%30#1, %30#2, %30#3, %3668) : (tensor<64x512x768xf32>, tensor<f32>, tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %3670 = stablehlo.add %3663, %3669 : tensor<64x512x768xf32>
    %3671 = stablehlo.broadcast_in_dim %cst_3, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3672 = stablehlo.divide %3666, %3671 : tensor<64x512x1xf32>
    %cst_440 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3673 = stablehlo.reduce(%3672 init: %cst_440) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %3674 = stablehlo.broadcast_in_dim %3673, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %3675 = stablehlo.add %3670, %3674 : tensor<64x512x768xf32>
    %3676 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %3677 = "stablehlo.scatter"(%3676, %22, %3675) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg612: tensor<f32>, %arg613: tensor<f32>):
      %10789 = stablehlo.add %arg612, %arg613 : tensor<f32>
      stablehlo.return %10789 : tensor<f32>
    }) : (tensor<2x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<2x768xf32>
    %3678 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %3679 = "stablehlo.scatter"(%3678, %15, %3675) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg612: tensor<f32>, %arg613: tensor<f32>):
      %10789 = stablehlo.add %arg612, %arg613 : tensor<f32>
      stablehlo.return %10789 : tensor<f32>
    }) : (tensor<512x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<512x768xf32>
    %3680 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %3681 = "stablehlo.scatter"(%3680, %8, %3675) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [2], inserted_window_dims = [0], scatter_dims_to_operand_dims = [0], index_vector_dim = 2>, unique_indices = false}> ({
    ^bb0(%arg612: tensor<f32>, %arg613: tensor<f32>):
      %10789 = stablehlo.add %arg612, %arg613 : tensor<f32>
      stablehlo.return %10789 : tensor<f32>
    }) : (tensor<30522x768xf32>, tensor<64x512x1xi32>, tensor<64x512x768xf32>) -> tensor<30522x768xf32>
    %3682 = stablehlo.add %1909, %3681 : tensor<30522x768xf32>
    %3683 = stablehlo.multiply %3682, %3682 : tensor<30522x768xf32>
    %cst_441 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3684 = stablehlo.reduce(%3683 init: %cst_441) applies stablehlo.add across dimensions = [0, 1] : (tensor<30522x768xf32>, tensor<f32>) -> tensor<f32>
    %3685 = stablehlo.add %cst_5, %3684 : tensor<f32>
    %3686 = stablehlo.multiply %3679, %3679 : tensor<512x768xf32>
    %cst_442 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3687 = stablehlo.reduce(%3686 init: %cst_442) applies stablehlo.add across dimensions = [0, 1] : (tensor<512x768xf32>, tensor<f32>) -> tensor<f32>
    %3688 = stablehlo.add %3685, %3687 : tensor<f32>
    %3689 = stablehlo.multiply %3677, %3677 : tensor<2x768xf32>
    %cst_443 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3690 = stablehlo.reduce(%3689 init: %cst_443) applies stablehlo.add across dimensions = [0, 1] : (tensor<2x768xf32>, tensor<f32>) -> tensor<f32>
    %3691 = stablehlo.add %3688, %3690 : tensor<f32>
    %3692 = stablehlo.multiply %3658, %3658 : tensor<768xf32>
    %cst_444 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3693 = stablehlo.reduce(%3692 init: %cst_444) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3694 = stablehlo.add %3691, %3693 : tensor<f32>
    %3695 = stablehlo.multiply %3652, %3652 : tensor<768xf32>
    %cst_445 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3696 = stablehlo.reduce(%3695 init: %cst_445) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3697 = stablehlo.add %3694, %3696 : tensor<f32>
    %3698 = stablehlo.multiply %3649, %3649 : tensor<768x768xf32>
    %cst_446 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3699 = stablehlo.reduce(%3698 init: %cst_446) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3700 = stablehlo.add %3697, %3699 : tensor<f32>
    %3701 = stablehlo.multiply %3644, %3644 : tensor<768xf32>
    %cst_447 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3702 = stablehlo.reduce(%3701 init: %cst_447) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3703 = stablehlo.add %3700, %3702 : tensor<f32>
    %3704 = stablehlo.multiply %3633, %3633 : tensor<768x768xf32>
    %cst_448 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3705 = stablehlo.reduce(%3704 init: %cst_448) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3706 = stablehlo.add %3703, %3705 : tensor<f32>
    %3707 = stablehlo.multiply %3628, %3628 : tensor<768xf32>
    %cst_449 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3708 = stablehlo.reduce(%3707 init: %cst_449) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3709 = stablehlo.add %3706, %3708 : tensor<f32>
    %3710 = stablehlo.multiply %3641, %3641 : tensor<768x768xf32>
    %cst_450 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3711 = stablehlo.reduce(%3710 init: %cst_450) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3712 = stablehlo.add %3709, %3711 : tensor<f32>
    %3713 = stablehlo.multiply %3636, %3636 : tensor<768xf32>
    %cst_451 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3714 = stablehlo.reduce(%3713 init: %cst_451) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3715 = stablehlo.add %3712, %3714 : tensor<f32>
    %3716 = stablehlo.multiply %3596, %3596 : tensor<768x768xf32>
    %cst_452 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3717 = stablehlo.reduce(%3716 init: %cst_452) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3718 = stablehlo.add %3715, %3717 : tensor<f32>
    %3719 = stablehlo.multiply %3592, %3592 : tensor<768xf32>
    %cst_453 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3720 = stablehlo.reduce(%3719 init: %cst_453) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3721 = stablehlo.add %3718, %3720 : tensor<f32>
    %3722 = stablehlo.multiply %3572, %3572 : tensor<768xf32>
    %cst_454 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3723 = stablehlo.reduce(%3722 init: %cst_454) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3724 = stablehlo.add %3721, %3723 : tensor<f32>
    %3725 = stablehlo.multiply %3566, %3566 : tensor<768xf32>
    %cst_455 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3726 = stablehlo.reduce(%3725 init: %cst_455) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3727 = stablehlo.add %3724, %3726 : tensor<f32>
    %3728 = stablehlo.multiply %3563, %3563 : tensor<3072x768xf32>
    %cst_456 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3729 = stablehlo.reduce(%3728 init: %cst_456) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3730 = stablehlo.add %3727, %3729 : tensor<f32>
    %3731 = stablehlo.multiply %3558, %3558 : tensor<3072xf32>
    %cst_457 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3732 = stablehlo.reduce(%3731 init: %cst_457) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3733 = stablehlo.add %3730, %3732 : tensor<f32>
    %3734 = stablehlo.multiply %3541, %3541 : tensor<768x3072xf32>
    %cst_458 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3735 = stablehlo.reduce(%3734 init: %cst_458) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3736 = stablehlo.add %3733, %3735 : tensor<f32>
    %3737 = stablehlo.multiply %3537, %3537 : tensor<768xf32>
    %cst_459 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3738 = stablehlo.reduce(%3737 init: %cst_459) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3739 = stablehlo.add %3736, %3738 : tensor<f32>
    %3740 = stablehlo.multiply %3517, %3517 : tensor<768xf32>
    %cst_460 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3741 = stablehlo.reduce(%3740 init: %cst_460) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3742 = stablehlo.add %3739, %3741 : tensor<f32>
    %3743 = stablehlo.multiply %3511, %3511 : tensor<768xf32>
    %cst_461 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3744 = stablehlo.reduce(%3743 init: %cst_461) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3745 = stablehlo.add %3742, %3744 : tensor<f32>
    %3746 = stablehlo.multiply %3508, %3508 : tensor<768x768xf32>
    %cst_462 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3747 = stablehlo.reduce(%3746 init: %cst_462) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3748 = stablehlo.add %3745, %3747 : tensor<f32>
    %3749 = stablehlo.multiply %3503, %3503 : tensor<768xf32>
    %cst_463 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3750 = stablehlo.reduce(%3749 init: %cst_463) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3751 = stablehlo.add %3748, %3750 : tensor<f32>
    %3752 = stablehlo.multiply %3492, %3492 : tensor<768x768xf32>
    %cst_464 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3753 = stablehlo.reduce(%3752 init: %cst_464) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3754 = stablehlo.add %3751, %3753 : tensor<f32>
    %3755 = stablehlo.multiply %3487, %3487 : tensor<768xf32>
    %cst_465 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3756 = stablehlo.reduce(%3755 init: %cst_465) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3757 = stablehlo.add %3754, %3756 : tensor<f32>
    %3758 = stablehlo.multiply %3500, %3500 : tensor<768x768xf32>
    %cst_466 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3759 = stablehlo.reduce(%3758 init: %cst_466) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3760 = stablehlo.add %3757, %3759 : tensor<f32>
    %3761 = stablehlo.multiply %3495, %3495 : tensor<768xf32>
    %cst_467 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3762 = stablehlo.reduce(%3761 init: %cst_467) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3763 = stablehlo.add %3760, %3762 : tensor<f32>
    %3764 = stablehlo.multiply %3455, %3455 : tensor<768x768xf32>
    %cst_468 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3765 = stablehlo.reduce(%3764 init: %cst_468) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3766 = stablehlo.add %3763, %3765 : tensor<f32>
    %3767 = stablehlo.multiply %3451, %3451 : tensor<768xf32>
    %cst_469 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3768 = stablehlo.reduce(%3767 init: %cst_469) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3769 = stablehlo.add %3766, %3768 : tensor<f32>
    %3770 = stablehlo.multiply %3431, %3431 : tensor<768xf32>
    %cst_470 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3771 = stablehlo.reduce(%3770 init: %cst_470) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3772 = stablehlo.add %3769, %3771 : tensor<f32>
    %3773 = stablehlo.multiply %3425, %3425 : tensor<768xf32>
    %cst_471 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3774 = stablehlo.reduce(%3773 init: %cst_471) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3775 = stablehlo.add %3772, %3774 : tensor<f32>
    %3776 = stablehlo.multiply %3422, %3422 : tensor<3072x768xf32>
    %cst_472 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3777 = stablehlo.reduce(%3776 init: %cst_472) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3778 = stablehlo.add %3775, %3777 : tensor<f32>
    %3779 = stablehlo.multiply %3417, %3417 : tensor<3072xf32>
    %cst_473 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3780 = stablehlo.reduce(%3779 init: %cst_473) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3781 = stablehlo.add %3778, %3780 : tensor<f32>
    %3782 = stablehlo.multiply %3400, %3400 : tensor<768x3072xf32>
    %cst_474 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3783 = stablehlo.reduce(%3782 init: %cst_474) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3784 = stablehlo.add %3781, %3783 : tensor<f32>
    %3785 = stablehlo.multiply %3396, %3396 : tensor<768xf32>
    %cst_475 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3786 = stablehlo.reduce(%3785 init: %cst_475) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3787 = stablehlo.add %3784, %3786 : tensor<f32>
    %3788 = stablehlo.multiply %3376, %3376 : tensor<768xf32>
    %cst_476 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3789 = stablehlo.reduce(%3788 init: %cst_476) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3790 = stablehlo.add %3787, %3789 : tensor<f32>
    %3791 = stablehlo.multiply %3370, %3370 : tensor<768xf32>
    %cst_477 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3792 = stablehlo.reduce(%3791 init: %cst_477) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3793 = stablehlo.add %3790, %3792 : tensor<f32>
    %3794 = stablehlo.multiply %3367, %3367 : tensor<768x768xf32>
    %cst_478 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3795 = stablehlo.reduce(%3794 init: %cst_478) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3796 = stablehlo.add %3793, %3795 : tensor<f32>
    %3797 = stablehlo.multiply %3362, %3362 : tensor<768xf32>
    %cst_479 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3798 = stablehlo.reduce(%3797 init: %cst_479) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3799 = stablehlo.add %3796, %3798 : tensor<f32>
    %3800 = stablehlo.multiply %3351, %3351 : tensor<768x768xf32>
    %cst_480 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3801 = stablehlo.reduce(%3800 init: %cst_480) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3802 = stablehlo.add %3799, %3801 : tensor<f32>
    %3803 = stablehlo.multiply %3346, %3346 : tensor<768xf32>
    %cst_481 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3804 = stablehlo.reduce(%3803 init: %cst_481) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3805 = stablehlo.add %3802, %3804 : tensor<f32>
    %3806 = stablehlo.multiply %3359, %3359 : tensor<768x768xf32>
    %cst_482 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3807 = stablehlo.reduce(%3806 init: %cst_482) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3808 = stablehlo.add %3805, %3807 : tensor<f32>
    %3809 = stablehlo.multiply %3354, %3354 : tensor<768xf32>
    %cst_483 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3810 = stablehlo.reduce(%3809 init: %cst_483) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3811 = stablehlo.add %3808, %3810 : tensor<f32>
    %3812 = stablehlo.multiply %3314, %3314 : tensor<768x768xf32>
    %cst_484 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3813 = stablehlo.reduce(%3812 init: %cst_484) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3814 = stablehlo.add %3811, %3813 : tensor<f32>
    %3815 = stablehlo.multiply %3310, %3310 : tensor<768xf32>
    %cst_485 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3816 = stablehlo.reduce(%3815 init: %cst_485) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3817 = stablehlo.add %3814, %3816 : tensor<f32>
    %3818 = stablehlo.multiply %3290, %3290 : tensor<768xf32>
    %cst_486 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3819 = stablehlo.reduce(%3818 init: %cst_486) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3820 = stablehlo.add %3817, %3819 : tensor<f32>
    %3821 = stablehlo.multiply %3284, %3284 : tensor<768xf32>
    %cst_487 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3822 = stablehlo.reduce(%3821 init: %cst_487) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3823 = stablehlo.add %3820, %3822 : tensor<f32>
    %3824 = stablehlo.multiply %3281, %3281 : tensor<3072x768xf32>
    %cst_488 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3825 = stablehlo.reduce(%3824 init: %cst_488) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3826 = stablehlo.add %3823, %3825 : tensor<f32>
    %3827 = stablehlo.multiply %3276, %3276 : tensor<3072xf32>
    %cst_489 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3828 = stablehlo.reduce(%3827 init: %cst_489) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3829 = stablehlo.add %3826, %3828 : tensor<f32>
    %3830 = stablehlo.multiply %3259, %3259 : tensor<768x3072xf32>
    %cst_490 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3831 = stablehlo.reduce(%3830 init: %cst_490) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3832 = stablehlo.add %3829, %3831 : tensor<f32>
    %3833 = stablehlo.multiply %3255, %3255 : tensor<768xf32>
    %cst_491 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3834 = stablehlo.reduce(%3833 init: %cst_491) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3835 = stablehlo.add %3832, %3834 : tensor<f32>
    %3836 = stablehlo.multiply %3235, %3235 : tensor<768xf32>
    %cst_492 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3837 = stablehlo.reduce(%3836 init: %cst_492) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3838 = stablehlo.add %3835, %3837 : tensor<f32>
    %3839 = stablehlo.multiply %3229, %3229 : tensor<768xf32>
    %cst_493 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3840 = stablehlo.reduce(%3839 init: %cst_493) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3841 = stablehlo.add %3838, %3840 : tensor<f32>
    %3842 = stablehlo.multiply %3226, %3226 : tensor<768x768xf32>
    %cst_494 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3843 = stablehlo.reduce(%3842 init: %cst_494) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3844 = stablehlo.add %3841, %3843 : tensor<f32>
    %3845 = stablehlo.multiply %3221, %3221 : tensor<768xf32>
    %cst_495 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3846 = stablehlo.reduce(%3845 init: %cst_495) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3847 = stablehlo.add %3844, %3846 : tensor<f32>
    %3848 = stablehlo.multiply %3210, %3210 : tensor<768x768xf32>
    %cst_496 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3849 = stablehlo.reduce(%3848 init: %cst_496) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3850 = stablehlo.add %3847, %3849 : tensor<f32>
    %3851 = stablehlo.multiply %3205, %3205 : tensor<768xf32>
    %cst_497 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3852 = stablehlo.reduce(%3851 init: %cst_497) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3853 = stablehlo.add %3850, %3852 : tensor<f32>
    %3854 = stablehlo.multiply %3218, %3218 : tensor<768x768xf32>
    %cst_498 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3855 = stablehlo.reduce(%3854 init: %cst_498) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3856 = stablehlo.add %3853, %3855 : tensor<f32>
    %3857 = stablehlo.multiply %3213, %3213 : tensor<768xf32>
    %cst_499 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3858 = stablehlo.reduce(%3857 init: %cst_499) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3859 = stablehlo.add %3856, %3858 : tensor<f32>
    %3860 = stablehlo.multiply %3173, %3173 : tensor<768x768xf32>
    %cst_500 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3861 = stablehlo.reduce(%3860 init: %cst_500) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3862 = stablehlo.add %3859, %3861 : tensor<f32>
    %3863 = stablehlo.multiply %3169, %3169 : tensor<768xf32>
    %cst_501 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3864 = stablehlo.reduce(%3863 init: %cst_501) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3865 = stablehlo.add %3862, %3864 : tensor<f32>
    %3866 = stablehlo.multiply %3149, %3149 : tensor<768xf32>
    %cst_502 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3867 = stablehlo.reduce(%3866 init: %cst_502) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3868 = stablehlo.add %3865, %3867 : tensor<f32>
    %3869 = stablehlo.multiply %3143, %3143 : tensor<768xf32>
    %cst_503 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3870 = stablehlo.reduce(%3869 init: %cst_503) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3871 = stablehlo.add %3868, %3870 : tensor<f32>
    %3872 = stablehlo.multiply %3140, %3140 : tensor<3072x768xf32>
    %cst_504 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3873 = stablehlo.reduce(%3872 init: %cst_504) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3874 = stablehlo.add %3871, %3873 : tensor<f32>
    %3875 = stablehlo.multiply %3135, %3135 : tensor<3072xf32>
    %cst_505 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3876 = stablehlo.reduce(%3875 init: %cst_505) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3877 = stablehlo.add %3874, %3876 : tensor<f32>
    %3878 = stablehlo.multiply %3118, %3118 : tensor<768x3072xf32>
    %cst_506 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3879 = stablehlo.reduce(%3878 init: %cst_506) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3880 = stablehlo.add %3877, %3879 : tensor<f32>
    %3881 = stablehlo.multiply %3114, %3114 : tensor<768xf32>
    %cst_507 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3882 = stablehlo.reduce(%3881 init: %cst_507) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3883 = stablehlo.add %3880, %3882 : tensor<f32>
    %3884 = stablehlo.multiply %3094, %3094 : tensor<768xf32>
    %cst_508 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3885 = stablehlo.reduce(%3884 init: %cst_508) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3886 = stablehlo.add %3883, %3885 : tensor<f32>
    %3887 = stablehlo.multiply %3088, %3088 : tensor<768xf32>
    %cst_509 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3888 = stablehlo.reduce(%3887 init: %cst_509) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3889 = stablehlo.add %3886, %3888 : tensor<f32>
    %3890 = stablehlo.multiply %3085, %3085 : tensor<768x768xf32>
    %cst_510 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3891 = stablehlo.reduce(%3890 init: %cst_510) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3892 = stablehlo.add %3889, %3891 : tensor<f32>
    %3893 = stablehlo.multiply %3080, %3080 : tensor<768xf32>
    %cst_511 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3894 = stablehlo.reduce(%3893 init: %cst_511) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3895 = stablehlo.add %3892, %3894 : tensor<f32>
    %3896 = stablehlo.multiply %3069, %3069 : tensor<768x768xf32>
    %cst_512 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3897 = stablehlo.reduce(%3896 init: %cst_512) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3898 = stablehlo.add %3895, %3897 : tensor<f32>
    %3899 = stablehlo.multiply %3064, %3064 : tensor<768xf32>
    %cst_513 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3900 = stablehlo.reduce(%3899 init: %cst_513) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3901 = stablehlo.add %3898, %3900 : tensor<f32>
    %3902 = stablehlo.multiply %3077, %3077 : tensor<768x768xf32>
    %cst_514 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3903 = stablehlo.reduce(%3902 init: %cst_514) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3904 = stablehlo.add %3901, %3903 : tensor<f32>
    %3905 = stablehlo.multiply %3072, %3072 : tensor<768xf32>
    %cst_515 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3906 = stablehlo.reduce(%3905 init: %cst_515) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3907 = stablehlo.add %3904, %3906 : tensor<f32>
    %3908 = stablehlo.multiply %3032, %3032 : tensor<768x768xf32>
    %cst_516 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3909 = stablehlo.reduce(%3908 init: %cst_516) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3910 = stablehlo.add %3907, %3909 : tensor<f32>
    %3911 = stablehlo.multiply %3028, %3028 : tensor<768xf32>
    %cst_517 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3912 = stablehlo.reduce(%3911 init: %cst_517) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3913 = stablehlo.add %3910, %3912 : tensor<f32>
    %3914 = stablehlo.multiply %3008, %3008 : tensor<768xf32>
    %cst_518 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3915 = stablehlo.reduce(%3914 init: %cst_518) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3916 = stablehlo.add %3913, %3915 : tensor<f32>
    %3917 = stablehlo.multiply %3002, %3002 : tensor<768xf32>
    %cst_519 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3918 = stablehlo.reduce(%3917 init: %cst_519) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3919 = stablehlo.add %3916, %3918 : tensor<f32>
    %3920 = stablehlo.multiply %2999, %2999 : tensor<3072x768xf32>
    %cst_520 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3921 = stablehlo.reduce(%3920 init: %cst_520) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3922 = stablehlo.add %3919, %3921 : tensor<f32>
    %3923 = stablehlo.multiply %2994, %2994 : tensor<3072xf32>
    %cst_521 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3924 = stablehlo.reduce(%3923 init: %cst_521) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3925 = stablehlo.add %3922, %3924 : tensor<f32>
    %3926 = stablehlo.multiply %2977, %2977 : tensor<768x3072xf32>
    %cst_522 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3927 = stablehlo.reduce(%3926 init: %cst_522) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3928 = stablehlo.add %3925, %3927 : tensor<f32>
    %3929 = stablehlo.multiply %2973, %2973 : tensor<768xf32>
    %cst_523 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3930 = stablehlo.reduce(%3929 init: %cst_523) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3931 = stablehlo.add %3928, %3930 : tensor<f32>
    %3932 = stablehlo.multiply %2953, %2953 : tensor<768xf32>
    %cst_524 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3933 = stablehlo.reduce(%3932 init: %cst_524) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3934 = stablehlo.add %3931, %3933 : tensor<f32>
    %3935 = stablehlo.multiply %2947, %2947 : tensor<768xf32>
    %cst_525 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3936 = stablehlo.reduce(%3935 init: %cst_525) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3937 = stablehlo.add %3934, %3936 : tensor<f32>
    %3938 = stablehlo.multiply %2944, %2944 : tensor<768x768xf32>
    %cst_526 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3939 = stablehlo.reduce(%3938 init: %cst_526) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3940 = stablehlo.add %3937, %3939 : tensor<f32>
    %3941 = stablehlo.multiply %2939, %2939 : tensor<768xf32>
    %cst_527 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3942 = stablehlo.reduce(%3941 init: %cst_527) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3943 = stablehlo.add %3940, %3942 : tensor<f32>
    %3944 = stablehlo.multiply %2928, %2928 : tensor<768x768xf32>
    %cst_528 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3945 = stablehlo.reduce(%3944 init: %cst_528) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3946 = stablehlo.add %3943, %3945 : tensor<f32>
    %3947 = stablehlo.multiply %2923, %2923 : tensor<768xf32>
    %cst_529 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3948 = stablehlo.reduce(%3947 init: %cst_529) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3949 = stablehlo.add %3946, %3948 : tensor<f32>
    %3950 = stablehlo.multiply %2936, %2936 : tensor<768x768xf32>
    %cst_530 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3951 = stablehlo.reduce(%3950 init: %cst_530) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3952 = stablehlo.add %3949, %3951 : tensor<f32>
    %3953 = stablehlo.multiply %2931, %2931 : tensor<768xf32>
    %cst_531 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3954 = stablehlo.reduce(%3953 init: %cst_531) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3955 = stablehlo.add %3952, %3954 : tensor<f32>
    %3956 = stablehlo.multiply %2891, %2891 : tensor<768x768xf32>
    %cst_532 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3957 = stablehlo.reduce(%3956 init: %cst_532) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3958 = stablehlo.add %3955, %3957 : tensor<f32>
    %3959 = stablehlo.multiply %2887, %2887 : tensor<768xf32>
    %cst_533 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3960 = stablehlo.reduce(%3959 init: %cst_533) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3961 = stablehlo.add %3958, %3960 : tensor<f32>
    %3962 = stablehlo.multiply %2867, %2867 : tensor<768xf32>
    %cst_534 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3963 = stablehlo.reduce(%3962 init: %cst_534) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3964 = stablehlo.add %3961, %3963 : tensor<f32>
    %3965 = stablehlo.multiply %2861, %2861 : tensor<768xf32>
    %cst_535 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3966 = stablehlo.reduce(%3965 init: %cst_535) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3967 = stablehlo.add %3964, %3966 : tensor<f32>
    %3968 = stablehlo.multiply %2858, %2858 : tensor<3072x768xf32>
    %cst_536 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3969 = stablehlo.reduce(%3968 init: %cst_536) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %3970 = stablehlo.add %3967, %3969 : tensor<f32>
    %3971 = stablehlo.multiply %2853, %2853 : tensor<3072xf32>
    %cst_537 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3972 = stablehlo.reduce(%3971 init: %cst_537) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %3973 = stablehlo.add %3970, %3972 : tensor<f32>
    %3974 = stablehlo.multiply %2836, %2836 : tensor<768x3072xf32>
    %cst_538 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3975 = stablehlo.reduce(%3974 init: %cst_538) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %3976 = stablehlo.add %3973, %3975 : tensor<f32>
    %3977 = stablehlo.multiply %2832, %2832 : tensor<768xf32>
    %cst_539 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3978 = stablehlo.reduce(%3977 init: %cst_539) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3979 = stablehlo.add %3976, %3978 : tensor<f32>
    %3980 = stablehlo.multiply %2812, %2812 : tensor<768xf32>
    %cst_540 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3981 = stablehlo.reduce(%3980 init: %cst_540) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3982 = stablehlo.add %3979, %3981 : tensor<f32>
    %3983 = stablehlo.multiply %2806, %2806 : tensor<768xf32>
    %cst_541 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3984 = stablehlo.reduce(%3983 init: %cst_541) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3985 = stablehlo.add %3982, %3984 : tensor<f32>
    %3986 = stablehlo.multiply %2803, %2803 : tensor<768x768xf32>
    %cst_542 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3987 = stablehlo.reduce(%3986 init: %cst_542) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3988 = stablehlo.add %3985, %3987 : tensor<f32>
    %3989 = stablehlo.multiply %2798, %2798 : tensor<768xf32>
    %cst_543 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3990 = stablehlo.reduce(%3989 init: %cst_543) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3991 = stablehlo.add %3988, %3990 : tensor<f32>
    %3992 = stablehlo.multiply %2787, %2787 : tensor<768x768xf32>
    %cst_544 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3993 = stablehlo.reduce(%3992 init: %cst_544) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %3994 = stablehlo.add %3991, %3993 : tensor<f32>
    %3995 = stablehlo.multiply %2782, %2782 : tensor<768xf32>
    %cst_545 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3996 = stablehlo.reduce(%3995 init: %cst_545) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %3997 = stablehlo.add %3994, %3996 : tensor<f32>
    %3998 = stablehlo.multiply %2795, %2795 : tensor<768x768xf32>
    %cst_546 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3999 = stablehlo.reduce(%3998 init: %cst_546) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4000 = stablehlo.add %3997, %3999 : tensor<f32>
    %4001 = stablehlo.multiply %2790, %2790 : tensor<768xf32>
    %cst_547 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4002 = stablehlo.reduce(%4001 init: %cst_547) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4003 = stablehlo.add %4000, %4002 : tensor<f32>
    %4004 = stablehlo.multiply %2750, %2750 : tensor<768x768xf32>
    %cst_548 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4005 = stablehlo.reduce(%4004 init: %cst_548) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4006 = stablehlo.add %4003, %4005 : tensor<f32>
    %4007 = stablehlo.multiply %2746, %2746 : tensor<768xf32>
    %cst_549 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4008 = stablehlo.reduce(%4007 init: %cst_549) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4009 = stablehlo.add %4006, %4008 : tensor<f32>
    %4010 = stablehlo.multiply %2726, %2726 : tensor<768xf32>
    %cst_550 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4011 = stablehlo.reduce(%4010 init: %cst_550) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4012 = stablehlo.add %4009, %4011 : tensor<f32>
    %4013 = stablehlo.multiply %2720, %2720 : tensor<768xf32>
    %cst_551 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4014 = stablehlo.reduce(%4013 init: %cst_551) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4015 = stablehlo.add %4012, %4014 : tensor<f32>
    %4016 = stablehlo.multiply %2717, %2717 : tensor<3072x768xf32>
    %cst_552 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4017 = stablehlo.reduce(%4016 init: %cst_552) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4018 = stablehlo.add %4015, %4017 : tensor<f32>
    %4019 = stablehlo.multiply %2712, %2712 : tensor<3072xf32>
    %cst_553 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4020 = stablehlo.reduce(%4019 init: %cst_553) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4021 = stablehlo.add %4018, %4020 : tensor<f32>
    %4022 = stablehlo.multiply %2695, %2695 : tensor<768x3072xf32>
    %cst_554 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4023 = stablehlo.reduce(%4022 init: %cst_554) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4024 = stablehlo.add %4021, %4023 : tensor<f32>
    %4025 = stablehlo.multiply %2691, %2691 : tensor<768xf32>
    %cst_555 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4026 = stablehlo.reduce(%4025 init: %cst_555) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4027 = stablehlo.add %4024, %4026 : tensor<f32>
    %4028 = stablehlo.multiply %2671, %2671 : tensor<768xf32>
    %cst_556 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4029 = stablehlo.reduce(%4028 init: %cst_556) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4030 = stablehlo.add %4027, %4029 : tensor<f32>
    %4031 = stablehlo.multiply %2665, %2665 : tensor<768xf32>
    %cst_557 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4032 = stablehlo.reduce(%4031 init: %cst_557) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4033 = stablehlo.add %4030, %4032 : tensor<f32>
    %4034 = stablehlo.multiply %2662, %2662 : tensor<768x768xf32>
    %cst_558 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4035 = stablehlo.reduce(%4034 init: %cst_558) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4036 = stablehlo.add %4033, %4035 : tensor<f32>
    %4037 = stablehlo.multiply %2657, %2657 : tensor<768xf32>
    %cst_559 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4038 = stablehlo.reduce(%4037 init: %cst_559) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4039 = stablehlo.add %4036, %4038 : tensor<f32>
    %4040 = stablehlo.multiply %2646, %2646 : tensor<768x768xf32>
    %cst_560 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4041 = stablehlo.reduce(%4040 init: %cst_560) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4042 = stablehlo.add %4039, %4041 : tensor<f32>
    %4043 = stablehlo.multiply %2641, %2641 : tensor<768xf32>
    %cst_561 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4044 = stablehlo.reduce(%4043 init: %cst_561) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4045 = stablehlo.add %4042, %4044 : tensor<f32>
    %4046 = stablehlo.multiply %2654, %2654 : tensor<768x768xf32>
    %cst_562 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4047 = stablehlo.reduce(%4046 init: %cst_562) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4048 = stablehlo.add %4045, %4047 : tensor<f32>
    %4049 = stablehlo.multiply %2649, %2649 : tensor<768xf32>
    %cst_563 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4050 = stablehlo.reduce(%4049 init: %cst_563) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4051 = stablehlo.add %4048, %4050 : tensor<f32>
    %4052 = stablehlo.multiply %2609, %2609 : tensor<768x768xf32>
    %cst_564 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4053 = stablehlo.reduce(%4052 init: %cst_564) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4054 = stablehlo.add %4051, %4053 : tensor<f32>
    %4055 = stablehlo.multiply %2605, %2605 : tensor<768xf32>
    %cst_565 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4056 = stablehlo.reduce(%4055 init: %cst_565) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4057 = stablehlo.add %4054, %4056 : tensor<f32>
    %4058 = stablehlo.multiply %2585, %2585 : tensor<768xf32>
    %cst_566 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4059 = stablehlo.reduce(%4058 init: %cst_566) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4060 = stablehlo.add %4057, %4059 : tensor<f32>
    %4061 = stablehlo.multiply %2579, %2579 : tensor<768xf32>
    %cst_567 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4062 = stablehlo.reduce(%4061 init: %cst_567) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4063 = stablehlo.add %4060, %4062 : tensor<f32>
    %4064 = stablehlo.multiply %2576, %2576 : tensor<3072x768xf32>
    %cst_568 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4065 = stablehlo.reduce(%4064 init: %cst_568) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4066 = stablehlo.add %4063, %4065 : tensor<f32>
    %4067 = stablehlo.multiply %2571, %2571 : tensor<3072xf32>
    %cst_569 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4068 = stablehlo.reduce(%4067 init: %cst_569) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4069 = stablehlo.add %4066, %4068 : tensor<f32>
    %4070 = stablehlo.multiply %2554, %2554 : tensor<768x3072xf32>
    %cst_570 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4071 = stablehlo.reduce(%4070 init: %cst_570) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4072 = stablehlo.add %4069, %4071 : tensor<f32>
    %4073 = stablehlo.multiply %2550, %2550 : tensor<768xf32>
    %cst_571 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4074 = stablehlo.reduce(%4073 init: %cst_571) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4075 = stablehlo.add %4072, %4074 : tensor<f32>
    %4076 = stablehlo.multiply %2530, %2530 : tensor<768xf32>
    %cst_572 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4077 = stablehlo.reduce(%4076 init: %cst_572) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4078 = stablehlo.add %4075, %4077 : tensor<f32>
    %4079 = stablehlo.multiply %2524, %2524 : tensor<768xf32>
    %cst_573 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4080 = stablehlo.reduce(%4079 init: %cst_573) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4081 = stablehlo.add %4078, %4080 : tensor<f32>
    %4082 = stablehlo.multiply %2521, %2521 : tensor<768x768xf32>
    %cst_574 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4083 = stablehlo.reduce(%4082 init: %cst_574) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4084 = stablehlo.add %4081, %4083 : tensor<f32>
    %4085 = stablehlo.multiply %2516, %2516 : tensor<768xf32>
    %cst_575 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4086 = stablehlo.reduce(%4085 init: %cst_575) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4087 = stablehlo.add %4084, %4086 : tensor<f32>
    %4088 = stablehlo.multiply %2505, %2505 : tensor<768x768xf32>
    %cst_576 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4089 = stablehlo.reduce(%4088 init: %cst_576) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4090 = stablehlo.add %4087, %4089 : tensor<f32>
    %4091 = stablehlo.multiply %2500, %2500 : tensor<768xf32>
    %cst_577 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4092 = stablehlo.reduce(%4091 init: %cst_577) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4093 = stablehlo.add %4090, %4092 : tensor<f32>
    %4094 = stablehlo.multiply %2513, %2513 : tensor<768x768xf32>
    %cst_578 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4095 = stablehlo.reduce(%4094 init: %cst_578) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4096 = stablehlo.add %4093, %4095 : tensor<f32>
    %4097 = stablehlo.multiply %2508, %2508 : tensor<768xf32>
    %cst_579 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4098 = stablehlo.reduce(%4097 init: %cst_579) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4099 = stablehlo.add %4096, %4098 : tensor<f32>
    %4100 = stablehlo.multiply %2468, %2468 : tensor<768x768xf32>
    %cst_580 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4101 = stablehlo.reduce(%4100 init: %cst_580) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4102 = stablehlo.add %4099, %4101 : tensor<f32>
    %4103 = stablehlo.multiply %2464, %2464 : tensor<768xf32>
    %cst_581 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4104 = stablehlo.reduce(%4103 init: %cst_581) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4105 = stablehlo.add %4102, %4104 : tensor<f32>
    %4106 = stablehlo.multiply %2444, %2444 : tensor<768xf32>
    %cst_582 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4107 = stablehlo.reduce(%4106 init: %cst_582) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4108 = stablehlo.add %4105, %4107 : tensor<f32>
    %4109 = stablehlo.multiply %2438, %2438 : tensor<768xf32>
    %cst_583 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4110 = stablehlo.reduce(%4109 init: %cst_583) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4111 = stablehlo.add %4108, %4110 : tensor<f32>
    %4112 = stablehlo.multiply %2435, %2435 : tensor<3072x768xf32>
    %cst_584 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4113 = stablehlo.reduce(%4112 init: %cst_584) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4114 = stablehlo.add %4111, %4113 : tensor<f32>
    %4115 = stablehlo.multiply %2430, %2430 : tensor<3072xf32>
    %cst_585 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4116 = stablehlo.reduce(%4115 init: %cst_585) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4117 = stablehlo.add %4114, %4116 : tensor<f32>
    %4118 = stablehlo.multiply %2413, %2413 : tensor<768x3072xf32>
    %cst_586 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4119 = stablehlo.reduce(%4118 init: %cst_586) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4120 = stablehlo.add %4117, %4119 : tensor<f32>
    %4121 = stablehlo.multiply %2409, %2409 : tensor<768xf32>
    %cst_587 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4122 = stablehlo.reduce(%4121 init: %cst_587) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4123 = stablehlo.add %4120, %4122 : tensor<f32>
    %4124 = stablehlo.multiply %2389, %2389 : tensor<768xf32>
    %cst_588 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4125 = stablehlo.reduce(%4124 init: %cst_588) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4126 = stablehlo.add %4123, %4125 : tensor<f32>
    %4127 = stablehlo.multiply %2383, %2383 : tensor<768xf32>
    %cst_589 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4128 = stablehlo.reduce(%4127 init: %cst_589) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4129 = stablehlo.add %4126, %4128 : tensor<f32>
    %4130 = stablehlo.multiply %2380, %2380 : tensor<768x768xf32>
    %cst_590 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4131 = stablehlo.reduce(%4130 init: %cst_590) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4132 = stablehlo.add %4129, %4131 : tensor<f32>
    %4133 = stablehlo.multiply %2375, %2375 : tensor<768xf32>
    %cst_591 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4134 = stablehlo.reduce(%4133 init: %cst_591) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4135 = stablehlo.add %4132, %4134 : tensor<f32>
    %4136 = stablehlo.multiply %2364, %2364 : tensor<768x768xf32>
    %cst_592 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4137 = stablehlo.reduce(%4136 init: %cst_592) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4138 = stablehlo.add %4135, %4137 : tensor<f32>
    %4139 = stablehlo.multiply %2359, %2359 : tensor<768xf32>
    %cst_593 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4140 = stablehlo.reduce(%4139 init: %cst_593) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4141 = stablehlo.add %4138, %4140 : tensor<f32>
    %4142 = stablehlo.multiply %2372, %2372 : tensor<768x768xf32>
    %cst_594 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4143 = stablehlo.reduce(%4142 init: %cst_594) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4144 = stablehlo.add %4141, %4143 : tensor<f32>
    %4145 = stablehlo.multiply %2367, %2367 : tensor<768xf32>
    %cst_595 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4146 = stablehlo.reduce(%4145 init: %cst_595) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4147 = stablehlo.add %4144, %4146 : tensor<f32>
    %4148 = stablehlo.multiply %2327, %2327 : tensor<768x768xf32>
    %cst_596 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4149 = stablehlo.reduce(%4148 init: %cst_596) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4150 = stablehlo.add %4147, %4149 : tensor<f32>
    %4151 = stablehlo.multiply %2323, %2323 : tensor<768xf32>
    %cst_597 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4152 = stablehlo.reduce(%4151 init: %cst_597) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4153 = stablehlo.add %4150, %4152 : tensor<f32>
    %4154 = stablehlo.multiply %2303, %2303 : tensor<768xf32>
    %cst_598 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4155 = stablehlo.reduce(%4154 init: %cst_598) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4156 = stablehlo.add %4153, %4155 : tensor<f32>
    %4157 = stablehlo.multiply %2297, %2297 : tensor<768xf32>
    %cst_599 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4158 = stablehlo.reduce(%4157 init: %cst_599) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4159 = stablehlo.add %4156, %4158 : tensor<f32>
    %4160 = stablehlo.multiply %2294, %2294 : tensor<3072x768xf32>
    %cst_600 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4161 = stablehlo.reduce(%4160 init: %cst_600) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4162 = stablehlo.add %4159, %4161 : tensor<f32>
    %4163 = stablehlo.multiply %2289, %2289 : tensor<3072xf32>
    %cst_601 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4164 = stablehlo.reduce(%4163 init: %cst_601) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4165 = stablehlo.add %4162, %4164 : tensor<f32>
    %4166 = stablehlo.multiply %2272, %2272 : tensor<768x3072xf32>
    %cst_602 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4167 = stablehlo.reduce(%4166 init: %cst_602) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4168 = stablehlo.add %4165, %4167 : tensor<f32>
    %4169 = stablehlo.multiply %2268, %2268 : tensor<768xf32>
    %cst_603 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4170 = stablehlo.reduce(%4169 init: %cst_603) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4171 = stablehlo.add %4168, %4170 : tensor<f32>
    %4172 = stablehlo.multiply %2248, %2248 : tensor<768xf32>
    %cst_604 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4173 = stablehlo.reduce(%4172 init: %cst_604) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4174 = stablehlo.add %4171, %4173 : tensor<f32>
    %4175 = stablehlo.multiply %2242, %2242 : tensor<768xf32>
    %cst_605 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4176 = stablehlo.reduce(%4175 init: %cst_605) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4177 = stablehlo.add %4174, %4176 : tensor<f32>
    %4178 = stablehlo.multiply %2239, %2239 : tensor<768x768xf32>
    %cst_606 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4179 = stablehlo.reduce(%4178 init: %cst_606) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4180 = stablehlo.add %4177, %4179 : tensor<f32>
    %4181 = stablehlo.multiply %2234, %2234 : tensor<768xf32>
    %cst_607 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4182 = stablehlo.reduce(%4181 init: %cst_607) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4183 = stablehlo.add %4180, %4182 : tensor<f32>
    %4184 = stablehlo.multiply %2223, %2223 : tensor<768x768xf32>
    %cst_608 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4185 = stablehlo.reduce(%4184 init: %cst_608) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4186 = stablehlo.add %4183, %4185 : tensor<f32>
    %4187 = stablehlo.multiply %2218, %2218 : tensor<768xf32>
    %cst_609 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4188 = stablehlo.reduce(%4187 init: %cst_609) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4189 = stablehlo.add %4186, %4188 : tensor<f32>
    %4190 = stablehlo.multiply %2231, %2231 : tensor<768x768xf32>
    %cst_610 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4191 = stablehlo.reduce(%4190 init: %cst_610) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4192 = stablehlo.add %4189, %4191 : tensor<f32>
    %4193 = stablehlo.multiply %2226, %2226 : tensor<768xf32>
    %cst_611 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4194 = stablehlo.reduce(%4193 init: %cst_611) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4195 = stablehlo.add %4192, %4194 : tensor<f32>
    %4196 = stablehlo.multiply %2186, %2186 : tensor<768x768xf32>
    %cst_612 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4197 = stablehlo.reduce(%4196 init: %cst_612) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4198 = stablehlo.add %4195, %4197 : tensor<f32>
    %4199 = stablehlo.multiply %2182, %2182 : tensor<768xf32>
    %cst_613 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4200 = stablehlo.reduce(%4199 init: %cst_613) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4201 = stablehlo.add %4198, %4200 : tensor<f32>
    %4202 = stablehlo.multiply %2162, %2162 : tensor<768xf32>
    %cst_614 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4203 = stablehlo.reduce(%4202 init: %cst_614) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4204 = stablehlo.add %4201, %4203 : tensor<f32>
    %4205 = stablehlo.multiply %2156, %2156 : tensor<768xf32>
    %cst_615 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4206 = stablehlo.reduce(%4205 init: %cst_615) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4207 = stablehlo.add %4204, %4206 : tensor<f32>
    %4208 = stablehlo.multiply %2153, %2153 : tensor<3072x768xf32>
    %cst_616 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4209 = stablehlo.reduce(%4208 init: %cst_616) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4210 = stablehlo.add %4207, %4209 : tensor<f32>
    %4211 = stablehlo.multiply %2148, %2148 : tensor<3072xf32>
    %cst_617 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4212 = stablehlo.reduce(%4211 init: %cst_617) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4213 = stablehlo.add %4210, %4212 : tensor<f32>
    %4214 = stablehlo.multiply %2131, %2131 : tensor<768x3072xf32>
    %cst_618 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4215 = stablehlo.reduce(%4214 init: %cst_618) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4216 = stablehlo.add %4213, %4215 : tensor<f32>
    %4217 = stablehlo.multiply %2127, %2127 : tensor<768xf32>
    %cst_619 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4218 = stablehlo.reduce(%4217 init: %cst_619) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4219 = stablehlo.add %4216, %4218 : tensor<f32>
    %4220 = stablehlo.multiply %2107, %2107 : tensor<768xf32>
    %cst_620 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4221 = stablehlo.reduce(%4220 init: %cst_620) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4222 = stablehlo.add %4219, %4221 : tensor<f32>
    %4223 = stablehlo.multiply %2101, %2101 : tensor<768xf32>
    %cst_621 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4224 = stablehlo.reduce(%4223 init: %cst_621) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4225 = stablehlo.add %4222, %4224 : tensor<f32>
    %4226 = stablehlo.multiply %2098, %2098 : tensor<768x768xf32>
    %cst_622 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4227 = stablehlo.reduce(%4226 init: %cst_622) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4228 = stablehlo.add %4225, %4227 : tensor<f32>
    %4229 = stablehlo.multiply %2093, %2093 : tensor<768xf32>
    %cst_623 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4230 = stablehlo.reduce(%4229 init: %cst_623) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4231 = stablehlo.add %4228, %4230 : tensor<f32>
    %4232 = stablehlo.multiply %2082, %2082 : tensor<768x768xf32>
    %cst_624 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4233 = stablehlo.reduce(%4232 init: %cst_624) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4234 = stablehlo.add %4231, %4233 : tensor<f32>
    %4235 = stablehlo.multiply %2077, %2077 : tensor<768xf32>
    %cst_625 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4236 = stablehlo.reduce(%4235 init: %cst_625) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4237 = stablehlo.add %4234, %4236 : tensor<f32>
    %4238 = stablehlo.multiply %2090, %2090 : tensor<768x768xf32>
    %cst_626 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4239 = stablehlo.reduce(%4238 init: %cst_626) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4240 = stablehlo.add %4237, %4239 : tensor<f32>
    %4241 = stablehlo.multiply %2085, %2085 : tensor<768xf32>
    %cst_627 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4242 = stablehlo.reduce(%4241 init: %cst_627) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4243 = stablehlo.add %4240, %4242 : tensor<f32>
    %4244 = stablehlo.multiply %2045, %2045 : tensor<768x768xf32>
    %cst_628 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4245 = stablehlo.reduce(%4244 init: %cst_628) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4246 = stablehlo.add %4243, %4245 : tensor<f32>
    %4247 = stablehlo.multiply %2041, %2041 : tensor<768xf32>
    %cst_629 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4248 = stablehlo.reduce(%4247 init: %cst_629) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4249 = stablehlo.add %4246, %4248 : tensor<f32>
    %4250 = stablehlo.multiply %2021, %2021 : tensor<768xf32>
    %cst_630 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4251 = stablehlo.reduce(%4250 init: %cst_630) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4252 = stablehlo.add %4249, %4251 : tensor<f32>
    %4253 = stablehlo.multiply %2015, %2015 : tensor<768xf32>
    %cst_631 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4254 = stablehlo.reduce(%4253 init: %cst_631) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4255 = stablehlo.add %4252, %4254 : tensor<f32>
    %4256 = stablehlo.multiply %2012, %2012 : tensor<3072x768xf32>
    %cst_632 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4257 = stablehlo.reduce(%4256 init: %cst_632) applies stablehlo.add across dimensions = [0, 1] : (tensor<3072x768xf32>, tensor<f32>) -> tensor<f32>
    %4258 = stablehlo.add %4255, %4257 : tensor<f32>
    %4259 = stablehlo.multiply %2007, %2007 : tensor<3072xf32>
    %cst_633 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4260 = stablehlo.reduce(%4259 init: %cst_633) applies stablehlo.add across dimensions = [0] : (tensor<3072xf32>, tensor<f32>) -> tensor<f32>
    %4261 = stablehlo.add %4258, %4260 : tensor<f32>
    %4262 = stablehlo.multiply %1990, %1990 : tensor<768x3072xf32>
    %cst_634 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4263 = stablehlo.reduce(%4262 init: %cst_634) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x3072xf32>, tensor<f32>) -> tensor<f32>
    %4264 = stablehlo.add %4261, %4263 : tensor<f32>
    %4265 = stablehlo.multiply %1986, %1986 : tensor<768xf32>
    %cst_635 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4266 = stablehlo.reduce(%4265 init: %cst_635) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4267 = stablehlo.add %4264, %4266 : tensor<f32>
    %4268 = stablehlo.multiply %1966, %1966 : tensor<768xf32>
    %cst_636 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4269 = stablehlo.reduce(%4268 init: %cst_636) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4270 = stablehlo.add %4267, %4269 : tensor<f32>
    %4271 = stablehlo.multiply %1960, %1960 : tensor<768xf32>
    %cst_637 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4272 = stablehlo.reduce(%4271 init: %cst_637) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4273 = stablehlo.add %4270, %4272 : tensor<f32>
    %4274 = stablehlo.multiply %1957, %1957 : tensor<768x768xf32>
    %cst_638 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4275 = stablehlo.reduce(%4274 init: %cst_638) applies stablehlo.add across dimensions = [0, 1] : (tensor<768x768xf32>, tensor<f32>) -> tensor<f32>
    %4276 = stablehlo.add %4273, %4275 : tensor<f32>
    %4277 = stablehlo.multiply %1953, %1953 : tensor<768xf32>
    %cst_639 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4278 = stablehlo.reduce(%4277 init: %cst_639) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4279 = stablehlo.add %4276, %4278 : tensor<f32>
    %4280 = stablehlo.multiply %1919, %1919 : tensor<768xf32>
    %cst_640 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4281 = stablehlo.reduce(%4280 init: %cst_640) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4282 = stablehlo.add %4279, %4281 : tensor<f32>
    %4283 = stablehlo.multiply %1913, %1913 : tensor<768xf32>
    %cst_641 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4284 = stablehlo.reduce(%4283 init: %cst_641) applies stablehlo.add across dimensions = [0] : (tensor<768xf32>, tensor<f32>) -> tensor<f32>
    %4285 = stablehlo.add %4282, %4284 : tensor<f32>
    %4286 = stablehlo.multiply %1908, %1908 : tensor<30522xf32>
    %cst_642 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %4287 = stablehlo.reduce(%4286 init: %cst_642) applies stablehlo.add across dimensions = [0] : (tensor<30522xf32>, tensor<f32>) -> tensor<f32>
    %4288 = stablehlo.add %4285, %4287 : tensor<f32>
    %4289 = stablehlo.sqrt %4288 : tensor<f32>
    %4290 = stablehlo.compare  LT, %4289, %cst_6,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %4291 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4292 = stablehlo.divide %3682, %4291 : tensor<30522x768xf32>
    %4293 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %4294 = stablehlo.multiply %4292, %4293 : tensor<30522x768xf32>
    %4295 = stablehlo.select %4290, %3682, %4294 : tensor<i1>, tensor<30522x768xf32>
    %4296 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4297 = stablehlo.divide %3679, %4296 : tensor<512x768xf32>
    %4298 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %4299 = stablehlo.multiply %4297, %4298 : tensor<512x768xf32>
    %4300 = stablehlo.select %4290, %3679, %4299 : tensor<i1>, tensor<512x768xf32>
    %4301 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4302 = stablehlo.divide %3677, %4301 : tensor<2x768xf32>
    %4303 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %4304 = stablehlo.multiply %4302, %4303 : tensor<2x768xf32>
    %4305 = stablehlo.select %4290, %3677, %4304 : tensor<i1>, tensor<2x768xf32>
    %4306 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4307 = stablehlo.divide %3658, %4306 : tensor<768xf32>
    %4308 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4309 = stablehlo.multiply %4307, %4308 : tensor<768xf32>
    %4310 = stablehlo.select %4290, %3658, %4309 : tensor<i1>, tensor<768xf32>
    %4311 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4312 = stablehlo.divide %3652, %4311 : tensor<768xf32>
    %4313 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4314 = stablehlo.multiply %4312, %4313 : tensor<768xf32>
    %4315 = stablehlo.select %4290, %3652, %4314 : tensor<i1>, tensor<768xf32>
    %4316 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4317 = stablehlo.divide %3649, %4316 : tensor<768x768xf32>
    %4318 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4319 = stablehlo.multiply %4317, %4318 : tensor<768x768xf32>
    %4320 = stablehlo.select %4290, %3649, %4319 : tensor<i1>, tensor<768x768xf32>
    %4321 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4322 = stablehlo.divide %3644, %4321 : tensor<768xf32>
    %4323 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4324 = stablehlo.multiply %4322, %4323 : tensor<768xf32>
    %4325 = stablehlo.select %4290, %3644, %4324 : tensor<i1>, tensor<768xf32>
    %4326 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4327 = stablehlo.divide %3633, %4326 : tensor<768x768xf32>
    %4328 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4329 = stablehlo.multiply %4327, %4328 : tensor<768x768xf32>
    %4330 = stablehlo.select %4290, %3633, %4329 : tensor<i1>, tensor<768x768xf32>
    %4331 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4332 = stablehlo.divide %3628, %4331 : tensor<768xf32>
    %4333 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4334 = stablehlo.multiply %4332, %4333 : tensor<768xf32>
    %4335 = stablehlo.select %4290, %3628, %4334 : tensor<i1>, tensor<768xf32>
    %4336 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4337 = stablehlo.divide %3641, %4336 : tensor<768x768xf32>
    %4338 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4339 = stablehlo.multiply %4337, %4338 : tensor<768x768xf32>
    %4340 = stablehlo.select %4290, %3641, %4339 : tensor<i1>, tensor<768x768xf32>
    %4341 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4342 = stablehlo.divide %3636, %4341 : tensor<768xf32>
    %4343 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4344 = stablehlo.multiply %4342, %4343 : tensor<768xf32>
    %4345 = stablehlo.select %4290, %3636, %4344 : tensor<i1>, tensor<768xf32>
    %4346 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4347 = stablehlo.divide %3596, %4346 : tensor<768x768xf32>
    %4348 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4349 = stablehlo.multiply %4347, %4348 : tensor<768x768xf32>
    %4350 = stablehlo.select %4290, %3596, %4349 : tensor<i1>, tensor<768x768xf32>
    %4351 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4352 = stablehlo.divide %3592, %4351 : tensor<768xf32>
    %4353 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4354 = stablehlo.multiply %4352, %4353 : tensor<768xf32>
    %4355 = stablehlo.select %4290, %3592, %4354 : tensor<i1>, tensor<768xf32>
    %4356 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4357 = stablehlo.divide %3572, %4356 : tensor<768xf32>
    %4358 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4359 = stablehlo.multiply %4357, %4358 : tensor<768xf32>
    %4360 = stablehlo.select %4290, %3572, %4359 : tensor<i1>, tensor<768xf32>
    %4361 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4362 = stablehlo.divide %3566, %4361 : tensor<768xf32>
    %4363 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4364 = stablehlo.multiply %4362, %4363 : tensor<768xf32>
    %4365 = stablehlo.select %4290, %3566, %4364 : tensor<i1>, tensor<768xf32>
    %4366 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4367 = stablehlo.divide %3563, %4366 : tensor<3072x768xf32>
    %4368 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4369 = stablehlo.multiply %4367, %4368 : tensor<3072x768xf32>
    %4370 = stablehlo.select %4290, %3563, %4369 : tensor<i1>, tensor<3072x768xf32>
    %4371 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4372 = stablehlo.divide %3558, %4371 : tensor<3072xf32>
    %4373 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4374 = stablehlo.multiply %4372, %4373 : tensor<3072xf32>
    %4375 = stablehlo.select %4290, %3558, %4374 : tensor<i1>, tensor<3072xf32>
    %4376 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4377 = stablehlo.divide %3541, %4376 : tensor<768x3072xf32>
    %4378 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4379 = stablehlo.multiply %4377, %4378 : tensor<768x3072xf32>
    %4380 = stablehlo.select %4290, %3541, %4379 : tensor<i1>, tensor<768x3072xf32>
    %4381 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4382 = stablehlo.divide %3537, %4381 : tensor<768xf32>
    %4383 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4384 = stablehlo.multiply %4382, %4383 : tensor<768xf32>
    %4385 = stablehlo.select %4290, %3537, %4384 : tensor<i1>, tensor<768xf32>
    %4386 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4387 = stablehlo.divide %3517, %4386 : tensor<768xf32>
    %4388 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4389 = stablehlo.multiply %4387, %4388 : tensor<768xf32>
    %4390 = stablehlo.select %4290, %3517, %4389 : tensor<i1>, tensor<768xf32>
    %4391 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4392 = stablehlo.divide %3511, %4391 : tensor<768xf32>
    %4393 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4394 = stablehlo.multiply %4392, %4393 : tensor<768xf32>
    %4395 = stablehlo.select %4290, %3511, %4394 : tensor<i1>, tensor<768xf32>
    %4396 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4397 = stablehlo.divide %3508, %4396 : tensor<768x768xf32>
    %4398 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4399 = stablehlo.multiply %4397, %4398 : tensor<768x768xf32>
    %4400 = stablehlo.select %4290, %3508, %4399 : tensor<i1>, tensor<768x768xf32>
    %4401 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4402 = stablehlo.divide %3503, %4401 : tensor<768xf32>
    %4403 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4404 = stablehlo.multiply %4402, %4403 : tensor<768xf32>
    %4405 = stablehlo.select %4290, %3503, %4404 : tensor<i1>, tensor<768xf32>
    %4406 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4407 = stablehlo.divide %3492, %4406 : tensor<768x768xf32>
    %4408 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4409 = stablehlo.multiply %4407, %4408 : tensor<768x768xf32>
    %4410 = stablehlo.select %4290, %3492, %4409 : tensor<i1>, tensor<768x768xf32>
    %4411 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4412 = stablehlo.divide %3487, %4411 : tensor<768xf32>
    %4413 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4414 = stablehlo.multiply %4412, %4413 : tensor<768xf32>
    %4415 = stablehlo.select %4290, %3487, %4414 : tensor<i1>, tensor<768xf32>
    %4416 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4417 = stablehlo.divide %3500, %4416 : tensor<768x768xf32>
    %4418 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4419 = stablehlo.multiply %4417, %4418 : tensor<768x768xf32>
    %4420 = stablehlo.select %4290, %3500, %4419 : tensor<i1>, tensor<768x768xf32>
    %4421 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4422 = stablehlo.divide %3495, %4421 : tensor<768xf32>
    %4423 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4424 = stablehlo.multiply %4422, %4423 : tensor<768xf32>
    %4425 = stablehlo.select %4290, %3495, %4424 : tensor<i1>, tensor<768xf32>
    %4426 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4427 = stablehlo.divide %3455, %4426 : tensor<768x768xf32>
    %4428 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4429 = stablehlo.multiply %4427, %4428 : tensor<768x768xf32>
    %4430 = stablehlo.select %4290, %3455, %4429 : tensor<i1>, tensor<768x768xf32>
    %4431 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4432 = stablehlo.divide %3451, %4431 : tensor<768xf32>
    %4433 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4434 = stablehlo.multiply %4432, %4433 : tensor<768xf32>
    %4435 = stablehlo.select %4290, %3451, %4434 : tensor<i1>, tensor<768xf32>
    %4436 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4437 = stablehlo.divide %3431, %4436 : tensor<768xf32>
    %4438 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4439 = stablehlo.multiply %4437, %4438 : tensor<768xf32>
    %4440 = stablehlo.select %4290, %3431, %4439 : tensor<i1>, tensor<768xf32>
    %4441 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4442 = stablehlo.divide %3425, %4441 : tensor<768xf32>
    %4443 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4444 = stablehlo.multiply %4442, %4443 : tensor<768xf32>
    %4445 = stablehlo.select %4290, %3425, %4444 : tensor<i1>, tensor<768xf32>
    %4446 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4447 = stablehlo.divide %3422, %4446 : tensor<3072x768xf32>
    %4448 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4449 = stablehlo.multiply %4447, %4448 : tensor<3072x768xf32>
    %4450 = stablehlo.select %4290, %3422, %4449 : tensor<i1>, tensor<3072x768xf32>
    %4451 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4452 = stablehlo.divide %3417, %4451 : tensor<3072xf32>
    %4453 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4454 = stablehlo.multiply %4452, %4453 : tensor<3072xf32>
    %4455 = stablehlo.select %4290, %3417, %4454 : tensor<i1>, tensor<3072xf32>
    %4456 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4457 = stablehlo.divide %3400, %4456 : tensor<768x3072xf32>
    %4458 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4459 = stablehlo.multiply %4457, %4458 : tensor<768x3072xf32>
    %4460 = stablehlo.select %4290, %3400, %4459 : tensor<i1>, tensor<768x3072xf32>
    %4461 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4462 = stablehlo.divide %3396, %4461 : tensor<768xf32>
    %4463 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4464 = stablehlo.multiply %4462, %4463 : tensor<768xf32>
    %4465 = stablehlo.select %4290, %3396, %4464 : tensor<i1>, tensor<768xf32>
    %4466 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4467 = stablehlo.divide %3376, %4466 : tensor<768xf32>
    %4468 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4469 = stablehlo.multiply %4467, %4468 : tensor<768xf32>
    %4470 = stablehlo.select %4290, %3376, %4469 : tensor<i1>, tensor<768xf32>
    %4471 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4472 = stablehlo.divide %3370, %4471 : tensor<768xf32>
    %4473 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4474 = stablehlo.multiply %4472, %4473 : tensor<768xf32>
    %4475 = stablehlo.select %4290, %3370, %4474 : tensor<i1>, tensor<768xf32>
    %4476 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4477 = stablehlo.divide %3367, %4476 : tensor<768x768xf32>
    %4478 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4479 = stablehlo.multiply %4477, %4478 : tensor<768x768xf32>
    %4480 = stablehlo.select %4290, %3367, %4479 : tensor<i1>, tensor<768x768xf32>
    %4481 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4482 = stablehlo.divide %3362, %4481 : tensor<768xf32>
    %4483 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4484 = stablehlo.multiply %4482, %4483 : tensor<768xf32>
    %4485 = stablehlo.select %4290, %3362, %4484 : tensor<i1>, tensor<768xf32>
    %4486 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4487 = stablehlo.divide %3351, %4486 : tensor<768x768xf32>
    %4488 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4489 = stablehlo.multiply %4487, %4488 : tensor<768x768xf32>
    %4490 = stablehlo.select %4290, %3351, %4489 : tensor<i1>, tensor<768x768xf32>
    %4491 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4492 = stablehlo.divide %3346, %4491 : tensor<768xf32>
    %4493 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4494 = stablehlo.multiply %4492, %4493 : tensor<768xf32>
    %4495 = stablehlo.select %4290, %3346, %4494 : tensor<i1>, tensor<768xf32>
    %4496 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4497 = stablehlo.divide %3359, %4496 : tensor<768x768xf32>
    %4498 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4499 = stablehlo.multiply %4497, %4498 : tensor<768x768xf32>
    %4500 = stablehlo.select %4290, %3359, %4499 : tensor<i1>, tensor<768x768xf32>
    %4501 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4502 = stablehlo.divide %3354, %4501 : tensor<768xf32>
    %4503 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4504 = stablehlo.multiply %4502, %4503 : tensor<768xf32>
    %4505 = stablehlo.select %4290, %3354, %4504 : tensor<i1>, tensor<768xf32>
    %4506 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4507 = stablehlo.divide %3314, %4506 : tensor<768x768xf32>
    %4508 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4509 = stablehlo.multiply %4507, %4508 : tensor<768x768xf32>
    %4510 = stablehlo.select %4290, %3314, %4509 : tensor<i1>, tensor<768x768xf32>
    %4511 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4512 = stablehlo.divide %3310, %4511 : tensor<768xf32>
    %4513 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4514 = stablehlo.multiply %4512, %4513 : tensor<768xf32>
    %4515 = stablehlo.select %4290, %3310, %4514 : tensor<i1>, tensor<768xf32>
    %4516 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4517 = stablehlo.divide %3290, %4516 : tensor<768xf32>
    %4518 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4519 = stablehlo.multiply %4517, %4518 : tensor<768xf32>
    %4520 = stablehlo.select %4290, %3290, %4519 : tensor<i1>, tensor<768xf32>
    %4521 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4522 = stablehlo.divide %3284, %4521 : tensor<768xf32>
    %4523 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4524 = stablehlo.multiply %4522, %4523 : tensor<768xf32>
    %4525 = stablehlo.select %4290, %3284, %4524 : tensor<i1>, tensor<768xf32>
    %4526 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4527 = stablehlo.divide %3281, %4526 : tensor<3072x768xf32>
    %4528 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4529 = stablehlo.multiply %4527, %4528 : tensor<3072x768xf32>
    %4530 = stablehlo.select %4290, %3281, %4529 : tensor<i1>, tensor<3072x768xf32>
    %4531 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4532 = stablehlo.divide %3276, %4531 : tensor<3072xf32>
    %4533 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4534 = stablehlo.multiply %4532, %4533 : tensor<3072xf32>
    %4535 = stablehlo.select %4290, %3276, %4534 : tensor<i1>, tensor<3072xf32>
    %4536 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4537 = stablehlo.divide %3259, %4536 : tensor<768x3072xf32>
    %4538 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4539 = stablehlo.multiply %4537, %4538 : tensor<768x3072xf32>
    %4540 = stablehlo.select %4290, %3259, %4539 : tensor<i1>, tensor<768x3072xf32>
    %4541 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4542 = stablehlo.divide %3255, %4541 : tensor<768xf32>
    %4543 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4544 = stablehlo.multiply %4542, %4543 : tensor<768xf32>
    %4545 = stablehlo.select %4290, %3255, %4544 : tensor<i1>, tensor<768xf32>
    %4546 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4547 = stablehlo.divide %3235, %4546 : tensor<768xf32>
    %4548 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4549 = stablehlo.multiply %4547, %4548 : tensor<768xf32>
    %4550 = stablehlo.select %4290, %3235, %4549 : tensor<i1>, tensor<768xf32>
    %4551 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4552 = stablehlo.divide %3229, %4551 : tensor<768xf32>
    %4553 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4554 = stablehlo.multiply %4552, %4553 : tensor<768xf32>
    %4555 = stablehlo.select %4290, %3229, %4554 : tensor<i1>, tensor<768xf32>
    %4556 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4557 = stablehlo.divide %3226, %4556 : tensor<768x768xf32>
    %4558 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4559 = stablehlo.multiply %4557, %4558 : tensor<768x768xf32>
    %4560 = stablehlo.select %4290, %3226, %4559 : tensor<i1>, tensor<768x768xf32>
    %4561 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4562 = stablehlo.divide %3221, %4561 : tensor<768xf32>
    %4563 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4564 = stablehlo.multiply %4562, %4563 : tensor<768xf32>
    %4565 = stablehlo.select %4290, %3221, %4564 : tensor<i1>, tensor<768xf32>
    %4566 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4567 = stablehlo.divide %3210, %4566 : tensor<768x768xf32>
    %4568 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4569 = stablehlo.multiply %4567, %4568 : tensor<768x768xf32>
    %4570 = stablehlo.select %4290, %3210, %4569 : tensor<i1>, tensor<768x768xf32>
    %4571 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4572 = stablehlo.divide %3205, %4571 : tensor<768xf32>
    %4573 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4574 = stablehlo.multiply %4572, %4573 : tensor<768xf32>
    %4575 = stablehlo.select %4290, %3205, %4574 : tensor<i1>, tensor<768xf32>
    %4576 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4577 = stablehlo.divide %3218, %4576 : tensor<768x768xf32>
    %4578 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4579 = stablehlo.multiply %4577, %4578 : tensor<768x768xf32>
    %4580 = stablehlo.select %4290, %3218, %4579 : tensor<i1>, tensor<768x768xf32>
    %4581 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4582 = stablehlo.divide %3213, %4581 : tensor<768xf32>
    %4583 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4584 = stablehlo.multiply %4582, %4583 : tensor<768xf32>
    %4585 = stablehlo.select %4290, %3213, %4584 : tensor<i1>, tensor<768xf32>
    %4586 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4587 = stablehlo.divide %3173, %4586 : tensor<768x768xf32>
    %4588 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4589 = stablehlo.multiply %4587, %4588 : tensor<768x768xf32>
    %4590 = stablehlo.select %4290, %3173, %4589 : tensor<i1>, tensor<768x768xf32>
    %4591 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4592 = stablehlo.divide %3169, %4591 : tensor<768xf32>
    %4593 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4594 = stablehlo.multiply %4592, %4593 : tensor<768xf32>
    %4595 = stablehlo.select %4290, %3169, %4594 : tensor<i1>, tensor<768xf32>
    %4596 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4597 = stablehlo.divide %3149, %4596 : tensor<768xf32>
    %4598 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4599 = stablehlo.multiply %4597, %4598 : tensor<768xf32>
    %4600 = stablehlo.select %4290, %3149, %4599 : tensor<i1>, tensor<768xf32>
    %4601 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4602 = stablehlo.divide %3143, %4601 : tensor<768xf32>
    %4603 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4604 = stablehlo.multiply %4602, %4603 : tensor<768xf32>
    %4605 = stablehlo.select %4290, %3143, %4604 : tensor<i1>, tensor<768xf32>
    %4606 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4607 = stablehlo.divide %3140, %4606 : tensor<3072x768xf32>
    %4608 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4609 = stablehlo.multiply %4607, %4608 : tensor<3072x768xf32>
    %4610 = stablehlo.select %4290, %3140, %4609 : tensor<i1>, tensor<3072x768xf32>
    %4611 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4612 = stablehlo.divide %3135, %4611 : tensor<3072xf32>
    %4613 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4614 = stablehlo.multiply %4612, %4613 : tensor<3072xf32>
    %4615 = stablehlo.select %4290, %3135, %4614 : tensor<i1>, tensor<3072xf32>
    %4616 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4617 = stablehlo.divide %3118, %4616 : tensor<768x3072xf32>
    %4618 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4619 = stablehlo.multiply %4617, %4618 : tensor<768x3072xf32>
    %4620 = stablehlo.select %4290, %3118, %4619 : tensor<i1>, tensor<768x3072xf32>
    %4621 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4622 = stablehlo.divide %3114, %4621 : tensor<768xf32>
    %4623 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4624 = stablehlo.multiply %4622, %4623 : tensor<768xf32>
    %4625 = stablehlo.select %4290, %3114, %4624 : tensor<i1>, tensor<768xf32>
    %4626 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4627 = stablehlo.divide %3094, %4626 : tensor<768xf32>
    %4628 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4629 = stablehlo.multiply %4627, %4628 : tensor<768xf32>
    %4630 = stablehlo.select %4290, %3094, %4629 : tensor<i1>, tensor<768xf32>
    %4631 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4632 = stablehlo.divide %3088, %4631 : tensor<768xf32>
    %4633 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4634 = stablehlo.multiply %4632, %4633 : tensor<768xf32>
    %4635 = stablehlo.select %4290, %3088, %4634 : tensor<i1>, tensor<768xf32>
    %4636 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4637 = stablehlo.divide %3085, %4636 : tensor<768x768xf32>
    %4638 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4639 = stablehlo.multiply %4637, %4638 : tensor<768x768xf32>
    %4640 = stablehlo.select %4290, %3085, %4639 : tensor<i1>, tensor<768x768xf32>
    %4641 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4642 = stablehlo.divide %3080, %4641 : tensor<768xf32>
    %4643 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4644 = stablehlo.multiply %4642, %4643 : tensor<768xf32>
    %4645 = stablehlo.select %4290, %3080, %4644 : tensor<i1>, tensor<768xf32>
    %4646 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4647 = stablehlo.divide %3069, %4646 : tensor<768x768xf32>
    %4648 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4649 = stablehlo.multiply %4647, %4648 : tensor<768x768xf32>
    %4650 = stablehlo.select %4290, %3069, %4649 : tensor<i1>, tensor<768x768xf32>
    %4651 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4652 = stablehlo.divide %3064, %4651 : tensor<768xf32>
    %4653 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4654 = stablehlo.multiply %4652, %4653 : tensor<768xf32>
    %4655 = stablehlo.select %4290, %3064, %4654 : tensor<i1>, tensor<768xf32>
    %4656 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4657 = stablehlo.divide %3077, %4656 : tensor<768x768xf32>
    %4658 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4659 = stablehlo.multiply %4657, %4658 : tensor<768x768xf32>
    %4660 = stablehlo.select %4290, %3077, %4659 : tensor<i1>, tensor<768x768xf32>
    %4661 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4662 = stablehlo.divide %3072, %4661 : tensor<768xf32>
    %4663 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4664 = stablehlo.multiply %4662, %4663 : tensor<768xf32>
    %4665 = stablehlo.select %4290, %3072, %4664 : tensor<i1>, tensor<768xf32>
    %4666 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4667 = stablehlo.divide %3032, %4666 : tensor<768x768xf32>
    %4668 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4669 = stablehlo.multiply %4667, %4668 : tensor<768x768xf32>
    %4670 = stablehlo.select %4290, %3032, %4669 : tensor<i1>, tensor<768x768xf32>
    %4671 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4672 = stablehlo.divide %3028, %4671 : tensor<768xf32>
    %4673 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4674 = stablehlo.multiply %4672, %4673 : tensor<768xf32>
    %4675 = stablehlo.select %4290, %3028, %4674 : tensor<i1>, tensor<768xf32>
    %4676 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4677 = stablehlo.divide %3008, %4676 : tensor<768xf32>
    %4678 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4679 = stablehlo.multiply %4677, %4678 : tensor<768xf32>
    %4680 = stablehlo.select %4290, %3008, %4679 : tensor<i1>, tensor<768xf32>
    %4681 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4682 = stablehlo.divide %3002, %4681 : tensor<768xf32>
    %4683 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4684 = stablehlo.multiply %4682, %4683 : tensor<768xf32>
    %4685 = stablehlo.select %4290, %3002, %4684 : tensor<i1>, tensor<768xf32>
    %4686 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4687 = stablehlo.divide %2999, %4686 : tensor<3072x768xf32>
    %4688 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4689 = stablehlo.multiply %4687, %4688 : tensor<3072x768xf32>
    %4690 = stablehlo.select %4290, %2999, %4689 : tensor<i1>, tensor<3072x768xf32>
    %4691 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4692 = stablehlo.divide %2994, %4691 : tensor<3072xf32>
    %4693 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4694 = stablehlo.multiply %4692, %4693 : tensor<3072xf32>
    %4695 = stablehlo.select %4290, %2994, %4694 : tensor<i1>, tensor<3072xf32>
    %4696 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4697 = stablehlo.divide %2977, %4696 : tensor<768x3072xf32>
    %4698 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4699 = stablehlo.multiply %4697, %4698 : tensor<768x3072xf32>
    %4700 = stablehlo.select %4290, %2977, %4699 : tensor<i1>, tensor<768x3072xf32>
    %4701 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4702 = stablehlo.divide %2973, %4701 : tensor<768xf32>
    %4703 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4704 = stablehlo.multiply %4702, %4703 : tensor<768xf32>
    %4705 = stablehlo.select %4290, %2973, %4704 : tensor<i1>, tensor<768xf32>
    %4706 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4707 = stablehlo.divide %2953, %4706 : tensor<768xf32>
    %4708 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4709 = stablehlo.multiply %4707, %4708 : tensor<768xf32>
    %4710 = stablehlo.select %4290, %2953, %4709 : tensor<i1>, tensor<768xf32>
    %4711 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4712 = stablehlo.divide %2947, %4711 : tensor<768xf32>
    %4713 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4714 = stablehlo.multiply %4712, %4713 : tensor<768xf32>
    %4715 = stablehlo.select %4290, %2947, %4714 : tensor<i1>, tensor<768xf32>
    %4716 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4717 = stablehlo.divide %2944, %4716 : tensor<768x768xf32>
    %4718 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4719 = stablehlo.multiply %4717, %4718 : tensor<768x768xf32>
    %4720 = stablehlo.select %4290, %2944, %4719 : tensor<i1>, tensor<768x768xf32>
    %4721 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4722 = stablehlo.divide %2939, %4721 : tensor<768xf32>
    %4723 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4724 = stablehlo.multiply %4722, %4723 : tensor<768xf32>
    %4725 = stablehlo.select %4290, %2939, %4724 : tensor<i1>, tensor<768xf32>
    %4726 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4727 = stablehlo.divide %2928, %4726 : tensor<768x768xf32>
    %4728 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4729 = stablehlo.multiply %4727, %4728 : tensor<768x768xf32>
    %4730 = stablehlo.select %4290, %2928, %4729 : tensor<i1>, tensor<768x768xf32>
    %4731 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4732 = stablehlo.divide %2923, %4731 : tensor<768xf32>
    %4733 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4734 = stablehlo.multiply %4732, %4733 : tensor<768xf32>
    %4735 = stablehlo.select %4290, %2923, %4734 : tensor<i1>, tensor<768xf32>
    %4736 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4737 = stablehlo.divide %2936, %4736 : tensor<768x768xf32>
    %4738 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4739 = stablehlo.multiply %4737, %4738 : tensor<768x768xf32>
    %4740 = stablehlo.select %4290, %2936, %4739 : tensor<i1>, tensor<768x768xf32>
    %4741 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4742 = stablehlo.divide %2931, %4741 : tensor<768xf32>
    %4743 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4744 = stablehlo.multiply %4742, %4743 : tensor<768xf32>
    %4745 = stablehlo.select %4290, %2931, %4744 : tensor<i1>, tensor<768xf32>
    %4746 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4747 = stablehlo.divide %2891, %4746 : tensor<768x768xf32>
    %4748 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4749 = stablehlo.multiply %4747, %4748 : tensor<768x768xf32>
    %4750 = stablehlo.select %4290, %2891, %4749 : tensor<i1>, tensor<768x768xf32>
    %4751 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4752 = stablehlo.divide %2887, %4751 : tensor<768xf32>
    %4753 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4754 = stablehlo.multiply %4752, %4753 : tensor<768xf32>
    %4755 = stablehlo.select %4290, %2887, %4754 : tensor<i1>, tensor<768xf32>
    %4756 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4757 = stablehlo.divide %2867, %4756 : tensor<768xf32>
    %4758 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4759 = stablehlo.multiply %4757, %4758 : tensor<768xf32>
    %4760 = stablehlo.select %4290, %2867, %4759 : tensor<i1>, tensor<768xf32>
    %4761 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4762 = stablehlo.divide %2861, %4761 : tensor<768xf32>
    %4763 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4764 = stablehlo.multiply %4762, %4763 : tensor<768xf32>
    %4765 = stablehlo.select %4290, %2861, %4764 : tensor<i1>, tensor<768xf32>
    %4766 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4767 = stablehlo.divide %2858, %4766 : tensor<3072x768xf32>
    %4768 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4769 = stablehlo.multiply %4767, %4768 : tensor<3072x768xf32>
    %4770 = stablehlo.select %4290, %2858, %4769 : tensor<i1>, tensor<3072x768xf32>
    %4771 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4772 = stablehlo.divide %2853, %4771 : tensor<3072xf32>
    %4773 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4774 = stablehlo.multiply %4772, %4773 : tensor<3072xf32>
    %4775 = stablehlo.select %4290, %2853, %4774 : tensor<i1>, tensor<3072xf32>
    %4776 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4777 = stablehlo.divide %2836, %4776 : tensor<768x3072xf32>
    %4778 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4779 = stablehlo.multiply %4777, %4778 : tensor<768x3072xf32>
    %4780 = stablehlo.select %4290, %2836, %4779 : tensor<i1>, tensor<768x3072xf32>
    %4781 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4782 = stablehlo.divide %2832, %4781 : tensor<768xf32>
    %4783 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4784 = stablehlo.multiply %4782, %4783 : tensor<768xf32>
    %4785 = stablehlo.select %4290, %2832, %4784 : tensor<i1>, tensor<768xf32>
    %4786 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4787 = stablehlo.divide %2812, %4786 : tensor<768xf32>
    %4788 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4789 = stablehlo.multiply %4787, %4788 : tensor<768xf32>
    %4790 = stablehlo.select %4290, %2812, %4789 : tensor<i1>, tensor<768xf32>
    %4791 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4792 = stablehlo.divide %2806, %4791 : tensor<768xf32>
    %4793 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4794 = stablehlo.multiply %4792, %4793 : tensor<768xf32>
    %4795 = stablehlo.select %4290, %2806, %4794 : tensor<i1>, tensor<768xf32>
    %4796 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4797 = stablehlo.divide %2803, %4796 : tensor<768x768xf32>
    %4798 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4799 = stablehlo.multiply %4797, %4798 : tensor<768x768xf32>
    %4800 = stablehlo.select %4290, %2803, %4799 : tensor<i1>, tensor<768x768xf32>
    %4801 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4802 = stablehlo.divide %2798, %4801 : tensor<768xf32>
    %4803 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4804 = stablehlo.multiply %4802, %4803 : tensor<768xf32>
    %4805 = stablehlo.select %4290, %2798, %4804 : tensor<i1>, tensor<768xf32>
    %4806 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4807 = stablehlo.divide %2787, %4806 : tensor<768x768xf32>
    %4808 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4809 = stablehlo.multiply %4807, %4808 : tensor<768x768xf32>
    %4810 = stablehlo.select %4290, %2787, %4809 : tensor<i1>, tensor<768x768xf32>
    %4811 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4812 = stablehlo.divide %2782, %4811 : tensor<768xf32>
    %4813 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4814 = stablehlo.multiply %4812, %4813 : tensor<768xf32>
    %4815 = stablehlo.select %4290, %2782, %4814 : tensor<i1>, tensor<768xf32>
    %4816 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4817 = stablehlo.divide %2795, %4816 : tensor<768x768xf32>
    %4818 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4819 = stablehlo.multiply %4817, %4818 : tensor<768x768xf32>
    %4820 = stablehlo.select %4290, %2795, %4819 : tensor<i1>, tensor<768x768xf32>
    %4821 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4822 = stablehlo.divide %2790, %4821 : tensor<768xf32>
    %4823 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4824 = stablehlo.multiply %4822, %4823 : tensor<768xf32>
    %4825 = stablehlo.select %4290, %2790, %4824 : tensor<i1>, tensor<768xf32>
    %4826 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4827 = stablehlo.divide %2750, %4826 : tensor<768x768xf32>
    %4828 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4829 = stablehlo.multiply %4827, %4828 : tensor<768x768xf32>
    %4830 = stablehlo.select %4290, %2750, %4829 : tensor<i1>, tensor<768x768xf32>
    %4831 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4832 = stablehlo.divide %2746, %4831 : tensor<768xf32>
    %4833 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4834 = stablehlo.multiply %4832, %4833 : tensor<768xf32>
    %4835 = stablehlo.select %4290, %2746, %4834 : tensor<i1>, tensor<768xf32>
    %4836 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4837 = stablehlo.divide %2726, %4836 : tensor<768xf32>
    %4838 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4839 = stablehlo.multiply %4837, %4838 : tensor<768xf32>
    %4840 = stablehlo.select %4290, %2726, %4839 : tensor<i1>, tensor<768xf32>
    %4841 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4842 = stablehlo.divide %2720, %4841 : tensor<768xf32>
    %4843 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4844 = stablehlo.multiply %4842, %4843 : tensor<768xf32>
    %4845 = stablehlo.select %4290, %2720, %4844 : tensor<i1>, tensor<768xf32>
    %4846 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4847 = stablehlo.divide %2717, %4846 : tensor<3072x768xf32>
    %4848 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4849 = stablehlo.multiply %4847, %4848 : tensor<3072x768xf32>
    %4850 = stablehlo.select %4290, %2717, %4849 : tensor<i1>, tensor<3072x768xf32>
    %4851 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4852 = stablehlo.divide %2712, %4851 : tensor<3072xf32>
    %4853 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4854 = stablehlo.multiply %4852, %4853 : tensor<3072xf32>
    %4855 = stablehlo.select %4290, %2712, %4854 : tensor<i1>, tensor<3072xf32>
    %4856 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4857 = stablehlo.divide %2695, %4856 : tensor<768x3072xf32>
    %4858 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4859 = stablehlo.multiply %4857, %4858 : tensor<768x3072xf32>
    %4860 = stablehlo.select %4290, %2695, %4859 : tensor<i1>, tensor<768x3072xf32>
    %4861 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4862 = stablehlo.divide %2691, %4861 : tensor<768xf32>
    %4863 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4864 = stablehlo.multiply %4862, %4863 : tensor<768xf32>
    %4865 = stablehlo.select %4290, %2691, %4864 : tensor<i1>, tensor<768xf32>
    %4866 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4867 = stablehlo.divide %2671, %4866 : tensor<768xf32>
    %4868 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4869 = stablehlo.multiply %4867, %4868 : tensor<768xf32>
    %4870 = stablehlo.select %4290, %2671, %4869 : tensor<i1>, tensor<768xf32>
    %4871 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4872 = stablehlo.divide %2665, %4871 : tensor<768xf32>
    %4873 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4874 = stablehlo.multiply %4872, %4873 : tensor<768xf32>
    %4875 = stablehlo.select %4290, %2665, %4874 : tensor<i1>, tensor<768xf32>
    %4876 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4877 = stablehlo.divide %2662, %4876 : tensor<768x768xf32>
    %4878 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4879 = stablehlo.multiply %4877, %4878 : tensor<768x768xf32>
    %4880 = stablehlo.select %4290, %2662, %4879 : tensor<i1>, tensor<768x768xf32>
    %4881 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4882 = stablehlo.divide %2657, %4881 : tensor<768xf32>
    %4883 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4884 = stablehlo.multiply %4882, %4883 : tensor<768xf32>
    %4885 = stablehlo.select %4290, %2657, %4884 : tensor<i1>, tensor<768xf32>
    %4886 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4887 = stablehlo.divide %2646, %4886 : tensor<768x768xf32>
    %4888 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4889 = stablehlo.multiply %4887, %4888 : tensor<768x768xf32>
    %4890 = stablehlo.select %4290, %2646, %4889 : tensor<i1>, tensor<768x768xf32>
    %4891 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4892 = stablehlo.divide %2641, %4891 : tensor<768xf32>
    %4893 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4894 = stablehlo.multiply %4892, %4893 : tensor<768xf32>
    %4895 = stablehlo.select %4290, %2641, %4894 : tensor<i1>, tensor<768xf32>
    %4896 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4897 = stablehlo.divide %2654, %4896 : tensor<768x768xf32>
    %4898 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4899 = stablehlo.multiply %4897, %4898 : tensor<768x768xf32>
    %4900 = stablehlo.select %4290, %2654, %4899 : tensor<i1>, tensor<768x768xf32>
    %4901 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4902 = stablehlo.divide %2649, %4901 : tensor<768xf32>
    %4903 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4904 = stablehlo.multiply %4902, %4903 : tensor<768xf32>
    %4905 = stablehlo.select %4290, %2649, %4904 : tensor<i1>, tensor<768xf32>
    %4906 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4907 = stablehlo.divide %2609, %4906 : tensor<768x768xf32>
    %4908 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4909 = stablehlo.multiply %4907, %4908 : tensor<768x768xf32>
    %4910 = stablehlo.select %4290, %2609, %4909 : tensor<i1>, tensor<768x768xf32>
    %4911 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4912 = stablehlo.divide %2605, %4911 : tensor<768xf32>
    %4913 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4914 = stablehlo.multiply %4912, %4913 : tensor<768xf32>
    %4915 = stablehlo.select %4290, %2605, %4914 : tensor<i1>, tensor<768xf32>
    %4916 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4917 = stablehlo.divide %2585, %4916 : tensor<768xf32>
    %4918 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4919 = stablehlo.multiply %4917, %4918 : tensor<768xf32>
    %4920 = stablehlo.select %4290, %2585, %4919 : tensor<i1>, tensor<768xf32>
    %4921 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4922 = stablehlo.divide %2579, %4921 : tensor<768xf32>
    %4923 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4924 = stablehlo.multiply %4922, %4923 : tensor<768xf32>
    %4925 = stablehlo.select %4290, %2579, %4924 : tensor<i1>, tensor<768xf32>
    %4926 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4927 = stablehlo.divide %2576, %4926 : tensor<3072x768xf32>
    %4928 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %4929 = stablehlo.multiply %4927, %4928 : tensor<3072x768xf32>
    %4930 = stablehlo.select %4290, %2576, %4929 : tensor<i1>, tensor<3072x768xf32>
    %4931 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4932 = stablehlo.divide %2571, %4931 : tensor<3072xf32>
    %4933 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %4934 = stablehlo.multiply %4932, %4933 : tensor<3072xf32>
    %4935 = stablehlo.select %4290, %2571, %4934 : tensor<i1>, tensor<3072xf32>
    %4936 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4937 = stablehlo.divide %2554, %4936 : tensor<768x3072xf32>
    %4938 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %4939 = stablehlo.multiply %4937, %4938 : tensor<768x3072xf32>
    %4940 = stablehlo.select %4290, %2554, %4939 : tensor<i1>, tensor<768x3072xf32>
    %4941 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4942 = stablehlo.divide %2550, %4941 : tensor<768xf32>
    %4943 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4944 = stablehlo.multiply %4942, %4943 : tensor<768xf32>
    %4945 = stablehlo.select %4290, %2550, %4944 : tensor<i1>, tensor<768xf32>
    %4946 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4947 = stablehlo.divide %2530, %4946 : tensor<768xf32>
    %4948 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4949 = stablehlo.multiply %4947, %4948 : tensor<768xf32>
    %4950 = stablehlo.select %4290, %2530, %4949 : tensor<i1>, tensor<768xf32>
    %4951 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4952 = stablehlo.divide %2524, %4951 : tensor<768xf32>
    %4953 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4954 = stablehlo.multiply %4952, %4953 : tensor<768xf32>
    %4955 = stablehlo.select %4290, %2524, %4954 : tensor<i1>, tensor<768xf32>
    %4956 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4957 = stablehlo.divide %2521, %4956 : tensor<768x768xf32>
    %4958 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4959 = stablehlo.multiply %4957, %4958 : tensor<768x768xf32>
    %4960 = stablehlo.select %4290, %2521, %4959 : tensor<i1>, tensor<768x768xf32>
    %4961 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4962 = stablehlo.divide %2516, %4961 : tensor<768xf32>
    %4963 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4964 = stablehlo.multiply %4962, %4963 : tensor<768xf32>
    %4965 = stablehlo.select %4290, %2516, %4964 : tensor<i1>, tensor<768xf32>
    %4966 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4967 = stablehlo.divide %2505, %4966 : tensor<768x768xf32>
    %4968 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4969 = stablehlo.multiply %4967, %4968 : tensor<768x768xf32>
    %4970 = stablehlo.select %4290, %2505, %4969 : tensor<i1>, tensor<768x768xf32>
    %4971 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4972 = stablehlo.divide %2500, %4971 : tensor<768xf32>
    %4973 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4974 = stablehlo.multiply %4972, %4973 : tensor<768xf32>
    %4975 = stablehlo.select %4290, %2500, %4974 : tensor<i1>, tensor<768xf32>
    %4976 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4977 = stablehlo.divide %2513, %4976 : tensor<768x768xf32>
    %4978 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4979 = stablehlo.multiply %4977, %4978 : tensor<768x768xf32>
    %4980 = stablehlo.select %4290, %2513, %4979 : tensor<i1>, tensor<768x768xf32>
    %4981 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4982 = stablehlo.divide %2508, %4981 : tensor<768xf32>
    %4983 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4984 = stablehlo.multiply %4982, %4983 : tensor<768xf32>
    %4985 = stablehlo.select %4290, %2508, %4984 : tensor<i1>, tensor<768xf32>
    %4986 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4987 = stablehlo.divide %2468, %4986 : tensor<768x768xf32>
    %4988 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %4989 = stablehlo.multiply %4987, %4988 : tensor<768x768xf32>
    %4990 = stablehlo.select %4290, %2468, %4989 : tensor<i1>, tensor<768x768xf32>
    %4991 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4992 = stablehlo.divide %2464, %4991 : tensor<768xf32>
    %4993 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4994 = stablehlo.multiply %4992, %4993 : tensor<768xf32>
    %4995 = stablehlo.select %4290, %2464, %4994 : tensor<i1>, tensor<768xf32>
    %4996 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4997 = stablehlo.divide %2444, %4996 : tensor<768xf32>
    %4998 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %4999 = stablehlo.multiply %4997, %4998 : tensor<768xf32>
    %5000 = stablehlo.select %4290, %2444, %4999 : tensor<i1>, tensor<768xf32>
    %5001 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5002 = stablehlo.divide %2438, %5001 : tensor<768xf32>
    %5003 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5004 = stablehlo.multiply %5002, %5003 : tensor<768xf32>
    %5005 = stablehlo.select %4290, %2438, %5004 : tensor<i1>, tensor<768xf32>
    %5006 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5007 = stablehlo.divide %2435, %5006 : tensor<3072x768xf32>
    %5008 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5009 = stablehlo.multiply %5007, %5008 : tensor<3072x768xf32>
    %5010 = stablehlo.select %4290, %2435, %5009 : tensor<i1>, tensor<3072x768xf32>
    %5011 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5012 = stablehlo.divide %2430, %5011 : tensor<3072xf32>
    %5013 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5014 = stablehlo.multiply %5012, %5013 : tensor<3072xf32>
    %5015 = stablehlo.select %4290, %2430, %5014 : tensor<i1>, tensor<3072xf32>
    %5016 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5017 = stablehlo.divide %2413, %5016 : tensor<768x3072xf32>
    %5018 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5019 = stablehlo.multiply %5017, %5018 : tensor<768x3072xf32>
    %5020 = stablehlo.select %4290, %2413, %5019 : tensor<i1>, tensor<768x3072xf32>
    %5021 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5022 = stablehlo.divide %2409, %5021 : tensor<768xf32>
    %5023 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5024 = stablehlo.multiply %5022, %5023 : tensor<768xf32>
    %5025 = stablehlo.select %4290, %2409, %5024 : tensor<i1>, tensor<768xf32>
    %5026 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5027 = stablehlo.divide %2389, %5026 : tensor<768xf32>
    %5028 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5029 = stablehlo.multiply %5027, %5028 : tensor<768xf32>
    %5030 = stablehlo.select %4290, %2389, %5029 : tensor<i1>, tensor<768xf32>
    %5031 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5032 = stablehlo.divide %2383, %5031 : tensor<768xf32>
    %5033 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5034 = stablehlo.multiply %5032, %5033 : tensor<768xf32>
    %5035 = stablehlo.select %4290, %2383, %5034 : tensor<i1>, tensor<768xf32>
    %5036 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5037 = stablehlo.divide %2380, %5036 : tensor<768x768xf32>
    %5038 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5039 = stablehlo.multiply %5037, %5038 : tensor<768x768xf32>
    %5040 = stablehlo.select %4290, %2380, %5039 : tensor<i1>, tensor<768x768xf32>
    %5041 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5042 = stablehlo.divide %2375, %5041 : tensor<768xf32>
    %5043 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5044 = stablehlo.multiply %5042, %5043 : tensor<768xf32>
    %5045 = stablehlo.select %4290, %2375, %5044 : tensor<i1>, tensor<768xf32>
    %5046 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5047 = stablehlo.divide %2364, %5046 : tensor<768x768xf32>
    %5048 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5049 = stablehlo.multiply %5047, %5048 : tensor<768x768xf32>
    %5050 = stablehlo.select %4290, %2364, %5049 : tensor<i1>, tensor<768x768xf32>
    %5051 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5052 = stablehlo.divide %2359, %5051 : tensor<768xf32>
    %5053 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5054 = stablehlo.multiply %5052, %5053 : tensor<768xf32>
    %5055 = stablehlo.select %4290, %2359, %5054 : tensor<i1>, tensor<768xf32>
    %5056 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5057 = stablehlo.divide %2372, %5056 : tensor<768x768xf32>
    %5058 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5059 = stablehlo.multiply %5057, %5058 : tensor<768x768xf32>
    %5060 = stablehlo.select %4290, %2372, %5059 : tensor<i1>, tensor<768x768xf32>
    %5061 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5062 = stablehlo.divide %2367, %5061 : tensor<768xf32>
    %5063 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5064 = stablehlo.multiply %5062, %5063 : tensor<768xf32>
    %5065 = stablehlo.select %4290, %2367, %5064 : tensor<i1>, tensor<768xf32>
    %5066 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5067 = stablehlo.divide %2327, %5066 : tensor<768x768xf32>
    %5068 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5069 = stablehlo.multiply %5067, %5068 : tensor<768x768xf32>
    %5070 = stablehlo.select %4290, %2327, %5069 : tensor<i1>, tensor<768x768xf32>
    %5071 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5072 = stablehlo.divide %2323, %5071 : tensor<768xf32>
    %5073 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5074 = stablehlo.multiply %5072, %5073 : tensor<768xf32>
    %5075 = stablehlo.select %4290, %2323, %5074 : tensor<i1>, tensor<768xf32>
    %5076 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5077 = stablehlo.divide %2303, %5076 : tensor<768xf32>
    %5078 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5079 = stablehlo.multiply %5077, %5078 : tensor<768xf32>
    %5080 = stablehlo.select %4290, %2303, %5079 : tensor<i1>, tensor<768xf32>
    %5081 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5082 = stablehlo.divide %2297, %5081 : tensor<768xf32>
    %5083 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5084 = stablehlo.multiply %5082, %5083 : tensor<768xf32>
    %5085 = stablehlo.select %4290, %2297, %5084 : tensor<i1>, tensor<768xf32>
    %5086 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5087 = stablehlo.divide %2294, %5086 : tensor<3072x768xf32>
    %5088 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5089 = stablehlo.multiply %5087, %5088 : tensor<3072x768xf32>
    %5090 = stablehlo.select %4290, %2294, %5089 : tensor<i1>, tensor<3072x768xf32>
    %5091 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5092 = stablehlo.divide %2289, %5091 : tensor<3072xf32>
    %5093 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5094 = stablehlo.multiply %5092, %5093 : tensor<3072xf32>
    %5095 = stablehlo.select %4290, %2289, %5094 : tensor<i1>, tensor<3072xf32>
    %5096 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5097 = stablehlo.divide %2272, %5096 : tensor<768x3072xf32>
    %5098 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5099 = stablehlo.multiply %5097, %5098 : tensor<768x3072xf32>
    %5100 = stablehlo.select %4290, %2272, %5099 : tensor<i1>, tensor<768x3072xf32>
    %5101 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5102 = stablehlo.divide %2268, %5101 : tensor<768xf32>
    %5103 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5104 = stablehlo.multiply %5102, %5103 : tensor<768xf32>
    %5105 = stablehlo.select %4290, %2268, %5104 : tensor<i1>, tensor<768xf32>
    %5106 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5107 = stablehlo.divide %2248, %5106 : tensor<768xf32>
    %5108 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5109 = stablehlo.multiply %5107, %5108 : tensor<768xf32>
    %5110 = stablehlo.select %4290, %2248, %5109 : tensor<i1>, tensor<768xf32>
    %5111 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5112 = stablehlo.divide %2242, %5111 : tensor<768xf32>
    %5113 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5114 = stablehlo.multiply %5112, %5113 : tensor<768xf32>
    %5115 = stablehlo.select %4290, %2242, %5114 : tensor<i1>, tensor<768xf32>
    %5116 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5117 = stablehlo.divide %2239, %5116 : tensor<768x768xf32>
    %5118 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5119 = stablehlo.multiply %5117, %5118 : tensor<768x768xf32>
    %5120 = stablehlo.select %4290, %2239, %5119 : tensor<i1>, tensor<768x768xf32>
    %5121 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5122 = stablehlo.divide %2234, %5121 : tensor<768xf32>
    %5123 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5124 = stablehlo.multiply %5122, %5123 : tensor<768xf32>
    %5125 = stablehlo.select %4290, %2234, %5124 : tensor<i1>, tensor<768xf32>
    %5126 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5127 = stablehlo.divide %2223, %5126 : tensor<768x768xf32>
    %5128 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5129 = stablehlo.multiply %5127, %5128 : tensor<768x768xf32>
    %5130 = stablehlo.select %4290, %2223, %5129 : tensor<i1>, tensor<768x768xf32>
    %5131 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5132 = stablehlo.divide %2218, %5131 : tensor<768xf32>
    %5133 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5134 = stablehlo.multiply %5132, %5133 : tensor<768xf32>
    %5135 = stablehlo.select %4290, %2218, %5134 : tensor<i1>, tensor<768xf32>
    %5136 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5137 = stablehlo.divide %2231, %5136 : tensor<768x768xf32>
    %5138 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5139 = stablehlo.multiply %5137, %5138 : tensor<768x768xf32>
    %5140 = stablehlo.select %4290, %2231, %5139 : tensor<i1>, tensor<768x768xf32>
    %5141 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5142 = stablehlo.divide %2226, %5141 : tensor<768xf32>
    %5143 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5144 = stablehlo.multiply %5142, %5143 : tensor<768xf32>
    %5145 = stablehlo.select %4290, %2226, %5144 : tensor<i1>, tensor<768xf32>
    %5146 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5147 = stablehlo.divide %2186, %5146 : tensor<768x768xf32>
    %5148 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5149 = stablehlo.multiply %5147, %5148 : tensor<768x768xf32>
    %5150 = stablehlo.select %4290, %2186, %5149 : tensor<i1>, tensor<768x768xf32>
    %5151 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5152 = stablehlo.divide %2182, %5151 : tensor<768xf32>
    %5153 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5154 = stablehlo.multiply %5152, %5153 : tensor<768xf32>
    %5155 = stablehlo.select %4290, %2182, %5154 : tensor<i1>, tensor<768xf32>
    %5156 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5157 = stablehlo.divide %2162, %5156 : tensor<768xf32>
    %5158 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5159 = stablehlo.multiply %5157, %5158 : tensor<768xf32>
    %5160 = stablehlo.select %4290, %2162, %5159 : tensor<i1>, tensor<768xf32>
    %5161 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5162 = stablehlo.divide %2156, %5161 : tensor<768xf32>
    %5163 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5164 = stablehlo.multiply %5162, %5163 : tensor<768xf32>
    %5165 = stablehlo.select %4290, %2156, %5164 : tensor<i1>, tensor<768xf32>
    %5166 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5167 = stablehlo.divide %2153, %5166 : tensor<3072x768xf32>
    %5168 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5169 = stablehlo.multiply %5167, %5168 : tensor<3072x768xf32>
    %5170 = stablehlo.select %4290, %2153, %5169 : tensor<i1>, tensor<3072x768xf32>
    %5171 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5172 = stablehlo.divide %2148, %5171 : tensor<3072xf32>
    %5173 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5174 = stablehlo.multiply %5172, %5173 : tensor<3072xf32>
    %5175 = stablehlo.select %4290, %2148, %5174 : tensor<i1>, tensor<3072xf32>
    %5176 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5177 = stablehlo.divide %2131, %5176 : tensor<768x3072xf32>
    %5178 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5179 = stablehlo.multiply %5177, %5178 : tensor<768x3072xf32>
    %5180 = stablehlo.select %4290, %2131, %5179 : tensor<i1>, tensor<768x3072xf32>
    %5181 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5182 = stablehlo.divide %2127, %5181 : tensor<768xf32>
    %5183 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5184 = stablehlo.multiply %5182, %5183 : tensor<768xf32>
    %5185 = stablehlo.select %4290, %2127, %5184 : tensor<i1>, tensor<768xf32>
    %5186 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5187 = stablehlo.divide %2107, %5186 : tensor<768xf32>
    %5188 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5189 = stablehlo.multiply %5187, %5188 : tensor<768xf32>
    %5190 = stablehlo.select %4290, %2107, %5189 : tensor<i1>, tensor<768xf32>
    %5191 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5192 = stablehlo.divide %2101, %5191 : tensor<768xf32>
    %5193 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5194 = stablehlo.multiply %5192, %5193 : tensor<768xf32>
    %5195 = stablehlo.select %4290, %2101, %5194 : tensor<i1>, tensor<768xf32>
    %5196 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5197 = stablehlo.divide %2098, %5196 : tensor<768x768xf32>
    %5198 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5199 = stablehlo.multiply %5197, %5198 : tensor<768x768xf32>
    %5200 = stablehlo.select %4290, %2098, %5199 : tensor<i1>, tensor<768x768xf32>
    %5201 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5202 = stablehlo.divide %2093, %5201 : tensor<768xf32>
    %5203 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5204 = stablehlo.multiply %5202, %5203 : tensor<768xf32>
    %5205 = stablehlo.select %4290, %2093, %5204 : tensor<i1>, tensor<768xf32>
    %5206 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5207 = stablehlo.divide %2082, %5206 : tensor<768x768xf32>
    %5208 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5209 = stablehlo.multiply %5207, %5208 : tensor<768x768xf32>
    %5210 = stablehlo.select %4290, %2082, %5209 : tensor<i1>, tensor<768x768xf32>
    %5211 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5212 = stablehlo.divide %2077, %5211 : tensor<768xf32>
    %5213 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5214 = stablehlo.multiply %5212, %5213 : tensor<768xf32>
    %5215 = stablehlo.select %4290, %2077, %5214 : tensor<i1>, tensor<768xf32>
    %5216 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5217 = stablehlo.divide %2090, %5216 : tensor<768x768xf32>
    %5218 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5219 = stablehlo.multiply %5217, %5218 : tensor<768x768xf32>
    %5220 = stablehlo.select %4290, %2090, %5219 : tensor<i1>, tensor<768x768xf32>
    %5221 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5222 = stablehlo.divide %2085, %5221 : tensor<768xf32>
    %5223 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5224 = stablehlo.multiply %5222, %5223 : tensor<768xf32>
    %5225 = stablehlo.select %4290, %2085, %5224 : tensor<i1>, tensor<768xf32>
    %5226 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5227 = stablehlo.divide %2045, %5226 : tensor<768x768xf32>
    %5228 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5229 = stablehlo.multiply %5227, %5228 : tensor<768x768xf32>
    %5230 = stablehlo.select %4290, %2045, %5229 : tensor<i1>, tensor<768x768xf32>
    %5231 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5232 = stablehlo.divide %2041, %5231 : tensor<768xf32>
    %5233 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5234 = stablehlo.multiply %5232, %5233 : tensor<768xf32>
    %5235 = stablehlo.select %4290, %2041, %5234 : tensor<i1>, tensor<768xf32>
    %5236 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5237 = stablehlo.divide %2021, %5236 : tensor<768xf32>
    %5238 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5239 = stablehlo.multiply %5237, %5238 : tensor<768xf32>
    %5240 = stablehlo.select %4290, %2021, %5239 : tensor<i1>, tensor<768xf32>
    %5241 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5242 = stablehlo.divide %2015, %5241 : tensor<768xf32>
    %5243 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5244 = stablehlo.multiply %5242, %5243 : tensor<768xf32>
    %5245 = stablehlo.select %4290, %2015, %5244 : tensor<i1>, tensor<768xf32>
    %5246 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5247 = stablehlo.divide %2012, %5246 : tensor<3072x768xf32>
    %5248 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5249 = stablehlo.multiply %5247, %5248 : tensor<3072x768xf32>
    %5250 = stablehlo.select %4290, %2012, %5249 : tensor<i1>, tensor<3072x768xf32>
    %5251 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5252 = stablehlo.divide %2007, %5251 : tensor<3072xf32>
    %5253 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5254 = stablehlo.multiply %5252, %5253 : tensor<3072xf32>
    %5255 = stablehlo.select %4290, %2007, %5254 : tensor<i1>, tensor<3072xf32>
    %5256 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5257 = stablehlo.divide %1990, %5256 : tensor<768x3072xf32>
    %5258 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5259 = stablehlo.multiply %5257, %5258 : tensor<768x3072xf32>
    %5260 = stablehlo.select %4290, %1990, %5259 : tensor<i1>, tensor<768x3072xf32>
    %5261 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5262 = stablehlo.divide %1986, %5261 : tensor<768xf32>
    %5263 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5264 = stablehlo.multiply %5262, %5263 : tensor<768xf32>
    %5265 = stablehlo.select %4290, %1986, %5264 : tensor<i1>, tensor<768xf32>
    %5266 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5267 = stablehlo.divide %1966, %5266 : tensor<768xf32>
    %5268 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5269 = stablehlo.multiply %5267, %5268 : tensor<768xf32>
    %5270 = stablehlo.select %4290, %1966, %5269 : tensor<i1>, tensor<768xf32>
    %5271 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5272 = stablehlo.divide %1960, %5271 : tensor<768xf32>
    %5273 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5274 = stablehlo.multiply %5272, %5273 : tensor<768xf32>
    %5275 = stablehlo.select %4290, %1960, %5274 : tensor<i1>, tensor<768xf32>
    %5276 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5277 = stablehlo.divide %1957, %5276 : tensor<768x768xf32>
    %5278 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5279 = stablehlo.multiply %5277, %5278 : tensor<768x768xf32>
    %5280 = stablehlo.select %4290, %1957, %5279 : tensor<i1>, tensor<768x768xf32>
    %5281 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5282 = stablehlo.divide %1953, %5281 : tensor<768xf32>
    %5283 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5284 = stablehlo.multiply %5282, %5283 : tensor<768xf32>
    %5285 = stablehlo.select %4290, %1953, %5284 : tensor<i1>, tensor<768xf32>
    %5286 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5287 = stablehlo.divide %1919, %5286 : tensor<768xf32>
    %5288 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5289 = stablehlo.multiply %5287, %5288 : tensor<768xf32>
    %5290 = stablehlo.select %4290, %1919, %5289 : tensor<i1>, tensor<768xf32>
    %5291 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5292 = stablehlo.divide %1913, %5291 : tensor<768xf32>
    %5293 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5294 = stablehlo.multiply %5292, %5293 : tensor<768xf32>
    %5295 = stablehlo.select %4290, %1913, %5294 : tensor<i1>, tensor<768xf32>
    %5296 = stablehlo.broadcast_in_dim %4289, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5297 = stablehlo.divide %1908, %5296 : tensor<30522xf32>
    %5298 = stablehlo.broadcast_in_dim %cst_6, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %5299 = stablehlo.multiply %5297, %5298 : tensor<30522xf32>
    %5300 = stablehlo.select %4290, %1908, %5299 : tensor<i1>, tensor<30522xf32>
    %cst_643 = stablehlo.constant dense<1.000000e-01> : tensor<f32>
    %5301 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5302 = stablehlo.multiply %5301, %4295 : tensor<30522x768xf32>
    %cst_644 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %5303 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %5304 = stablehlo.multiply %5303, %arg203 : tensor<30522x768xf32>
    %5305 = stablehlo.add %5302, %5304 : tensor<30522x768xf32>
    %5306 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5307 = stablehlo.multiply %5306, %4300 : tensor<512x768xf32>
    %5308 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %5309 = stablehlo.multiply %5308, %arg204 : tensor<512x768xf32>
    %5310 = stablehlo.add %5307, %5309 : tensor<512x768xf32>
    %5311 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5312 = stablehlo.multiply %5311, %4305 : tensor<2x768xf32>
    %5313 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %5314 = stablehlo.multiply %5313, %arg205 : tensor<2x768xf32>
    %5315 = stablehlo.add %5312, %5314 : tensor<2x768xf32>
    %5316 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5317 = stablehlo.multiply %5316, %4310 : tensor<768xf32>
    %5318 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5319 = stablehlo.multiply %5318, %arg206 : tensor<768xf32>
    %5320 = stablehlo.add %5317, %5319 : tensor<768xf32>
    %5321 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5322 = stablehlo.multiply %5321, %4315 : tensor<768xf32>
    %5323 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5324 = stablehlo.multiply %5323, %arg207 : tensor<768xf32>
    %5325 = stablehlo.add %5322, %5324 : tensor<768xf32>
    %5326 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5327 = stablehlo.multiply %5326, %4320 : tensor<768x768xf32>
    %5328 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5329 = stablehlo.multiply %5328, %arg208 : tensor<768x768xf32>
    %5330 = stablehlo.add %5327, %5329 : tensor<768x768xf32>
    %5331 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5332 = stablehlo.multiply %5331, %4325 : tensor<768xf32>
    %5333 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5334 = stablehlo.multiply %5333, %arg209 : tensor<768xf32>
    %5335 = stablehlo.add %5332, %5334 : tensor<768xf32>
    %5336 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5337 = stablehlo.multiply %5336, %4330 : tensor<768x768xf32>
    %5338 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5339 = stablehlo.multiply %5338, %arg210 : tensor<768x768xf32>
    %5340 = stablehlo.add %5337, %5339 : tensor<768x768xf32>
    %5341 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5342 = stablehlo.multiply %5341, %4335 : tensor<768xf32>
    %5343 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5344 = stablehlo.multiply %5343, %arg211 : tensor<768xf32>
    %5345 = stablehlo.add %5342, %5344 : tensor<768xf32>
    %5346 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5347 = stablehlo.multiply %5346, %4340 : tensor<768x768xf32>
    %5348 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5349 = stablehlo.multiply %5348, %arg212 : tensor<768x768xf32>
    %5350 = stablehlo.add %5347, %5349 : tensor<768x768xf32>
    %5351 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5352 = stablehlo.multiply %5351, %4345 : tensor<768xf32>
    %5353 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5354 = stablehlo.multiply %5353, %arg213 : tensor<768xf32>
    %5355 = stablehlo.add %5352, %5354 : tensor<768xf32>
    %5356 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5357 = stablehlo.multiply %5356, %4350 : tensor<768x768xf32>
    %5358 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5359 = stablehlo.multiply %5358, %arg214 : tensor<768x768xf32>
    %5360 = stablehlo.add %5357, %5359 : tensor<768x768xf32>
    %5361 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5362 = stablehlo.multiply %5361, %4355 : tensor<768xf32>
    %5363 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5364 = stablehlo.multiply %5363, %arg215 : tensor<768xf32>
    %5365 = stablehlo.add %5362, %5364 : tensor<768xf32>
    %5366 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5367 = stablehlo.multiply %5366, %4360 : tensor<768xf32>
    %5368 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5369 = stablehlo.multiply %5368, %arg216 : tensor<768xf32>
    %5370 = stablehlo.add %5367, %5369 : tensor<768xf32>
    %5371 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5372 = stablehlo.multiply %5371, %4365 : tensor<768xf32>
    %5373 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5374 = stablehlo.multiply %5373, %arg217 : tensor<768xf32>
    %5375 = stablehlo.add %5372, %5374 : tensor<768xf32>
    %5376 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5377 = stablehlo.multiply %5376, %4370 : tensor<3072x768xf32>
    %5378 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5379 = stablehlo.multiply %5378, %arg218 : tensor<3072x768xf32>
    %5380 = stablehlo.add %5377, %5379 : tensor<3072x768xf32>
    %5381 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5382 = stablehlo.multiply %5381, %4375 : tensor<3072xf32>
    %5383 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5384 = stablehlo.multiply %5383, %arg219 : tensor<3072xf32>
    %5385 = stablehlo.add %5382, %5384 : tensor<3072xf32>
    %5386 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5387 = stablehlo.multiply %5386, %4380 : tensor<768x3072xf32>
    %5388 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5389 = stablehlo.multiply %5388, %arg220 : tensor<768x3072xf32>
    %5390 = stablehlo.add %5387, %5389 : tensor<768x3072xf32>
    %5391 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5392 = stablehlo.multiply %5391, %4385 : tensor<768xf32>
    %5393 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5394 = stablehlo.multiply %5393, %arg221 : tensor<768xf32>
    %5395 = stablehlo.add %5392, %5394 : tensor<768xf32>
    %5396 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5397 = stablehlo.multiply %5396, %4390 : tensor<768xf32>
    %5398 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5399 = stablehlo.multiply %5398, %arg222 : tensor<768xf32>
    %5400 = stablehlo.add %5397, %5399 : tensor<768xf32>
    %5401 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5402 = stablehlo.multiply %5401, %4395 : tensor<768xf32>
    %5403 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5404 = stablehlo.multiply %5403, %arg223 : tensor<768xf32>
    %5405 = stablehlo.add %5402, %5404 : tensor<768xf32>
    %5406 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5407 = stablehlo.multiply %5406, %4400 : tensor<768x768xf32>
    %5408 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5409 = stablehlo.multiply %5408, %arg224 : tensor<768x768xf32>
    %5410 = stablehlo.add %5407, %5409 : tensor<768x768xf32>
    %5411 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5412 = stablehlo.multiply %5411, %4405 : tensor<768xf32>
    %5413 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5414 = stablehlo.multiply %5413, %arg225 : tensor<768xf32>
    %5415 = stablehlo.add %5412, %5414 : tensor<768xf32>
    %5416 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5417 = stablehlo.multiply %5416, %4410 : tensor<768x768xf32>
    %5418 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5419 = stablehlo.multiply %5418, %arg226 : tensor<768x768xf32>
    %5420 = stablehlo.add %5417, %5419 : tensor<768x768xf32>
    %5421 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5422 = stablehlo.multiply %5421, %4415 : tensor<768xf32>
    %5423 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5424 = stablehlo.multiply %5423, %arg227 : tensor<768xf32>
    %5425 = stablehlo.add %5422, %5424 : tensor<768xf32>
    %5426 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5427 = stablehlo.multiply %5426, %4420 : tensor<768x768xf32>
    %5428 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5429 = stablehlo.multiply %5428, %arg228 : tensor<768x768xf32>
    %5430 = stablehlo.add %5427, %5429 : tensor<768x768xf32>
    %5431 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5432 = stablehlo.multiply %5431, %4425 : tensor<768xf32>
    %5433 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5434 = stablehlo.multiply %5433, %arg229 : tensor<768xf32>
    %5435 = stablehlo.add %5432, %5434 : tensor<768xf32>
    %5436 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5437 = stablehlo.multiply %5436, %4430 : tensor<768x768xf32>
    %5438 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5439 = stablehlo.multiply %5438, %arg230 : tensor<768x768xf32>
    %5440 = stablehlo.add %5437, %5439 : tensor<768x768xf32>
    %5441 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5442 = stablehlo.multiply %5441, %4435 : tensor<768xf32>
    %5443 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5444 = stablehlo.multiply %5443, %arg231 : tensor<768xf32>
    %5445 = stablehlo.add %5442, %5444 : tensor<768xf32>
    %5446 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5447 = stablehlo.multiply %5446, %4440 : tensor<768xf32>
    %5448 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5449 = stablehlo.multiply %5448, %arg232 : tensor<768xf32>
    %5450 = stablehlo.add %5447, %5449 : tensor<768xf32>
    %5451 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5452 = stablehlo.multiply %5451, %4445 : tensor<768xf32>
    %5453 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5454 = stablehlo.multiply %5453, %arg233 : tensor<768xf32>
    %5455 = stablehlo.add %5452, %5454 : tensor<768xf32>
    %5456 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5457 = stablehlo.multiply %5456, %4450 : tensor<3072x768xf32>
    %5458 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5459 = stablehlo.multiply %5458, %arg234 : tensor<3072x768xf32>
    %5460 = stablehlo.add %5457, %5459 : tensor<3072x768xf32>
    %5461 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5462 = stablehlo.multiply %5461, %4455 : tensor<3072xf32>
    %5463 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5464 = stablehlo.multiply %5463, %arg235 : tensor<3072xf32>
    %5465 = stablehlo.add %5462, %5464 : tensor<3072xf32>
    %5466 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5467 = stablehlo.multiply %5466, %4460 : tensor<768x3072xf32>
    %5468 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5469 = stablehlo.multiply %5468, %arg236 : tensor<768x3072xf32>
    %5470 = stablehlo.add %5467, %5469 : tensor<768x3072xf32>
    %5471 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5472 = stablehlo.multiply %5471, %4465 : tensor<768xf32>
    %5473 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5474 = stablehlo.multiply %5473, %arg237 : tensor<768xf32>
    %5475 = stablehlo.add %5472, %5474 : tensor<768xf32>
    %5476 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5477 = stablehlo.multiply %5476, %4470 : tensor<768xf32>
    %5478 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5479 = stablehlo.multiply %5478, %arg238 : tensor<768xf32>
    %5480 = stablehlo.add %5477, %5479 : tensor<768xf32>
    %5481 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5482 = stablehlo.multiply %5481, %4475 : tensor<768xf32>
    %5483 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5484 = stablehlo.multiply %5483, %arg239 : tensor<768xf32>
    %5485 = stablehlo.add %5482, %5484 : tensor<768xf32>
    %5486 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5487 = stablehlo.multiply %5486, %4480 : tensor<768x768xf32>
    %5488 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5489 = stablehlo.multiply %5488, %arg240 : tensor<768x768xf32>
    %5490 = stablehlo.add %5487, %5489 : tensor<768x768xf32>
    %5491 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5492 = stablehlo.multiply %5491, %4485 : tensor<768xf32>
    %5493 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5494 = stablehlo.multiply %5493, %arg241 : tensor<768xf32>
    %5495 = stablehlo.add %5492, %5494 : tensor<768xf32>
    %5496 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5497 = stablehlo.multiply %5496, %4490 : tensor<768x768xf32>
    %5498 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5499 = stablehlo.multiply %5498, %arg242 : tensor<768x768xf32>
    %5500 = stablehlo.add %5497, %5499 : tensor<768x768xf32>
    %5501 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5502 = stablehlo.multiply %5501, %4495 : tensor<768xf32>
    %5503 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5504 = stablehlo.multiply %5503, %arg243 : tensor<768xf32>
    %5505 = stablehlo.add %5502, %5504 : tensor<768xf32>
    %5506 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5507 = stablehlo.multiply %5506, %4500 : tensor<768x768xf32>
    %5508 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5509 = stablehlo.multiply %5508, %arg244 : tensor<768x768xf32>
    %5510 = stablehlo.add %5507, %5509 : tensor<768x768xf32>
    %5511 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5512 = stablehlo.multiply %5511, %4505 : tensor<768xf32>
    %5513 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5514 = stablehlo.multiply %5513, %arg245 : tensor<768xf32>
    %5515 = stablehlo.add %5512, %5514 : tensor<768xf32>
    %5516 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5517 = stablehlo.multiply %5516, %4510 : tensor<768x768xf32>
    %5518 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5519 = stablehlo.multiply %5518, %arg246 : tensor<768x768xf32>
    %5520 = stablehlo.add %5517, %5519 : tensor<768x768xf32>
    %5521 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5522 = stablehlo.multiply %5521, %4515 : tensor<768xf32>
    %5523 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5524 = stablehlo.multiply %5523, %arg247 : tensor<768xf32>
    %5525 = stablehlo.add %5522, %5524 : tensor<768xf32>
    %5526 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5527 = stablehlo.multiply %5526, %4520 : tensor<768xf32>
    %5528 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5529 = stablehlo.multiply %5528, %arg248 : tensor<768xf32>
    %5530 = stablehlo.add %5527, %5529 : tensor<768xf32>
    %5531 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5532 = stablehlo.multiply %5531, %4525 : tensor<768xf32>
    %5533 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5534 = stablehlo.multiply %5533, %arg249 : tensor<768xf32>
    %5535 = stablehlo.add %5532, %5534 : tensor<768xf32>
    %5536 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5537 = stablehlo.multiply %5536, %4530 : tensor<3072x768xf32>
    %5538 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5539 = stablehlo.multiply %5538, %arg250 : tensor<3072x768xf32>
    %5540 = stablehlo.add %5537, %5539 : tensor<3072x768xf32>
    %5541 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5542 = stablehlo.multiply %5541, %4535 : tensor<3072xf32>
    %5543 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5544 = stablehlo.multiply %5543, %arg251 : tensor<3072xf32>
    %5545 = stablehlo.add %5542, %5544 : tensor<3072xf32>
    %5546 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5547 = stablehlo.multiply %5546, %4540 : tensor<768x3072xf32>
    %5548 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5549 = stablehlo.multiply %5548, %arg252 : tensor<768x3072xf32>
    %5550 = stablehlo.add %5547, %5549 : tensor<768x3072xf32>
    %5551 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5552 = stablehlo.multiply %5551, %4545 : tensor<768xf32>
    %5553 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5554 = stablehlo.multiply %5553, %arg253 : tensor<768xf32>
    %5555 = stablehlo.add %5552, %5554 : tensor<768xf32>
    %5556 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5557 = stablehlo.multiply %5556, %4550 : tensor<768xf32>
    %5558 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5559 = stablehlo.multiply %5558, %arg254 : tensor<768xf32>
    %5560 = stablehlo.add %5557, %5559 : tensor<768xf32>
    %5561 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5562 = stablehlo.multiply %5561, %4555 : tensor<768xf32>
    %5563 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5564 = stablehlo.multiply %5563, %arg255 : tensor<768xf32>
    %5565 = stablehlo.add %5562, %5564 : tensor<768xf32>
    %5566 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5567 = stablehlo.multiply %5566, %4560 : tensor<768x768xf32>
    %5568 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5569 = stablehlo.multiply %5568, %arg256 : tensor<768x768xf32>
    %5570 = stablehlo.add %5567, %5569 : tensor<768x768xf32>
    %5571 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5572 = stablehlo.multiply %5571, %4565 : tensor<768xf32>
    %5573 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5574 = stablehlo.multiply %5573, %arg257 : tensor<768xf32>
    %5575 = stablehlo.add %5572, %5574 : tensor<768xf32>
    %5576 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5577 = stablehlo.multiply %5576, %4570 : tensor<768x768xf32>
    %5578 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5579 = stablehlo.multiply %5578, %arg258 : tensor<768x768xf32>
    %5580 = stablehlo.add %5577, %5579 : tensor<768x768xf32>
    %5581 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5582 = stablehlo.multiply %5581, %4575 : tensor<768xf32>
    %5583 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5584 = stablehlo.multiply %5583, %arg259 : tensor<768xf32>
    %5585 = stablehlo.add %5582, %5584 : tensor<768xf32>
    %5586 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5587 = stablehlo.multiply %5586, %4580 : tensor<768x768xf32>
    %5588 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5589 = stablehlo.multiply %5588, %arg260 : tensor<768x768xf32>
    %5590 = stablehlo.add %5587, %5589 : tensor<768x768xf32>
    %5591 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5592 = stablehlo.multiply %5591, %4585 : tensor<768xf32>
    %5593 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5594 = stablehlo.multiply %5593, %arg261 : tensor<768xf32>
    %5595 = stablehlo.add %5592, %5594 : tensor<768xf32>
    %5596 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5597 = stablehlo.multiply %5596, %4590 : tensor<768x768xf32>
    %5598 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5599 = stablehlo.multiply %5598, %arg262 : tensor<768x768xf32>
    %5600 = stablehlo.add %5597, %5599 : tensor<768x768xf32>
    %5601 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5602 = stablehlo.multiply %5601, %4595 : tensor<768xf32>
    %5603 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5604 = stablehlo.multiply %5603, %arg263 : tensor<768xf32>
    %5605 = stablehlo.add %5602, %5604 : tensor<768xf32>
    %5606 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5607 = stablehlo.multiply %5606, %4600 : tensor<768xf32>
    %5608 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5609 = stablehlo.multiply %5608, %arg264 : tensor<768xf32>
    %5610 = stablehlo.add %5607, %5609 : tensor<768xf32>
    %5611 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5612 = stablehlo.multiply %5611, %4605 : tensor<768xf32>
    %5613 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5614 = stablehlo.multiply %5613, %arg265 : tensor<768xf32>
    %5615 = stablehlo.add %5612, %5614 : tensor<768xf32>
    %5616 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5617 = stablehlo.multiply %5616, %4610 : tensor<3072x768xf32>
    %5618 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5619 = stablehlo.multiply %5618, %arg266 : tensor<3072x768xf32>
    %5620 = stablehlo.add %5617, %5619 : tensor<3072x768xf32>
    %5621 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5622 = stablehlo.multiply %5621, %4615 : tensor<3072xf32>
    %5623 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5624 = stablehlo.multiply %5623, %arg267 : tensor<3072xf32>
    %5625 = stablehlo.add %5622, %5624 : tensor<3072xf32>
    %5626 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5627 = stablehlo.multiply %5626, %4620 : tensor<768x3072xf32>
    %5628 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5629 = stablehlo.multiply %5628, %arg268 : tensor<768x3072xf32>
    %5630 = stablehlo.add %5627, %5629 : tensor<768x3072xf32>
    %5631 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5632 = stablehlo.multiply %5631, %4625 : tensor<768xf32>
    %5633 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5634 = stablehlo.multiply %5633, %arg269 : tensor<768xf32>
    %5635 = stablehlo.add %5632, %5634 : tensor<768xf32>
    %5636 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5637 = stablehlo.multiply %5636, %4630 : tensor<768xf32>
    %5638 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5639 = stablehlo.multiply %5638, %arg270 : tensor<768xf32>
    %5640 = stablehlo.add %5637, %5639 : tensor<768xf32>
    %5641 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5642 = stablehlo.multiply %5641, %4635 : tensor<768xf32>
    %5643 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5644 = stablehlo.multiply %5643, %arg271 : tensor<768xf32>
    %5645 = stablehlo.add %5642, %5644 : tensor<768xf32>
    %5646 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5647 = stablehlo.multiply %5646, %4640 : tensor<768x768xf32>
    %5648 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5649 = stablehlo.multiply %5648, %arg272 : tensor<768x768xf32>
    %5650 = stablehlo.add %5647, %5649 : tensor<768x768xf32>
    %5651 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5652 = stablehlo.multiply %5651, %4645 : tensor<768xf32>
    %5653 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5654 = stablehlo.multiply %5653, %arg273 : tensor<768xf32>
    %5655 = stablehlo.add %5652, %5654 : tensor<768xf32>
    %5656 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5657 = stablehlo.multiply %5656, %4650 : tensor<768x768xf32>
    %5658 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5659 = stablehlo.multiply %5658, %arg274 : tensor<768x768xf32>
    %5660 = stablehlo.add %5657, %5659 : tensor<768x768xf32>
    %5661 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5662 = stablehlo.multiply %5661, %4655 : tensor<768xf32>
    %5663 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5664 = stablehlo.multiply %5663, %arg275 : tensor<768xf32>
    %5665 = stablehlo.add %5662, %5664 : tensor<768xf32>
    %5666 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5667 = stablehlo.multiply %5666, %4660 : tensor<768x768xf32>
    %5668 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5669 = stablehlo.multiply %5668, %arg276 : tensor<768x768xf32>
    %5670 = stablehlo.add %5667, %5669 : tensor<768x768xf32>
    %5671 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5672 = stablehlo.multiply %5671, %4665 : tensor<768xf32>
    %5673 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5674 = stablehlo.multiply %5673, %arg277 : tensor<768xf32>
    %5675 = stablehlo.add %5672, %5674 : tensor<768xf32>
    %5676 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5677 = stablehlo.multiply %5676, %4670 : tensor<768x768xf32>
    %5678 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5679 = stablehlo.multiply %5678, %arg278 : tensor<768x768xf32>
    %5680 = stablehlo.add %5677, %5679 : tensor<768x768xf32>
    %5681 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5682 = stablehlo.multiply %5681, %4675 : tensor<768xf32>
    %5683 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5684 = stablehlo.multiply %5683, %arg279 : tensor<768xf32>
    %5685 = stablehlo.add %5682, %5684 : tensor<768xf32>
    %5686 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5687 = stablehlo.multiply %5686, %4680 : tensor<768xf32>
    %5688 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5689 = stablehlo.multiply %5688, %arg280 : tensor<768xf32>
    %5690 = stablehlo.add %5687, %5689 : tensor<768xf32>
    %5691 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5692 = stablehlo.multiply %5691, %4685 : tensor<768xf32>
    %5693 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5694 = stablehlo.multiply %5693, %arg281 : tensor<768xf32>
    %5695 = stablehlo.add %5692, %5694 : tensor<768xf32>
    %5696 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5697 = stablehlo.multiply %5696, %4690 : tensor<3072x768xf32>
    %5698 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5699 = stablehlo.multiply %5698, %arg282 : tensor<3072x768xf32>
    %5700 = stablehlo.add %5697, %5699 : tensor<3072x768xf32>
    %5701 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5702 = stablehlo.multiply %5701, %4695 : tensor<3072xf32>
    %5703 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5704 = stablehlo.multiply %5703, %arg283 : tensor<3072xf32>
    %5705 = stablehlo.add %5702, %5704 : tensor<3072xf32>
    %5706 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5707 = stablehlo.multiply %5706, %4700 : tensor<768x3072xf32>
    %5708 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5709 = stablehlo.multiply %5708, %arg284 : tensor<768x3072xf32>
    %5710 = stablehlo.add %5707, %5709 : tensor<768x3072xf32>
    %5711 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5712 = stablehlo.multiply %5711, %4705 : tensor<768xf32>
    %5713 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5714 = stablehlo.multiply %5713, %arg285 : tensor<768xf32>
    %5715 = stablehlo.add %5712, %5714 : tensor<768xf32>
    %5716 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5717 = stablehlo.multiply %5716, %4710 : tensor<768xf32>
    %5718 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5719 = stablehlo.multiply %5718, %arg286 : tensor<768xf32>
    %5720 = stablehlo.add %5717, %5719 : tensor<768xf32>
    %5721 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5722 = stablehlo.multiply %5721, %4715 : tensor<768xf32>
    %5723 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5724 = stablehlo.multiply %5723, %arg287 : tensor<768xf32>
    %5725 = stablehlo.add %5722, %5724 : tensor<768xf32>
    %5726 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5727 = stablehlo.multiply %5726, %4720 : tensor<768x768xf32>
    %5728 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5729 = stablehlo.multiply %5728, %arg288 : tensor<768x768xf32>
    %5730 = stablehlo.add %5727, %5729 : tensor<768x768xf32>
    %5731 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5732 = stablehlo.multiply %5731, %4725 : tensor<768xf32>
    %5733 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5734 = stablehlo.multiply %5733, %arg289 : tensor<768xf32>
    %5735 = stablehlo.add %5732, %5734 : tensor<768xf32>
    %5736 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5737 = stablehlo.multiply %5736, %4730 : tensor<768x768xf32>
    %5738 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5739 = stablehlo.multiply %5738, %arg290 : tensor<768x768xf32>
    %5740 = stablehlo.add %5737, %5739 : tensor<768x768xf32>
    %5741 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5742 = stablehlo.multiply %5741, %4735 : tensor<768xf32>
    %5743 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5744 = stablehlo.multiply %5743, %arg291 : tensor<768xf32>
    %5745 = stablehlo.add %5742, %5744 : tensor<768xf32>
    %5746 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5747 = stablehlo.multiply %5746, %4740 : tensor<768x768xf32>
    %5748 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5749 = stablehlo.multiply %5748, %arg292 : tensor<768x768xf32>
    %5750 = stablehlo.add %5747, %5749 : tensor<768x768xf32>
    %5751 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5752 = stablehlo.multiply %5751, %4745 : tensor<768xf32>
    %5753 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5754 = stablehlo.multiply %5753, %arg293 : tensor<768xf32>
    %5755 = stablehlo.add %5752, %5754 : tensor<768xf32>
    %5756 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5757 = stablehlo.multiply %5756, %4750 : tensor<768x768xf32>
    %5758 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5759 = stablehlo.multiply %5758, %arg294 : tensor<768x768xf32>
    %5760 = stablehlo.add %5757, %5759 : tensor<768x768xf32>
    %5761 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5762 = stablehlo.multiply %5761, %4755 : tensor<768xf32>
    %5763 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5764 = stablehlo.multiply %5763, %arg295 : tensor<768xf32>
    %5765 = stablehlo.add %5762, %5764 : tensor<768xf32>
    %5766 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5767 = stablehlo.multiply %5766, %4760 : tensor<768xf32>
    %5768 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5769 = stablehlo.multiply %5768, %arg296 : tensor<768xf32>
    %5770 = stablehlo.add %5767, %5769 : tensor<768xf32>
    %5771 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5772 = stablehlo.multiply %5771, %4765 : tensor<768xf32>
    %5773 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5774 = stablehlo.multiply %5773, %arg297 : tensor<768xf32>
    %5775 = stablehlo.add %5772, %5774 : tensor<768xf32>
    %5776 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5777 = stablehlo.multiply %5776, %4770 : tensor<3072x768xf32>
    %5778 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5779 = stablehlo.multiply %5778, %arg298 : tensor<3072x768xf32>
    %5780 = stablehlo.add %5777, %5779 : tensor<3072x768xf32>
    %5781 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5782 = stablehlo.multiply %5781, %4775 : tensor<3072xf32>
    %5783 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5784 = stablehlo.multiply %5783, %arg299 : tensor<3072xf32>
    %5785 = stablehlo.add %5782, %5784 : tensor<3072xf32>
    %5786 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5787 = stablehlo.multiply %5786, %4780 : tensor<768x3072xf32>
    %5788 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5789 = stablehlo.multiply %5788, %arg300 : tensor<768x3072xf32>
    %5790 = stablehlo.add %5787, %5789 : tensor<768x3072xf32>
    %5791 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5792 = stablehlo.multiply %5791, %4785 : tensor<768xf32>
    %5793 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5794 = stablehlo.multiply %5793, %arg301 : tensor<768xf32>
    %5795 = stablehlo.add %5792, %5794 : tensor<768xf32>
    %5796 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5797 = stablehlo.multiply %5796, %4790 : tensor<768xf32>
    %5798 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5799 = stablehlo.multiply %5798, %arg302 : tensor<768xf32>
    %5800 = stablehlo.add %5797, %5799 : tensor<768xf32>
    %5801 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5802 = stablehlo.multiply %5801, %4795 : tensor<768xf32>
    %5803 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5804 = stablehlo.multiply %5803, %arg303 : tensor<768xf32>
    %5805 = stablehlo.add %5802, %5804 : tensor<768xf32>
    %5806 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5807 = stablehlo.multiply %5806, %4800 : tensor<768x768xf32>
    %5808 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5809 = stablehlo.multiply %5808, %arg304 : tensor<768x768xf32>
    %5810 = stablehlo.add %5807, %5809 : tensor<768x768xf32>
    %5811 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5812 = stablehlo.multiply %5811, %4805 : tensor<768xf32>
    %5813 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5814 = stablehlo.multiply %5813, %arg305 : tensor<768xf32>
    %5815 = stablehlo.add %5812, %5814 : tensor<768xf32>
    %5816 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5817 = stablehlo.multiply %5816, %4810 : tensor<768x768xf32>
    %5818 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5819 = stablehlo.multiply %5818, %arg306 : tensor<768x768xf32>
    %5820 = stablehlo.add %5817, %5819 : tensor<768x768xf32>
    %5821 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5822 = stablehlo.multiply %5821, %4815 : tensor<768xf32>
    %5823 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5824 = stablehlo.multiply %5823, %arg307 : tensor<768xf32>
    %5825 = stablehlo.add %5822, %5824 : tensor<768xf32>
    %5826 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5827 = stablehlo.multiply %5826, %4820 : tensor<768x768xf32>
    %5828 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5829 = stablehlo.multiply %5828, %arg308 : tensor<768x768xf32>
    %5830 = stablehlo.add %5827, %5829 : tensor<768x768xf32>
    %5831 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5832 = stablehlo.multiply %5831, %4825 : tensor<768xf32>
    %5833 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5834 = stablehlo.multiply %5833, %arg309 : tensor<768xf32>
    %5835 = stablehlo.add %5832, %5834 : tensor<768xf32>
    %5836 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5837 = stablehlo.multiply %5836, %4830 : tensor<768x768xf32>
    %5838 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5839 = stablehlo.multiply %5838, %arg310 : tensor<768x768xf32>
    %5840 = stablehlo.add %5837, %5839 : tensor<768x768xf32>
    %5841 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5842 = stablehlo.multiply %5841, %4835 : tensor<768xf32>
    %5843 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5844 = stablehlo.multiply %5843, %arg311 : tensor<768xf32>
    %5845 = stablehlo.add %5842, %5844 : tensor<768xf32>
    %5846 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5847 = stablehlo.multiply %5846, %4840 : tensor<768xf32>
    %5848 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5849 = stablehlo.multiply %5848, %arg312 : tensor<768xf32>
    %5850 = stablehlo.add %5847, %5849 : tensor<768xf32>
    %5851 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5852 = stablehlo.multiply %5851, %4845 : tensor<768xf32>
    %5853 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5854 = stablehlo.multiply %5853, %arg313 : tensor<768xf32>
    %5855 = stablehlo.add %5852, %5854 : tensor<768xf32>
    %5856 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5857 = stablehlo.multiply %5856, %4850 : tensor<3072x768xf32>
    %5858 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5859 = stablehlo.multiply %5858, %arg314 : tensor<3072x768xf32>
    %5860 = stablehlo.add %5857, %5859 : tensor<3072x768xf32>
    %5861 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5862 = stablehlo.multiply %5861, %4855 : tensor<3072xf32>
    %5863 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5864 = stablehlo.multiply %5863, %arg315 : tensor<3072xf32>
    %5865 = stablehlo.add %5862, %5864 : tensor<3072xf32>
    %5866 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5867 = stablehlo.multiply %5866, %4860 : tensor<768x3072xf32>
    %5868 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5869 = stablehlo.multiply %5868, %arg316 : tensor<768x3072xf32>
    %5870 = stablehlo.add %5867, %5869 : tensor<768x3072xf32>
    %5871 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5872 = stablehlo.multiply %5871, %4865 : tensor<768xf32>
    %5873 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5874 = stablehlo.multiply %5873, %arg317 : tensor<768xf32>
    %5875 = stablehlo.add %5872, %5874 : tensor<768xf32>
    %5876 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5877 = stablehlo.multiply %5876, %4870 : tensor<768xf32>
    %5878 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5879 = stablehlo.multiply %5878, %arg318 : tensor<768xf32>
    %5880 = stablehlo.add %5877, %5879 : tensor<768xf32>
    %5881 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5882 = stablehlo.multiply %5881, %4875 : tensor<768xf32>
    %5883 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5884 = stablehlo.multiply %5883, %arg319 : tensor<768xf32>
    %5885 = stablehlo.add %5882, %5884 : tensor<768xf32>
    %5886 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5887 = stablehlo.multiply %5886, %4880 : tensor<768x768xf32>
    %5888 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5889 = stablehlo.multiply %5888, %arg320 : tensor<768x768xf32>
    %5890 = stablehlo.add %5887, %5889 : tensor<768x768xf32>
    %5891 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5892 = stablehlo.multiply %5891, %4885 : tensor<768xf32>
    %5893 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5894 = stablehlo.multiply %5893, %arg321 : tensor<768xf32>
    %5895 = stablehlo.add %5892, %5894 : tensor<768xf32>
    %5896 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5897 = stablehlo.multiply %5896, %4890 : tensor<768x768xf32>
    %5898 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5899 = stablehlo.multiply %5898, %arg322 : tensor<768x768xf32>
    %5900 = stablehlo.add %5897, %5899 : tensor<768x768xf32>
    %5901 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5902 = stablehlo.multiply %5901, %4895 : tensor<768xf32>
    %5903 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5904 = stablehlo.multiply %5903, %arg323 : tensor<768xf32>
    %5905 = stablehlo.add %5902, %5904 : tensor<768xf32>
    %5906 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5907 = stablehlo.multiply %5906, %4900 : tensor<768x768xf32>
    %5908 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5909 = stablehlo.multiply %5908, %arg324 : tensor<768x768xf32>
    %5910 = stablehlo.add %5907, %5909 : tensor<768x768xf32>
    %5911 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5912 = stablehlo.multiply %5911, %4905 : tensor<768xf32>
    %5913 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5914 = stablehlo.multiply %5913, %arg325 : tensor<768xf32>
    %5915 = stablehlo.add %5912, %5914 : tensor<768xf32>
    %5916 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5917 = stablehlo.multiply %5916, %4910 : tensor<768x768xf32>
    %5918 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5919 = stablehlo.multiply %5918, %arg326 : tensor<768x768xf32>
    %5920 = stablehlo.add %5917, %5919 : tensor<768x768xf32>
    %5921 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5922 = stablehlo.multiply %5921, %4915 : tensor<768xf32>
    %5923 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5924 = stablehlo.multiply %5923, %arg327 : tensor<768xf32>
    %5925 = stablehlo.add %5922, %5924 : tensor<768xf32>
    %5926 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5927 = stablehlo.multiply %5926, %4920 : tensor<768xf32>
    %5928 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5929 = stablehlo.multiply %5928, %arg328 : tensor<768xf32>
    %5930 = stablehlo.add %5927, %5929 : tensor<768xf32>
    %5931 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5932 = stablehlo.multiply %5931, %4925 : tensor<768xf32>
    %5933 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5934 = stablehlo.multiply %5933, %arg329 : tensor<768xf32>
    %5935 = stablehlo.add %5932, %5934 : tensor<768xf32>
    %5936 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5937 = stablehlo.multiply %5936, %4930 : tensor<3072x768xf32>
    %5938 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %5939 = stablehlo.multiply %5938, %arg330 : tensor<3072x768xf32>
    %5940 = stablehlo.add %5937, %5939 : tensor<3072x768xf32>
    %5941 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5942 = stablehlo.multiply %5941, %4935 : tensor<3072xf32>
    %5943 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %5944 = stablehlo.multiply %5943, %arg331 : tensor<3072xf32>
    %5945 = stablehlo.add %5942, %5944 : tensor<3072xf32>
    %5946 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5947 = stablehlo.multiply %5946, %4940 : tensor<768x3072xf32>
    %5948 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %5949 = stablehlo.multiply %5948, %arg332 : tensor<768x3072xf32>
    %5950 = stablehlo.add %5947, %5949 : tensor<768x3072xf32>
    %5951 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5952 = stablehlo.multiply %5951, %4945 : tensor<768xf32>
    %5953 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5954 = stablehlo.multiply %5953, %arg333 : tensor<768xf32>
    %5955 = stablehlo.add %5952, %5954 : tensor<768xf32>
    %5956 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5957 = stablehlo.multiply %5956, %4950 : tensor<768xf32>
    %5958 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5959 = stablehlo.multiply %5958, %arg334 : tensor<768xf32>
    %5960 = stablehlo.add %5957, %5959 : tensor<768xf32>
    %5961 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5962 = stablehlo.multiply %5961, %4955 : tensor<768xf32>
    %5963 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5964 = stablehlo.multiply %5963, %arg335 : tensor<768xf32>
    %5965 = stablehlo.add %5962, %5964 : tensor<768xf32>
    %5966 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5967 = stablehlo.multiply %5966, %4960 : tensor<768x768xf32>
    %5968 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5969 = stablehlo.multiply %5968, %arg336 : tensor<768x768xf32>
    %5970 = stablehlo.add %5967, %5969 : tensor<768x768xf32>
    %5971 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5972 = stablehlo.multiply %5971, %4965 : tensor<768xf32>
    %5973 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5974 = stablehlo.multiply %5973, %arg337 : tensor<768xf32>
    %5975 = stablehlo.add %5972, %5974 : tensor<768xf32>
    %5976 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5977 = stablehlo.multiply %5976, %4970 : tensor<768x768xf32>
    %5978 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5979 = stablehlo.multiply %5978, %arg338 : tensor<768x768xf32>
    %5980 = stablehlo.add %5977, %5979 : tensor<768x768xf32>
    %5981 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5982 = stablehlo.multiply %5981, %4975 : tensor<768xf32>
    %5983 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5984 = stablehlo.multiply %5983, %arg339 : tensor<768xf32>
    %5985 = stablehlo.add %5982, %5984 : tensor<768xf32>
    %5986 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5987 = stablehlo.multiply %5986, %4980 : tensor<768x768xf32>
    %5988 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5989 = stablehlo.multiply %5988, %arg340 : tensor<768x768xf32>
    %5990 = stablehlo.add %5987, %5989 : tensor<768x768xf32>
    %5991 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5992 = stablehlo.multiply %5991, %4985 : tensor<768xf32>
    %5993 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %5994 = stablehlo.multiply %5993, %arg341 : tensor<768xf32>
    %5995 = stablehlo.add %5992, %5994 : tensor<768xf32>
    %5996 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5997 = stablehlo.multiply %5996, %4990 : tensor<768x768xf32>
    %5998 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %5999 = stablehlo.multiply %5998, %arg342 : tensor<768x768xf32>
    %6000 = stablehlo.add %5997, %5999 : tensor<768x768xf32>
    %6001 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6002 = stablehlo.multiply %6001, %4995 : tensor<768xf32>
    %6003 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6004 = stablehlo.multiply %6003, %arg343 : tensor<768xf32>
    %6005 = stablehlo.add %6002, %6004 : tensor<768xf32>
    %6006 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6007 = stablehlo.multiply %6006, %5000 : tensor<768xf32>
    %6008 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6009 = stablehlo.multiply %6008, %arg344 : tensor<768xf32>
    %6010 = stablehlo.add %6007, %6009 : tensor<768xf32>
    %6011 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6012 = stablehlo.multiply %6011, %5005 : tensor<768xf32>
    %6013 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6014 = stablehlo.multiply %6013, %arg345 : tensor<768xf32>
    %6015 = stablehlo.add %6012, %6014 : tensor<768xf32>
    %6016 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6017 = stablehlo.multiply %6016, %5010 : tensor<3072x768xf32>
    %6018 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6019 = stablehlo.multiply %6018, %arg346 : tensor<3072x768xf32>
    %6020 = stablehlo.add %6017, %6019 : tensor<3072x768xf32>
    %6021 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6022 = stablehlo.multiply %6021, %5015 : tensor<3072xf32>
    %6023 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6024 = stablehlo.multiply %6023, %arg347 : tensor<3072xf32>
    %6025 = stablehlo.add %6022, %6024 : tensor<3072xf32>
    %6026 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6027 = stablehlo.multiply %6026, %5020 : tensor<768x3072xf32>
    %6028 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6029 = stablehlo.multiply %6028, %arg348 : tensor<768x3072xf32>
    %6030 = stablehlo.add %6027, %6029 : tensor<768x3072xf32>
    %6031 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6032 = stablehlo.multiply %6031, %5025 : tensor<768xf32>
    %6033 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6034 = stablehlo.multiply %6033, %arg349 : tensor<768xf32>
    %6035 = stablehlo.add %6032, %6034 : tensor<768xf32>
    %6036 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6037 = stablehlo.multiply %6036, %5030 : tensor<768xf32>
    %6038 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6039 = stablehlo.multiply %6038, %arg350 : tensor<768xf32>
    %6040 = stablehlo.add %6037, %6039 : tensor<768xf32>
    %6041 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6042 = stablehlo.multiply %6041, %5035 : tensor<768xf32>
    %6043 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6044 = stablehlo.multiply %6043, %arg351 : tensor<768xf32>
    %6045 = stablehlo.add %6042, %6044 : tensor<768xf32>
    %6046 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6047 = stablehlo.multiply %6046, %5040 : tensor<768x768xf32>
    %6048 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6049 = stablehlo.multiply %6048, %arg352 : tensor<768x768xf32>
    %6050 = stablehlo.add %6047, %6049 : tensor<768x768xf32>
    %6051 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6052 = stablehlo.multiply %6051, %5045 : tensor<768xf32>
    %6053 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6054 = stablehlo.multiply %6053, %arg353 : tensor<768xf32>
    %6055 = stablehlo.add %6052, %6054 : tensor<768xf32>
    %6056 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6057 = stablehlo.multiply %6056, %5050 : tensor<768x768xf32>
    %6058 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6059 = stablehlo.multiply %6058, %arg354 : tensor<768x768xf32>
    %6060 = stablehlo.add %6057, %6059 : tensor<768x768xf32>
    %6061 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6062 = stablehlo.multiply %6061, %5055 : tensor<768xf32>
    %6063 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6064 = stablehlo.multiply %6063, %arg355 : tensor<768xf32>
    %6065 = stablehlo.add %6062, %6064 : tensor<768xf32>
    %6066 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6067 = stablehlo.multiply %6066, %5060 : tensor<768x768xf32>
    %6068 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6069 = stablehlo.multiply %6068, %arg356 : tensor<768x768xf32>
    %6070 = stablehlo.add %6067, %6069 : tensor<768x768xf32>
    %6071 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6072 = stablehlo.multiply %6071, %5065 : tensor<768xf32>
    %6073 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6074 = stablehlo.multiply %6073, %arg357 : tensor<768xf32>
    %6075 = stablehlo.add %6072, %6074 : tensor<768xf32>
    %6076 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6077 = stablehlo.multiply %6076, %5070 : tensor<768x768xf32>
    %6078 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6079 = stablehlo.multiply %6078, %arg358 : tensor<768x768xf32>
    %6080 = stablehlo.add %6077, %6079 : tensor<768x768xf32>
    %6081 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6082 = stablehlo.multiply %6081, %5075 : tensor<768xf32>
    %6083 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6084 = stablehlo.multiply %6083, %arg359 : tensor<768xf32>
    %6085 = stablehlo.add %6082, %6084 : tensor<768xf32>
    %6086 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6087 = stablehlo.multiply %6086, %5080 : tensor<768xf32>
    %6088 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6089 = stablehlo.multiply %6088, %arg360 : tensor<768xf32>
    %6090 = stablehlo.add %6087, %6089 : tensor<768xf32>
    %6091 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6092 = stablehlo.multiply %6091, %5085 : tensor<768xf32>
    %6093 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6094 = stablehlo.multiply %6093, %arg361 : tensor<768xf32>
    %6095 = stablehlo.add %6092, %6094 : tensor<768xf32>
    %6096 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6097 = stablehlo.multiply %6096, %5090 : tensor<3072x768xf32>
    %6098 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6099 = stablehlo.multiply %6098, %arg362 : tensor<3072x768xf32>
    %6100 = stablehlo.add %6097, %6099 : tensor<3072x768xf32>
    %6101 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6102 = stablehlo.multiply %6101, %5095 : tensor<3072xf32>
    %6103 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6104 = stablehlo.multiply %6103, %arg363 : tensor<3072xf32>
    %6105 = stablehlo.add %6102, %6104 : tensor<3072xf32>
    %6106 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6107 = stablehlo.multiply %6106, %5100 : tensor<768x3072xf32>
    %6108 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6109 = stablehlo.multiply %6108, %arg364 : tensor<768x3072xf32>
    %6110 = stablehlo.add %6107, %6109 : tensor<768x3072xf32>
    %6111 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6112 = stablehlo.multiply %6111, %5105 : tensor<768xf32>
    %6113 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6114 = stablehlo.multiply %6113, %arg365 : tensor<768xf32>
    %6115 = stablehlo.add %6112, %6114 : tensor<768xf32>
    %6116 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6117 = stablehlo.multiply %6116, %5110 : tensor<768xf32>
    %6118 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6119 = stablehlo.multiply %6118, %arg366 : tensor<768xf32>
    %6120 = stablehlo.add %6117, %6119 : tensor<768xf32>
    %6121 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6122 = stablehlo.multiply %6121, %5115 : tensor<768xf32>
    %6123 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6124 = stablehlo.multiply %6123, %arg367 : tensor<768xf32>
    %6125 = stablehlo.add %6122, %6124 : tensor<768xf32>
    %6126 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6127 = stablehlo.multiply %6126, %5120 : tensor<768x768xf32>
    %6128 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6129 = stablehlo.multiply %6128, %arg368 : tensor<768x768xf32>
    %6130 = stablehlo.add %6127, %6129 : tensor<768x768xf32>
    %6131 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6132 = stablehlo.multiply %6131, %5125 : tensor<768xf32>
    %6133 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6134 = stablehlo.multiply %6133, %arg369 : tensor<768xf32>
    %6135 = stablehlo.add %6132, %6134 : tensor<768xf32>
    %6136 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6137 = stablehlo.multiply %6136, %5130 : tensor<768x768xf32>
    %6138 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6139 = stablehlo.multiply %6138, %arg370 : tensor<768x768xf32>
    %6140 = stablehlo.add %6137, %6139 : tensor<768x768xf32>
    %6141 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6142 = stablehlo.multiply %6141, %5135 : tensor<768xf32>
    %6143 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6144 = stablehlo.multiply %6143, %arg371 : tensor<768xf32>
    %6145 = stablehlo.add %6142, %6144 : tensor<768xf32>
    %6146 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6147 = stablehlo.multiply %6146, %5140 : tensor<768x768xf32>
    %6148 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6149 = stablehlo.multiply %6148, %arg372 : tensor<768x768xf32>
    %6150 = stablehlo.add %6147, %6149 : tensor<768x768xf32>
    %6151 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6152 = stablehlo.multiply %6151, %5145 : tensor<768xf32>
    %6153 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6154 = stablehlo.multiply %6153, %arg373 : tensor<768xf32>
    %6155 = stablehlo.add %6152, %6154 : tensor<768xf32>
    %6156 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6157 = stablehlo.multiply %6156, %5150 : tensor<768x768xf32>
    %6158 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6159 = stablehlo.multiply %6158, %arg374 : tensor<768x768xf32>
    %6160 = stablehlo.add %6157, %6159 : tensor<768x768xf32>
    %6161 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6162 = stablehlo.multiply %6161, %5155 : tensor<768xf32>
    %6163 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6164 = stablehlo.multiply %6163, %arg375 : tensor<768xf32>
    %6165 = stablehlo.add %6162, %6164 : tensor<768xf32>
    %6166 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6167 = stablehlo.multiply %6166, %5160 : tensor<768xf32>
    %6168 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6169 = stablehlo.multiply %6168, %arg376 : tensor<768xf32>
    %6170 = stablehlo.add %6167, %6169 : tensor<768xf32>
    %6171 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6172 = stablehlo.multiply %6171, %5165 : tensor<768xf32>
    %6173 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6174 = stablehlo.multiply %6173, %arg377 : tensor<768xf32>
    %6175 = stablehlo.add %6172, %6174 : tensor<768xf32>
    %6176 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6177 = stablehlo.multiply %6176, %5170 : tensor<3072x768xf32>
    %6178 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6179 = stablehlo.multiply %6178, %arg378 : tensor<3072x768xf32>
    %6180 = stablehlo.add %6177, %6179 : tensor<3072x768xf32>
    %6181 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6182 = stablehlo.multiply %6181, %5175 : tensor<3072xf32>
    %6183 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6184 = stablehlo.multiply %6183, %arg379 : tensor<3072xf32>
    %6185 = stablehlo.add %6182, %6184 : tensor<3072xf32>
    %6186 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6187 = stablehlo.multiply %6186, %5180 : tensor<768x3072xf32>
    %6188 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6189 = stablehlo.multiply %6188, %arg380 : tensor<768x3072xf32>
    %6190 = stablehlo.add %6187, %6189 : tensor<768x3072xf32>
    %6191 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6192 = stablehlo.multiply %6191, %5185 : tensor<768xf32>
    %6193 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6194 = stablehlo.multiply %6193, %arg381 : tensor<768xf32>
    %6195 = stablehlo.add %6192, %6194 : tensor<768xf32>
    %6196 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6197 = stablehlo.multiply %6196, %5190 : tensor<768xf32>
    %6198 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6199 = stablehlo.multiply %6198, %arg382 : tensor<768xf32>
    %6200 = stablehlo.add %6197, %6199 : tensor<768xf32>
    %6201 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6202 = stablehlo.multiply %6201, %5195 : tensor<768xf32>
    %6203 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6204 = stablehlo.multiply %6203, %arg383 : tensor<768xf32>
    %6205 = stablehlo.add %6202, %6204 : tensor<768xf32>
    %6206 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6207 = stablehlo.multiply %6206, %5200 : tensor<768x768xf32>
    %6208 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6209 = stablehlo.multiply %6208, %arg384 : tensor<768x768xf32>
    %6210 = stablehlo.add %6207, %6209 : tensor<768x768xf32>
    %6211 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6212 = stablehlo.multiply %6211, %5205 : tensor<768xf32>
    %6213 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6214 = stablehlo.multiply %6213, %arg385 : tensor<768xf32>
    %6215 = stablehlo.add %6212, %6214 : tensor<768xf32>
    %6216 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6217 = stablehlo.multiply %6216, %5210 : tensor<768x768xf32>
    %6218 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6219 = stablehlo.multiply %6218, %arg386 : tensor<768x768xf32>
    %6220 = stablehlo.add %6217, %6219 : tensor<768x768xf32>
    %6221 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6222 = stablehlo.multiply %6221, %5215 : tensor<768xf32>
    %6223 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6224 = stablehlo.multiply %6223, %arg387 : tensor<768xf32>
    %6225 = stablehlo.add %6222, %6224 : tensor<768xf32>
    %6226 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6227 = stablehlo.multiply %6226, %5220 : tensor<768x768xf32>
    %6228 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6229 = stablehlo.multiply %6228, %arg388 : tensor<768x768xf32>
    %6230 = stablehlo.add %6227, %6229 : tensor<768x768xf32>
    %6231 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6232 = stablehlo.multiply %6231, %5225 : tensor<768xf32>
    %6233 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6234 = stablehlo.multiply %6233, %arg389 : tensor<768xf32>
    %6235 = stablehlo.add %6232, %6234 : tensor<768xf32>
    %6236 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6237 = stablehlo.multiply %6236, %5230 : tensor<768x768xf32>
    %6238 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6239 = stablehlo.multiply %6238, %arg390 : tensor<768x768xf32>
    %6240 = stablehlo.add %6237, %6239 : tensor<768x768xf32>
    %6241 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6242 = stablehlo.multiply %6241, %5235 : tensor<768xf32>
    %6243 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6244 = stablehlo.multiply %6243, %arg391 : tensor<768xf32>
    %6245 = stablehlo.add %6242, %6244 : tensor<768xf32>
    %6246 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6247 = stablehlo.multiply %6246, %5240 : tensor<768xf32>
    %6248 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6249 = stablehlo.multiply %6248, %arg392 : tensor<768xf32>
    %6250 = stablehlo.add %6247, %6249 : tensor<768xf32>
    %6251 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6252 = stablehlo.multiply %6251, %5245 : tensor<768xf32>
    %6253 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6254 = stablehlo.multiply %6253, %arg393 : tensor<768xf32>
    %6255 = stablehlo.add %6252, %6254 : tensor<768xf32>
    %6256 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6257 = stablehlo.multiply %6256, %5250 : tensor<3072x768xf32>
    %6258 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6259 = stablehlo.multiply %6258, %arg394 : tensor<3072x768xf32>
    %6260 = stablehlo.add %6257, %6259 : tensor<3072x768xf32>
    %6261 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6262 = stablehlo.multiply %6261, %5255 : tensor<3072xf32>
    %6263 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6264 = stablehlo.multiply %6263, %arg395 : tensor<3072xf32>
    %6265 = stablehlo.add %6262, %6264 : tensor<3072xf32>
    %6266 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6267 = stablehlo.multiply %6266, %5260 : tensor<768x3072xf32>
    %6268 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6269 = stablehlo.multiply %6268, %arg396 : tensor<768x3072xf32>
    %6270 = stablehlo.add %6267, %6269 : tensor<768x3072xf32>
    %6271 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6272 = stablehlo.multiply %6271, %5265 : tensor<768xf32>
    %6273 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6274 = stablehlo.multiply %6273, %arg397 : tensor<768xf32>
    %6275 = stablehlo.add %6272, %6274 : tensor<768xf32>
    %6276 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6277 = stablehlo.multiply %6276, %5270 : tensor<768xf32>
    %6278 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6279 = stablehlo.multiply %6278, %arg398 : tensor<768xf32>
    %6280 = stablehlo.add %6277, %6279 : tensor<768xf32>
    %6281 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6282 = stablehlo.multiply %6281, %5275 : tensor<768xf32>
    %6283 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6284 = stablehlo.multiply %6283, %arg399 : tensor<768xf32>
    %6285 = stablehlo.add %6282, %6284 : tensor<768xf32>
    %6286 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6287 = stablehlo.multiply %6286, %5280 : tensor<768x768xf32>
    %6288 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6289 = stablehlo.multiply %6288, %arg400 : tensor<768x768xf32>
    %6290 = stablehlo.add %6287, %6289 : tensor<768x768xf32>
    %6291 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6292 = stablehlo.multiply %6291, %5285 : tensor<768xf32>
    %6293 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6294 = stablehlo.multiply %6293, %arg401 : tensor<768xf32>
    %6295 = stablehlo.add %6292, %6294 : tensor<768xf32>
    %6296 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6297 = stablehlo.multiply %6296, %5290 : tensor<768xf32>
    %6298 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6299 = stablehlo.multiply %6298, %arg402 : tensor<768xf32>
    %6300 = stablehlo.add %6297, %6299 : tensor<768xf32>
    %6301 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6302 = stablehlo.multiply %6301, %5295 : tensor<768xf32>
    %6303 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6304 = stablehlo.multiply %6303, %arg403 : tensor<768xf32>
    %6305 = stablehlo.add %6302, %6304 : tensor<768xf32>
    %6306 = stablehlo.broadcast_in_dim %cst_643, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6307 = stablehlo.multiply %6306, %5300 : tensor<30522xf32>
    %6308 = stablehlo.broadcast_in_dim %cst_644, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %6309 = stablehlo.multiply %6308, %arg404 : tensor<30522xf32>
    %6310 = stablehlo.add %6307, %6309 : tensor<30522xf32>
    %6311 = stablehlo.multiply %4295, %4295 : tensor<30522x768xf32>
    %cst_645 = stablehlo.constant dense<1.000000e-03> : tensor<f32>
    %6312 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6313 = stablehlo.multiply %6312, %6311 : tensor<30522x768xf32>
    %cst_646 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %6314 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %6315 = stablehlo.multiply %6314, %arg405 : tensor<30522x768xf32>
    %6316 = stablehlo.add %6313, %6315 : tensor<30522x768xf32>
    %6317 = stablehlo.multiply %4300, %4300 : tensor<512x768xf32>
    %6318 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6319 = stablehlo.multiply %6318, %6317 : tensor<512x768xf32>
    %6320 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %6321 = stablehlo.multiply %6320, %arg406 : tensor<512x768xf32>
    %6322 = stablehlo.add %6319, %6321 : tensor<512x768xf32>
    %6323 = stablehlo.multiply %4305, %4305 : tensor<2x768xf32>
    %6324 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6325 = stablehlo.multiply %6324, %6323 : tensor<2x768xf32>
    %6326 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %6327 = stablehlo.multiply %6326, %arg407 : tensor<2x768xf32>
    %6328 = stablehlo.add %6325, %6327 : tensor<2x768xf32>
    %6329 = stablehlo.multiply %4310, %4310 : tensor<768xf32>
    %6330 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6331 = stablehlo.multiply %6330, %6329 : tensor<768xf32>
    %6332 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6333 = stablehlo.multiply %6332, %arg408 : tensor<768xf32>
    %6334 = stablehlo.add %6331, %6333 : tensor<768xf32>
    %6335 = stablehlo.multiply %4315, %4315 : tensor<768xf32>
    %6336 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6337 = stablehlo.multiply %6336, %6335 : tensor<768xf32>
    %6338 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6339 = stablehlo.multiply %6338, %arg409 : tensor<768xf32>
    %6340 = stablehlo.add %6337, %6339 : tensor<768xf32>
    %6341 = stablehlo.multiply %4320, %4320 : tensor<768x768xf32>
    %6342 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6343 = stablehlo.multiply %6342, %6341 : tensor<768x768xf32>
    %6344 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6345 = stablehlo.multiply %6344, %arg410 : tensor<768x768xf32>
    %6346 = stablehlo.add %6343, %6345 : tensor<768x768xf32>
    %6347 = stablehlo.multiply %4325, %4325 : tensor<768xf32>
    %6348 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6349 = stablehlo.multiply %6348, %6347 : tensor<768xf32>
    %6350 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6351 = stablehlo.multiply %6350, %arg411 : tensor<768xf32>
    %6352 = stablehlo.add %6349, %6351 : tensor<768xf32>
    %6353 = stablehlo.multiply %4330, %4330 : tensor<768x768xf32>
    %6354 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6355 = stablehlo.multiply %6354, %6353 : tensor<768x768xf32>
    %6356 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6357 = stablehlo.multiply %6356, %arg412 : tensor<768x768xf32>
    %6358 = stablehlo.add %6355, %6357 : tensor<768x768xf32>
    %6359 = stablehlo.multiply %4335, %4335 : tensor<768xf32>
    %6360 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6361 = stablehlo.multiply %6360, %6359 : tensor<768xf32>
    %6362 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6363 = stablehlo.multiply %6362, %arg413 : tensor<768xf32>
    %6364 = stablehlo.add %6361, %6363 : tensor<768xf32>
    %6365 = stablehlo.multiply %4340, %4340 : tensor<768x768xf32>
    %6366 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6367 = stablehlo.multiply %6366, %6365 : tensor<768x768xf32>
    %6368 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6369 = stablehlo.multiply %6368, %arg414 : tensor<768x768xf32>
    %6370 = stablehlo.add %6367, %6369 : tensor<768x768xf32>
    %6371 = stablehlo.multiply %4345, %4345 : tensor<768xf32>
    %6372 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6373 = stablehlo.multiply %6372, %6371 : tensor<768xf32>
    %6374 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6375 = stablehlo.multiply %6374, %arg415 : tensor<768xf32>
    %6376 = stablehlo.add %6373, %6375 : tensor<768xf32>
    %6377 = stablehlo.multiply %4350, %4350 : tensor<768x768xf32>
    %6378 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6379 = stablehlo.multiply %6378, %6377 : tensor<768x768xf32>
    %6380 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6381 = stablehlo.multiply %6380, %arg416 : tensor<768x768xf32>
    %6382 = stablehlo.add %6379, %6381 : tensor<768x768xf32>
    %6383 = stablehlo.multiply %4355, %4355 : tensor<768xf32>
    %6384 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6385 = stablehlo.multiply %6384, %6383 : tensor<768xf32>
    %6386 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6387 = stablehlo.multiply %6386, %arg417 : tensor<768xf32>
    %6388 = stablehlo.add %6385, %6387 : tensor<768xf32>
    %6389 = stablehlo.multiply %4360, %4360 : tensor<768xf32>
    %6390 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6391 = stablehlo.multiply %6390, %6389 : tensor<768xf32>
    %6392 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6393 = stablehlo.multiply %6392, %arg418 : tensor<768xf32>
    %6394 = stablehlo.add %6391, %6393 : tensor<768xf32>
    %6395 = stablehlo.multiply %4365, %4365 : tensor<768xf32>
    %6396 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6397 = stablehlo.multiply %6396, %6395 : tensor<768xf32>
    %6398 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6399 = stablehlo.multiply %6398, %arg419 : tensor<768xf32>
    %6400 = stablehlo.add %6397, %6399 : tensor<768xf32>
    %6401 = stablehlo.multiply %4370, %4370 : tensor<3072x768xf32>
    %6402 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6403 = stablehlo.multiply %6402, %6401 : tensor<3072x768xf32>
    %6404 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6405 = stablehlo.multiply %6404, %arg420 : tensor<3072x768xf32>
    %6406 = stablehlo.add %6403, %6405 : tensor<3072x768xf32>
    %6407 = stablehlo.multiply %4375, %4375 : tensor<3072xf32>
    %6408 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6409 = stablehlo.multiply %6408, %6407 : tensor<3072xf32>
    %6410 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6411 = stablehlo.multiply %6410, %arg421 : tensor<3072xf32>
    %6412 = stablehlo.add %6409, %6411 : tensor<3072xf32>
    %6413 = stablehlo.multiply %4380, %4380 : tensor<768x3072xf32>
    %6414 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6415 = stablehlo.multiply %6414, %6413 : tensor<768x3072xf32>
    %6416 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6417 = stablehlo.multiply %6416, %arg422 : tensor<768x3072xf32>
    %6418 = stablehlo.add %6415, %6417 : tensor<768x3072xf32>
    %6419 = stablehlo.multiply %4385, %4385 : tensor<768xf32>
    %6420 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6421 = stablehlo.multiply %6420, %6419 : tensor<768xf32>
    %6422 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6423 = stablehlo.multiply %6422, %arg423 : tensor<768xf32>
    %6424 = stablehlo.add %6421, %6423 : tensor<768xf32>
    %6425 = stablehlo.multiply %4390, %4390 : tensor<768xf32>
    %6426 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6427 = stablehlo.multiply %6426, %6425 : tensor<768xf32>
    %6428 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6429 = stablehlo.multiply %6428, %arg424 : tensor<768xf32>
    %6430 = stablehlo.add %6427, %6429 : tensor<768xf32>
    %6431 = stablehlo.multiply %4395, %4395 : tensor<768xf32>
    %6432 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6433 = stablehlo.multiply %6432, %6431 : tensor<768xf32>
    %6434 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6435 = stablehlo.multiply %6434, %arg425 : tensor<768xf32>
    %6436 = stablehlo.add %6433, %6435 : tensor<768xf32>
    %6437 = stablehlo.multiply %4400, %4400 : tensor<768x768xf32>
    %6438 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6439 = stablehlo.multiply %6438, %6437 : tensor<768x768xf32>
    %6440 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6441 = stablehlo.multiply %6440, %arg426 : tensor<768x768xf32>
    %6442 = stablehlo.add %6439, %6441 : tensor<768x768xf32>
    %6443 = stablehlo.multiply %4405, %4405 : tensor<768xf32>
    %6444 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6445 = stablehlo.multiply %6444, %6443 : tensor<768xf32>
    %6446 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6447 = stablehlo.multiply %6446, %arg427 : tensor<768xf32>
    %6448 = stablehlo.add %6445, %6447 : tensor<768xf32>
    %6449 = stablehlo.multiply %4410, %4410 : tensor<768x768xf32>
    %6450 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6451 = stablehlo.multiply %6450, %6449 : tensor<768x768xf32>
    %6452 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6453 = stablehlo.multiply %6452, %arg428 : tensor<768x768xf32>
    %6454 = stablehlo.add %6451, %6453 : tensor<768x768xf32>
    %6455 = stablehlo.multiply %4415, %4415 : tensor<768xf32>
    %6456 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6457 = stablehlo.multiply %6456, %6455 : tensor<768xf32>
    %6458 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6459 = stablehlo.multiply %6458, %arg429 : tensor<768xf32>
    %6460 = stablehlo.add %6457, %6459 : tensor<768xf32>
    %6461 = stablehlo.multiply %4420, %4420 : tensor<768x768xf32>
    %6462 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6463 = stablehlo.multiply %6462, %6461 : tensor<768x768xf32>
    %6464 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6465 = stablehlo.multiply %6464, %arg430 : tensor<768x768xf32>
    %6466 = stablehlo.add %6463, %6465 : tensor<768x768xf32>
    %6467 = stablehlo.multiply %4425, %4425 : tensor<768xf32>
    %6468 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6469 = stablehlo.multiply %6468, %6467 : tensor<768xf32>
    %6470 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6471 = stablehlo.multiply %6470, %arg431 : tensor<768xf32>
    %6472 = stablehlo.add %6469, %6471 : tensor<768xf32>
    %6473 = stablehlo.multiply %4430, %4430 : tensor<768x768xf32>
    %6474 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6475 = stablehlo.multiply %6474, %6473 : tensor<768x768xf32>
    %6476 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6477 = stablehlo.multiply %6476, %arg432 : tensor<768x768xf32>
    %6478 = stablehlo.add %6475, %6477 : tensor<768x768xf32>
    %6479 = stablehlo.multiply %4435, %4435 : tensor<768xf32>
    %6480 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6481 = stablehlo.multiply %6480, %6479 : tensor<768xf32>
    %6482 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6483 = stablehlo.multiply %6482, %arg433 : tensor<768xf32>
    %6484 = stablehlo.add %6481, %6483 : tensor<768xf32>
    %6485 = stablehlo.multiply %4440, %4440 : tensor<768xf32>
    %6486 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6487 = stablehlo.multiply %6486, %6485 : tensor<768xf32>
    %6488 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6489 = stablehlo.multiply %6488, %arg434 : tensor<768xf32>
    %6490 = stablehlo.add %6487, %6489 : tensor<768xf32>
    %6491 = stablehlo.multiply %4445, %4445 : tensor<768xf32>
    %6492 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6493 = stablehlo.multiply %6492, %6491 : tensor<768xf32>
    %6494 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6495 = stablehlo.multiply %6494, %arg435 : tensor<768xf32>
    %6496 = stablehlo.add %6493, %6495 : tensor<768xf32>
    %6497 = stablehlo.multiply %4450, %4450 : tensor<3072x768xf32>
    %6498 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6499 = stablehlo.multiply %6498, %6497 : tensor<3072x768xf32>
    %6500 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6501 = stablehlo.multiply %6500, %arg436 : tensor<3072x768xf32>
    %6502 = stablehlo.add %6499, %6501 : tensor<3072x768xf32>
    %6503 = stablehlo.multiply %4455, %4455 : tensor<3072xf32>
    %6504 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6505 = stablehlo.multiply %6504, %6503 : tensor<3072xf32>
    %6506 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6507 = stablehlo.multiply %6506, %arg437 : tensor<3072xf32>
    %6508 = stablehlo.add %6505, %6507 : tensor<3072xf32>
    %6509 = stablehlo.multiply %4460, %4460 : tensor<768x3072xf32>
    %6510 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6511 = stablehlo.multiply %6510, %6509 : tensor<768x3072xf32>
    %6512 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6513 = stablehlo.multiply %6512, %arg438 : tensor<768x3072xf32>
    %6514 = stablehlo.add %6511, %6513 : tensor<768x3072xf32>
    %6515 = stablehlo.multiply %4465, %4465 : tensor<768xf32>
    %6516 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6517 = stablehlo.multiply %6516, %6515 : tensor<768xf32>
    %6518 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6519 = stablehlo.multiply %6518, %arg439 : tensor<768xf32>
    %6520 = stablehlo.add %6517, %6519 : tensor<768xf32>
    %6521 = stablehlo.multiply %4470, %4470 : tensor<768xf32>
    %6522 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6523 = stablehlo.multiply %6522, %6521 : tensor<768xf32>
    %6524 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6525 = stablehlo.multiply %6524, %arg440 : tensor<768xf32>
    %6526 = stablehlo.add %6523, %6525 : tensor<768xf32>
    %6527 = stablehlo.multiply %4475, %4475 : tensor<768xf32>
    %6528 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6529 = stablehlo.multiply %6528, %6527 : tensor<768xf32>
    %6530 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6531 = stablehlo.multiply %6530, %arg441 : tensor<768xf32>
    %6532 = stablehlo.add %6529, %6531 : tensor<768xf32>
    %6533 = stablehlo.multiply %4480, %4480 : tensor<768x768xf32>
    %6534 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6535 = stablehlo.multiply %6534, %6533 : tensor<768x768xf32>
    %6536 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6537 = stablehlo.multiply %6536, %arg442 : tensor<768x768xf32>
    %6538 = stablehlo.add %6535, %6537 : tensor<768x768xf32>
    %6539 = stablehlo.multiply %4485, %4485 : tensor<768xf32>
    %6540 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6541 = stablehlo.multiply %6540, %6539 : tensor<768xf32>
    %6542 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6543 = stablehlo.multiply %6542, %arg443 : tensor<768xf32>
    %6544 = stablehlo.add %6541, %6543 : tensor<768xf32>
    %6545 = stablehlo.multiply %4490, %4490 : tensor<768x768xf32>
    %6546 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6547 = stablehlo.multiply %6546, %6545 : tensor<768x768xf32>
    %6548 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6549 = stablehlo.multiply %6548, %arg444 : tensor<768x768xf32>
    %6550 = stablehlo.add %6547, %6549 : tensor<768x768xf32>
    %6551 = stablehlo.multiply %4495, %4495 : tensor<768xf32>
    %6552 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6553 = stablehlo.multiply %6552, %6551 : tensor<768xf32>
    %6554 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6555 = stablehlo.multiply %6554, %arg445 : tensor<768xf32>
    %6556 = stablehlo.add %6553, %6555 : tensor<768xf32>
    %6557 = stablehlo.multiply %4500, %4500 : tensor<768x768xf32>
    %6558 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6559 = stablehlo.multiply %6558, %6557 : tensor<768x768xf32>
    %6560 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6561 = stablehlo.multiply %6560, %arg446 : tensor<768x768xf32>
    %6562 = stablehlo.add %6559, %6561 : tensor<768x768xf32>
    %6563 = stablehlo.multiply %4505, %4505 : tensor<768xf32>
    %6564 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6565 = stablehlo.multiply %6564, %6563 : tensor<768xf32>
    %6566 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6567 = stablehlo.multiply %6566, %arg447 : tensor<768xf32>
    %6568 = stablehlo.add %6565, %6567 : tensor<768xf32>
    %6569 = stablehlo.multiply %4510, %4510 : tensor<768x768xf32>
    %6570 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6571 = stablehlo.multiply %6570, %6569 : tensor<768x768xf32>
    %6572 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6573 = stablehlo.multiply %6572, %arg448 : tensor<768x768xf32>
    %6574 = stablehlo.add %6571, %6573 : tensor<768x768xf32>
    %6575 = stablehlo.multiply %4515, %4515 : tensor<768xf32>
    %6576 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6577 = stablehlo.multiply %6576, %6575 : tensor<768xf32>
    %6578 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6579 = stablehlo.multiply %6578, %arg449 : tensor<768xf32>
    %6580 = stablehlo.add %6577, %6579 : tensor<768xf32>
    %6581 = stablehlo.multiply %4520, %4520 : tensor<768xf32>
    %6582 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6583 = stablehlo.multiply %6582, %6581 : tensor<768xf32>
    %6584 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6585 = stablehlo.multiply %6584, %arg450 : tensor<768xf32>
    %6586 = stablehlo.add %6583, %6585 : tensor<768xf32>
    %6587 = stablehlo.multiply %4525, %4525 : tensor<768xf32>
    %6588 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6589 = stablehlo.multiply %6588, %6587 : tensor<768xf32>
    %6590 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6591 = stablehlo.multiply %6590, %arg451 : tensor<768xf32>
    %6592 = stablehlo.add %6589, %6591 : tensor<768xf32>
    %6593 = stablehlo.multiply %4530, %4530 : tensor<3072x768xf32>
    %6594 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6595 = stablehlo.multiply %6594, %6593 : tensor<3072x768xf32>
    %6596 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6597 = stablehlo.multiply %6596, %arg452 : tensor<3072x768xf32>
    %6598 = stablehlo.add %6595, %6597 : tensor<3072x768xf32>
    %6599 = stablehlo.multiply %4535, %4535 : tensor<3072xf32>
    %6600 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6601 = stablehlo.multiply %6600, %6599 : tensor<3072xf32>
    %6602 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6603 = stablehlo.multiply %6602, %arg453 : tensor<3072xf32>
    %6604 = stablehlo.add %6601, %6603 : tensor<3072xf32>
    %6605 = stablehlo.multiply %4540, %4540 : tensor<768x3072xf32>
    %6606 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6607 = stablehlo.multiply %6606, %6605 : tensor<768x3072xf32>
    %6608 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6609 = stablehlo.multiply %6608, %arg454 : tensor<768x3072xf32>
    %6610 = stablehlo.add %6607, %6609 : tensor<768x3072xf32>
    %6611 = stablehlo.multiply %4545, %4545 : tensor<768xf32>
    %6612 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6613 = stablehlo.multiply %6612, %6611 : tensor<768xf32>
    %6614 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6615 = stablehlo.multiply %6614, %arg455 : tensor<768xf32>
    %6616 = stablehlo.add %6613, %6615 : tensor<768xf32>
    %6617 = stablehlo.multiply %4550, %4550 : tensor<768xf32>
    %6618 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6619 = stablehlo.multiply %6618, %6617 : tensor<768xf32>
    %6620 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6621 = stablehlo.multiply %6620, %arg456 : tensor<768xf32>
    %6622 = stablehlo.add %6619, %6621 : tensor<768xf32>
    %6623 = stablehlo.multiply %4555, %4555 : tensor<768xf32>
    %6624 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6625 = stablehlo.multiply %6624, %6623 : tensor<768xf32>
    %6626 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6627 = stablehlo.multiply %6626, %arg457 : tensor<768xf32>
    %6628 = stablehlo.add %6625, %6627 : tensor<768xf32>
    %6629 = stablehlo.multiply %4560, %4560 : tensor<768x768xf32>
    %6630 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6631 = stablehlo.multiply %6630, %6629 : tensor<768x768xf32>
    %6632 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6633 = stablehlo.multiply %6632, %arg458 : tensor<768x768xf32>
    %6634 = stablehlo.add %6631, %6633 : tensor<768x768xf32>
    %6635 = stablehlo.multiply %4565, %4565 : tensor<768xf32>
    %6636 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6637 = stablehlo.multiply %6636, %6635 : tensor<768xf32>
    %6638 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6639 = stablehlo.multiply %6638, %arg459 : tensor<768xf32>
    %6640 = stablehlo.add %6637, %6639 : tensor<768xf32>
    %6641 = stablehlo.multiply %4570, %4570 : tensor<768x768xf32>
    %6642 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6643 = stablehlo.multiply %6642, %6641 : tensor<768x768xf32>
    %6644 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6645 = stablehlo.multiply %6644, %arg460 : tensor<768x768xf32>
    %6646 = stablehlo.add %6643, %6645 : tensor<768x768xf32>
    %6647 = stablehlo.multiply %4575, %4575 : tensor<768xf32>
    %6648 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6649 = stablehlo.multiply %6648, %6647 : tensor<768xf32>
    %6650 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6651 = stablehlo.multiply %6650, %arg461 : tensor<768xf32>
    %6652 = stablehlo.add %6649, %6651 : tensor<768xf32>
    %6653 = stablehlo.multiply %4580, %4580 : tensor<768x768xf32>
    %6654 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6655 = stablehlo.multiply %6654, %6653 : tensor<768x768xf32>
    %6656 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6657 = stablehlo.multiply %6656, %arg462 : tensor<768x768xf32>
    %6658 = stablehlo.add %6655, %6657 : tensor<768x768xf32>
    %6659 = stablehlo.multiply %4585, %4585 : tensor<768xf32>
    %6660 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6661 = stablehlo.multiply %6660, %6659 : tensor<768xf32>
    %6662 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6663 = stablehlo.multiply %6662, %arg463 : tensor<768xf32>
    %6664 = stablehlo.add %6661, %6663 : tensor<768xf32>
    %6665 = stablehlo.multiply %4590, %4590 : tensor<768x768xf32>
    %6666 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6667 = stablehlo.multiply %6666, %6665 : tensor<768x768xf32>
    %6668 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6669 = stablehlo.multiply %6668, %arg464 : tensor<768x768xf32>
    %6670 = stablehlo.add %6667, %6669 : tensor<768x768xf32>
    %6671 = stablehlo.multiply %4595, %4595 : tensor<768xf32>
    %6672 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6673 = stablehlo.multiply %6672, %6671 : tensor<768xf32>
    %6674 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6675 = stablehlo.multiply %6674, %arg465 : tensor<768xf32>
    %6676 = stablehlo.add %6673, %6675 : tensor<768xf32>
    %6677 = stablehlo.multiply %4600, %4600 : tensor<768xf32>
    %6678 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6679 = stablehlo.multiply %6678, %6677 : tensor<768xf32>
    %6680 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6681 = stablehlo.multiply %6680, %arg466 : tensor<768xf32>
    %6682 = stablehlo.add %6679, %6681 : tensor<768xf32>
    %6683 = stablehlo.multiply %4605, %4605 : tensor<768xf32>
    %6684 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6685 = stablehlo.multiply %6684, %6683 : tensor<768xf32>
    %6686 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6687 = stablehlo.multiply %6686, %arg467 : tensor<768xf32>
    %6688 = stablehlo.add %6685, %6687 : tensor<768xf32>
    %6689 = stablehlo.multiply %4610, %4610 : tensor<3072x768xf32>
    %6690 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6691 = stablehlo.multiply %6690, %6689 : tensor<3072x768xf32>
    %6692 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6693 = stablehlo.multiply %6692, %arg468 : tensor<3072x768xf32>
    %6694 = stablehlo.add %6691, %6693 : tensor<3072x768xf32>
    %6695 = stablehlo.multiply %4615, %4615 : tensor<3072xf32>
    %6696 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6697 = stablehlo.multiply %6696, %6695 : tensor<3072xf32>
    %6698 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6699 = stablehlo.multiply %6698, %arg469 : tensor<3072xf32>
    %6700 = stablehlo.add %6697, %6699 : tensor<3072xf32>
    %6701 = stablehlo.multiply %4620, %4620 : tensor<768x3072xf32>
    %6702 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6703 = stablehlo.multiply %6702, %6701 : tensor<768x3072xf32>
    %6704 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6705 = stablehlo.multiply %6704, %arg470 : tensor<768x3072xf32>
    %6706 = stablehlo.add %6703, %6705 : tensor<768x3072xf32>
    %6707 = stablehlo.multiply %4625, %4625 : tensor<768xf32>
    %6708 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6709 = stablehlo.multiply %6708, %6707 : tensor<768xf32>
    %6710 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6711 = stablehlo.multiply %6710, %arg471 : tensor<768xf32>
    %6712 = stablehlo.add %6709, %6711 : tensor<768xf32>
    %6713 = stablehlo.multiply %4630, %4630 : tensor<768xf32>
    %6714 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6715 = stablehlo.multiply %6714, %6713 : tensor<768xf32>
    %6716 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6717 = stablehlo.multiply %6716, %arg472 : tensor<768xf32>
    %6718 = stablehlo.add %6715, %6717 : tensor<768xf32>
    %6719 = stablehlo.multiply %4635, %4635 : tensor<768xf32>
    %6720 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6721 = stablehlo.multiply %6720, %6719 : tensor<768xf32>
    %6722 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6723 = stablehlo.multiply %6722, %arg473 : tensor<768xf32>
    %6724 = stablehlo.add %6721, %6723 : tensor<768xf32>
    %6725 = stablehlo.multiply %4640, %4640 : tensor<768x768xf32>
    %6726 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6727 = stablehlo.multiply %6726, %6725 : tensor<768x768xf32>
    %6728 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6729 = stablehlo.multiply %6728, %arg474 : tensor<768x768xf32>
    %6730 = stablehlo.add %6727, %6729 : tensor<768x768xf32>
    %6731 = stablehlo.multiply %4645, %4645 : tensor<768xf32>
    %6732 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6733 = stablehlo.multiply %6732, %6731 : tensor<768xf32>
    %6734 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6735 = stablehlo.multiply %6734, %arg475 : tensor<768xf32>
    %6736 = stablehlo.add %6733, %6735 : tensor<768xf32>
    %6737 = stablehlo.multiply %4650, %4650 : tensor<768x768xf32>
    %6738 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6739 = stablehlo.multiply %6738, %6737 : tensor<768x768xf32>
    %6740 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6741 = stablehlo.multiply %6740, %arg476 : tensor<768x768xf32>
    %6742 = stablehlo.add %6739, %6741 : tensor<768x768xf32>
    %6743 = stablehlo.multiply %4655, %4655 : tensor<768xf32>
    %6744 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6745 = stablehlo.multiply %6744, %6743 : tensor<768xf32>
    %6746 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6747 = stablehlo.multiply %6746, %arg477 : tensor<768xf32>
    %6748 = stablehlo.add %6745, %6747 : tensor<768xf32>
    %6749 = stablehlo.multiply %4660, %4660 : tensor<768x768xf32>
    %6750 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6751 = stablehlo.multiply %6750, %6749 : tensor<768x768xf32>
    %6752 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6753 = stablehlo.multiply %6752, %arg478 : tensor<768x768xf32>
    %6754 = stablehlo.add %6751, %6753 : tensor<768x768xf32>
    %6755 = stablehlo.multiply %4665, %4665 : tensor<768xf32>
    %6756 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6757 = stablehlo.multiply %6756, %6755 : tensor<768xf32>
    %6758 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6759 = stablehlo.multiply %6758, %arg479 : tensor<768xf32>
    %6760 = stablehlo.add %6757, %6759 : tensor<768xf32>
    %6761 = stablehlo.multiply %4670, %4670 : tensor<768x768xf32>
    %6762 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6763 = stablehlo.multiply %6762, %6761 : tensor<768x768xf32>
    %6764 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6765 = stablehlo.multiply %6764, %arg480 : tensor<768x768xf32>
    %6766 = stablehlo.add %6763, %6765 : tensor<768x768xf32>
    %6767 = stablehlo.multiply %4675, %4675 : tensor<768xf32>
    %6768 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6769 = stablehlo.multiply %6768, %6767 : tensor<768xf32>
    %6770 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6771 = stablehlo.multiply %6770, %arg481 : tensor<768xf32>
    %6772 = stablehlo.add %6769, %6771 : tensor<768xf32>
    %6773 = stablehlo.multiply %4680, %4680 : tensor<768xf32>
    %6774 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6775 = stablehlo.multiply %6774, %6773 : tensor<768xf32>
    %6776 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6777 = stablehlo.multiply %6776, %arg482 : tensor<768xf32>
    %6778 = stablehlo.add %6775, %6777 : tensor<768xf32>
    %6779 = stablehlo.multiply %4685, %4685 : tensor<768xf32>
    %6780 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6781 = stablehlo.multiply %6780, %6779 : tensor<768xf32>
    %6782 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6783 = stablehlo.multiply %6782, %arg483 : tensor<768xf32>
    %6784 = stablehlo.add %6781, %6783 : tensor<768xf32>
    %6785 = stablehlo.multiply %4690, %4690 : tensor<3072x768xf32>
    %6786 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6787 = stablehlo.multiply %6786, %6785 : tensor<3072x768xf32>
    %6788 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6789 = stablehlo.multiply %6788, %arg484 : tensor<3072x768xf32>
    %6790 = stablehlo.add %6787, %6789 : tensor<3072x768xf32>
    %6791 = stablehlo.multiply %4695, %4695 : tensor<3072xf32>
    %6792 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6793 = stablehlo.multiply %6792, %6791 : tensor<3072xf32>
    %6794 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6795 = stablehlo.multiply %6794, %arg485 : tensor<3072xf32>
    %6796 = stablehlo.add %6793, %6795 : tensor<3072xf32>
    %6797 = stablehlo.multiply %4700, %4700 : tensor<768x3072xf32>
    %6798 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6799 = stablehlo.multiply %6798, %6797 : tensor<768x3072xf32>
    %6800 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6801 = stablehlo.multiply %6800, %arg486 : tensor<768x3072xf32>
    %6802 = stablehlo.add %6799, %6801 : tensor<768x3072xf32>
    %6803 = stablehlo.multiply %4705, %4705 : tensor<768xf32>
    %6804 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6805 = stablehlo.multiply %6804, %6803 : tensor<768xf32>
    %6806 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6807 = stablehlo.multiply %6806, %arg487 : tensor<768xf32>
    %6808 = stablehlo.add %6805, %6807 : tensor<768xf32>
    %6809 = stablehlo.multiply %4710, %4710 : tensor<768xf32>
    %6810 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6811 = stablehlo.multiply %6810, %6809 : tensor<768xf32>
    %6812 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6813 = stablehlo.multiply %6812, %arg488 : tensor<768xf32>
    %6814 = stablehlo.add %6811, %6813 : tensor<768xf32>
    %6815 = stablehlo.multiply %4715, %4715 : tensor<768xf32>
    %6816 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6817 = stablehlo.multiply %6816, %6815 : tensor<768xf32>
    %6818 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6819 = stablehlo.multiply %6818, %arg489 : tensor<768xf32>
    %6820 = stablehlo.add %6817, %6819 : tensor<768xf32>
    %6821 = stablehlo.multiply %4720, %4720 : tensor<768x768xf32>
    %6822 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6823 = stablehlo.multiply %6822, %6821 : tensor<768x768xf32>
    %6824 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6825 = stablehlo.multiply %6824, %arg490 : tensor<768x768xf32>
    %6826 = stablehlo.add %6823, %6825 : tensor<768x768xf32>
    %6827 = stablehlo.multiply %4725, %4725 : tensor<768xf32>
    %6828 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6829 = stablehlo.multiply %6828, %6827 : tensor<768xf32>
    %6830 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6831 = stablehlo.multiply %6830, %arg491 : tensor<768xf32>
    %6832 = stablehlo.add %6829, %6831 : tensor<768xf32>
    %6833 = stablehlo.multiply %4730, %4730 : tensor<768x768xf32>
    %6834 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6835 = stablehlo.multiply %6834, %6833 : tensor<768x768xf32>
    %6836 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6837 = stablehlo.multiply %6836, %arg492 : tensor<768x768xf32>
    %6838 = stablehlo.add %6835, %6837 : tensor<768x768xf32>
    %6839 = stablehlo.multiply %4735, %4735 : tensor<768xf32>
    %6840 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6841 = stablehlo.multiply %6840, %6839 : tensor<768xf32>
    %6842 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6843 = stablehlo.multiply %6842, %arg493 : tensor<768xf32>
    %6844 = stablehlo.add %6841, %6843 : tensor<768xf32>
    %6845 = stablehlo.multiply %4740, %4740 : tensor<768x768xf32>
    %6846 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6847 = stablehlo.multiply %6846, %6845 : tensor<768x768xf32>
    %6848 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6849 = stablehlo.multiply %6848, %arg494 : tensor<768x768xf32>
    %6850 = stablehlo.add %6847, %6849 : tensor<768x768xf32>
    %6851 = stablehlo.multiply %4745, %4745 : tensor<768xf32>
    %6852 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6853 = stablehlo.multiply %6852, %6851 : tensor<768xf32>
    %6854 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6855 = stablehlo.multiply %6854, %arg495 : tensor<768xf32>
    %6856 = stablehlo.add %6853, %6855 : tensor<768xf32>
    %6857 = stablehlo.multiply %4750, %4750 : tensor<768x768xf32>
    %6858 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6859 = stablehlo.multiply %6858, %6857 : tensor<768x768xf32>
    %6860 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6861 = stablehlo.multiply %6860, %arg496 : tensor<768x768xf32>
    %6862 = stablehlo.add %6859, %6861 : tensor<768x768xf32>
    %6863 = stablehlo.multiply %4755, %4755 : tensor<768xf32>
    %6864 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6865 = stablehlo.multiply %6864, %6863 : tensor<768xf32>
    %6866 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6867 = stablehlo.multiply %6866, %arg497 : tensor<768xf32>
    %6868 = stablehlo.add %6865, %6867 : tensor<768xf32>
    %6869 = stablehlo.multiply %4760, %4760 : tensor<768xf32>
    %6870 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6871 = stablehlo.multiply %6870, %6869 : tensor<768xf32>
    %6872 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6873 = stablehlo.multiply %6872, %arg498 : tensor<768xf32>
    %6874 = stablehlo.add %6871, %6873 : tensor<768xf32>
    %6875 = stablehlo.multiply %4765, %4765 : tensor<768xf32>
    %6876 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6877 = stablehlo.multiply %6876, %6875 : tensor<768xf32>
    %6878 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6879 = stablehlo.multiply %6878, %arg499 : tensor<768xf32>
    %6880 = stablehlo.add %6877, %6879 : tensor<768xf32>
    %6881 = stablehlo.multiply %4770, %4770 : tensor<3072x768xf32>
    %6882 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6883 = stablehlo.multiply %6882, %6881 : tensor<3072x768xf32>
    %6884 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6885 = stablehlo.multiply %6884, %arg500 : tensor<3072x768xf32>
    %6886 = stablehlo.add %6883, %6885 : tensor<3072x768xf32>
    %6887 = stablehlo.multiply %4775, %4775 : tensor<3072xf32>
    %6888 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6889 = stablehlo.multiply %6888, %6887 : tensor<3072xf32>
    %6890 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6891 = stablehlo.multiply %6890, %arg501 : tensor<3072xf32>
    %6892 = stablehlo.add %6889, %6891 : tensor<3072xf32>
    %6893 = stablehlo.multiply %4780, %4780 : tensor<768x3072xf32>
    %6894 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6895 = stablehlo.multiply %6894, %6893 : tensor<768x3072xf32>
    %6896 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6897 = stablehlo.multiply %6896, %arg502 : tensor<768x3072xf32>
    %6898 = stablehlo.add %6895, %6897 : tensor<768x3072xf32>
    %6899 = stablehlo.multiply %4785, %4785 : tensor<768xf32>
    %6900 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6901 = stablehlo.multiply %6900, %6899 : tensor<768xf32>
    %6902 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6903 = stablehlo.multiply %6902, %arg503 : tensor<768xf32>
    %6904 = stablehlo.add %6901, %6903 : tensor<768xf32>
    %6905 = stablehlo.multiply %4790, %4790 : tensor<768xf32>
    %6906 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6907 = stablehlo.multiply %6906, %6905 : tensor<768xf32>
    %6908 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6909 = stablehlo.multiply %6908, %arg504 : tensor<768xf32>
    %6910 = stablehlo.add %6907, %6909 : tensor<768xf32>
    %6911 = stablehlo.multiply %4795, %4795 : tensor<768xf32>
    %6912 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6913 = stablehlo.multiply %6912, %6911 : tensor<768xf32>
    %6914 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6915 = stablehlo.multiply %6914, %arg505 : tensor<768xf32>
    %6916 = stablehlo.add %6913, %6915 : tensor<768xf32>
    %6917 = stablehlo.multiply %4800, %4800 : tensor<768x768xf32>
    %6918 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6919 = stablehlo.multiply %6918, %6917 : tensor<768x768xf32>
    %6920 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6921 = stablehlo.multiply %6920, %arg506 : tensor<768x768xf32>
    %6922 = stablehlo.add %6919, %6921 : tensor<768x768xf32>
    %6923 = stablehlo.multiply %4805, %4805 : tensor<768xf32>
    %6924 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6925 = stablehlo.multiply %6924, %6923 : tensor<768xf32>
    %6926 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6927 = stablehlo.multiply %6926, %arg507 : tensor<768xf32>
    %6928 = stablehlo.add %6925, %6927 : tensor<768xf32>
    %6929 = stablehlo.multiply %4810, %4810 : tensor<768x768xf32>
    %6930 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6931 = stablehlo.multiply %6930, %6929 : tensor<768x768xf32>
    %6932 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6933 = stablehlo.multiply %6932, %arg508 : tensor<768x768xf32>
    %6934 = stablehlo.add %6931, %6933 : tensor<768x768xf32>
    %6935 = stablehlo.multiply %4815, %4815 : tensor<768xf32>
    %6936 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6937 = stablehlo.multiply %6936, %6935 : tensor<768xf32>
    %6938 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6939 = stablehlo.multiply %6938, %arg509 : tensor<768xf32>
    %6940 = stablehlo.add %6937, %6939 : tensor<768xf32>
    %6941 = stablehlo.multiply %4820, %4820 : tensor<768x768xf32>
    %6942 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6943 = stablehlo.multiply %6942, %6941 : tensor<768x768xf32>
    %6944 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6945 = stablehlo.multiply %6944, %arg510 : tensor<768x768xf32>
    %6946 = stablehlo.add %6943, %6945 : tensor<768x768xf32>
    %6947 = stablehlo.multiply %4825, %4825 : tensor<768xf32>
    %6948 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6949 = stablehlo.multiply %6948, %6947 : tensor<768xf32>
    %6950 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6951 = stablehlo.multiply %6950, %arg511 : tensor<768xf32>
    %6952 = stablehlo.add %6949, %6951 : tensor<768xf32>
    %6953 = stablehlo.multiply %4830, %4830 : tensor<768x768xf32>
    %6954 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6955 = stablehlo.multiply %6954, %6953 : tensor<768x768xf32>
    %6956 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %6957 = stablehlo.multiply %6956, %arg512 : tensor<768x768xf32>
    %6958 = stablehlo.add %6955, %6957 : tensor<768x768xf32>
    %6959 = stablehlo.multiply %4835, %4835 : tensor<768xf32>
    %6960 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6961 = stablehlo.multiply %6960, %6959 : tensor<768xf32>
    %6962 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6963 = stablehlo.multiply %6962, %arg513 : tensor<768xf32>
    %6964 = stablehlo.add %6961, %6963 : tensor<768xf32>
    %6965 = stablehlo.multiply %4840, %4840 : tensor<768xf32>
    %6966 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6967 = stablehlo.multiply %6966, %6965 : tensor<768xf32>
    %6968 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6969 = stablehlo.multiply %6968, %arg514 : tensor<768xf32>
    %6970 = stablehlo.add %6967, %6969 : tensor<768xf32>
    %6971 = stablehlo.multiply %4845, %4845 : tensor<768xf32>
    %6972 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6973 = stablehlo.multiply %6972, %6971 : tensor<768xf32>
    %6974 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6975 = stablehlo.multiply %6974, %arg515 : tensor<768xf32>
    %6976 = stablehlo.add %6973, %6975 : tensor<768xf32>
    %6977 = stablehlo.multiply %4850, %4850 : tensor<3072x768xf32>
    %6978 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6979 = stablehlo.multiply %6978, %6977 : tensor<3072x768xf32>
    %6980 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %6981 = stablehlo.multiply %6980, %arg516 : tensor<3072x768xf32>
    %6982 = stablehlo.add %6979, %6981 : tensor<3072x768xf32>
    %6983 = stablehlo.multiply %4855, %4855 : tensor<3072xf32>
    %6984 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6985 = stablehlo.multiply %6984, %6983 : tensor<3072xf32>
    %6986 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %6987 = stablehlo.multiply %6986, %arg517 : tensor<3072xf32>
    %6988 = stablehlo.add %6985, %6987 : tensor<3072xf32>
    %6989 = stablehlo.multiply %4860, %4860 : tensor<768x3072xf32>
    %6990 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6991 = stablehlo.multiply %6990, %6989 : tensor<768x3072xf32>
    %6992 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %6993 = stablehlo.multiply %6992, %arg518 : tensor<768x3072xf32>
    %6994 = stablehlo.add %6991, %6993 : tensor<768x3072xf32>
    %6995 = stablehlo.multiply %4865, %4865 : tensor<768xf32>
    %6996 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6997 = stablehlo.multiply %6996, %6995 : tensor<768xf32>
    %6998 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %6999 = stablehlo.multiply %6998, %arg519 : tensor<768xf32>
    %7000 = stablehlo.add %6997, %6999 : tensor<768xf32>
    %7001 = stablehlo.multiply %4870, %4870 : tensor<768xf32>
    %7002 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7003 = stablehlo.multiply %7002, %7001 : tensor<768xf32>
    %7004 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7005 = stablehlo.multiply %7004, %arg520 : tensor<768xf32>
    %7006 = stablehlo.add %7003, %7005 : tensor<768xf32>
    %7007 = stablehlo.multiply %4875, %4875 : tensor<768xf32>
    %7008 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7009 = stablehlo.multiply %7008, %7007 : tensor<768xf32>
    %7010 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7011 = stablehlo.multiply %7010, %arg521 : tensor<768xf32>
    %7012 = stablehlo.add %7009, %7011 : tensor<768xf32>
    %7013 = stablehlo.multiply %4880, %4880 : tensor<768x768xf32>
    %7014 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7015 = stablehlo.multiply %7014, %7013 : tensor<768x768xf32>
    %7016 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7017 = stablehlo.multiply %7016, %arg522 : tensor<768x768xf32>
    %7018 = stablehlo.add %7015, %7017 : tensor<768x768xf32>
    %7019 = stablehlo.multiply %4885, %4885 : tensor<768xf32>
    %7020 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7021 = stablehlo.multiply %7020, %7019 : tensor<768xf32>
    %7022 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7023 = stablehlo.multiply %7022, %arg523 : tensor<768xf32>
    %7024 = stablehlo.add %7021, %7023 : tensor<768xf32>
    %7025 = stablehlo.multiply %4890, %4890 : tensor<768x768xf32>
    %7026 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7027 = stablehlo.multiply %7026, %7025 : tensor<768x768xf32>
    %7028 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7029 = stablehlo.multiply %7028, %arg524 : tensor<768x768xf32>
    %7030 = stablehlo.add %7027, %7029 : tensor<768x768xf32>
    %7031 = stablehlo.multiply %4895, %4895 : tensor<768xf32>
    %7032 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7033 = stablehlo.multiply %7032, %7031 : tensor<768xf32>
    %7034 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7035 = stablehlo.multiply %7034, %arg525 : tensor<768xf32>
    %7036 = stablehlo.add %7033, %7035 : tensor<768xf32>
    %7037 = stablehlo.multiply %4900, %4900 : tensor<768x768xf32>
    %7038 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7039 = stablehlo.multiply %7038, %7037 : tensor<768x768xf32>
    %7040 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7041 = stablehlo.multiply %7040, %arg526 : tensor<768x768xf32>
    %7042 = stablehlo.add %7039, %7041 : tensor<768x768xf32>
    %7043 = stablehlo.multiply %4905, %4905 : tensor<768xf32>
    %7044 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7045 = stablehlo.multiply %7044, %7043 : tensor<768xf32>
    %7046 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7047 = stablehlo.multiply %7046, %arg527 : tensor<768xf32>
    %7048 = stablehlo.add %7045, %7047 : tensor<768xf32>
    %7049 = stablehlo.multiply %4910, %4910 : tensor<768x768xf32>
    %7050 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7051 = stablehlo.multiply %7050, %7049 : tensor<768x768xf32>
    %7052 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7053 = stablehlo.multiply %7052, %arg528 : tensor<768x768xf32>
    %7054 = stablehlo.add %7051, %7053 : tensor<768x768xf32>
    %7055 = stablehlo.multiply %4915, %4915 : tensor<768xf32>
    %7056 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7057 = stablehlo.multiply %7056, %7055 : tensor<768xf32>
    %7058 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7059 = stablehlo.multiply %7058, %arg529 : tensor<768xf32>
    %7060 = stablehlo.add %7057, %7059 : tensor<768xf32>
    %7061 = stablehlo.multiply %4920, %4920 : tensor<768xf32>
    %7062 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7063 = stablehlo.multiply %7062, %7061 : tensor<768xf32>
    %7064 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7065 = stablehlo.multiply %7064, %arg530 : tensor<768xf32>
    %7066 = stablehlo.add %7063, %7065 : tensor<768xf32>
    %7067 = stablehlo.multiply %4925, %4925 : tensor<768xf32>
    %7068 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7069 = stablehlo.multiply %7068, %7067 : tensor<768xf32>
    %7070 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7071 = stablehlo.multiply %7070, %arg531 : tensor<768xf32>
    %7072 = stablehlo.add %7069, %7071 : tensor<768xf32>
    %7073 = stablehlo.multiply %4930, %4930 : tensor<3072x768xf32>
    %7074 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7075 = stablehlo.multiply %7074, %7073 : tensor<3072x768xf32>
    %7076 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7077 = stablehlo.multiply %7076, %arg532 : tensor<3072x768xf32>
    %7078 = stablehlo.add %7075, %7077 : tensor<3072x768xf32>
    %7079 = stablehlo.multiply %4935, %4935 : tensor<3072xf32>
    %7080 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7081 = stablehlo.multiply %7080, %7079 : tensor<3072xf32>
    %7082 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7083 = stablehlo.multiply %7082, %arg533 : tensor<3072xf32>
    %7084 = stablehlo.add %7081, %7083 : tensor<3072xf32>
    %7085 = stablehlo.multiply %4940, %4940 : tensor<768x3072xf32>
    %7086 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7087 = stablehlo.multiply %7086, %7085 : tensor<768x3072xf32>
    %7088 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7089 = stablehlo.multiply %7088, %arg534 : tensor<768x3072xf32>
    %7090 = stablehlo.add %7087, %7089 : tensor<768x3072xf32>
    %7091 = stablehlo.multiply %4945, %4945 : tensor<768xf32>
    %7092 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7093 = stablehlo.multiply %7092, %7091 : tensor<768xf32>
    %7094 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7095 = stablehlo.multiply %7094, %arg535 : tensor<768xf32>
    %7096 = stablehlo.add %7093, %7095 : tensor<768xf32>
    %7097 = stablehlo.multiply %4950, %4950 : tensor<768xf32>
    %7098 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7099 = stablehlo.multiply %7098, %7097 : tensor<768xf32>
    %7100 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7101 = stablehlo.multiply %7100, %arg536 : tensor<768xf32>
    %7102 = stablehlo.add %7099, %7101 : tensor<768xf32>
    %7103 = stablehlo.multiply %4955, %4955 : tensor<768xf32>
    %7104 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7105 = stablehlo.multiply %7104, %7103 : tensor<768xf32>
    %7106 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7107 = stablehlo.multiply %7106, %arg537 : tensor<768xf32>
    %7108 = stablehlo.add %7105, %7107 : tensor<768xf32>
    %7109 = stablehlo.multiply %4960, %4960 : tensor<768x768xf32>
    %7110 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7111 = stablehlo.multiply %7110, %7109 : tensor<768x768xf32>
    %7112 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7113 = stablehlo.multiply %7112, %arg538 : tensor<768x768xf32>
    %7114 = stablehlo.add %7111, %7113 : tensor<768x768xf32>
    %7115 = stablehlo.multiply %4965, %4965 : tensor<768xf32>
    %7116 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7117 = stablehlo.multiply %7116, %7115 : tensor<768xf32>
    %7118 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7119 = stablehlo.multiply %7118, %arg539 : tensor<768xf32>
    %7120 = stablehlo.add %7117, %7119 : tensor<768xf32>
    %7121 = stablehlo.multiply %4970, %4970 : tensor<768x768xf32>
    %7122 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7123 = stablehlo.multiply %7122, %7121 : tensor<768x768xf32>
    %7124 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7125 = stablehlo.multiply %7124, %arg540 : tensor<768x768xf32>
    %7126 = stablehlo.add %7123, %7125 : tensor<768x768xf32>
    %7127 = stablehlo.multiply %4975, %4975 : tensor<768xf32>
    %7128 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7129 = stablehlo.multiply %7128, %7127 : tensor<768xf32>
    %7130 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7131 = stablehlo.multiply %7130, %arg541 : tensor<768xf32>
    %7132 = stablehlo.add %7129, %7131 : tensor<768xf32>
    %7133 = stablehlo.multiply %4980, %4980 : tensor<768x768xf32>
    %7134 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7135 = stablehlo.multiply %7134, %7133 : tensor<768x768xf32>
    %7136 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7137 = stablehlo.multiply %7136, %arg542 : tensor<768x768xf32>
    %7138 = stablehlo.add %7135, %7137 : tensor<768x768xf32>
    %7139 = stablehlo.multiply %4985, %4985 : tensor<768xf32>
    %7140 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7141 = stablehlo.multiply %7140, %7139 : tensor<768xf32>
    %7142 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7143 = stablehlo.multiply %7142, %arg543 : tensor<768xf32>
    %7144 = stablehlo.add %7141, %7143 : tensor<768xf32>
    %7145 = stablehlo.multiply %4990, %4990 : tensor<768x768xf32>
    %7146 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7147 = stablehlo.multiply %7146, %7145 : tensor<768x768xf32>
    %7148 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7149 = stablehlo.multiply %7148, %arg544 : tensor<768x768xf32>
    %7150 = stablehlo.add %7147, %7149 : tensor<768x768xf32>
    %7151 = stablehlo.multiply %4995, %4995 : tensor<768xf32>
    %7152 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7153 = stablehlo.multiply %7152, %7151 : tensor<768xf32>
    %7154 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7155 = stablehlo.multiply %7154, %arg545 : tensor<768xf32>
    %7156 = stablehlo.add %7153, %7155 : tensor<768xf32>
    %7157 = stablehlo.multiply %5000, %5000 : tensor<768xf32>
    %7158 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7159 = stablehlo.multiply %7158, %7157 : tensor<768xf32>
    %7160 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7161 = stablehlo.multiply %7160, %arg546 : tensor<768xf32>
    %7162 = stablehlo.add %7159, %7161 : tensor<768xf32>
    %7163 = stablehlo.multiply %5005, %5005 : tensor<768xf32>
    %7164 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7165 = stablehlo.multiply %7164, %7163 : tensor<768xf32>
    %7166 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7167 = stablehlo.multiply %7166, %arg547 : tensor<768xf32>
    %7168 = stablehlo.add %7165, %7167 : tensor<768xf32>
    %7169 = stablehlo.multiply %5010, %5010 : tensor<3072x768xf32>
    %7170 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7171 = stablehlo.multiply %7170, %7169 : tensor<3072x768xf32>
    %7172 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7173 = stablehlo.multiply %7172, %arg548 : tensor<3072x768xf32>
    %7174 = stablehlo.add %7171, %7173 : tensor<3072x768xf32>
    %7175 = stablehlo.multiply %5015, %5015 : tensor<3072xf32>
    %7176 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7177 = stablehlo.multiply %7176, %7175 : tensor<3072xf32>
    %7178 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7179 = stablehlo.multiply %7178, %arg549 : tensor<3072xf32>
    %7180 = stablehlo.add %7177, %7179 : tensor<3072xf32>
    %7181 = stablehlo.multiply %5020, %5020 : tensor<768x3072xf32>
    %7182 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7183 = stablehlo.multiply %7182, %7181 : tensor<768x3072xf32>
    %7184 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7185 = stablehlo.multiply %7184, %arg550 : tensor<768x3072xf32>
    %7186 = stablehlo.add %7183, %7185 : tensor<768x3072xf32>
    %7187 = stablehlo.multiply %5025, %5025 : tensor<768xf32>
    %7188 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7189 = stablehlo.multiply %7188, %7187 : tensor<768xf32>
    %7190 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7191 = stablehlo.multiply %7190, %arg551 : tensor<768xf32>
    %7192 = stablehlo.add %7189, %7191 : tensor<768xf32>
    %7193 = stablehlo.multiply %5030, %5030 : tensor<768xf32>
    %7194 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7195 = stablehlo.multiply %7194, %7193 : tensor<768xf32>
    %7196 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7197 = stablehlo.multiply %7196, %arg552 : tensor<768xf32>
    %7198 = stablehlo.add %7195, %7197 : tensor<768xf32>
    %7199 = stablehlo.multiply %5035, %5035 : tensor<768xf32>
    %7200 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7201 = stablehlo.multiply %7200, %7199 : tensor<768xf32>
    %7202 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7203 = stablehlo.multiply %7202, %arg553 : tensor<768xf32>
    %7204 = stablehlo.add %7201, %7203 : tensor<768xf32>
    %7205 = stablehlo.multiply %5040, %5040 : tensor<768x768xf32>
    %7206 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7207 = stablehlo.multiply %7206, %7205 : tensor<768x768xf32>
    %7208 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7209 = stablehlo.multiply %7208, %arg554 : tensor<768x768xf32>
    %7210 = stablehlo.add %7207, %7209 : tensor<768x768xf32>
    %7211 = stablehlo.multiply %5045, %5045 : tensor<768xf32>
    %7212 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7213 = stablehlo.multiply %7212, %7211 : tensor<768xf32>
    %7214 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7215 = stablehlo.multiply %7214, %arg555 : tensor<768xf32>
    %7216 = stablehlo.add %7213, %7215 : tensor<768xf32>
    %7217 = stablehlo.multiply %5050, %5050 : tensor<768x768xf32>
    %7218 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7219 = stablehlo.multiply %7218, %7217 : tensor<768x768xf32>
    %7220 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7221 = stablehlo.multiply %7220, %arg556 : tensor<768x768xf32>
    %7222 = stablehlo.add %7219, %7221 : tensor<768x768xf32>
    %7223 = stablehlo.multiply %5055, %5055 : tensor<768xf32>
    %7224 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7225 = stablehlo.multiply %7224, %7223 : tensor<768xf32>
    %7226 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7227 = stablehlo.multiply %7226, %arg557 : tensor<768xf32>
    %7228 = stablehlo.add %7225, %7227 : tensor<768xf32>
    %7229 = stablehlo.multiply %5060, %5060 : tensor<768x768xf32>
    %7230 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7231 = stablehlo.multiply %7230, %7229 : tensor<768x768xf32>
    %7232 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7233 = stablehlo.multiply %7232, %arg558 : tensor<768x768xf32>
    %7234 = stablehlo.add %7231, %7233 : tensor<768x768xf32>
    %7235 = stablehlo.multiply %5065, %5065 : tensor<768xf32>
    %7236 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7237 = stablehlo.multiply %7236, %7235 : tensor<768xf32>
    %7238 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7239 = stablehlo.multiply %7238, %arg559 : tensor<768xf32>
    %7240 = stablehlo.add %7237, %7239 : tensor<768xf32>
    %7241 = stablehlo.multiply %5070, %5070 : tensor<768x768xf32>
    %7242 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7243 = stablehlo.multiply %7242, %7241 : tensor<768x768xf32>
    %7244 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7245 = stablehlo.multiply %7244, %arg560 : tensor<768x768xf32>
    %7246 = stablehlo.add %7243, %7245 : tensor<768x768xf32>
    %7247 = stablehlo.multiply %5075, %5075 : tensor<768xf32>
    %7248 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7249 = stablehlo.multiply %7248, %7247 : tensor<768xf32>
    %7250 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7251 = stablehlo.multiply %7250, %arg561 : tensor<768xf32>
    %7252 = stablehlo.add %7249, %7251 : tensor<768xf32>
    %7253 = stablehlo.multiply %5080, %5080 : tensor<768xf32>
    %7254 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7255 = stablehlo.multiply %7254, %7253 : tensor<768xf32>
    %7256 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7257 = stablehlo.multiply %7256, %arg562 : tensor<768xf32>
    %7258 = stablehlo.add %7255, %7257 : tensor<768xf32>
    %7259 = stablehlo.multiply %5085, %5085 : tensor<768xf32>
    %7260 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7261 = stablehlo.multiply %7260, %7259 : tensor<768xf32>
    %7262 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7263 = stablehlo.multiply %7262, %arg563 : tensor<768xf32>
    %7264 = stablehlo.add %7261, %7263 : tensor<768xf32>
    %7265 = stablehlo.multiply %5090, %5090 : tensor<3072x768xf32>
    %7266 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7267 = stablehlo.multiply %7266, %7265 : tensor<3072x768xf32>
    %7268 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7269 = stablehlo.multiply %7268, %arg564 : tensor<3072x768xf32>
    %7270 = stablehlo.add %7267, %7269 : tensor<3072x768xf32>
    %7271 = stablehlo.multiply %5095, %5095 : tensor<3072xf32>
    %7272 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7273 = stablehlo.multiply %7272, %7271 : tensor<3072xf32>
    %7274 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7275 = stablehlo.multiply %7274, %arg565 : tensor<3072xf32>
    %7276 = stablehlo.add %7273, %7275 : tensor<3072xf32>
    %7277 = stablehlo.multiply %5100, %5100 : tensor<768x3072xf32>
    %7278 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7279 = stablehlo.multiply %7278, %7277 : tensor<768x3072xf32>
    %7280 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7281 = stablehlo.multiply %7280, %arg566 : tensor<768x3072xf32>
    %7282 = stablehlo.add %7279, %7281 : tensor<768x3072xf32>
    %7283 = stablehlo.multiply %5105, %5105 : tensor<768xf32>
    %7284 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7285 = stablehlo.multiply %7284, %7283 : tensor<768xf32>
    %7286 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7287 = stablehlo.multiply %7286, %arg567 : tensor<768xf32>
    %7288 = stablehlo.add %7285, %7287 : tensor<768xf32>
    %7289 = stablehlo.multiply %5110, %5110 : tensor<768xf32>
    %7290 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7291 = stablehlo.multiply %7290, %7289 : tensor<768xf32>
    %7292 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7293 = stablehlo.multiply %7292, %arg568 : tensor<768xf32>
    %7294 = stablehlo.add %7291, %7293 : tensor<768xf32>
    %7295 = stablehlo.multiply %5115, %5115 : tensor<768xf32>
    %7296 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7297 = stablehlo.multiply %7296, %7295 : tensor<768xf32>
    %7298 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7299 = stablehlo.multiply %7298, %arg569 : tensor<768xf32>
    %7300 = stablehlo.add %7297, %7299 : tensor<768xf32>
    %7301 = stablehlo.multiply %5120, %5120 : tensor<768x768xf32>
    %7302 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7303 = stablehlo.multiply %7302, %7301 : tensor<768x768xf32>
    %7304 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7305 = stablehlo.multiply %7304, %arg570 : tensor<768x768xf32>
    %7306 = stablehlo.add %7303, %7305 : tensor<768x768xf32>
    %7307 = stablehlo.multiply %5125, %5125 : tensor<768xf32>
    %7308 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7309 = stablehlo.multiply %7308, %7307 : tensor<768xf32>
    %7310 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7311 = stablehlo.multiply %7310, %arg571 : tensor<768xf32>
    %7312 = stablehlo.add %7309, %7311 : tensor<768xf32>
    %7313 = stablehlo.multiply %5130, %5130 : tensor<768x768xf32>
    %7314 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7315 = stablehlo.multiply %7314, %7313 : tensor<768x768xf32>
    %7316 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7317 = stablehlo.multiply %7316, %arg572 : tensor<768x768xf32>
    %7318 = stablehlo.add %7315, %7317 : tensor<768x768xf32>
    %7319 = stablehlo.multiply %5135, %5135 : tensor<768xf32>
    %7320 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7321 = stablehlo.multiply %7320, %7319 : tensor<768xf32>
    %7322 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7323 = stablehlo.multiply %7322, %arg573 : tensor<768xf32>
    %7324 = stablehlo.add %7321, %7323 : tensor<768xf32>
    %7325 = stablehlo.multiply %5140, %5140 : tensor<768x768xf32>
    %7326 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7327 = stablehlo.multiply %7326, %7325 : tensor<768x768xf32>
    %7328 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7329 = stablehlo.multiply %7328, %arg574 : tensor<768x768xf32>
    %7330 = stablehlo.add %7327, %7329 : tensor<768x768xf32>
    %7331 = stablehlo.multiply %5145, %5145 : tensor<768xf32>
    %7332 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7333 = stablehlo.multiply %7332, %7331 : tensor<768xf32>
    %7334 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7335 = stablehlo.multiply %7334, %arg575 : tensor<768xf32>
    %7336 = stablehlo.add %7333, %7335 : tensor<768xf32>
    %7337 = stablehlo.multiply %5150, %5150 : tensor<768x768xf32>
    %7338 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7339 = stablehlo.multiply %7338, %7337 : tensor<768x768xf32>
    %7340 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7341 = stablehlo.multiply %7340, %arg576 : tensor<768x768xf32>
    %7342 = stablehlo.add %7339, %7341 : tensor<768x768xf32>
    %7343 = stablehlo.multiply %5155, %5155 : tensor<768xf32>
    %7344 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7345 = stablehlo.multiply %7344, %7343 : tensor<768xf32>
    %7346 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7347 = stablehlo.multiply %7346, %arg577 : tensor<768xf32>
    %7348 = stablehlo.add %7345, %7347 : tensor<768xf32>
    %7349 = stablehlo.multiply %5160, %5160 : tensor<768xf32>
    %7350 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7351 = stablehlo.multiply %7350, %7349 : tensor<768xf32>
    %7352 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7353 = stablehlo.multiply %7352, %arg578 : tensor<768xf32>
    %7354 = stablehlo.add %7351, %7353 : tensor<768xf32>
    %7355 = stablehlo.multiply %5165, %5165 : tensor<768xf32>
    %7356 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7357 = stablehlo.multiply %7356, %7355 : tensor<768xf32>
    %7358 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7359 = stablehlo.multiply %7358, %arg579 : tensor<768xf32>
    %7360 = stablehlo.add %7357, %7359 : tensor<768xf32>
    %7361 = stablehlo.multiply %5170, %5170 : tensor<3072x768xf32>
    %7362 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7363 = stablehlo.multiply %7362, %7361 : tensor<3072x768xf32>
    %7364 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7365 = stablehlo.multiply %7364, %arg580 : tensor<3072x768xf32>
    %7366 = stablehlo.add %7363, %7365 : tensor<3072x768xf32>
    %7367 = stablehlo.multiply %5175, %5175 : tensor<3072xf32>
    %7368 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7369 = stablehlo.multiply %7368, %7367 : tensor<3072xf32>
    %7370 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7371 = stablehlo.multiply %7370, %arg581 : tensor<3072xf32>
    %7372 = stablehlo.add %7369, %7371 : tensor<3072xf32>
    %7373 = stablehlo.multiply %5180, %5180 : tensor<768x3072xf32>
    %7374 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7375 = stablehlo.multiply %7374, %7373 : tensor<768x3072xf32>
    %7376 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7377 = stablehlo.multiply %7376, %arg582 : tensor<768x3072xf32>
    %7378 = stablehlo.add %7375, %7377 : tensor<768x3072xf32>
    %7379 = stablehlo.multiply %5185, %5185 : tensor<768xf32>
    %7380 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7381 = stablehlo.multiply %7380, %7379 : tensor<768xf32>
    %7382 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7383 = stablehlo.multiply %7382, %arg583 : tensor<768xf32>
    %7384 = stablehlo.add %7381, %7383 : tensor<768xf32>
    %7385 = stablehlo.multiply %5190, %5190 : tensor<768xf32>
    %7386 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7387 = stablehlo.multiply %7386, %7385 : tensor<768xf32>
    %7388 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7389 = stablehlo.multiply %7388, %arg584 : tensor<768xf32>
    %7390 = stablehlo.add %7387, %7389 : tensor<768xf32>
    %7391 = stablehlo.multiply %5195, %5195 : tensor<768xf32>
    %7392 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7393 = stablehlo.multiply %7392, %7391 : tensor<768xf32>
    %7394 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7395 = stablehlo.multiply %7394, %arg585 : tensor<768xf32>
    %7396 = stablehlo.add %7393, %7395 : tensor<768xf32>
    %7397 = stablehlo.multiply %5200, %5200 : tensor<768x768xf32>
    %7398 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7399 = stablehlo.multiply %7398, %7397 : tensor<768x768xf32>
    %7400 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7401 = stablehlo.multiply %7400, %arg586 : tensor<768x768xf32>
    %7402 = stablehlo.add %7399, %7401 : tensor<768x768xf32>
    %7403 = stablehlo.multiply %5205, %5205 : tensor<768xf32>
    %7404 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7405 = stablehlo.multiply %7404, %7403 : tensor<768xf32>
    %7406 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7407 = stablehlo.multiply %7406, %arg587 : tensor<768xf32>
    %7408 = stablehlo.add %7405, %7407 : tensor<768xf32>
    %7409 = stablehlo.multiply %5210, %5210 : tensor<768x768xf32>
    %7410 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7411 = stablehlo.multiply %7410, %7409 : tensor<768x768xf32>
    %7412 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7413 = stablehlo.multiply %7412, %arg588 : tensor<768x768xf32>
    %7414 = stablehlo.add %7411, %7413 : tensor<768x768xf32>
    %7415 = stablehlo.multiply %5215, %5215 : tensor<768xf32>
    %7416 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7417 = stablehlo.multiply %7416, %7415 : tensor<768xf32>
    %7418 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7419 = stablehlo.multiply %7418, %arg589 : tensor<768xf32>
    %7420 = stablehlo.add %7417, %7419 : tensor<768xf32>
    %7421 = stablehlo.multiply %5220, %5220 : tensor<768x768xf32>
    %7422 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7423 = stablehlo.multiply %7422, %7421 : tensor<768x768xf32>
    %7424 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7425 = stablehlo.multiply %7424, %arg590 : tensor<768x768xf32>
    %7426 = stablehlo.add %7423, %7425 : tensor<768x768xf32>
    %7427 = stablehlo.multiply %5225, %5225 : tensor<768xf32>
    %7428 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7429 = stablehlo.multiply %7428, %7427 : tensor<768xf32>
    %7430 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7431 = stablehlo.multiply %7430, %arg591 : tensor<768xf32>
    %7432 = stablehlo.add %7429, %7431 : tensor<768xf32>
    %7433 = stablehlo.multiply %5230, %5230 : tensor<768x768xf32>
    %7434 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7435 = stablehlo.multiply %7434, %7433 : tensor<768x768xf32>
    %7436 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7437 = stablehlo.multiply %7436, %arg592 : tensor<768x768xf32>
    %7438 = stablehlo.add %7435, %7437 : tensor<768x768xf32>
    %7439 = stablehlo.multiply %5235, %5235 : tensor<768xf32>
    %7440 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7441 = stablehlo.multiply %7440, %7439 : tensor<768xf32>
    %7442 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7443 = stablehlo.multiply %7442, %arg593 : tensor<768xf32>
    %7444 = stablehlo.add %7441, %7443 : tensor<768xf32>
    %7445 = stablehlo.multiply %5240, %5240 : tensor<768xf32>
    %7446 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7447 = stablehlo.multiply %7446, %7445 : tensor<768xf32>
    %7448 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7449 = stablehlo.multiply %7448, %arg594 : tensor<768xf32>
    %7450 = stablehlo.add %7447, %7449 : tensor<768xf32>
    %7451 = stablehlo.multiply %5245, %5245 : tensor<768xf32>
    %7452 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7453 = stablehlo.multiply %7452, %7451 : tensor<768xf32>
    %7454 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7455 = stablehlo.multiply %7454, %arg595 : tensor<768xf32>
    %7456 = stablehlo.add %7453, %7455 : tensor<768xf32>
    %7457 = stablehlo.multiply %5250, %5250 : tensor<3072x768xf32>
    %7458 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7459 = stablehlo.multiply %7458, %7457 : tensor<3072x768xf32>
    %7460 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7461 = stablehlo.multiply %7460, %arg596 : tensor<3072x768xf32>
    %7462 = stablehlo.add %7459, %7461 : tensor<3072x768xf32>
    %7463 = stablehlo.multiply %5255, %5255 : tensor<3072xf32>
    %7464 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7465 = stablehlo.multiply %7464, %7463 : tensor<3072xf32>
    %7466 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7467 = stablehlo.multiply %7466, %arg597 : tensor<3072xf32>
    %7468 = stablehlo.add %7465, %7467 : tensor<3072xf32>
    %7469 = stablehlo.multiply %5260, %5260 : tensor<768x3072xf32>
    %7470 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7471 = stablehlo.multiply %7470, %7469 : tensor<768x3072xf32>
    %7472 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7473 = stablehlo.multiply %7472, %arg598 : tensor<768x3072xf32>
    %7474 = stablehlo.add %7471, %7473 : tensor<768x3072xf32>
    %7475 = stablehlo.multiply %5265, %5265 : tensor<768xf32>
    %7476 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7477 = stablehlo.multiply %7476, %7475 : tensor<768xf32>
    %7478 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7479 = stablehlo.multiply %7478, %arg599 : tensor<768xf32>
    %7480 = stablehlo.add %7477, %7479 : tensor<768xf32>
    %7481 = stablehlo.multiply %5270, %5270 : tensor<768xf32>
    %7482 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7483 = stablehlo.multiply %7482, %7481 : tensor<768xf32>
    %7484 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7485 = stablehlo.multiply %7484, %arg600 : tensor<768xf32>
    %7486 = stablehlo.add %7483, %7485 : tensor<768xf32>
    %7487 = stablehlo.multiply %5275, %5275 : tensor<768xf32>
    %7488 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7489 = stablehlo.multiply %7488, %7487 : tensor<768xf32>
    %7490 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7491 = stablehlo.multiply %7490, %arg601 : tensor<768xf32>
    %7492 = stablehlo.add %7489, %7491 : tensor<768xf32>
    %7493 = stablehlo.multiply %5280, %5280 : tensor<768x768xf32>
    %7494 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7495 = stablehlo.multiply %7494, %7493 : tensor<768x768xf32>
    %7496 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7497 = stablehlo.multiply %7496, %arg602 : tensor<768x768xf32>
    %7498 = stablehlo.add %7495, %7497 : tensor<768x768xf32>
    %7499 = stablehlo.multiply %5285, %5285 : tensor<768xf32>
    %7500 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7501 = stablehlo.multiply %7500, %7499 : tensor<768xf32>
    %7502 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7503 = stablehlo.multiply %7502, %arg603 : tensor<768xf32>
    %7504 = stablehlo.add %7501, %7503 : tensor<768xf32>
    %7505 = stablehlo.multiply %5290, %5290 : tensor<768xf32>
    %7506 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7507 = stablehlo.multiply %7506, %7505 : tensor<768xf32>
    %7508 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7509 = stablehlo.multiply %7508, %arg604 : tensor<768xf32>
    %7510 = stablehlo.add %7507, %7509 : tensor<768xf32>
    %7511 = stablehlo.multiply %5295, %5295 : tensor<768xf32>
    %7512 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7513 = stablehlo.multiply %7512, %7511 : tensor<768xf32>
    %7514 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7515 = stablehlo.multiply %7514, %arg605 : tensor<768xf32>
    %7516 = stablehlo.add %7513, %7515 : tensor<768xf32>
    %7517 = stablehlo.multiply %5300, %5300 : tensor<30522xf32>
    %7518 = stablehlo.broadcast_in_dim %cst_645, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7519 = stablehlo.multiply %7518, %7517 : tensor<30522xf32>
    %7520 = stablehlo.broadcast_in_dim %cst_646, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7521 = stablehlo.multiply %7520, %arg606 : tensor<30522xf32>
    %7522 = stablehlo.add %7519, %7521 : tensor<30522xf32>
    %c_647 = stablehlo.constant dense<2147483647> : tensor<i32>
    %7523 = stablehlo.compare  LT, %arg202, %c_647,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %c_648 = stablehlo.constant dense<1> : tensor<i32>
    %7524 = stablehlo.add %arg202, %c_648 : tensor<i32>
    %7525 = call @_where_249(%7523, %7524, %c_647) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %cst_649 = stablehlo.constant dense<0.899999976> : tensor<f32>
    %7526 = stablehlo.convert %7525 : (tensor<i32>) -> tensor<f32>
    %7527 = stablehlo.power %cst_649, %7526 : tensor<f32>
    %7528 = stablehlo.subtract %cst_6, %7527 : tensor<f32>
    %7529 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7530 = stablehlo.divide %5305, %7529 : tensor<30522x768xf32>
    %7531 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7532 = stablehlo.divide %5310, %7531 : tensor<512x768xf32>
    %7533 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7534 = stablehlo.divide %5315, %7533 : tensor<2x768xf32>
    %7535 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7536 = stablehlo.divide %5320, %7535 : tensor<768xf32>
    %7537 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7538 = stablehlo.divide %5325, %7537 : tensor<768xf32>
    %7539 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7540 = stablehlo.divide %5330, %7539 : tensor<768x768xf32>
    %7541 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7542 = stablehlo.divide %5335, %7541 : tensor<768xf32>
    %7543 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7544 = stablehlo.divide %5340, %7543 : tensor<768x768xf32>
    %7545 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7546 = stablehlo.divide %5345, %7545 : tensor<768xf32>
    %7547 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7548 = stablehlo.divide %5350, %7547 : tensor<768x768xf32>
    %7549 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7550 = stablehlo.divide %5355, %7549 : tensor<768xf32>
    %7551 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7552 = stablehlo.divide %5360, %7551 : tensor<768x768xf32>
    %7553 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7554 = stablehlo.divide %5365, %7553 : tensor<768xf32>
    %7555 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7556 = stablehlo.divide %5370, %7555 : tensor<768xf32>
    %7557 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7558 = stablehlo.divide %5375, %7557 : tensor<768xf32>
    %7559 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7560 = stablehlo.divide %5380, %7559 : tensor<3072x768xf32>
    %7561 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7562 = stablehlo.divide %5385, %7561 : tensor<3072xf32>
    %7563 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7564 = stablehlo.divide %5390, %7563 : tensor<768x3072xf32>
    %7565 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7566 = stablehlo.divide %5395, %7565 : tensor<768xf32>
    %7567 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7568 = stablehlo.divide %5400, %7567 : tensor<768xf32>
    %7569 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7570 = stablehlo.divide %5405, %7569 : tensor<768xf32>
    %7571 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7572 = stablehlo.divide %5410, %7571 : tensor<768x768xf32>
    %7573 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7574 = stablehlo.divide %5415, %7573 : tensor<768xf32>
    %7575 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7576 = stablehlo.divide %5420, %7575 : tensor<768x768xf32>
    %7577 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7578 = stablehlo.divide %5425, %7577 : tensor<768xf32>
    %7579 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7580 = stablehlo.divide %5430, %7579 : tensor<768x768xf32>
    %7581 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7582 = stablehlo.divide %5435, %7581 : tensor<768xf32>
    %7583 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7584 = stablehlo.divide %5440, %7583 : tensor<768x768xf32>
    %7585 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7586 = stablehlo.divide %5445, %7585 : tensor<768xf32>
    %7587 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7588 = stablehlo.divide %5450, %7587 : tensor<768xf32>
    %7589 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7590 = stablehlo.divide %5455, %7589 : tensor<768xf32>
    %7591 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7592 = stablehlo.divide %5460, %7591 : tensor<3072x768xf32>
    %7593 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7594 = stablehlo.divide %5465, %7593 : tensor<3072xf32>
    %7595 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7596 = stablehlo.divide %5470, %7595 : tensor<768x3072xf32>
    %7597 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7598 = stablehlo.divide %5475, %7597 : tensor<768xf32>
    %7599 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7600 = stablehlo.divide %5480, %7599 : tensor<768xf32>
    %7601 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7602 = stablehlo.divide %5485, %7601 : tensor<768xf32>
    %7603 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7604 = stablehlo.divide %5490, %7603 : tensor<768x768xf32>
    %7605 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7606 = stablehlo.divide %5495, %7605 : tensor<768xf32>
    %7607 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7608 = stablehlo.divide %5500, %7607 : tensor<768x768xf32>
    %7609 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7610 = stablehlo.divide %5505, %7609 : tensor<768xf32>
    %7611 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7612 = stablehlo.divide %5510, %7611 : tensor<768x768xf32>
    %7613 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7614 = stablehlo.divide %5515, %7613 : tensor<768xf32>
    %7615 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7616 = stablehlo.divide %5520, %7615 : tensor<768x768xf32>
    %7617 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7618 = stablehlo.divide %5525, %7617 : tensor<768xf32>
    %7619 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7620 = stablehlo.divide %5530, %7619 : tensor<768xf32>
    %7621 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7622 = stablehlo.divide %5535, %7621 : tensor<768xf32>
    %7623 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7624 = stablehlo.divide %5540, %7623 : tensor<3072x768xf32>
    %7625 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7626 = stablehlo.divide %5545, %7625 : tensor<3072xf32>
    %7627 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7628 = stablehlo.divide %5550, %7627 : tensor<768x3072xf32>
    %7629 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7630 = stablehlo.divide %5555, %7629 : tensor<768xf32>
    %7631 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7632 = stablehlo.divide %5560, %7631 : tensor<768xf32>
    %7633 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7634 = stablehlo.divide %5565, %7633 : tensor<768xf32>
    %7635 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7636 = stablehlo.divide %5570, %7635 : tensor<768x768xf32>
    %7637 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7638 = stablehlo.divide %5575, %7637 : tensor<768xf32>
    %7639 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7640 = stablehlo.divide %5580, %7639 : tensor<768x768xf32>
    %7641 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7642 = stablehlo.divide %5585, %7641 : tensor<768xf32>
    %7643 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7644 = stablehlo.divide %5590, %7643 : tensor<768x768xf32>
    %7645 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7646 = stablehlo.divide %5595, %7645 : tensor<768xf32>
    %7647 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7648 = stablehlo.divide %5600, %7647 : tensor<768x768xf32>
    %7649 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7650 = stablehlo.divide %5605, %7649 : tensor<768xf32>
    %7651 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7652 = stablehlo.divide %5610, %7651 : tensor<768xf32>
    %7653 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7654 = stablehlo.divide %5615, %7653 : tensor<768xf32>
    %7655 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7656 = stablehlo.divide %5620, %7655 : tensor<3072x768xf32>
    %7657 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7658 = stablehlo.divide %5625, %7657 : tensor<3072xf32>
    %7659 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7660 = stablehlo.divide %5630, %7659 : tensor<768x3072xf32>
    %7661 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7662 = stablehlo.divide %5635, %7661 : tensor<768xf32>
    %7663 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7664 = stablehlo.divide %5640, %7663 : tensor<768xf32>
    %7665 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7666 = stablehlo.divide %5645, %7665 : tensor<768xf32>
    %7667 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7668 = stablehlo.divide %5650, %7667 : tensor<768x768xf32>
    %7669 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7670 = stablehlo.divide %5655, %7669 : tensor<768xf32>
    %7671 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7672 = stablehlo.divide %5660, %7671 : tensor<768x768xf32>
    %7673 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7674 = stablehlo.divide %5665, %7673 : tensor<768xf32>
    %7675 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7676 = stablehlo.divide %5670, %7675 : tensor<768x768xf32>
    %7677 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7678 = stablehlo.divide %5675, %7677 : tensor<768xf32>
    %7679 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7680 = stablehlo.divide %5680, %7679 : tensor<768x768xf32>
    %7681 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7682 = stablehlo.divide %5685, %7681 : tensor<768xf32>
    %7683 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7684 = stablehlo.divide %5690, %7683 : tensor<768xf32>
    %7685 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7686 = stablehlo.divide %5695, %7685 : tensor<768xf32>
    %7687 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7688 = stablehlo.divide %5700, %7687 : tensor<3072x768xf32>
    %7689 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7690 = stablehlo.divide %5705, %7689 : tensor<3072xf32>
    %7691 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7692 = stablehlo.divide %5710, %7691 : tensor<768x3072xf32>
    %7693 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7694 = stablehlo.divide %5715, %7693 : tensor<768xf32>
    %7695 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7696 = stablehlo.divide %5720, %7695 : tensor<768xf32>
    %7697 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7698 = stablehlo.divide %5725, %7697 : tensor<768xf32>
    %7699 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7700 = stablehlo.divide %5730, %7699 : tensor<768x768xf32>
    %7701 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7702 = stablehlo.divide %5735, %7701 : tensor<768xf32>
    %7703 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7704 = stablehlo.divide %5740, %7703 : tensor<768x768xf32>
    %7705 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7706 = stablehlo.divide %5745, %7705 : tensor<768xf32>
    %7707 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7708 = stablehlo.divide %5750, %7707 : tensor<768x768xf32>
    %7709 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7710 = stablehlo.divide %5755, %7709 : tensor<768xf32>
    %7711 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7712 = stablehlo.divide %5760, %7711 : tensor<768x768xf32>
    %7713 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7714 = stablehlo.divide %5765, %7713 : tensor<768xf32>
    %7715 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7716 = stablehlo.divide %5770, %7715 : tensor<768xf32>
    %7717 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7718 = stablehlo.divide %5775, %7717 : tensor<768xf32>
    %7719 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7720 = stablehlo.divide %5780, %7719 : tensor<3072x768xf32>
    %7721 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7722 = stablehlo.divide %5785, %7721 : tensor<3072xf32>
    %7723 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7724 = stablehlo.divide %5790, %7723 : tensor<768x3072xf32>
    %7725 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7726 = stablehlo.divide %5795, %7725 : tensor<768xf32>
    %7727 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7728 = stablehlo.divide %5800, %7727 : tensor<768xf32>
    %7729 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7730 = stablehlo.divide %5805, %7729 : tensor<768xf32>
    %7731 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7732 = stablehlo.divide %5810, %7731 : tensor<768x768xf32>
    %7733 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7734 = stablehlo.divide %5815, %7733 : tensor<768xf32>
    %7735 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7736 = stablehlo.divide %5820, %7735 : tensor<768x768xf32>
    %7737 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7738 = stablehlo.divide %5825, %7737 : tensor<768xf32>
    %7739 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7740 = stablehlo.divide %5830, %7739 : tensor<768x768xf32>
    %7741 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7742 = stablehlo.divide %5835, %7741 : tensor<768xf32>
    %7743 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7744 = stablehlo.divide %5840, %7743 : tensor<768x768xf32>
    %7745 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7746 = stablehlo.divide %5845, %7745 : tensor<768xf32>
    %7747 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7748 = stablehlo.divide %5850, %7747 : tensor<768xf32>
    %7749 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7750 = stablehlo.divide %5855, %7749 : tensor<768xf32>
    %7751 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7752 = stablehlo.divide %5860, %7751 : tensor<3072x768xf32>
    %7753 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7754 = stablehlo.divide %5865, %7753 : tensor<3072xf32>
    %7755 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7756 = stablehlo.divide %5870, %7755 : tensor<768x3072xf32>
    %7757 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7758 = stablehlo.divide %5875, %7757 : tensor<768xf32>
    %7759 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7760 = stablehlo.divide %5880, %7759 : tensor<768xf32>
    %7761 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7762 = stablehlo.divide %5885, %7761 : tensor<768xf32>
    %7763 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7764 = stablehlo.divide %5890, %7763 : tensor<768x768xf32>
    %7765 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7766 = stablehlo.divide %5895, %7765 : tensor<768xf32>
    %7767 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7768 = stablehlo.divide %5900, %7767 : tensor<768x768xf32>
    %7769 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7770 = stablehlo.divide %5905, %7769 : tensor<768xf32>
    %7771 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7772 = stablehlo.divide %5910, %7771 : tensor<768x768xf32>
    %7773 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7774 = stablehlo.divide %5915, %7773 : tensor<768xf32>
    %7775 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7776 = stablehlo.divide %5920, %7775 : tensor<768x768xf32>
    %7777 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7778 = stablehlo.divide %5925, %7777 : tensor<768xf32>
    %7779 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7780 = stablehlo.divide %5930, %7779 : tensor<768xf32>
    %7781 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7782 = stablehlo.divide %5935, %7781 : tensor<768xf32>
    %7783 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7784 = stablehlo.divide %5940, %7783 : tensor<3072x768xf32>
    %7785 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7786 = stablehlo.divide %5945, %7785 : tensor<3072xf32>
    %7787 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7788 = stablehlo.divide %5950, %7787 : tensor<768x3072xf32>
    %7789 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7790 = stablehlo.divide %5955, %7789 : tensor<768xf32>
    %7791 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7792 = stablehlo.divide %5960, %7791 : tensor<768xf32>
    %7793 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7794 = stablehlo.divide %5965, %7793 : tensor<768xf32>
    %7795 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7796 = stablehlo.divide %5970, %7795 : tensor<768x768xf32>
    %7797 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7798 = stablehlo.divide %5975, %7797 : tensor<768xf32>
    %7799 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7800 = stablehlo.divide %5980, %7799 : tensor<768x768xf32>
    %7801 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7802 = stablehlo.divide %5985, %7801 : tensor<768xf32>
    %7803 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7804 = stablehlo.divide %5990, %7803 : tensor<768x768xf32>
    %7805 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7806 = stablehlo.divide %5995, %7805 : tensor<768xf32>
    %7807 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7808 = stablehlo.divide %6000, %7807 : tensor<768x768xf32>
    %7809 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7810 = stablehlo.divide %6005, %7809 : tensor<768xf32>
    %7811 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7812 = stablehlo.divide %6010, %7811 : tensor<768xf32>
    %7813 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7814 = stablehlo.divide %6015, %7813 : tensor<768xf32>
    %7815 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7816 = stablehlo.divide %6020, %7815 : tensor<3072x768xf32>
    %7817 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7818 = stablehlo.divide %6025, %7817 : tensor<3072xf32>
    %7819 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7820 = stablehlo.divide %6030, %7819 : tensor<768x3072xf32>
    %7821 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7822 = stablehlo.divide %6035, %7821 : tensor<768xf32>
    %7823 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7824 = stablehlo.divide %6040, %7823 : tensor<768xf32>
    %7825 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7826 = stablehlo.divide %6045, %7825 : tensor<768xf32>
    %7827 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7828 = stablehlo.divide %6050, %7827 : tensor<768x768xf32>
    %7829 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7830 = stablehlo.divide %6055, %7829 : tensor<768xf32>
    %7831 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7832 = stablehlo.divide %6060, %7831 : tensor<768x768xf32>
    %7833 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7834 = stablehlo.divide %6065, %7833 : tensor<768xf32>
    %7835 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7836 = stablehlo.divide %6070, %7835 : tensor<768x768xf32>
    %7837 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7838 = stablehlo.divide %6075, %7837 : tensor<768xf32>
    %7839 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7840 = stablehlo.divide %6080, %7839 : tensor<768x768xf32>
    %7841 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7842 = stablehlo.divide %6085, %7841 : tensor<768xf32>
    %7843 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7844 = stablehlo.divide %6090, %7843 : tensor<768xf32>
    %7845 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7846 = stablehlo.divide %6095, %7845 : tensor<768xf32>
    %7847 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7848 = stablehlo.divide %6100, %7847 : tensor<3072x768xf32>
    %7849 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7850 = stablehlo.divide %6105, %7849 : tensor<3072xf32>
    %7851 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7852 = stablehlo.divide %6110, %7851 : tensor<768x3072xf32>
    %7853 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7854 = stablehlo.divide %6115, %7853 : tensor<768xf32>
    %7855 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7856 = stablehlo.divide %6120, %7855 : tensor<768xf32>
    %7857 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7858 = stablehlo.divide %6125, %7857 : tensor<768xf32>
    %7859 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7860 = stablehlo.divide %6130, %7859 : tensor<768x768xf32>
    %7861 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7862 = stablehlo.divide %6135, %7861 : tensor<768xf32>
    %7863 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7864 = stablehlo.divide %6140, %7863 : tensor<768x768xf32>
    %7865 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7866 = stablehlo.divide %6145, %7865 : tensor<768xf32>
    %7867 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7868 = stablehlo.divide %6150, %7867 : tensor<768x768xf32>
    %7869 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7870 = stablehlo.divide %6155, %7869 : tensor<768xf32>
    %7871 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7872 = stablehlo.divide %6160, %7871 : tensor<768x768xf32>
    %7873 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7874 = stablehlo.divide %6165, %7873 : tensor<768xf32>
    %7875 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7876 = stablehlo.divide %6170, %7875 : tensor<768xf32>
    %7877 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7878 = stablehlo.divide %6175, %7877 : tensor<768xf32>
    %7879 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7880 = stablehlo.divide %6180, %7879 : tensor<3072x768xf32>
    %7881 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7882 = stablehlo.divide %6185, %7881 : tensor<3072xf32>
    %7883 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7884 = stablehlo.divide %6190, %7883 : tensor<768x3072xf32>
    %7885 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7886 = stablehlo.divide %6195, %7885 : tensor<768xf32>
    %7887 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7888 = stablehlo.divide %6200, %7887 : tensor<768xf32>
    %7889 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7890 = stablehlo.divide %6205, %7889 : tensor<768xf32>
    %7891 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7892 = stablehlo.divide %6210, %7891 : tensor<768x768xf32>
    %7893 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7894 = stablehlo.divide %6215, %7893 : tensor<768xf32>
    %7895 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7896 = stablehlo.divide %6220, %7895 : tensor<768x768xf32>
    %7897 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7898 = stablehlo.divide %6225, %7897 : tensor<768xf32>
    %7899 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7900 = stablehlo.divide %6230, %7899 : tensor<768x768xf32>
    %7901 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7902 = stablehlo.divide %6235, %7901 : tensor<768xf32>
    %7903 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7904 = stablehlo.divide %6240, %7903 : tensor<768x768xf32>
    %7905 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7906 = stablehlo.divide %6245, %7905 : tensor<768xf32>
    %7907 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7908 = stablehlo.divide %6250, %7907 : tensor<768xf32>
    %7909 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7910 = stablehlo.divide %6255, %7909 : tensor<768xf32>
    %7911 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7912 = stablehlo.divide %6260, %7911 : tensor<3072x768xf32>
    %7913 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7914 = stablehlo.divide %6265, %7913 : tensor<3072xf32>
    %7915 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7916 = stablehlo.divide %6270, %7915 : tensor<768x3072xf32>
    %7917 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7918 = stablehlo.divide %6275, %7917 : tensor<768xf32>
    %7919 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7920 = stablehlo.divide %6280, %7919 : tensor<768xf32>
    %7921 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7922 = stablehlo.divide %6285, %7921 : tensor<768xf32>
    %7923 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7924 = stablehlo.divide %6290, %7923 : tensor<768x768xf32>
    %7925 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7926 = stablehlo.divide %6295, %7925 : tensor<768xf32>
    %7927 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7928 = stablehlo.divide %6300, %7927 : tensor<768xf32>
    %7929 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7930 = stablehlo.divide %6305, %7929 : tensor<768xf32>
    %7931 = stablehlo.broadcast_in_dim %7528, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %7932 = stablehlo.divide %6310, %7931 : tensor<30522xf32>
    %cst_650 = stablehlo.constant dense<9.990000e-01> : tensor<f32>
    %7933 = stablehlo.convert %7525 : (tensor<i32>) -> tensor<f32>
    %7934 = stablehlo.power %cst_650, %7933 : tensor<f32>
    %7935 = stablehlo.subtract %cst_6, %7934 : tensor<f32>
    %7936 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %7937 = stablehlo.divide %6316, %7936 : tensor<30522x768xf32>
    %7938 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %7939 = stablehlo.divide %6322, %7938 : tensor<512x768xf32>
    %7940 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %7941 = stablehlo.divide %6328, %7940 : tensor<2x768xf32>
    %7942 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7943 = stablehlo.divide %6334, %7942 : tensor<768xf32>
    %7944 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7945 = stablehlo.divide %6340, %7944 : tensor<768xf32>
    %7946 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7947 = stablehlo.divide %6346, %7946 : tensor<768x768xf32>
    %7948 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7949 = stablehlo.divide %6352, %7948 : tensor<768xf32>
    %7950 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7951 = stablehlo.divide %6358, %7950 : tensor<768x768xf32>
    %7952 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7953 = stablehlo.divide %6364, %7952 : tensor<768xf32>
    %7954 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7955 = stablehlo.divide %6370, %7954 : tensor<768x768xf32>
    %7956 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7957 = stablehlo.divide %6376, %7956 : tensor<768xf32>
    %7958 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7959 = stablehlo.divide %6382, %7958 : tensor<768x768xf32>
    %7960 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7961 = stablehlo.divide %6388, %7960 : tensor<768xf32>
    %7962 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7963 = stablehlo.divide %6394, %7962 : tensor<768xf32>
    %7964 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7965 = stablehlo.divide %6400, %7964 : tensor<768xf32>
    %7966 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7967 = stablehlo.divide %6406, %7966 : tensor<3072x768xf32>
    %7968 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %7969 = stablehlo.divide %6412, %7968 : tensor<3072xf32>
    %7970 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %7971 = stablehlo.divide %6418, %7970 : tensor<768x3072xf32>
    %7972 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7973 = stablehlo.divide %6424, %7972 : tensor<768xf32>
    %7974 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7975 = stablehlo.divide %6430, %7974 : tensor<768xf32>
    %7976 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7977 = stablehlo.divide %6436, %7976 : tensor<768xf32>
    %7978 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7979 = stablehlo.divide %6442, %7978 : tensor<768x768xf32>
    %7980 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7981 = stablehlo.divide %6448, %7980 : tensor<768xf32>
    %7982 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7983 = stablehlo.divide %6454, %7982 : tensor<768x768xf32>
    %7984 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7985 = stablehlo.divide %6460, %7984 : tensor<768xf32>
    %7986 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7987 = stablehlo.divide %6466, %7986 : tensor<768x768xf32>
    %7988 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7989 = stablehlo.divide %6472, %7988 : tensor<768xf32>
    %7990 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %7991 = stablehlo.divide %6478, %7990 : tensor<768x768xf32>
    %7992 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7993 = stablehlo.divide %6484, %7992 : tensor<768xf32>
    %7994 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7995 = stablehlo.divide %6490, %7994 : tensor<768xf32>
    %7996 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %7997 = stablehlo.divide %6496, %7996 : tensor<768xf32>
    %7998 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %7999 = stablehlo.divide %6502, %7998 : tensor<3072x768xf32>
    %8000 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8001 = stablehlo.divide %6508, %8000 : tensor<3072xf32>
    %8002 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8003 = stablehlo.divide %6514, %8002 : tensor<768x3072xf32>
    %8004 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8005 = stablehlo.divide %6520, %8004 : tensor<768xf32>
    %8006 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8007 = stablehlo.divide %6526, %8006 : tensor<768xf32>
    %8008 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8009 = stablehlo.divide %6532, %8008 : tensor<768xf32>
    %8010 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8011 = stablehlo.divide %6538, %8010 : tensor<768x768xf32>
    %8012 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8013 = stablehlo.divide %6544, %8012 : tensor<768xf32>
    %8014 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8015 = stablehlo.divide %6550, %8014 : tensor<768x768xf32>
    %8016 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8017 = stablehlo.divide %6556, %8016 : tensor<768xf32>
    %8018 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8019 = stablehlo.divide %6562, %8018 : tensor<768x768xf32>
    %8020 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8021 = stablehlo.divide %6568, %8020 : tensor<768xf32>
    %8022 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8023 = stablehlo.divide %6574, %8022 : tensor<768x768xf32>
    %8024 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8025 = stablehlo.divide %6580, %8024 : tensor<768xf32>
    %8026 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8027 = stablehlo.divide %6586, %8026 : tensor<768xf32>
    %8028 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8029 = stablehlo.divide %6592, %8028 : tensor<768xf32>
    %8030 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8031 = stablehlo.divide %6598, %8030 : tensor<3072x768xf32>
    %8032 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8033 = stablehlo.divide %6604, %8032 : tensor<3072xf32>
    %8034 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8035 = stablehlo.divide %6610, %8034 : tensor<768x3072xf32>
    %8036 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8037 = stablehlo.divide %6616, %8036 : tensor<768xf32>
    %8038 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8039 = stablehlo.divide %6622, %8038 : tensor<768xf32>
    %8040 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8041 = stablehlo.divide %6628, %8040 : tensor<768xf32>
    %8042 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8043 = stablehlo.divide %6634, %8042 : tensor<768x768xf32>
    %8044 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8045 = stablehlo.divide %6640, %8044 : tensor<768xf32>
    %8046 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8047 = stablehlo.divide %6646, %8046 : tensor<768x768xf32>
    %8048 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8049 = stablehlo.divide %6652, %8048 : tensor<768xf32>
    %8050 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8051 = stablehlo.divide %6658, %8050 : tensor<768x768xf32>
    %8052 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8053 = stablehlo.divide %6664, %8052 : tensor<768xf32>
    %8054 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8055 = stablehlo.divide %6670, %8054 : tensor<768x768xf32>
    %8056 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8057 = stablehlo.divide %6676, %8056 : tensor<768xf32>
    %8058 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8059 = stablehlo.divide %6682, %8058 : tensor<768xf32>
    %8060 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8061 = stablehlo.divide %6688, %8060 : tensor<768xf32>
    %8062 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8063 = stablehlo.divide %6694, %8062 : tensor<3072x768xf32>
    %8064 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8065 = stablehlo.divide %6700, %8064 : tensor<3072xf32>
    %8066 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8067 = stablehlo.divide %6706, %8066 : tensor<768x3072xf32>
    %8068 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8069 = stablehlo.divide %6712, %8068 : tensor<768xf32>
    %8070 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8071 = stablehlo.divide %6718, %8070 : tensor<768xf32>
    %8072 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8073 = stablehlo.divide %6724, %8072 : tensor<768xf32>
    %8074 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8075 = stablehlo.divide %6730, %8074 : tensor<768x768xf32>
    %8076 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8077 = stablehlo.divide %6736, %8076 : tensor<768xf32>
    %8078 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8079 = stablehlo.divide %6742, %8078 : tensor<768x768xf32>
    %8080 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8081 = stablehlo.divide %6748, %8080 : tensor<768xf32>
    %8082 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8083 = stablehlo.divide %6754, %8082 : tensor<768x768xf32>
    %8084 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8085 = stablehlo.divide %6760, %8084 : tensor<768xf32>
    %8086 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8087 = stablehlo.divide %6766, %8086 : tensor<768x768xf32>
    %8088 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8089 = stablehlo.divide %6772, %8088 : tensor<768xf32>
    %8090 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8091 = stablehlo.divide %6778, %8090 : tensor<768xf32>
    %8092 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8093 = stablehlo.divide %6784, %8092 : tensor<768xf32>
    %8094 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8095 = stablehlo.divide %6790, %8094 : tensor<3072x768xf32>
    %8096 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8097 = stablehlo.divide %6796, %8096 : tensor<3072xf32>
    %8098 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8099 = stablehlo.divide %6802, %8098 : tensor<768x3072xf32>
    %8100 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8101 = stablehlo.divide %6808, %8100 : tensor<768xf32>
    %8102 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8103 = stablehlo.divide %6814, %8102 : tensor<768xf32>
    %8104 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8105 = stablehlo.divide %6820, %8104 : tensor<768xf32>
    %8106 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8107 = stablehlo.divide %6826, %8106 : tensor<768x768xf32>
    %8108 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8109 = stablehlo.divide %6832, %8108 : tensor<768xf32>
    %8110 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8111 = stablehlo.divide %6838, %8110 : tensor<768x768xf32>
    %8112 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8113 = stablehlo.divide %6844, %8112 : tensor<768xf32>
    %8114 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8115 = stablehlo.divide %6850, %8114 : tensor<768x768xf32>
    %8116 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8117 = stablehlo.divide %6856, %8116 : tensor<768xf32>
    %8118 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8119 = stablehlo.divide %6862, %8118 : tensor<768x768xf32>
    %8120 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8121 = stablehlo.divide %6868, %8120 : tensor<768xf32>
    %8122 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8123 = stablehlo.divide %6874, %8122 : tensor<768xf32>
    %8124 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8125 = stablehlo.divide %6880, %8124 : tensor<768xf32>
    %8126 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8127 = stablehlo.divide %6886, %8126 : tensor<3072x768xf32>
    %8128 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8129 = stablehlo.divide %6892, %8128 : tensor<3072xf32>
    %8130 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8131 = stablehlo.divide %6898, %8130 : tensor<768x3072xf32>
    %8132 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8133 = stablehlo.divide %6904, %8132 : tensor<768xf32>
    %8134 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8135 = stablehlo.divide %6910, %8134 : tensor<768xf32>
    %8136 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8137 = stablehlo.divide %6916, %8136 : tensor<768xf32>
    %8138 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8139 = stablehlo.divide %6922, %8138 : tensor<768x768xf32>
    %8140 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8141 = stablehlo.divide %6928, %8140 : tensor<768xf32>
    %8142 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8143 = stablehlo.divide %6934, %8142 : tensor<768x768xf32>
    %8144 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8145 = stablehlo.divide %6940, %8144 : tensor<768xf32>
    %8146 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8147 = stablehlo.divide %6946, %8146 : tensor<768x768xf32>
    %8148 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8149 = stablehlo.divide %6952, %8148 : tensor<768xf32>
    %8150 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8151 = stablehlo.divide %6958, %8150 : tensor<768x768xf32>
    %8152 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8153 = stablehlo.divide %6964, %8152 : tensor<768xf32>
    %8154 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8155 = stablehlo.divide %6970, %8154 : tensor<768xf32>
    %8156 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8157 = stablehlo.divide %6976, %8156 : tensor<768xf32>
    %8158 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8159 = stablehlo.divide %6982, %8158 : tensor<3072x768xf32>
    %8160 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8161 = stablehlo.divide %6988, %8160 : tensor<3072xf32>
    %8162 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8163 = stablehlo.divide %6994, %8162 : tensor<768x3072xf32>
    %8164 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8165 = stablehlo.divide %7000, %8164 : tensor<768xf32>
    %8166 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8167 = stablehlo.divide %7006, %8166 : tensor<768xf32>
    %8168 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8169 = stablehlo.divide %7012, %8168 : tensor<768xf32>
    %8170 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8171 = stablehlo.divide %7018, %8170 : tensor<768x768xf32>
    %8172 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8173 = stablehlo.divide %7024, %8172 : tensor<768xf32>
    %8174 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8175 = stablehlo.divide %7030, %8174 : tensor<768x768xf32>
    %8176 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8177 = stablehlo.divide %7036, %8176 : tensor<768xf32>
    %8178 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8179 = stablehlo.divide %7042, %8178 : tensor<768x768xf32>
    %8180 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8181 = stablehlo.divide %7048, %8180 : tensor<768xf32>
    %8182 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8183 = stablehlo.divide %7054, %8182 : tensor<768x768xf32>
    %8184 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8185 = stablehlo.divide %7060, %8184 : tensor<768xf32>
    %8186 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8187 = stablehlo.divide %7066, %8186 : tensor<768xf32>
    %8188 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8189 = stablehlo.divide %7072, %8188 : tensor<768xf32>
    %8190 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8191 = stablehlo.divide %7078, %8190 : tensor<3072x768xf32>
    %8192 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8193 = stablehlo.divide %7084, %8192 : tensor<3072xf32>
    %8194 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8195 = stablehlo.divide %7090, %8194 : tensor<768x3072xf32>
    %8196 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8197 = stablehlo.divide %7096, %8196 : tensor<768xf32>
    %8198 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8199 = stablehlo.divide %7102, %8198 : tensor<768xf32>
    %8200 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8201 = stablehlo.divide %7108, %8200 : tensor<768xf32>
    %8202 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8203 = stablehlo.divide %7114, %8202 : tensor<768x768xf32>
    %8204 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8205 = stablehlo.divide %7120, %8204 : tensor<768xf32>
    %8206 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8207 = stablehlo.divide %7126, %8206 : tensor<768x768xf32>
    %8208 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8209 = stablehlo.divide %7132, %8208 : tensor<768xf32>
    %8210 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8211 = stablehlo.divide %7138, %8210 : tensor<768x768xf32>
    %8212 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8213 = stablehlo.divide %7144, %8212 : tensor<768xf32>
    %8214 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8215 = stablehlo.divide %7150, %8214 : tensor<768x768xf32>
    %8216 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8217 = stablehlo.divide %7156, %8216 : tensor<768xf32>
    %8218 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8219 = stablehlo.divide %7162, %8218 : tensor<768xf32>
    %8220 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8221 = stablehlo.divide %7168, %8220 : tensor<768xf32>
    %8222 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8223 = stablehlo.divide %7174, %8222 : tensor<3072x768xf32>
    %8224 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8225 = stablehlo.divide %7180, %8224 : tensor<3072xf32>
    %8226 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8227 = stablehlo.divide %7186, %8226 : tensor<768x3072xf32>
    %8228 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8229 = stablehlo.divide %7192, %8228 : tensor<768xf32>
    %8230 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8231 = stablehlo.divide %7198, %8230 : tensor<768xf32>
    %8232 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8233 = stablehlo.divide %7204, %8232 : tensor<768xf32>
    %8234 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8235 = stablehlo.divide %7210, %8234 : tensor<768x768xf32>
    %8236 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8237 = stablehlo.divide %7216, %8236 : tensor<768xf32>
    %8238 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8239 = stablehlo.divide %7222, %8238 : tensor<768x768xf32>
    %8240 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8241 = stablehlo.divide %7228, %8240 : tensor<768xf32>
    %8242 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8243 = stablehlo.divide %7234, %8242 : tensor<768x768xf32>
    %8244 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8245 = stablehlo.divide %7240, %8244 : tensor<768xf32>
    %8246 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8247 = stablehlo.divide %7246, %8246 : tensor<768x768xf32>
    %8248 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8249 = stablehlo.divide %7252, %8248 : tensor<768xf32>
    %8250 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8251 = stablehlo.divide %7258, %8250 : tensor<768xf32>
    %8252 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8253 = stablehlo.divide %7264, %8252 : tensor<768xf32>
    %8254 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8255 = stablehlo.divide %7270, %8254 : tensor<3072x768xf32>
    %8256 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8257 = stablehlo.divide %7276, %8256 : tensor<3072xf32>
    %8258 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8259 = stablehlo.divide %7282, %8258 : tensor<768x3072xf32>
    %8260 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8261 = stablehlo.divide %7288, %8260 : tensor<768xf32>
    %8262 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8263 = stablehlo.divide %7294, %8262 : tensor<768xf32>
    %8264 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8265 = stablehlo.divide %7300, %8264 : tensor<768xf32>
    %8266 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8267 = stablehlo.divide %7306, %8266 : tensor<768x768xf32>
    %8268 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8269 = stablehlo.divide %7312, %8268 : tensor<768xf32>
    %8270 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8271 = stablehlo.divide %7318, %8270 : tensor<768x768xf32>
    %8272 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8273 = stablehlo.divide %7324, %8272 : tensor<768xf32>
    %8274 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8275 = stablehlo.divide %7330, %8274 : tensor<768x768xf32>
    %8276 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8277 = stablehlo.divide %7336, %8276 : tensor<768xf32>
    %8278 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8279 = stablehlo.divide %7342, %8278 : tensor<768x768xf32>
    %8280 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8281 = stablehlo.divide %7348, %8280 : tensor<768xf32>
    %8282 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8283 = stablehlo.divide %7354, %8282 : tensor<768xf32>
    %8284 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8285 = stablehlo.divide %7360, %8284 : tensor<768xf32>
    %8286 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8287 = stablehlo.divide %7366, %8286 : tensor<3072x768xf32>
    %8288 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8289 = stablehlo.divide %7372, %8288 : tensor<3072xf32>
    %8290 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8291 = stablehlo.divide %7378, %8290 : tensor<768x3072xf32>
    %8292 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8293 = stablehlo.divide %7384, %8292 : tensor<768xf32>
    %8294 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8295 = stablehlo.divide %7390, %8294 : tensor<768xf32>
    %8296 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8297 = stablehlo.divide %7396, %8296 : tensor<768xf32>
    %8298 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8299 = stablehlo.divide %7402, %8298 : tensor<768x768xf32>
    %8300 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8301 = stablehlo.divide %7408, %8300 : tensor<768xf32>
    %8302 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8303 = stablehlo.divide %7414, %8302 : tensor<768x768xf32>
    %8304 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8305 = stablehlo.divide %7420, %8304 : tensor<768xf32>
    %8306 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8307 = stablehlo.divide %7426, %8306 : tensor<768x768xf32>
    %8308 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8309 = stablehlo.divide %7432, %8308 : tensor<768xf32>
    %8310 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8311 = stablehlo.divide %7438, %8310 : tensor<768x768xf32>
    %8312 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8313 = stablehlo.divide %7444, %8312 : tensor<768xf32>
    %8314 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8315 = stablehlo.divide %7450, %8314 : tensor<768xf32>
    %8316 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8317 = stablehlo.divide %7456, %8316 : tensor<768xf32>
    %8318 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8319 = stablehlo.divide %7462, %8318 : tensor<3072x768xf32>
    %8320 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8321 = stablehlo.divide %7468, %8320 : tensor<3072xf32>
    %8322 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8323 = stablehlo.divide %7474, %8322 : tensor<768x3072xf32>
    %8324 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8325 = stablehlo.divide %7480, %8324 : tensor<768xf32>
    %8326 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8327 = stablehlo.divide %7486, %8326 : tensor<768xf32>
    %8328 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8329 = stablehlo.divide %7492, %8328 : tensor<768xf32>
    %8330 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8331 = stablehlo.divide %7498, %8330 : tensor<768x768xf32>
    %8332 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8333 = stablehlo.divide %7504, %8332 : tensor<768xf32>
    %8334 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8335 = stablehlo.divide %7510, %8334 : tensor<768xf32>
    %8336 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8337 = stablehlo.divide %7516, %8336 : tensor<768xf32>
    %8338 = stablehlo.broadcast_in_dim %7935, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %8339 = stablehlo.divide %7522, %8338 : tensor<30522xf32>
    %8340 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8341 = stablehlo.add %7937, %8340 : tensor<30522x768xf32>
    %8342 = stablehlo.sqrt %8341 : tensor<30522x768xf32>
    %cst_651 = stablehlo.constant dense<9.99999993E-9> : tensor<f32>
    %8343 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %8344 = stablehlo.add %8342, %8343 : tensor<30522x768xf32>
    %8345 = stablehlo.divide %7530, %8344 : tensor<30522x768xf32>
    %8346 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8347 = stablehlo.add %7939, %8346 : tensor<512x768xf32>
    %8348 = stablehlo.sqrt %8347 : tensor<512x768xf32>
    %8349 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %8350 = stablehlo.add %8348, %8349 : tensor<512x768xf32>
    %8351 = stablehlo.divide %7532, %8350 : tensor<512x768xf32>
    %8352 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8353 = stablehlo.add %7941, %8352 : tensor<2x768xf32>
    %8354 = stablehlo.sqrt %8353 : tensor<2x768xf32>
    %8355 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %8356 = stablehlo.add %8354, %8355 : tensor<2x768xf32>
    %8357 = stablehlo.divide %7534, %8356 : tensor<2x768xf32>
    %8358 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8359 = stablehlo.add %7943, %8358 : tensor<768xf32>
    %8360 = stablehlo.sqrt %8359 : tensor<768xf32>
    %8361 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8362 = stablehlo.add %8360, %8361 : tensor<768xf32>
    %8363 = stablehlo.divide %7536, %8362 : tensor<768xf32>
    %8364 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8365 = stablehlo.add %7945, %8364 : tensor<768xf32>
    %8366 = stablehlo.sqrt %8365 : tensor<768xf32>
    %8367 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8368 = stablehlo.add %8366, %8367 : tensor<768xf32>
    %8369 = stablehlo.divide %7538, %8368 : tensor<768xf32>
    %8370 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8371 = stablehlo.add %7947, %8370 : tensor<768x768xf32>
    %8372 = stablehlo.sqrt %8371 : tensor<768x768xf32>
    %8373 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8374 = stablehlo.add %8372, %8373 : tensor<768x768xf32>
    %8375 = stablehlo.divide %7540, %8374 : tensor<768x768xf32>
    %8376 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8377 = stablehlo.add %7949, %8376 : tensor<768xf32>
    %8378 = stablehlo.sqrt %8377 : tensor<768xf32>
    %8379 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8380 = stablehlo.add %8378, %8379 : tensor<768xf32>
    %8381 = stablehlo.divide %7542, %8380 : tensor<768xf32>
    %8382 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8383 = stablehlo.add %7951, %8382 : tensor<768x768xf32>
    %8384 = stablehlo.sqrt %8383 : tensor<768x768xf32>
    %8385 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8386 = stablehlo.add %8384, %8385 : tensor<768x768xf32>
    %8387 = stablehlo.divide %7544, %8386 : tensor<768x768xf32>
    %8388 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8389 = stablehlo.add %7953, %8388 : tensor<768xf32>
    %8390 = stablehlo.sqrt %8389 : tensor<768xf32>
    %8391 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8392 = stablehlo.add %8390, %8391 : tensor<768xf32>
    %8393 = stablehlo.divide %7546, %8392 : tensor<768xf32>
    %8394 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8395 = stablehlo.add %7955, %8394 : tensor<768x768xf32>
    %8396 = stablehlo.sqrt %8395 : tensor<768x768xf32>
    %8397 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8398 = stablehlo.add %8396, %8397 : tensor<768x768xf32>
    %8399 = stablehlo.divide %7548, %8398 : tensor<768x768xf32>
    %8400 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8401 = stablehlo.add %7957, %8400 : tensor<768xf32>
    %8402 = stablehlo.sqrt %8401 : tensor<768xf32>
    %8403 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8404 = stablehlo.add %8402, %8403 : tensor<768xf32>
    %8405 = stablehlo.divide %7550, %8404 : tensor<768xf32>
    %8406 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8407 = stablehlo.add %7959, %8406 : tensor<768x768xf32>
    %8408 = stablehlo.sqrt %8407 : tensor<768x768xf32>
    %8409 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8410 = stablehlo.add %8408, %8409 : tensor<768x768xf32>
    %8411 = stablehlo.divide %7552, %8410 : tensor<768x768xf32>
    %8412 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8413 = stablehlo.add %7961, %8412 : tensor<768xf32>
    %8414 = stablehlo.sqrt %8413 : tensor<768xf32>
    %8415 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8416 = stablehlo.add %8414, %8415 : tensor<768xf32>
    %8417 = stablehlo.divide %7554, %8416 : tensor<768xf32>
    %8418 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8419 = stablehlo.add %7963, %8418 : tensor<768xf32>
    %8420 = stablehlo.sqrt %8419 : tensor<768xf32>
    %8421 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8422 = stablehlo.add %8420, %8421 : tensor<768xf32>
    %8423 = stablehlo.divide %7556, %8422 : tensor<768xf32>
    %8424 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8425 = stablehlo.add %7965, %8424 : tensor<768xf32>
    %8426 = stablehlo.sqrt %8425 : tensor<768xf32>
    %8427 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8428 = stablehlo.add %8426, %8427 : tensor<768xf32>
    %8429 = stablehlo.divide %7558, %8428 : tensor<768xf32>
    %8430 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8431 = stablehlo.add %7967, %8430 : tensor<3072x768xf32>
    %8432 = stablehlo.sqrt %8431 : tensor<3072x768xf32>
    %8433 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8434 = stablehlo.add %8432, %8433 : tensor<3072x768xf32>
    %8435 = stablehlo.divide %7560, %8434 : tensor<3072x768xf32>
    %8436 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8437 = stablehlo.add %7969, %8436 : tensor<3072xf32>
    %8438 = stablehlo.sqrt %8437 : tensor<3072xf32>
    %8439 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8440 = stablehlo.add %8438, %8439 : tensor<3072xf32>
    %8441 = stablehlo.divide %7562, %8440 : tensor<3072xf32>
    %8442 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8443 = stablehlo.add %7971, %8442 : tensor<768x3072xf32>
    %8444 = stablehlo.sqrt %8443 : tensor<768x3072xf32>
    %8445 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8446 = stablehlo.add %8444, %8445 : tensor<768x3072xf32>
    %8447 = stablehlo.divide %7564, %8446 : tensor<768x3072xf32>
    %8448 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8449 = stablehlo.add %7973, %8448 : tensor<768xf32>
    %8450 = stablehlo.sqrt %8449 : tensor<768xf32>
    %8451 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8452 = stablehlo.add %8450, %8451 : tensor<768xf32>
    %8453 = stablehlo.divide %7566, %8452 : tensor<768xf32>
    %8454 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8455 = stablehlo.add %7975, %8454 : tensor<768xf32>
    %8456 = stablehlo.sqrt %8455 : tensor<768xf32>
    %8457 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8458 = stablehlo.add %8456, %8457 : tensor<768xf32>
    %8459 = stablehlo.divide %7568, %8458 : tensor<768xf32>
    %8460 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8461 = stablehlo.add %7977, %8460 : tensor<768xf32>
    %8462 = stablehlo.sqrt %8461 : tensor<768xf32>
    %8463 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8464 = stablehlo.add %8462, %8463 : tensor<768xf32>
    %8465 = stablehlo.divide %7570, %8464 : tensor<768xf32>
    %8466 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8467 = stablehlo.add %7979, %8466 : tensor<768x768xf32>
    %8468 = stablehlo.sqrt %8467 : tensor<768x768xf32>
    %8469 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8470 = stablehlo.add %8468, %8469 : tensor<768x768xf32>
    %8471 = stablehlo.divide %7572, %8470 : tensor<768x768xf32>
    %8472 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8473 = stablehlo.add %7981, %8472 : tensor<768xf32>
    %8474 = stablehlo.sqrt %8473 : tensor<768xf32>
    %8475 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8476 = stablehlo.add %8474, %8475 : tensor<768xf32>
    %8477 = stablehlo.divide %7574, %8476 : tensor<768xf32>
    %8478 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8479 = stablehlo.add %7983, %8478 : tensor<768x768xf32>
    %8480 = stablehlo.sqrt %8479 : tensor<768x768xf32>
    %8481 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8482 = stablehlo.add %8480, %8481 : tensor<768x768xf32>
    %8483 = stablehlo.divide %7576, %8482 : tensor<768x768xf32>
    %8484 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8485 = stablehlo.add %7985, %8484 : tensor<768xf32>
    %8486 = stablehlo.sqrt %8485 : tensor<768xf32>
    %8487 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8488 = stablehlo.add %8486, %8487 : tensor<768xf32>
    %8489 = stablehlo.divide %7578, %8488 : tensor<768xf32>
    %8490 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8491 = stablehlo.add %7987, %8490 : tensor<768x768xf32>
    %8492 = stablehlo.sqrt %8491 : tensor<768x768xf32>
    %8493 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8494 = stablehlo.add %8492, %8493 : tensor<768x768xf32>
    %8495 = stablehlo.divide %7580, %8494 : tensor<768x768xf32>
    %8496 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8497 = stablehlo.add %7989, %8496 : tensor<768xf32>
    %8498 = stablehlo.sqrt %8497 : tensor<768xf32>
    %8499 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8500 = stablehlo.add %8498, %8499 : tensor<768xf32>
    %8501 = stablehlo.divide %7582, %8500 : tensor<768xf32>
    %8502 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8503 = stablehlo.add %7991, %8502 : tensor<768x768xf32>
    %8504 = stablehlo.sqrt %8503 : tensor<768x768xf32>
    %8505 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8506 = stablehlo.add %8504, %8505 : tensor<768x768xf32>
    %8507 = stablehlo.divide %7584, %8506 : tensor<768x768xf32>
    %8508 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8509 = stablehlo.add %7993, %8508 : tensor<768xf32>
    %8510 = stablehlo.sqrt %8509 : tensor<768xf32>
    %8511 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8512 = stablehlo.add %8510, %8511 : tensor<768xf32>
    %8513 = stablehlo.divide %7586, %8512 : tensor<768xf32>
    %8514 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8515 = stablehlo.add %7995, %8514 : tensor<768xf32>
    %8516 = stablehlo.sqrt %8515 : tensor<768xf32>
    %8517 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8518 = stablehlo.add %8516, %8517 : tensor<768xf32>
    %8519 = stablehlo.divide %7588, %8518 : tensor<768xf32>
    %8520 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8521 = stablehlo.add %7997, %8520 : tensor<768xf32>
    %8522 = stablehlo.sqrt %8521 : tensor<768xf32>
    %8523 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8524 = stablehlo.add %8522, %8523 : tensor<768xf32>
    %8525 = stablehlo.divide %7590, %8524 : tensor<768xf32>
    %8526 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8527 = stablehlo.add %7999, %8526 : tensor<3072x768xf32>
    %8528 = stablehlo.sqrt %8527 : tensor<3072x768xf32>
    %8529 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8530 = stablehlo.add %8528, %8529 : tensor<3072x768xf32>
    %8531 = stablehlo.divide %7592, %8530 : tensor<3072x768xf32>
    %8532 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8533 = stablehlo.add %8001, %8532 : tensor<3072xf32>
    %8534 = stablehlo.sqrt %8533 : tensor<3072xf32>
    %8535 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8536 = stablehlo.add %8534, %8535 : tensor<3072xf32>
    %8537 = stablehlo.divide %7594, %8536 : tensor<3072xf32>
    %8538 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8539 = stablehlo.add %8003, %8538 : tensor<768x3072xf32>
    %8540 = stablehlo.sqrt %8539 : tensor<768x3072xf32>
    %8541 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8542 = stablehlo.add %8540, %8541 : tensor<768x3072xf32>
    %8543 = stablehlo.divide %7596, %8542 : tensor<768x3072xf32>
    %8544 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8545 = stablehlo.add %8005, %8544 : tensor<768xf32>
    %8546 = stablehlo.sqrt %8545 : tensor<768xf32>
    %8547 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8548 = stablehlo.add %8546, %8547 : tensor<768xf32>
    %8549 = stablehlo.divide %7598, %8548 : tensor<768xf32>
    %8550 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8551 = stablehlo.add %8007, %8550 : tensor<768xf32>
    %8552 = stablehlo.sqrt %8551 : tensor<768xf32>
    %8553 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8554 = stablehlo.add %8552, %8553 : tensor<768xf32>
    %8555 = stablehlo.divide %7600, %8554 : tensor<768xf32>
    %8556 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8557 = stablehlo.add %8009, %8556 : tensor<768xf32>
    %8558 = stablehlo.sqrt %8557 : tensor<768xf32>
    %8559 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8560 = stablehlo.add %8558, %8559 : tensor<768xf32>
    %8561 = stablehlo.divide %7602, %8560 : tensor<768xf32>
    %8562 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8563 = stablehlo.add %8011, %8562 : tensor<768x768xf32>
    %8564 = stablehlo.sqrt %8563 : tensor<768x768xf32>
    %8565 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8566 = stablehlo.add %8564, %8565 : tensor<768x768xf32>
    %8567 = stablehlo.divide %7604, %8566 : tensor<768x768xf32>
    %8568 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8569 = stablehlo.add %8013, %8568 : tensor<768xf32>
    %8570 = stablehlo.sqrt %8569 : tensor<768xf32>
    %8571 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8572 = stablehlo.add %8570, %8571 : tensor<768xf32>
    %8573 = stablehlo.divide %7606, %8572 : tensor<768xf32>
    %8574 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8575 = stablehlo.add %8015, %8574 : tensor<768x768xf32>
    %8576 = stablehlo.sqrt %8575 : tensor<768x768xf32>
    %8577 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8578 = stablehlo.add %8576, %8577 : tensor<768x768xf32>
    %8579 = stablehlo.divide %7608, %8578 : tensor<768x768xf32>
    %8580 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8581 = stablehlo.add %8017, %8580 : tensor<768xf32>
    %8582 = stablehlo.sqrt %8581 : tensor<768xf32>
    %8583 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8584 = stablehlo.add %8582, %8583 : tensor<768xf32>
    %8585 = stablehlo.divide %7610, %8584 : tensor<768xf32>
    %8586 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8587 = stablehlo.add %8019, %8586 : tensor<768x768xf32>
    %8588 = stablehlo.sqrt %8587 : tensor<768x768xf32>
    %8589 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8590 = stablehlo.add %8588, %8589 : tensor<768x768xf32>
    %8591 = stablehlo.divide %7612, %8590 : tensor<768x768xf32>
    %8592 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8593 = stablehlo.add %8021, %8592 : tensor<768xf32>
    %8594 = stablehlo.sqrt %8593 : tensor<768xf32>
    %8595 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8596 = stablehlo.add %8594, %8595 : tensor<768xf32>
    %8597 = stablehlo.divide %7614, %8596 : tensor<768xf32>
    %8598 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8599 = stablehlo.add %8023, %8598 : tensor<768x768xf32>
    %8600 = stablehlo.sqrt %8599 : tensor<768x768xf32>
    %8601 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8602 = stablehlo.add %8600, %8601 : tensor<768x768xf32>
    %8603 = stablehlo.divide %7616, %8602 : tensor<768x768xf32>
    %8604 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8605 = stablehlo.add %8025, %8604 : tensor<768xf32>
    %8606 = stablehlo.sqrt %8605 : tensor<768xf32>
    %8607 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8608 = stablehlo.add %8606, %8607 : tensor<768xf32>
    %8609 = stablehlo.divide %7618, %8608 : tensor<768xf32>
    %8610 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8611 = stablehlo.add %8027, %8610 : tensor<768xf32>
    %8612 = stablehlo.sqrt %8611 : tensor<768xf32>
    %8613 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8614 = stablehlo.add %8612, %8613 : tensor<768xf32>
    %8615 = stablehlo.divide %7620, %8614 : tensor<768xf32>
    %8616 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8617 = stablehlo.add %8029, %8616 : tensor<768xf32>
    %8618 = stablehlo.sqrt %8617 : tensor<768xf32>
    %8619 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8620 = stablehlo.add %8618, %8619 : tensor<768xf32>
    %8621 = stablehlo.divide %7622, %8620 : tensor<768xf32>
    %8622 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8623 = stablehlo.add %8031, %8622 : tensor<3072x768xf32>
    %8624 = stablehlo.sqrt %8623 : tensor<3072x768xf32>
    %8625 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8626 = stablehlo.add %8624, %8625 : tensor<3072x768xf32>
    %8627 = stablehlo.divide %7624, %8626 : tensor<3072x768xf32>
    %8628 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8629 = stablehlo.add %8033, %8628 : tensor<3072xf32>
    %8630 = stablehlo.sqrt %8629 : tensor<3072xf32>
    %8631 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8632 = stablehlo.add %8630, %8631 : tensor<3072xf32>
    %8633 = stablehlo.divide %7626, %8632 : tensor<3072xf32>
    %8634 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8635 = stablehlo.add %8035, %8634 : tensor<768x3072xf32>
    %8636 = stablehlo.sqrt %8635 : tensor<768x3072xf32>
    %8637 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8638 = stablehlo.add %8636, %8637 : tensor<768x3072xf32>
    %8639 = stablehlo.divide %7628, %8638 : tensor<768x3072xf32>
    %8640 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8641 = stablehlo.add %8037, %8640 : tensor<768xf32>
    %8642 = stablehlo.sqrt %8641 : tensor<768xf32>
    %8643 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8644 = stablehlo.add %8642, %8643 : tensor<768xf32>
    %8645 = stablehlo.divide %7630, %8644 : tensor<768xf32>
    %8646 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8647 = stablehlo.add %8039, %8646 : tensor<768xf32>
    %8648 = stablehlo.sqrt %8647 : tensor<768xf32>
    %8649 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8650 = stablehlo.add %8648, %8649 : tensor<768xf32>
    %8651 = stablehlo.divide %7632, %8650 : tensor<768xf32>
    %8652 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8653 = stablehlo.add %8041, %8652 : tensor<768xf32>
    %8654 = stablehlo.sqrt %8653 : tensor<768xf32>
    %8655 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8656 = stablehlo.add %8654, %8655 : tensor<768xf32>
    %8657 = stablehlo.divide %7634, %8656 : tensor<768xf32>
    %8658 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8659 = stablehlo.add %8043, %8658 : tensor<768x768xf32>
    %8660 = stablehlo.sqrt %8659 : tensor<768x768xf32>
    %8661 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8662 = stablehlo.add %8660, %8661 : tensor<768x768xf32>
    %8663 = stablehlo.divide %7636, %8662 : tensor<768x768xf32>
    %8664 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8665 = stablehlo.add %8045, %8664 : tensor<768xf32>
    %8666 = stablehlo.sqrt %8665 : tensor<768xf32>
    %8667 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8668 = stablehlo.add %8666, %8667 : tensor<768xf32>
    %8669 = stablehlo.divide %7638, %8668 : tensor<768xf32>
    %8670 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8671 = stablehlo.add %8047, %8670 : tensor<768x768xf32>
    %8672 = stablehlo.sqrt %8671 : tensor<768x768xf32>
    %8673 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8674 = stablehlo.add %8672, %8673 : tensor<768x768xf32>
    %8675 = stablehlo.divide %7640, %8674 : tensor<768x768xf32>
    %8676 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8677 = stablehlo.add %8049, %8676 : tensor<768xf32>
    %8678 = stablehlo.sqrt %8677 : tensor<768xf32>
    %8679 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8680 = stablehlo.add %8678, %8679 : tensor<768xf32>
    %8681 = stablehlo.divide %7642, %8680 : tensor<768xf32>
    %8682 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8683 = stablehlo.add %8051, %8682 : tensor<768x768xf32>
    %8684 = stablehlo.sqrt %8683 : tensor<768x768xf32>
    %8685 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8686 = stablehlo.add %8684, %8685 : tensor<768x768xf32>
    %8687 = stablehlo.divide %7644, %8686 : tensor<768x768xf32>
    %8688 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8689 = stablehlo.add %8053, %8688 : tensor<768xf32>
    %8690 = stablehlo.sqrt %8689 : tensor<768xf32>
    %8691 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8692 = stablehlo.add %8690, %8691 : tensor<768xf32>
    %8693 = stablehlo.divide %7646, %8692 : tensor<768xf32>
    %8694 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8695 = stablehlo.add %8055, %8694 : tensor<768x768xf32>
    %8696 = stablehlo.sqrt %8695 : tensor<768x768xf32>
    %8697 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8698 = stablehlo.add %8696, %8697 : tensor<768x768xf32>
    %8699 = stablehlo.divide %7648, %8698 : tensor<768x768xf32>
    %8700 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8701 = stablehlo.add %8057, %8700 : tensor<768xf32>
    %8702 = stablehlo.sqrt %8701 : tensor<768xf32>
    %8703 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8704 = stablehlo.add %8702, %8703 : tensor<768xf32>
    %8705 = stablehlo.divide %7650, %8704 : tensor<768xf32>
    %8706 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8707 = stablehlo.add %8059, %8706 : tensor<768xf32>
    %8708 = stablehlo.sqrt %8707 : tensor<768xf32>
    %8709 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8710 = stablehlo.add %8708, %8709 : tensor<768xf32>
    %8711 = stablehlo.divide %7652, %8710 : tensor<768xf32>
    %8712 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8713 = stablehlo.add %8061, %8712 : tensor<768xf32>
    %8714 = stablehlo.sqrt %8713 : tensor<768xf32>
    %8715 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8716 = stablehlo.add %8714, %8715 : tensor<768xf32>
    %8717 = stablehlo.divide %7654, %8716 : tensor<768xf32>
    %8718 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8719 = stablehlo.add %8063, %8718 : tensor<3072x768xf32>
    %8720 = stablehlo.sqrt %8719 : tensor<3072x768xf32>
    %8721 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8722 = stablehlo.add %8720, %8721 : tensor<3072x768xf32>
    %8723 = stablehlo.divide %7656, %8722 : tensor<3072x768xf32>
    %8724 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8725 = stablehlo.add %8065, %8724 : tensor<3072xf32>
    %8726 = stablehlo.sqrt %8725 : tensor<3072xf32>
    %8727 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8728 = stablehlo.add %8726, %8727 : tensor<3072xf32>
    %8729 = stablehlo.divide %7658, %8728 : tensor<3072xf32>
    %8730 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8731 = stablehlo.add %8067, %8730 : tensor<768x3072xf32>
    %8732 = stablehlo.sqrt %8731 : tensor<768x3072xf32>
    %8733 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8734 = stablehlo.add %8732, %8733 : tensor<768x3072xf32>
    %8735 = stablehlo.divide %7660, %8734 : tensor<768x3072xf32>
    %8736 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8737 = stablehlo.add %8069, %8736 : tensor<768xf32>
    %8738 = stablehlo.sqrt %8737 : tensor<768xf32>
    %8739 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8740 = stablehlo.add %8738, %8739 : tensor<768xf32>
    %8741 = stablehlo.divide %7662, %8740 : tensor<768xf32>
    %8742 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8743 = stablehlo.add %8071, %8742 : tensor<768xf32>
    %8744 = stablehlo.sqrt %8743 : tensor<768xf32>
    %8745 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8746 = stablehlo.add %8744, %8745 : tensor<768xf32>
    %8747 = stablehlo.divide %7664, %8746 : tensor<768xf32>
    %8748 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8749 = stablehlo.add %8073, %8748 : tensor<768xf32>
    %8750 = stablehlo.sqrt %8749 : tensor<768xf32>
    %8751 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8752 = stablehlo.add %8750, %8751 : tensor<768xf32>
    %8753 = stablehlo.divide %7666, %8752 : tensor<768xf32>
    %8754 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8755 = stablehlo.add %8075, %8754 : tensor<768x768xf32>
    %8756 = stablehlo.sqrt %8755 : tensor<768x768xf32>
    %8757 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8758 = stablehlo.add %8756, %8757 : tensor<768x768xf32>
    %8759 = stablehlo.divide %7668, %8758 : tensor<768x768xf32>
    %8760 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8761 = stablehlo.add %8077, %8760 : tensor<768xf32>
    %8762 = stablehlo.sqrt %8761 : tensor<768xf32>
    %8763 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8764 = stablehlo.add %8762, %8763 : tensor<768xf32>
    %8765 = stablehlo.divide %7670, %8764 : tensor<768xf32>
    %8766 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8767 = stablehlo.add %8079, %8766 : tensor<768x768xf32>
    %8768 = stablehlo.sqrt %8767 : tensor<768x768xf32>
    %8769 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8770 = stablehlo.add %8768, %8769 : tensor<768x768xf32>
    %8771 = stablehlo.divide %7672, %8770 : tensor<768x768xf32>
    %8772 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8773 = stablehlo.add %8081, %8772 : tensor<768xf32>
    %8774 = stablehlo.sqrt %8773 : tensor<768xf32>
    %8775 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8776 = stablehlo.add %8774, %8775 : tensor<768xf32>
    %8777 = stablehlo.divide %7674, %8776 : tensor<768xf32>
    %8778 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8779 = stablehlo.add %8083, %8778 : tensor<768x768xf32>
    %8780 = stablehlo.sqrt %8779 : tensor<768x768xf32>
    %8781 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8782 = stablehlo.add %8780, %8781 : tensor<768x768xf32>
    %8783 = stablehlo.divide %7676, %8782 : tensor<768x768xf32>
    %8784 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8785 = stablehlo.add %8085, %8784 : tensor<768xf32>
    %8786 = stablehlo.sqrt %8785 : tensor<768xf32>
    %8787 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8788 = stablehlo.add %8786, %8787 : tensor<768xf32>
    %8789 = stablehlo.divide %7678, %8788 : tensor<768xf32>
    %8790 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8791 = stablehlo.add %8087, %8790 : tensor<768x768xf32>
    %8792 = stablehlo.sqrt %8791 : tensor<768x768xf32>
    %8793 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8794 = stablehlo.add %8792, %8793 : tensor<768x768xf32>
    %8795 = stablehlo.divide %7680, %8794 : tensor<768x768xf32>
    %8796 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8797 = stablehlo.add %8089, %8796 : tensor<768xf32>
    %8798 = stablehlo.sqrt %8797 : tensor<768xf32>
    %8799 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8800 = stablehlo.add %8798, %8799 : tensor<768xf32>
    %8801 = stablehlo.divide %7682, %8800 : tensor<768xf32>
    %8802 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8803 = stablehlo.add %8091, %8802 : tensor<768xf32>
    %8804 = stablehlo.sqrt %8803 : tensor<768xf32>
    %8805 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8806 = stablehlo.add %8804, %8805 : tensor<768xf32>
    %8807 = stablehlo.divide %7684, %8806 : tensor<768xf32>
    %8808 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8809 = stablehlo.add %8093, %8808 : tensor<768xf32>
    %8810 = stablehlo.sqrt %8809 : tensor<768xf32>
    %8811 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8812 = stablehlo.add %8810, %8811 : tensor<768xf32>
    %8813 = stablehlo.divide %7686, %8812 : tensor<768xf32>
    %8814 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8815 = stablehlo.add %8095, %8814 : tensor<3072x768xf32>
    %8816 = stablehlo.sqrt %8815 : tensor<3072x768xf32>
    %8817 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8818 = stablehlo.add %8816, %8817 : tensor<3072x768xf32>
    %8819 = stablehlo.divide %7688, %8818 : tensor<3072x768xf32>
    %8820 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8821 = stablehlo.add %8097, %8820 : tensor<3072xf32>
    %8822 = stablehlo.sqrt %8821 : tensor<3072xf32>
    %8823 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8824 = stablehlo.add %8822, %8823 : tensor<3072xf32>
    %8825 = stablehlo.divide %7690, %8824 : tensor<3072xf32>
    %8826 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8827 = stablehlo.add %8099, %8826 : tensor<768x3072xf32>
    %8828 = stablehlo.sqrt %8827 : tensor<768x3072xf32>
    %8829 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8830 = stablehlo.add %8828, %8829 : tensor<768x3072xf32>
    %8831 = stablehlo.divide %7692, %8830 : tensor<768x3072xf32>
    %8832 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8833 = stablehlo.add %8101, %8832 : tensor<768xf32>
    %8834 = stablehlo.sqrt %8833 : tensor<768xf32>
    %8835 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8836 = stablehlo.add %8834, %8835 : tensor<768xf32>
    %8837 = stablehlo.divide %7694, %8836 : tensor<768xf32>
    %8838 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8839 = stablehlo.add %8103, %8838 : tensor<768xf32>
    %8840 = stablehlo.sqrt %8839 : tensor<768xf32>
    %8841 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8842 = stablehlo.add %8840, %8841 : tensor<768xf32>
    %8843 = stablehlo.divide %7696, %8842 : tensor<768xf32>
    %8844 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8845 = stablehlo.add %8105, %8844 : tensor<768xf32>
    %8846 = stablehlo.sqrt %8845 : tensor<768xf32>
    %8847 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8848 = stablehlo.add %8846, %8847 : tensor<768xf32>
    %8849 = stablehlo.divide %7698, %8848 : tensor<768xf32>
    %8850 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8851 = stablehlo.add %8107, %8850 : tensor<768x768xf32>
    %8852 = stablehlo.sqrt %8851 : tensor<768x768xf32>
    %8853 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8854 = stablehlo.add %8852, %8853 : tensor<768x768xf32>
    %8855 = stablehlo.divide %7700, %8854 : tensor<768x768xf32>
    %8856 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8857 = stablehlo.add %8109, %8856 : tensor<768xf32>
    %8858 = stablehlo.sqrt %8857 : tensor<768xf32>
    %8859 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8860 = stablehlo.add %8858, %8859 : tensor<768xf32>
    %8861 = stablehlo.divide %7702, %8860 : tensor<768xf32>
    %8862 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8863 = stablehlo.add %8111, %8862 : tensor<768x768xf32>
    %8864 = stablehlo.sqrt %8863 : tensor<768x768xf32>
    %8865 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8866 = stablehlo.add %8864, %8865 : tensor<768x768xf32>
    %8867 = stablehlo.divide %7704, %8866 : tensor<768x768xf32>
    %8868 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8869 = stablehlo.add %8113, %8868 : tensor<768xf32>
    %8870 = stablehlo.sqrt %8869 : tensor<768xf32>
    %8871 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8872 = stablehlo.add %8870, %8871 : tensor<768xf32>
    %8873 = stablehlo.divide %7706, %8872 : tensor<768xf32>
    %8874 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8875 = stablehlo.add %8115, %8874 : tensor<768x768xf32>
    %8876 = stablehlo.sqrt %8875 : tensor<768x768xf32>
    %8877 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8878 = stablehlo.add %8876, %8877 : tensor<768x768xf32>
    %8879 = stablehlo.divide %7708, %8878 : tensor<768x768xf32>
    %8880 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8881 = stablehlo.add %8117, %8880 : tensor<768xf32>
    %8882 = stablehlo.sqrt %8881 : tensor<768xf32>
    %8883 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8884 = stablehlo.add %8882, %8883 : tensor<768xf32>
    %8885 = stablehlo.divide %7710, %8884 : tensor<768xf32>
    %8886 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8887 = stablehlo.add %8119, %8886 : tensor<768x768xf32>
    %8888 = stablehlo.sqrt %8887 : tensor<768x768xf32>
    %8889 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8890 = stablehlo.add %8888, %8889 : tensor<768x768xf32>
    %8891 = stablehlo.divide %7712, %8890 : tensor<768x768xf32>
    %8892 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8893 = stablehlo.add %8121, %8892 : tensor<768xf32>
    %8894 = stablehlo.sqrt %8893 : tensor<768xf32>
    %8895 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8896 = stablehlo.add %8894, %8895 : tensor<768xf32>
    %8897 = stablehlo.divide %7714, %8896 : tensor<768xf32>
    %8898 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8899 = stablehlo.add %8123, %8898 : tensor<768xf32>
    %8900 = stablehlo.sqrt %8899 : tensor<768xf32>
    %8901 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8902 = stablehlo.add %8900, %8901 : tensor<768xf32>
    %8903 = stablehlo.divide %7716, %8902 : tensor<768xf32>
    %8904 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8905 = stablehlo.add %8125, %8904 : tensor<768xf32>
    %8906 = stablehlo.sqrt %8905 : tensor<768xf32>
    %8907 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8908 = stablehlo.add %8906, %8907 : tensor<768xf32>
    %8909 = stablehlo.divide %7718, %8908 : tensor<768xf32>
    %8910 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8911 = stablehlo.add %8127, %8910 : tensor<3072x768xf32>
    %8912 = stablehlo.sqrt %8911 : tensor<3072x768xf32>
    %8913 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %8914 = stablehlo.add %8912, %8913 : tensor<3072x768xf32>
    %8915 = stablehlo.divide %7720, %8914 : tensor<3072x768xf32>
    %8916 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8917 = stablehlo.add %8129, %8916 : tensor<3072xf32>
    %8918 = stablehlo.sqrt %8917 : tensor<3072xf32>
    %8919 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %8920 = stablehlo.add %8918, %8919 : tensor<3072xf32>
    %8921 = stablehlo.divide %7722, %8920 : tensor<3072xf32>
    %8922 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8923 = stablehlo.add %8131, %8922 : tensor<768x3072xf32>
    %8924 = stablehlo.sqrt %8923 : tensor<768x3072xf32>
    %8925 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %8926 = stablehlo.add %8924, %8925 : tensor<768x3072xf32>
    %8927 = stablehlo.divide %7724, %8926 : tensor<768x3072xf32>
    %8928 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8929 = stablehlo.add %8133, %8928 : tensor<768xf32>
    %8930 = stablehlo.sqrt %8929 : tensor<768xf32>
    %8931 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8932 = stablehlo.add %8930, %8931 : tensor<768xf32>
    %8933 = stablehlo.divide %7726, %8932 : tensor<768xf32>
    %8934 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8935 = stablehlo.add %8135, %8934 : tensor<768xf32>
    %8936 = stablehlo.sqrt %8935 : tensor<768xf32>
    %8937 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8938 = stablehlo.add %8936, %8937 : tensor<768xf32>
    %8939 = stablehlo.divide %7728, %8938 : tensor<768xf32>
    %8940 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8941 = stablehlo.add %8137, %8940 : tensor<768xf32>
    %8942 = stablehlo.sqrt %8941 : tensor<768xf32>
    %8943 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8944 = stablehlo.add %8942, %8943 : tensor<768xf32>
    %8945 = stablehlo.divide %7730, %8944 : tensor<768xf32>
    %8946 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8947 = stablehlo.add %8139, %8946 : tensor<768x768xf32>
    %8948 = stablehlo.sqrt %8947 : tensor<768x768xf32>
    %8949 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8950 = stablehlo.add %8948, %8949 : tensor<768x768xf32>
    %8951 = stablehlo.divide %7732, %8950 : tensor<768x768xf32>
    %8952 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8953 = stablehlo.add %8141, %8952 : tensor<768xf32>
    %8954 = stablehlo.sqrt %8953 : tensor<768xf32>
    %8955 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8956 = stablehlo.add %8954, %8955 : tensor<768xf32>
    %8957 = stablehlo.divide %7734, %8956 : tensor<768xf32>
    %8958 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8959 = stablehlo.add %8143, %8958 : tensor<768x768xf32>
    %8960 = stablehlo.sqrt %8959 : tensor<768x768xf32>
    %8961 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8962 = stablehlo.add %8960, %8961 : tensor<768x768xf32>
    %8963 = stablehlo.divide %7736, %8962 : tensor<768x768xf32>
    %8964 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8965 = stablehlo.add %8145, %8964 : tensor<768xf32>
    %8966 = stablehlo.sqrt %8965 : tensor<768xf32>
    %8967 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8968 = stablehlo.add %8966, %8967 : tensor<768xf32>
    %8969 = stablehlo.divide %7738, %8968 : tensor<768xf32>
    %8970 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8971 = stablehlo.add %8147, %8970 : tensor<768x768xf32>
    %8972 = stablehlo.sqrt %8971 : tensor<768x768xf32>
    %8973 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8974 = stablehlo.add %8972, %8973 : tensor<768x768xf32>
    %8975 = stablehlo.divide %7740, %8974 : tensor<768x768xf32>
    %8976 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8977 = stablehlo.add %8149, %8976 : tensor<768xf32>
    %8978 = stablehlo.sqrt %8977 : tensor<768xf32>
    %8979 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8980 = stablehlo.add %8978, %8979 : tensor<768xf32>
    %8981 = stablehlo.divide %7742, %8980 : tensor<768xf32>
    %8982 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8983 = stablehlo.add %8151, %8982 : tensor<768x768xf32>
    %8984 = stablehlo.sqrt %8983 : tensor<768x768xf32>
    %8985 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %8986 = stablehlo.add %8984, %8985 : tensor<768x768xf32>
    %8987 = stablehlo.divide %7744, %8986 : tensor<768x768xf32>
    %8988 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8989 = stablehlo.add %8153, %8988 : tensor<768xf32>
    %8990 = stablehlo.sqrt %8989 : tensor<768xf32>
    %8991 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8992 = stablehlo.add %8990, %8991 : tensor<768xf32>
    %8993 = stablehlo.divide %7746, %8992 : tensor<768xf32>
    %8994 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8995 = stablehlo.add %8155, %8994 : tensor<768xf32>
    %8996 = stablehlo.sqrt %8995 : tensor<768xf32>
    %8997 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %8998 = stablehlo.add %8996, %8997 : tensor<768xf32>
    %8999 = stablehlo.divide %7748, %8998 : tensor<768xf32>
    %9000 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9001 = stablehlo.add %8157, %9000 : tensor<768xf32>
    %9002 = stablehlo.sqrt %9001 : tensor<768xf32>
    %9003 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9004 = stablehlo.add %9002, %9003 : tensor<768xf32>
    %9005 = stablehlo.divide %7750, %9004 : tensor<768xf32>
    %9006 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9007 = stablehlo.add %8159, %9006 : tensor<3072x768xf32>
    %9008 = stablehlo.sqrt %9007 : tensor<3072x768xf32>
    %9009 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9010 = stablehlo.add %9008, %9009 : tensor<3072x768xf32>
    %9011 = stablehlo.divide %7752, %9010 : tensor<3072x768xf32>
    %9012 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9013 = stablehlo.add %8161, %9012 : tensor<3072xf32>
    %9014 = stablehlo.sqrt %9013 : tensor<3072xf32>
    %9015 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9016 = stablehlo.add %9014, %9015 : tensor<3072xf32>
    %9017 = stablehlo.divide %7754, %9016 : tensor<3072xf32>
    %9018 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9019 = stablehlo.add %8163, %9018 : tensor<768x3072xf32>
    %9020 = stablehlo.sqrt %9019 : tensor<768x3072xf32>
    %9021 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9022 = stablehlo.add %9020, %9021 : tensor<768x3072xf32>
    %9023 = stablehlo.divide %7756, %9022 : tensor<768x3072xf32>
    %9024 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9025 = stablehlo.add %8165, %9024 : tensor<768xf32>
    %9026 = stablehlo.sqrt %9025 : tensor<768xf32>
    %9027 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9028 = stablehlo.add %9026, %9027 : tensor<768xf32>
    %9029 = stablehlo.divide %7758, %9028 : tensor<768xf32>
    %9030 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9031 = stablehlo.add %8167, %9030 : tensor<768xf32>
    %9032 = stablehlo.sqrt %9031 : tensor<768xf32>
    %9033 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9034 = stablehlo.add %9032, %9033 : tensor<768xf32>
    %9035 = stablehlo.divide %7760, %9034 : tensor<768xf32>
    %9036 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9037 = stablehlo.add %8169, %9036 : tensor<768xf32>
    %9038 = stablehlo.sqrt %9037 : tensor<768xf32>
    %9039 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9040 = stablehlo.add %9038, %9039 : tensor<768xf32>
    %9041 = stablehlo.divide %7762, %9040 : tensor<768xf32>
    %9042 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9043 = stablehlo.add %8171, %9042 : tensor<768x768xf32>
    %9044 = stablehlo.sqrt %9043 : tensor<768x768xf32>
    %9045 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9046 = stablehlo.add %9044, %9045 : tensor<768x768xf32>
    %9047 = stablehlo.divide %7764, %9046 : tensor<768x768xf32>
    %9048 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9049 = stablehlo.add %8173, %9048 : tensor<768xf32>
    %9050 = stablehlo.sqrt %9049 : tensor<768xf32>
    %9051 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9052 = stablehlo.add %9050, %9051 : tensor<768xf32>
    %9053 = stablehlo.divide %7766, %9052 : tensor<768xf32>
    %9054 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9055 = stablehlo.add %8175, %9054 : tensor<768x768xf32>
    %9056 = stablehlo.sqrt %9055 : tensor<768x768xf32>
    %9057 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9058 = stablehlo.add %9056, %9057 : tensor<768x768xf32>
    %9059 = stablehlo.divide %7768, %9058 : tensor<768x768xf32>
    %9060 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9061 = stablehlo.add %8177, %9060 : tensor<768xf32>
    %9062 = stablehlo.sqrt %9061 : tensor<768xf32>
    %9063 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9064 = stablehlo.add %9062, %9063 : tensor<768xf32>
    %9065 = stablehlo.divide %7770, %9064 : tensor<768xf32>
    %9066 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9067 = stablehlo.add %8179, %9066 : tensor<768x768xf32>
    %9068 = stablehlo.sqrt %9067 : tensor<768x768xf32>
    %9069 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9070 = stablehlo.add %9068, %9069 : tensor<768x768xf32>
    %9071 = stablehlo.divide %7772, %9070 : tensor<768x768xf32>
    %9072 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9073 = stablehlo.add %8181, %9072 : tensor<768xf32>
    %9074 = stablehlo.sqrt %9073 : tensor<768xf32>
    %9075 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9076 = stablehlo.add %9074, %9075 : tensor<768xf32>
    %9077 = stablehlo.divide %7774, %9076 : tensor<768xf32>
    %9078 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9079 = stablehlo.add %8183, %9078 : tensor<768x768xf32>
    %9080 = stablehlo.sqrt %9079 : tensor<768x768xf32>
    %9081 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9082 = stablehlo.add %9080, %9081 : tensor<768x768xf32>
    %9083 = stablehlo.divide %7776, %9082 : tensor<768x768xf32>
    %9084 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9085 = stablehlo.add %8185, %9084 : tensor<768xf32>
    %9086 = stablehlo.sqrt %9085 : tensor<768xf32>
    %9087 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9088 = stablehlo.add %9086, %9087 : tensor<768xf32>
    %9089 = stablehlo.divide %7778, %9088 : tensor<768xf32>
    %9090 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9091 = stablehlo.add %8187, %9090 : tensor<768xf32>
    %9092 = stablehlo.sqrt %9091 : tensor<768xf32>
    %9093 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9094 = stablehlo.add %9092, %9093 : tensor<768xf32>
    %9095 = stablehlo.divide %7780, %9094 : tensor<768xf32>
    %9096 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9097 = stablehlo.add %8189, %9096 : tensor<768xf32>
    %9098 = stablehlo.sqrt %9097 : tensor<768xf32>
    %9099 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9100 = stablehlo.add %9098, %9099 : tensor<768xf32>
    %9101 = stablehlo.divide %7782, %9100 : tensor<768xf32>
    %9102 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9103 = stablehlo.add %8191, %9102 : tensor<3072x768xf32>
    %9104 = stablehlo.sqrt %9103 : tensor<3072x768xf32>
    %9105 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9106 = stablehlo.add %9104, %9105 : tensor<3072x768xf32>
    %9107 = stablehlo.divide %7784, %9106 : tensor<3072x768xf32>
    %9108 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9109 = stablehlo.add %8193, %9108 : tensor<3072xf32>
    %9110 = stablehlo.sqrt %9109 : tensor<3072xf32>
    %9111 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9112 = stablehlo.add %9110, %9111 : tensor<3072xf32>
    %9113 = stablehlo.divide %7786, %9112 : tensor<3072xf32>
    %9114 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9115 = stablehlo.add %8195, %9114 : tensor<768x3072xf32>
    %9116 = stablehlo.sqrt %9115 : tensor<768x3072xf32>
    %9117 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9118 = stablehlo.add %9116, %9117 : tensor<768x3072xf32>
    %9119 = stablehlo.divide %7788, %9118 : tensor<768x3072xf32>
    %9120 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9121 = stablehlo.add %8197, %9120 : tensor<768xf32>
    %9122 = stablehlo.sqrt %9121 : tensor<768xf32>
    %9123 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9124 = stablehlo.add %9122, %9123 : tensor<768xf32>
    %9125 = stablehlo.divide %7790, %9124 : tensor<768xf32>
    %9126 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9127 = stablehlo.add %8199, %9126 : tensor<768xf32>
    %9128 = stablehlo.sqrt %9127 : tensor<768xf32>
    %9129 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9130 = stablehlo.add %9128, %9129 : tensor<768xf32>
    %9131 = stablehlo.divide %7792, %9130 : tensor<768xf32>
    %9132 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9133 = stablehlo.add %8201, %9132 : tensor<768xf32>
    %9134 = stablehlo.sqrt %9133 : tensor<768xf32>
    %9135 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9136 = stablehlo.add %9134, %9135 : tensor<768xf32>
    %9137 = stablehlo.divide %7794, %9136 : tensor<768xf32>
    %9138 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9139 = stablehlo.add %8203, %9138 : tensor<768x768xf32>
    %9140 = stablehlo.sqrt %9139 : tensor<768x768xf32>
    %9141 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9142 = stablehlo.add %9140, %9141 : tensor<768x768xf32>
    %9143 = stablehlo.divide %7796, %9142 : tensor<768x768xf32>
    %9144 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9145 = stablehlo.add %8205, %9144 : tensor<768xf32>
    %9146 = stablehlo.sqrt %9145 : tensor<768xf32>
    %9147 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9148 = stablehlo.add %9146, %9147 : tensor<768xf32>
    %9149 = stablehlo.divide %7798, %9148 : tensor<768xf32>
    %9150 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9151 = stablehlo.add %8207, %9150 : tensor<768x768xf32>
    %9152 = stablehlo.sqrt %9151 : tensor<768x768xf32>
    %9153 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9154 = stablehlo.add %9152, %9153 : tensor<768x768xf32>
    %9155 = stablehlo.divide %7800, %9154 : tensor<768x768xf32>
    %9156 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9157 = stablehlo.add %8209, %9156 : tensor<768xf32>
    %9158 = stablehlo.sqrt %9157 : tensor<768xf32>
    %9159 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9160 = stablehlo.add %9158, %9159 : tensor<768xf32>
    %9161 = stablehlo.divide %7802, %9160 : tensor<768xf32>
    %9162 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9163 = stablehlo.add %8211, %9162 : tensor<768x768xf32>
    %9164 = stablehlo.sqrt %9163 : tensor<768x768xf32>
    %9165 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9166 = stablehlo.add %9164, %9165 : tensor<768x768xf32>
    %9167 = stablehlo.divide %7804, %9166 : tensor<768x768xf32>
    %9168 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9169 = stablehlo.add %8213, %9168 : tensor<768xf32>
    %9170 = stablehlo.sqrt %9169 : tensor<768xf32>
    %9171 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9172 = stablehlo.add %9170, %9171 : tensor<768xf32>
    %9173 = stablehlo.divide %7806, %9172 : tensor<768xf32>
    %9174 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9175 = stablehlo.add %8215, %9174 : tensor<768x768xf32>
    %9176 = stablehlo.sqrt %9175 : tensor<768x768xf32>
    %9177 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9178 = stablehlo.add %9176, %9177 : tensor<768x768xf32>
    %9179 = stablehlo.divide %7808, %9178 : tensor<768x768xf32>
    %9180 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9181 = stablehlo.add %8217, %9180 : tensor<768xf32>
    %9182 = stablehlo.sqrt %9181 : tensor<768xf32>
    %9183 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9184 = stablehlo.add %9182, %9183 : tensor<768xf32>
    %9185 = stablehlo.divide %7810, %9184 : tensor<768xf32>
    %9186 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9187 = stablehlo.add %8219, %9186 : tensor<768xf32>
    %9188 = stablehlo.sqrt %9187 : tensor<768xf32>
    %9189 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9190 = stablehlo.add %9188, %9189 : tensor<768xf32>
    %9191 = stablehlo.divide %7812, %9190 : tensor<768xf32>
    %9192 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9193 = stablehlo.add %8221, %9192 : tensor<768xf32>
    %9194 = stablehlo.sqrt %9193 : tensor<768xf32>
    %9195 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9196 = stablehlo.add %9194, %9195 : tensor<768xf32>
    %9197 = stablehlo.divide %7814, %9196 : tensor<768xf32>
    %9198 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9199 = stablehlo.add %8223, %9198 : tensor<3072x768xf32>
    %9200 = stablehlo.sqrt %9199 : tensor<3072x768xf32>
    %9201 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9202 = stablehlo.add %9200, %9201 : tensor<3072x768xf32>
    %9203 = stablehlo.divide %7816, %9202 : tensor<3072x768xf32>
    %9204 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9205 = stablehlo.add %8225, %9204 : tensor<3072xf32>
    %9206 = stablehlo.sqrt %9205 : tensor<3072xf32>
    %9207 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9208 = stablehlo.add %9206, %9207 : tensor<3072xf32>
    %9209 = stablehlo.divide %7818, %9208 : tensor<3072xf32>
    %9210 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9211 = stablehlo.add %8227, %9210 : tensor<768x3072xf32>
    %9212 = stablehlo.sqrt %9211 : tensor<768x3072xf32>
    %9213 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9214 = stablehlo.add %9212, %9213 : tensor<768x3072xf32>
    %9215 = stablehlo.divide %7820, %9214 : tensor<768x3072xf32>
    %9216 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9217 = stablehlo.add %8229, %9216 : tensor<768xf32>
    %9218 = stablehlo.sqrt %9217 : tensor<768xf32>
    %9219 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9220 = stablehlo.add %9218, %9219 : tensor<768xf32>
    %9221 = stablehlo.divide %7822, %9220 : tensor<768xf32>
    %9222 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9223 = stablehlo.add %8231, %9222 : tensor<768xf32>
    %9224 = stablehlo.sqrt %9223 : tensor<768xf32>
    %9225 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9226 = stablehlo.add %9224, %9225 : tensor<768xf32>
    %9227 = stablehlo.divide %7824, %9226 : tensor<768xf32>
    %9228 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9229 = stablehlo.add %8233, %9228 : tensor<768xf32>
    %9230 = stablehlo.sqrt %9229 : tensor<768xf32>
    %9231 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9232 = stablehlo.add %9230, %9231 : tensor<768xf32>
    %9233 = stablehlo.divide %7826, %9232 : tensor<768xf32>
    %9234 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9235 = stablehlo.add %8235, %9234 : tensor<768x768xf32>
    %9236 = stablehlo.sqrt %9235 : tensor<768x768xf32>
    %9237 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9238 = stablehlo.add %9236, %9237 : tensor<768x768xf32>
    %9239 = stablehlo.divide %7828, %9238 : tensor<768x768xf32>
    %9240 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9241 = stablehlo.add %8237, %9240 : tensor<768xf32>
    %9242 = stablehlo.sqrt %9241 : tensor<768xf32>
    %9243 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9244 = stablehlo.add %9242, %9243 : tensor<768xf32>
    %9245 = stablehlo.divide %7830, %9244 : tensor<768xf32>
    %9246 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9247 = stablehlo.add %8239, %9246 : tensor<768x768xf32>
    %9248 = stablehlo.sqrt %9247 : tensor<768x768xf32>
    %9249 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9250 = stablehlo.add %9248, %9249 : tensor<768x768xf32>
    %9251 = stablehlo.divide %7832, %9250 : tensor<768x768xf32>
    %9252 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9253 = stablehlo.add %8241, %9252 : tensor<768xf32>
    %9254 = stablehlo.sqrt %9253 : tensor<768xf32>
    %9255 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9256 = stablehlo.add %9254, %9255 : tensor<768xf32>
    %9257 = stablehlo.divide %7834, %9256 : tensor<768xf32>
    %9258 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9259 = stablehlo.add %8243, %9258 : tensor<768x768xf32>
    %9260 = stablehlo.sqrt %9259 : tensor<768x768xf32>
    %9261 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9262 = stablehlo.add %9260, %9261 : tensor<768x768xf32>
    %9263 = stablehlo.divide %7836, %9262 : tensor<768x768xf32>
    %9264 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9265 = stablehlo.add %8245, %9264 : tensor<768xf32>
    %9266 = stablehlo.sqrt %9265 : tensor<768xf32>
    %9267 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9268 = stablehlo.add %9266, %9267 : tensor<768xf32>
    %9269 = stablehlo.divide %7838, %9268 : tensor<768xf32>
    %9270 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9271 = stablehlo.add %8247, %9270 : tensor<768x768xf32>
    %9272 = stablehlo.sqrt %9271 : tensor<768x768xf32>
    %9273 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9274 = stablehlo.add %9272, %9273 : tensor<768x768xf32>
    %9275 = stablehlo.divide %7840, %9274 : tensor<768x768xf32>
    %9276 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9277 = stablehlo.add %8249, %9276 : tensor<768xf32>
    %9278 = stablehlo.sqrt %9277 : tensor<768xf32>
    %9279 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9280 = stablehlo.add %9278, %9279 : tensor<768xf32>
    %9281 = stablehlo.divide %7842, %9280 : tensor<768xf32>
    %9282 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9283 = stablehlo.add %8251, %9282 : tensor<768xf32>
    %9284 = stablehlo.sqrt %9283 : tensor<768xf32>
    %9285 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9286 = stablehlo.add %9284, %9285 : tensor<768xf32>
    %9287 = stablehlo.divide %7844, %9286 : tensor<768xf32>
    %9288 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9289 = stablehlo.add %8253, %9288 : tensor<768xf32>
    %9290 = stablehlo.sqrt %9289 : tensor<768xf32>
    %9291 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9292 = stablehlo.add %9290, %9291 : tensor<768xf32>
    %9293 = stablehlo.divide %7846, %9292 : tensor<768xf32>
    %9294 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9295 = stablehlo.add %8255, %9294 : tensor<3072x768xf32>
    %9296 = stablehlo.sqrt %9295 : tensor<3072x768xf32>
    %9297 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9298 = stablehlo.add %9296, %9297 : tensor<3072x768xf32>
    %9299 = stablehlo.divide %7848, %9298 : tensor<3072x768xf32>
    %9300 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9301 = stablehlo.add %8257, %9300 : tensor<3072xf32>
    %9302 = stablehlo.sqrt %9301 : tensor<3072xf32>
    %9303 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9304 = stablehlo.add %9302, %9303 : tensor<3072xf32>
    %9305 = stablehlo.divide %7850, %9304 : tensor<3072xf32>
    %9306 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9307 = stablehlo.add %8259, %9306 : tensor<768x3072xf32>
    %9308 = stablehlo.sqrt %9307 : tensor<768x3072xf32>
    %9309 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9310 = stablehlo.add %9308, %9309 : tensor<768x3072xf32>
    %9311 = stablehlo.divide %7852, %9310 : tensor<768x3072xf32>
    %9312 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9313 = stablehlo.add %8261, %9312 : tensor<768xf32>
    %9314 = stablehlo.sqrt %9313 : tensor<768xf32>
    %9315 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9316 = stablehlo.add %9314, %9315 : tensor<768xf32>
    %9317 = stablehlo.divide %7854, %9316 : tensor<768xf32>
    %9318 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9319 = stablehlo.add %8263, %9318 : tensor<768xf32>
    %9320 = stablehlo.sqrt %9319 : tensor<768xf32>
    %9321 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9322 = stablehlo.add %9320, %9321 : tensor<768xf32>
    %9323 = stablehlo.divide %7856, %9322 : tensor<768xf32>
    %9324 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9325 = stablehlo.add %8265, %9324 : tensor<768xf32>
    %9326 = stablehlo.sqrt %9325 : tensor<768xf32>
    %9327 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9328 = stablehlo.add %9326, %9327 : tensor<768xf32>
    %9329 = stablehlo.divide %7858, %9328 : tensor<768xf32>
    %9330 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9331 = stablehlo.add %8267, %9330 : tensor<768x768xf32>
    %9332 = stablehlo.sqrt %9331 : tensor<768x768xf32>
    %9333 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9334 = stablehlo.add %9332, %9333 : tensor<768x768xf32>
    %9335 = stablehlo.divide %7860, %9334 : tensor<768x768xf32>
    %9336 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9337 = stablehlo.add %8269, %9336 : tensor<768xf32>
    %9338 = stablehlo.sqrt %9337 : tensor<768xf32>
    %9339 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9340 = stablehlo.add %9338, %9339 : tensor<768xf32>
    %9341 = stablehlo.divide %7862, %9340 : tensor<768xf32>
    %9342 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9343 = stablehlo.add %8271, %9342 : tensor<768x768xf32>
    %9344 = stablehlo.sqrt %9343 : tensor<768x768xf32>
    %9345 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9346 = stablehlo.add %9344, %9345 : tensor<768x768xf32>
    %9347 = stablehlo.divide %7864, %9346 : tensor<768x768xf32>
    %9348 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9349 = stablehlo.add %8273, %9348 : tensor<768xf32>
    %9350 = stablehlo.sqrt %9349 : tensor<768xf32>
    %9351 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9352 = stablehlo.add %9350, %9351 : tensor<768xf32>
    %9353 = stablehlo.divide %7866, %9352 : tensor<768xf32>
    %9354 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9355 = stablehlo.add %8275, %9354 : tensor<768x768xf32>
    %9356 = stablehlo.sqrt %9355 : tensor<768x768xf32>
    %9357 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9358 = stablehlo.add %9356, %9357 : tensor<768x768xf32>
    %9359 = stablehlo.divide %7868, %9358 : tensor<768x768xf32>
    %9360 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9361 = stablehlo.add %8277, %9360 : tensor<768xf32>
    %9362 = stablehlo.sqrt %9361 : tensor<768xf32>
    %9363 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9364 = stablehlo.add %9362, %9363 : tensor<768xf32>
    %9365 = stablehlo.divide %7870, %9364 : tensor<768xf32>
    %9366 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9367 = stablehlo.add %8279, %9366 : tensor<768x768xf32>
    %9368 = stablehlo.sqrt %9367 : tensor<768x768xf32>
    %9369 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9370 = stablehlo.add %9368, %9369 : tensor<768x768xf32>
    %9371 = stablehlo.divide %7872, %9370 : tensor<768x768xf32>
    %9372 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9373 = stablehlo.add %8281, %9372 : tensor<768xf32>
    %9374 = stablehlo.sqrt %9373 : tensor<768xf32>
    %9375 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9376 = stablehlo.add %9374, %9375 : tensor<768xf32>
    %9377 = stablehlo.divide %7874, %9376 : tensor<768xf32>
    %9378 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9379 = stablehlo.add %8283, %9378 : tensor<768xf32>
    %9380 = stablehlo.sqrt %9379 : tensor<768xf32>
    %9381 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9382 = stablehlo.add %9380, %9381 : tensor<768xf32>
    %9383 = stablehlo.divide %7876, %9382 : tensor<768xf32>
    %9384 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9385 = stablehlo.add %8285, %9384 : tensor<768xf32>
    %9386 = stablehlo.sqrt %9385 : tensor<768xf32>
    %9387 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9388 = stablehlo.add %9386, %9387 : tensor<768xf32>
    %9389 = stablehlo.divide %7878, %9388 : tensor<768xf32>
    %9390 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9391 = stablehlo.add %8287, %9390 : tensor<3072x768xf32>
    %9392 = stablehlo.sqrt %9391 : tensor<3072x768xf32>
    %9393 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9394 = stablehlo.add %9392, %9393 : tensor<3072x768xf32>
    %9395 = stablehlo.divide %7880, %9394 : tensor<3072x768xf32>
    %9396 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9397 = stablehlo.add %8289, %9396 : tensor<3072xf32>
    %9398 = stablehlo.sqrt %9397 : tensor<3072xf32>
    %9399 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9400 = stablehlo.add %9398, %9399 : tensor<3072xf32>
    %9401 = stablehlo.divide %7882, %9400 : tensor<3072xf32>
    %9402 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9403 = stablehlo.add %8291, %9402 : tensor<768x3072xf32>
    %9404 = stablehlo.sqrt %9403 : tensor<768x3072xf32>
    %9405 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9406 = stablehlo.add %9404, %9405 : tensor<768x3072xf32>
    %9407 = stablehlo.divide %7884, %9406 : tensor<768x3072xf32>
    %9408 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9409 = stablehlo.add %8293, %9408 : tensor<768xf32>
    %9410 = stablehlo.sqrt %9409 : tensor<768xf32>
    %9411 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9412 = stablehlo.add %9410, %9411 : tensor<768xf32>
    %9413 = stablehlo.divide %7886, %9412 : tensor<768xf32>
    %9414 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9415 = stablehlo.add %8295, %9414 : tensor<768xf32>
    %9416 = stablehlo.sqrt %9415 : tensor<768xf32>
    %9417 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9418 = stablehlo.add %9416, %9417 : tensor<768xf32>
    %9419 = stablehlo.divide %7888, %9418 : tensor<768xf32>
    %9420 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9421 = stablehlo.add %8297, %9420 : tensor<768xf32>
    %9422 = stablehlo.sqrt %9421 : tensor<768xf32>
    %9423 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9424 = stablehlo.add %9422, %9423 : tensor<768xf32>
    %9425 = stablehlo.divide %7890, %9424 : tensor<768xf32>
    %9426 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9427 = stablehlo.add %8299, %9426 : tensor<768x768xf32>
    %9428 = stablehlo.sqrt %9427 : tensor<768x768xf32>
    %9429 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9430 = stablehlo.add %9428, %9429 : tensor<768x768xf32>
    %9431 = stablehlo.divide %7892, %9430 : tensor<768x768xf32>
    %9432 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9433 = stablehlo.add %8301, %9432 : tensor<768xf32>
    %9434 = stablehlo.sqrt %9433 : tensor<768xf32>
    %9435 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9436 = stablehlo.add %9434, %9435 : tensor<768xf32>
    %9437 = stablehlo.divide %7894, %9436 : tensor<768xf32>
    %9438 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9439 = stablehlo.add %8303, %9438 : tensor<768x768xf32>
    %9440 = stablehlo.sqrt %9439 : tensor<768x768xf32>
    %9441 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9442 = stablehlo.add %9440, %9441 : tensor<768x768xf32>
    %9443 = stablehlo.divide %7896, %9442 : tensor<768x768xf32>
    %9444 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9445 = stablehlo.add %8305, %9444 : tensor<768xf32>
    %9446 = stablehlo.sqrt %9445 : tensor<768xf32>
    %9447 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9448 = stablehlo.add %9446, %9447 : tensor<768xf32>
    %9449 = stablehlo.divide %7898, %9448 : tensor<768xf32>
    %9450 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9451 = stablehlo.add %8307, %9450 : tensor<768x768xf32>
    %9452 = stablehlo.sqrt %9451 : tensor<768x768xf32>
    %9453 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9454 = stablehlo.add %9452, %9453 : tensor<768x768xf32>
    %9455 = stablehlo.divide %7900, %9454 : tensor<768x768xf32>
    %9456 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9457 = stablehlo.add %8309, %9456 : tensor<768xf32>
    %9458 = stablehlo.sqrt %9457 : tensor<768xf32>
    %9459 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9460 = stablehlo.add %9458, %9459 : tensor<768xf32>
    %9461 = stablehlo.divide %7902, %9460 : tensor<768xf32>
    %9462 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9463 = stablehlo.add %8311, %9462 : tensor<768x768xf32>
    %9464 = stablehlo.sqrt %9463 : tensor<768x768xf32>
    %9465 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9466 = stablehlo.add %9464, %9465 : tensor<768x768xf32>
    %9467 = stablehlo.divide %7904, %9466 : tensor<768x768xf32>
    %9468 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9469 = stablehlo.add %8313, %9468 : tensor<768xf32>
    %9470 = stablehlo.sqrt %9469 : tensor<768xf32>
    %9471 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9472 = stablehlo.add %9470, %9471 : tensor<768xf32>
    %9473 = stablehlo.divide %7906, %9472 : tensor<768xf32>
    %9474 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9475 = stablehlo.add %8315, %9474 : tensor<768xf32>
    %9476 = stablehlo.sqrt %9475 : tensor<768xf32>
    %9477 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9478 = stablehlo.add %9476, %9477 : tensor<768xf32>
    %9479 = stablehlo.divide %7908, %9478 : tensor<768xf32>
    %9480 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9481 = stablehlo.add %8317, %9480 : tensor<768xf32>
    %9482 = stablehlo.sqrt %9481 : tensor<768xf32>
    %9483 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9484 = stablehlo.add %9482, %9483 : tensor<768xf32>
    %9485 = stablehlo.divide %7910, %9484 : tensor<768xf32>
    %9486 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9487 = stablehlo.add %8319, %9486 : tensor<3072x768xf32>
    %9488 = stablehlo.sqrt %9487 : tensor<3072x768xf32>
    %9489 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9490 = stablehlo.add %9488, %9489 : tensor<3072x768xf32>
    %9491 = stablehlo.divide %7912, %9490 : tensor<3072x768xf32>
    %9492 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9493 = stablehlo.add %8321, %9492 : tensor<3072xf32>
    %9494 = stablehlo.sqrt %9493 : tensor<3072xf32>
    %9495 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9496 = stablehlo.add %9494, %9495 : tensor<3072xf32>
    %9497 = stablehlo.divide %7914, %9496 : tensor<3072xf32>
    %9498 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9499 = stablehlo.add %8323, %9498 : tensor<768x3072xf32>
    %9500 = stablehlo.sqrt %9499 : tensor<768x3072xf32>
    %9501 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9502 = stablehlo.add %9500, %9501 : tensor<768x3072xf32>
    %9503 = stablehlo.divide %7916, %9502 : tensor<768x3072xf32>
    %9504 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9505 = stablehlo.add %8325, %9504 : tensor<768xf32>
    %9506 = stablehlo.sqrt %9505 : tensor<768xf32>
    %9507 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9508 = stablehlo.add %9506, %9507 : tensor<768xf32>
    %9509 = stablehlo.divide %7918, %9508 : tensor<768xf32>
    %9510 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9511 = stablehlo.add %8327, %9510 : tensor<768xf32>
    %9512 = stablehlo.sqrt %9511 : tensor<768xf32>
    %9513 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9514 = stablehlo.add %9512, %9513 : tensor<768xf32>
    %9515 = stablehlo.divide %7920, %9514 : tensor<768xf32>
    %9516 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9517 = stablehlo.add %8329, %9516 : tensor<768xf32>
    %9518 = stablehlo.sqrt %9517 : tensor<768xf32>
    %9519 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9520 = stablehlo.add %9518, %9519 : tensor<768xf32>
    %9521 = stablehlo.divide %7922, %9520 : tensor<768xf32>
    %9522 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9523 = stablehlo.add %8331, %9522 : tensor<768x768xf32>
    %9524 = stablehlo.sqrt %9523 : tensor<768x768xf32>
    %9525 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9526 = stablehlo.add %9524, %9525 : tensor<768x768xf32>
    %9527 = stablehlo.divide %7924, %9526 : tensor<768x768xf32>
    %9528 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9529 = stablehlo.add %8333, %9528 : tensor<768xf32>
    %9530 = stablehlo.sqrt %9529 : tensor<768xf32>
    %9531 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9532 = stablehlo.add %9530, %9531 : tensor<768xf32>
    %9533 = stablehlo.divide %7926, %9532 : tensor<768xf32>
    %9534 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9535 = stablehlo.add %8335, %9534 : tensor<768xf32>
    %9536 = stablehlo.sqrt %9535 : tensor<768xf32>
    %9537 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9538 = stablehlo.add %9536, %9537 : tensor<768xf32>
    %9539 = stablehlo.divide %7928, %9538 : tensor<768xf32>
    %9540 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9541 = stablehlo.add %8337, %9540 : tensor<768xf32>
    %9542 = stablehlo.sqrt %9541 : tensor<768xf32>
    %9543 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9544 = stablehlo.add %9542, %9543 : tensor<768xf32>
    %9545 = stablehlo.divide %7930, %9544 : tensor<768xf32>
    %9546 = stablehlo.broadcast_in_dim %cst_5, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %9547 = stablehlo.add %8339, %9546 : tensor<30522xf32>
    %9548 = stablehlo.sqrt %9547 : tensor<30522xf32>
    %9549 = stablehlo.broadcast_in_dim %cst_651, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %9550 = stablehlo.add %9548, %9549 : tensor<30522xf32>
    %9551 = stablehlo.divide %7932, %9550 : tensor<30522xf32>
    %cst_652 = stablehlo.constant dense<0.00999999977> : tensor<f32>
    %9552 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %9553 = stablehlo.multiply %9552, %arg0 : tensor<30522x768xf32>
    %9554 = stablehlo.add %8345, %9553 : tensor<30522x768xf32>
    %9555 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %9556 = stablehlo.multiply %9555, %arg1 : tensor<512x768xf32>
    %9557 = stablehlo.add %8351, %9556 : tensor<512x768xf32>
    %9558 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %9559 = stablehlo.multiply %9558, %arg2 : tensor<2x768xf32>
    %9560 = stablehlo.add %8357, %9559 : tensor<2x768xf32>
    %9561 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9562 = stablehlo.multiply %9561, %arg3 : tensor<768xf32>
    %9563 = stablehlo.add %8363, %9562 : tensor<768xf32>
    %9564 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9565 = stablehlo.multiply %9564, %arg4 : tensor<768xf32>
    %9566 = stablehlo.add %8369, %9565 : tensor<768xf32>
    %9567 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9568 = stablehlo.multiply %9567, %arg5 : tensor<768x768xf32>
    %9569 = stablehlo.add %8375, %9568 : tensor<768x768xf32>
    %9570 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9571 = stablehlo.multiply %9570, %arg6 : tensor<768xf32>
    %9572 = stablehlo.add %8381, %9571 : tensor<768xf32>
    %9573 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9574 = stablehlo.multiply %9573, %arg7 : tensor<768x768xf32>
    %9575 = stablehlo.add %8387, %9574 : tensor<768x768xf32>
    %9576 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9577 = stablehlo.multiply %9576, %arg8 : tensor<768xf32>
    %9578 = stablehlo.add %8393, %9577 : tensor<768xf32>
    %9579 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9580 = stablehlo.multiply %9579, %arg9 : tensor<768x768xf32>
    %9581 = stablehlo.add %8399, %9580 : tensor<768x768xf32>
    %9582 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9583 = stablehlo.multiply %9582, %arg10 : tensor<768xf32>
    %9584 = stablehlo.add %8405, %9583 : tensor<768xf32>
    %9585 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9586 = stablehlo.multiply %9585, %arg11 : tensor<768x768xf32>
    %9587 = stablehlo.add %8411, %9586 : tensor<768x768xf32>
    %9588 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9589 = stablehlo.multiply %9588, %arg12 : tensor<768xf32>
    %9590 = stablehlo.add %8417, %9589 : tensor<768xf32>
    %9591 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9592 = stablehlo.multiply %9591, %arg13 : tensor<768xf32>
    %9593 = stablehlo.add %8423, %9592 : tensor<768xf32>
    %9594 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9595 = stablehlo.multiply %9594, %arg14 : tensor<768xf32>
    %9596 = stablehlo.add %8429, %9595 : tensor<768xf32>
    %9597 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9598 = stablehlo.multiply %9597, %arg15 : tensor<3072x768xf32>
    %9599 = stablehlo.add %8435, %9598 : tensor<3072x768xf32>
    %9600 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9601 = stablehlo.multiply %9600, %arg16 : tensor<3072xf32>
    %9602 = stablehlo.add %8441, %9601 : tensor<3072xf32>
    %9603 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9604 = stablehlo.multiply %9603, %arg17 : tensor<768x3072xf32>
    %9605 = stablehlo.add %8447, %9604 : tensor<768x3072xf32>
    %9606 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9607 = stablehlo.multiply %9606, %arg18 : tensor<768xf32>
    %9608 = stablehlo.add %8453, %9607 : tensor<768xf32>
    %9609 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9610 = stablehlo.multiply %9609, %arg19 : tensor<768xf32>
    %9611 = stablehlo.add %8459, %9610 : tensor<768xf32>
    %9612 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9613 = stablehlo.multiply %9612, %arg20 : tensor<768xf32>
    %9614 = stablehlo.add %8465, %9613 : tensor<768xf32>
    %9615 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9616 = stablehlo.multiply %9615, %arg21 : tensor<768x768xf32>
    %9617 = stablehlo.add %8471, %9616 : tensor<768x768xf32>
    %9618 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9619 = stablehlo.multiply %9618, %arg22 : tensor<768xf32>
    %9620 = stablehlo.add %8477, %9619 : tensor<768xf32>
    %9621 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9622 = stablehlo.multiply %9621, %arg23 : tensor<768x768xf32>
    %9623 = stablehlo.add %8483, %9622 : tensor<768x768xf32>
    %9624 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9625 = stablehlo.multiply %9624, %arg24 : tensor<768xf32>
    %9626 = stablehlo.add %8489, %9625 : tensor<768xf32>
    %9627 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9628 = stablehlo.multiply %9627, %arg25 : tensor<768x768xf32>
    %9629 = stablehlo.add %8495, %9628 : tensor<768x768xf32>
    %9630 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9631 = stablehlo.multiply %9630, %arg26 : tensor<768xf32>
    %9632 = stablehlo.add %8501, %9631 : tensor<768xf32>
    %9633 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9634 = stablehlo.multiply %9633, %arg27 : tensor<768x768xf32>
    %9635 = stablehlo.add %8507, %9634 : tensor<768x768xf32>
    %9636 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9637 = stablehlo.multiply %9636, %arg28 : tensor<768xf32>
    %9638 = stablehlo.add %8513, %9637 : tensor<768xf32>
    %9639 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9640 = stablehlo.multiply %9639, %arg29 : tensor<768xf32>
    %9641 = stablehlo.add %8519, %9640 : tensor<768xf32>
    %9642 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9643 = stablehlo.multiply %9642, %arg30 : tensor<768xf32>
    %9644 = stablehlo.add %8525, %9643 : tensor<768xf32>
    %9645 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9646 = stablehlo.multiply %9645, %arg31 : tensor<3072x768xf32>
    %9647 = stablehlo.add %8531, %9646 : tensor<3072x768xf32>
    %9648 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9649 = stablehlo.multiply %9648, %arg32 : tensor<3072xf32>
    %9650 = stablehlo.add %8537, %9649 : tensor<3072xf32>
    %9651 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9652 = stablehlo.multiply %9651, %arg33 : tensor<768x3072xf32>
    %9653 = stablehlo.add %8543, %9652 : tensor<768x3072xf32>
    %9654 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9655 = stablehlo.multiply %9654, %arg34 : tensor<768xf32>
    %9656 = stablehlo.add %8549, %9655 : tensor<768xf32>
    %9657 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9658 = stablehlo.multiply %9657, %arg35 : tensor<768xf32>
    %9659 = stablehlo.add %8555, %9658 : tensor<768xf32>
    %9660 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9661 = stablehlo.multiply %9660, %arg36 : tensor<768xf32>
    %9662 = stablehlo.add %8561, %9661 : tensor<768xf32>
    %9663 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9664 = stablehlo.multiply %9663, %arg37 : tensor<768x768xf32>
    %9665 = stablehlo.add %8567, %9664 : tensor<768x768xf32>
    %9666 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9667 = stablehlo.multiply %9666, %arg38 : tensor<768xf32>
    %9668 = stablehlo.add %8573, %9667 : tensor<768xf32>
    %9669 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9670 = stablehlo.multiply %9669, %arg39 : tensor<768x768xf32>
    %9671 = stablehlo.add %8579, %9670 : tensor<768x768xf32>
    %9672 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9673 = stablehlo.multiply %9672, %arg40 : tensor<768xf32>
    %9674 = stablehlo.add %8585, %9673 : tensor<768xf32>
    %9675 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9676 = stablehlo.multiply %9675, %arg41 : tensor<768x768xf32>
    %9677 = stablehlo.add %8591, %9676 : tensor<768x768xf32>
    %9678 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9679 = stablehlo.multiply %9678, %arg42 : tensor<768xf32>
    %9680 = stablehlo.add %8597, %9679 : tensor<768xf32>
    %9681 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9682 = stablehlo.multiply %9681, %arg43 : tensor<768x768xf32>
    %9683 = stablehlo.add %8603, %9682 : tensor<768x768xf32>
    %9684 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9685 = stablehlo.multiply %9684, %arg44 : tensor<768xf32>
    %9686 = stablehlo.add %8609, %9685 : tensor<768xf32>
    %9687 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9688 = stablehlo.multiply %9687, %arg45 : tensor<768xf32>
    %9689 = stablehlo.add %8615, %9688 : tensor<768xf32>
    %9690 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9691 = stablehlo.multiply %9690, %arg46 : tensor<768xf32>
    %9692 = stablehlo.add %8621, %9691 : tensor<768xf32>
    %9693 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9694 = stablehlo.multiply %9693, %arg47 : tensor<3072x768xf32>
    %9695 = stablehlo.add %8627, %9694 : tensor<3072x768xf32>
    %9696 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9697 = stablehlo.multiply %9696, %arg48 : tensor<3072xf32>
    %9698 = stablehlo.add %8633, %9697 : tensor<3072xf32>
    %9699 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9700 = stablehlo.multiply %9699, %arg49 : tensor<768x3072xf32>
    %9701 = stablehlo.add %8639, %9700 : tensor<768x3072xf32>
    %9702 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9703 = stablehlo.multiply %9702, %arg50 : tensor<768xf32>
    %9704 = stablehlo.add %8645, %9703 : tensor<768xf32>
    %9705 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9706 = stablehlo.multiply %9705, %arg51 : tensor<768xf32>
    %9707 = stablehlo.add %8651, %9706 : tensor<768xf32>
    %9708 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9709 = stablehlo.multiply %9708, %arg52 : tensor<768xf32>
    %9710 = stablehlo.add %8657, %9709 : tensor<768xf32>
    %9711 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9712 = stablehlo.multiply %9711, %arg53 : tensor<768x768xf32>
    %9713 = stablehlo.add %8663, %9712 : tensor<768x768xf32>
    %9714 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9715 = stablehlo.multiply %9714, %arg54 : tensor<768xf32>
    %9716 = stablehlo.add %8669, %9715 : tensor<768xf32>
    %9717 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9718 = stablehlo.multiply %9717, %arg55 : tensor<768x768xf32>
    %9719 = stablehlo.add %8675, %9718 : tensor<768x768xf32>
    %9720 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9721 = stablehlo.multiply %9720, %arg56 : tensor<768xf32>
    %9722 = stablehlo.add %8681, %9721 : tensor<768xf32>
    %9723 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9724 = stablehlo.multiply %9723, %arg57 : tensor<768x768xf32>
    %9725 = stablehlo.add %8687, %9724 : tensor<768x768xf32>
    %9726 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9727 = stablehlo.multiply %9726, %arg58 : tensor<768xf32>
    %9728 = stablehlo.add %8693, %9727 : tensor<768xf32>
    %9729 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9730 = stablehlo.multiply %9729, %arg59 : tensor<768x768xf32>
    %9731 = stablehlo.add %8699, %9730 : tensor<768x768xf32>
    %9732 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9733 = stablehlo.multiply %9732, %arg60 : tensor<768xf32>
    %9734 = stablehlo.add %8705, %9733 : tensor<768xf32>
    %9735 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9736 = stablehlo.multiply %9735, %arg61 : tensor<768xf32>
    %9737 = stablehlo.add %8711, %9736 : tensor<768xf32>
    %9738 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9739 = stablehlo.multiply %9738, %arg62 : tensor<768xf32>
    %9740 = stablehlo.add %8717, %9739 : tensor<768xf32>
    %9741 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9742 = stablehlo.multiply %9741, %arg63 : tensor<3072x768xf32>
    %9743 = stablehlo.add %8723, %9742 : tensor<3072x768xf32>
    %9744 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9745 = stablehlo.multiply %9744, %arg64 : tensor<3072xf32>
    %9746 = stablehlo.add %8729, %9745 : tensor<3072xf32>
    %9747 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9748 = stablehlo.multiply %9747, %arg65 : tensor<768x3072xf32>
    %9749 = stablehlo.add %8735, %9748 : tensor<768x3072xf32>
    %9750 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9751 = stablehlo.multiply %9750, %arg66 : tensor<768xf32>
    %9752 = stablehlo.add %8741, %9751 : tensor<768xf32>
    %9753 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9754 = stablehlo.multiply %9753, %arg67 : tensor<768xf32>
    %9755 = stablehlo.add %8747, %9754 : tensor<768xf32>
    %9756 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9757 = stablehlo.multiply %9756, %arg68 : tensor<768xf32>
    %9758 = stablehlo.add %8753, %9757 : tensor<768xf32>
    %9759 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9760 = stablehlo.multiply %9759, %arg69 : tensor<768x768xf32>
    %9761 = stablehlo.add %8759, %9760 : tensor<768x768xf32>
    %9762 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9763 = stablehlo.multiply %9762, %arg70 : tensor<768xf32>
    %9764 = stablehlo.add %8765, %9763 : tensor<768xf32>
    %9765 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9766 = stablehlo.multiply %9765, %arg71 : tensor<768x768xf32>
    %9767 = stablehlo.add %8771, %9766 : tensor<768x768xf32>
    %9768 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9769 = stablehlo.multiply %9768, %arg72 : tensor<768xf32>
    %9770 = stablehlo.add %8777, %9769 : tensor<768xf32>
    %9771 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9772 = stablehlo.multiply %9771, %arg73 : tensor<768x768xf32>
    %9773 = stablehlo.add %8783, %9772 : tensor<768x768xf32>
    %9774 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9775 = stablehlo.multiply %9774, %arg74 : tensor<768xf32>
    %9776 = stablehlo.add %8789, %9775 : tensor<768xf32>
    %9777 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9778 = stablehlo.multiply %9777, %arg75 : tensor<768x768xf32>
    %9779 = stablehlo.add %8795, %9778 : tensor<768x768xf32>
    %9780 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9781 = stablehlo.multiply %9780, %arg76 : tensor<768xf32>
    %9782 = stablehlo.add %8801, %9781 : tensor<768xf32>
    %9783 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9784 = stablehlo.multiply %9783, %arg77 : tensor<768xf32>
    %9785 = stablehlo.add %8807, %9784 : tensor<768xf32>
    %9786 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9787 = stablehlo.multiply %9786, %arg78 : tensor<768xf32>
    %9788 = stablehlo.add %8813, %9787 : tensor<768xf32>
    %9789 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9790 = stablehlo.multiply %9789, %arg79 : tensor<3072x768xf32>
    %9791 = stablehlo.add %8819, %9790 : tensor<3072x768xf32>
    %9792 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9793 = stablehlo.multiply %9792, %arg80 : tensor<3072xf32>
    %9794 = stablehlo.add %8825, %9793 : tensor<3072xf32>
    %9795 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9796 = stablehlo.multiply %9795, %arg81 : tensor<768x3072xf32>
    %9797 = stablehlo.add %8831, %9796 : tensor<768x3072xf32>
    %9798 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9799 = stablehlo.multiply %9798, %arg82 : tensor<768xf32>
    %9800 = stablehlo.add %8837, %9799 : tensor<768xf32>
    %9801 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9802 = stablehlo.multiply %9801, %arg83 : tensor<768xf32>
    %9803 = stablehlo.add %8843, %9802 : tensor<768xf32>
    %9804 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9805 = stablehlo.multiply %9804, %arg84 : tensor<768xf32>
    %9806 = stablehlo.add %8849, %9805 : tensor<768xf32>
    %9807 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9808 = stablehlo.multiply %9807, %arg85 : tensor<768x768xf32>
    %9809 = stablehlo.add %8855, %9808 : tensor<768x768xf32>
    %9810 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9811 = stablehlo.multiply %9810, %arg86 : tensor<768xf32>
    %9812 = stablehlo.add %8861, %9811 : tensor<768xf32>
    %9813 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9814 = stablehlo.multiply %9813, %arg87 : tensor<768x768xf32>
    %9815 = stablehlo.add %8867, %9814 : tensor<768x768xf32>
    %9816 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9817 = stablehlo.multiply %9816, %arg88 : tensor<768xf32>
    %9818 = stablehlo.add %8873, %9817 : tensor<768xf32>
    %9819 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9820 = stablehlo.multiply %9819, %arg89 : tensor<768x768xf32>
    %9821 = stablehlo.add %8879, %9820 : tensor<768x768xf32>
    %9822 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9823 = stablehlo.multiply %9822, %arg90 : tensor<768xf32>
    %9824 = stablehlo.add %8885, %9823 : tensor<768xf32>
    %9825 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9826 = stablehlo.multiply %9825, %arg91 : tensor<768x768xf32>
    %9827 = stablehlo.add %8891, %9826 : tensor<768x768xf32>
    %9828 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9829 = stablehlo.multiply %9828, %arg92 : tensor<768xf32>
    %9830 = stablehlo.add %8897, %9829 : tensor<768xf32>
    %9831 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9832 = stablehlo.multiply %9831, %arg93 : tensor<768xf32>
    %9833 = stablehlo.add %8903, %9832 : tensor<768xf32>
    %9834 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9835 = stablehlo.multiply %9834, %arg94 : tensor<768xf32>
    %9836 = stablehlo.add %8909, %9835 : tensor<768xf32>
    %9837 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9838 = stablehlo.multiply %9837, %arg95 : tensor<3072x768xf32>
    %9839 = stablehlo.add %8915, %9838 : tensor<3072x768xf32>
    %9840 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9841 = stablehlo.multiply %9840, %arg96 : tensor<3072xf32>
    %9842 = stablehlo.add %8921, %9841 : tensor<3072xf32>
    %9843 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9844 = stablehlo.multiply %9843, %arg97 : tensor<768x3072xf32>
    %9845 = stablehlo.add %8927, %9844 : tensor<768x3072xf32>
    %9846 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9847 = stablehlo.multiply %9846, %arg98 : tensor<768xf32>
    %9848 = stablehlo.add %8933, %9847 : tensor<768xf32>
    %9849 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9850 = stablehlo.multiply %9849, %arg99 : tensor<768xf32>
    %9851 = stablehlo.add %8939, %9850 : tensor<768xf32>
    %9852 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9853 = stablehlo.multiply %9852, %arg100 : tensor<768xf32>
    %9854 = stablehlo.add %8945, %9853 : tensor<768xf32>
    %9855 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9856 = stablehlo.multiply %9855, %arg101 : tensor<768x768xf32>
    %9857 = stablehlo.add %8951, %9856 : tensor<768x768xf32>
    %9858 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9859 = stablehlo.multiply %9858, %arg102 : tensor<768xf32>
    %9860 = stablehlo.add %8957, %9859 : tensor<768xf32>
    %9861 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9862 = stablehlo.multiply %9861, %arg103 : tensor<768x768xf32>
    %9863 = stablehlo.add %8963, %9862 : tensor<768x768xf32>
    %9864 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9865 = stablehlo.multiply %9864, %arg104 : tensor<768xf32>
    %9866 = stablehlo.add %8969, %9865 : tensor<768xf32>
    %9867 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9868 = stablehlo.multiply %9867, %arg105 : tensor<768x768xf32>
    %9869 = stablehlo.add %8975, %9868 : tensor<768x768xf32>
    %9870 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9871 = stablehlo.multiply %9870, %arg106 : tensor<768xf32>
    %9872 = stablehlo.add %8981, %9871 : tensor<768xf32>
    %9873 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9874 = stablehlo.multiply %9873, %arg107 : tensor<768x768xf32>
    %9875 = stablehlo.add %8987, %9874 : tensor<768x768xf32>
    %9876 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9877 = stablehlo.multiply %9876, %arg108 : tensor<768xf32>
    %9878 = stablehlo.add %8993, %9877 : tensor<768xf32>
    %9879 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9880 = stablehlo.multiply %9879, %arg109 : tensor<768xf32>
    %9881 = stablehlo.add %8999, %9880 : tensor<768xf32>
    %9882 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9883 = stablehlo.multiply %9882, %arg110 : tensor<768xf32>
    %9884 = stablehlo.add %9005, %9883 : tensor<768xf32>
    %9885 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9886 = stablehlo.multiply %9885, %arg111 : tensor<3072x768xf32>
    %9887 = stablehlo.add %9011, %9886 : tensor<3072x768xf32>
    %9888 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9889 = stablehlo.multiply %9888, %arg112 : tensor<3072xf32>
    %9890 = stablehlo.add %9017, %9889 : tensor<3072xf32>
    %9891 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9892 = stablehlo.multiply %9891, %arg113 : tensor<768x3072xf32>
    %9893 = stablehlo.add %9023, %9892 : tensor<768x3072xf32>
    %9894 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9895 = stablehlo.multiply %9894, %arg114 : tensor<768xf32>
    %9896 = stablehlo.add %9029, %9895 : tensor<768xf32>
    %9897 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9898 = stablehlo.multiply %9897, %arg115 : tensor<768xf32>
    %9899 = stablehlo.add %9035, %9898 : tensor<768xf32>
    %9900 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9901 = stablehlo.multiply %9900, %arg116 : tensor<768xf32>
    %9902 = stablehlo.add %9041, %9901 : tensor<768xf32>
    %9903 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9904 = stablehlo.multiply %9903, %arg117 : tensor<768x768xf32>
    %9905 = stablehlo.add %9047, %9904 : tensor<768x768xf32>
    %9906 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9907 = stablehlo.multiply %9906, %arg118 : tensor<768xf32>
    %9908 = stablehlo.add %9053, %9907 : tensor<768xf32>
    %9909 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9910 = stablehlo.multiply %9909, %arg119 : tensor<768x768xf32>
    %9911 = stablehlo.add %9059, %9910 : tensor<768x768xf32>
    %9912 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9913 = stablehlo.multiply %9912, %arg120 : tensor<768xf32>
    %9914 = stablehlo.add %9065, %9913 : tensor<768xf32>
    %9915 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9916 = stablehlo.multiply %9915, %arg121 : tensor<768x768xf32>
    %9917 = stablehlo.add %9071, %9916 : tensor<768x768xf32>
    %9918 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9919 = stablehlo.multiply %9918, %arg122 : tensor<768xf32>
    %9920 = stablehlo.add %9077, %9919 : tensor<768xf32>
    %9921 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9922 = stablehlo.multiply %9921, %arg123 : tensor<768x768xf32>
    %9923 = stablehlo.add %9083, %9922 : tensor<768x768xf32>
    %9924 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9925 = stablehlo.multiply %9924, %arg124 : tensor<768xf32>
    %9926 = stablehlo.add %9089, %9925 : tensor<768xf32>
    %9927 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9928 = stablehlo.multiply %9927, %arg125 : tensor<768xf32>
    %9929 = stablehlo.add %9095, %9928 : tensor<768xf32>
    %9930 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9931 = stablehlo.multiply %9930, %arg126 : tensor<768xf32>
    %9932 = stablehlo.add %9101, %9931 : tensor<768xf32>
    %9933 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9934 = stablehlo.multiply %9933, %arg127 : tensor<3072x768xf32>
    %9935 = stablehlo.add %9107, %9934 : tensor<3072x768xf32>
    %9936 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9937 = stablehlo.multiply %9936, %arg128 : tensor<3072xf32>
    %9938 = stablehlo.add %9113, %9937 : tensor<3072xf32>
    %9939 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9940 = stablehlo.multiply %9939, %arg129 : tensor<768x3072xf32>
    %9941 = stablehlo.add %9119, %9940 : tensor<768x3072xf32>
    %9942 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9943 = stablehlo.multiply %9942, %arg130 : tensor<768xf32>
    %9944 = stablehlo.add %9125, %9943 : tensor<768xf32>
    %9945 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9946 = stablehlo.multiply %9945, %arg131 : tensor<768xf32>
    %9947 = stablehlo.add %9131, %9946 : tensor<768xf32>
    %9948 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9949 = stablehlo.multiply %9948, %arg132 : tensor<768xf32>
    %9950 = stablehlo.add %9137, %9949 : tensor<768xf32>
    %9951 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9952 = stablehlo.multiply %9951, %arg133 : tensor<768x768xf32>
    %9953 = stablehlo.add %9143, %9952 : tensor<768x768xf32>
    %9954 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9955 = stablehlo.multiply %9954, %arg134 : tensor<768xf32>
    %9956 = stablehlo.add %9149, %9955 : tensor<768xf32>
    %9957 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9958 = stablehlo.multiply %9957, %arg135 : tensor<768x768xf32>
    %9959 = stablehlo.add %9155, %9958 : tensor<768x768xf32>
    %9960 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9961 = stablehlo.multiply %9960, %arg136 : tensor<768xf32>
    %9962 = stablehlo.add %9161, %9961 : tensor<768xf32>
    %9963 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9964 = stablehlo.multiply %9963, %arg137 : tensor<768x768xf32>
    %9965 = stablehlo.add %9167, %9964 : tensor<768x768xf32>
    %9966 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9967 = stablehlo.multiply %9966, %arg138 : tensor<768xf32>
    %9968 = stablehlo.add %9173, %9967 : tensor<768xf32>
    %9969 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %9970 = stablehlo.multiply %9969, %arg139 : tensor<768x768xf32>
    %9971 = stablehlo.add %9179, %9970 : tensor<768x768xf32>
    %9972 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9973 = stablehlo.multiply %9972, %arg140 : tensor<768xf32>
    %9974 = stablehlo.add %9185, %9973 : tensor<768xf32>
    %9975 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9976 = stablehlo.multiply %9975, %arg141 : tensor<768xf32>
    %9977 = stablehlo.add %9191, %9976 : tensor<768xf32>
    %9978 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9979 = stablehlo.multiply %9978, %arg142 : tensor<768xf32>
    %9980 = stablehlo.add %9197, %9979 : tensor<768xf32>
    %9981 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %9982 = stablehlo.multiply %9981, %arg143 : tensor<3072x768xf32>
    %9983 = stablehlo.add %9203, %9982 : tensor<3072x768xf32>
    %9984 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %9985 = stablehlo.multiply %9984, %arg144 : tensor<3072xf32>
    %9986 = stablehlo.add %9209, %9985 : tensor<3072xf32>
    %9987 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %9988 = stablehlo.multiply %9987, %arg145 : tensor<768x3072xf32>
    %9989 = stablehlo.add %9215, %9988 : tensor<768x3072xf32>
    %9990 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9991 = stablehlo.multiply %9990, %arg146 : tensor<768xf32>
    %9992 = stablehlo.add %9221, %9991 : tensor<768xf32>
    %9993 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9994 = stablehlo.multiply %9993, %arg147 : tensor<768xf32>
    %9995 = stablehlo.add %9227, %9994 : tensor<768xf32>
    %9996 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %9997 = stablehlo.multiply %9996, %arg148 : tensor<768xf32>
    %9998 = stablehlo.add %9233, %9997 : tensor<768xf32>
    %9999 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10000 = stablehlo.multiply %9999, %arg149 : tensor<768x768xf32>
    %10001 = stablehlo.add %9239, %10000 : tensor<768x768xf32>
    %10002 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10003 = stablehlo.multiply %10002, %arg150 : tensor<768xf32>
    %10004 = stablehlo.add %9245, %10003 : tensor<768xf32>
    %10005 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10006 = stablehlo.multiply %10005, %arg151 : tensor<768x768xf32>
    %10007 = stablehlo.add %9251, %10006 : tensor<768x768xf32>
    %10008 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10009 = stablehlo.multiply %10008, %arg152 : tensor<768xf32>
    %10010 = stablehlo.add %9257, %10009 : tensor<768xf32>
    %10011 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10012 = stablehlo.multiply %10011, %arg153 : tensor<768x768xf32>
    %10013 = stablehlo.add %9263, %10012 : tensor<768x768xf32>
    %10014 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10015 = stablehlo.multiply %10014, %arg154 : tensor<768xf32>
    %10016 = stablehlo.add %9269, %10015 : tensor<768xf32>
    %10017 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10018 = stablehlo.multiply %10017, %arg155 : tensor<768x768xf32>
    %10019 = stablehlo.add %9275, %10018 : tensor<768x768xf32>
    %10020 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10021 = stablehlo.multiply %10020, %arg156 : tensor<768xf32>
    %10022 = stablehlo.add %9281, %10021 : tensor<768xf32>
    %10023 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10024 = stablehlo.multiply %10023, %arg157 : tensor<768xf32>
    %10025 = stablehlo.add %9287, %10024 : tensor<768xf32>
    %10026 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10027 = stablehlo.multiply %10026, %arg158 : tensor<768xf32>
    %10028 = stablehlo.add %9293, %10027 : tensor<768xf32>
    %10029 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10030 = stablehlo.multiply %10029, %arg159 : tensor<3072x768xf32>
    %10031 = stablehlo.add %9299, %10030 : tensor<3072x768xf32>
    %10032 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10033 = stablehlo.multiply %10032, %arg160 : tensor<3072xf32>
    %10034 = stablehlo.add %9305, %10033 : tensor<3072xf32>
    %10035 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10036 = stablehlo.multiply %10035, %arg161 : tensor<768x3072xf32>
    %10037 = stablehlo.add %9311, %10036 : tensor<768x3072xf32>
    %10038 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10039 = stablehlo.multiply %10038, %arg162 : tensor<768xf32>
    %10040 = stablehlo.add %9317, %10039 : tensor<768xf32>
    %10041 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10042 = stablehlo.multiply %10041, %arg163 : tensor<768xf32>
    %10043 = stablehlo.add %9323, %10042 : tensor<768xf32>
    %10044 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10045 = stablehlo.multiply %10044, %arg164 : tensor<768xf32>
    %10046 = stablehlo.add %9329, %10045 : tensor<768xf32>
    %10047 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10048 = stablehlo.multiply %10047, %arg165 : tensor<768x768xf32>
    %10049 = stablehlo.add %9335, %10048 : tensor<768x768xf32>
    %10050 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10051 = stablehlo.multiply %10050, %arg166 : tensor<768xf32>
    %10052 = stablehlo.add %9341, %10051 : tensor<768xf32>
    %10053 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10054 = stablehlo.multiply %10053, %arg167 : tensor<768x768xf32>
    %10055 = stablehlo.add %9347, %10054 : tensor<768x768xf32>
    %10056 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10057 = stablehlo.multiply %10056, %arg168 : tensor<768xf32>
    %10058 = stablehlo.add %9353, %10057 : tensor<768xf32>
    %10059 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10060 = stablehlo.multiply %10059, %arg169 : tensor<768x768xf32>
    %10061 = stablehlo.add %9359, %10060 : tensor<768x768xf32>
    %10062 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10063 = stablehlo.multiply %10062, %arg170 : tensor<768xf32>
    %10064 = stablehlo.add %9365, %10063 : tensor<768xf32>
    %10065 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10066 = stablehlo.multiply %10065, %arg171 : tensor<768x768xf32>
    %10067 = stablehlo.add %9371, %10066 : tensor<768x768xf32>
    %10068 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10069 = stablehlo.multiply %10068, %arg172 : tensor<768xf32>
    %10070 = stablehlo.add %9377, %10069 : tensor<768xf32>
    %10071 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10072 = stablehlo.multiply %10071, %arg173 : tensor<768xf32>
    %10073 = stablehlo.add %9383, %10072 : tensor<768xf32>
    %10074 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10075 = stablehlo.multiply %10074, %arg174 : tensor<768xf32>
    %10076 = stablehlo.add %9389, %10075 : tensor<768xf32>
    %10077 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10078 = stablehlo.multiply %10077, %arg175 : tensor<3072x768xf32>
    %10079 = stablehlo.add %9395, %10078 : tensor<3072x768xf32>
    %10080 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10081 = stablehlo.multiply %10080, %arg176 : tensor<3072xf32>
    %10082 = stablehlo.add %9401, %10081 : tensor<3072xf32>
    %10083 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10084 = stablehlo.multiply %10083, %arg177 : tensor<768x3072xf32>
    %10085 = stablehlo.add %9407, %10084 : tensor<768x3072xf32>
    %10086 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10087 = stablehlo.multiply %10086, %arg178 : tensor<768xf32>
    %10088 = stablehlo.add %9413, %10087 : tensor<768xf32>
    %10089 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10090 = stablehlo.multiply %10089, %arg179 : tensor<768xf32>
    %10091 = stablehlo.add %9419, %10090 : tensor<768xf32>
    %10092 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10093 = stablehlo.multiply %10092, %arg180 : tensor<768xf32>
    %10094 = stablehlo.add %9425, %10093 : tensor<768xf32>
    %10095 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10096 = stablehlo.multiply %10095, %arg181 : tensor<768x768xf32>
    %10097 = stablehlo.add %9431, %10096 : tensor<768x768xf32>
    %10098 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10099 = stablehlo.multiply %10098, %arg182 : tensor<768xf32>
    %10100 = stablehlo.add %9437, %10099 : tensor<768xf32>
    %10101 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10102 = stablehlo.multiply %10101, %arg183 : tensor<768x768xf32>
    %10103 = stablehlo.add %9443, %10102 : tensor<768x768xf32>
    %10104 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10105 = stablehlo.multiply %10104, %arg184 : tensor<768xf32>
    %10106 = stablehlo.add %9449, %10105 : tensor<768xf32>
    %10107 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10108 = stablehlo.multiply %10107, %arg185 : tensor<768x768xf32>
    %10109 = stablehlo.add %9455, %10108 : tensor<768x768xf32>
    %10110 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10111 = stablehlo.multiply %10110, %arg186 : tensor<768xf32>
    %10112 = stablehlo.add %9461, %10111 : tensor<768xf32>
    %10113 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10114 = stablehlo.multiply %10113, %arg187 : tensor<768x768xf32>
    %10115 = stablehlo.add %9467, %10114 : tensor<768x768xf32>
    %10116 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10117 = stablehlo.multiply %10116, %arg188 : tensor<768xf32>
    %10118 = stablehlo.add %9473, %10117 : tensor<768xf32>
    %10119 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10120 = stablehlo.multiply %10119, %arg189 : tensor<768xf32>
    %10121 = stablehlo.add %9479, %10120 : tensor<768xf32>
    %10122 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10123 = stablehlo.multiply %10122, %arg190 : tensor<768xf32>
    %10124 = stablehlo.add %9485, %10123 : tensor<768xf32>
    %10125 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10126 = stablehlo.multiply %10125, %arg191 : tensor<3072x768xf32>
    %10127 = stablehlo.add %9491, %10126 : tensor<3072x768xf32>
    %10128 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10129 = stablehlo.multiply %10128, %arg192 : tensor<3072xf32>
    %10130 = stablehlo.add %9497, %10129 : tensor<3072xf32>
    %10131 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10132 = stablehlo.multiply %10131, %arg193 : tensor<768x3072xf32>
    %10133 = stablehlo.add %9503, %10132 : tensor<768x3072xf32>
    %10134 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10135 = stablehlo.multiply %10134, %arg194 : tensor<768xf32>
    %10136 = stablehlo.add %9509, %10135 : tensor<768xf32>
    %10137 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10138 = stablehlo.multiply %10137, %arg195 : tensor<768xf32>
    %10139 = stablehlo.add %9515, %10138 : tensor<768xf32>
    %10140 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10141 = stablehlo.multiply %10140, %arg196 : tensor<768xf32>
    %10142 = stablehlo.add %9521, %10141 : tensor<768xf32>
    %10143 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10144 = stablehlo.multiply %10143, %arg197 : tensor<768x768xf32>
    %10145 = stablehlo.add %9527, %10144 : tensor<768x768xf32>
    %10146 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10147 = stablehlo.multiply %10146, %arg198 : tensor<768xf32>
    %10148 = stablehlo.add %9533, %10147 : tensor<768xf32>
    %10149 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10150 = stablehlo.multiply %10149, %arg199 : tensor<768xf32>
    %10151 = stablehlo.add %9539, %10150 : tensor<768xf32>
    %10152 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10153 = stablehlo.multiply %10152, %arg200 : tensor<768xf32>
    %10154 = stablehlo.add %9545, %10153 : tensor<768xf32>
    %10155 = stablehlo.broadcast_in_dim %cst_652, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10156 = stablehlo.multiply %10155, %arg201 : tensor<30522xf32>
    %10157 = stablehlo.add %9551, %10156 : tensor<30522xf32>
    %10158 = stablehlo.subtract %arg607, %c : tensor<i32>
    %c_653 = stablehlo.constant dense<1000> : tensor<i32>
    %10159 = call @clip(%10158, %c_4, %c_653) : (tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %10160 = stablehlo.convert %10159 : (tensor<i32>) -> tensor<f32>
    %cst_654 = stablehlo.constant dense<1.000000e+03> : tensor<f32>
    %10161 = stablehlo.divide %10160, %cst_654 : tensor<f32>
    %10162 = stablehlo.subtract %cst_6, %10161 : tensor<f32>
    %cst_655 = stablehlo.constant dense<-5.000000e-05> : tensor<f32>
    %10163 = stablehlo.multiply %cst_655, %10162 : tensor<f32>
    %cst_656 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10164 = stablehlo.add %10163, %cst_656 : tensor<f32>
    %c_657 = stablehlo.constant dense<1000> : tensor<i32>
    %10165 = stablehlo.compare  LT, %arg607, %c_657,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %10166 = stablehlo.subtract %arg607, %c_657 : tensor<i32>
    %10167 = stablehlo.convert %10166 : (tensor<i32>) -> tensor<f32>
    %cst_658 = stablehlo.constant dense<9.000000e+03> : tensor<f32>
    %10168 = stablehlo.minimum %10167, %cst_658 : tensor<f32>
    %cst_659 = stablehlo.constant dense<3.14159274> : tensor<f32>
    %10169 = stablehlo.multiply %cst_659, %10168 : tensor<f32>
    %10170 = stablehlo.divide %10169, %cst_658 : tensor<f32>
    %10171 = stablehlo.cosine %10170 : tensor<f32>
    %cst_660 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %10172 = stablehlo.add %cst_660, %10171 : tensor<f32>
    %cst_661 = stablehlo.constant dense<5.000000e-01> : tensor<f32>
    %10173 = stablehlo.multiply %cst_661, %10172 : tensor<f32>
    %10174 = stablehlo.power %10173, %cst_660 : tensor<f32>
    %10175 = stablehlo.multiply %cst_660, %10174 : tensor<f32>
    %10176 = stablehlo.add %10175, %cst_83 : tensor<f32>
    %cst_662 = stablehlo.constant dense<5.000000e-05> : tensor<f32>
    %10177 = stablehlo.multiply %cst_662, %10176 : tensor<f32>
    %10178 = call @_where_293(%10165, %10164, %10177) : (tensor<i1>, tensor<f32>, tensor<f32>) -> tensor<f32>
    %cst_663 = stablehlo.constant dense<-1.000000e+00> : tensor<f32>
    %10179 = stablehlo.multiply %cst_663, %10178 : tensor<f32>
    %10180 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<30522x768xf32>
    %10181 = stablehlo.multiply %10180, %9554 : tensor<30522x768xf32>
    %10182 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<512x768xf32>
    %10183 = stablehlo.multiply %10182, %9557 : tensor<512x768xf32>
    %10184 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<2x768xf32>
    %10185 = stablehlo.multiply %10184, %9560 : tensor<2x768xf32>
    %10186 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10187 = stablehlo.multiply %10186, %9563 : tensor<768xf32>
    %10188 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10189 = stablehlo.multiply %10188, %9566 : tensor<768xf32>
    %10190 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10191 = stablehlo.multiply %10190, %9569 : tensor<768x768xf32>
    %10192 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10193 = stablehlo.multiply %10192, %9572 : tensor<768xf32>
    %10194 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10195 = stablehlo.multiply %10194, %9575 : tensor<768x768xf32>
    %10196 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10197 = stablehlo.multiply %10196, %9578 : tensor<768xf32>
    %10198 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10199 = stablehlo.multiply %10198, %9581 : tensor<768x768xf32>
    %10200 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10201 = stablehlo.multiply %10200, %9584 : tensor<768xf32>
    %10202 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10203 = stablehlo.multiply %10202, %9587 : tensor<768x768xf32>
    %10204 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10205 = stablehlo.multiply %10204, %9590 : tensor<768xf32>
    %10206 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10207 = stablehlo.multiply %10206, %9593 : tensor<768xf32>
    %10208 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10209 = stablehlo.multiply %10208, %9596 : tensor<768xf32>
    %10210 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10211 = stablehlo.multiply %10210, %9599 : tensor<3072x768xf32>
    %10212 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10213 = stablehlo.multiply %10212, %9602 : tensor<3072xf32>
    %10214 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10215 = stablehlo.multiply %10214, %9605 : tensor<768x3072xf32>
    %10216 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10217 = stablehlo.multiply %10216, %9608 : tensor<768xf32>
    %10218 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10219 = stablehlo.multiply %10218, %9611 : tensor<768xf32>
    %10220 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10221 = stablehlo.multiply %10220, %9614 : tensor<768xf32>
    %10222 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10223 = stablehlo.multiply %10222, %9617 : tensor<768x768xf32>
    %10224 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10225 = stablehlo.multiply %10224, %9620 : tensor<768xf32>
    %10226 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10227 = stablehlo.multiply %10226, %9623 : tensor<768x768xf32>
    %10228 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10229 = stablehlo.multiply %10228, %9626 : tensor<768xf32>
    %10230 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10231 = stablehlo.multiply %10230, %9629 : tensor<768x768xf32>
    %10232 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10233 = stablehlo.multiply %10232, %9632 : tensor<768xf32>
    %10234 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10235 = stablehlo.multiply %10234, %9635 : tensor<768x768xf32>
    %10236 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10237 = stablehlo.multiply %10236, %9638 : tensor<768xf32>
    %10238 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10239 = stablehlo.multiply %10238, %9641 : tensor<768xf32>
    %10240 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10241 = stablehlo.multiply %10240, %9644 : tensor<768xf32>
    %10242 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10243 = stablehlo.multiply %10242, %9647 : tensor<3072x768xf32>
    %10244 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10245 = stablehlo.multiply %10244, %9650 : tensor<3072xf32>
    %10246 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10247 = stablehlo.multiply %10246, %9653 : tensor<768x3072xf32>
    %10248 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10249 = stablehlo.multiply %10248, %9656 : tensor<768xf32>
    %10250 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10251 = stablehlo.multiply %10250, %9659 : tensor<768xf32>
    %10252 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10253 = stablehlo.multiply %10252, %9662 : tensor<768xf32>
    %10254 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10255 = stablehlo.multiply %10254, %9665 : tensor<768x768xf32>
    %10256 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10257 = stablehlo.multiply %10256, %9668 : tensor<768xf32>
    %10258 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10259 = stablehlo.multiply %10258, %9671 : tensor<768x768xf32>
    %10260 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10261 = stablehlo.multiply %10260, %9674 : tensor<768xf32>
    %10262 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10263 = stablehlo.multiply %10262, %9677 : tensor<768x768xf32>
    %10264 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10265 = stablehlo.multiply %10264, %9680 : tensor<768xf32>
    %10266 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10267 = stablehlo.multiply %10266, %9683 : tensor<768x768xf32>
    %10268 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10269 = stablehlo.multiply %10268, %9686 : tensor<768xf32>
    %10270 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10271 = stablehlo.multiply %10270, %9689 : tensor<768xf32>
    %10272 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10273 = stablehlo.multiply %10272, %9692 : tensor<768xf32>
    %10274 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10275 = stablehlo.multiply %10274, %9695 : tensor<3072x768xf32>
    %10276 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10277 = stablehlo.multiply %10276, %9698 : tensor<3072xf32>
    %10278 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10279 = stablehlo.multiply %10278, %9701 : tensor<768x3072xf32>
    %10280 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10281 = stablehlo.multiply %10280, %9704 : tensor<768xf32>
    %10282 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10283 = stablehlo.multiply %10282, %9707 : tensor<768xf32>
    %10284 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10285 = stablehlo.multiply %10284, %9710 : tensor<768xf32>
    %10286 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10287 = stablehlo.multiply %10286, %9713 : tensor<768x768xf32>
    %10288 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10289 = stablehlo.multiply %10288, %9716 : tensor<768xf32>
    %10290 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10291 = stablehlo.multiply %10290, %9719 : tensor<768x768xf32>
    %10292 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10293 = stablehlo.multiply %10292, %9722 : tensor<768xf32>
    %10294 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10295 = stablehlo.multiply %10294, %9725 : tensor<768x768xf32>
    %10296 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10297 = stablehlo.multiply %10296, %9728 : tensor<768xf32>
    %10298 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10299 = stablehlo.multiply %10298, %9731 : tensor<768x768xf32>
    %10300 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10301 = stablehlo.multiply %10300, %9734 : tensor<768xf32>
    %10302 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10303 = stablehlo.multiply %10302, %9737 : tensor<768xf32>
    %10304 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10305 = stablehlo.multiply %10304, %9740 : tensor<768xf32>
    %10306 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10307 = stablehlo.multiply %10306, %9743 : tensor<3072x768xf32>
    %10308 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10309 = stablehlo.multiply %10308, %9746 : tensor<3072xf32>
    %10310 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10311 = stablehlo.multiply %10310, %9749 : tensor<768x3072xf32>
    %10312 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10313 = stablehlo.multiply %10312, %9752 : tensor<768xf32>
    %10314 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10315 = stablehlo.multiply %10314, %9755 : tensor<768xf32>
    %10316 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10317 = stablehlo.multiply %10316, %9758 : tensor<768xf32>
    %10318 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10319 = stablehlo.multiply %10318, %9761 : tensor<768x768xf32>
    %10320 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10321 = stablehlo.multiply %10320, %9764 : tensor<768xf32>
    %10322 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10323 = stablehlo.multiply %10322, %9767 : tensor<768x768xf32>
    %10324 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10325 = stablehlo.multiply %10324, %9770 : tensor<768xf32>
    %10326 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10327 = stablehlo.multiply %10326, %9773 : tensor<768x768xf32>
    %10328 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10329 = stablehlo.multiply %10328, %9776 : tensor<768xf32>
    %10330 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10331 = stablehlo.multiply %10330, %9779 : tensor<768x768xf32>
    %10332 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10333 = stablehlo.multiply %10332, %9782 : tensor<768xf32>
    %10334 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10335 = stablehlo.multiply %10334, %9785 : tensor<768xf32>
    %10336 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10337 = stablehlo.multiply %10336, %9788 : tensor<768xf32>
    %10338 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10339 = stablehlo.multiply %10338, %9791 : tensor<3072x768xf32>
    %10340 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10341 = stablehlo.multiply %10340, %9794 : tensor<3072xf32>
    %10342 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10343 = stablehlo.multiply %10342, %9797 : tensor<768x3072xf32>
    %10344 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10345 = stablehlo.multiply %10344, %9800 : tensor<768xf32>
    %10346 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10347 = stablehlo.multiply %10346, %9803 : tensor<768xf32>
    %10348 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10349 = stablehlo.multiply %10348, %9806 : tensor<768xf32>
    %10350 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10351 = stablehlo.multiply %10350, %9809 : tensor<768x768xf32>
    %10352 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10353 = stablehlo.multiply %10352, %9812 : tensor<768xf32>
    %10354 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10355 = stablehlo.multiply %10354, %9815 : tensor<768x768xf32>
    %10356 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10357 = stablehlo.multiply %10356, %9818 : tensor<768xf32>
    %10358 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10359 = stablehlo.multiply %10358, %9821 : tensor<768x768xf32>
    %10360 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10361 = stablehlo.multiply %10360, %9824 : tensor<768xf32>
    %10362 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10363 = stablehlo.multiply %10362, %9827 : tensor<768x768xf32>
    %10364 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10365 = stablehlo.multiply %10364, %9830 : tensor<768xf32>
    %10366 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10367 = stablehlo.multiply %10366, %9833 : tensor<768xf32>
    %10368 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10369 = stablehlo.multiply %10368, %9836 : tensor<768xf32>
    %10370 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10371 = stablehlo.multiply %10370, %9839 : tensor<3072x768xf32>
    %10372 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10373 = stablehlo.multiply %10372, %9842 : tensor<3072xf32>
    %10374 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10375 = stablehlo.multiply %10374, %9845 : tensor<768x3072xf32>
    %10376 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10377 = stablehlo.multiply %10376, %9848 : tensor<768xf32>
    %10378 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10379 = stablehlo.multiply %10378, %9851 : tensor<768xf32>
    %10380 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10381 = stablehlo.multiply %10380, %9854 : tensor<768xf32>
    %10382 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10383 = stablehlo.multiply %10382, %9857 : tensor<768x768xf32>
    %10384 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10385 = stablehlo.multiply %10384, %9860 : tensor<768xf32>
    %10386 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10387 = stablehlo.multiply %10386, %9863 : tensor<768x768xf32>
    %10388 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10389 = stablehlo.multiply %10388, %9866 : tensor<768xf32>
    %10390 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10391 = stablehlo.multiply %10390, %9869 : tensor<768x768xf32>
    %10392 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10393 = stablehlo.multiply %10392, %9872 : tensor<768xf32>
    %10394 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10395 = stablehlo.multiply %10394, %9875 : tensor<768x768xf32>
    %10396 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10397 = stablehlo.multiply %10396, %9878 : tensor<768xf32>
    %10398 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10399 = stablehlo.multiply %10398, %9881 : tensor<768xf32>
    %10400 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10401 = stablehlo.multiply %10400, %9884 : tensor<768xf32>
    %10402 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10403 = stablehlo.multiply %10402, %9887 : tensor<3072x768xf32>
    %10404 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10405 = stablehlo.multiply %10404, %9890 : tensor<3072xf32>
    %10406 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10407 = stablehlo.multiply %10406, %9893 : tensor<768x3072xf32>
    %10408 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10409 = stablehlo.multiply %10408, %9896 : tensor<768xf32>
    %10410 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10411 = stablehlo.multiply %10410, %9899 : tensor<768xf32>
    %10412 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10413 = stablehlo.multiply %10412, %9902 : tensor<768xf32>
    %10414 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10415 = stablehlo.multiply %10414, %9905 : tensor<768x768xf32>
    %10416 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10417 = stablehlo.multiply %10416, %9908 : tensor<768xf32>
    %10418 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10419 = stablehlo.multiply %10418, %9911 : tensor<768x768xf32>
    %10420 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10421 = stablehlo.multiply %10420, %9914 : tensor<768xf32>
    %10422 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10423 = stablehlo.multiply %10422, %9917 : tensor<768x768xf32>
    %10424 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10425 = stablehlo.multiply %10424, %9920 : tensor<768xf32>
    %10426 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10427 = stablehlo.multiply %10426, %9923 : tensor<768x768xf32>
    %10428 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10429 = stablehlo.multiply %10428, %9926 : tensor<768xf32>
    %10430 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10431 = stablehlo.multiply %10430, %9929 : tensor<768xf32>
    %10432 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10433 = stablehlo.multiply %10432, %9932 : tensor<768xf32>
    %10434 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10435 = stablehlo.multiply %10434, %9935 : tensor<3072x768xf32>
    %10436 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10437 = stablehlo.multiply %10436, %9938 : tensor<3072xf32>
    %10438 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10439 = stablehlo.multiply %10438, %9941 : tensor<768x3072xf32>
    %10440 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10441 = stablehlo.multiply %10440, %9944 : tensor<768xf32>
    %10442 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10443 = stablehlo.multiply %10442, %9947 : tensor<768xf32>
    %10444 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10445 = stablehlo.multiply %10444, %9950 : tensor<768xf32>
    %10446 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10447 = stablehlo.multiply %10446, %9953 : tensor<768x768xf32>
    %10448 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10449 = stablehlo.multiply %10448, %9956 : tensor<768xf32>
    %10450 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10451 = stablehlo.multiply %10450, %9959 : tensor<768x768xf32>
    %10452 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10453 = stablehlo.multiply %10452, %9962 : tensor<768xf32>
    %10454 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10455 = stablehlo.multiply %10454, %9965 : tensor<768x768xf32>
    %10456 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10457 = stablehlo.multiply %10456, %9968 : tensor<768xf32>
    %10458 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10459 = stablehlo.multiply %10458, %9971 : tensor<768x768xf32>
    %10460 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10461 = stablehlo.multiply %10460, %9974 : tensor<768xf32>
    %10462 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10463 = stablehlo.multiply %10462, %9977 : tensor<768xf32>
    %10464 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10465 = stablehlo.multiply %10464, %9980 : tensor<768xf32>
    %10466 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10467 = stablehlo.multiply %10466, %9983 : tensor<3072x768xf32>
    %10468 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10469 = stablehlo.multiply %10468, %9986 : tensor<3072xf32>
    %10470 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10471 = stablehlo.multiply %10470, %9989 : tensor<768x3072xf32>
    %10472 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10473 = stablehlo.multiply %10472, %9992 : tensor<768xf32>
    %10474 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10475 = stablehlo.multiply %10474, %9995 : tensor<768xf32>
    %10476 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10477 = stablehlo.multiply %10476, %9998 : tensor<768xf32>
    %10478 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10479 = stablehlo.multiply %10478, %10001 : tensor<768x768xf32>
    %10480 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10481 = stablehlo.multiply %10480, %10004 : tensor<768xf32>
    %10482 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10483 = stablehlo.multiply %10482, %10007 : tensor<768x768xf32>
    %10484 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10485 = stablehlo.multiply %10484, %10010 : tensor<768xf32>
    %10486 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10487 = stablehlo.multiply %10486, %10013 : tensor<768x768xf32>
    %10488 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10489 = stablehlo.multiply %10488, %10016 : tensor<768xf32>
    %10490 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10491 = stablehlo.multiply %10490, %10019 : tensor<768x768xf32>
    %10492 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10493 = stablehlo.multiply %10492, %10022 : tensor<768xf32>
    %10494 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10495 = stablehlo.multiply %10494, %10025 : tensor<768xf32>
    %10496 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10497 = stablehlo.multiply %10496, %10028 : tensor<768xf32>
    %10498 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10499 = stablehlo.multiply %10498, %10031 : tensor<3072x768xf32>
    %10500 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10501 = stablehlo.multiply %10500, %10034 : tensor<3072xf32>
    %10502 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10503 = stablehlo.multiply %10502, %10037 : tensor<768x3072xf32>
    %10504 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10505 = stablehlo.multiply %10504, %10040 : tensor<768xf32>
    %10506 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10507 = stablehlo.multiply %10506, %10043 : tensor<768xf32>
    %10508 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10509 = stablehlo.multiply %10508, %10046 : tensor<768xf32>
    %10510 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10511 = stablehlo.multiply %10510, %10049 : tensor<768x768xf32>
    %10512 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10513 = stablehlo.multiply %10512, %10052 : tensor<768xf32>
    %10514 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10515 = stablehlo.multiply %10514, %10055 : tensor<768x768xf32>
    %10516 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10517 = stablehlo.multiply %10516, %10058 : tensor<768xf32>
    %10518 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10519 = stablehlo.multiply %10518, %10061 : tensor<768x768xf32>
    %10520 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10521 = stablehlo.multiply %10520, %10064 : tensor<768xf32>
    %10522 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10523 = stablehlo.multiply %10522, %10067 : tensor<768x768xf32>
    %10524 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10525 = stablehlo.multiply %10524, %10070 : tensor<768xf32>
    %10526 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10527 = stablehlo.multiply %10526, %10073 : tensor<768xf32>
    %10528 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10529 = stablehlo.multiply %10528, %10076 : tensor<768xf32>
    %10530 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10531 = stablehlo.multiply %10530, %10079 : tensor<3072x768xf32>
    %10532 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10533 = stablehlo.multiply %10532, %10082 : tensor<3072xf32>
    %10534 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10535 = stablehlo.multiply %10534, %10085 : tensor<768x3072xf32>
    %10536 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10537 = stablehlo.multiply %10536, %10088 : tensor<768xf32>
    %10538 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10539 = stablehlo.multiply %10538, %10091 : tensor<768xf32>
    %10540 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10541 = stablehlo.multiply %10540, %10094 : tensor<768xf32>
    %10542 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10543 = stablehlo.multiply %10542, %10097 : tensor<768x768xf32>
    %10544 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10545 = stablehlo.multiply %10544, %10100 : tensor<768xf32>
    %10546 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10547 = stablehlo.multiply %10546, %10103 : tensor<768x768xf32>
    %10548 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10549 = stablehlo.multiply %10548, %10106 : tensor<768xf32>
    %10550 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10551 = stablehlo.multiply %10550, %10109 : tensor<768x768xf32>
    %10552 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10553 = stablehlo.multiply %10552, %10112 : tensor<768xf32>
    %10554 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10555 = stablehlo.multiply %10554, %10115 : tensor<768x768xf32>
    %10556 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10557 = stablehlo.multiply %10556, %10118 : tensor<768xf32>
    %10558 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10559 = stablehlo.multiply %10558, %10121 : tensor<768xf32>
    %10560 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10561 = stablehlo.multiply %10560, %10124 : tensor<768xf32>
    %10562 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072x768xf32>
    %10563 = stablehlo.multiply %10562, %10127 : tensor<3072x768xf32>
    %10564 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<3072xf32>
    %10565 = stablehlo.multiply %10564, %10130 : tensor<3072xf32>
    %10566 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x3072xf32>
    %10567 = stablehlo.multiply %10566, %10133 : tensor<768x3072xf32>
    %10568 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10569 = stablehlo.multiply %10568, %10136 : tensor<768xf32>
    %10570 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10571 = stablehlo.multiply %10570, %10139 : tensor<768xf32>
    %10572 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10573 = stablehlo.multiply %10572, %10142 : tensor<768xf32>
    %10574 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768x768xf32>
    %10575 = stablehlo.multiply %10574, %10145 : tensor<768x768xf32>
    %10576 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10577 = stablehlo.multiply %10576, %10148 : tensor<768xf32>
    %10578 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10579 = stablehlo.multiply %10578, %10151 : tensor<768xf32>
    %10580 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<768xf32>
    %10581 = stablehlo.multiply %10580, %10154 : tensor<768xf32>
    %10582 = stablehlo.broadcast_in_dim %10179, dims = [] : (tensor<f32>) -> tensor<30522xf32>
    %10583 = stablehlo.multiply %10582, %10157 : tensor<30522xf32>
    %10584 = stablehlo.compare  LT, %arg607, %c_647,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
    %10585 = stablehlo.add %arg607, %c_648 : tensor<i32>
    %10586 = call @_where_249(%10584, %10585, %c_647) : (tensor<i1>, tensor<i32>, tensor<i32>) -> tensor<i32>
    %10587 = stablehlo.add %arg0, %10181 : tensor<30522x768xf32>
    %10588 = stablehlo.add %arg1, %10183 : tensor<512x768xf32>
    %10589 = stablehlo.add %arg2, %10185 : tensor<2x768xf32>
    %10590 = stablehlo.add %arg3, %10187 : tensor<768xf32>
    %10591 = stablehlo.add %arg4, %10189 : tensor<768xf32>
    %10592 = stablehlo.add %arg5, %10191 : tensor<768x768xf32>
    %10593 = stablehlo.add %arg6, %10193 : tensor<768xf32>
    %10594 = stablehlo.add %arg7, %10195 : tensor<768x768xf32>
    %10595 = stablehlo.add %arg8, %10197 : tensor<768xf32>
    %10596 = stablehlo.add %arg9, %10199 : tensor<768x768xf32>
    %10597 = stablehlo.add %arg10, %10201 : tensor<768xf32>
    %10598 = stablehlo.add %arg11, %10203 : tensor<768x768xf32>
    %10599 = stablehlo.add %arg12, %10205 : tensor<768xf32>
    %10600 = stablehlo.add %arg13, %10207 : tensor<768xf32>
    %10601 = stablehlo.add %arg14, %10209 : tensor<768xf32>
    %10602 = stablehlo.add %arg15, %10211 : tensor<3072x768xf32>
    %10603 = stablehlo.add %arg16, %10213 : tensor<3072xf32>
    %10604 = stablehlo.add %arg17, %10215 : tensor<768x3072xf32>
    %10605 = stablehlo.add %arg18, %10217 : tensor<768xf32>
    %10606 = stablehlo.add %arg19, %10219 : tensor<768xf32>
    %10607 = stablehlo.add %arg20, %10221 : tensor<768xf32>
    %10608 = stablehlo.add %arg21, %10223 : tensor<768x768xf32>
    %10609 = stablehlo.add %arg22, %10225 : tensor<768xf32>
    %10610 = stablehlo.add %arg23, %10227 : tensor<768x768xf32>
    %10611 = stablehlo.add %arg24, %10229 : tensor<768xf32>
    %10612 = stablehlo.add %arg25, %10231 : tensor<768x768xf32>
    %10613 = stablehlo.add %arg26, %10233 : tensor<768xf32>
    %10614 = stablehlo.add %arg27, %10235 : tensor<768x768xf32>
    %10615 = stablehlo.add %arg28, %10237 : tensor<768xf32>
    %10616 = stablehlo.add %arg29, %10239 : tensor<768xf32>
    %10617 = stablehlo.add %arg30, %10241 : tensor<768xf32>
    %10618 = stablehlo.add %arg31, %10243 : tensor<3072x768xf32>
    %10619 = stablehlo.add %arg32, %10245 : tensor<3072xf32>
    %10620 = stablehlo.add %arg33, %10247 : tensor<768x3072xf32>
    %10621 = stablehlo.add %arg34, %10249 : tensor<768xf32>
    %10622 = stablehlo.add %arg35, %10251 : tensor<768xf32>
    %10623 = stablehlo.add %arg36, %10253 : tensor<768xf32>
    %10624 = stablehlo.add %arg37, %10255 : tensor<768x768xf32>
    %10625 = stablehlo.add %arg38, %10257 : tensor<768xf32>
    %10626 = stablehlo.add %arg39, %10259 : tensor<768x768xf32>
    %10627 = stablehlo.add %arg40, %10261 : tensor<768xf32>
    %10628 = stablehlo.add %arg41, %10263 : tensor<768x768xf32>
    %10629 = stablehlo.add %arg42, %10265 : tensor<768xf32>
    %10630 = stablehlo.add %arg43, %10267 : tensor<768x768xf32>
    %10631 = stablehlo.add %arg44, %10269 : tensor<768xf32>
    %10632 = stablehlo.add %arg45, %10271 : tensor<768xf32>
    %10633 = stablehlo.add %arg46, %10273 : tensor<768xf32>
    %10634 = stablehlo.add %arg47, %10275 : tensor<3072x768xf32>
    %10635 = stablehlo.add %arg48, %10277 : tensor<3072xf32>
    %10636 = stablehlo.add %arg49, %10279 : tensor<768x3072xf32>
    %10637 = stablehlo.add %arg50, %10281 : tensor<768xf32>
    %10638 = stablehlo.add %arg51, %10283 : tensor<768xf32>
    %10639 = stablehlo.add %arg52, %10285 : tensor<768xf32>
    %10640 = stablehlo.add %arg53, %10287 : tensor<768x768xf32>
    %10641 = stablehlo.add %arg54, %10289 : tensor<768xf32>
    %10642 = stablehlo.add %arg55, %10291 : tensor<768x768xf32>
    %10643 = stablehlo.add %arg56, %10293 : tensor<768xf32>
    %10644 = stablehlo.add %arg57, %10295 : tensor<768x768xf32>
    %10645 = stablehlo.add %arg58, %10297 : tensor<768xf32>
    %10646 = stablehlo.add %arg59, %10299 : tensor<768x768xf32>
    %10647 = stablehlo.add %arg60, %10301 : tensor<768xf32>
    %10648 = stablehlo.add %arg61, %10303 : tensor<768xf32>
    %10649 = stablehlo.add %arg62, %10305 : tensor<768xf32>
    %10650 = stablehlo.add %arg63, %10307 : tensor<3072x768xf32>
    %10651 = stablehlo.add %arg64, %10309 : tensor<3072xf32>
    %10652 = stablehlo.add %arg65, %10311 : tensor<768x3072xf32>
    %10653 = stablehlo.add %arg66, %10313 : tensor<768xf32>
    %10654 = stablehlo.add %arg67, %10315 : tensor<768xf32>
    %10655 = stablehlo.add %arg68, %10317 : tensor<768xf32>
    %10656 = stablehlo.add %arg69, %10319 : tensor<768x768xf32>
    %10657 = stablehlo.add %arg70, %10321 : tensor<768xf32>
    %10658 = stablehlo.add %arg71, %10323 : tensor<768x768xf32>
    %10659 = stablehlo.add %arg72, %10325 : tensor<768xf32>
    %10660 = stablehlo.add %arg73, %10327 : tensor<768x768xf32>
    %10661 = stablehlo.add %arg74, %10329 : tensor<768xf32>
    %10662 = stablehlo.add %arg75, %10331 : tensor<768x768xf32>
    %10663 = stablehlo.add %arg76, %10333 : tensor<768xf32>
    %10664 = stablehlo.add %arg77, %10335 : tensor<768xf32>
    %10665 = stablehlo.add %arg78, %10337 : tensor<768xf32>
    %10666 = stablehlo.add %arg79, %10339 : tensor<3072x768xf32>
    %10667 = stablehlo.add %arg80, %10341 : tensor<3072xf32>
    %10668 = stablehlo.add %arg81, %10343 : tensor<768x3072xf32>
    %10669 = stablehlo.add %arg82, %10345 : tensor<768xf32>
    %10670 = stablehlo.add %arg83, %10347 : tensor<768xf32>
    %10671 = stablehlo.add %arg84, %10349 : tensor<768xf32>
    %10672 = stablehlo.add %arg85, %10351 : tensor<768x768xf32>
    %10673 = stablehlo.add %arg86, %10353 : tensor<768xf32>
    %10674 = stablehlo.add %arg87, %10355 : tensor<768x768xf32>
    %10675 = stablehlo.add %arg88, %10357 : tensor<768xf32>
    %10676 = stablehlo.add %arg89, %10359 : tensor<768x768xf32>
    %10677 = stablehlo.add %arg90, %10361 : tensor<768xf32>
    %10678 = stablehlo.add %arg91, %10363 : tensor<768x768xf32>
    %10679 = stablehlo.add %arg92, %10365 : tensor<768xf32>
    %10680 = stablehlo.add %arg93, %10367 : tensor<768xf32>
    %10681 = stablehlo.add %arg94, %10369 : tensor<768xf32>
    %10682 = stablehlo.add %arg95, %10371 : tensor<3072x768xf32>
    %10683 = stablehlo.add %arg96, %10373 : tensor<3072xf32>
    %10684 = stablehlo.add %arg97, %10375 : tensor<768x3072xf32>
    %10685 = stablehlo.add %arg98, %10377 : tensor<768xf32>
    %10686 = stablehlo.add %arg99, %10379 : tensor<768xf32>
    %10687 = stablehlo.add %arg100, %10381 : tensor<768xf32>
    %10688 = stablehlo.add %arg101, %10383 : tensor<768x768xf32>
    %10689 = stablehlo.add %arg102, %10385 : tensor<768xf32>
    %10690 = stablehlo.add %arg103, %10387 : tensor<768x768xf32>
    %10691 = stablehlo.add %arg104, %10389 : tensor<768xf32>
    %10692 = stablehlo.add %arg105, %10391 : tensor<768x768xf32>
    %10693 = stablehlo.add %arg106, %10393 : tensor<768xf32>
    %10694 = stablehlo.add %arg107, %10395 : tensor<768x768xf32>
    %10695 = stablehlo.add %arg108, %10397 : tensor<768xf32>
    %10696 = stablehlo.add %arg109, %10399 : tensor<768xf32>
    %10697 = stablehlo.add %arg110, %10401 : tensor<768xf32>
    %10698 = stablehlo.add %arg111, %10403 : tensor<3072x768xf32>
    %10699 = stablehlo.add %arg112, %10405 : tensor<3072xf32>
    %10700 = stablehlo.add %arg113, %10407 : tensor<768x3072xf32>
    %10701 = stablehlo.add %arg114, %10409 : tensor<768xf32>
    %10702 = stablehlo.add %arg115, %10411 : tensor<768xf32>
    %10703 = stablehlo.add %arg116, %10413 : tensor<768xf32>
    %10704 = stablehlo.add %arg117, %10415 : tensor<768x768xf32>
    %10705 = stablehlo.add %arg118, %10417 : tensor<768xf32>
    %10706 = stablehlo.add %arg119, %10419 : tensor<768x768xf32>
    %10707 = stablehlo.add %arg120, %10421 : tensor<768xf32>
    %10708 = stablehlo.add %arg121, %10423 : tensor<768x768xf32>
    %10709 = stablehlo.add %arg122, %10425 : tensor<768xf32>
    %10710 = stablehlo.add %arg123, %10427 : tensor<768x768xf32>
    %10711 = stablehlo.add %arg124, %10429 : tensor<768xf32>
    %10712 = stablehlo.add %arg125, %10431 : tensor<768xf32>
    %10713 = stablehlo.add %arg126, %10433 : tensor<768xf32>
    %10714 = stablehlo.add %arg127, %10435 : tensor<3072x768xf32>
    %10715 = stablehlo.add %arg128, %10437 : tensor<3072xf32>
    %10716 = stablehlo.add %arg129, %10439 : tensor<768x3072xf32>
    %10717 = stablehlo.add %arg130, %10441 : tensor<768xf32>
    %10718 = stablehlo.add %arg131, %10443 : tensor<768xf32>
    %10719 = stablehlo.add %arg132, %10445 : tensor<768xf32>
    %10720 = stablehlo.add %arg133, %10447 : tensor<768x768xf32>
    %10721 = stablehlo.add %arg134, %10449 : tensor<768xf32>
    %10722 = stablehlo.add %arg135, %10451 : tensor<768x768xf32>
    %10723 = stablehlo.add %arg136, %10453 : tensor<768xf32>
    %10724 = stablehlo.add %arg137, %10455 : tensor<768x768xf32>
    %10725 = stablehlo.add %arg138, %10457 : tensor<768xf32>
    %10726 = stablehlo.add %arg139, %10459 : tensor<768x768xf32>
    %10727 = stablehlo.add %arg140, %10461 : tensor<768xf32>
    %10728 = stablehlo.add %arg141, %10463 : tensor<768xf32>
    %10729 = stablehlo.add %arg142, %10465 : tensor<768xf32>
    %10730 = stablehlo.add %arg143, %10467 : tensor<3072x768xf32>
    %10731 = stablehlo.add %arg144, %10469 : tensor<3072xf32>
    %10732 = stablehlo.add %arg145, %10471 : tensor<768x3072xf32>
    %10733 = stablehlo.add %arg146, %10473 : tensor<768xf32>
    %10734 = stablehlo.add %arg147, %10475 : tensor<768xf32>
    %10735 = stablehlo.add %arg148, %10477 : tensor<768xf32>
    %10736 = stablehlo.add %arg149, %10479 : tensor<768x768xf32>
    %10737 = stablehlo.add %arg150, %10481 : tensor<768xf32>
    %10738 = stablehlo.add %arg151, %10483 : tensor<768x768xf32>
    %10739 = stablehlo.add %arg152, %10485 : tensor<768xf32>
    %10740 = stablehlo.add %arg153, %10487 : tensor<768x768xf32>
    %10741 = stablehlo.add %arg154, %10489 : tensor<768xf32>
    %10742 = stablehlo.add %arg155, %10491 : tensor<768x768xf32>
    %10743 = stablehlo.add %arg156, %10493 : tensor<768xf32>
    %10744 = stablehlo.add %arg157, %10495 : tensor<768xf32>
    %10745 = stablehlo.add %arg158, %10497 : tensor<768xf32>
    %10746 = stablehlo.add %arg159, %10499 : tensor<3072x768xf32>
    %10747 = stablehlo.add %arg160, %10501 : tensor<3072xf32>
    %10748 = stablehlo.add %arg161, %10503 : tensor<768x3072xf32>
    %10749 = stablehlo.add %arg162, %10505 : tensor<768xf32>
    %10750 = stablehlo.add %arg163, %10507 : tensor<768xf32>
    %10751 = stablehlo.add %arg164, %10509 : tensor<768xf32>
    %10752 = stablehlo.add %arg165, %10511 : tensor<768x768xf32>
    %10753 = stablehlo.add %arg166, %10513 : tensor<768xf32>
    %10754 = stablehlo.add %arg167, %10515 : tensor<768x768xf32>
    %10755 = stablehlo.add %arg168, %10517 : tensor<768xf32>
    %10756 = stablehlo.add %arg169, %10519 : tensor<768x768xf32>
    %10757 = stablehlo.add %arg170, %10521 : tensor<768xf32>
    %10758 = stablehlo.add %arg171, %10523 : tensor<768x768xf32>
    %10759 = stablehlo.add %arg172, %10525 : tensor<768xf32>
    %10760 = stablehlo.add %arg173, %10527 : tensor<768xf32>
    %10761 = stablehlo.add %arg174, %10529 : tensor<768xf32>
    %10762 = stablehlo.add %arg175, %10531 : tensor<3072x768xf32>
    %10763 = stablehlo.add %arg176, %10533 : tensor<3072xf32>
    %10764 = stablehlo.add %arg177, %10535 : tensor<768x3072xf32>
    %10765 = stablehlo.add %arg178, %10537 : tensor<768xf32>
    %10766 = stablehlo.add %arg179, %10539 : tensor<768xf32>
    %10767 = stablehlo.add %arg180, %10541 : tensor<768xf32>
    %10768 = stablehlo.add %arg181, %10543 : tensor<768x768xf32>
    %10769 = stablehlo.add %arg182, %10545 : tensor<768xf32>
    %10770 = stablehlo.add %arg183, %10547 : tensor<768x768xf32>
    %10771 = stablehlo.add %arg184, %10549 : tensor<768xf32>
    %10772 = stablehlo.add %arg185, %10551 : tensor<768x768xf32>
    %10773 = stablehlo.add %arg186, %10553 : tensor<768xf32>
    %10774 = stablehlo.add %arg187, %10555 : tensor<768x768xf32>
    %10775 = stablehlo.add %arg188, %10557 : tensor<768xf32>
    %10776 = stablehlo.add %arg189, %10559 : tensor<768xf32>
    %10777 = stablehlo.add %arg190, %10561 : tensor<768xf32>
    %10778 = stablehlo.add %arg191, %10563 : tensor<3072x768xf32>
    %10779 = stablehlo.add %arg192, %10565 : tensor<3072xf32>
    %10780 = stablehlo.add %arg193, %10567 : tensor<768x3072xf32>
    %10781 = stablehlo.add %arg194, %10569 : tensor<768xf32>
    %10782 = stablehlo.add %arg195, %10571 : tensor<768xf32>
    %10783 = stablehlo.add %arg196, %10573 : tensor<768xf32>
    %10784 = stablehlo.add %arg197, %10575 : tensor<768x768xf32>
    %10785 = stablehlo.add %arg198, %10577 : tensor<768xf32>
    %10786 = stablehlo.add %arg199, %10579 : tensor<768xf32>
    %10787 = stablehlo.add %arg200, %10581 : tensor<768xf32>
    %10788 = stablehlo.add %arg201, %10583 : tensor<30522xf32>
    return %c_4, %10587, %10588, %10589, %10590, %10591, %10592, %10593, %10594, %10595, %10596, %10597, %10598, %10599, %10600, %10601, %10602, %10603, %10604, %10605, %10606, %10607, %10608, %10609, %10610, %10611, %10612, %10613, %10614, %10615, %10616, %10617, %10618, %10619, %10620, %10621, %10622, %10623, %10624, %10625, %10626, %10627, %10628, %10629, %10630, %10631, %10632, %10633, %10634, %10635, %10636, %10637, %10638, %10639, %10640, %10641, %10642, %10643, %10644, %10645, %10646, %10647, %10648, %10649, %10650, %10651, %10652, %10653, %10654, %10655, %10656, %10657, %10658, %10659, %10660, %10661, %10662, %10663, %10664, %10665, %10666, %10667, %10668, %10669, %10670, %10671, %10672, %10673, %10674, %10675, %10676, %10677, %10678, %10679, %10680, %10681, %10682, %10683, %10684, %10685, %10686, %10687, %10688, %10689, %10690, %10691, %10692, %10693, %10694, %10695, %10696, %10697, %10698, %10699, %10700, %10701, %10702, %10703, %10704, %10705, %10706, %10707, %10708, %10709, %10710, %10711, %10712, %10713, %10714, %10715, %10716, %10717, %10718, %10719, %10720, %10721, %10722, %10723, %10724, %10725, %10726, %10727, %10728, %10729, %10730, %10731, %10732, %10733, %10734, %10735, %10736, %10737, %10738, %10739, %10740, %10741, %10742, %10743, %10744, %10745, %10746, %10747, %10748, %10749, %10750, %10751, %10752, %10753, %10754, %10755, %10756, %10757, %10758, %10759, %10760, %10761, %10762, %10763, %10764, %10765, %10766, %10767, %10768, %10769, %10770, %10771, %10772, %10773, %10774, %10775, %10776, %10777, %10778, %10779, %10780, %10781, %10782, %10783, %10784, %10785, %10786, %10787, %10788, %7525, %5305, %5310, %5315, %5320, %5325, %5330, %5335, %5340, %5345, %5350, %5355, %5360, %5365, %5370, %5375, %5380, %5385, %5390, %5395, %5400, %5405, %5410, %5415, %5420, %5425, %5430, %5435, %5440, %5445, %5450, %5455, %5460, %5465, %5470, %5475, %5480, %5485, %5490, %5495, %5500, %5505, %5510, %5515, %5520, %5525, %5530, %5535, %5540, %5545, %5550, %5555, %5560, %5565, %5570, %5575, %5580, %5585, %5590, %5595, %5600, %5605, %5610, %5615, %5620, %5625, %5630, %5635, %5640, %5645, %5650, %5655, %5660, %5665, %5670, %5675, %5680, %5685, %5690, %5695, %5700, %5705, %5710, %5715, %5720, %5725, %5730, %5735, %5740, %5745, %5750, %5755, %5760, %5765, %5770, %5775, %5780, %5785, %5790, %5795, %5800, %5805, %5810, %5815, %5820, %5825, %5830, %5835, %5840, %5845, %5850, %5855, %5860, %5865, %5870, %5875, %5880, %5885, %5890, %5895, %5900, %5905, %5910, %5915, %5920, %5925, %5930, %5935, %5940, %5945, %5950, %5955, %5960, %5965, %5970, %5975, %5980, %5985, %5990, %5995, %6000, %6005, %6010, %6015, %6020, %6025, %6030, %6035, %6040, %6045, %6050, %6055, %6060, %6065, %6070, %6075, %6080, %6085, %6090, %6095, %6100, %6105, %6110, %6115, %6120, %6125, %6130, %6135, %6140, %6145, %6150, %6155, %6160, %6165, %6170, %6175, %6180, %6185, %6190, %6195, %6200, %6205, %6210, %6215, %6220, %6225, %6230, %6235, %6240, %6245, %6250, %6255, %6260, %6265, %6270, %6275, %6280, %6285, %6290, %6295, %6300, %6305, %6310, %6316, %6322, %6328, %6334, %6340, %6346, %6352, %6358, %6364, %6370, %6376, %6382, %6388, %6394, %6400, %6406, %6412, %6418, %6424, %6430, %6436, %6442, %6448, %6454, %6460, %6466, %6472, %6478, %6484, %6490, %6496, %6502, %6508, %6514, %6520, %6526, %6532, %6538, %6544, %6550, %6556, %6562, %6568, %6574, %6580, %6586, %6592, %6598, %6604, %6610, %6616, %6622, %6628, %6634, %6640, %6646, %6652, %6658, %6664, %6670, %6676, %6682, %6688, %6694, %6700, %6706, %6712, %6718, %6724, %6730, %6736, %6742, %6748, %6754, %6760, %6766, %6772, %6778, %6784, %6790, %6796, %6802, %6808, %6814, %6820, %6826, %6832, %6838, %6844, %6850, %6856, %6862, %6868, %6874, %6880, %6886, %6892, %6898, %6904, %6910, %6916, %6922, %6928, %6934, %6940, %6946, %6952, %6958, %6964, %6970, %6976, %6982, %6988, %6994, %7000, %7006, %7012, %7018, %7024, %7030, %7036, %7042, %7048, %7054, %7060, %7066, %7072, %7078, %7084, %7090, %7096, %7102, %7108, %7114, %7120, %7126, %7132, %7138, %7144, %7150, %7156, %7162, %7168, %7174, %7180, %7186, %7192, %7198, %7204, %7210, %7216, %7222, %7228, %7234, %7240, %7246, %7252, %7258, %7264, %7270, %7276, %7282, %7288, %7294, %7300, %7306, %7312, %7318, %7324, %7330, %7336, %7342, %7348, %7354, %7360, %7366, %7372, %7378, %7384, %7390, %7396, %7402, %7408, %7414, %7420, %7426, %7432, %7438, %7444, %7450, %7456, %7462, %7468, %7474, %7480, %7486, %7492, %7498, %7504, %7510, %7516, %7522, %10586, %1894, %1889, %1887, %1889, %1889 : tensor<i32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<i32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<30522x768xf32>, tensor<512x768xf32>, tensor<2x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<3072x768xf32>, tensor<3072xf32>, tensor<768x3072xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768x768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<768xf32>, tensor<30522xf32>, tensor<i32>, tensor<i32>, tensor<i32>, tensor<f32>, tensor<i32>, tensor<i32>
  }
  func.func private @_var(%arg0: tensor<64x512x768xf32>, %arg1: tensor<i32>) -> (tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>) {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.reduce(%arg0 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_0 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %3 = stablehlo.divide %1, %2 : tensor<64x512x1xf32>
    %4 = stablehlo.broadcast_in_dim %3, dims = [0, 1, 2] : (tensor<64x512x1xf32>) -> tensor<64x512x768xf32>
    %5 = stablehlo.subtract %arg0, %4 : tensor<64x512x768xf32>
    %6 = stablehlo.multiply %5, %5 : tensor<64x512x768xf32>
    %cst_1 = stablehlo.constant dense<2.000000e+00> : tensor<f32>
    %7 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x768xf32>
    %8 = stablehlo.multiply %7, %5 : tensor<64x512x768xf32>
    %9 = stablehlo.convert %arg1 : (tensor<i32>) -> tensor<f32>
    %10 = stablehlo.subtract %cst_0, %9 : tensor<f32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %11 = stablehlo.reduce(%6 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %12 = stablehlo.broadcast_in_dim %11, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %13 = stablehlo.broadcast_in_dim %10, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %14 = stablehlo.divide %12, %13 : tensor<64x512x1xf32>
    %cst_3 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %15 = stablehlo.compare  GT, %10, %cst_3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
    %cst_4 = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %16 = call @_where(%15, %14, %cst_4) : (tensor<i1>, tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512x1xf32>
    return %16, %8, %10, %15 : tensor<64x512x1xf32>, tensor<64x512x768xf32>, tensor<f32>, tensor<i1>
  }
  func.func private @_where(%arg0: tensor<i1>, %arg1: tensor<64x512x1xf32>, %arg2: tensor<f32>) -> tensor<64x512x1xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<i1>, tensor<64x512x1xf32>
    return %2 : tensor<64x512x1xf32>
  }
  func.func private @_where_33(%arg0: tensor<64x512x1x512xi1>, %arg1: tensor<64x512x12x512xf32>, %arg2: tensor<f32>) -> (tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>) {
    %0 = stablehlo.broadcast_in_dim %arg0, dims = [0, 1, 2, 3] : (tensor<64x512x1x512xi1>) -> tensor<64x512x12x512xi1>
    %1 = stablehlo.broadcast_in_dim %arg2, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %2 = stablehlo.select %0, %arg1, %1 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>
    return %2, %0 : tensor<64x512x12x512xf32>, tensor<64x512x12x512xi1>
  }
  func.func private @_where_71(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xi32>, %arg2: tensor<i32>) -> tensor<64x512xi32> {
    %0 = stablehlo.convert %arg2 : tensor<i32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<i32>) -> tensor<64x512xi32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xi32>
    return %2 : tensor<64x512xi32>
  }
  func.func private @take_along_axis(%arg0: tensor<64x512x30522xf32>, %arg1: tensor<64x512x1xi32>) -> (tensor<64x512x1xf32>, tensor<64x512x1x1xi32>) {
    %c = stablehlo.constant dense<0> : tensor<i32>
    %0 = stablehlo.broadcast_in_dim %c, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %1 = stablehlo.compare  LT, %arg1, %0,  SIGNED : (tensor<64x512x1xi32>, tensor<64x512x1xi32>) -> tensor<64x512x1xi1>
    %c_0 = stablehlo.constant dense<30522> : tensor<i32>
    %2 = stablehlo.broadcast_in_dim %c_0, dims = [] : (tensor<i32>) -> tensor<64x512x1xi32>
    %3 = stablehlo.add %arg1, %2 : tensor<64x512x1xi32>
    %4 = stablehlo.select %1, %3, %arg1 : tensor<64x512x1xi1>, tensor<64x512x1xi32>
    %5 = stablehlo.reshape %4 : (tensor<64x512x1xi32>) -> tensor<64x512x1x1xi32>
    %c_1 = stablehlo.constant dense<30521> : tensor<1xi32>
    %c_2 = stablehlo.constant dense<0> : tensor<i32>
    %6 = stablehlo.broadcast_in_dim %c_2, dims = [] : (tensor<i32>) -> tensor<64x512x1x1xi32>
    %7 = stablehlo.compare  GE, %5, %6,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %8 = stablehlo.broadcast_in_dim %c_1, dims = [3] : (tensor<1xi32>) -> tensor<1x1x1x1xi32>
    %9 = stablehlo.broadcast_in_dim %8, dims = [0, 1, 2, 3] : (tensor<1x1x1x1xi32>) -> tensor<64x512x1x1xi32>
    %10 = stablehlo.compare  LE, %5, %9,  SIGNED : (tensor<64x512x1x1xi32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1x1xi1>
    %11 = stablehlo.and %7, %10 : tensor<64x512x1x1xi1>
    %c_3 = stablehlo.constant dense<true> : tensor<i1>
    %12 = stablehlo.reduce(%11 init: %c_3) applies stablehlo.and across dimensions = [3] : (tensor<64x512x1x1xi1>, tensor<i1>) -> tensor<64x512x1xi1>
    %13 = "stablehlo.gather"(%arg0, %5) <{dimension_numbers = #stablehlo.gather<collapsed_slice_dims = [2], operand_batching_dims = [0, 1], start_indices_batching_dims = [0, 1], start_index_map = [2], index_vector_dim = 3>, indices_are_sorted = false, slice_sizes = array<i64: 1, 1, 1>}> : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>) -> tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0x7FC00000> : tensor<f32>
    %14 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %15 = stablehlo.select %12, %13, %14 : tensor<64x512x1xi1>, tensor<64x512x1xf32>
    return %15, %5 : tensor<64x512x1xf32>, tensor<64x512x1x1xi32>
  }
  func.func private @_where_88(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>, %arg2: tensor<f32>) -> tensor<64x512xf32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.broadcast_in_dim %0, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %2 = stablehlo.select %arg0, %arg1, %1 : tensor<64x512xi1>, tensor<64x512xf32>
    return %2 : tensor<64x512xf32>
  }
  func.func private @argmax(%arg0: tensor<64x512x30522xf32>) -> tensor<64x512xi32> {
    %0 = stablehlo.iota dim = 2 : tensor<64x512x30522xi32>
    %cst = stablehlo.constant dense<0xFF800000> : tensor<f32>
    %c = stablehlo.constant dense<0> : tensor<i32>
    %1:2 = stablehlo.reduce(%arg0 init: %cst), (%0 init: %c) across dimensions = [2] : (tensor<64x512x30522xf32>, tensor<64x512x30522xi32>, tensor<f32>, tensor<i32>) -> (tensor<64x512xf32>, tensor<64x512xi32>)
     reducer(%arg1: tensor<f32>, %arg3: tensor<f32>) (%arg2: tensor<i32>, %arg4: tensor<i32>)  {
      %2 = stablehlo.compare  GT, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %3 = stablehlo.compare  NE, %arg1, %arg1,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %4 = stablehlo.or %2, %3 : tensor<i1>
      %5 = stablehlo.compare  EQ, %arg1, %arg3,  FLOAT : (tensor<f32>, tensor<f32>) -> tensor<i1>
      %6 = stablehlo.compare  LT, %arg2, %arg4,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1>
      %7 = stablehlo.and %5, %6 : tensor<i1>
      %8 = stablehlo.or %4, %7 : tensor<i1>
      %9 = stablehlo.select %4, %arg1, %arg3 : tensor<i1>, tensor<f32>
      %10 = stablehlo.select %8, %arg2, %arg4 : tensor<i1>, tensor<i32>
      stablehlo.return %9, %10 : tensor<f32>, tensor<i32>
    }
    return %1#1 : tensor<64x512xi32>
  }
  func.func private @_where_104(%arg0: tensor<64x512xi1>, %arg1: tensor<64x512xf32>) -> tensor<64x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512xi1>, tensor<64x512xf32>
    return %1 : tensor<64x512xf32>
  }
  func.func private @take_along_axis_105(%arg0: tensor<64x512x1x1xi32>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x30522xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x30522xf32>
    %1 = "stablehlo.scatter"(%0, %arg0, %arg1) <{indices_are_sorted = false, scatter_dimension_numbers = #stablehlo.scatter<inserted_window_dims = [2], input_batching_dims = [0, 1], scatter_indices_batching_dims = [0, 1], scatter_dims_to_operand_dims = [2], index_vector_dim = 3>, unique_indices = false}> ({
    ^bb0(%arg2: tensor<f32>, %arg3: tensor<f32>):
      %2 = stablehlo.add %arg2, %arg3 : tensor<f32>
      stablehlo.return %2 : tensor<f32>
    }) : (tensor<64x512x30522xf32>, tensor<64x512x1x1xi32>, tensor<64x512x1xf32>) -> tensor<64x512x30522xf32>
    return %1 : tensor<64x512x30522xf32>
  }
  func.func private @_var_122(%arg0: tensor<64x512x768xf32>, %arg1: tensor<f32>, %arg2: tensor<i1>, %arg3: tensor<64x512x1xf32>) -> tensor<64x512x768xf32> {
    %0 = call @_where_123(%arg2, %arg3) : (tensor<i1>, tensor<64x512x1xf32>) -> tensor<64x512x1xf32>
    %1 = stablehlo.broadcast_in_dim %arg1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %2 = stablehlo.divide %0, %1 : tensor<64x512x1xf32>
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3 = stablehlo.reduce(%2 init: %cst) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %4 = stablehlo.broadcast_in_dim %3, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %5 = stablehlo.multiply %4, %arg0 : tensor<64x512x768xf32>
    %6 = stablehlo.negate %5 : tensor<64x512x768xf32>
    %cst_0 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %7 = stablehlo.reduce(%6 init: %cst_0) applies stablehlo.add across dimensions = [2] : (tensor<64x512x768xf32>, tensor<f32>) -> tensor<64x512xf32>
    %8 = stablehlo.reshape %7 : (tensor<64x512xf32>) -> tensor<64x512x1xf32>
    %cst_1 = stablehlo.constant dense<7.680000e+02> : tensor<f32>
    %9 = stablehlo.broadcast_in_dim %cst_1, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %10 = stablehlo.divide %8, %9 : tensor<64x512x1xf32>
    %cst_2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %11 = stablehlo.reduce(%10 init: %cst_2) applies stablehlo.add across dimensions = [2] : (tensor<64x512x1xf32>, tensor<f32>) -> tensor<64x512xf32>
    %12 = stablehlo.broadcast_in_dim %11, dims = [0, 1] : (tensor<64x512xf32>) -> tensor<64x512x768xf32>
    %13 = stablehlo.add %5, %12 : tensor<64x512x768xf32>
    return %13 : tensor<64x512x768xf32>
  }
  func.func private @_where_123(%arg0: tensor<i1>, %arg1: tensor<64x512x1xf32>) -> tensor<64x512x1xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x1xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<64x512x1xf32>
    return %1 : tensor<64x512x1xf32>
  }
  func.func private @_where_149(%arg0: tensor<64x512x12x512xi1>, %arg1: tensor<64x512x12x512xf32>) -> tensor<64x512x12x512xf32> {
    %cst = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %0 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<64x512x12x512xf32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<64x512x12x512xi1>, tensor<64x512x12x512xf32>
    return %1 : tensor<64x512x12x512xf32>
  }
  func.func private @_where_249(%arg0: tensor<i1>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.select %arg0, %arg1, %arg2 : tensor<i1>, tensor<i32>
    return %0 : tensor<i32>
  }
  func.func private @clip(%arg0: tensor<i32>, %arg1: tensor<i32>, %arg2: tensor<i32>) -> tensor<i32> {
    %0 = stablehlo.convert %arg1 : tensor<i32>
    %1 = stablehlo.maximum %0, %arg0 : tensor<i32>
    %2 = stablehlo.convert %arg2 : tensor<i32>
    %3 = stablehlo.minimum %2, %1 : tensor<i32>
    return %3 : tensor<i32>
  }
  func.func private @_where_293(%arg0: tensor<i1>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<f32> {
    %0 = stablehlo.convert %arg2 : tensor<f32>
    %1 = stablehlo.select %arg0, %arg1, %0 : tensor<i1>, tensor<f32>
    return %1 : tensor<f32>
  }
}
