BufferAssignment:
allocation 0: size 4, output shape is |f32[]|, maybe-live-out:
 value: <2 div.3 @0> (size=4,offset=0): f32[]
allocation 1: size 4, parameter 0, shape |f32[]| at ShapeIndex {}:
 value: <0 x1.1 @0> (size=4,offset=0): f32[]
allocation 2: size 4, parameter 1, shape |f32[]| at ShapeIndex {}:
 value: <1 x2.2 @0> (size=4,offset=0): f32[]

Total bytes used: 12 (12B)

Used values:
<0 x1.1 @0>
 positions:
  x1.1
 uses:
  div.3, operand 0
 from instruction: %x1.1 = f32[] parameter(0), metadata={op_name="x1"}
<1 x2.2 @0>
 positions:
  x2.2
 uses:
  div.3, operand 1
 from instruction: %x2.2 = f32[] parameter(1), metadata={op_name="x2"}
<2 div.3 @0>
 positions:
  div.3
 uses:
 from instruction: %div.3 = f32[] divide(%x1.1, %x2.2), metadata={op_name="jit(true_divide)/div" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}


HloLiveRange (max 3):
  InstructionSequence:
    0:x1.1
    1:x2.2
    2:div.3
  BufferLiveRange:
    x1.1{}:0-3
    x2.2{}:0-3
    div.3{}:2-3
  Live ranges at 2 (peak):
    div.3{}: 4 bytes (cumulative: 4 bytes)
    x1.1{}: 4 bytes (cumulative: 8 bytes)
    x2.2{}: 4 bytes (cumulative: 12 bytes)
  Stack trace breakdown for peak usage: 12 bytes
    main.4 (100.0%, total: 12 bytes, current: 0 bytes, remaining: 12 bytes)
      ├── jit(true_divide)/div (33.3%, total: 4 bytes, current: 4 bytes, remaining: 8 bytes)
      ├── x1 (33.3%, total: 4 bytes, current: 4 bytes, remaining: 4 bytes)
      └── x2 (33.3%, total: 4 bytes, current: 4 bytes, remaining: 0 bytes)
