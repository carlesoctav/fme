; ModuleID = '__compute_module_broadcast_add_fusion.1_kernel_module'
source_filename = "__compute_module_broadcast_add_fusion.1_kernel_module"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind uwtable
define noalias noundef ptr @broadcast_add_fusion.1(ptr readonly captures(none) %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8, !invariant.load !3
  %4 = load ptr, ptr %3, align 8, !invariant.load !3, !dereferenceable !4
  %5 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %6 = load ptr, ptr %5, align 8, !invariant.load !3, !dereferenceable !5
  %7 = getelementptr inbounds nuw i8, ptr %3, i64 32
  %8 = load ptr, ptr %7, align 8, !invariant.load !3, !dereferenceable !6
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 48
  %10 = load ptr, ptr %9, align 8, !invariant.load !3, !dereferenceable !6
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 64
  %12 = load ptr, ptr %11, align 8, !invariant.load !3, !dereferenceable !6
  tail call void @llvm.experimental.noalias.scope.decl(metadata !7)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !10)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !12)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !14)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !16)
  %13 = load i32, ptr %6, align 4, !invariant.load !3, !alias.scope !10, !noalias !18
  %.fr5 = freeze i32 %13
  %14 = sub i32 32, %.fr5
  %15 = icmp ult i32 %.fr5, 32
  %16 = icmp ult i32 %14, 32
  %17 = getelementptr inbounds nuw i8, ptr %6, i64 4
  %18 = load i32, ptr %17, align 4, !invariant.load !3, !alias.scope !10, !noalias !18
  %19 = sub i32 32, %18
  %20 = icmp ult i32 %18, 32
  %21 = icmp ult i32 %19, 32
  %22 = getelementptr inbounds nuw i8, ptr %6, i64 8
  %23 = load i32, ptr %22, align 4, !invariant.load !3, !alias.scope !10, !noalias !18
  %24 = sub i32 32, %23
  %25 = icmp ult i32 %23, 32
  %26 = icmp ult i32 %24, 32
  %27 = load i32, ptr %4, align 4, !invariant.load !3, !alias.scope !7, !noalias !21
  br i1 %15, label %.split.us.us, label %.split

.split.us.us:                                     ; preds = %1, %.split.us.us
  %28 = phi i64 [ %253, %.split.us.us ], [ 0, %1 ]
  %29 = shl nuw nsw i64 %28, 3
  %30 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %29
  %31 = load i32, ptr %30, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %32 = shl i32 %31, %.fr5
  %33 = lshr i32 %31, %14
  %34 = select i1 %16, i32 %33, i32 0
  %35 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %29
  %36 = load i32, ptr %35, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %37 = or i32 %32, %34
  %38 = add i32 %36, %31
  %39 = xor i32 %37, %38
  %40 = shl i32 %39, %18
  %41 = select i1 %20, i32 %40, i32 0
  %42 = lshr i32 %39, %19
  %43 = select i1 %21, i32 %42, i32 0
  %44 = or i32 %41, %43
  %45 = add i32 %39, %38
  %46 = xor i32 %44, %45
  %47 = shl i32 %46, %23
  %48 = select i1 %25, i32 %47, i32 0
  %49 = lshr i32 %46, %24
  %50 = select i1 %26, i32 %49, i32 0
  %51 = or i32 %48, %50
  %52 = add i32 %46, %45
  %53 = xor i32 %51, %52
  %54 = add i32 %52, %27
  %55 = add i32 %54, %53
  %56 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %29
  store i32 %55, ptr %56, align 4, !alias.scope !24, !noalias !25
  %57 = or disjoint i64 %29, 1
  %58 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %57
  %59 = load i32, ptr %58, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %60 = shl i32 %59, %.fr5
  %61 = lshr i32 %59, %14
  %62 = select i1 %16, i32 %61, i32 0
  %63 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %57
  %64 = load i32, ptr %63, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %65 = or i32 %60, %62
  %66 = add i32 %64, %59
  %67 = xor i32 %65, %66
  %68 = shl i32 %67, %18
  %69 = select i1 %20, i32 %68, i32 0
  %70 = lshr i32 %67, %19
  %71 = select i1 %21, i32 %70, i32 0
  %72 = or i32 %69, %71
  %73 = add i32 %67, %66
  %74 = xor i32 %72, %73
  %75 = shl i32 %74, %23
  %76 = select i1 %25, i32 %75, i32 0
  %77 = lshr i32 %74, %24
  %78 = select i1 %26, i32 %77, i32 0
  %79 = or i32 %76, %78
  %80 = add i32 %74, %73
  %81 = xor i32 %79, %80
  %82 = add i32 %80, %27
  %83 = add i32 %82, %81
  %84 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %57
  store i32 %83, ptr %84, align 4, !alias.scope !24, !noalias !25
  %85 = or disjoint i64 %29, 2
  %86 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %85
  %87 = load i32, ptr %86, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %88 = shl i32 %87, %.fr5
  %89 = lshr i32 %87, %14
  %90 = select i1 %16, i32 %89, i32 0
  %91 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %85
  %92 = load i32, ptr %91, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %93 = or i32 %88, %90
  %94 = add i32 %92, %87
  %95 = xor i32 %93, %94
  %96 = shl i32 %95, %18
  %97 = select i1 %20, i32 %96, i32 0
  %98 = lshr i32 %95, %19
  %99 = select i1 %21, i32 %98, i32 0
  %100 = or i32 %97, %99
  %101 = add i32 %95, %94
  %102 = xor i32 %100, %101
  %103 = shl i32 %102, %23
  %104 = select i1 %25, i32 %103, i32 0
  %105 = lshr i32 %102, %24
  %106 = select i1 %26, i32 %105, i32 0
  %107 = or i32 %104, %106
  %108 = add i32 %102, %101
  %109 = xor i32 %107, %108
  %110 = add i32 %108, %27
  %111 = add i32 %110, %109
  %112 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %85
  store i32 %111, ptr %112, align 4, !alias.scope !24, !noalias !25
  %113 = or disjoint i64 %29, 3
  %114 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %113
  %115 = load i32, ptr %114, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %116 = shl i32 %115, %.fr5
  %117 = lshr i32 %115, %14
  %118 = select i1 %16, i32 %117, i32 0
  %119 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %113
  %120 = load i32, ptr %119, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %121 = or i32 %116, %118
  %122 = add i32 %120, %115
  %123 = xor i32 %121, %122
  %124 = shl i32 %123, %18
  %125 = select i1 %20, i32 %124, i32 0
  %126 = lshr i32 %123, %19
  %127 = select i1 %21, i32 %126, i32 0
  %128 = or i32 %125, %127
  %129 = add i32 %123, %122
  %130 = xor i32 %128, %129
  %131 = shl i32 %130, %23
  %132 = select i1 %25, i32 %131, i32 0
  %133 = lshr i32 %130, %24
  %134 = select i1 %26, i32 %133, i32 0
  %135 = or i32 %132, %134
  %136 = add i32 %130, %129
  %137 = xor i32 %135, %136
  %138 = add i32 %136, %27
  %139 = add i32 %138, %137
  %140 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %113
  store i32 %139, ptr %140, align 4, !alias.scope !24, !noalias !25
  %141 = or disjoint i64 %29, 4
  %142 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %141
  %143 = load i32, ptr %142, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %144 = shl i32 %143, %.fr5
  %145 = lshr i32 %143, %14
  %146 = select i1 %16, i32 %145, i32 0
  %147 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %141
  %148 = load i32, ptr %147, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %149 = or i32 %144, %146
  %150 = add i32 %148, %143
  %151 = xor i32 %149, %150
  %152 = shl i32 %151, %18
  %153 = select i1 %20, i32 %152, i32 0
  %154 = lshr i32 %151, %19
  %155 = select i1 %21, i32 %154, i32 0
  %156 = or i32 %153, %155
  %157 = add i32 %151, %150
  %158 = xor i32 %156, %157
  %159 = shl i32 %158, %23
  %160 = select i1 %25, i32 %159, i32 0
  %161 = lshr i32 %158, %24
  %162 = select i1 %26, i32 %161, i32 0
  %163 = or i32 %160, %162
  %164 = add i32 %158, %157
  %165 = xor i32 %163, %164
  %166 = add i32 %164, %27
  %167 = add i32 %166, %165
  %168 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %141
  store i32 %167, ptr %168, align 4, !alias.scope !24, !noalias !25
  %169 = or disjoint i64 %29, 5
  %170 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %169
  %171 = load i32, ptr %170, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %172 = shl i32 %171, %.fr5
  %173 = lshr i32 %171, %14
  %174 = select i1 %16, i32 %173, i32 0
  %175 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %169
  %176 = load i32, ptr %175, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %177 = or i32 %172, %174
  %178 = add i32 %176, %171
  %179 = xor i32 %177, %178
  %180 = shl i32 %179, %18
  %181 = select i1 %20, i32 %180, i32 0
  %182 = lshr i32 %179, %19
  %183 = select i1 %21, i32 %182, i32 0
  %184 = or i32 %181, %183
  %185 = add i32 %179, %178
  %186 = xor i32 %184, %185
  %187 = shl i32 %186, %23
  %188 = select i1 %25, i32 %187, i32 0
  %189 = lshr i32 %186, %24
  %190 = select i1 %26, i32 %189, i32 0
  %191 = or i32 %188, %190
  %192 = add i32 %186, %185
  %193 = xor i32 %191, %192
  %194 = add i32 %192, %27
  %195 = add i32 %194, %193
  %196 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %169
  store i32 %195, ptr %196, align 4, !alias.scope !24, !noalias !25
  %197 = or disjoint i64 %29, 6
  %198 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %197
  %199 = load i32, ptr %198, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %200 = shl i32 %199, %.fr5
  %201 = lshr i32 %199, %14
  %202 = select i1 %16, i32 %201, i32 0
  %203 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %197
  %204 = load i32, ptr %203, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %205 = or i32 %200, %202
  %206 = add i32 %204, %199
  %207 = xor i32 %205, %206
  %208 = shl i32 %207, %18
  %209 = select i1 %20, i32 %208, i32 0
  %210 = lshr i32 %207, %19
  %211 = select i1 %21, i32 %210, i32 0
  %212 = or i32 %209, %211
  %213 = add i32 %207, %206
  %214 = xor i32 %212, %213
  %215 = shl i32 %214, %23
  %216 = select i1 %25, i32 %215, i32 0
  %217 = lshr i32 %214, %24
  %218 = select i1 %26, i32 %217, i32 0
  %219 = or i32 %216, %218
  %220 = add i32 %214, %213
  %221 = xor i32 %219, %220
  %222 = add i32 %220, %27
  %223 = add i32 %222, %221
  %224 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %197
  store i32 %223, ptr %224, align 4, !alias.scope !24, !noalias !25
  %225 = or disjoint i64 %29, 7
  %226 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %225
  %227 = load i32, ptr %226, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %228 = shl i32 %227, %.fr5
  %229 = lshr i32 %227, %14
  %230 = select i1 %16, i32 %229, i32 0
  %231 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %225
  %232 = load i32, ptr %231, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %233 = or i32 %228, %230
  %234 = add i32 %232, %227
  %235 = xor i32 %233, %234
  %236 = shl i32 %235, %18
  %237 = select i1 %20, i32 %236, i32 0
  %238 = lshr i32 %235, %19
  %239 = select i1 %21, i32 %238, i32 0
  %240 = or i32 %237, %239
  %241 = add i32 %235, %234
  %242 = xor i32 %240, %241
  %243 = shl i32 %242, %23
  %244 = select i1 %25, i32 %243, i32 0
  %245 = lshr i32 %242, %24
  %246 = select i1 %26, i32 %245, i32 0
  %247 = or i32 %244, %246
  %248 = add i32 %242, %241
  %249 = xor i32 %247, %248
  %250 = add i32 %248, %27
  %251 = add i32 %250, %249
  %252 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %225
  store i32 %251, ptr %252, align 4, !alias.scope !24, !noalias !25
  %253 = add nuw nsw i64 %28, 1
  %exitcond8.not = icmp eq i64 %253, 12
  br i1 %exitcond8.not, label %broadcast_add_fusion.1_wrapped.exit, label %.split.us.us, !llvm.loop !26

.split:                                           ; preds = %1, %.split
  %254 = phi i64 [ %463, %.split ], [ 0, %1 ]
  %255 = shl nuw nsw i64 %254, 3
  %256 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %255
  %257 = load i32, ptr %256, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %258 = lshr i32 %257, %14
  %259 = select i1 %16, i32 %258, i32 0
  %260 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %255
  %261 = load i32, ptr %260, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %262 = add i32 %261, %257
  %263 = xor i32 %259, %262
  %264 = shl i32 %263, %18
  %265 = select i1 %20, i32 %264, i32 0
  %266 = lshr i32 %263, %19
  %267 = select i1 %21, i32 %266, i32 0
  %268 = or i32 %265, %267
  %269 = add i32 %263, %262
  %270 = xor i32 %268, %269
  %271 = shl i32 %270, %23
  %272 = select i1 %25, i32 %271, i32 0
  %273 = lshr i32 %270, %24
  %274 = select i1 %26, i32 %273, i32 0
  %275 = or i32 %272, %274
  %276 = add i32 %270, %269
  %277 = xor i32 %275, %276
  %278 = add i32 %276, %27
  %279 = add i32 %278, %277
  %280 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %255
  store i32 %279, ptr %280, align 4, !alias.scope !24, !noalias !25
  %281 = or disjoint i64 %255, 1
  %282 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %281
  %283 = load i32, ptr %282, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %284 = lshr i32 %283, %14
  %285 = select i1 %16, i32 %284, i32 0
  %286 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %281
  %287 = load i32, ptr %286, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %288 = add i32 %287, %283
  %289 = xor i32 %285, %288
  %290 = shl i32 %289, %18
  %291 = select i1 %20, i32 %290, i32 0
  %292 = lshr i32 %289, %19
  %293 = select i1 %21, i32 %292, i32 0
  %294 = or i32 %291, %293
  %295 = add i32 %289, %288
  %296 = xor i32 %294, %295
  %297 = shl i32 %296, %23
  %298 = select i1 %25, i32 %297, i32 0
  %299 = lshr i32 %296, %24
  %300 = select i1 %26, i32 %299, i32 0
  %301 = or i32 %298, %300
  %302 = add i32 %296, %295
  %303 = xor i32 %301, %302
  %304 = add i32 %302, %27
  %305 = add i32 %304, %303
  %306 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %281
  store i32 %305, ptr %306, align 4, !alias.scope !24, !noalias !25
  %307 = or disjoint i64 %255, 2
  %308 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %307
  %309 = load i32, ptr %308, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %310 = lshr i32 %309, %14
  %311 = select i1 %16, i32 %310, i32 0
  %312 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %307
  %313 = load i32, ptr %312, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %314 = add i32 %313, %309
  %315 = xor i32 %311, %314
  %316 = shl i32 %315, %18
  %317 = select i1 %20, i32 %316, i32 0
  %318 = lshr i32 %315, %19
  %319 = select i1 %21, i32 %318, i32 0
  %320 = or i32 %317, %319
  %321 = add i32 %315, %314
  %322 = xor i32 %320, %321
  %323 = shl i32 %322, %23
  %324 = select i1 %25, i32 %323, i32 0
  %325 = lshr i32 %322, %24
  %326 = select i1 %26, i32 %325, i32 0
  %327 = or i32 %324, %326
  %328 = add i32 %322, %321
  %329 = xor i32 %327, %328
  %330 = add i32 %328, %27
  %331 = add i32 %330, %329
  %332 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %307
  store i32 %331, ptr %332, align 4, !alias.scope !24, !noalias !25
  %333 = or disjoint i64 %255, 3
  %334 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %333
  %335 = load i32, ptr %334, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %336 = lshr i32 %335, %14
  %337 = select i1 %16, i32 %336, i32 0
  %338 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %333
  %339 = load i32, ptr %338, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %340 = add i32 %339, %335
  %341 = xor i32 %337, %340
  %342 = shl i32 %341, %18
  %343 = select i1 %20, i32 %342, i32 0
  %344 = lshr i32 %341, %19
  %345 = select i1 %21, i32 %344, i32 0
  %346 = or i32 %343, %345
  %347 = add i32 %341, %340
  %348 = xor i32 %346, %347
  %349 = shl i32 %348, %23
  %350 = select i1 %25, i32 %349, i32 0
  %351 = lshr i32 %348, %24
  %352 = select i1 %26, i32 %351, i32 0
  %353 = or i32 %350, %352
  %354 = add i32 %348, %347
  %355 = xor i32 %353, %354
  %356 = add i32 %354, %27
  %357 = add i32 %356, %355
  %358 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %333
  store i32 %357, ptr %358, align 4, !alias.scope !24, !noalias !25
  %359 = or disjoint i64 %255, 4
  %360 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %359
  %361 = load i32, ptr %360, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %362 = lshr i32 %361, %14
  %363 = select i1 %16, i32 %362, i32 0
  %364 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %359
  %365 = load i32, ptr %364, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %366 = add i32 %365, %361
  %367 = xor i32 %363, %366
  %368 = shl i32 %367, %18
  %369 = select i1 %20, i32 %368, i32 0
  %370 = lshr i32 %367, %19
  %371 = select i1 %21, i32 %370, i32 0
  %372 = or i32 %369, %371
  %373 = add i32 %367, %366
  %374 = xor i32 %372, %373
  %375 = shl i32 %374, %23
  %376 = select i1 %25, i32 %375, i32 0
  %377 = lshr i32 %374, %24
  %378 = select i1 %26, i32 %377, i32 0
  %379 = or i32 %376, %378
  %380 = add i32 %374, %373
  %381 = xor i32 %379, %380
  %382 = add i32 %380, %27
  %383 = add i32 %382, %381
  %384 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %359
  store i32 %383, ptr %384, align 4, !alias.scope !24, !noalias !25
  %385 = or disjoint i64 %255, 5
  %386 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %385
  %387 = load i32, ptr %386, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %388 = lshr i32 %387, %14
  %389 = select i1 %16, i32 %388, i32 0
  %390 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %385
  %391 = load i32, ptr %390, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %392 = add i32 %391, %387
  %393 = xor i32 %389, %392
  %394 = shl i32 %393, %18
  %395 = select i1 %20, i32 %394, i32 0
  %396 = lshr i32 %393, %19
  %397 = select i1 %21, i32 %396, i32 0
  %398 = or i32 %395, %397
  %399 = add i32 %393, %392
  %400 = xor i32 %398, %399
  %401 = shl i32 %400, %23
  %402 = select i1 %25, i32 %401, i32 0
  %403 = lshr i32 %400, %24
  %404 = select i1 %26, i32 %403, i32 0
  %405 = or i32 %402, %404
  %406 = add i32 %400, %399
  %407 = xor i32 %405, %406
  %408 = add i32 %406, %27
  %409 = add i32 %408, %407
  %410 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %385
  store i32 %409, ptr %410, align 4, !alias.scope !24, !noalias !25
  %411 = or disjoint i64 %255, 6
  %412 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %411
  %413 = load i32, ptr %412, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %414 = lshr i32 %413, %14
  %415 = select i1 %16, i32 %414, i32 0
  %416 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %411
  %417 = load i32, ptr %416, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %418 = add i32 %417, %413
  %419 = xor i32 %415, %418
  %420 = shl i32 %419, %18
  %421 = select i1 %20, i32 %420, i32 0
  %422 = lshr i32 %419, %19
  %423 = select i1 %21, i32 %422, i32 0
  %424 = or i32 %421, %423
  %425 = add i32 %419, %418
  %426 = xor i32 %424, %425
  %427 = shl i32 %426, %23
  %428 = select i1 %25, i32 %427, i32 0
  %429 = lshr i32 %426, %24
  %430 = select i1 %26, i32 %429, i32 0
  %431 = or i32 %428, %430
  %432 = add i32 %426, %425
  %433 = xor i32 %431, %432
  %434 = add i32 %432, %27
  %435 = add i32 %434, %433
  %436 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %411
  store i32 %435, ptr %436, align 4, !alias.scope !24, !noalias !25
  %437 = or disjoint i64 %255, 7
  %438 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %437
  %439 = load i32, ptr %438, align 4, !invariant.load !3, !alias.scope !12, !noalias !22
  %440 = lshr i32 %439, %14
  %441 = select i1 %16, i32 %440, i32 0
  %442 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %437
  %443 = load i32, ptr %442, align 4, !invariant.load !3, !alias.scope !14, !noalias !23
  %444 = add i32 %443, %439
  %445 = xor i32 %441, %444
  %446 = shl i32 %445, %18
  %447 = select i1 %20, i32 %446, i32 0
  %448 = lshr i32 %445, %19
  %449 = select i1 %21, i32 %448, i32 0
  %450 = or i32 %447, %449
  %451 = add i32 %445, %444
  %452 = xor i32 %450, %451
  %453 = shl i32 %452, %23
  %454 = select i1 %25, i32 %453, i32 0
  %455 = lshr i32 %452, %24
  %456 = select i1 %26, i32 %455, i32 0
  %457 = or i32 %454, %456
  %458 = add i32 %452, %451
  %459 = xor i32 %457, %458
  %460 = add i32 %458, %27
  %461 = add i32 %460, %459
  %462 = getelementptr inbounds nuw [96 x i32], ptr %12, i64 0, i64 %437
  store i32 %461, ptr %462, align 4, !alias.scope !24, !noalias !25
  %463 = add nuw nsw i64 %254, 1
  %exitcond.not = icmp eq i64 %463, 12
  br i1 %exitcond.not, label %broadcast_add_fusion.1_wrapped.exit, label %.split

broadcast_add_fusion.1_wrapped.exit:              ; preds = %.split, %.split.us.us
  ret ptr null
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #1

attributes #0 = { nofree norecurse nosync nounwind uwtable "frame-pointer"="all" "prefer-vector-width"="256" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }

!llvm.module.flags = !{!0, !1}
!xla_cpu_memory_region_name = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"xla_dylib_index", i64 7}
!2 = !{!"xla_cpu_emitter__loop_fusion_kernel_emitter__hlo_opcode__fusion"}
!3 = !{}
!4 = !{i64 4}
!5 = !{i64 16}
!6 = !{i64 384}
!7 = !{!8}
!8 = distinct !{!8, !9, !"broadcast_add_fusion.1_wrapped: argument 0"}
!9 = distinct !{!9, !"broadcast_add_fusion.1_wrapped"}
!10 = !{!11}
!11 = distinct !{!11, !9, !"broadcast_add_fusion.1_wrapped: argument 1"}
!12 = !{!13}
!13 = distinct !{!13, !9, !"broadcast_add_fusion.1_wrapped: argument 2"}
!14 = !{!15}
!15 = distinct !{!15, !9, !"broadcast_add_fusion.1_wrapped: argument 3"}
!16 = !{!17}
!17 = distinct !{!17, !9, !"broadcast_add_fusion.1_wrapped: argument 4"}
!18 = !{!19, !8, !13, !15, !17}
!19 = distinct !{!19, !20, !"xla.slice_index=4"}
!20 = distinct !{!20}
!21 = !{!19, !11, !13, !15, !17}
!22 = !{!19, !8, !11, !15, !17}
!23 = !{!19, !8, !11, !13, !17}
!24 = !{!19, !17}
!25 = !{!8, !11, !13, !15}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unswitch.nontrivial.disable"}
