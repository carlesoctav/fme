BufferAssignment:
allocation 0: size 384, output shape is |f32[12,8]|, maybe-live-out:
 value: <1 lt.1 @0> (size=1,offset=0): pred[]
 value: <91 copy.11 @0> (size=384,offset=0): u32[12,8]{1,0}
 value: <262 broadcast_multiply_fusion @0> (size=384,offset=0): f32[12,8]{1,0}
allocation 1: size 4, constant:
 value: <87 constant.100 @0> (size=4,offset=0): s32[]
allocation 2: size 16, constant:
 value: <257 constant.37 @0> (size=16,offset=0): u32[4]{0}
allocation 3: size 16, constant:
 value: <259 constant.39 @0> (size=16,offset=0): u32[4]{0}
allocation 4: size 8, parameter 0, shape |u32[2]| at ShapeIndex {}:
 value: <251 key.1 @0> (size=8,offset=0): u32[2]{0}
allocation 5: size 4, constant:
 value: <249 constant.29 @0> (size=4,offset=0): s32[]
allocation 6: size 4, constant:
 value: <0 constant.99 @0> (size=4,offset=0): s32[]
allocation 7: size 1924, preallocated-temp:
 value: <86 copy.9 @0> (size=4,offset=1536): s32[]
 value: <88 add.65 @0> (size=4,offset=1600): s32[]
 value: <89 copy.12 @0> (size=4,offset=1856): u32[]
 value: <90 copy.15 @0> (size=16,offset=1216): u32[4]{0}
 value: <92 copy.10 @0> (size=384,offset=64): u32[12,8]{1,0}
 value: <93 broadcast_add_fusion.1 @0> (size=384,offset=448): u32[12,8]{1,0}
 value: <94 copy.13 @0> (size=4,offset=1472): u32[]
 value: <95 broadcast_add_fusion @0> (size=384,offset=832): u32[12,8]{1,0}
 value: <96 copy.20 @0> (size=4,offset=1664): u32[]
 value: <97 copy.14 @0> (size=4,offset=1920): u32[]
 value: <98 copy.21 @0> (size=4,offset=1728): u32[]
 value: <99 copy.22 @0> (size=4,offset=1792): u32[]
 value: <100 copy.16 @0> (size=16,offset=1280): u32[4]{0}
 value: <101 copy.23 @0> (size=16,offset=1344): u32[4]{0}
 value: <102 copy.24 @0> (size=16,offset=1408): u32[4]{0}
 value: <103 tuple.15{} @0> (size=64,offset=0): (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <250 copy.25 @0> (size=4,offset=1600): s32[]
 value: <252 broadcast_add_fusion.3 @0> (size=384,offset=448): u32[12,8]{1,0}
 value: <253 broadcast_add_fusion.2 @0> (size=384,offset=832): u32[12,8]{1,0}
 value: <254 slice_bitcast_fusion @0> (size=4,offset=1664): u32[]
 value: <255 xor_xor_fusion @0> (size=4,offset=1728): u32[]
 value: <256 slice_bitcast_fusion.1 @0> (size=4,offset=1792): u32[]
 value: <258 copy.26 @0> (size=16,offset=1344): u32[4]{0}
 value: <260 copy.27 @0> (size=16,offset=1408): u32[4]{0}
 value: <261 tuple.13{} @0> (size=64,offset=0): (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <263 arg_tuple.3{} (phi) @0> (size=64,offset=0): (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <264 arg_tuple.4{} (phi) @0> (size=64,offset=0): (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <265 arg_tuple.3{0} (phi) @0> (size=4,offset=1600): s32[]
 value: <266 arg_tuple.3{1} (phi) @0> (size=384,offset=448): u32[12,8]{1,0}
 value: <267 arg_tuple.3{2} (phi) @0> (size=384,offset=832): u32[12,8]{1,0}
 value: <268 arg_tuple.3{3} (phi) @0> (size=4,offset=1664): u32[]
 value: <269 arg_tuple.3{4} (phi) @0> (size=4,offset=1728): u32[]
 value: <270 arg_tuple.3{5} (phi) @0> (size=4,offset=1792): u32[]
 value: <271 arg_tuple.3{6} (phi) @0> (size=16,offset=1344): u32[4]{0}
 value: <272 arg_tuple.3{7} (phi) @0> (size=16,offset=1408): u32[4]{0}
 value: <273 arg_tuple.4{0} (phi) @0> (size=4,offset=1600): s32[]
 value: <274 arg_tuple.4{1} (phi) @0> (size=384,offset=448): u32[12,8]{1,0}
 value: <275 arg_tuple.4{2} (phi) @0> (size=384,offset=832): u32[12,8]{1,0}
 value: <276 arg_tuple.4{3} (phi) @0> (size=4,offset=1664): u32[]
 value: <277 arg_tuple.4{4} (phi) @0> (size=4,offset=1728): u32[]
 value: <278 arg_tuple.4{5} (phi) @0> (size=4,offset=1792): u32[]
 value: <279 arg_tuple.4{6} (phi) @0> (size=16,offset=1344): u32[4]{0}
 value: <280 arg_tuple.4{7} (phi) @0> (size=16,offset=1408): u32[4]{0}
 value: <281 while.13{} (phi) @0> (size=64,offset=0): (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <282 while.13{0} (phi) @0> (size=4,offset=1600): s32[]
 value: <283 while.13{1} (phi) @0> (size=384,offset=448): u32[12,8]{1,0}
 value: <284 while.13{2} (phi) @0> (size=384,offset=832): u32[12,8]{1,0}
 value: <285 while.13{3} (phi) @0> (size=4,offset=1664): u32[]
 value: <286 while.13{4} (phi) @0> (size=4,offset=1728): u32[]
 value: <287 while.13{5} (phi) @0> (size=4,offset=1792): u32[]
 value: <288 while.13{6} (phi) @0> (size=16,offset=1344): u32[4]{0}
 value: <289 while.13{7} (phi) @0> (size=16,offset=1408): u32[4]{0}

Total bytes used: 2360 (2.3KiB)

Used values:
<0 constant.99 @0>
 positions:
  constant.99
 uses:
  lt.1, operand 1
 from instruction: %constant.99 = s32[] constant(5), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)"}
<1 lt.1 @0>
 positions:
  lt.1
 uses:
 from instruction: %lt.1 = pred[] compare(%get-tuple-element.62, %constant.99), direction=LT, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while/cond/lt" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<86 copy.9 @0>
 positions:
  copy.9
 uses:
  broadcast_add_fusion, operand 4
  add.65, operand 0
 from instruction: %copy.9 = s32[] copy(%get-tuple-element.89)
<87 constant.100 @0>
 positions:
  constant.100
 uses:
  add.65, operand 1
 from instruction: %constant.100 = s32[] constant(1), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)"}
<88 add.65 @0>
 positions:
  add.65
  tuple.15 {0}
 uses:
  tuple.15, operand 0
 from instruction: %add.65 = s32[] add(%copy.9, %constant.100), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while/body/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<89 copy.12 @0>
 positions:
  copy.12
 uses:
  broadcast_add_fusion.1, operand 0
  copy.22, operand 0
 from instruction: %copy.12 = u32[] copy(%get-tuple-element.92)
<90 copy.15 @0>
 positions:
  copy.15
 uses:
  broadcast_add_fusion, operand 1
  copy.24, operand 0
  broadcast_add_fusion.1, operand 1
 from instruction: %copy.15 = u32[4]{0} copy(%get-tuple-element.95)
<91 copy.11 @0>
 positions:
  copy.11
 uses:
  broadcast_add_fusion.1, operand 2
  broadcast_add_fusion, operand 2
 from instruction: %copy.11 = u32[12,8]{1,0} copy(%get-tuple-element.91)
<92 copy.10 @0>
 positions:
  copy.10
 uses:
  broadcast_add_fusion, operand 3
  broadcast_add_fusion.1, operand 3
 from instruction: %copy.10 = u32[12,8]{1,0} copy(%get-tuple-element.90)
<93 broadcast_add_fusion.1 @0>
 positions:
  broadcast_add_fusion.1
  tuple.15 {1}
 uses:
  tuple.15, operand 1
 from instruction: %broadcast_add_fusion.1 = u32[12,8]{1,0} fusion(%copy.12, %copy.15, %copy.11, %copy.10), kind=kLoop, calls=%fused_computation.1, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while/body/closed_call/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<94 copy.13 @0>
 positions:
  copy.13
 uses:
  broadcast_add_fusion, operand 0
  copy.20, operand 0
 from instruction: %copy.13 = u32[] copy(%get-tuple-element.93)
<95 broadcast_add_fusion @0>
 positions:
  broadcast_add_fusion
  tuple.15 {2}
 uses:
  tuple.15, operand 2
 from instruction: %broadcast_add_fusion = u32[12,8]{1,0} fusion(%copy.13, %copy.15, %copy.11, %copy.10, %copy.9), kind=kLoop, calls=%fused_computation, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while/body/closed_call/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<96 copy.20 @0>
 positions:
  copy.20
  tuple.15 {3}
 uses:
  tuple.15, operand 3
 from instruction: %copy.20 = u32[] copy(%copy.13), control-predecessors={%copy.12}
<97 copy.14 @0>
 positions:
  copy.14
 uses:
  copy.21, operand 0
 from instruction: %copy.14 = u32[] copy(%get-tuple-element.94)
<98 copy.21 @0>
 positions:
  copy.21
  tuple.15 {4}
 uses:
  tuple.15, operand 4
 from instruction: %copy.21 = u32[] copy(%copy.14), control-predecessors={%copy.13}
<99 copy.22 @0>
 positions:
  copy.22
  tuple.15 {5}
 uses:
  tuple.15, operand 5
 from instruction: %copy.22 = u32[] copy(%copy.12), control-predecessors={%copy.14}
<100 copy.16 @0>
 positions:
  copy.16
 uses:
  copy.23, operand 0
 from instruction: %copy.16 = u32[4]{0} copy(%get-tuple-element.96)
<101 copy.23 @0>
 positions:
  copy.23
  tuple.15 {6}
 uses:
  tuple.15, operand 6
 from instruction: %copy.23 = u32[4]{0} copy(%copy.16), control-predecessors={%copy.15}
<102 copy.24 @0>
 positions:
  copy.24
  tuple.15 {7}
 uses:
  tuple.15, operand 7
 from instruction: %copy.24 = u32[4]{0} copy(%copy.15), control-predecessors={%copy.16}
<103 tuple.15{} @0>
 positions:
  tuple.15 {}
 uses:
 from instruction: %tuple.15 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) tuple(%add.65, %broadcast_add_fusion.1, %broadcast_add_fusion, %copy.20, %copy.21, /*index=5*/%copy.22, %copy.23, %copy.24)
<249 constant.29 @0>
 positions:
  constant.29
 uses:
  copy.25, operand 0
 from instruction: %constant.29 = s32[] constant(0), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)"}
<250 copy.25 @0>
 positions:
  copy.25
  tuple.13 {0}
 uses:
  while.13, operand 0 {0}
 from instruction: %copy.25 = s32[] copy(%constant.29)
<251 key.1 @0>
 positions:
  key.1
 uses:
  slice_bitcast_fusion, operand 0
  slice_bitcast_fusion.1, operand 0
  xor_xor_fusion, operand 0
  broadcast_add_fusion.2, operand 0
  broadcast_add_fusion.3, operand 0
 from instruction: %key.1 = u32[2]{0} parameter(0), metadata={op_name="key"}
<252 broadcast_add_fusion.3 @0>
 positions:
  broadcast_add_fusion.3
  tuple.13 {1}
 uses:
  while.13, operand 0 {1}
 from instruction: %broadcast_add_fusion.3 = u32[12,8]{1,0} fusion(%key.1), kind=kLoop, calls=%fused_computation.6, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<253 broadcast_add_fusion.2 @0>
 positions:
  broadcast_add_fusion.2
  tuple.13 {2}
 uses:
  while.13, operand 0 {2}
 from instruction: %broadcast_add_fusion.2 = u32[12,8]{1,0} fusion(%key.1), kind=kLoop, calls=%fused_computation.4, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<254 slice_bitcast_fusion @0>
 positions:
  slice_bitcast_fusion
  tuple.13 {3}
 uses:
  while.13, operand 0 {3}
 from instruction: %slice_bitcast_fusion = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.5, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/slice" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<255 xor_xor_fusion @0>
 positions:
  xor_xor_fusion
  tuple.13 {4}
 uses:
  while.13, operand 0 {4}
 from instruction: %xor_xor_fusion = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.3, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/xor" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<256 slice_bitcast_fusion.1 @0>
 positions:
  slice_bitcast_fusion.1
  tuple.13 {5}
 uses:
  while.13, operand 0 {5}
 from instruction: %slice_bitcast_fusion.1 = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.7, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/slice" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<257 constant.37 @0>
 positions:
  constant.37
 uses:
  copy.26, operand 0
 from instruction: %constant.37 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)"}
<258 copy.26 @0>
 positions:
  copy.26
  tuple.13 {6}
 uses:
  while.13, operand 0 {6}
 from instruction: %copy.26 = u32[4]{0} copy(%constant.37)
<259 constant.39 @0>
 positions:
  constant.39
 uses:
  copy.27, operand 0
 from instruction: %constant.39 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)"}
<260 copy.27 @0>
 positions:
  copy.27
  tuple.13 {7}
 uses:
  while.13, operand 0 {7}
 from instruction: %copy.27 = u32[4]{0} copy(%constant.39)
<261 tuple.13{} @0>
 positions:
  tuple.13 {}
 uses:
  while.13, operand 0 {}
 from instruction: %tuple.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) tuple(%copy.25, %broadcast_add_fusion.3, %broadcast_add_fusion.2, %slice_bitcast_fusion, %xor_xor_fusion, /*index=5*/%slice_bitcast_fusion.1, %copy.26, %copy.27)
<262 broadcast_multiply_fusion @0>
 positions:
  broadcast_multiply_fusion
 uses:
 from instruction: %broadcast_multiply_fusion = f32[12,8]{1,0} fusion(%get-tuple-element.2, %get-tuple-element.3), kind=kLoop, calls=%fused_computation.2, metadata={op_name="jit(_normal)/jit(_normal_real)/mul" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}
<263 arg_tuple.3{} (phi) @0>
 positions:
  arg_tuple.3 {}
 uses:
  get-tuple-element.62, operand 0 {}
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<264 arg_tuple.4{} (phi) @0>
 positions:
  arg_tuple.4 {}
 uses:
  get-tuple-element.96, operand 0 {}
  get-tuple-element.95, operand 0 {}
  get-tuple-element.94, operand 0 {}
  get-tuple-element.93, operand 0 {}
  get-tuple-element.92, operand 0 {}
  get-tuple-element.91, operand 0 {}
  get-tuple-element.90, operand 0 {}
  get-tuple-element.89, operand 0 {}
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<265 arg_tuple.3{0} (phi) @0>
 positions:
  arg_tuple.3 {0}
  get-tuple-element.62
 uses:
  lt.1, operand 0
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<266 arg_tuple.3{1} (phi) @0>
 positions:
  arg_tuple.3 {1}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<267 arg_tuple.3{2} (phi) @0>
 positions:
  arg_tuple.3 {2}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<268 arg_tuple.3{3} (phi) @0>
 positions:
  arg_tuple.3 {3}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<269 arg_tuple.3{4} (phi) @0>
 positions:
  arg_tuple.3 {4}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<270 arg_tuple.3{5} (phi) @0>
 positions:
  arg_tuple.3 {5}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<271 arg_tuple.3{6} (phi) @0>
 positions:
  arg_tuple.3 {6}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<272 arg_tuple.3{7} (phi) @0>
 positions:
  arg_tuple.3 {7}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<273 arg_tuple.4{0} (phi) @0>
 positions:
  arg_tuple.4 {0}
  get-tuple-element.89
 uses:
  copy.9, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<274 arg_tuple.4{1} (phi) @0>
 positions:
  arg_tuple.4 {1}
  get-tuple-element.90
 uses:
  copy.10, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<275 arg_tuple.4{2} (phi) @0>
 positions:
  arg_tuple.4 {2}
  get-tuple-element.91
 uses:
  copy.11, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<276 arg_tuple.4{3} (phi) @0>
 positions:
  arg_tuple.4 {3}
  get-tuple-element.92
 uses:
  copy.12, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<277 arg_tuple.4{4} (phi) @0>
 positions:
  arg_tuple.4 {4}
  get-tuple-element.93
 uses:
  copy.13, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<278 arg_tuple.4{5} (phi) @0>
 positions:
  arg_tuple.4 {5}
  get-tuple-element.94
 uses:
  copy.14, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<279 arg_tuple.4{6} (phi) @0>
 positions:
  arg_tuple.4 {6}
  get-tuple-element.95
 uses:
  copy.15, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<280 arg_tuple.4{7} (phi) @0>
 positions:
  arg_tuple.4 {7}
  get-tuple-element.96
 uses:
  copy.16, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<281 while.13{} (phi) @0>
 positions:
  while.13 {}
 uses:
  get-tuple-element.3, operand 0 {}
  get-tuple-element.2, operand 0 {}
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<282 while.13{0} (phi) @0>
 positions:
  while.13 {0}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<283 while.13{1} (phi) @0>
 positions:
  while.13 {1}
  get-tuple-element.2
 uses:
  broadcast_multiply_fusion, operand 0
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<284 while.13{2} (phi) @0>
 positions:
  while.13 {2}
  get-tuple-element.3
 uses:
  broadcast_multiply_fusion, operand 1
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<285 while.13{3} (phi) @0>
 positions:
  while.13 {3}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<286 while.13{4} (phi) @0>
 positions:
  while.13 {4}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<287 while.13{5} (phi) @0>
 positions:
  while.13 {5}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<288 while.13{6} (phi) @0>
 positions:
  while.13 {6}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<289 while.13{7} (phi) @0>
 positions:
  while.13 {7}
 uses:
 from instruction: %while.13 = (s32[], u32[12,8]{1,0}, u32[12,8]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.13), condition=%region_1.192.clone.clone, body=%region_0.179.clone.clone.clone, metadata={op_name="jit(_normal)/jit(_normal_real)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/temp/test_my_great_tp_plan.py" source_line=58 source_end_line=58 source_column=4 source_end_column=52}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}


HloLiveRange (max 48):
  InstructionSequence:
    0:key.1
    1:constant.29
    2:constant.37
    3:constant.39
    4:slice_bitcast_fusion
    5:slice_bitcast_fusion.1
    6:xor_xor_fusion
    7:broadcast_add_fusion.2
    8:broadcast_add_fusion.3
    9:copy.25
    10:copy.26
    11:copy.27
    12:tuple.13
    13:arg_tuple.3
    14:constant.99
    15:get-tuple-element.62
    16:lt.1
    17:arg_tuple.4
    18:constant.100
    19:get-tuple-element.96
    20:get-tuple-element.95
    21:get-tuple-element.94
    22:get-tuple-element.93
    23:get-tuple-element.92
    24:get-tuple-element.91
    25:get-tuple-element.90
    26:get-tuple-element.89
    27:copy.16
    28:copy.15
    29:copy.14
    30:copy.13
    31:copy.12
    32:copy.11
    33:copy.10
    34:copy.9
    35:copy.24
    36:copy.23
    37:copy.21
    38:copy.22
    39:copy.20
    40:broadcast_add_fusion.1
    41:broadcast_add_fusion
    42:add.65
    43:tuple.15
    44:while.13
    45:get-tuple-element.3
    46:get-tuple-element.2
    47:broadcast_multiply_fusion
  BufferLiveRange:
    constant.99{}:14-16
    lt.1{}:16-17
    copy.9{}:34-42
    constant.100{}:18-42
    add.65{}:42-44
    copy.12{}:31-40
    copy.15{}:28-41
    copy.11{}:32-41
    copy.10{}:33-41
    broadcast_add_fusion.1{}:40-44
    copy.13{}:30-41
    broadcast_add_fusion{}:41-44
    copy.20{}:39-44
    copy.14{}:29-37
    copy.21{}:37-44
    copy.22{}:38-44
    copy.16{}:27-36
    copy.23{}:36-44
    copy.24{}:35-44
    tuple.15{}:43-44
    constant.29{}:1-9
    copy.25{}:9-13
    key.1{}:0-48
    broadcast_add_fusion.3{}:8-13
    broadcast_add_fusion.2{}:7-13
    slice_bitcast_fusion{}:4-13
    xor_xor_fusion{}:6-13
    slice_bitcast_fusion.1{}:5-13
    constant.37{}:2-10
    copy.26{}:10-13
    constant.39{}:3-11
    copy.27{}:11-13
    tuple.13{}:12-13
    broadcast_multiply_fusion{}:47-48
    arg_tuple.3{}:13-17
    arg_tuple.4{}:17-26
    arg_tuple.3{0}:13-17
    arg_tuple.3{1}:13-17
    arg_tuple.3{2}:13-17
    arg_tuple.3{3}:13-17
    arg_tuple.3{4}:13-17
    arg_tuple.3{5}:13-17
    arg_tuple.3{6}:13-17
    arg_tuple.3{7}:13-17
    arg_tuple.4{0}:17-34
    arg_tuple.4{1}:17-33
    arg_tuple.4{2}:17-32
    arg_tuple.4{3}:17-31
    arg_tuple.4{4}:17-30
    arg_tuple.4{5}:17-29
    arg_tuple.4{6}:17-28
    arg_tuple.4{7}:17-27
    while.13{}:44-46
    while.13{0}:44-44
    while.13{1}:44-47
    while.13{2}:44-47
    while.13{3}:44-44
    while.13{4}:44-44
    while.13{5}:44-44
    while.13{6}:44-44
    while.13{7}:44-44
  Live ranges at 41 (peak):
    broadcast_add_fusion{}: 384 bytes (cumulative: 384 bytes)
    broadcast_add_fusion.1{}: 384 bytes (cumulative: 768 bytes)
    copy.10{}: 384 bytes (cumulative: 1152 bytes)
    copy.11{}: 384 bytes (cumulative: 1536 bytes)
    copy.15{}: 16 bytes (cumulative: 1552 bytes)
    copy.23{}: 16 bytes (cumulative: 1568 bytes)
    copy.24{}: 16 bytes (cumulative: 1584 bytes)
    key.1{}: 8 bytes (cumulative: 1592 bytes)
    constant.100{}: 4 bytes (cumulative: 1596 bytes)
    copy.13{}: 4 bytes (cumulative: 1600 bytes)
    copy.20{}: 4 bytes (cumulative: 1604 bytes)
    copy.21{}: 4 bytes (cumulative: 1608 bytes)
    copy.22{}: 4 bytes (cumulative: 1612 bytes)
    copy.9{}: 4 bytes (cumulative: 1616 bytes)
  Stack trace breakdown for peak usage: 1 616 bytes
    main.271 (100.0%, total: 1 616 bytes, current: 0 bytes, remaining: 1 616 bytes)
      ├── jit(_normal)/jit(_normal_real)/jit(_uniform)/while (99.5%, total: 1 608 bytes, current: 0 bytes, remaining: 1 616 bytes)
      │   └── region_0.179.clone.clone.clone (99.5%, total: 1 608 bytes, current: 0 bytes, remaining: 1 616 bytes)
      │       ├── jit(_normal)/jit(_normal_real)/jit(_uniform)/while/body/closed_call/add (47.5%, total: 768 bytes, current: 768 bytes, remaining: 848 bytes)
      │       ├── copy.10 (23.8%, total: 384 bytes, current: 384 bytes, remaining: 464 bytes)
      │       ├── copy.11 (23.8%, total: 384 bytes, current: 384 bytes, remaining: 80 bytes)
      │       ├── copy.15 (1.0%, total: 16 bytes, current: 16 bytes, remaining: 64 bytes)
      │       ├── copy.23 (1.0%, total: 16 bytes, current: 16 bytes, remaining: 48 bytes)
      │       ├── copy.24 (1.0%, total: 16 bytes, current: 16 bytes, remaining: 32 bytes)
      │       ├── copy.13 (0.2%, total: 4 bytes, current: 4 bytes, remaining: 28 bytes)
      │       ├── copy.20 (0.2%, total: 4 bytes, current: 4 bytes, remaining: 24 bytes)
      │       ├── copy.21 (0.2%, total: 4 bytes, current: 4 bytes, remaining: 20 bytes)
      │       ├── copy.22 (0.2%, total: 4 bytes, current: 4 bytes, remaining: 16 bytes)
      │       ├── copy.9 (0.2%, total: 4 bytes, current: 4 bytes, remaining: 12 bytes)
      │       └── jit(_normal)/jit(_normal_real)/jit(_uniform) (0.2%, total: 4 bytes, current: 4 bytes, remaining: 8 bytes)
      └── key (0.5%, total: 8 bytes, current: 8 bytes, remaining: 0 bytes)
