; ModuleID = '__compute_module_broadcast_add_fusion_kernel_module'
source_filename = "__compute_module_broadcast_add_fusion_kernel_module"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nosync nounwind uwtable
define noalias noundef ptr @broadcast_add_fusion(ptr readonly captures(none) %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds nuw i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8, !invariant.load !3
  %4 = load ptr, ptr %3, align 8, !invariant.load !3, !dereferenceable !4
  %5 = getelementptr inbounds nuw i8, ptr %3, i64 16
  %6 = load ptr, ptr %5, align 8, !invariant.load !3, !dereferenceable !5
  %7 = getelementptr inbounds nuw i8, ptr %3, i64 32
  %8 = load ptr, ptr %7, align 8, !invariant.load !3, !dereferenceable !6
  %9 = getelementptr inbounds nuw i8, ptr %3, i64 48
  %10 = load ptr, ptr %9, align 8, !invariant.load !3, !dereferenceable !6
  %11 = getelementptr inbounds nuw i8, ptr %3, i64 64
  %12 = load ptr, ptr %11, align 8, !invariant.load !3, !dereferenceable !4
  %13 = getelementptr inbounds nuw i8, ptr %3, i64 80
  %14 = load ptr, ptr %13, align 8, !invariant.load !3, !dereferenceable !6
  tail call void @llvm.experimental.noalias.scope.decl(metadata !7)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !10)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !12)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !14)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !16)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !18)
  %15 = load i32, ptr %6, align 4, !invariant.load !3, !alias.scope !10, !noalias !20
  %.fr5 = freeze i32 %15
  %16 = sub i32 32, %.fr5
  %17 = icmp ult i32 %.fr5, 32
  %18 = icmp ult i32 %16, 32
  %19 = getelementptr inbounds nuw i8, ptr %6, i64 4
  %20 = load i32, ptr %19, align 4, !invariant.load !3, !alias.scope !10, !noalias !20
  %21 = sub i32 32, %20
  %22 = icmp ult i32 %20, 32
  %23 = icmp ult i32 %21, 32
  %24 = getelementptr inbounds nuw i8, ptr %6, i64 8
  %25 = load i32, ptr %24, align 4, !invariant.load !3, !alias.scope !10, !noalias !20
  %26 = sub i32 32, %25
  %27 = icmp ult i32 %25, 32
  %28 = icmp ult i32 %26, 32
  %29 = getelementptr inbounds nuw i8, ptr %6, i64 12
  %30 = load i32, ptr %29, align 4, !invariant.load !3, !alias.scope !10, !noalias !20
  %31 = sub i32 32, %30
  %32 = icmp ult i32 %30, 32
  %33 = icmp ult i32 %31, 32
  %34 = load i32, ptr %4, align 4, !invariant.load !3, !alias.scope !7, !noalias !23
  %35 = load i32, ptr %12, align 4, !invariant.load !3, !alias.scope !16, !noalias !24
  %36 = add i32 %34, 1
  %37 = add i32 %36, %35
  br i1 %17, label %.split.us.us, label %.split

.split.us.us:                                     ; preds = %1, %.split.us.us
  %38 = phi i64 [ %311, %.split.us.us ], [ 0, %1 ]
  %39 = shl nuw nsw i64 %38, 3
  %40 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %39
  %41 = load i32, ptr %40, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %42 = shl i32 %41, %.fr5
  %43 = lshr i32 %41, %16
  %44 = select i1 %18, i32 %43, i32 0
  %45 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %39
  %46 = load i32, ptr %45, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %47 = or i32 %42, %44
  %48 = add i32 %46, %41
  %49 = xor i32 %47, %48
  %50 = shl i32 %49, %20
  %51 = select i1 %22, i32 %50, i32 0
  %52 = lshr i32 %49, %21
  %53 = select i1 %23, i32 %52, i32 0
  %54 = or i32 %51, %53
  %55 = add i32 %49, %48
  %56 = xor i32 %54, %55
  %57 = shl i32 %56, %25
  %58 = select i1 %27, i32 %57, i32 0
  %59 = lshr i32 %56, %26
  %60 = select i1 %28, i32 %59, i32 0
  %61 = or i32 %58, %60
  %62 = add i32 %56, %55
  %63 = xor i32 %61, %62
  %64 = shl i32 %63, %30
  %65 = select i1 %32, i32 %64, i32 0
  %66 = lshr i32 %63, %31
  %67 = select i1 %33, i32 %66, i32 0
  %68 = add i32 %63, %62
  %69 = or i32 %65, %67
  %70 = xor i32 %69, %68
  %71 = add i32 %37, %70
  %72 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %39
  store i32 %71, ptr %72, align 4, !alias.scope !27, !noalias !28
  %73 = or disjoint i64 %39, 1
  %74 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %73
  %75 = load i32, ptr %74, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %76 = shl i32 %75, %.fr5
  %77 = lshr i32 %75, %16
  %78 = select i1 %18, i32 %77, i32 0
  %79 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %73
  %80 = load i32, ptr %79, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %81 = or i32 %76, %78
  %82 = add i32 %80, %75
  %83 = xor i32 %81, %82
  %84 = shl i32 %83, %20
  %85 = select i1 %22, i32 %84, i32 0
  %86 = lshr i32 %83, %21
  %87 = select i1 %23, i32 %86, i32 0
  %88 = or i32 %85, %87
  %89 = add i32 %83, %82
  %90 = xor i32 %88, %89
  %91 = shl i32 %90, %25
  %92 = select i1 %27, i32 %91, i32 0
  %93 = lshr i32 %90, %26
  %94 = select i1 %28, i32 %93, i32 0
  %95 = or i32 %92, %94
  %96 = add i32 %90, %89
  %97 = xor i32 %95, %96
  %98 = shl i32 %97, %30
  %99 = select i1 %32, i32 %98, i32 0
  %100 = lshr i32 %97, %31
  %101 = select i1 %33, i32 %100, i32 0
  %102 = add i32 %97, %96
  %103 = or i32 %99, %101
  %104 = xor i32 %103, %102
  %105 = add i32 %37, %104
  %106 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %73
  store i32 %105, ptr %106, align 4, !alias.scope !27, !noalias !28
  %107 = or disjoint i64 %39, 2
  %108 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %107
  %109 = load i32, ptr %108, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %110 = shl i32 %109, %.fr5
  %111 = lshr i32 %109, %16
  %112 = select i1 %18, i32 %111, i32 0
  %113 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %107
  %114 = load i32, ptr %113, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %115 = or i32 %110, %112
  %116 = add i32 %114, %109
  %117 = xor i32 %115, %116
  %118 = shl i32 %117, %20
  %119 = select i1 %22, i32 %118, i32 0
  %120 = lshr i32 %117, %21
  %121 = select i1 %23, i32 %120, i32 0
  %122 = or i32 %119, %121
  %123 = add i32 %117, %116
  %124 = xor i32 %122, %123
  %125 = shl i32 %124, %25
  %126 = select i1 %27, i32 %125, i32 0
  %127 = lshr i32 %124, %26
  %128 = select i1 %28, i32 %127, i32 0
  %129 = or i32 %126, %128
  %130 = add i32 %124, %123
  %131 = xor i32 %129, %130
  %132 = shl i32 %131, %30
  %133 = select i1 %32, i32 %132, i32 0
  %134 = lshr i32 %131, %31
  %135 = select i1 %33, i32 %134, i32 0
  %136 = add i32 %131, %130
  %137 = or i32 %133, %135
  %138 = xor i32 %137, %136
  %139 = add i32 %37, %138
  %140 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %107
  store i32 %139, ptr %140, align 4, !alias.scope !27, !noalias !28
  %141 = or disjoint i64 %39, 3
  %142 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %141
  %143 = load i32, ptr %142, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %144 = shl i32 %143, %.fr5
  %145 = lshr i32 %143, %16
  %146 = select i1 %18, i32 %145, i32 0
  %147 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %141
  %148 = load i32, ptr %147, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %149 = or i32 %144, %146
  %150 = add i32 %148, %143
  %151 = xor i32 %149, %150
  %152 = shl i32 %151, %20
  %153 = select i1 %22, i32 %152, i32 0
  %154 = lshr i32 %151, %21
  %155 = select i1 %23, i32 %154, i32 0
  %156 = or i32 %153, %155
  %157 = add i32 %151, %150
  %158 = xor i32 %156, %157
  %159 = shl i32 %158, %25
  %160 = select i1 %27, i32 %159, i32 0
  %161 = lshr i32 %158, %26
  %162 = select i1 %28, i32 %161, i32 0
  %163 = or i32 %160, %162
  %164 = add i32 %158, %157
  %165 = xor i32 %163, %164
  %166 = shl i32 %165, %30
  %167 = select i1 %32, i32 %166, i32 0
  %168 = lshr i32 %165, %31
  %169 = select i1 %33, i32 %168, i32 0
  %170 = add i32 %165, %164
  %171 = or i32 %167, %169
  %172 = xor i32 %171, %170
  %173 = add i32 %37, %172
  %174 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %141
  store i32 %173, ptr %174, align 4, !alias.scope !27, !noalias !28
  %175 = or disjoint i64 %39, 4
  %176 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %175
  %177 = load i32, ptr %176, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %178 = shl i32 %177, %.fr5
  %179 = lshr i32 %177, %16
  %180 = select i1 %18, i32 %179, i32 0
  %181 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %175
  %182 = load i32, ptr %181, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %183 = or i32 %178, %180
  %184 = add i32 %182, %177
  %185 = xor i32 %183, %184
  %186 = shl i32 %185, %20
  %187 = select i1 %22, i32 %186, i32 0
  %188 = lshr i32 %185, %21
  %189 = select i1 %23, i32 %188, i32 0
  %190 = or i32 %187, %189
  %191 = add i32 %185, %184
  %192 = xor i32 %190, %191
  %193 = shl i32 %192, %25
  %194 = select i1 %27, i32 %193, i32 0
  %195 = lshr i32 %192, %26
  %196 = select i1 %28, i32 %195, i32 0
  %197 = or i32 %194, %196
  %198 = add i32 %192, %191
  %199 = xor i32 %197, %198
  %200 = shl i32 %199, %30
  %201 = select i1 %32, i32 %200, i32 0
  %202 = lshr i32 %199, %31
  %203 = select i1 %33, i32 %202, i32 0
  %204 = add i32 %199, %198
  %205 = or i32 %201, %203
  %206 = xor i32 %205, %204
  %207 = add i32 %37, %206
  %208 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %175
  store i32 %207, ptr %208, align 4, !alias.scope !27, !noalias !28
  %209 = or disjoint i64 %39, 5
  %210 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %209
  %211 = load i32, ptr %210, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %212 = shl i32 %211, %.fr5
  %213 = lshr i32 %211, %16
  %214 = select i1 %18, i32 %213, i32 0
  %215 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %209
  %216 = load i32, ptr %215, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %217 = or i32 %212, %214
  %218 = add i32 %216, %211
  %219 = xor i32 %217, %218
  %220 = shl i32 %219, %20
  %221 = select i1 %22, i32 %220, i32 0
  %222 = lshr i32 %219, %21
  %223 = select i1 %23, i32 %222, i32 0
  %224 = or i32 %221, %223
  %225 = add i32 %219, %218
  %226 = xor i32 %224, %225
  %227 = shl i32 %226, %25
  %228 = select i1 %27, i32 %227, i32 0
  %229 = lshr i32 %226, %26
  %230 = select i1 %28, i32 %229, i32 0
  %231 = or i32 %228, %230
  %232 = add i32 %226, %225
  %233 = xor i32 %231, %232
  %234 = shl i32 %233, %30
  %235 = select i1 %32, i32 %234, i32 0
  %236 = lshr i32 %233, %31
  %237 = select i1 %33, i32 %236, i32 0
  %238 = add i32 %233, %232
  %239 = or i32 %235, %237
  %240 = xor i32 %239, %238
  %241 = add i32 %37, %240
  %242 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %209
  store i32 %241, ptr %242, align 4, !alias.scope !27, !noalias !28
  %243 = or disjoint i64 %39, 6
  %244 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %243
  %245 = load i32, ptr %244, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %246 = shl i32 %245, %.fr5
  %247 = lshr i32 %245, %16
  %248 = select i1 %18, i32 %247, i32 0
  %249 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %243
  %250 = load i32, ptr %249, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %251 = or i32 %246, %248
  %252 = add i32 %250, %245
  %253 = xor i32 %251, %252
  %254 = shl i32 %253, %20
  %255 = select i1 %22, i32 %254, i32 0
  %256 = lshr i32 %253, %21
  %257 = select i1 %23, i32 %256, i32 0
  %258 = or i32 %255, %257
  %259 = add i32 %253, %252
  %260 = xor i32 %258, %259
  %261 = shl i32 %260, %25
  %262 = select i1 %27, i32 %261, i32 0
  %263 = lshr i32 %260, %26
  %264 = select i1 %28, i32 %263, i32 0
  %265 = or i32 %262, %264
  %266 = add i32 %260, %259
  %267 = xor i32 %265, %266
  %268 = shl i32 %267, %30
  %269 = select i1 %32, i32 %268, i32 0
  %270 = lshr i32 %267, %31
  %271 = select i1 %33, i32 %270, i32 0
  %272 = add i32 %267, %266
  %273 = or i32 %269, %271
  %274 = xor i32 %273, %272
  %275 = add i32 %37, %274
  %276 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %243
  store i32 %275, ptr %276, align 4, !alias.scope !27, !noalias !28
  %277 = or disjoint i64 %39, 7
  %278 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %277
  %279 = load i32, ptr %278, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %280 = shl i32 %279, %.fr5
  %281 = lshr i32 %279, %16
  %282 = select i1 %18, i32 %281, i32 0
  %283 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %277
  %284 = load i32, ptr %283, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %285 = or i32 %280, %282
  %286 = add i32 %284, %279
  %287 = xor i32 %285, %286
  %288 = shl i32 %287, %20
  %289 = select i1 %22, i32 %288, i32 0
  %290 = lshr i32 %287, %21
  %291 = select i1 %23, i32 %290, i32 0
  %292 = or i32 %289, %291
  %293 = add i32 %287, %286
  %294 = xor i32 %292, %293
  %295 = shl i32 %294, %25
  %296 = select i1 %27, i32 %295, i32 0
  %297 = lshr i32 %294, %26
  %298 = select i1 %28, i32 %297, i32 0
  %299 = or i32 %296, %298
  %300 = add i32 %294, %293
  %301 = xor i32 %299, %300
  %302 = shl i32 %301, %30
  %303 = select i1 %32, i32 %302, i32 0
  %304 = lshr i32 %301, %31
  %305 = select i1 %33, i32 %304, i32 0
  %306 = add i32 %301, %300
  %307 = or i32 %303, %305
  %308 = xor i32 %307, %306
  %309 = add i32 %37, %308
  %310 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %277
  store i32 %309, ptr %310, align 4, !alias.scope !27, !noalias !28
  %311 = add nuw nsw i64 %38, 1
  %exitcond8.not = icmp eq i64 %311, 12
  br i1 %exitcond8.not, label %broadcast_add_fusion_wrapped.exit, label %.split.us.us, !llvm.loop !29

.split:                                           ; preds = %1, %.split
  %312 = phi i64 [ %569, %.split ], [ 0, %1 ]
  %313 = shl nuw nsw i64 %312, 3
  %314 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %313
  %315 = load i32, ptr %314, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %316 = lshr i32 %315, %16
  %317 = select i1 %18, i32 %316, i32 0
  %318 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %313
  %319 = load i32, ptr %318, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %320 = add i32 %319, %315
  %321 = xor i32 %317, %320
  %322 = shl i32 %321, %20
  %323 = select i1 %22, i32 %322, i32 0
  %324 = lshr i32 %321, %21
  %325 = select i1 %23, i32 %324, i32 0
  %326 = or i32 %323, %325
  %327 = add i32 %321, %320
  %328 = xor i32 %326, %327
  %329 = shl i32 %328, %25
  %330 = select i1 %27, i32 %329, i32 0
  %331 = lshr i32 %328, %26
  %332 = select i1 %28, i32 %331, i32 0
  %333 = or i32 %330, %332
  %334 = add i32 %328, %327
  %335 = xor i32 %333, %334
  %336 = shl i32 %335, %30
  %337 = select i1 %32, i32 %336, i32 0
  %338 = lshr i32 %335, %31
  %339 = select i1 %33, i32 %338, i32 0
  %340 = add i32 %335, %334
  %341 = or i32 %337, %339
  %342 = xor i32 %341, %340
  %343 = add i32 %37, %342
  %344 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %313
  store i32 %343, ptr %344, align 4, !alias.scope !27, !noalias !28
  %345 = or disjoint i64 %313, 1
  %346 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %345
  %347 = load i32, ptr %346, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %348 = lshr i32 %347, %16
  %349 = select i1 %18, i32 %348, i32 0
  %350 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %345
  %351 = load i32, ptr %350, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %352 = add i32 %351, %347
  %353 = xor i32 %349, %352
  %354 = shl i32 %353, %20
  %355 = select i1 %22, i32 %354, i32 0
  %356 = lshr i32 %353, %21
  %357 = select i1 %23, i32 %356, i32 0
  %358 = or i32 %355, %357
  %359 = add i32 %353, %352
  %360 = xor i32 %358, %359
  %361 = shl i32 %360, %25
  %362 = select i1 %27, i32 %361, i32 0
  %363 = lshr i32 %360, %26
  %364 = select i1 %28, i32 %363, i32 0
  %365 = or i32 %362, %364
  %366 = add i32 %360, %359
  %367 = xor i32 %365, %366
  %368 = shl i32 %367, %30
  %369 = select i1 %32, i32 %368, i32 0
  %370 = lshr i32 %367, %31
  %371 = select i1 %33, i32 %370, i32 0
  %372 = add i32 %367, %366
  %373 = or i32 %369, %371
  %374 = xor i32 %373, %372
  %375 = add i32 %37, %374
  %376 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %345
  store i32 %375, ptr %376, align 4, !alias.scope !27, !noalias !28
  %377 = or disjoint i64 %313, 2
  %378 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %377
  %379 = load i32, ptr %378, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %380 = lshr i32 %379, %16
  %381 = select i1 %18, i32 %380, i32 0
  %382 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %377
  %383 = load i32, ptr %382, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %384 = add i32 %383, %379
  %385 = xor i32 %381, %384
  %386 = shl i32 %385, %20
  %387 = select i1 %22, i32 %386, i32 0
  %388 = lshr i32 %385, %21
  %389 = select i1 %23, i32 %388, i32 0
  %390 = or i32 %387, %389
  %391 = add i32 %385, %384
  %392 = xor i32 %390, %391
  %393 = shl i32 %392, %25
  %394 = select i1 %27, i32 %393, i32 0
  %395 = lshr i32 %392, %26
  %396 = select i1 %28, i32 %395, i32 0
  %397 = or i32 %394, %396
  %398 = add i32 %392, %391
  %399 = xor i32 %397, %398
  %400 = shl i32 %399, %30
  %401 = select i1 %32, i32 %400, i32 0
  %402 = lshr i32 %399, %31
  %403 = select i1 %33, i32 %402, i32 0
  %404 = add i32 %399, %398
  %405 = or i32 %401, %403
  %406 = xor i32 %405, %404
  %407 = add i32 %37, %406
  %408 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %377
  store i32 %407, ptr %408, align 4, !alias.scope !27, !noalias !28
  %409 = or disjoint i64 %313, 3
  %410 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %409
  %411 = load i32, ptr %410, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %412 = lshr i32 %411, %16
  %413 = select i1 %18, i32 %412, i32 0
  %414 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %409
  %415 = load i32, ptr %414, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %416 = add i32 %415, %411
  %417 = xor i32 %413, %416
  %418 = shl i32 %417, %20
  %419 = select i1 %22, i32 %418, i32 0
  %420 = lshr i32 %417, %21
  %421 = select i1 %23, i32 %420, i32 0
  %422 = or i32 %419, %421
  %423 = add i32 %417, %416
  %424 = xor i32 %422, %423
  %425 = shl i32 %424, %25
  %426 = select i1 %27, i32 %425, i32 0
  %427 = lshr i32 %424, %26
  %428 = select i1 %28, i32 %427, i32 0
  %429 = or i32 %426, %428
  %430 = add i32 %424, %423
  %431 = xor i32 %429, %430
  %432 = shl i32 %431, %30
  %433 = select i1 %32, i32 %432, i32 0
  %434 = lshr i32 %431, %31
  %435 = select i1 %33, i32 %434, i32 0
  %436 = add i32 %431, %430
  %437 = or i32 %433, %435
  %438 = xor i32 %437, %436
  %439 = add i32 %37, %438
  %440 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %409
  store i32 %439, ptr %440, align 4, !alias.scope !27, !noalias !28
  %441 = or disjoint i64 %313, 4
  %442 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %441
  %443 = load i32, ptr %442, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %444 = lshr i32 %443, %16
  %445 = select i1 %18, i32 %444, i32 0
  %446 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %441
  %447 = load i32, ptr %446, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %448 = add i32 %447, %443
  %449 = xor i32 %445, %448
  %450 = shl i32 %449, %20
  %451 = select i1 %22, i32 %450, i32 0
  %452 = lshr i32 %449, %21
  %453 = select i1 %23, i32 %452, i32 0
  %454 = or i32 %451, %453
  %455 = add i32 %449, %448
  %456 = xor i32 %454, %455
  %457 = shl i32 %456, %25
  %458 = select i1 %27, i32 %457, i32 0
  %459 = lshr i32 %456, %26
  %460 = select i1 %28, i32 %459, i32 0
  %461 = or i32 %458, %460
  %462 = add i32 %456, %455
  %463 = xor i32 %461, %462
  %464 = shl i32 %463, %30
  %465 = select i1 %32, i32 %464, i32 0
  %466 = lshr i32 %463, %31
  %467 = select i1 %33, i32 %466, i32 0
  %468 = add i32 %463, %462
  %469 = or i32 %465, %467
  %470 = xor i32 %469, %468
  %471 = add i32 %37, %470
  %472 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %441
  store i32 %471, ptr %472, align 4, !alias.scope !27, !noalias !28
  %473 = or disjoint i64 %313, 5
  %474 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %473
  %475 = load i32, ptr %474, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %476 = lshr i32 %475, %16
  %477 = select i1 %18, i32 %476, i32 0
  %478 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %473
  %479 = load i32, ptr %478, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %480 = add i32 %479, %475
  %481 = xor i32 %477, %480
  %482 = shl i32 %481, %20
  %483 = select i1 %22, i32 %482, i32 0
  %484 = lshr i32 %481, %21
  %485 = select i1 %23, i32 %484, i32 0
  %486 = or i32 %483, %485
  %487 = add i32 %481, %480
  %488 = xor i32 %486, %487
  %489 = shl i32 %488, %25
  %490 = select i1 %27, i32 %489, i32 0
  %491 = lshr i32 %488, %26
  %492 = select i1 %28, i32 %491, i32 0
  %493 = or i32 %490, %492
  %494 = add i32 %488, %487
  %495 = xor i32 %493, %494
  %496 = shl i32 %495, %30
  %497 = select i1 %32, i32 %496, i32 0
  %498 = lshr i32 %495, %31
  %499 = select i1 %33, i32 %498, i32 0
  %500 = add i32 %495, %494
  %501 = or i32 %497, %499
  %502 = xor i32 %501, %500
  %503 = add i32 %37, %502
  %504 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %473
  store i32 %503, ptr %504, align 4, !alias.scope !27, !noalias !28
  %505 = or disjoint i64 %313, 6
  %506 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %505
  %507 = load i32, ptr %506, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %508 = lshr i32 %507, %16
  %509 = select i1 %18, i32 %508, i32 0
  %510 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %505
  %511 = load i32, ptr %510, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %512 = add i32 %511, %507
  %513 = xor i32 %509, %512
  %514 = shl i32 %513, %20
  %515 = select i1 %22, i32 %514, i32 0
  %516 = lshr i32 %513, %21
  %517 = select i1 %23, i32 %516, i32 0
  %518 = or i32 %515, %517
  %519 = add i32 %513, %512
  %520 = xor i32 %518, %519
  %521 = shl i32 %520, %25
  %522 = select i1 %27, i32 %521, i32 0
  %523 = lshr i32 %520, %26
  %524 = select i1 %28, i32 %523, i32 0
  %525 = or i32 %522, %524
  %526 = add i32 %520, %519
  %527 = xor i32 %525, %526
  %528 = shl i32 %527, %30
  %529 = select i1 %32, i32 %528, i32 0
  %530 = lshr i32 %527, %31
  %531 = select i1 %33, i32 %530, i32 0
  %532 = add i32 %527, %526
  %533 = or i32 %529, %531
  %534 = xor i32 %533, %532
  %535 = add i32 %37, %534
  %536 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %505
  store i32 %535, ptr %536, align 4, !alias.scope !27, !noalias !28
  %537 = or disjoint i64 %313, 7
  %538 = getelementptr inbounds nuw [96 x i32], ptr %8, i64 0, i64 %537
  %539 = load i32, ptr %538, align 4, !invariant.load !3, !alias.scope !12, !noalias !25
  %540 = lshr i32 %539, %16
  %541 = select i1 %18, i32 %540, i32 0
  %542 = getelementptr inbounds nuw [96 x i32], ptr %10, i64 0, i64 %537
  %543 = load i32, ptr %542, align 4, !invariant.load !3, !alias.scope !14, !noalias !26
  %544 = add i32 %543, %539
  %545 = xor i32 %541, %544
  %546 = shl i32 %545, %20
  %547 = select i1 %22, i32 %546, i32 0
  %548 = lshr i32 %545, %21
  %549 = select i1 %23, i32 %548, i32 0
  %550 = or i32 %547, %549
  %551 = add i32 %545, %544
  %552 = xor i32 %550, %551
  %553 = shl i32 %552, %25
  %554 = select i1 %27, i32 %553, i32 0
  %555 = lshr i32 %552, %26
  %556 = select i1 %28, i32 %555, i32 0
  %557 = or i32 %554, %556
  %558 = add i32 %552, %551
  %559 = xor i32 %557, %558
  %560 = shl i32 %559, %30
  %561 = select i1 %32, i32 %560, i32 0
  %562 = lshr i32 %559, %31
  %563 = select i1 %33, i32 %562, i32 0
  %564 = add i32 %559, %558
  %565 = or i32 %561, %563
  %566 = xor i32 %565, %564
  %567 = add i32 %37, %566
  %568 = getelementptr inbounds nuw [96 x i32], ptr %14, i64 0, i64 %537
  store i32 %567, ptr %568, align 4, !alias.scope !27, !noalias !28
  %569 = add nuw nsw i64 %312, 1
  %exitcond.not = icmp eq i64 %569, 12
  br i1 %exitcond.not, label %broadcast_add_fusion_wrapped.exit, label %.split

broadcast_add_fusion_wrapped.exit:                ; preds = %.split, %.split.us.us
  ret ptr null
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #1

attributes #0 = { nofree norecurse nosync nounwind uwtable "frame-pointer"="all" "prefer-vector-width"="256" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }

!llvm.module.flags = !{!0, !1}
!xla_cpu_memory_region_name = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"xla_dylib_index", i64 8}
!2 = !{!"xla_cpu_emitter__loop_fusion_kernel_emitter__hlo_opcode__fusion"}
!3 = !{}
!4 = !{i64 4}
!5 = !{i64 16}
!6 = !{i64 384}
!7 = !{!8}
!8 = distinct !{!8, !9, !"broadcast_add_fusion_wrapped: argument 0"}
!9 = distinct !{!9, !"broadcast_add_fusion_wrapped"}
!10 = !{!11}
!11 = distinct !{!11, !9, !"broadcast_add_fusion_wrapped: argument 1"}
!12 = !{!13}
!13 = distinct !{!13, !9, !"broadcast_add_fusion_wrapped: argument 2"}
!14 = !{!15}
!15 = distinct !{!15, !9, !"broadcast_add_fusion_wrapped: argument 3"}
!16 = !{!17}
!17 = distinct !{!17, !9, !"broadcast_add_fusion_wrapped: argument 4"}
!18 = !{!19}
!19 = distinct !{!19, !9, !"broadcast_add_fusion_wrapped: argument 5"}
!20 = !{!21, !8, !13, !15, !17, !19}
!21 = distinct !{!21, !22, !"xla.slice_index=5"}
!22 = distinct !{!22}
!23 = !{!21, !11, !13, !15, !17, !19}
!24 = !{!21, !8, !11, !13, !15, !19}
!25 = !{!21, !8, !11, !15, !17, !19}
!26 = !{!21, !8, !11, !13, !17, !19}
!27 = !{!21, !19}
!28 = !{!8, !11, !13, !15, !17}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unswitch.nontrivial.disable"}
