BufferAssignment:
allocation 0: size 2048, output shape is |f32[32,16]|, maybe-live-out:
 value: <1 lt.1 @0> (size=1,offset=0): pred[]
 value: <91 copy.11 @0> (size=2048,offset=0): u32[32,16]{1,0}
 value: <325 maximum_minimum_fusion @0> (size=2048,offset=0): f32[32,16]{1,0}
allocation 1: size 4, constant:
 value: <87 constant.80 @0> (size=4,offset=0): s32[]
allocation 2: size 16, constant:
 value: <320 constant.25 @0> (size=16,offset=0): u32[4]{0}
allocation 3: size 16, constant:
 value: <322 constant.27 @0> (size=16,offset=0): u32[4]{0}
allocation 4: size 8, parameter 0, shape |u32[2]| at ShapeIndex {}:
 value: <314 key.1 @0> (size=8,offset=0): u32[2]{0}
allocation 5: size 4, parameter 2, shape |s32[]| at ShapeIndex {}:
 value: <308 upper.3 @0> (size=4,offset=0): s32[]
allocation 6: size 4, parameter 1, shape |s32[]| at ShapeIndex {}:
 value: <310 lower.2 @0> (size=4,offset=0): s32[]
allocation 7: size 4, constant:
 value: <312 constant.9 @0> (size=4,offset=0): s32[]
allocation 8: size 4, constant:
 value: <0 constant.78 @0> (size=4,offset=0): s32[]
allocation 9: size 7044, preallocated-temp:
 value: <86 copy.9 @0> (size=4,offset=6848): s32[]
 value: <88 add.57 @0> (size=4,offset=6912): s32[]
 value: <89 copy.12 @0> (size=4,offset=6976): u32[]
 value: <90 copy.15 @0> (size=16,offset=6208): u32[4]{0}
 value: <92 copy.10 @0> (size=2048,offset=4160): u32[32,16]{1,0}
 value: <93 broadcast_add_fusion.1 @0> (size=2048,offset=64): u32[32,16]{1,0}
 value: <94 copy.13 @0> (size=4,offset=6592): u32[]
 value: <95 broadcast_add_fusion @0> (size=2048,offset=2112): u32[32,16]{1,0}
 value: <96 copy.20 @0> (size=4,offset=6656): u32[]
 value: <97 copy.14 @0> (size=4,offset=7040): u32[]
 value: <98 copy.21 @0> (size=4,offset=6720): u32[]
 value: <99 copy.22 @0> (size=4,offset=6784): u32[]
 value: <100 copy.16 @0> (size=16,offset=6272): u32[4]{0}
 value: <101 copy.23 @0> (size=16,offset=6336): u32[4]{0}
 value: <102 copy.24 @0> (size=16,offset=6400): u32[4]{0}
 value: <103 tuple.14{} @0> (size=64,offset=0): (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <309 multiply_erf_fusion @0> (size=4,offset=6464): f32[]
 value: <311 multiply_erf_fusion.1 @0> (size=4,offset=6528): f32[]
 value: <313 copy.25 @0> (size=4,offset=6912): s32[]
 value: <315 broadcast_add_fusion.3 @0> (size=2048,offset=64): u32[32,16]{1,0}
 value: <316 broadcast_add_fusion.2 @0> (size=2048,offset=2112): u32[32,16]{1,0}
 value: <317 slice_bitcast_fusion @0> (size=4,offset=6656): u32[]
 value: <318 xor_xor_fusion @0> (size=4,offset=6720): u32[]
 value: <319 slice_bitcast_fusion.1 @0> (size=4,offset=6784): u32[]
 value: <321 copy.26 @0> (size=16,offset=6336): u32[4]{0}
 value: <323 copy.27 @0> (size=16,offset=6400): u32[4]{0}
 value: <324 tuple.12{} @0> (size=64,offset=0): (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <326 arg_tuple.3{} (phi) @0> (size=64,offset=0): (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <327 arg_tuple.4{} (phi) @0> (size=64,offset=0): (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <328 arg_tuple.3{0} (phi) @0> (size=4,offset=6912): s32[]
 value: <329 arg_tuple.3{1} (phi) @0> (size=2048,offset=64): u32[32,16]{1,0}
 value: <330 arg_tuple.3{2} (phi) @0> (size=2048,offset=2112): u32[32,16]{1,0}
 value: <331 arg_tuple.3{3} (phi) @0> (size=4,offset=6656): u32[]
 value: <332 arg_tuple.3{4} (phi) @0> (size=4,offset=6720): u32[]
 value: <333 arg_tuple.3{5} (phi) @0> (size=4,offset=6784): u32[]
 value: <334 arg_tuple.3{6} (phi) @0> (size=16,offset=6336): u32[4]{0}
 value: <335 arg_tuple.3{7} (phi) @0> (size=16,offset=6400): u32[4]{0}
 value: <336 arg_tuple.4{0} (phi) @0> (size=4,offset=6912): s32[]
 value: <337 arg_tuple.4{1} (phi) @0> (size=2048,offset=64): u32[32,16]{1,0}
 value: <338 arg_tuple.4{2} (phi) @0> (size=2048,offset=2112): u32[32,16]{1,0}
 value: <339 arg_tuple.4{3} (phi) @0> (size=4,offset=6656): u32[]
 value: <340 arg_tuple.4{4} (phi) @0> (size=4,offset=6720): u32[]
 value: <341 arg_tuple.4{5} (phi) @0> (size=4,offset=6784): u32[]
 value: <342 arg_tuple.4{6} (phi) @0> (size=16,offset=6336): u32[4]{0}
 value: <343 arg_tuple.4{7} (phi) @0> (size=16,offset=6400): u32[4]{0}
 value: <344 while.9{} (phi) @0> (size=64,offset=0): (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0})
 value: <345 while.9{0} (phi) @0> (size=4,offset=6912): s32[]
 value: <346 while.9{1} (phi) @0> (size=2048,offset=64): u32[32,16]{1,0}
 value: <347 while.9{2} (phi) @0> (size=2048,offset=2112): u32[32,16]{1,0}
 value: <348 while.9{3} (phi) @0> (size=4,offset=6656): u32[]
 value: <349 while.9{4} (phi) @0> (size=4,offset=6720): u32[]
 value: <350 while.9{5} (phi) @0> (size=4,offset=6784): u32[]
 value: <351 while.9{6} (phi) @0> (size=16,offset=6336): u32[4]{0}
 value: <352 while.9{7} (phi) @0> (size=16,offset=6400): u32[4]{0}

Total bytes used: 9152 (8.9KiB)

Used values:
<0 constant.78 @0>
 positions:
  constant.78
 uses:
  lt.1, operand 1
 from instruction: %constant.78 = s32[] constant(5), metadata={op_name="jit(_truncated_normal)/jit(_uniform)"}
<1 lt.1 @0>
 positions:
  lt.1
 uses:
 from instruction: %lt.1 = pred[] compare(%get-tuple-element.60, %constant.78), direction=LT, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while/cond/lt" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<86 copy.9 @0>
 positions:
  copy.9
 uses:
  broadcast_add_fusion, operand 4
  add.57, operand 0
 from instruction: %copy.9 = s32[] copy(%get-tuple-element.87)
<87 constant.80 @0>
 positions:
  constant.80
 uses:
  add.57, operand 1
 from instruction: %constant.80 = s32[] constant(1), metadata={op_name="jit(_truncated_normal)/jit(_uniform)"}
<88 add.57 @0>
 positions:
  add.57
  tuple.14 {0}
 uses:
  tuple.14, operand 0
 from instruction: %add.57 = s32[] add(%copy.9, %constant.80), metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while/body/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<89 copy.12 @0>
 positions:
  copy.12
 uses:
  broadcast_add_fusion.1, operand 0
  copy.22, operand 0
 from instruction: %copy.12 = u32[] copy(%get-tuple-element.90)
<90 copy.15 @0>
 positions:
  copy.15
 uses:
  broadcast_add_fusion, operand 1
  copy.24, operand 0
  broadcast_add_fusion.1, operand 1
 from instruction: %copy.15 = u32[4]{0} copy(%get-tuple-element.93)
<91 copy.11 @0>
 positions:
  copy.11
 uses:
  broadcast_add_fusion.1, operand 2
  broadcast_add_fusion, operand 2
 from instruction: %copy.11 = u32[32,16]{1,0} copy(%get-tuple-element.89)
<92 copy.10 @0>
 positions:
  copy.10
 uses:
  broadcast_add_fusion, operand 3
  broadcast_add_fusion.1, operand 3
 from instruction: %copy.10 = u32[32,16]{1,0} copy(%get-tuple-element.88)
<93 broadcast_add_fusion.1 @0>
 positions:
  broadcast_add_fusion.1
  tuple.14 {1}
 uses:
  tuple.14, operand 1
 from instruction: %broadcast_add_fusion.1 = u32[32,16]{1,0} fusion(%copy.12, %copy.15, %copy.11, %copy.10), kind=kLoop, calls=%fused_computation.1, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while/body/closed_call/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<94 copy.13 @0>
 positions:
  copy.13
 uses:
  broadcast_add_fusion, operand 0
  copy.20, operand 0
 from instruction: %copy.13 = u32[] copy(%get-tuple-element.91)
<95 broadcast_add_fusion @0>
 positions:
  broadcast_add_fusion
  tuple.14 {2}
 uses:
  tuple.14, operand 2
 from instruction: %broadcast_add_fusion = u32[32,16]{1,0} fusion(%copy.13, %copy.15, %copy.11, %copy.10, %copy.9), kind=kLoop, calls=%fused_computation, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while/body/closed_call/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<96 copy.20 @0>
 positions:
  copy.20
  tuple.14 {3}
 uses:
  tuple.14, operand 3
 from instruction: %copy.20 = u32[] copy(%copy.13), control-predecessors={%copy.12}
<97 copy.14 @0>
 positions:
  copy.14
 uses:
  copy.21, operand 0
 from instruction: %copy.14 = u32[] copy(%get-tuple-element.92)
<98 copy.21 @0>
 positions:
  copy.21
  tuple.14 {4}
 uses:
  tuple.14, operand 4
 from instruction: %copy.21 = u32[] copy(%copy.14), control-predecessors={%copy.13}
<99 copy.22 @0>
 positions:
  copy.22
  tuple.14 {5}
 uses:
  tuple.14, operand 5
 from instruction: %copy.22 = u32[] copy(%copy.12), control-predecessors={%copy.14}
<100 copy.16 @0>
 positions:
  copy.16
 uses:
  copy.23, operand 0
 from instruction: %copy.16 = u32[4]{0} copy(%get-tuple-element.94)
<101 copy.23 @0>
 positions:
  copy.23
  tuple.14 {6}
 uses:
  tuple.14, operand 6
 from instruction: %copy.23 = u32[4]{0} copy(%copy.16), control-predecessors={%copy.15}
<102 copy.24 @0>
 positions:
  copy.24
  tuple.14 {7}
 uses:
  tuple.14, operand 7
 from instruction: %copy.24 = u32[4]{0} copy(%copy.15), control-predecessors={%copy.16}
<103 tuple.14{} @0>
 positions:
  tuple.14 {}
 uses:
 from instruction: %tuple.14 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) tuple(%add.57, %broadcast_add_fusion.1, %broadcast_add_fusion, %copy.20, %copy.21, /*index=5*/%copy.22, %copy.23, %copy.24)
<308 upper.3 @0>
 positions:
  upper.3
 uses:
  multiply_erf_fusion, operand 0
  maximum_minimum_fusion, operand 5
 from instruction: %upper.3 = s32[] parameter(2), metadata={op_name="upper"}
<309 multiply_erf_fusion @0>
 positions:
  multiply_erf_fusion
 uses:
  maximum_minimum_fusion, operand 0
 from instruction: %multiply_erf_fusion = f32[] fusion(%upper.3), kind=kLoop, calls=%fused_computation.3, metadata={op_name="jit(_truncated_normal)/erf" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<310 lower.2 @0>
 positions:
  lower.2
 uses:
  multiply_erf_fusion.1, operand 0
  maximum_minimum_fusion, operand 4
 from instruction: %lower.2 = s32[] parameter(1), metadata={op_name="lower"}
<311 multiply_erf_fusion.1 @0>
 positions:
  multiply_erf_fusion.1
 uses:
  maximum_minimum_fusion, operand 1
 from instruction: %multiply_erf_fusion.1 = f32[] fusion(%lower.2), kind=kLoop, calls=%fused_computation.9, metadata={op_name="jit(_truncated_normal)/erf" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<312 constant.9 @0>
 positions:
  constant.9
 uses:
  copy.25, operand 0
 from instruction: %constant.9 = s32[] constant(0)
<313 copy.25 @0>
 positions:
  copy.25
  tuple.12 {0}
 uses:
  while.9, operand 0 {0}
 from instruction: %copy.25 = s32[] copy(%constant.9)
<314 key.1 @0>
 positions:
  key.1
 uses:
  slice_bitcast_fusion, operand 0
  slice_bitcast_fusion.1, operand 0
  xor_xor_fusion, operand 0
  broadcast_add_fusion.2, operand 0
  broadcast_add_fusion.3, operand 0
 from instruction: %key.1 = u32[2]{0} parameter(0), metadata={op_name="key"}
<315 broadcast_add_fusion.3 @0>
 positions:
  broadcast_add_fusion.3
  tuple.12 {1}
 uses:
  while.9, operand 0 {1}
 from instruction: %broadcast_add_fusion.3 = u32[32,16]{1,0} fusion(%key.1), kind=kLoop, calls=%fused_computation.7, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<316 broadcast_add_fusion.2 @0>
 positions:
  broadcast_add_fusion.2
  tuple.12 {2}
 uses:
  while.9, operand 0 {2}
 from instruction: %broadcast_add_fusion.2 = u32[32,16]{1,0} fusion(%key.1), kind=kLoop, calls=%fused_computation.5, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/add" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<317 slice_bitcast_fusion @0>
 positions:
  slice_bitcast_fusion
  tuple.12 {3}
 uses:
  while.9, operand 0 {3}
 from instruction: %slice_bitcast_fusion = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.6, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/slice" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<318 xor_xor_fusion @0>
 positions:
  xor_xor_fusion
  tuple.12 {4}
 uses:
  while.9, operand 0 {4}
 from instruction: %xor_xor_fusion = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.4, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/xor" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<319 slice_bitcast_fusion.1 @0>
 positions:
  slice_bitcast_fusion.1
  tuple.12 {5}
 uses:
  while.9, operand 0 {5}
 from instruction: %slice_bitcast_fusion.1 = u32[] fusion(%key.1), kind=kLoop, calls=%fused_computation.8, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/slice" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<320 constant.25 @0>
 positions:
  constant.25
 uses:
  copy.26, operand 0
 from instruction: %constant.25 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_name="jit(_truncated_normal)/jit(_uniform)"}
<321 copy.26 @0>
 positions:
  copy.26
  tuple.12 {6}
 uses:
  while.9, operand 0 {6}
 from instruction: %copy.26 = u32[4]{0} copy(%constant.25)
<322 constant.27 @0>
 positions:
  constant.27
 uses:
  copy.27, operand 0
 from instruction: %constant.27 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_name="jit(_truncated_normal)/jit(_uniform)"}
<323 copy.27 @0>
 positions:
  copy.27
  tuple.12 {7}
 uses:
  while.9, operand 0 {7}
 from instruction: %copy.27 = u32[4]{0} copy(%constant.27)
<324 tuple.12{} @0>
 positions:
  tuple.12 {}
 uses:
  while.9, operand 0 {}
 from instruction: %tuple.12 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) tuple(%copy.25, %broadcast_add_fusion.3, %broadcast_add_fusion.2, %slice_bitcast_fusion, %xor_xor_fusion, /*index=5*/%slice_bitcast_fusion.1, %copy.26, %copy.27)
<325 maximum_minimum_fusion @0>
 positions:
  maximum_minimum_fusion
 uses:
 from instruction: %maximum_minimum_fusion = f32[32,16]{1,0} fusion(%multiply_erf_fusion, %multiply_erf_fusion.1, %get-tuple-element.0, %get-tuple-element.1, %lower.2, /*index=5*/%upper.3), kind=kLoop, calls=%fused_computation.2, metadata={op_name="jit(_truncated_normal)/jit(clip)/min" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}
<326 arg_tuple.3{} (phi) @0>
 positions:
  arg_tuple.3 {}
 uses:
  get-tuple-element.60, operand 0 {}
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<327 arg_tuple.4{} (phi) @0>
 positions:
  arg_tuple.4 {}
 uses:
  get-tuple-element.94, operand 0 {}
  get-tuple-element.93, operand 0 {}
  get-tuple-element.92, operand 0 {}
  get-tuple-element.91, operand 0 {}
  get-tuple-element.90, operand 0 {}
  get-tuple-element.89, operand 0 {}
  get-tuple-element.88, operand 0 {}
  get-tuple-element.87, operand 0 {}
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<328 arg_tuple.3{0} (phi) @0>
 positions:
  arg_tuple.3 {0}
  get-tuple-element.60
 uses:
  lt.1, operand 0
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<329 arg_tuple.3{1} (phi) @0>
 positions:
  arg_tuple.3 {1}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<330 arg_tuple.3{2} (phi) @0>
 positions:
  arg_tuple.3 {2}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<331 arg_tuple.3{3} (phi) @0>
 positions:
  arg_tuple.3 {3}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<332 arg_tuple.3{4} (phi) @0>
 positions:
  arg_tuple.3 {4}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<333 arg_tuple.3{5} (phi) @0>
 positions:
  arg_tuple.3 {5}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<334 arg_tuple.3{6} (phi) @0>
 positions:
  arg_tuple.3 {6}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<335 arg_tuple.3{7} (phi) @0>
 positions:
  arg_tuple.3 {7}
 uses:
 from instruction: %arg_tuple.3 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<336 arg_tuple.4{0} (phi) @0>
 positions:
  arg_tuple.4 {0}
  get-tuple-element.87
 uses:
  copy.9, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<337 arg_tuple.4{1} (phi) @0>
 positions:
  arg_tuple.4 {1}
  get-tuple-element.88
 uses:
  copy.10, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<338 arg_tuple.4{2} (phi) @0>
 positions:
  arg_tuple.4 {2}
  get-tuple-element.89
 uses:
  copy.11, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<339 arg_tuple.4{3} (phi) @0>
 positions:
  arg_tuple.4 {3}
  get-tuple-element.90
 uses:
  copy.12, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<340 arg_tuple.4{4} (phi) @0>
 positions:
  arg_tuple.4 {4}
  get-tuple-element.91
 uses:
  copy.13, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<341 arg_tuple.4{5} (phi) @0>
 positions:
  arg_tuple.4 {5}
  get-tuple-element.92
 uses:
  copy.14, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<342 arg_tuple.4{6} (phi) @0>
 positions:
  arg_tuple.4 {6}
  get-tuple-element.93
 uses:
  copy.15, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<343 arg_tuple.4{7} (phi) @0>
 positions:
  arg_tuple.4 {7}
  get-tuple-element.94
 uses:
  copy.16, operand 0
 from instruction: %arg_tuple.4 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) parameter(0)
<344 while.9{} (phi) @0>
 positions:
  while.9 {}
 uses:
  get-tuple-element.1, operand 0 {}
  get-tuple-element.0, operand 0 {}
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<345 while.9{0} (phi) @0>
 positions:
  while.9 {0}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<346 while.9{1} (phi) @0>
 positions:
  while.9 {1}
  get-tuple-element.0
 uses:
  maximum_minimum_fusion, operand 2
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<347 while.9{2} (phi) @0>
 positions:
  while.9 {2}
  get-tuple-element.1
 uses:
  maximum_minimum_fusion, operand 3
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<348 while.9{3} (phi) @0>
 positions:
  while.9 {3}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<349 while.9{4} (phi) @0>
 positions:
  while.9 {4}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<350 while.9{5} (phi) @0>
 positions:
  while.9 {5}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<351 while.9{6} (phi) @0>
 positions:
  while.9 {6}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}
<352 while.9{7} (phi) @0>
 positions:
  while.9 {7}
 uses:
 from instruction: %while.9 = (s32[], u32[32,16]{1,0}, u32[32,16]{1,0}, u32[], u32[], /*index=5*/u32[], u32[4]{0}, u32[4]{0}) while(%tuple.12), condition=%region_1.206.clone.clone, body=%region_0.193.clone.clone.clone, metadata={op_name="jit(_truncated_normal)/jit(_uniform)/while" source_file="/home/carlesoctav/personal/modernizing-indo-nlp/src/nn/_linear.py" source_line=55 source_end_line=55 source_column=12 source_end_column=88}, backend_config={"known_trip_count":{"n":"5"},"known_init_step":{"init":"0","step":"1"},"known_induction_variable":{"tuple_index":"0"}}


HloLiveRange (max 52):
  InstructionSequence:
    0:key.1
    1:lower.2
    2:upper.3
    3:constant.9
    4:constant.25
    5:constant.27
    6:slice_bitcast_fusion
    7:slice_bitcast_fusion.1
    8:xor_xor_fusion
    9:broadcast_add_fusion.2
    10:broadcast_add_fusion.3
    11:multiply_erf_fusion.1
    12:multiply_erf_fusion
    13:copy.25
    14:copy.26
    15:copy.27
    16:tuple.12
    17:arg_tuple.3
    18:constant.78
    19:get-tuple-element.60
    20:lt.1
    21:arg_tuple.4
    22:constant.80
    23:get-tuple-element.94
    24:get-tuple-element.93
    25:get-tuple-element.92
    26:get-tuple-element.91
    27:get-tuple-element.90
    28:get-tuple-element.89
    29:get-tuple-element.88
    30:get-tuple-element.87
    31:copy.16
    32:copy.15
    33:copy.14
    34:copy.13
    35:copy.12
    36:copy.11
    37:copy.10
    38:copy.9
    39:copy.24
    40:copy.23
    41:copy.21
    42:copy.22
    43:copy.20
    44:broadcast_add_fusion.1
    45:broadcast_add_fusion
    46:add.57
    47:tuple.14
    48:while.9
    49:get-tuple-element.1
    50:get-tuple-element.0
    51:maximum_minimum_fusion
  BufferLiveRange:
    constant.78{}:18-20
    lt.1{}:20-21
    copy.9{}:38-46
    constant.80{}:22-46
    add.57{}:46-48
    copy.12{}:35-44
    copy.15{}:32-45
    copy.11{}:36-45
    copy.10{}:37-45
    broadcast_add_fusion.1{}:44-48
    copy.13{}:34-45
    broadcast_add_fusion{}:45-48
    copy.20{}:43-48
    copy.14{}:33-41
    copy.21{}:41-48
    copy.22{}:42-48
    copy.16{}:31-40
    copy.23{}:40-48
    copy.24{}:39-48
    tuple.14{}:47-48
    upper.3{}:0-52
    multiply_erf_fusion{}:12-51
    lower.2{}:0-52
    multiply_erf_fusion.1{}:11-51
    constant.9{}:3-13
    copy.25{}:13-17
    key.1{}:0-52
    broadcast_add_fusion.3{}:10-17
    broadcast_add_fusion.2{}:9-17
    slice_bitcast_fusion{}:6-17
    xor_xor_fusion{}:8-17
    slice_bitcast_fusion.1{}:7-17
    constant.25{}:4-14
    copy.26{}:14-17
    constant.27{}:5-15
    copy.27{}:15-17
    tuple.12{}:16-17
    maximum_minimum_fusion{}:51-52
    arg_tuple.3{}:17-21
    arg_tuple.4{}:21-30
    arg_tuple.3{0}:17-21
    arg_tuple.3{1}:17-21
    arg_tuple.3{2}:17-21
    arg_tuple.3{3}:17-21
    arg_tuple.3{4}:17-21
    arg_tuple.3{5}:17-21
    arg_tuple.3{6}:17-21
    arg_tuple.3{7}:17-21
    arg_tuple.4{0}:21-38
    arg_tuple.4{1}:21-37
    arg_tuple.4{2}:21-36
    arg_tuple.4{3}:21-35
    arg_tuple.4{4}:21-34
    arg_tuple.4{5}:21-33
    arg_tuple.4{6}:21-32
    arg_tuple.4{7}:21-31
    while.9{}:48-50
    while.9{0}:48-48
    while.9{1}:48-51
    while.9{2}:48-51
    while.9{3}:48-48
    while.9{4}:48-48
    while.9{5}:48-48
    while.9{6}:48-48
    while.9{7}:48-48
  Live ranges at 45 (peak):
    broadcast_add_fusion{}: 2048 bytes (cumulative: 2048 bytes)
    broadcast_add_fusion.1{}: 2048 bytes (cumulative: 4096 bytes)
    copy.10{}: 2048 bytes (cumulative: 6144 bytes)
    copy.11{}: 2048 bytes (cumulative: 8192 bytes)
    copy.15{}: 16 bytes (cumulative: 8208 bytes)
    copy.23{}: 16 bytes (cumulative: 8224 bytes)
    copy.24{}: 16 bytes (cumulative: 8240 bytes)
    key.1{}: 8 bytes (cumulative: 8248 bytes)
    constant.80{}: 4 bytes (cumulative: 8252 bytes)
    copy.13{}: 4 bytes (cumulative: 8256 bytes)
    copy.20{}: 4 bytes (cumulative: 8260 bytes)
    copy.21{}: 4 bytes (cumulative: 8264 bytes)
    copy.22{}: 4 bytes (cumulative: 8268 bytes)
    copy.9{}: 4 bytes (cumulative: 8272 bytes)
    lower.2{}: 4 bytes (cumulative: 8276 bytes)
    multiply_erf_fusion{}: 4 bytes (cumulative: 8280 bytes)
    multiply_erf_fusion.1{}: 4 bytes (cumulative: 8284 bytes)
    upper.3{}: 4 bytes (cumulative: 8288 bytes)
  Stack trace breakdown for peak usage: 8 288 bytes
    main.336 (100.0%, total: 8 288 bytes, current: 0 bytes, remaining: 8 288 bytes)
      ├── jit(_truncated_normal)/jit(_uniform)/while (99.7%, total: 8 264 bytes, current: 0 bytes, remaining: 8 288 bytes)
      │   └── region_0.193.clone.clone.clone (99.7%, total: 8 264 bytes, current: 0 bytes, remaining: 8 288 bytes)
      │       ├── jit(_truncated_normal)/jit(_uniform)/while/body/closed_call/add (49.4%, total: 4 096 bytes, current: 4 096 bytes, remaining: 4 192 bytes)
      │       ├── copy.10 (24.7%, total: 2 048 bytes, current: 2 048 bytes, remaining: 2 144 bytes)
      │       ├── copy.11 (24.7%, total: 2 048 bytes, current: 2 048 bytes, remaining: 96 bytes)
      │       ├── copy.15 (0.2%, total: 16 bytes, current: 16 bytes, remaining: 80 bytes)
      │       ├── copy.23 (0.2%, total: 16 bytes, current: 16 bytes, remaining: 64 bytes)
      │       ├── copy.24 (0.2%, total: 16 bytes, current: 16 bytes, remaining: 48 bytes)
      │       ├── copy.13 (0.0%, total: 4 bytes, current: 4 bytes, remaining: 44 bytes)
      │       ├── copy.20 (0.0%, total: 4 bytes, current: 4 bytes, remaining: 40 bytes)
      │       ├── copy.21 (0.0%, total: 4 bytes, current: 4 bytes, remaining: 36 bytes)
      │       ├── copy.22 (0.0%, total: 4 bytes, current: 4 bytes, remaining: 32 bytes)
      │       ├── copy.9 (0.0%, total: 4 bytes, current: 4 bytes, remaining: 28 bytes)
      │       └── jit(_truncated_normal)/jit(_uniform) (0.0%, total: 4 bytes, current: 4 bytes, remaining: 24 bytes)
      ├── jit(_truncated_normal)/erf (0.1%, total: 8 bytes, current: 8 bytes, remaining: 16 bytes)
      ├── key (0.1%, total: 8 bytes, current: 8 bytes, remaining: 8 bytes)
      ├── lower (0.0%, total: 4 bytes, current: 4 bytes, remaining: 4 bytes)
      └── upper (0.0%, total: 4 bytes, current: 4 bytes, remaining: 0 bytes)
